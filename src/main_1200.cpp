// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayerCosmeticsSystem/<>c__DisplayClass16_0
#include "GlobalNamespace/PlayerCosmeticsSystem_--c__DisplayClass16_0.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: PlayFab.ClientModels.GetSharedGroupDataResult
#include "PlayFab/ClientModels/GetSharedGroupDataResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 firstEntryId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerCosmeticsSystem::$$c__DisplayClass16_0::dyn_firstEntryId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerCosmeticsSystem::$$c__DisplayClass16_0::dyn_firstEntryId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstEntryId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerCosmeticsSystem <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerCosmeticsSystem*& GlobalNamespace::PlayerCosmeticsSystem::$$c__DisplayClass16_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerCosmeticsSystem::$$c__DisplayClass16_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerCosmeticsSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player player
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::PlayerCosmeticsSystem::$$c__DisplayClass16_0::dyn_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerCosmeticsSystem::$$c__DisplayClass16_0::dyn_player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerCosmeticsSystem/<>c__DisplayClass16_0.<NewCosmeticsPath>b__0
void GlobalNamespace::PlayerCosmeticsSystem::$$c__DisplayClass16_0::$NewCosmeticsPath$b__0(::PlayFab::ClientModels::GetSharedGroupDataResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerCosmeticsSystem::$$c__DisplayClass16_0::<NewCosmeticsPath>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<NewCosmeticsPath>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: RoomSystem
#include "GlobalNamespace/RoomSystem.hpp"
// Including type: RoomSystem/ImpactFxContainer
#include "GlobalNamespace/RoomSystem_ImpactFxContainer.hpp"
// Including type: RoomSystem/LaunchProjectileContainer
#include "GlobalNamespace/RoomSystem_LaunchProjectileContainer.hpp"
// Including type: RoomSystem/ProjectileSource
#include "GlobalNamespace/RoomSystem_ProjectileSource.hpp"
// Including type: RoomSystem/Events
#include "GlobalNamespace/RoomSystem_Events.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: RoomSystem/PlayerEffect
#include "GlobalNamespace/RoomSystem_PlayerEffect.hpp"
// Including type: RoomSystemSettings
#include "GlobalNamespace/RoomSystemSettings.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Timers.Timer
#include "System/Timers/Timer.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Photon.Realtime.RaiseEventOptions
#include "Photon/Realtime/RaiseEventOptions.hpp"
// Including type: System.Timers.ElapsedEventArgs
#include "System/Timers/ElapsedEventArgs.hpp"
// Including type: NetPlayer
#include "GlobalNamespace/NetPlayer.hpp"
// Including type: ExitGames.Client.Photon.EventData
#include "ExitGames/Client/Photon/EventData.hpp"
// Including type: GorillaFriendCollider
#include "GlobalNamespace/GorillaFriendCollider.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private RoomSystem/ImpactFxContainer impactEffect
::GlobalNamespace::RoomSystem::ImpactFxContainer* GlobalNamespace::RoomSystem::_get_impactEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_impactEffect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RoomSystem::ImpactFxContainer*>("", "RoomSystem", "impactEffect"));
}
// Autogenerated static field setter
// Set static field: static private RoomSystem/ImpactFxContainer impactEffect
void GlobalNamespace::RoomSystem::_set_impactEffect(::GlobalNamespace::RoomSystem::ImpactFxContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_impactEffect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "impactEffect", value));
}
// Autogenerated static field getter
// Get static field: static private RoomSystem/LaunchProjectileContainer launchProjectile
::GlobalNamespace::RoomSystem::LaunchProjectileContainer* GlobalNamespace::RoomSystem::_get_launchProjectile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_launchProjectile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RoomSystem::LaunchProjectileContainer*>("", "RoomSystem", "launchProjectile"));
}
// Autogenerated static field setter
// Set static field: static private RoomSystem/LaunchProjectileContainer launchProjectile
void GlobalNamespace::RoomSystem::_set_launchProjectile(::GlobalNamespace::RoomSystem::LaunchProjectileContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_launchProjectile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "launchProjectile", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.GameObject playerImpactEffectPrefab
::UnityEngine::GameObject* GlobalNamespace::RoomSystem::_get_playerImpactEffectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_playerImpactEffectPrefab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GameObject*>("", "RoomSystem", "playerImpactEffectPrefab"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.GameObject playerImpactEffectPrefab
void GlobalNamespace::RoomSystem::_set_playerImpactEffectPrefab(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_playerImpactEffectPrefab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "playerImpactEffectPrefab", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] projectileSendData
::ArrayW<::Il2CppObject*> GlobalNamespace::RoomSystem::_get_projectileSendData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_projectileSendData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("", "RoomSystem", "projectileSendData"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] projectileSendData
void GlobalNamespace::RoomSystem::_set_projectileSendData(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_projectileSendData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "projectileSendData", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] impactSendData
::ArrayW<::Il2CppObject*> GlobalNamespace::RoomSystem::_get_impactSendData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_impactSendData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("", "RoomSystem", "impactSendData"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] impactSendData
void GlobalNamespace::RoomSystem::_set_impactSendData(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_impactSendData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "impactSendData", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<System.Int32> hashValues
::System::Collections::Generic::List_1<int>* GlobalNamespace::RoomSystem::_get_hashValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_hashValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<int>*>("", "RoomSystem", "hashValues"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<System.Int32> hashValues
void GlobalNamespace::RoomSystem::_set_hashValues(::System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_hashValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "hashValues", value));
}
// Autogenerated static field getter
// Get static field: static private RoomSystem callbackInstance
::GlobalNamespace::RoomSystem* GlobalNamespace::RoomSystem::_get_callbackInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_callbackInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RoomSystem*>("", "RoomSystem", "callbackInstance"));
}
// Autogenerated static field setter
// Set static field: static private RoomSystem callbackInstance
void GlobalNamespace::RoomSystem::_set_callbackInstance(::GlobalNamespace::RoomSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_callbackInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "callbackInstance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Photon.Realtime.Player> playersInRoom
::System::Collections::Generic::List_1<::Photon::Realtime::Player*>* GlobalNamespace::RoomSystem::_get_playersInRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_playersInRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*>("", "RoomSystem", "playersInRoom"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Photon.Realtime.Player> playersInRoom
void GlobalNamespace::RoomSystem::_set_playersInRoom(::System::Collections::Generic::List_1<::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_playersInRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "playersInRoom", value));
}
// Autogenerated static field getter
// Get static field: static private System.String roomGameMode
::StringW GlobalNamespace::RoomSystem::_get_roomGameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_roomGameMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RoomSystem", "roomGameMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String roomGameMode
void GlobalNamespace::RoomSystem::_set_roomGameMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_roomGameMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "roomGameMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean joinedRoom
bool GlobalNamespace::RoomSystem::_get_joinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_joinedRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "RoomSystem", "joinedRoom"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean joinedRoom
void GlobalNamespace::RoomSystem::_set_joinedRoom(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_joinedRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "joinedRoom", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Pun.PhotonView[] sceneViews
::ArrayW<::Photon::Pun::PhotonView*> GlobalNamespace::RoomSystem::_get_sceneViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_sceneViews");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Photon::Pun::PhotonView*>>("", "RoomSystem", "sceneViews"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Pun.PhotonView[] sceneViews
void GlobalNamespace::RoomSystem::_set_sceneViews(::ArrayW<::Photon::Pun::PhotonView*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_sceneViews");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "sceneViews", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action LeftRoomEvent
::System::Action* GlobalNamespace::RoomSystem::_get_LeftRoomEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_LeftRoomEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "RoomSystem", "LeftRoomEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.Action LeftRoomEvent
void GlobalNamespace::RoomSystem::_set_LeftRoomEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_LeftRoomEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "LeftRoomEvent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action JoinedRoomEvent
::System::Action* GlobalNamespace::RoomSystem::_get_JoinedRoomEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_JoinedRoomEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "RoomSystem", "JoinedRoomEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.Action JoinedRoomEvent
void GlobalNamespace::RoomSystem::_set_JoinedRoomEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_JoinedRoomEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "JoinedRoomEvent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Photon.Realtime.Player> PlayerJoinedEvent
::System::Action_1<::Photon::Realtime::Player*>* GlobalNamespace::RoomSystem::_get_PlayerJoinedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_PlayerJoinedEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Photon::Realtime::Player*>*>("", "RoomSystem", "PlayerJoinedEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Photon.Realtime.Player> PlayerJoinedEvent
void GlobalNamespace::RoomSystem::_set_PlayerJoinedEvent(::System::Action_1<::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_PlayerJoinedEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "PlayerJoinedEvent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Photon.Realtime.Player> PlayerLeftEvent
::System::Action_1<::Photon::Realtime::Player*>* GlobalNamespace::RoomSystem::_get_PlayerLeftEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_PlayerLeftEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Photon::Realtime::Player*>*>("", "RoomSystem", "PlayerLeftEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Photon.Realtime.Player> PlayerLeftEvent
void GlobalNamespace::RoomSystem::_set_PlayerLeftEvent(::System::Action_1<::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_PlayerLeftEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "PlayerLeftEvent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action PlayersChangedEvent
::System::Action* GlobalNamespace::RoomSystem::_get_PlayersChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_PlayersChangedEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "RoomSystem", "PlayersChangedEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.Action PlayersChangedEvent
void GlobalNamespace::RoomSystem::_set_PlayersChangedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_PlayersChangedEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "PlayersChangedEvent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Timers.Timer disconnectTimer
::System::Timers::Timer* GlobalNamespace::RoomSystem::_get_disconnectTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_disconnectTimer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Timers::Timer*>("", "RoomSystem", "disconnectTimer"));
}
// Autogenerated static field setter
// Set static field: static private System.Timers.Timer disconnectTimer
void GlobalNamespace::RoomSystem::_set_disconnectTimer(::System::Timers::Timer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_disconnectTimer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "disconnectTimer", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<System.Int32> playerBanned
::System::Collections::Generic::HashSet_1<int>* GlobalNamespace::RoomSystem::_get_playerBanned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_playerBanned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<int>*>("", "RoomSystem", "playerBanned"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<System.Int32> playerBanned
void GlobalNamespace::RoomSystem::_set_playerBanned(::System::Collections::Generic::HashSet_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_playerBanned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "playerBanned", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.Dictionary`2<System.Byte,System.Action`2<System.Object[],Photon.Pun.PhotonMessageInfo>> netEventCallbacks
::System::Collections::Generic::Dictionary_2<uint8_t, ::System::Action_2<::ArrayW<::Il2CppObject*>, ::Photon::Pun::PhotonMessageInfo>*>* GlobalNamespace::RoomSystem::_get_netEventCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_netEventCallbacks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<uint8_t, ::System::Action_2<::ArrayW<::Il2CppObject*>, ::Photon::Pun::PhotonMessageInfo>*>*>("", "RoomSystem", "netEventCallbacks")));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.Dictionary`2<System.Byte,System.Action`2<System.Object[],Photon.Pun.PhotonMessageInfo>> netEventCallbacks
void GlobalNamespace::RoomSystem::_set_netEventCallbacks(::System::Collections::Generic::Dictionary_2<uint8_t, ::System::Action_2<::ArrayW<::Il2CppObject*>, ::Photon::Pun::PhotonMessageInfo>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_netEventCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "netEventCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] sendEventData
::ArrayW<::Il2CppObject*> GlobalNamespace::RoomSystem::_get_sendEventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_sendEventData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("", "RoomSystem", "sendEventData"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] sendEventData
void GlobalNamespace::RoomSystem::_set_sendEventData(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_sendEventData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "sendEventData", value));
}
// Autogenerated static field getter
// Get static field: static private readonly ExitGames.Client.Photon.SendOptions soUnreliable
::ExitGames::Client::Photon::SendOptions GlobalNamespace::RoomSystem::_get_soUnreliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_soUnreliable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExitGames::Client::Photon::SendOptions>("", "RoomSystem", "soUnreliable"));
}
// Autogenerated static field setter
// Set static field: static private readonly ExitGames.Client.Photon.SendOptions soUnreliable
void GlobalNamespace::RoomSystem::_set_soUnreliable(::ExitGames::Client::Photon::SendOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_soUnreliable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "soUnreliable", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Photon.Realtime.RaiseEventOptions reoOthers
::Photon::Realtime::RaiseEventOptions* GlobalNamespace::RoomSystem::_get_reoOthers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_reoOthers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("", "RoomSystem", "reoOthers"));
}
// Autogenerated static field setter
// Set static field: static private readonly Photon.Realtime.RaiseEventOptions reoOthers
void GlobalNamespace::RoomSystem::_set_reoOthers(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_reoOthers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "reoOthers", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Photon.Realtime.RaiseEventOptions reoMaster
::Photon::Realtime::RaiseEventOptions* GlobalNamespace::RoomSystem::_get_reoMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_reoMaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("", "RoomSystem", "reoMaster"));
}
// Autogenerated static field setter
// Set static field: static private readonly Photon.Realtime.RaiseEventOptions reoMaster
void GlobalNamespace::RoomSystem::_set_reoMaster(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_reoMaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "reoMaster", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Photon.Realtime.RaiseEventOptions reoTarget
::Photon::Realtime::RaiseEventOptions* GlobalNamespace::RoomSystem::_get_reoTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_reoTarget");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("", "RoomSystem", "reoTarget"));
}
// Autogenerated static field setter
// Set static field: static private readonly Photon.Realtime.RaiseEventOptions reoTarget
void GlobalNamespace::RoomSystem::_set_reoTarget(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_reoTarget");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "reoTarget", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] groupJoinSendData
::ArrayW<::Il2CppObject*> GlobalNamespace::RoomSystem::_get_groupJoinSendData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_groupJoinSendData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("", "RoomSystem", "groupJoinSendData"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] groupJoinSendData
void GlobalNamespace::RoomSystem::_set_groupJoinSendData(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_groupJoinSendData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "groupJoinSendData", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] reportTouchSendData
::ArrayW<::Il2CppObject*> GlobalNamespace::RoomSystem::_get_reportTouchSendData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_reportTouchSendData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("", "RoomSystem", "reportTouchSendData"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] reportTouchSendData
void GlobalNamespace::RoomSystem::_set_reportTouchSendData(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_reportTouchSendData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "reportTouchSendData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<Photon.Realtime.Player,Photon.Realtime.Player> playerTouchedCallback
::System::Action_2<::Photon::Realtime::Player*, ::Photon::Realtime::Player*>* GlobalNamespace::RoomSystem::_get_playerTouchedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_playerTouchedCallback");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::Photon::Realtime::Player*, ::Photon::Realtime::Player*>*>("", "RoomSystem", "playerTouchedCallback")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<Photon.Realtime.Player,Photon.Realtime.Player> playerTouchedCallback
void GlobalNamespace::RoomSystem::_set_playerTouchedCallback(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_playerTouchedCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "playerTouchedCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object[] statusSendData
::ArrayW<::Il2CppObject*> GlobalNamespace::RoomSystem::_get_statusSendData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_statusSendData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("", "RoomSystem", "statusSendData"));
}
// Autogenerated static field setter
// Set static field: static private System.Object[] statusSendData
void GlobalNamespace::RoomSystem::_set_statusSendData(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_statusSendData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "statusSendData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<RoomSystem/StatusEffects> statusEffectCallback
::System::Action_1<::GlobalNamespace::RoomSystem::StatusEffects>* GlobalNamespace::RoomSystem::_get_statusEffectCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_statusEffectCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::GlobalNamespace::RoomSystem::StatusEffects>*>("", "RoomSystem", "statusEffectCallback"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<RoomSystem/StatusEffects> statusEffectCallback
void GlobalNamespace::RoomSystem::_set_statusEffectCallback(::System::Action_1<::GlobalNamespace::RoomSystem::StatusEffects>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_statusEffectCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "statusEffectCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object[] soundSendData
::ArrayW<::Il2CppObject*> GlobalNamespace::RoomSystem::_get_soundSendData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_soundSendData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("", "RoomSystem", "soundSendData"));
}
// Autogenerated static field setter
// Set static field: static private System.Object[] soundSendData
void GlobalNamespace::RoomSystem::_set_soundSendData(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_soundSendData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "soundSendData", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object[] sendSoundDataOther
::ArrayW<::Il2CppObject*> GlobalNamespace::RoomSystem::_get_sendSoundDataOther() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_sendSoundDataOther");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("", "RoomSystem", "sendSoundDataOther"));
}
// Autogenerated static field setter
// Set static field: static private System.Object[] sendSoundDataOther
void GlobalNamespace::RoomSystem::_set_sendSoundDataOther(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_sendSoundDataOther");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "sendSoundDataOther", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<RoomSystem/SoundEffect,Photon.Realtime.Player> soundEffectCallback
::System::Action_2<::GlobalNamespace::RoomSystem::SoundEffect, ::Photon::Realtime::Player*>* GlobalNamespace::RoomSystem::_get_soundEffectCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_soundEffectCallback");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::GlobalNamespace::RoomSystem::SoundEffect, ::Photon::Realtime::Player*>*>("", "RoomSystem", "soundEffectCallback")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<RoomSystem/SoundEffect,Photon.Realtime.Player> soundEffectCallback
void GlobalNamespace::RoomSystem::_set_soundEffectCallback(::System::Action_2<::GlobalNamespace::RoomSystem::SoundEffect, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_soundEffectCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "soundEffectCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object[] playerEffectData
::ArrayW<::Il2CppObject*> GlobalNamespace::RoomSystem::_get_playerEffectData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_get_playerEffectData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("", "RoomSystem", "playerEffectData"));
}
// Autogenerated static field setter
// Set static field: static private System.Object[] playerEffectData
void GlobalNamespace::RoomSystem::_set_playerEffectData(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::_set_playerEffectData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem", "playerEffectData", value));
}
// Autogenerated instance field getter
// Get instance field: private RoomSystemSettings roomSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RoomSystemSettings*& GlobalNamespace::RoomSystem::dyn_roomSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::dyn_roomSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RoomSystemSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] prefabsToInstantiateByPath
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::RoomSystem::dyn_prefabsToInstantiateByPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::dyn_prefabsToInstantiateByPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabsToInstantiateByPath"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> prefabsInstantiated
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::RoomSystem::dyn_prefabsInstantiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::dyn_prefabsInstantiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabsInstantiated"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RoomSystem.DeserializeLaunchProjectile
void GlobalNamespace::RoomSystem::DeserializeLaunchProjectile(::ArrayW<::Il2CppObject*> projectileData, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::DeserializeLaunchProjectile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "DeserializeLaunchProjectile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(projectileData), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, projectileData, info);
}
// Autogenerated method: RoomSystem.SendLaunchProjectile
void GlobalNamespace::RoomSystem::SendLaunchProjectile(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 velocity, ::GlobalNamespace::RoomSystem::ProjectileSource projectileSource, int projectileCount, bool randomColour, uint8_t r, uint8_t g, uint8_t b, uint8_t a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SendLaunchProjectile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SendLaunchProjectile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(projectileSource), ::il2cpp_utils::ExtractType(projectileCount), ::il2cpp_utils::ExtractType(randomColour), ::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(a)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, velocity, projectileSource, projectileCount, randomColour, r, g, b, a);
}
// Autogenerated method: RoomSystem.ImpactEffect
void GlobalNamespace::RoomSystem::ImpactEffect(::GlobalNamespace::VRRig* targetRig, ::UnityEngine::Vector3 position, float r, float g, float b, float a, int projectileCount, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::ImpactEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "ImpactEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetRig), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(projectileCount), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetRig, position, r, g, b, a, projectileCount, info);
}
// Autogenerated method: RoomSystem.DeserializeImpactEffect
void GlobalNamespace::RoomSystem::DeserializeImpactEffect(::ArrayW<::Il2CppObject*> impactData, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::DeserializeImpactEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "DeserializeImpactEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impactData), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, impactData, info);
}
// Autogenerated method: RoomSystem.SendImpactEffect
void GlobalNamespace::RoomSystem::SendImpactEffect(::UnityEngine::Vector3 position, float r, float g, float b, float a, int projectileCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SendImpactEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SendImpactEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(projectileCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, r, g, b, a, projectileCount);
}
// Autogenerated method: RoomSystem.Awake
void GlobalNamespace::RoomSystem::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomSystem.Start
void GlobalNamespace::RoomSystem::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomSystem.OnApplicationPause
void GlobalNamespace::RoomSystem::OnApplicationPause(bool paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paused)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, paused);
}
// Autogenerated method: RoomSystem.Photon.Realtime.IMatchmakingCallbacks.OnJoinedRoom
void GlobalNamespace::RoomSystem::Photon_Realtime_IMatchmakingCallbacks_OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Photon.Realtime.IMatchmakingCallbacks.OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomSystem*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomSystem.Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom
void GlobalNamespace::RoomSystem::Photon_Realtime_IInRoomCallbacks_OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomSystem*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: RoomSystem.Photon.Realtime.IMatchmakingCallbacks.OnLeftRoom
void GlobalNamespace::RoomSystem::Photon_Realtime_IMatchmakingCallbacks_OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Photon.Realtime.IMatchmakingCallbacks.OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomSystem*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomSystem.Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom
void GlobalNamespace::RoomSystem::Photon_Realtime_IInRoomCallbacks_OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomSystem*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: RoomSystem.get_PlayersInRoom
::System::Collections::Generic::List_1<::Photon::Realtime::Player*>* GlobalNamespace::RoomSystem::get_PlayersInRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::get_PlayersInRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "get_PlayersInRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RoomSystem.get_RoomGameMode
::StringW GlobalNamespace::RoomSystem::get_RoomGameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::get_RoomGameMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "get_RoomGameMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RoomSystem.get_JoinedRoom
bool GlobalNamespace::RoomSystem::get_JoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::get_JoinedRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "get_JoinedRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RoomSystem.get_AmITheHost
bool GlobalNamespace::RoomSystem::get_AmITheHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::get_AmITheHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "get_AmITheHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RoomSystem..cctor
void GlobalNamespace::RoomSystem::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RoomSystem.StaticLoad
void GlobalNamespace::RoomSystem::StaticLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::StaticLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "StaticLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RoomSystem.TimerDC
void GlobalNamespace::RoomSystem::TimerDC(::Il2CppObject* sender, ::System::Timers::ElapsedEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::TimerDC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "TimerDC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sender, args);
}
// Autogenerated method: RoomSystem.IsPlayerBanned
bool GlobalNamespace::RoomSystem::IsPlayerBanned(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::IsPlayerBanned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "IsPlayerBanned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: RoomSystem.IsPlayerBanned
bool GlobalNamespace::RoomSystem::IsPlayerBanned(::GlobalNamespace::NetPlayer* netPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::IsPlayerBanned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "IsPlayerBanned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(netPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, netPlayer);
}
// Autogenerated method: RoomSystem.IsPlayerBanned
bool GlobalNamespace::RoomSystem::IsPlayerBanned(int player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::IsPlayerBanned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "IsPlayerBanned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: RoomSystem.CheckPlayerBanned
bool GlobalNamespace::RoomSystem::CheckPlayerBanned(::Photon::Realtime::Player* player, ByRef<::StringW> cosmeticString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::CheckPlayerBanned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "CheckPlayerBanned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(cosmeticString)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, byref(cosmeticString));
}
// Autogenerated method: RoomSystem.CheckPlayerBanned
bool GlobalNamespace::RoomSystem::CheckPlayerBanned(int player, ByRef<::StringW> cosmeticString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::CheckPlayerBanned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "CheckPlayerBanned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(cosmeticString)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, byref(cosmeticString));
}
// Autogenerated method: RoomSystem.SendEvent
void GlobalNamespace::RoomSystem::SendEvent(ByRef<uint8_t> code, ByRef<::Il2CppObject*> evData, ByRef<::Photon::Realtime::Player*> target, ByRef<::ExitGames::Client::Photon::SendOptions> so) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SendEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SendEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(evData), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(so)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(code), byref(evData), byref(target), byref(so));
}
// Autogenerated method: RoomSystem.SendEvent
void GlobalNamespace::RoomSystem::SendEvent(ByRef<uint8_t> code, ByRef<::Il2CppObject*> evData, ByRef<::Photon::Realtime::RaiseEventOptions*> reo, ByRef<::ExitGames::Client::Photon::SendOptions> so) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SendEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SendEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(evData), ::il2cpp_utils::ExtractType(reo), ::il2cpp_utils::ExtractType(so)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(code), byref(evData), byref(reo), byref(so));
}
// Autogenerated method: RoomSystem.OnEvent
void GlobalNamespace::RoomSystem::OnEvent(::ExitGames::Client::Photon::EventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::OnEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "OnEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: RoomSystem.SearchForNearby
void GlobalNamespace::RoomSystem::SearchForNearby(::ArrayW<::Il2CppObject*> shuffleData, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SearchForNearby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SearchForNearby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shuffleData), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, shuffleData, info);
}
// Autogenerated method: RoomSystem.SearchForParty
void GlobalNamespace::RoomSystem::SearchForParty(::ArrayW<::Il2CppObject*> shuffleData, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SearchForParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SearchForParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shuffleData), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, shuffleData, info);
}
// Autogenerated method: RoomSystem.SendNearbyFollowCommand
void GlobalNamespace::RoomSystem::SendNearbyFollowCommand(::GlobalNamespace::GorillaFriendCollider* friendCollider, ::StringW shuffler, ::StringW keyStr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SendNearbyFollowCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SendNearbyFollowCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(friendCollider), ::il2cpp_utils::ExtractType(shuffler), ::il2cpp_utils::ExtractType(keyStr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, friendCollider, shuffler, keyStr);
}
// Autogenerated method: RoomSystem.SendPartyFollowCommand
void GlobalNamespace::RoomSystem::SendPartyFollowCommand(::StringW shuffler, ::StringW keyStr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SendPartyFollowCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SendPartyFollowCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shuffler), ::il2cpp_utils::ExtractType(keyStr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, shuffler, keyStr);
}
// Autogenerated method: RoomSystem.DeserializeReportTouch
void GlobalNamespace::RoomSystem::DeserializeReportTouch(::ArrayW<::Il2CppObject*> data, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::DeserializeReportTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "DeserializeReportTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, info);
}
// Autogenerated method: RoomSystem.SendReportTouch
void GlobalNamespace::RoomSystem::SendReportTouch(::Photon::Realtime::Player* touchedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SendReportTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SendReportTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, touchedPlayer);
}
// Autogenerated method: RoomSystem.Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched
void GlobalNamespace::RoomSystem::Photon_Realtime_IInRoomCallbacks_OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomSystem*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated method: RoomSystem.Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate
void GlobalNamespace::RoomSystem::Photon_Realtime_IInRoomCallbacks_OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomSystem*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated method: RoomSystem.Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate
void GlobalNamespace::RoomSystem::Photon_Realtime_IInRoomCallbacks_OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomSystem*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: RoomSystem.Photon.Realtime.IMatchmakingCallbacks.OnFriendListUpdate
void GlobalNamespace::RoomSystem::Photon_Realtime_IMatchmakingCallbacks_OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Photon.Realtime.IMatchmakingCallbacks.OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomSystem*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated method: RoomSystem.Photon.Realtime.IMatchmakingCallbacks.OnCreatedRoom
void GlobalNamespace::RoomSystem::Photon_Realtime_IMatchmakingCallbacks_OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Photon.Realtime.IMatchmakingCallbacks.OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomSystem*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomSystem.Photon.Realtime.IMatchmakingCallbacks.OnCreateRoomFailed
void GlobalNamespace::RoomSystem::Photon_Realtime_IMatchmakingCallbacks_OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Photon.Realtime.IMatchmakingCallbacks.OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomSystem*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: RoomSystem.Photon.Realtime.IMatchmakingCallbacks.OnJoinRoomFailed
void GlobalNamespace::RoomSystem::Photon_Realtime_IMatchmakingCallbacks_OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Photon.Realtime.IMatchmakingCallbacks.OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomSystem*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: RoomSystem.Photon.Realtime.IMatchmakingCallbacks.OnJoinRandomFailed
void GlobalNamespace::RoomSystem::Photon_Realtime_IMatchmakingCallbacks_OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Photon.Realtime.IMatchmakingCallbacks.OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomSystem*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: RoomSystem.Photon.Realtime.IMatchmakingCallbacks.OnPreLeavingRoom
void GlobalNamespace::RoomSystem::Photon_Realtime_IMatchmakingCallbacks_OnPreLeavingRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Photon.Realtime.IMatchmakingCallbacks.OnPreLeavingRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomSystem*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomSystem.SetSlowedTime
void GlobalNamespace::RoomSystem::SetSlowedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SetSlowedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SetSlowedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RoomSystem.SetTaggedTime
void GlobalNamespace::RoomSystem::SetTaggedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SetTaggedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SetTaggedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RoomSystem.SetJoinedTaggedTime
void GlobalNamespace::RoomSystem::SetJoinedTaggedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SetJoinedTaggedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SetJoinedTaggedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RoomSystem.OnStatusEffect
void GlobalNamespace::RoomSystem::OnStatusEffect(::GlobalNamespace::RoomSystem::StatusEffects status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::OnStatusEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "OnStatusEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, status);
}
// Autogenerated method: RoomSystem.DeserializeStatusEffect
void GlobalNamespace::RoomSystem::DeserializeStatusEffect(::ArrayW<::Il2CppObject*> data, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::DeserializeStatusEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "DeserializeStatusEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, info);
}
// Autogenerated method: RoomSystem.SendStatusEffectAll
void GlobalNamespace::RoomSystem::SendStatusEffectAll(::GlobalNamespace::RoomSystem::StatusEffects status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SendStatusEffectAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SendStatusEffectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, status);
}
// Autogenerated method: RoomSystem.SendStatusEffectToPlayer
void GlobalNamespace::RoomSystem::SendStatusEffectToPlayer(::GlobalNamespace::RoomSystem::StatusEffects status, ::Photon::Realtime::Player* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SendStatusEffectToPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SendStatusEffectToPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, status, target);
}
// Autogenerated method: RoomSystem.PlaySoundEffect
void GlobalNamespace::RoomSystem::PlaySoundEffect(int soundIndex, float soundVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::PlaySoundEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "PlaySoundEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundIndex), ::il2cpp_utils::ExtractType(soundVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, soundIndex, soundVolume);
}
// Autogenerated method: RoomSystem.PlaySoundEffect
void GlobalNamespace::RoomSystem::PlaySoundEffect(int soundIndex, float soundVolume, ::Photon::Realtime::Player* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::PlaySoundEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "PlaySoundEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundIndex), ::il2cpp_utils::ExtractType(soundVolume), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, soundIndex, soundVolume, target);
}
// Autogenerated method: RoomSystem.OnPlaySoundEffect
void GlobalNamespace::RoomSystem::OnPlaySoundEffect(::GlobalNamespace::RoomSystem::SoundEffect sound, ::Photon::Realtime::Player* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::OnPlaySoundEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "OnPlaySoundEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sound), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sound, target);
}
// Autogenerated method: RoomSystem.DeserializeSoundEffect
void GlobalNamespace::RoomSystem::DeserializeSoundEffect(::ArrayW<::Il2CppObject*> data, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::DeserializeSoundEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "DeserializeSoundEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, info);
}
// Autogenerated method: RoomSystem.SendSoundEffectAll
void GlobalNamespace::RoomSystem::SendSoundEffectAll(int soundIndex, float soundVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SendSoundEffectAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SendSoundEffectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundIndex), ::il2cpp_utils::ExtractType(soundVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, soundIndex, soundVolume);
}
// Autogenerated method: RoomSystem.SendSoundEffectAll
void GlobalNamespace::RoomSystem::SendSoundEffectAll(::GlobalNamespace::RoomSystem::SoundEffect sound) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SendSoundEffectAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SendSoundEffectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sound)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sound);
}
// Autogenerated method: RoomSystem.SendSoundEffectToPlayer
void GlobalNamespace::RoomSystem::SendSoundEffectToPlayer(int soundIndex, float soundVolume, ::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SendSoundEffectToPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SendSoundEffectToPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundIndex), ::il2cpp_utils::ExtractType(soundVolume), ::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, soundIndex, soundVolume, player);
}
// Autogenerated method: RoomSystem.SendSoundEffectToPlayer
void GlobalNamespace::RoomSystem::SendSoundEffectToPlayer(::GlobalNamespace::RoomSystem::SoundEffect sound, ::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SendSoundEffectToPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SendSoundEffectToPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sound), ::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sound, player);
}
// Autogenerated method: RoomSystem.SendSoundEffectOnOther
void GlobalNamespace::RoomSystem::SendSoundEffectOnOther(int soundIndex, float soundvolume, ::Photon::Realtime::Player* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SendSoundEffectOnOther");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SendSoundEffectOnOther", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundIndex), ::il2cpp_utils::ExtractType(soundvolume), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, soundIndex, soundvolume, target);
}
// Autogenerated method: RoomSystem.SendSoundEffectOnOther
void GlobalNamespace::RoomSystem::SendSoundEffectOnOther(::GlobalNamespace::RoomSystem::SoundEffect sound, ::Photon::Realtime::Player* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SendSoundEffectOnOther");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SendSoundEffectOnOther", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sound), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sound, target);
}
// Autogenerated method: RoomSystem.OnPlayerEffect
void GlobalNamespace::RoomSystem::OnPlayerEffect(::GlobalNamespace::RoomSystem::PlayerEffect effect, ::Photon::Realtime::Player* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::OnPlayerEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "OnPlayerEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effect), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, effect, target);
}
// Autogenerated method: RoomSystem.DeserializePlayerEffect
void GlobalNamespace::RoomSystem::DeserializePlayerEffect(::ArrayW<::Il2CppObject*> data, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::DeserializePlayerEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "DeserializePlayerEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, info);
}
// Autogenerated method: RoomSystem.SendPlayerEffect
void GlobalNamespace::RoomSystem::SendPlayerEffect(::GlobalNamespace::RoomSystem::PlayerEffect effect, ::Photon::Realtime::Player* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SendPlayerEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RoomSystem", "SendPlayerEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effect), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, effect, target);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: RoomSystem/ImpactFxContainer
#include "GlobalNamespace/RoomSystem_ImpactFxContainer.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: FXSystemSettings
#include "GlobalNamespace/FXSystemSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRRig targetRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::RoomSystem::ImpactFxContainer::dyn_targetRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::ImpactFxContainer::dyn_targetRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::RoomSystem::ImpactFxContainer::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::ImpactFxContainer::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color colour
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::RoomSystem::ImpactFxContainer::dyn_colour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::ImpactFxContainer::dyn_colour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colour"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 projectileCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RoomSystem::ImpactFxContainer::dyn_projectileCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::ImpactFxContainer::dyn_projectileCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "projectileCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RoomSystem/ImpactFxContainer.get_settings
::GlobalNamespace::FXSystemSettings* GlobalNamespace::RoomSystem::ImpactFxContainer::get_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::ImpactFxContainer::get_settings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomSystem::ImpactFxContainer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FXSystemSettings*, false>(this, ___internal__method);
}
// Autogenerated method: RoomSystem/ImpactFxContainer.OnPlayFX
void GlobalNamespace::RoomSystem::ImpactFxContainer::OnPlayFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::ImpactFxContainer::OnPlayFX");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomSystem::ImpactFxContainer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: RoomSystem/LaunchProjectileContainer
#include "GlobalNamespace/RoomSystem_LaunchProjectileContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::RoomSystem::LaunchProjectileContainer::dyn_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::LaunchProjectileContainer::dyn_velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RoomSystem/ProjectileSource projectileSource
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RoomSystem::ProjectileSource& GlobalNamespace::RoomSystem::LaunchProjectileContainer::dyn_projectileSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::LaunchProjectileContainer::dyn_projectileSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "projectileSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RoomSystem::ProjectileSource*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean overridecolour
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RoomSystem::LaunchProjectileContainer::dyn_overridecolour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::LaunchProjectileContainer::dyn_overridecolour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overridecolour"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonMessageInfo messageInfo
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonMessageInfo& GlobalNamespace::RoomSystem::LaunchProjectileContainer::dyn_messageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::LaunchProjectileContainer::dyn_messageInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messageInfo"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonMessageInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RoomSystem/LaunchProjectileContainer.OnPlayFX
void GlobalNamespace::RoomSystem::LaunchProjectileContainer::OnPlayFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::LaunchProjectileContainer::OnPlayFX");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RoomSystem::ImpactFxContainer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: RoomSystem/ProjectileSource
#include "GlobalNamespace/RoomSystem_ProjectileSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RoomSystem/ProjectileSource Slingshot
::GlobalNamespace::RoomSystem::ProjectileSource GlobalNamespace::RoomSystem::ProjectileSource::_get_Slingshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::ProjectileSource::_get_Slingshot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RoomSystem::ProjectileSource>("", "RoomSystem/ProjectileSource", "Slingshot"));
}
// Autogenerated static field setter
// Set static field: static public RoomSystem/ProjectileSource Slingshot
void GlobalNamespace::RoomSystem::ProjectileSource::_set_Slingshot(::GlobalNamespace::RoomSystem::ProjectileSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::ProjectileSource::_set_Slingshot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem/ProjectileSource", "Slingshot", value));
}
// Autogenerated static field getter
// Get static field: static public RoomSystem/ProjectileSource LeftHand
::GlobalNamespace::RoomSystem::ProjectileSource GlobalNamespace::RoomSystem::ProjectileSource::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::ProjectileSource::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RoomSystem::ProjectileSource>("", "RoomSystem/ProjectileSource", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public RoomSystem/ProjectileSource LeftHand
void GlobalNamespace::RoomSystem::ProjectileSource::_set_LeftHand(::GlobalNamespace::RoomSystem::ProjectileSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::ProjectileSource::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem/ProjectileSource", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public RoomSystem/ProjectileSource RightHand
::GlobalNamespace::RoomSystem::ProjectileSource GlobalNamespace::RoomSystem::ProjectileSource::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::ProjectileSource::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RoomSystem::ProjectileSource>("", "RoomSystem/ProjectileSource", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public RoomSystem/ProjectileSource RightHand
void GlobalNamespace::RoomSystem::ProjectileSource::_set_RightHand(::GlobalNamespace::RoomSystem::ProjectileSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::ProjectileSource::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem/ProjectileSource", "RightHand", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RoomSystem::ProjectileSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::ProjectileSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: RoomSystem/Events
#include "GlobalNamespace/RoomSystem_Events.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte PROJECTILE
uint8_t GlobalNamespace::RoomSystem::Events::_get_PROJECTILE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Events::_get_PROJECTILE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "RoomSystem/Events", "PROJECTILE"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PROJECTILE
void GlobalNamespace::RoomSystem::Events::_set_PROJECTILE(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Events::_set_PROJECTILE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem/Events", "PROJECTILE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte IMPACT
uint8_t GlobalNamespace::RoomSystem::Events::_get_IMPACT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Events::_get_IMPACT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "RoomSystem/Events", "IMPACT"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte IMPACT
void GlobalNamespace::RoomSystem::Events::_set_IMPACT(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Events::_set_IMPACT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem/Events", "IMPACT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte STATUS_EFFECT
uint8_t GlobalNamespace::RoomSystem::Events::_get_STATUS_EFFECT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Events::_get_STATUS_EFFECT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "RoomSystem/Events", "STATUS_EFFECT"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte STATUS_EFFECT
void GlobalNamespace::RoomSystem::Events::_set_STATUS_EFFECT(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Events::_set_STATUS_EFFECT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem/Events", "STATUS_EFFECT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SOUND_EFFECT
uint8_t GlobalNamespace::RoomSystem::Events::_get_SOUND_EFFECT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Events::_get_SOUND_EFFECT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "RoomSystem/Events", "SOUND_EFFECT"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SOUND_EFFECT
void GlobalNamespace::RoomSystem::Events::_set_SOUND_EFFECT(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Events::_set_SOUND_EFFECT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem/Events", "SOUND_EFFECT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte NEARBY_JOIN
uint8_t GlobalNamespace::RoomSystem::Events::_get_NEARBY_JOIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Events::_get_NEARBY_JOIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "RoomSystem/Events", "NEARBY_JOIN"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte NEARBY_JOIN
void GlobalNamespace::RoomSystem::Events::_set_NEARBY_JOIN(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Events::_set_NEARBY_JOIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem/Events", "NEARBY_JOIN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PLAYER_TOUCHED
uint8_t GlobalNamespace::RoomSystem::Events::_get_PLAYER_TOUCHED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Events::_get_PLAYER_TOUCHED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "RoomSystem/Events", "PLAYER_TOUCHED"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PLAYER_TOUCHED
void GlobalNamespace::RoomSystem::Events::_set_PLAYER_TOUCHED(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Events::_set_PLAYER_TOUCHED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem/Events", "PLAYER_TOUCHED", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PLAYER_EFFECT
uint8_t GlobalNamespace::RoomSystem::Events::_get_PLAYER_EFFECT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Events::_get_PLAYER_EFFECT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "RoomSystem/Events", "PLAYER_EFFECT"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PLAYER_EFFECT
void GlobalNamespace::RoomSystem::Events::_set_PLAYER_EFFECT(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Events::_set_PLAYER_EFFECT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem/Events", "PLAYER_EFFECT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PARTY_JOIN
uint8_t GlobalNamespace::RoomSystem::Events::_get_PARTY_JOIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Events::_get_PARTY_JOIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "RoomSystem/Events", "PARTY_JOIN"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PARTY_JOIN
void GlobalNamespace::RoomSystem::Events::_set_PARTY_JOIN(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::Events::_set_PARTY_JOIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem/Events", "PARTY_JOIN", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: RoomSystem/StatusEffects
#include "GlobalNamespace/RoomSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RoomSystem/StatusEffects TaggedTime
::GlobalNamespace::RoomSystem::StatusEffects GlobalNamespace::RoomSystem::StatusEffects::_get_TaggedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::StatusEffects::_get_TaggedTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RoomSystem::StatusEffects>("", "RoomSystem/StatusEffects", "TaggedTime"));
}
// Autogenerated static field setter
// Set static field: static public RoomSystem/StatusEffects TaggedTime
void GlobalNamespace::RoomSystem::StatusEffects::_set_TaggedTime(::GlobalNamespace::RoomSystem::StatusEffects value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::StatusEffects::_set_TaggedTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem/StatusEffects", "TaggedTime", value));
}
// Autogenerated static field getter
// Get static field: static public RoomSystem/StatusEffects JoinedTaggedTime
::GlobalNamespace::RoomSystem::StatusEffects GlobalNamespace::RoomSystem::StatusEffects::_get_JoinedTaggedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::StatusEffects::_get_JoinedTaggedTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RoomSystem::StatusEffects>("", "RoomSystem/StatusEffects", "JoinedTaggedTime"));
}
// Autogenerated static field setter
// Set static field: static public RoomSystem/StatusEffects JoinedTaggedTime
void GlobalNamespace::RoomSystem::StatusEffects::_set_JoinedTaggedTime(::GlobalNamespace::RoomSystem::StatusEffects value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::StatusEffects::_set_JoinedTaggedTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem/StatusEffects", "JoinedTaggedTime", value));
}
// Autogenerated static field getter
// Get static field: static public RoomSystem/StatusEffects SetSlowedTime
::GlobalNamespace::RoomSystem::StatusEffects GlobalNamespace::RoomSystem::StatusEffects::_get_SetSlowedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::StatusEffects::_get_SetSlowedTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RoomSystem::StatusEffects>("", "RoomSystem/StatusEffects", "SetSlowedTime"));
}
// Autogenerated static field setter
// Set static field: static public RoomSystem/StatusEffects SetSlowedTime
void GlobalNamespace::RoomSystem::StatusEffects::_set_SetSlowedTime(::GlobalNamespace::RoomSystem::StatusEffects value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::StatusEffects::_set_SetSlowedTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomSystem/StatusEffects", "SetSlowedTime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RoomSystem::StatusEffects::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::StatusEffects::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: RoomSystem/SoundEffect
#include "GlobalNamespace/RoomSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 id
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RoomSystem::SoundEffect::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SoundEffect::dyn_id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RoomSystem::SoundEffect::dyn_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystem::SoundEffect::dyn_volume");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RoomSystem/SoundEffect..ctor
// ABORTED elsewhere.  GlobalNamespace::RoomSystem::SoundEffect::SoundEffect(int soundID, float soundVolume)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ProjectileTracker
#include "GlobalNamespace/ProjectileTracker.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 localPlayerProjectileCounter
int GlobalNamespace::ProjectileTracker::_get_localPlayerProjectileCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::_get_localPlayerProjectileCounter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ProjectileTracker", "localPlayerProjectileCounter"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 localPlayerProjectileCounter
void GlobalNamespace::ProjectileTracker::_set_localPlayerProjectileCounter(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::_set_localPlayerProjectileCounter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ProjectileTracker", "localPlayerProjectileCounter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 maxProjectilesToKeepTrackOfPerPlayer
int GlobalNamespace::ProjectileTracker::_get_maxProjectilesToKeepTrackOfPerPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::_get_maxProjectilesToKeepTrackOfPerPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ProjectileTracker", "maxProjectilesToKeepTrackOfPerPlayer"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 maxProjectilesToKeepTrackOfPerPlayer
void GlobalNamespace::ProjectileTracker::_set_maxProjectilesToKeepTrackOfPerPlayer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::_set_maxProjectilesToKeepTrackOfPerPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ProjectileTracker", "maxProjectilesToKeepTrackOfPerPlayer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<Photon.Realtime.Player,System.Collections.Generic.List`1<ProjectileTracker/ProjectileInfo>> playerProjectiles
::System::Collections::Generic::Dictionary_2<::Photon::Realtime::Player*, ::System::Collections::Generic::List_1<::GlobalNamespace::ProjectileTracker::ProjectileInfo>*>* GlobalNamespace::ProjectileTracker::_get_playerProjectiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::_get_playerProjectiles");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Photon::Realtime::Player*, ::System::Collections::Generic::List_1<::GlobalNamespace::ProjectileTracker::ProjectileInfo>*>*>("", "ProjectileTracker", "playerProjectiles")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<Photon.Realtime.Player,System.Collections.Generic.List`1<ProjectileTracker/ProjectileInfo>> playerProjectiles
void GlobalNamespace::ProjectileTracker::_set_playerProjectiles(::System::Collections::Generic::Dictionary_2<::Photon::Realtime::Player*, ::System::Collections::Generic::List_1<::GlobalNamespace::ProjectileTracker::ProjectileInfo>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::_set_playerProjectiles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ProjectileTracker", "playerProjectiles", value));
}
// Autogenerated method: ProjectileTracker..cctor
void GlobalNamespace::ProjectileTracker::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ProjectileTracker", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ProjectileTracker.ClearProjectiles
void GlobalNamespace::ProjectileTracker::ClearProjectiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::ClearProjectiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ProjectileTracker", "ClearProjectiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ProjectileTracker.IncrementLocalPlayerProjectileCount
int GlobalNamespace::ProjectileTracker::IncrementLocalPlayerProjectileCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::IncrementLocalPlayerProjectileCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ProjectileTracker", "IncrementLocalPlayerProjectileCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ProjectileTracker.AddPlayerProjectile
void GlobalNamespace::ProjectileTracker::AddPlayerProjectile(::Photon::Realtime::Player* player, double timeShot, ::UnityEngine::Vector3 initialVelocity, ::UnityEngine::Vector3 initialPosition, int projectileCount, float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::AddPlayerProjectile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ProjectileTracker", "AddPlayerProjectile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(timeShot), ::il2cpp_utils::ExtractType(initialVelocity), ::il2cpp_utils::ExtractType(initialPosition), ::il2cpp_utils::ExtractType(projectileCount), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, timeShot, initialVelocity, initialPosition, projectileCount, scale);
}
// Autogenerated method: ProjectileTracker.FindIndexOfProjectile
int GlobalNamespace::ProjectileTracker::FindIndexOfProjectile(::System::Collections::Generic::List_1<::GlobalNamespace::ProjectileTracker::ProjectileInfo>* list, int projectileNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::FindIndexOfProjectile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ProjectileTracker", "FindIndexOfProjectile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(projectileNum)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list, projectileNum);
}
// Autogenerated method: ProjectileTracker.IsHitPlausible
bool GlobalNamespace::ProjectileTracker::IsHitPlausible(::UnityEngine::Vector3 hitLocation, ::Photon::Pun::PhotonMessageInfo info, ::Photon::Realtime::Player* hitPlayer, int projectileCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::IsHitPlausible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ProjectileTracker", "IsHitPlausible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hitLocation), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(hitPlayer), ::il2cpp_utils::ExtractType(projectileCount)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hitLocation, info, hitPlayer, projectileCount);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ProjectileTracker/ProjectileInfo
#include "GlobalNamespace/ProjectileTracker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double timeLaunched
[[deprecated("Use field access instead!")]] double& GlobalNamespace::ProjectileTracker::ProjectileInfo::dyn_timeLaunched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::ProjectileInfo::dyn_timeLaunched");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeLaunched"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 shotVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ProjectileTracker::ProjectileInfo::dyn_shotVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::ProjectileInfo::dyn_shotVelocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shotVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 launchOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ProjectileTracker::ProjectileInfo::dyn_launchOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::ProjectileInfo::dyn_launchOrigin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "launchOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 projectileCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProjectileTracker::ProjectileInfo::dyn_projectileCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::ProjectileInfo::dyn_projectileCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "projectileCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single scale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProjectileTracker::ProjectileInfo::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProjectileTracker::ProjectileInfo::dyn_scale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProjectileTracker/ProjectileInfo..ctor
// ABORTED elsewhere.  GlobalNamespace::ProjectileTracker::ProjectileInfo::ProjectileInfo(double newTime, ::UnityEngine::Vector3 newVel, ::UnityEngine::Vector3 origin, int newCount, float newScale)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: RoomSystemSettings
#include "GlobalNamespace/RoomSystemSettings.hpp"
// Including type: CallLimiterWithCooldown
#include "GlobalNamespace/CallLimiterWithCooldown.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private CallLimiterWithCooldown statusEffectLimiter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CallLimiterWithCooldown*& GlobalNamespace::RoomSystemSettings::dyn_statusEffectLimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystemSettings::dyn_statusEffectLimiter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statusEffectLimiter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CallLimiterWithCooldown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CallLimiterWithCooldown soundEffectLimiter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CallLimiterWithCooldown*& GlobalNamespace::RoomSystemSettings::dyn_soundEffectLimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystemSettings::dyn_soundEffectLimiter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundEffectLimiter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CallLimiterWithCooldown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CallLimiterWithCooldown soundEffectOtherLimiter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CallLimiterWithCooldown*& GlobalNamespace::RoomSystemSettings::dyn_soundEffectOtherLimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystemSettings::dyn_soundEffectOtherLimiter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundEffectOtherLimiter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CallLimiterWithCooldown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject playerImpactEffect
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::RoomSystemSettings::dyn_playerImpactEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystemSettings::dyn_playerImpactEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerImpactEffect"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pausedDCTimer
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RoomSystemSettings::dyn_pausedDCTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystemSettings::dyn_pausedDCTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pausedDCTimer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RoomSystemSettings.get_StatusEffectLimiter
::GlobalNamespace::CallLimiterWithCooldown* GlobalNamespace::RoomSystemSettings::get_StatusEffectLimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystemSettings::get_StatusEffectLimiter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusEffectLimiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::CallLimiterWithCooldown*, false>(this, ___internal__method);
}
// Autogenerated method: RoomSystemSettings.get_SoundEffectLimiter
::GlobalNamespace::CallLimiterWithCooldown* GlobalNamespace::RoomSystemSettings::get_SoundEffectLimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystemSettings::get_SoundEffectLimiter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SoundEffectLimiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::CallLimiterWithCooldown*, false>(this, ___internal__method);
}
// Autogenerated method: RoomSystemSettings.get_SoundEffectOtherLimiter
::GlobalNamespace::CallLimiterWithCooldown* GlobalNamespace::RoomSystemSettings::get_SoundEffectOtherLimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystemSettings::get_SoundEffectOtherLimiter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SoundEffectOtherLimiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::CallLimiterWithCooldown*, false>(this, ___internal__method);
}
// Autogenerated method: RoomSystemSettings.get_PlayerImpactEffect
::UnityEngine::GameObject* GlobalNamespace::RoomSystemSettings::get_PlayerImpactEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystemSettings::get_PlayerImpactEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayerImpactEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: RoomSystemSettings.get_PausedDCTimer
int GlobalNamespace::RoomSystemSettings::get_PausedDCTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomSystemSettings::get_PausedDCTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PausedDCTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ITickSystemPre
#include "GlobalNamespace/ITickSystemPre.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ITickSystemPre.get_PreTickRunning
bool GlobalNamespace::ITickSystemPre::get_PreTickRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ITickSystemPre::get_PreTickRunning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ITickSystemPre*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ITickSystemPre.set_PreTickRunning
void GlobalNamespace::ITickSystemPre::set_PreTickRunning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ITickSystemPre::set_PreTickRunning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ITickSystemPre*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ITickSystemPre.PreTick
void GlobalNamespace::ITickSystemPre::PreTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ITickSystemPre::PreTick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ITickSystemPre*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ITickSystemTick
#include "GlobalNamespace/ITickSystemTick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ITickSystemTick.get_TickRunning
bool GlobalNamespace::ITickSystemTick::get_TickRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ITickSystemTick::get_TickRunning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ITickSystemTick*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ITickSystemTick.set_TickRunning
void GlobalNamespace::ITickSystemTick::set_TickRunning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ITickSystemTick::set_TickRunning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ITickSystemTick*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ITickSystemTick.Tick
void GlobalNamespace::ITickSystemTick::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ITickSystemTick::Tick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ITickSystemTick*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ITickSystemPost
#include "GlobalNamespace/ITickSystemPost.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ITickSystemPost.get_PostTickRunning
bool GlobalNamespace::ITickSystemPost::get_PostTickRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ITickSystemPost::get_PostTickRunning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ITickSystemPost*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ITickSystemPost.set_PostTickRunning
void GlobalNamespace::ITickSystemPost::set_PostTickRunning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ITickSystemPost::set_PostTickRunning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ITickSystemPost*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ITickSystemPost.PostTick
void GlobalNamespace::ITickSystemPost::PostTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ITickSystemPost::PostTick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ITickSystemPost*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TickSystem
#include "GlobalNamespace/TickSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AutoCatchThrowBall
#include "GlobalNamespace/AutoCatchThrowBall.hpp"
// Including type: TransferrableObject
#include "GlobalNamespace/TransferrableObject.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject ballPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::AutoCatchThrowBall::dyn_ballPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoCatchThrowBall::dyn_ballPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ballPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single throwPitch
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutoCatchThrowBall::dyn_throwPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoCatchThrowBall::dyn_throwPitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "throwPitch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single throwSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutoCatchThrowBall::dyn_throwSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoCatchThrowBall::dyn_throwSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "throwSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single throwWaitTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutoCatchThrowBall::dyn_throwWaitTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoCatchThrowBall::dyn_throwWaitTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "throwWaitTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single catchWaitTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutoCatchThrowBall::dyn_catchWaitTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoCatchThrowBall::dyn_catchWaitTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "catchWaitTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask ballLayer
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::AutoCatchThrowBall::dyn_ballLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoCatchThrowBall::dyn_ballLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ballLayer"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig vrRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::AutoCatchThrowBall::dyn_vrRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoCatchThrowBall::dyn_vrRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] overlapResults
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::AutoCatchThrowBall::dyn_overlapResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoCatchThrowBall::dyn_overlapResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overlapResults"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<AutoCatchThrowBall/HeldBall> heldBalls
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::AutoCatchThrowBall::HeldBall>*& GlobalNamespace::AutoCatchThrowBall::dyn_heldBalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoCatchThrowBall::dyn_heldBalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heldBalls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::AutoCatchThrowBall::HeldBall>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AutoCatchThrowBall.Start
void GlobalNamespace::AutoCatchThrowBall::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoCatchThrowBall::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutoCatchThrowBall.Update
void GlobalNamespace::AutoCatchThrowBall::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoCatchThrowBall::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutoCatchThrowBall.Throw
void GlobalNamespace::AutoCatchThrowBall::Throw(::GlobalNamespace::TransferrableObject* transferrable, ::UnityEngine::Vector3 throwDir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoCatchThrowBall::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transferrable), ::il2cpp_utils::ExtractType(throwDir)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transferrable, throwDir);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildTargetManager
#include "GlobalNamespace/BuildTargetManager.hpp"
// Including type: OVRManager
#include "GlobalNamespace/OVRManager.hpp"
// Including type: GorillaTagger
#include "GlobalNamespace/GorillaTagger.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BuildTargetManager/BuildTowards newBuildTarget
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuildTargetManager::BuildTowards& GlobalNamespace::BuildTargetManager::dyn_newBuildTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::dyn_newBuildTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newBuildTarget"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuildTargetManager::BuildTowards*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isBeta
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuildTargetManager::dyn_isBeta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::dyn_isBeta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isBeta"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isQA
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuildTargetManager::dyn_isQA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::dyn_isQA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isQA"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean spoofIDs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuildTargetManager::dyn_spoofIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::dyn_spoofIDs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spoofIDs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean spoofChild
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuildTargetManager::dyn_spoofChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::dyn_spoofChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spoofChild"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableAllCosmetics
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuildTargetManager::dyn_enableAllCosmetics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::dyn_enableAllCosmetics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableAllCosmetics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRManager ovrManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRManager*& GlobalNamespace::BuildTargetManager::dyn_ovrManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::dyn_ovrManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ovrManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String path
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BuildTargetManager::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuildTargetManager/BuildTowards currentBuildTargetDONOTCHANGE
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuildTargetManager::BuildTowards& GlobalNamespace::BuildTargetManager::dyn_currentBuildTargetDONOTCHANGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::dyn_currentBuildTargetDONOTCHANGE");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentBuildTargetDONOTCHANGE"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuildTargetManager::BuildTowards*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagger gorillaTagger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTagger*& GlobalNamespace::BuildTargetManager::dyn_gorillaTagger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::dyn_gorillaTagger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gorillaTagger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTagger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] betaDisableObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::BuildTargetManager::dyn_betaDisableObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::dyn_betaDisableObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "betaDisableObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] betaEnableObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::BuildTargetManager::dyn_betaEnableObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::dyn_betaEnableObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "betaEnableObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BuildTargetManager.GetPath
::StringW GlobalNamespace::BuildTargetManager::GetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuildTargetManager/BuildTowards
#include "GlobalNamespace/BuildTargetManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BuildTargetManager/BuildTowards Steam
::GlobalNamespace::BuildTargetManager::BuildTowards GlobalNamespace::BuildTargetManager::BuildTowards::_get_Steam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::BuildTowards::_get_Steam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuildTargetManager::BuildTowards>("", "BuildTargetManager/BuildTowards", "Steam"));
}
// Autogenerated static field setter
// Set static field: static public BuildTargetManager/BuildTowards Steam
void GlobalNamespace::BuildTargetManager::BuildTowards::_set_Steam(::GlobalNamespace::BuildTargetManager::BuildTowards value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::BuildTowards::_set_Steam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuildTargetManager/BuildTowards", "Steam", value));
}
// Autogenerated static field getter
// Get static field: static public BuildTargetManager/BuildTowards OculusPC
::GlobalNamespace::BuildTargetManager::BuildTowards GlobalNamespace::BuildTargetManager::BuildTowards::_get_OculusPC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::BuildTowards::_get_OculusPC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuildTargetManager::BuildTowards>("", "BuildTargetManager/BuildTowards", "OculusPC"));
}
// Autogenerated static field setter
// Set static field: static public BuildTargetManager/BuildTowards OculusPC
void GlobalNamespace::BuildTargetManager::BuildTowards::_set_OculusPC(::GlobalNamespace::BuildTargetManager::BuildTowards value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::BuildTowards::_set_OculusPC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuildTargetManager/BuildTowards", "OculusPC", value));
}
// Autogenerated static field getter
// Get static field: static public BuildTargetManager/BuildTowards Quest
::GlobalNamespace::BuildTargetManager::BuildTowards GlobalNamespace::BuildTargetManager::BuildTowards::_get_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::BuildTowards::_get_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuildTargetManager::BuildTowards>("", "BuildTargetManager/BuildTowards", "Quest"));
}
// Autogenerated static field setter
// Set static field: static public BuildTargetManager/BuildTowards Quest
void GlobalNamespace::BuildTargetManager::BuildTowards::_set_Quest(::GlobalNamespace::BuildTargetManager::BuildTowards value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::BuildTowards::_set_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuildTargetManager/BuildTowards", "Quest", value));
}
// Autogenerated static field getter
// Get static field: static public BuildTargetManager/BuildTowards Viveport
::GlobalNamespace::BuildTargetManager::BuildTowards GlobalNamespace::BuildTargetManager::BuildTowards::_get_Viveport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::BuildTowards::_get_Viveport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuildTargetManager::BuildTowards>("", "BuildTargetManager/BuildTowards", "Viveport"));
}
// Autogenerated static field setter
// Set static field: static public BuildTargetManager/BuildTowards Viveport
void GlobalNamespace::BuildTargetManager::BuildTowards::_set_Viveport(::GlobalNamespace::BuildTargetManager::BuildTowards value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::BuildTowards::_set_Viveport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuildTargetManager/BuildTowards", "Viveport", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuildTargetManager::BuildTowards::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuildTargetManager::BuildTowards::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DisconnectFromRoom
#include "GlobalNamespace/DisconnectFromRoom.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FPSController
#include "GlobalNamespace/FPSController.hpp"
// Including type: FPSController/OnStateChangeEventHandler
#include "GlobalNamespace/FPSController_OnStateChangeEventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single baseMoveSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FPSController::dyn_baseMoveSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::dyn_baseMoveSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseMoveSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single shiftMoveSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FPSController::dyn_shiftMoveSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::dyn_shiftMoveSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shiftMoveSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ctrlMoveSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FPSController::dyn_ctrlMoveSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::dyn_ctrlMoveSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctrlMoveSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lookHorizontal
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FPSController::dyn_lookHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::dyn_lookHorizontal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookHorizontal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lookVertical
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FPSController::dyn_lookVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::dyn_lookVertical");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookVertical"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 leftControllerPosOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::FPSController::dyn_leftControllerPosOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::dyn_leftControllerPosOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerPosOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 leftControllerRotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::FPSController::dyn_leftControllerRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::dyn_leftControllerRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerRotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 rightControllerPosOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::FPSController::dyn_rightControllerPosOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::dyn_rightControllerPosOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerPosOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 rightControllerRotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::FPSController::dyn_rightControllerRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::dyn_rightControllerRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerRotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean toggleGrab
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FPSController::dyn_toggleGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::dyn_toggleGrab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toggleGrab"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FPSController/OnStateChangeEventHandler OnStartEvent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FPSController::OnStateChangeEventHandler*& GlobalNamespace::FPSController::dyn_OnStartEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::dyn_OnStartEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStartEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FPSController::OnStateChangeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FPSController/OnStateChangeEventHandler OnStopEvent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FPSController::OnStateChangeEventHandler*& GlobalNamespace::FPSController::dyn_OnStopEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::dyn_OnStopEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStopEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FPSController::OnStateChangeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FPSController.add_OnStartEvent
void GlobalNamespace::FPSController::add_OnStartEvent(::GlobalNamespace::FPSController::OnStateChangeEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::add_OnStartEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FPSController.remove_OnStartEvent
void GlobalNamespace::FPSController::remove_OnStartEvent(::GlobalNamespace::FPSController::OnStateChangeEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::remove_OnStartEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FPSController.add_OnStopEvent
void GlobalNamespace::FPSController::add_OnStopEvent(::GlobalNamespace::FPSController::OnStateChangeEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::add_OnStopEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnStopEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FPSController.remove_OnStopEvent
void GlobalNamespace::FPSController::remove_OnStopEvent(::GlobalNamespace::FPSController::OnStateChangeEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::remove_OnStopEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnStopEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FPSController/OnStateChangeEventHandler
#include "GlobalNamespace/FPSController_OnStateChangeEventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FPSController/OnStateChangeEventHandler.Invoke
void GlobalNamespace::FPSController::OnStateChangeEventHandler::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::OnStateChangeEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FPSController::OnStateChangeEventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FPSController/OnStateChangeEventHandler.BeginInvoke
::System::IAsyncResult* GlobalNamespace::FPSController::OnStateChangeEventHandler::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::OnStateChangeEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FPSController::OnStateChangeEventHandler*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: FPSController/OnStateChangeEventHandler.EndInvoke
void GlobalNamespace::FPSController::OnStateChangeEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSController::OnStateChangeEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FPSController::OnStateChangeEventHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: JoinPublic
#include "GlobalNamespace/JoinPublic.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: KinematicTestMotion
#include "GlobalNamespace/KinematicTestMotion.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform start
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::KinematicTestMotion::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform end
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::KinematicTestMotion::dyn_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::dyn_end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "end"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rigidbody rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::KinematicTestMotion::dyn_rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::dyn_rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public KinematicTestMotion/UpdateType updateType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::KinematicTestMotion::UpdateType& GlobalNamespace::KinematicTestMotion::dyn_updateType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::dyn_updateType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::KinematicTestMotion::UpdateType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public KinematicTestMotion/MoveType moveType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::KinematicTestMotion::MoveType& GlobalNamespace::KinematicTestMotion::dyn_moveType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::dyn_moveType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::KinematicTestMotion::MoveType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single period
[[deprecated("Use field access instead!")]] float& GlobalNamespace::KinematicTestMotion::dyn_period() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::dyn_period");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "period"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: KinematicTestMotion.FixedUpdate
void GlobalNamespace::KinematicTestMotion::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KinematicTestMotion.Update
void GlobalNamespace::KinematicTestMotion::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KinematicTestMotion.LateUpdate
void GlobalNamespace::KinematicTestMotion::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KinematicTestMotion.UpdatePosition
void GlobalNamespace::KinematicTestMotion::UpdatePosition(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::UpdatePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: KinematicTestMotion/UpdateType
#include "GlobalNamespace/KinematicTestMotion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public KinematicTestMotion/UpdateType Update
::GlobalNamespace::KinematicTestMotion::UpdateType GlobalNamespace::KinematicTestMotion::UpdateType::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::UpdateType::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::KinematicTestMotion::UpdateType>("", "KinematicTestMotion/UpdateType", "Update"));
}
// Autogenerated static field setter
// Set static field: static public KinematicTestMotion/UpdateType Update
void GlobalNamespace::KinematicTestMotion::UpdateType::_set_Update(::GlobalNamespace::KinematicTestMotion::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::UpdateType::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KinematicTestMotion/UpdateType", "Update", value));
}
// Autogenerated static field getter
// Get static field: static public KinematicTestMotion/UpdateType LateUpdate
::GlobalNamespace::KinematicTestMotion::UpdateType GlobalNamespace::KinematicTestMotion::UpdateType::_get_LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::UpdateType::_get_LateUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::KinematicTestMotion::UpdateType>("", "KinematicTestMotion/UpdateType", "LateUpdate"));
}
// Autogenerated static field setter
// Set static field: static public KinematicTestMotion/UpdateType LateUpdate
void GlobalNamespace::KinematicTestMotion::UpdateType::_set_LateUpdate(::GlobalNamespace::KinematicTestMotion::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::UpdateType::_set_LateUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KinematicTestMotion/UpdateType", "LateUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public KinematicTestMotion/UpdateType FixedUpdate
::GlobalNamespace::KinematicTestMotion::UpdateType GlobalNamespace::KinematicTestMotion::UpdateType::_get_FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::UpdateType::_get_FixedUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::KinematicTestMotion::UpdateType>("", "KinematicTestMotion/UpdateType", "FixedUpdate"));
}
// Autogenerated static field setter
// Set static field: static public KinematicTestMotion/UpdateType FixedUpdate
void GlobalNamespace::KinematicTestMotion::UpdateType::_set_FixedUpdate(::GlobalNamespace::KinematicTestMotion::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::UpdateType::_set_FixedUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KinematicTestMotion/UpdateType", "FixedUpdate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::KinematicTestMotion::UpdateType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::UpdateType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: KinematicTestMotion/MoveType
#include "GlobalNamespace/KinematicTestMotion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public KinematicTestMotion/MoveType TransformPosition
::GlobalNamespace::KinematicTestMotion::MoveType GlobalNamespace::KinematicTestMotion::MoveType::_get_TransformPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::MoveType::_get_TransformPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::KinematicTestMotion::MoveType>("", "KinematicTestMotion/MoveType", "TransformPosition"));
}
// Autogenerated static field setter
// Set static field: static public KinematicTestMotion/MoveType TransformPosition
void GlobalNamespace::KinematicTestMotion::MoveType::_set_TransformPosition(::GlobalNamespace::KinematicTestMotion::MoveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::MoveType::_set_TransformPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KinematicTestMotion/MoveType", "TransformPosition", value));
}
// Autogenerated static field getter
// Get static field: static public KinematicTestMotion/MoveType RigidbodyMovePosition
::GlobalNamespace::KinematicTestMotion::MoveType GlobalNamespace::KinematicTestMotion::MoveType::_get_RigidbodyMovePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::MoveType::_get_RigidbodyMovePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::KinematicTestMotion::MoveType>("", "KinematicTestMotion/MoveType", "RigidbodyMovePosition"));
}
// Autogenerated static field setter
// Set static field: static public KinematicTestMotion/MoveType RigidbodyMovePosition
void GlobalNamespace::KinematicTestMotion::MoveType::_set_RigidbodyMovePosition(::GlobalNamespace::KinematicTestMotion::MoveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::MoveType::_set_RigidbodyMovePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KinematicTestMotion/MoveType", "RigidbodyMovePosition", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::KinematicTestMotion::MoveType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KinematicTestMotion::MoveType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TestJoinPrivateRoomButton
#include "GlobalNamespace/TestJoinPrivateRoomButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: TestScript
#include "GlobalNamespace/TestScript.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject testDelete
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TestScript::dyn_testDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestScript::dyn_testDelete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testDelete"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestScript.get_callbackOrder
int GlobalNamespace::TestScript::get_callbackOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestScript::get_callbackOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_callbackOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UIPlayerLine
#include "GlobalNamespace/UIPlayerLine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AmbientSoundRandomizer
#include "GlobalNamespace/AmbientSoundRandomizer.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource[] audioSources
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioSource*>& GlobalNamespace::AmbientSoundRandomizer::dyn_audioSources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmbientSoundRandomizer::dyn_audioSources");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSources"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioSource*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] audioClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::AmbientSoundRandomizer::dyn_audioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmbientSoundRandomizer::dyn_audioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single baseTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmbientSoundRandomizer::dyn_baseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmbientSoundRandomizer::dyn_baseTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single randomModifier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmbientSoundRandomizer::dyn_randomModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmbientSoundRandomizer::dyn_randomModifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomModifier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timer
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmbientSoundRandomizer::dyn_timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmbientSoundRandomizer::dyn_timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timerTarget
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmbientSoundRandomizer::dyn_timerTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmbientSoundRandomizer::dyn_timerTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timerTarget"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmbientSoundRandomizer.Button_Cache
void GlobalNamespace::AmbientSoundRandomizer::Button_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmbientSoundRandomizer::Button_Cache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Button_Cache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmbientSoundRandomizer.Awake
void GlobalNamespace::AmbientSoundRandomizer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmbientSoundRandomizer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmbientSoundRandomizer.Update
void GlobalNamespace::AmbientSoundRandomizer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmbientSoundRandomizer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmbientSoundRandomizer.SetTarget
void GlobalNamespace::AmbientSoundRandomizer::SetTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmbientSoundRandomizer::SetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ArrayUtils
#include "GlobalNamespace/ArrayUtils.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AudioLooper
#include "GlobalNamespace/AudioLooper.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::AudioLooper::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLooper::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip loopClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::AudioLooper::dyn_loopClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLooper::dyn_loopClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] interjectionClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::AudioLooper::dyn_interjectionClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLooper::dyn_interjectionClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interjectionClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single interjectionLikelyhood
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioLooper::dyn_interjectionLikelyhood() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLooper::dyn_interjectionLikelyhood");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interjectionLikelyhood"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioLooper.Awake
void GlobalNamespace::AudioLooper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLooper::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioLooper*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioLooper.Update
void GlobalNamespace::AudioLooper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLooper::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AverageVector3
#include "GlobalNamespace/AverageVector3.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<AverageVector3/Sample> samples
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::AverageVector3::Sample>*& GlobalNamespace::AverageVector3::dyn_samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AverageVector3::dyn_samples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "samples"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::AverageVector3::Sample>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timeWindow
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AverageVector3::dyn_timeWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AverageVector3::dyn_timeWindow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeWindow"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AverageVector3.AddSample
void GlobalNamespace::AverageVector3::AddSample(::UnityEngine::Vector3 sample, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AverageVector3::AddSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sample), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sample, time);
}
// Autogenerated method: AverageVector3.GetAverage
::UnityEngine::Vector3 GlobalNamespace::AverageVector3::GetAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AverageVector3::GetAverage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAverage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: AverageVector3.Clear
void GlobalNamespace::AverageVector3::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AverageVector3::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AverageVector3.RefreshSamples
void GlobalNamespace::AverageVector3::RefreshSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AverageVector3::RefreshSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BacktraceManager
#include "GlobalNamespace/BacktraceManager.hpp"
// Including type: BacktraceManager/<>c
#include "GlobalNamespace/BacktraceManager_--c.hpp"
// Including type: Backtrace.Unity.Model.BacktraceData
#include "Backtrace/Unity/Model/BacktraceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double backtraceSampleRate
[[deprecated("Use field access instead!")]] double& GlobalNamespace::BacktraceManager::dyn_backtraceSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BacktraceManager::dyn_backtraceSampleRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backtraceSampleRate"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BacktraceManager.Awake
void GlobalNamespace::BacktraceManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BacktraceManager::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BacktraceManager*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BacktraceManager.Start
void GlobalNamespace::BacktraceManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BacktraceManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BacktraceManager.<Awake>b__1_0
::Backtrace::Unity::Model::BacktraceData* GlobalNamespace::BacktraceManager::$Awake$b__1_0(::Backtrace::Unity::Model::BacktraceData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BacktraceManager::<Awake>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__1_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Backtrace::Unity::Model::BacktraceData*, false>(this, ___internal__method, data);
}
// Autogenerated method: BacktraceManager.<Start>b__2_0
void GlobalNamespace::BacktraceManager::$Start$b__2_0(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BacktraceManager::<Start>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BacktraceManager/<>c
#include "GlobalNamespace/BacktraceManager_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BacktraceManager/<>c <>9
::GlobalNamespace::BacktraceManager::$$c* GlobalNamespace::BacktraceManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BacktraceManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::BacktraceManager::$$c*>("", "BacktraceManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BacktraceManager/<>c <>9
void GlobalNamespace::BacktraceManager::$$c::_set_$$9(::GlobalNamespace::BacktraceManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BacktraceManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BacktraceManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<PlayFab.PlayFabError> <>9__2_1
::System::Action_1<::PlayFab::PlayFabError*>* GlobalNamespace::BacktraceManager::$$c::_get_$$9__2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BacktraceManager::$$c::_get_$$9__2_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::PlayFab::PlayFabError*>*>("", "BacktraceManager/<>c", "<>9__2_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<PlayFab.PlayFabError> <>9__2_1
void GlobalNamespace::BacktraceManager::$$c::_set_$$9__2_1(::System::Action_1<::PlayFab::PlayFabError*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BacktraceManager::$$c::_set_$$9__2_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BacktraceManager/<>c", "<>9__2_1", value)));
}
// Autogenerated method: BacktraceManager/<>c..cctor
void GlobalNamespace::BacktraceManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BacktraceManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BacktraceManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BacktraceManager/<>c.<Start>b__2_1
void GlobalNamespace::BacktraceManager::$$c::$Start$b__2_1(::PlayFab::PlayFabError* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BacktraceManager::$$c::<Start>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__2_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BasePageHandler
#include "GlobalNamespace/BasePageHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <selectedIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BasePageHandler::dyn_$selectedIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::dyn_$selectedIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<selectedIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <currentPage>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BasePageHandler::dyn_$currentPage$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::dyn_$currentPage$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentPage>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <pages>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BasePageHandler::dyn_$pages$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::dyn_$pages$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pages>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <maxEntires>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BasePageHandler::dyn_$maxEntires$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::dyn_$maxEntires$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<maxEntires>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BasePageHandler.get_selectedIndex
int GlobalNamespace::BasePageHandler::get_selectedIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::get_selectedIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BasePageHandler.set_selectedIndex
void GlobalNamespace::BasePageHandler::set_selectedIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::set_selectedIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectedIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BasePageHandler.get_currentPage
int GlobalNamespace::BasePageHandler::get_currentPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::get_currentPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BasePageHandler.set_currentPage
void GlobalNamespace::BasePageHandler::set_currentPage(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::set_currentPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BasePageHandler.get_pages
int GlobalNamespace::BasePageHandler::get_pages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::get_pages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BasePageHandler.set_pages
void GlobalNamespace::BasePageHandler::set_pages(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::set_pages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BasePageHandler.get_maxEntires
int GlobalNamespace::BasePageHandler::get_maxEntires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::get_maxEntires");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxEntires", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BasePageHandler.set_maxEntires
void GlobalNamespace::BasePageHandler::set_maxEntires(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::set_maxEntires");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxEntires", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BasePageHandler.get_pageSize
int GlobalNamespace::BasePageHandler::get_pageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::get_pageSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BasePageHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BasePageHandler.get_entriesCount
int GlobalNamespace::BasePageHandler::get_entriesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::get_entriesCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BasePageHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BasePageHandler.Start
void GlobalNamespace::BasePageHandler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BasePageHandler*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasePageHandler.SelectEntryOnPage
void GlobalNamespace::BasePageHandler::SelectEntryOnPage(int entryIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::SelectEntryOnPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectEntryOnPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entryIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entryIndex);
}
// Autogenerated method: BasePageHandler.SelectEntryFromIndex
void GlobalNamespace::BasePageHandler::SelectEntryFromIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::SelectEntryFromIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectEntryFromIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: BasePageHandler.ChangePage
void GlobalNamespace::BasePageHandler::ChangePage(bool left) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::ChangePage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangePage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, left);
}
// Autogenerated method: BasePageHandler.SetPage
void GlobalNamespace::BasePageHandler::SetPage(int page) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::SetPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(page)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, page);
}
// Autogenerated method: BasePageHandler.ShowPage
void GlobalNamespace::BasePageHandler::ShowPage(int selectedPage, int startIndex, int endIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::ShowPage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BasePageHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectedPage, startIndex, endIndex);
}
// Autogenerated method: BasePageHandler.PageEntrySelected
void GlobalNamespace::BasePageHandler::PageEntrySelected(int pageEntry, int selectionIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasePageHandler::PageEntrySelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BasePageHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pageEntry, selectionIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BetterBaker
#include "GlobalNamespace/BetterBaker.hpp"
// Including type: BetterBaker/LightMapMap
#include "GlobalNamespace/BetterBaker_LightMapMap.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String bakeryLightmapDirectory
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BetterBaker::dyn_bakeryLightmapDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterBaker::dyn_bakeryLightmapDirectory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bakeryLightmapDirectory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String dayNightLightmapsDirectory
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BetterBaker::dyn_dayNightLightmapsDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterBaker::dyn_dayNightLightmapsDirectory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNightLightmapsDirectory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] allLights
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::BetterBaker::dyn_allLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterBaker::dyn_allLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allLights"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BetterBakerPositionOverrides
#include "GlobalNamespace/BetterBakerPositionOverrides.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BetterBakerPositionOverrides/OverridePosition> overridePositions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BetterBakerPositionOverrides::OverridePosition>*& GlobalNamespace::BetterBakerPositionOverrides::dyn_overridePositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterBakerPositionOverrides::dyn_overridePositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overridePositions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BetterBakerPositionOverrides::OverridePosition>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BetterBakerSettings
#include "GlobalNamespace/BetterBakerSettings.hpp"
// Including type: BetterBakerSettings/LightMapMap
#include "GlobalNamespace/BetterBakerSettings_LightMapMap.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] lightMapMaps
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::BetterBakerSettings::dyn_lightMapMaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterBakerSettings::dyn_lightMapMaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightMapMaps"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BitPackUtils
#include "GlobalNamespace/BitPackUtils.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BitPackUtils.PackRotation
uint GlobalNamespace::BitPackUtils::PackRotation(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BitPackUtils::PackRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BitPackUtils", "PackRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: BitPackUtils.UnpackRotation
::UnityEngine::Quaternion GlobalNamespace::BitPackUtils::UnpackRotation(uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BitPackUtils::UnpackRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BitPackUtils", "UnpackRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ICallBack
#include "GlobalNamespace/ICallBack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ICallBack.CallBack
void GlobalNamespace::ICallBack::CallBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ICallBack::CallBack");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ICallBack*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ColorUtils
#include "GlobalNamespace/ColorUtils.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte kMaxByteForOverexposedColor
uint8_t GlobalNamespace::ColorUtils::_get_kMaxByteForOverexposedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorUtils::_get_kMaxByteForOverexposedColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "ColorUtils", "kMaxByteForOverexposedColor"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kMaxByteForOverexposedColor
void GlobalNamespace::ColorUtils::_set_kMaxByteForOverexposedColor(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorUtils::_set_kMaxByteForOverexposedColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ColorUtils", "kMaxByteForOverexposedColor", value));
}
// Autogenerated method: ColorUtils.ComposeHDR
::UnityEngine::Color GlobalNamespace::ColorUtils::ComposeHDR(::UnityEngine::Color baseColor, float intensity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorUtils::ComposeHDR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ColorUtils", "ComposeHDR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseColor), ::il2cpp_utils::ExtractType(intensity)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseColor, intensity);
}
// Autogenerated method: ColorUtils.DecomposeHDR
::System::ValueTuple_2<::UnityEngine::Color, float> GlobalNamespace::ColorUtils::DecomposeHDR(::UnityEngine::Color hdrColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorUtils::DecomposeHDR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ColorUtils", "DecomposeHDR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hdrColor)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<::UnityEngine::Color, float>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hdrColor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ComponentUtils
#include "GlobalNamespace/ComponentUtils.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Behaviour
#include "UnityEngine/Behaviour.hpp"
// Including type: UnityEngine.Hash128
#include "UnityEngine/Hash128.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] kHashBits
::ArrayW<uint> GlobalNamespace::ComponentUtils::_get_kHashBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ComponentUtils::_get_kHashBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("", "ComponentUtils", "kHashBits"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] kHashBits
void GlobalNamespace::ComponentUtils::_set_kHashBits(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ComponentUtils::_set_kHashBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ComponentUtils", "kHashBits", value));
}
// Autogenerated method: ComponentUtils.ComputeStaticHash128
::UnityEngine::Hash128 GlobalNamespace::ComponentUtils::ComputeStaticHash128(::UnityEngine::Component* c, ::StringW k) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ComponentUtils::ComputeStaticHash128");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ComponentUtils", "ComputeStaticHash128", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(k)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Hash128, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c, k);
}
// Autogenerated method: ComponentUtils.ComputeStaticHash128
::UnityEngine::Hash128 GlobalNamespace::ComponentUtils::ComputeStaticHash128(::UnityEngine::Component* c, int k) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ComponentUtils::ComputeStaticHash128");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ComponentUtils", "ComputeStaticHash128", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(k)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Hash128, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c, k);
}
// Autogenerated method: ComponentUtils..cctor
void GlobalNamespace::ComponentUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ComponentUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ComponentUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: CompositeTriggerEvents
#include "GlobalNamespace/CompositeTriggerEvents.hpp"
// Including type: CompositeTriggerEvents/TriggerEvent
#include "GlobalNamespace/CompositeTriggerEvents_TriggerEvent.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: TriggerEventNotifier
#include "GlobalNamespace/TriggerEventNotifier.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private CompositeTriggerEvents/TriggerEvent CompositeTriggerEnter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CompositeTriggerEvents::TriggerEvent*& GlobalNamespace::CompositeTriggerEvents::dyn_CompositeTriggerEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::dyn_CompositeTriggerEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompositeTriggerEnter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CompositeTriggerEvents::TriggerEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CompositeTriggerEvents/TriggerEvent CompositeTriggerExit
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CompositeTriggerEvents::TriggerEvent*& GlobalNamespace::CompositeTriggerEvents::dyn_CompositeTriggerExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::dyn_CompositeTriggerExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompositeTriggerExit"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CompositeTriggerEvents::TriggerEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Collider> individualTriggerColliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& GlobalNamespace::CompositeTriggerEvents::dyn_individualTriggerColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::dyn_individualTriggerColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "individualTriggerColliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TriggerEventNotifier> triggerEventNotifiers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::TriggerEventNotifier*>*& GlobalNamespace::CompositeTriggerEvents::dyn_triggerEventNotifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::dyn_triggerEventNotifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triggerEventNotifiers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::TriggerEventNotifier*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Collider,System.Int32> overlapMask
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, int>*& GlobalNamespace::CompositeTriggerEvents::dyn_overlapMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::dyn_overlapMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overlapMask"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Collider*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CompositeTriggerEvents.add_CompositeTriggerEnter
void GlobalNamespace::CompositeTriggerEvents::add_CompositeTriggerEnter(::GlobalNamespace::CompositeTriggerEvents::TriggerEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::add_CompositeTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_CompositeTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CompositeTriggerEvents.remove_CompositeTriggerEnter
void GlobalNamespace::CompositeTriggerEvents::remove_CompositeTriggerEnter(::GlobalNamespace::CompositeTriggerEvents::TriggerEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::remove_CompositeTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_CompositeTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CompositeTriggerEvents.add_CompositeTriggerExit
void GlobalNamespace::CompositeTriggerEvents::add_CompositeTriggerExit(::GlobalNamespace::CompositeTriggerEvents::TriggerEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::add_CompositeTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_CompositeTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CompositeTriggerEvents.remove_CompositeTriggerExit
void GlobalNamespace::CompositeTriggerEvents::remove_CompositeTriggerExit(::GlobalNamespace::CompositeTriggerEvents::TriggerEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::remove_CompositeTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_CompositeTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CompositeTriggerEvents.Awake
void GlobalNamespace::CompositeTriggerEvents::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CompositeTriggerEvents.OnDestroy
void GlobalNamespace::CompositeTriggerEvents::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CompositeTriggerEvents.TriggerEnterReceiver
void GlobalNamespace::CompositeTriggerEvents::TriggerEnterReceiver(::GlobalNamespace::TriggerEventNotifier* notifier, ::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::TriggerEnterReceiver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerEnterReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notifier), ::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, notifier, other);
}
// Autogenerated method: CompositeTriggerEvents.TriggerExitReceiver
void GlobalNamespace::CompositeTriggerEvents::TriggerExitReceiver(::GlobalNamespace::TriggerEventNotifier* notifier, ::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::TriggerExitReceiver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerExitReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notifier), ::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, notifier, other);
}
// Autogenerated method: CompositeTriggerEvents.CompositeTriggerEnterReceiver
void GlobalNamespace::CompositeTriggerEvents::CompositeTriggerEnterReceiver(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::CompositeTriggerEnterReceiver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompositeTriggerEnterReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: CompositeTriggerEvents.CompositeTriggerExitReceiver
void GlobalNamespace::CompositeTriggerEvents::CompositeTriggerExitReceiver(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::CompositeTriggerExitReceiver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompositeTriggerExitReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: CompositeTriggerEvents.TestMaskIndex
bool GlobalNamespace::CompositeTriggerEvents::TestMaskIndex(int mask, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::TestMaskIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestMaskIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mask, index);
}
// Autogenerated method: CompositeTriggerEvents.SetMaskIndexTrue
int GlobalNamespace::CompositeTriggerEvents::SetMaskIndexTrue(int mask, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::SetMaskIndexTrue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaskIndexTrue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, mask, index);
}
// Autogenerated method: CompositeTriggerEvents.SetMaskIndexFalse
int GlobalNamespace::CompositeTriggerEvents::SetMaskIndexFalse(int mask, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::SetMaskIndexFalse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaskIndexFalse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, mask, index);
}
// Autogenerated method: CompositeTriggerEvents.MaskToString
::StringW GlobalNamespace::CompositeTriggerEvents::MaskToString(int mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::MaskToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaskToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, mask);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CompositeTriggerEvents/TriggerEvent
#include "GlobalNamespace/CompositeTriggerEvents_TriggerEvent.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CompositeTriggerEvents/TriggerEvent.Invoke
void GlobalNamespace::CompositeTriggerEvents::TriggerEvent::Invoke(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::TriggerEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CompositeTriggerEvents::TriggerEvent*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated method: CompositeTriggerEvents/TriggerEvent.BeginInvoke
::System::IAsyncResult* GlobalNamespace::CompositeTriggerEvents::TriggerEvent::BeginInvoke(::UnityEngine::Collider* collider, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::TriggerEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CompositeTriggerEvents::TriggerEvent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, collider, callback, object);
}
// Autogenerated method: CompositeTriggerEvents/TriggerEvent.EndInvoke
void GlobalNamespace::CompositeTriggerEvents::TriggerEvent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeTriggerEvents::TriggerEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CompositeTriggerEvents::TriggerEvent*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DebugHudStats
#include "GlobalNamespace/DebugHudStats.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private DebugHudStats _instance
::GlobalNamespace::DebugHudStats* GlobalNamespace::DebugHudStats::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DebugHudStats*>("", "DebugHudStats", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private DebugHudStats _instance
void GlobalNamespace::DebugHudStats::_set__instance(::GlobalNamespace::DebugHudStats* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugHudStats", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text text
[[deprecated("Use field access instead!")]] ::TMPro::TMP_Text*& GlobalNamespace::DebugHudStats::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text fpsWarning
[[deprecated("Use field access instead!")]] ::TMPro::TMP_Text*& GlobalNamespace::DebugHudStats::dyn_fpsWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::dyn_fpsWarning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fpsWarning"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single delayUpdateRate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DebugHudStats::dyn_delayUpdateRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::dyn_delayUpdateRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delayUpdateRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single updateTimer
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DebugHudStats::dyn_updateTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::dyn_updateTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateTimer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sessionAnytrackingLost
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DebugHudStats::dyn_sessionAnytrackingLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::dyn_sessionAnytrackingLost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sessionAnytrackingLost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single last30SecondsTrackingLost
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DebugHudStats::dyn_last30SecondsTrackingLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::dyn_last30SecondsTrackingLost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "last30SecondsTrackingLost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single firstAwake
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DebugHudStats::dyn_firstAwake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::dyn_firstAwake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstAwake"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean wasTrackingLost
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DebugHudStats::dyn_wasTrackingLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::dyn_wasTrackingLost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasTrackingLost"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean leftHandTracked
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DebugHudStats::dyn_leftHandTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::dyn_leftHandTracked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandTracked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean rightHandTracked
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DebugHudStats::dyn_rightHandTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::dyn_rightHandTracked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandTracked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder builder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& GlobalNamespace::DebugHudStats::dyn_builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::dyn_builder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "builder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> logMessages
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::DebugHudStats::dyn_logMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::dyn_logMessages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logMessages"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean buttonDown
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DebugHudStats::dyn_buttonDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::dyn_buttonDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonDown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean showLog
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DebugHudStats::dyn_showLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::dyn_showLog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showLog"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lowFps
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DebugHudStats::dyn_lowFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::dyn_lowFps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lowFps"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugHudStats.get_Instance
::GlobalNamespace::DebugHudStats* GlobalNamespace::DebugHudStats::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DebugHudStats", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DebugHudStats*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: DebugHudStats.Awake
void GlobalNamespace::DebugHudStats::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugHudStats.OnDestroy
void GlobalNamespace::DebugHudStats::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugHudStats.Update
void GlobalNamespace::DebugHudStats::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugHudStats.OnEnable
void GlobalNamespace::DebugHudStats::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugHudStats.LogMessageReceived
void GlobalNamespace::DebugHudStats::LogMessageReceived(::StringW condition, ::StringW stackTrace, ::UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::LogMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, condition, stackTrace, type);
}
// Autogenerated method: DebugHudStats.getColorStringFromLogType
::StringW GlobalNamespace::DebugHudStats::getColorStringFromLogType(::UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::getColorStringFromLogType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getColorStringFromLogType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, type);
}
// Autogenerated method: DebugHudStats.OnDisable
void GlobalNamespace::DebugHudStats::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugHudStats::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DelayedDestroyPooledObj
#include "GlobalNamespace/DelayedDestroyPooledObj.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single destroyDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DelayedDestroyPooledObj::dyn_destroyDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DelayedDestroyPooledObj::dyn_destroyDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destroyDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timeToDie
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DelayedDestroyPooledObj::dyn_timeToDie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DelayedDestroyPooledObj::dyn_timeToDie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeToDie"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DelayedDestroyPooledObj.OnEnable
void GlobalNamespace::DelayedDestroyPooledObj::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DelayedDestroyPooledObj::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DelayedDestroyPooledObj.LateUpdate
void GlobalNamespace::DelayedDestroyPooledObj::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DelayedDestroyPooledObj::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: EchoUtils
#include "GlobalNamespace/EchoUtils.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: EnumFlagsAttribute
#include "GlobalNamespace/EnumFlagsAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FlagForBaking
#include "GlobalNamespace/FlagForBaking.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableForBaking
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FlagForBaking::dyn_enableForBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForBaking::dyn_enableForBaking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableForBaking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FlagForLighting
#include "GlobalNamespace/FlagForLighting.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public FlagForLighting/TimeOfDay myTimeOfDay
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FlagForLighting::TimeOfDay& GlobalNamespace::FlagForLighting::dyn_myTimeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::dyn_myTimeOfDay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myTimeOfDay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FlagForLighting::TimeOfDay*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FlagForLighting/TimeOfDay
#include "GlobalNamespace/FlagForLighting.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FlagForLighting/TimeOfDay Sunrise
::GlobalNamespace::FlagForLighting::TimeOfDay GlobalNamespace::FlagForLighting::TimeOfDay::_get_Sunrise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_get_Sunrise");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FlagForLighting::TimeOfDay>("", "FlagForLighting/TimeOfDay", "Sunrise"));
}
// Autogenerated static field setter
// Set static field: static public FlagForLighting/TimeOfDay Sunrise
void GlobalNamespace::FlagForLighting::TimeOfDay::_set_Sunrise(::GlobalNamespace::FlagForLighting::TimeOfDay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_set_Sunrise");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FlagForLighting/TimeOfDay", "Sunrise", value));
}
// Autogenerated static field getter
// Get static field: static public FlagForLighting/TimeOfDay TenAM
::GlobalNamespace::FlagForLighting::TimeOfDay GlobalNamespace::FlagForLighting::TimeOfDay::_get_TenAM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_get_TenAM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FlagForLighting::TimeOfDay>("", "FlagForLighting/TimeOfDay", "TenAM"));
}
// Autogenerated static field setter
// Set static field: static public FlagForLighting/TimeOfDay TenAM
void GlobalNamespace::FlagForLighting::TimeOfDay::_set_TenAM(::GlobalNamespace::FlagForLighting::TimeOfDay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_set_TenAM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FlagForLighting/TimeOfDay", "TenAM", value));
}
// Autogenerated static field getter
// Get static field: static public FlagForLighting/TimeOfDay Noon
::GlobalNamespace::FlagForLighting::TimeOfDay GlobalNamespace::FlagForLighting::TimeOfDay::_get_Noon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_get_Noon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FlagForLighting::TimeOfDay>("", "FlagForLighting/TimeOfDay", "Noon"));
}
// Autogenerated static field setter
// Set static field: static public FlagForLighting/TimeOfDay Noon
void GlobalNamespace::FlagForLighting::TimeOfDay::_set_Noon(::GlobalNamespace::FlagForLighting::TimeOfDay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_set_Noon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FlagForLighting/TimeOfDay", "Noon", value));
}
// Autogenerated static field getter
// Get static field: static public FlagForLighting/TimeOfDay ThreePM
::GlobalNamespace::FlagForLighting::TimeOfDay GlobalNamespace::FlagForLighting::TimeOfDay::_get_ThreePM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_get_ThreePM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FlagForLighting::TimeOfDay>("", "FlagForLighting/TimeOfDay", "ThreePM"));
}
// Autogenerated static field setter
// Set static field: static public FlagForLighting/TimeOfDay ThreePM
void GlobalNamespace::FlagForLighting::TimeOfDay::_set_ThreePM(::GlobalNamespace::FlagForLighting::TimeOfDay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_set_ThreePM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FlagForLighting/TimeOfDay", "ThreePM", value));
}
// Autogenerated static field getter
// Get static field: static public FlagForLighting/TimeOfDay Sunset
::GlobalNamespace::FlagForLighting::TimeOfDay GlobalNamespace::FlagForLighting::TimeOfDay::_get_Sunset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_get_Sunset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FlagForLighting::TimeOfDay>("", "FlagForLighting/TimeOfDay", "Sunset"));
}
// Autogenerated static field setter
// Set static field: static public FlagForLighting/TimeOfDay Sunset
void GlobalNamespace::FlagForLighting::TimeOfDay::_set_Sunset(::GlobalNamespace::FlagForLighting::TimeOfDay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_set_Sunset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FlagForLighting/TimeOfDay", "Sunset", value));
}
// Autogenerated static field getter
// Get static field: static public FlagForLighting/TimeOfDay Night
::GlobalNamespace::FlagForLighting::TimeOfDay GlobalNamespace::FlagForLighting::TimeOfDay::_get_Night() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_get_Night");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FlagForLighting::TimeOfDay>("", "FlagForLighting/TimeOfDay", "Night"));
}
// Autogenerated static field setter
// Set static field: static public FlagForLighting/TimeOfDay Night
void GlobalNamespace::FlagForLighting::TimeOfDay::_set_Night(::GlobalNamespace::FlagForLighting::TimeOfDay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_set_Night");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FlagForLighting/TimeOfDay", "Night", value));
}
// Autogenerated static field getter
// Get static field: static public FlagForLighting/TimeOfDay RainingDay
::GlobalNamespace::FlagForLighting::TimeOfDay GlobalNamespace::FlagForLighting::TimeOfDay::_get_RainingDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_get_RainingDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FlagForLighting::TimeOfDay>("", "FlagForLighting/TimeOfDay", "RainingDay"));
}
// Autogenerated static field setter
// Set static field: static public FlagForLighting/TimeOfDay RainingDay
void GlobalNamespace::FlagForLighting::TimeOfDay::_set_RainingDay(::GlobalNamespace::FlagForLighting::TimeOfDay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_set_RainingDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FlagForLighting/TimeOfDay", "RainingDay", value));
}
// Autogenerated static field getter
// Get static field: static public FlagForLighting/TimeOfDay RainingNight
::GlobalNamespace::FlagForLighting::TimeOfDay GlobalNamespace::FlagForLighting::TimeOfDay::_get_RainingNight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_get_RainingNight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FlagForLighting::TimeOfDay>("", "FlagForLighting/TimeOfDay", "RainingNight"));
}
// Autogenerated static field setter
// Set static field: static public FlagForLighting/TimeOfDay RainingNight
void GlobalNamespace::FlagForLighting::TimeOfDay::_set_RainingNight(::GlobalNamespace::FlagForLighting::TimeOfDay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_set_RainingNight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FlagForLighting/TimeOfDay", "RainingNight", value));
}
// Autogenerated static field getter
// Get static field: static public FlagForLighting/TimeOfDay None
::GlobalNamespace::FlagForLighting::TimeOfDay GlobalNamespace::FlagForLighting::TimeOfDay::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FlagForLighting::TimeOfDay>("", "FlagForLighting/TimeOfDay", "None"));
}
// Autogenerated static field setter
// Set static field: static public FlagForLighting/TimeOfDay None
void GlobalNamespace::FlagForLighting::TimeOfDay::_set_None(::GlobalNamespace::FlagForLighting::TimeOfDay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FlagForLighting/TimeOfDay", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FlagForLighting::TimeOfDay::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForLighting::TimeOfDay::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FlagForReflectionProbe
#include "GlobalNamespace/FlagForReflectionProbe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSimpleReflectionProbe
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FlagForReflectionProbe::dyn_enableSimpleReflectionProbe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlagForReflectionProbe::dyn_enableSimpleReflectionProbe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSimpleReflectionProbe"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GizmosUtils
#include "GlobalNamespace/GizmosUtils.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GizmosUtils.DrawCubeTRS
void GlobalNamespace::GizmosUtils::DrawCubeTRS(::UnityEngine::Vector3 t, ::UnityEngine::Quaternion r, ::UnityEngine::Vector3 s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GizmosUtils::DrawCubeTRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GizmosUtils", "DrawCubeTRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, r, s);
}
// Autogenerated method: GizmosUtils.DrawWireCubeTRS
void GlobalNamespace::GizmosUtils::DrawWireCubeTRS(::UnityEngine::Vector3 t, ::UnityEngine::Quaternion r, ::UnityEngine::Vector3 s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GizmosUtils::DrawWireCubeTRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GizmosUtils", "DrawWireCubeTRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, r, s);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: JsonUtils
#include "GlobalNamespace/JsonUtils.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: LinqUtils
#include "GlobalNamespace/LinqUtils.hpp"
// Including type: LinqUtils/<DistinctBy>d__0`2
#include "GlobalNamespace/LinqUtils_-DistinctBy-d__0_2.hpp"
// Including type: LinqUtils/<Self>d__5`1
#include "GlobalNamespace/LinqUtils_-Self-d__5_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: LookAtTransform
#include "GlobalNamespace/LookAtTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform lookAt
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::LookAtTransform::dyn_lookAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LookAtTransform::dyn_lookAt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookAt"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LookAtTransform.Update
void GlobalNamespace::LookAtTransform::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LookAtTransform::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MaterialUVOffsetListSetter
#include "GlobalNamespace/MaterialUVOffsetListSetter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector2> uvOffsetList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector2>*& GlobalNamespace::MaterialUVOffsetListSetter::dyn_uvOffsetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MaterialUVOffsetListSetter::dyn_uvOffsetList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uvOffsetList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer meshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::MaterialUVOffsetListSetter::dyn_meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MaterialUVOffsetListSetter::dyn_meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock matPropertyBlock
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& GlobalNamespace::MaterialUVOffsetListSetter::dyn_matPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MaterialUVOffsetListSetter::dyn_matPropertyBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matPropertyBlock"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 shaderPropertyID
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MaterialUVOffsetListSetter::dyn_shaderPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MaterialUVOffsetListSetter::dyn_shaderPropertyID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shaderPropertyID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MaterialUVOffsetListSetter.Awake
void GlobalNamespace::MaterialUVOffsetListSetter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MaterialUVOffsetListSetter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MaterialUVOffsetListSetter.SetUVOffset
void GlobalNamespace::MaterialUVOffsetListSetter::SetUVOffset(int listIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MaterialUVOffsetListSetter::SetUVOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUVOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MathUtils
#include "GlobalNamespace/MathUtils.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MathUtils.Approx
bool GlobalNamespace::MathUtils::Approx(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, float epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::Approx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "Approx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, epsilon);
}
// Autogenerated method: MathUtils.Approx
bool GlobalNamespace::MathUtils::Approx(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b, float epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::Approx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "Approx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, epsilon);
}
// Autogenerated method: MathUtils.OrientedBoxCorners
::ArrayW<::UnityEngine::Vector3> GlobalNamespace::MathUtils::OrientedBoxCorners(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 size, ::UnityEngine::Quaternion angles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::OrientedBoxCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "OrientedBoxCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(angles)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, size, angles);
}
// Autogenerated method: MathUtils.OrientedBoxCornersNonAlloc
void GlobalNamespace::MathUtils::OrientedBoxCornersNonAlloc(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 size, ::UnityEngine::Quaternion angles, ::ArrayW<::UnityEngine::Vector3> array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::OrientedBoxCornersNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "OrientedBoxCornersNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(angles), ::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, size, angles, array, index);
}
// Autogenerated method: MathUtils.OrientedBoxContains
bool GlobalNamespace::MathUtils::OrientedBoxContains(::UnityEngine::Vector3 point, ::UnityEngine::Vector3 boxCenter, ::UnityEngine::Vector3 boxSize, ::UnityEngine::Quaternion boxAngles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::OrientedBoxContains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "OrientedBoxContains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(boxCenter), ::il2cpp_utils::ExtractType(boxSize), ::il2cpp_utils::ExtractType(boxAngles)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, boxCenter, boxSize, boxAngles);
}
// Autogenerated method: MathUtils.OrientedBoxSphereOverlap
int GlobalNamespace::MathUtils::OrientedBoxSphereOverlap(::UnityEngine::Vector3 center, float radius, ::UnityEngine::Vector3 boxCenter, ::UnityEngine::Vector3 boxSize, ::UnityEngine::Quaternion boxAngles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::OrientedBoxSphereOverlap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "OrientedBoxSphereOverlap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(boxCenter), ::il2cpp_utils::ExtractType(boxSize), ::il2cpp_utils::ExtractType(boxAngles)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, radius, boxCenter, boxSize, boxAngles);
}
// Autogenerated method: MathUtils.ClampVectorValues
::UnityEngine::Vector3 GlobalNamespace::MathUtils::ClampVectorValues(::UnityEngine::Vector3 v, ::UnityEngine::Vector3 min, ::UnityEngine::Vector3 max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::ClampVectorValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "ClampVectorValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v, min, max);
}
// Autogenerated method: MathUtils.Partition
::ArrayW<::UnityEngine::Bounds> GlobalNamespace::MathUtils::Partition(::UnityEngine::Bounds b, int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::Partition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "Partition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Bounds>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b, x, y, z);
}
// Autogenerated method: MathUtils.Validate
void GlobalNamespace::MathUtils::Validate(ByRef<::UnityEngine::Vector3> v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(v));
}
// Autogenerated method: MathUtils.ValidateTo
void GlobalNamespace::MathUtils::ValidateTo(ByRef<::UnityEngine::Quaternion> q, ::UnityEngine::Quaternion validForm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::ValidateTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "ValidateTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(validForm)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(q), validForm);
}
// Autogenerated method: MathUtils.ClampToReal
float GlobalNamespace::MathUtils::ClampToReal(float f, float min, float max, float epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::ClampToReal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "ClampToReal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f, min, max, epsilon);
}
// Autogenerated method: MathUtils.ClampApprox
float GlobalNamespace::MathUtils::ClampApprox(float f, float min, float max, float epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::ClampApprox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "ClampApprox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f, min, max, epsilon);
}
// Autogenerated method: MathUtils.Approx
bool GlobalNamespace::MathUtils::Approx(float a, float b, float epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::Approx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "Approx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, epsilon);
}
// Autogenerated method: MathUtils.Linear
float GlobalNamespace::MathUtils::Linear(float value, float min, float max, float newMin, float newMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::Linear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "Linear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max), ::il2cpp_utils::ExtractType(newMin), ::il2cpp_utils::ExtractType(newMax)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max, newMin, newMax);
}
// Autogenerated method: MathUtils.LinearUnclamped
float GlobalNamespace::MathUtils::LinearUnclamped(float value, float min, float max, float newMin, float newMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::LinearUnclamped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "LinearUnclamped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max), ::il2cpp_utils::ExtractType(newMin), ::il2cpp_utils::ExtractType(newMax)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max, newMin, newMax);
}
// Autogenerated method: MathUtils.GetCircleValue
float GlobalNamespace::MathUtils::GetCircleValue(float degrees) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::GetCircleValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "GetCircleValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(degrees)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, degrees);
}
// Autogenerated method: MathUtils.WeightedMaxVector
::UnityEngine::Vector3 GlobalNamespace::MathUtils::WeightedMaxVector(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, float eps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::WeightedMaxVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "WeightedMaxVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(eps)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, eps);
}
// Autogenerated method: MathUtils.MatchMagnitudeInDirection
::UnityEngine::Vector3 GlobalNamespace::MathUtils::MatchMagnitudeInDirection(::UnityEngine::Vector3 input, ::UnityEngine::Vector3 target, float eps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MathUtils::MatchMagnitudeInDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MathUtils", "MatchMagnitudeInDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(eps)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, target, eps);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MeshUtils
#include "GlobalNamespace/MeshUtils.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MeshUtils.CreateReadableMeshCopy
::UnityEngine::Mesh* GlobalNamespace::MeshUtils::CreateReadableMeshCopy(::UnityEngine::Mesh* sourceMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MeshUtils::CreateReadableMeshCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MeshUtils", "CreateReadableMeshCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceMesh)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceMesh);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ObjectPoolEvents
#include "GlobalNamespace/ObjectPoolEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ObjectPoolEvents.OnTaken
void GlobalNamespace::ObjectPoolEvents::OnTaken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPoolEvents::OnTaken");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ObjectPoolEvents*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectPoolEvents.OnReturned
void GlobalNamespace::ObjectPoolEvents::OnReturned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPoolEvents::OnReturned");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ObjectPoolEvents*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PoolUtils
#include "GlobalNamespace/PoolUtils.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PoolUtils.GameObjHashCode
int GlobalNamespace::PoolUtils::GameObjHashCode(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoolUtils::GameObjHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PoolUtils", "GameObjHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SinglePool
#include "GlobalNamespace/SinglePool.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject objectToPool
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SinglePool::dyn_objectToPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePool::dyn_objectToPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectToPool"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 initAmountToPool
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SinglePool::dyn_initAmountToPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePool::dyn_initAmountToPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initAmountToPool"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.Int32> pooledObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<int>*& GlobalNamespace::SinglePool::dyn_pooledObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePool::dyn_pooledObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pooledObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Stack`1<UnityEngine.GameObject> inactivePool
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::UnityEngine::GameObject*>*& GlobalNamespace::SinglePool::dyn_inactivePool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePool::dyn_inactivePool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inactivePool"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.GameObject> activePool
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::GameObject*>*& GlobalNamespace::SinglePool::dyn_activePool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePool::dyn_activePool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activePool"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject gameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SinglePool::dyn_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePool::dyn_gameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SinglePool.PrivAllocPooledObjects
void GlobalNamespace::SinglePool::PrivAllocPooledObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePool::PrivAllocPooledObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrivAllocPooledObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SinglePool.Initialize
void GlobalNamespace::SinglePool::Initialize(::UnityEngine::GameObject* gameObject_) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePool::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject_);
}
// Autogenerated method: SinglePool.Instantiate
::UnityEngine::GameObject* GlobalNamespace::SinglePool::Instantiate(bool setActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePool::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(setActive)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, setActive);
}
// Autogenerated method: SinglePool.Destroy
void GlobalNamespace::SinglePool::Destroy(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePool::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: SinglePool.PoolGUID
int GlobalNamespace::SinglePool::PoolGUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePool::PoolGUID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PoolGUID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: SinglePool.GetTotalCount
int GlobalNamespace::SinglePool::GetTotalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePool::GetTotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: SinglePool.GetActiveCount
int GlobalNamespace::SinglePool::GetActiveCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePool::GetActiveCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActiveCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: SinglePool.GetInactiveCount
int GlobalNamespace::SinglePool::GetInactiveCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePool::GetInactiveCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInactiveCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ObjectPools
#include "GlobalNamespace/ObjectPools.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SinglePool
#include "GlobalNamespace/SinglePool.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ObjectPools instance
::GlobalNamespace::ObjectPools* GlobalNamespace::ObjectPools::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ObjectPools*>("", "ObjectPools", "instance"));
}
// Autogenerated static field setter
// Set static field: static public ObjectPools instance
void GlobalNamespace::ObjectPools::_set_instance(::GlobalNamespace::ObjectPools* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectPools", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <initialized>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ObjectPools::dyn_$initialized$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::dyn_$initialized$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<initialized>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<SinglePool> pools
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::SinglePool*>*& GlobalNamespace::ObjectPools::dyn_pools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::dyn_pools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::SinglePool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,SinglePool> lookUp
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::SinglePool*>*& GlobalNamespace::ObjectPools::dyn_lookUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::dyn_lookUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookUp"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::SinglePool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObjectPools.get_initialized
bool GlobalNamespace::ObjectPools::get_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::get_initialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ObjectPools.set_initialized
void GlobalNamespace::ObjectPools::set_initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::set_initialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_initialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObjectPools.Awake
void GlobalNamespace::ObjectPools::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectPools.Start
void GlobalNamespace::ObjectPools::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectPools.InitializePools
void GlobalNamespace::ObjectPools::InitializePools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::InitializePools");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializePools", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectPools.DoesPoolExist
bool GlobalNamespace::ObjectPools::DoesPoolExist(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::DoesPoolExist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoesPoolExist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: ObjectPools.DoesPoolExist
bool GlobalNamespace::ObjectPools::DoesPoolExist(int hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::DoesPoolExist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoesPoolExist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hash);
}
// Autogenerated method: ObjectPools.GetPoolByHash
::GlobalNamespace::SinglePool* GlobalNamespace::ObjectPools::GetPoolByHash(int hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::GetPoolByHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoolByHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SinglePool*, false>(this, ___internal__method, hash);
}
// Autogenerated method: ObjectPools.GetPoolByObjectType
::GlobalNamespace::SinglePool* GlobalNamespace::ObjectPools::GetPoolByObjectType(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::GetPoolByObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoolByObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SinglePool*, false>(this, ___internal__method, obj);
}
// Autogenerated method: ObjectPools.Instantiate
::UnityEngine::GameObject* GlobalNamespace::ObjectPools::Instantiate(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, obj);
}
// Autogenerated method: ObjectPools.Instantiate
::UnityEngine::GameObject* GlobalNamespace::ObjectPools::Instantiate(int hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, hash);
}
// Autogenerated method: ObjectPools.Instantiate
::UnityEngine::GameObject* GlobalNamespace::ObjectPools::Instantiate(::UnityEngine::GameObject* obj, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, obj, position);
}
// Autogenerated method: ObjectPools.Instantiate
::UnityEngine::GameObject* GlobalNamespace::ObjectPools::Instantiate(int hash, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, hash, position);
}
// Autogenerated method: ObjectPools.Instantiate
::UnityEngine::GameObject* GlobalNamespace::ObjectPools::Instantiate(::UnityEngine::GameObject* obj, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, obj, position, rotation);
}
// Autogenerated method: ObjectPools.Instantiate
::UnityEngine::GameObject* GlobalNamespace::ObjectPools::Instantiate(::UnityEngine::GameObject* obj, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, obj, position, rotation, scale);
}
// Autogenerated method: ObjectPools.Destroy
void GlobalNamespace::ObjectPools::Destroy(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPools::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OnEnterPlay_Attribute
#include "GlobalNamespace/OnEnterPlay_Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OnPlayChange_BaseAttribute
#include "GlobalNamespace/OnPlayChange_BaseAttribute.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnPlayChange_BaseAttribute.OnEnterPlay
void GlobalNamespace::OnPlayChange_BaseAttribute::OnEnterPlay(::System::Reflection::FieldInfo* field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnPlayChange_BaseAttribute::OnEnterPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OnPlayChange_BaseAttribute*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, field);
}
// Autogenerated method: OnPlayChange_BaseAttribute.OnEnterPlay
void GlobalNamespace::OnPlayChange_BaseAttribute::OnEnterPlay(::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnPlayChange_BaseAttribute::OnEnterPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OnPlayChange_BaseAttribute*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OnEnterPlay_SetNull
#include "GlobalNamespace/OnEnterPlay_SetNull.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnEnterPlay_SetNull.OnEnterPlay
void GlobalNamespace::OnEnterPlay_SetNull::OnEnterPlay(::System::Reflection::FieldInfo* field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnEnterPlay_SetNull::OnEnterPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OnPlayChange_BaseAttribute*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, field);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnEnterPlay_Set
#include "GlobalNamespace/OnEnterPlay_Set.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OnEnterPlay_Set::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnEnterPlay_Set::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OnEnterPlay_Set.OnEnterPlay
void GlobalNamespace::OnEnterPlay_Set::OnEnterPlay(::System::Reflection::FieldInfo* field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnEnterPlay_Set::OnEnterPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OnPlayChange_BaseAttribute*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, field);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OnEnterPlay_SetNew
#include "GlobalNamespace/OnEnterPlay_SetNew.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnEnterPlay_SetNew.OnEnterPlay
void GlobalNamespace::OnEnterPlay_SetNew::OnEnterPlay(::System::Reflection::FieldInfo* field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnEnterPlay_SetNew::OnEnterPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OnPlayChange_BaseAttribute*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, field);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OnEnterPlay_Clear
#include "GlobalNamespace/OnEnterPlay_Clear.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnEnterPlay_Clear.OnEnterPlay
void GlobalNamespace::OnEnterPlay_Clear::OnEnterPlay(::System::Reflection::FieldInfo* field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnEnterPlay_Clear::OnEnterPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OnPlayChange_BaseAttribute*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, field);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OnEnterPlay_Run
#include "GlobalNamespace/OnEnterPlay_Run.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnEnterPlay_Run.OnEnterPlay
void GlobalNamespace::OnEnterPlay_Run::OnEnterPlay(::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnEnterPlay_Run::OnEnterPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OnPlayChange_BaseAttribute*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: EnterPlayID
#include "GlobalNamespace/EnterPlayID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 currentID
int GlobalNamespace::EnterPlayID::_get_currentID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayID::_get_currentID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnterPlayID", "currentID"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 currentID
void GlobalNamespace::EnterPlayID::_set_currentID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayID::_set_currentID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnterPlayID", "currentID", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 id
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EnterPlayID::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayID::dyn_id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnterPlayID.NextID
void GlobalNamespace::EnterPlayID::NextID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayID::NextID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EnterPlayID", "NextID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: EnterPlayID.GetCurrent
::GlobalNamespace::EnterPlayID GlobalNamespace::EnterPlayID::GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayID::GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EnterPlayID", "GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnterPlayID, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: EnterPlayID.get_IsCurrent
bool GlobalNamespace::EnterPlayID::get_IsCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayID::get_IsCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EnterPlayID..cctor
void GlobalNamespace::EnterPlayID::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayID::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EnterPlayID", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OnEnterPlaySystem
#include "GlobalNamespace/OnEnterPlaySystem.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnEnterPlaySystem.AddCallback
void GlobalNamespace::OnEnterPlaySystem::AddCallback(::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnEnterPlaySystem::AddCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OnEnterPlaySystem", "AddCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OnExitPlay_Attribute
#include "GlobalNamespace/OnExitPlay_Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OnExitPlay_SetNull
#include "GlobalNamespace/OnExitPlay_SetNull.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnExitPlay_SetNull.OnEnterPlay
void GlobalNamespace::OnExitPlay_SetNull::OnEnterPlay(::System::Reflection::FieldInfo* field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnExitPlay_SetNull::OnEnterPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OnPlayChange_BaseAttribute*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, field);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnExitPlay_Set
#include "GlobalNamespace/OnExitPlay_Set.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OnExitPlay_Set::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnExitPlay_Set::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OnExitPlay_Set.OnEnterPlay
void GlobalNamespace::OnExitPlay_Set::OnEnterPlay(::System::Reflection::FieldInfo* field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnExitPlay_Set::OnEnterPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OnPlayChange_BaseAttribute*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, field);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OnExitPlay_SetNew
#include "GlobalNamespace/OnExitPlay_SetNew.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnExitPlay_SetNew.OnEnterPlay
void GlobalNamespace::OnExitPlay_SetNew::OnEnterPlay(::System::Reflection::FieldInfo* field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnExitPlay_SetNew::OnEnterPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OnPlayChange_BaseAttribute*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, field);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OnExitPlay_Clear
#include "GlobalNamespace/OnExitPlay_Clear.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnExitPlay_Clear.OnEnterPlay
void GlobalNamespace::OnExitPlay_Clear::OnEnterPlay(::System::Reflection::FieldInfo* field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnExitPlay_Clear::OnEnterPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OnPlayChange_BaseAttribute*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, field);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OnExitPlay_Run
#include "GlobalNamespace/OnExitPlay_Run.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnExitPlay_Run.OnEnterPlay
void GlobalNamespace::OnExitPlay_Run::OnEnterPlay(::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnExitPlay_Run::OnEnterPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OnPlayChange_BaseAttribute*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PredicatableRandomRotation
#include "GlobalNamespace/PredicatableRandomRotation.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 rot
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::PredicatableRandomRotation::dyn_rot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PredicatableRandomRotation::dyn_rot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rot"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform source
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::PredicatableRandomRotation::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PredicatableRandomRotation::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PredicatableRandomRotation.Start
void GlobalNamespace::PredicatableRandomRotation::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PredicatableRandomRotation::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PredicatableRandomRotation.Update
void GlobalNamespace::PredicatableRandomRotation::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PredicatableRandomRotation::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ShaderHashId
#include "GlobalNamespace/ShaderHashId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _text
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ShaderHashId::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderHashId::dyn__text");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _hash
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ShaderHashId::dyn__hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderHashId::dyn__hash");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ShaderHashId.get_text
::StringW GlobalNamespace::ShaderHashId::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderHashId::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ShaderHashId.get_hash
int GlobalNamespace::ShaderHashId::get_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderHashId::get_hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ShaderHashId..ctor
GlobalNamespace::ShaderHashId::ShaderHashId(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderHashId::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: ShaderHashId.ToString
::StringW GlobalNamespace::ShaderHashId::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderHashId::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ShaderHashId.GetHashCode
int GlobalNamespace::ShaderHashId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderHashId::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SoundBankPlayer
#include "GlobalNamespace/SoundBankPlayer.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: SoundBankSO
#include "GlobalNamespace/SoundBankSO.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::SoundBankPlayer::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean playOnEnable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SoundBankPlayer::dyn_playOnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_playOnEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playOnEnable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean shuffleOrder
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SoundBankPlayer::dyn_shuffleOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_shuffleOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shuffleOrder"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SoundBankSO soundBank
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SoundBankSO*& GlobalNamespace::SoundBankPlayer::dyn_soundBank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_soundBank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundBank"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SoundBankSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup outputAudioMixerGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerGroup*& GlobalNamespace::SoundBankPlayer::dyn_outputAudioMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_outputAudioMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outputAudioMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean spatialize
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SoundBankPlayer::dyn_spatialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_spatialize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spatialize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean spatializePostEffects
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SoundBankPlayer::dyn_spatializePostEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_spatializePostEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spatializePostEffects"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean bypassEffects
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SoundBankPlayer::dyn_bypassEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_bypassEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bypassEffects"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean bypassListenerEffects
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SoundBankPlayer::dyn_bypassListenerEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_bypassListenerEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bypassListenerEffects"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean bypassReverbZones
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SoundBankPlayer::dyn_bypassReverbZones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_bypassReverbZones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bypassReverbZones"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 priority
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SoundBankPlayer::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spatialBlend
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SoundBankPlayer::dyn_spatialBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_spatialBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spatialBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single reverbZoneMix
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SoundBankPlayer::dyn_reverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_reverbZoneMix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverbZoneMix"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single dopplerLevel
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SoundBankPlayer::dyn_dopplerLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_dopplerLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dopplerLevel"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spread
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SoundBankPlayer::dyn_spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_spread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioRolloffMode rolloffMode
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioRolloffMode& GlobalNamespace::SoundBankPlayer::dyn_rolloffMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_rolloffMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rolloffMode"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioRolloffMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SoundBankPlayer::dyn_minDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_minDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SoundBankPlayer::dyn_maxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_maxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve customRolloffCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::SoundBankPlayer::dyn_customRolloffCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_customRolloffCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customRolloffCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nextIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SoundBankPlayer::dyn_nextIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_nextIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single playEndTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SoundBankPlayer::dyn_playEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_playEndTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playEndTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SoundBankPlayer/PlaylistEntry[] playlist
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SoundBankPlayer::PlaylistEntry>& GlobalNamespace::SoundBankPlayer::dyn_playlist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::dyn_playlist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playlist"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SoundBankPlayer::PlaylistEntry>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SoundBankPlayer.get_isPlaying
bool GlobalNamespace::SoundBankPlayer::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SoundBankPlayer.Awake
void GlobalNamespace::SoundBankPlayer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SoundBankPlayer.OnEnable
void GlobalNamespace::SoundBankPlayer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SoundBankPlayer.Play
void GlobalNamespace::SoundBankPlayer::Play(::System::Nullable_1<float> volumeOverride, ::System::Nullable_1<float> pitchOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankPlayer::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volumeOverride), ::il2cpp_utils::ExtractType(pitchOverride)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volumeOverride, pitchOverride);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SoundBankSO
#include "GlobalNamespace/SoundBankSO.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] sounds
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::SoundBankSO::dyn_sounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankSO::dyn_sounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sounds"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 volumeRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::SoundBankSO::dyn_volumeRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankSO::dyn_volumeRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 pitchRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::SoundBankSO::dyn_pitchRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundBankSO::dyn_pitchRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pitchRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SpatialUtils
#include "GlobalNamespace/SpatialUtils.hpp"
// Including type: UnityEngine.Vector3Int
#include "UnityEngine/Vector3Int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SpatialUtils.Grid3DToFlatIndex
int GlobalNamespace::SpatialUtils::Grid3DToFlatIndex(int x, int y, int z, int xMax, int yMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpatialUtils::Grid3DToFlatIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SpatialUtils", "Grid3DToFlatIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(xMax), ::il2cpp_utils::ExtractType(yMax)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z, xMax, yMax);
}
// Autogenerated method: SpatialUtils.Grid3DToFlatIndex
int GlobalNamespace::SpatialUtils::Grid3DToFlatIndex(::UnityEngine::Vector3Int g3d, int xMax, int yMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpatialUtils::Grid3DToFlatIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SpatialUtils", "Grid3DToFlatIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g3d), ::il2cpp_utils::ExtractType(xMax), ::il2cpp_utils::ExtractType(yMax)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, g3d, xMax, yMax);
}
// Autogenerated method: SpatialUtils.FlatIndexToGrid3D
::UnityEngine::Vector3Int GlobalNamespace::SpatialUtils::FlatIndexToGrid3D(int idx, int xMax, int yMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpatialUtils::FlatIndexToGrid3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SpatialUtils", "FlatIndexToGrid3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(xMax), ::il2cpp_utils::ExtractType(yMax)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3Int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, xMax, yMax);
}
