// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GameEvents
#include "GlobalNamespace/GameEvents.hpp"
// Including type: UnityEngine.Events.UnityEvent`1
#include "UnityEngine/Events/UnityEvent_1.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.UnityEvent`1<GorillaNetworking.GorillaKeyboardBindings> OnGorrillaKeyboardButtonPressedEvent
::UnityEngine::Events::UnityEvent_1<::GorillaNetworking::GorillaKeyboardBindings>* GlobalNamespace::GameEvents::_get_OnGorrillaKeyboardButtonPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameEvents::_get_OnGorrillaKeyboardButtonPressedEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityEvent_1<::GorillaNetworking::GorillaKeyboardBindings>*>("", "GameEvents", "OnGorrillaKeyboardButtonPressedEvent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.UnityEvent`1<GorillaNetworking.GorillaKeyboardBindings> OnGorrillaKeyboardButtonPressedEvent
void GlobalNamespace::GameEvents::_set_OnGorrillaKeyboardButtonPressedEvent(::UnityEngine::Events::UnityEvent_1<::GorillaNetworking::GorillaKeyboardBindings>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameEvents::_set_OnGorrillaKeyboardButtonPressedEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameEvents", "OnGorrillaKeyboardButtonPressedEvent", value));
}
// Autogenerated static field getter
// Get static field: static UnityEngine.Events.UnityEvent`1<System.String> ScreenTextChangedEvent
::UnityEngine::Events::UnityEvent_1<::StringW>* GlobalNamespace::GameEvents::_get_ScreenTextChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameEvents::_get_ScreenTextChangedEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityEvent_1<::StringW>*>("", "GameEvents", "ScreenTextChangedEvent"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.Events.UnityEvent`1<System.String> ScreenTextChangedEvent
void GlobalNamespace::GameEvents::_set_ScreenTextChangedEvent(::UnityEngine::Events::UnityEvent_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameEvents::_set_ScreenTextChangedEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameEvents", "ScreenTextChangedEvent", value));
}
// Autogenerated static field getter
// Get static field: static UnityEngine.Events.UnityEvent`1<UnityEngine.Material[]> ScreenTextMaterialsEvent
::UnityEngine::Events::UnityEvent_1<::ArrayW<::UnityEngine::Material*>>* GlobalNamespace::GameEvents::_get_ScreenTextMaterialsEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameEvents::_get_ScreenTextMaterialsEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityEvent_1<::ArrayW<::UnityEngine::Material*>>*>("", "GameEvents", "ScreenTextMaterialsEvent"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.Events.UnityEvent`1<UnityEngine.Material[]> ScreenTextMaterialsEvent
void GlobalNamespace::GameEvents::_set_ScreenTextMaterialsEvent(::UnityEngine::Events::UnityEvent_1<::ArrayW<::UnityEngine::Material*>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameEvents::_set_ScreenTextMaterialsEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameEvents", "ScreenTextMaterialsEvent", value));
}
// Autogenerated static field getter
// Get static field: static UnityEngine.Events.UnityEvent`1<System.String> FunctionSelectTextChangedEvent
::UnityEngine::Events::UnityEvent_1<::StringW>* GlobalNamespace::GameEvents::_get_FunctionSelectTextChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameEvents::_get_FunctionSelectTextChangedEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityEvent_1<::StringW>*>("", "GameEvents", "FunctionSelectTextChangedEvent"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.Events.UnityEvent`1<System.String> FunctionSelectTextChangedEvent
void GlobalNamespace::GameEvents::_set_FunctionSelectTextChangedEvent(::UnityEngine::Events::UnityEvent_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameEvents::_set_FunctionSelectTextChangedEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameEvents", "FunctionSelectTextChangedEvent", value));
}
// Autogenerated static field getter
// Get static field: static UnityEngine.Events.UnityEvent`1<UnityEngine.Material[]> FunctionTextMaterialsEvent
::UnityEngine::Events::UnityEvent_1<::ArrayW<::UnityEngine::Material*>>* GlobalNamespace::GameEvents::_get_FunctionTextMaterialsEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameEvents::_get_FunctionTextMaterialsEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityEvent_1<::ArrayW<::UnityEngine::Material*>>*>("", "GameEvents", "FunctionTextMaterialsEvent"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.Events.UnityEvent`1<UnityEngine.Material[]> FunctionTextMaterialsEvent
void GlobalNamespace::GameEvents::_set_FunctionTextMaterialsEvent(::UnityEngine::Events::UnityEvent_1<::ArrayW<::UnityEngine::Material*>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameEvents::_set_FunctionTextMaterialsEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameEvents", "FunctionTextMaterialsEvent", value));
}
// Autogenerated static field getter
// Get static field: static UnityEngine.Events.UnityEvent`1<System.String> ScoreboardTextChangedEvent
::UnityEngine::Events::UnityEvent_1<::StringW>* GlobalNamespace::GameEvents::_get_ScoreboardTextChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameEvents::_get_ScoreboardTextChangedEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityEvent_1<::StringW>*>("", "GameEvents", "ScoreboardTextChangedEvent"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.Events.UnityEvent`1<System.String> ScoreboardTextChangedEvent
void GlobalNamespace::GameEvents::_set_ScoreboardTextChangedEvent(::UnityEngine::Events::UnityEvent_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameEvents::_set_ScoreboardTextChangedEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameEvents", "ScoreboardTextChangedEvent", value));
}
// Autogenerated static field getter
// Get static field: static UnityEngine.Events.UnityEvent`1<UnityEngine.Material[]> ScoreboardMaterialsEvent
::UnityEngine::Events::UnityEvent_1<::ArrayW<::UnityEngine::Material*>>* GlobalNamespace::GameEvents::_get_ScoreboardMaterialsEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameEvents::_get_ScoreboardMaterialsEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityEvent_1<::ArrayW<::UnityEngine::Material*>>*>("", "GameEvents", "ScoreboardMaterialsEvent"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.Events.UnityEvent`1<UnityEngine.Material[]> ScoreboardMaterialsEvent
void GlobalNamespace::GameEvents::_set_ScoreboardMaterialsEvent(::UnityEngine::Events::UnityEvent_1<::ArrayW<::UnityEngine::Material*>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameEvents::_set_ScoreboardMaterialsEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameEvents", "ScoreboardMaterialsEvent", value));
}
// Autogenerated method: GameEvents..cctor
void GlobalNamespace::GameEvents::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameEvents::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GameEvents", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: CasualGameMode
#include "GlobalNamespace/CasualGameMode.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: GorillaGameModes.GameModeType
#include "GorillaGameModes/GameModeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CasualGameMode.OnSerializeRead
void GlobalNamespace::CasualGameMode::OnSerializeRead(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CasualGameMode::OnSerializeRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: CasualGameMode.OnSerializeWrite
void GlobalNamespace::CasualGameMode::OnSerializeWrite(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CasualGameMode::OnSerializeWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: CasualGameMode.GameType
::GorillaGameModes::GameModeType GlobalNamespace::CasualGameMode::GameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CasualGameMode::GameType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaGameModes::GameModeType, false>(this, ___internal__method);
}
// Autogenerated method: CasualGameMode.GameModeName
::StringW GlobalNamespace::CasualGameMode::GameModeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CasualGameMode::GameModeName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GameModePageButton
#include "GlobalNamespace/GameModePageButton.hpp"
// Including type: GameModePages
#include "GlobalNamespace/GameModePages.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameModePages selector
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameModePages*& GlobalNamespace::GameModePageButton::dyn_selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePageButton::dyn_selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selector"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameModePages**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean left
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameModePageButton::dyn_left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePageButton::dyn_left");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "left"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameModePageButton.ButtonActivation
void GlobalNamespace::GameModePageButton::ButtonActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePageButton::ButtonActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GameModePages
#include "GlobalNamespace/GameModePages.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: GameModeSelectButton
#include "GlobalNamespace/GameModeSelectButton.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 sharedSelectedIndex
int GlobalNamespace::GameModePages::_get_sharedSelectedIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::_get_sharedSelectedIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "GameModePages", "sharedSelectedIndex"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 sharedSelectedIndex
void GlobalNamespace::GameModePages::_set_sharedSelectedIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::_set_sharedSelectedIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameModePages", "sharedSelectedIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.StringBuilder textBuilder
::System::Text::StringBuilder* GlobalNamespace::GameModePages::_get_textBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::_get_textBuilder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::StringBuilder*>("", "GameModePages", "textBuilder"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.StringBuilder textBuilder
void GlobalNamespace::GameModePages::_set_textBuilder(::System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::_set_textBuilder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameModePages", "textBuilder", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<GameModePages> gameModeSelectorInstances
::System::Collections::Generic::List_1<::GlobalNamespace::GameModePages*>* GlobalNamespace::GameModePages::_get_gameModeSelectorInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::_get_gameModeSelectorInstances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::GameModePages*>*>("", "GameModePages", "gameModeSelectorInstances"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<GameModePages> gameModeSelectorInstances
void GlobalNamespace::GameModePages::_set_gameModeSelectorInstances(::System::Collections::Generic::List_1<::GlobalNamespace::GameModePages*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::_set_gameModeSelectorInstances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameModePages", "gameModeSelectorInstances", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentButtonIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GameModePages::dyn_currentButtonIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::dyn_currentButtonIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentButtonIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxEntries
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GameModePages::dyn_maxEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::dyn_maxEntries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxEntries"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text gameModeText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GameModePages::dyn_gameModeText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::dyn_gameModeText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameModeText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameModeSelectButton[] buttons
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GameModeSelectButton*>& GlobalNamespace::GameModePages::dyn_buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::dyn_buttons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttons"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GameModeSelectButton*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameModePages::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameModePages.Awake
void GlobalNamespace::GameModePages::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameModePages.OnEnable
void GlobalNamespace::GameModePages::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameModePages.OnDestroy
void GlobalNamespace::GameModePages::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameModePages.UpdateAllButtons
void GlobalNamespace::GameModePages::UpdateAllButtons(int onButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::UpdateAllButtons");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAllButtons", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onButton);
}
// Autogenerated method: GameModePages.EnableEntryButtons
void GlobalNamespace::GameModePages::EnableEntryButtons(int buttonsMissing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::EnableEntryButtons");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableEntryButtons", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonsMissing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonsMissing);
}
// Autogenerated method: GameModePages.SetSelectedGameModeShared
void GlobalNamespace::GameModePages::SetSelectedGameModeShared(::StringW gameMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::SetSelectedGameModeShared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GameModePages", "SetSelectedGameModeShared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameMode);
}
// Autogenerated method: GameModePages..cctor
void GlobalNamespace::GameModePages::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GameModePages", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GameModePages.get_pageSize
int GlobalNamespace::GameModePages::get_pageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::get_pageSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BasePageHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GameModePages.get_entriesCount
int GlobalNamespace::GameModePages::get_entriesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::get_entriesCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BasePageHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GameModePages.Start
void GlobalNamespace::GameModePages::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BasePageHandler*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameModePages.ShowPage
void GlobalNamespace::GameModePages::ShowPage(int selectedPage, int startIndex, int endIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::ShowPage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BasePageHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectedPage, startIndex, endIndex);
}
// Autogenerated method: GameModePages.PageEntrySelected
void GlobalNamespace::GameModePages::PageEntrySelected(int pageEntry, int selectionIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModePages::PageEntrySelected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BasePageHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pageEntry, selectionIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GameModeSelectButton
#include "GlobalNamespace/GameModeSelectButton.hpp"
// Including type: GameModePages
#include "GlobalNamespace/GameModePages.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: GameModePages selector
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameModePages*& GlobalNamespace::GameModeSelectButton::dyn_selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModeSelectButton::dyn_selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selector"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameModePages**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 buttonIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GameModeSelectButton::dyn_buttonIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModeSelectButton::dyn_buttonIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameModeSelectButton.ButtonActivation
void GlobalNamespace::GameModeSelectButton::ButtonActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModeSelectButton::ButtonActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaBodyPhysics
#include "GlobalNamespace/GorillaBodyPhysics.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject bodyCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaBodyPhysics::dyn_bodyCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBodyPhysics::dyn_bodyCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 bodyColliderOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaBodyPhysics::dyn_bodyColliderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBodyPhysics::dyn_bodyColliderOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyColliderOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform headsetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaBodyPhysics::dyn_headsetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBodyPhysics::dyn_headsetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headsetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaBodyPhysics.FixedUpdate
void GlobalNamespace::GorillaBodyPhysics::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBodyPhysics::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaCameraFollow
#include "GlobalNamespace/GorillaCameraFollow.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Cinemachine.CinemachineVirtualCamera
#include "Cinemachine/CinemachineVirtualCamera.hpp"
// Including type: Cinemachine.Cinemachine3rdPersonFollow
#include "Cinemachine/Cinemachine3rdPersonFollow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform playerHead
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaCameraFollow::dyn_playerHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::dyn_playerHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerHead"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject cameraParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaCameraFollow::dyn_cameraParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::dyn_cameraParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 headOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaCameraFollow::dyn_headOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::dyn_headOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 eulerRotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaCameraFollow::dyn_eulerRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::dyn_eulerRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eulerRotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Cinemachine.CinemachineVirtualCamera cinemachineCamera
[[deprecated("Use field access instead!")]] ::Cinemachine::CinemachineVirtualCamera*& GlobalNamespace::GorillaCameraFollow::dyn_cinemachineCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::dyn_cinemachineCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cinemachineCamera"))->offset;
  return *reinterpret_cast<::Cinemachine::CinemachineVirtualCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Cinemachine.Cinemachine3rdPersonFollow cinemachineFollow
[[deprecated("Use field access instead!")]] ::Cinemachine::Cinemachine3rdPersonFollow*& GlobalNamespace::GorillaCameraFollow::dyn_cinemachineFollow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::dyn_cinemachineFollow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cinemachineFollow"))->offset;
  return *reinterpret_cast<::Cinemachine::Cinemachine3rdPersonFollow**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single baseCameraRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaCameraFollow::dyn_baseCameraRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::dyn_baseCameraRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseCameraRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single baseFollowDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaCameraFollow::dyn_baseFollowDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::dyn_baseFollowDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseFollowDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single baseVerticalArmLength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaCameraFollow::dyn_baseVerticalArmLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::dyn_baseVerticalArmLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseVerticalArmLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 baseShoulderOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaCameraFollow::dyn_baseShoulderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::dyn_baseShoulderOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseShoulderOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaCameraFollow.Start
void GlobalNamespace::GorillaCameraFollow::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCameraFollow.LateUpdate
void GlobalNamespace::GorillaCameraFollow::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaCameraSceneTrigger
#include "GlobalNamespace/GorillaCameraSceneTrigger.hpp"
// Including type: GorillaSceneCamera
#include "GlobalNamespace/GorillaSceneCamera.hpp"
// Including type: GorillaCameraTriggerIndex
#include "GlobalNamespace/GorillaCameraTriggerIndex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaSceneCamera sceneCamera
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaSceneCamera*& GlobalNamespace::GorillaCameraSceneTrigger::dyn_sceneCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraSceneTrigger::dyn_sceneCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneCamera"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaSceneCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaCameraTriggerIndex currentSceneTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaCameraTriggerIndex*& GlobalNamespace::GorillaCameraSceneTrigger::dyn_currentSceneTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraSceneTrigger::dyn_currentSceneTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSceneTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaCameraTriggerIndex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaCameraTriggerIndex mostRecentSceneTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaCameraTriggerIndex*& GlobalNamespace::GorillaCameraSceneTrigger::dyn_mostRecentSceneTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraSceneTrigger::dyn_mostRecentSceneTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mostRecentSceneTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaCameraTriggerIndex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaCameraSceneTrigger.ChangeScene
void GlobalNamespace::GorillaCameraSceneTrigger::ChangeScene(::GlobalNamespace::GorillaCameraTriggerIndex* triggerLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraSceneTrigger::ChangeScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triggerLeft)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, triggerLeft);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaCameraTriggerIndex
#include "GlobalNamespace/GorillaCameraTriggerIndex.hpp"
// Including type: GorillaCameraSceneTrigger
#include "GlobalNamespace/GorillaCameraSceneTrigger.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 sceneTriggerIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaCameraTriggerIndex::dyn_sceneTriggerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraTriggerIndex::dyn_sceneTriggerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneTriggerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaCameraSceneTrigger parentTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaCameraSceneTrigger*& GlobalNamespace::GorillaCameraTriggerIndex::dyn_parentTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraTriggerIndex::dyn_parentTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaCameraSceneTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaCameraTriggerIndex.Start
void GlobalNamespace::GorillaCameraTriggerIndex::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraTriggerIndex::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCameraTriggerIndex.OnTriggerEnter
void GlobalNamespace::GorillaCameraTriggerIndex::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraTriggerIndex::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaCameraTriggerIndex.OnTriggerExit
void GlobalNamespace::GorillaCameraTriggerIndex::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraTriggerIndex::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaHandHistory
#include "GlobalNamespace/GorillaHandHistory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 direction
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaHandHistory::dyn_direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHandHistory::dyn_direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "direction"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaHandHistory::dyn_lastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHandHistory::dyn_lastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastLastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaHandHistory::dyn_lastLastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHandHistory::dyn_lastLastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaHandHistory.Start
void GlobalNamespace::GorillaHandHistory::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHandHistory::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHandHistory.FixedUpdate
void GlobalNamespace::GorillaHandHistory::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHandHistory::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaHeadset
#include "GlobalNamespace/GorillaHeadset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaHeadset.Start
void GlobalNamespace::GorillaHeadset::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHeadset::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHeadset.Update
void GlobalNamespace::GorillaHeadset::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHeadset::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaIKHandTarget
#include "GlobalNamespace/GorillaIKHandTarget.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject handToStickTo
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaIKHandTarget::dyn_handToStickTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKHandTarget::dyn_handToStickTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handToStickTo"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isLeftHand
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaIKHandTarget::dyn_isLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKHandTarget::dyn_isLeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isLeftHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hapticStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaIKHandTarget::dyn_hapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKHandTarget::dyn_hapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody thisRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaIKHandTarget::dyn_thisRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKHandTarget::dyn_thisRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thisRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController controllerReference
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRController*& GlobalNamespace::GorillaIKHandTarget::dyn_controllerReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKHandTarget::dyn_controllerReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerReference"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaIKHandTarget.Start
void GlobalNamespace::GorillaIKHandTarget::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKHandTarget::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaIKHandTarget.FixedUpdate
void GlobalNamespace::GorillaIKHandTarget::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKHandTarget::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaIKHandTarget.OnCollisionEnter
void GlobalNamespace::GorillaIKHandTarget::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKHandTarget::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaPlaySpace
#include "GlobalNamespace/GorillaPlaySpace.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private GorillaPlaySpace _instance
::GlobalNamespace::GorillaPlaySpace* GlobalNamespace::GorillaPlaySpace::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaPlaySpace*>("", "GorillaPlaySpace", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private GorillaPlaySpace _instance
void GlobalNamespace::GorillaPlaySpace::_set__instance(::GlobalNamespace::GorillaPlaySpace* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaPlaySpace", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider headCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::GorillaPlaySpace::dyn_headCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_headCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider bodyCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::GorillaPlaySpace::dyn_bodyCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_bodyCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaPlaySpace::dyn_rightHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_rightHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaPlaySpace::dyn_leftHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_leftHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 headColliderOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_headColliderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_headColliderOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headColliderOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 bodyColliderOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_bodyColliderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_bodyColliderOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyColliderOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastLeftHandPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_lastLeftHandPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_lastLeftHandPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLeftHandPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastRightHandPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_lastRightHandPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_lastRightHandPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRightHandPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastLeftHandPositionForTag
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_lastLeftHandPositionForTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_lastLeftHandPositionForTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLeftHandPositionForTag"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastRightHandPositionForTag
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_lastRightHandPositionForTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_lastRightHandPositionForTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRightHandPositionForTag"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastBodyPositionForTag
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_lastBodyPositionForTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_lastBodyPositionForTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastBodyPositionForTag"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastHeadPositionForTag
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_lastHeadPositionForTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_lastHeadPositionForTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastHeadPositionForTag"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody playspaceRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaPlaySpace::dyn_playspaceRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_playspaceRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playspaceRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform headsetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaPlaySpace::dyn_headsetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_headsetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headsetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rightHandOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_rightHandOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_rightHandOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 leftHandOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_leftHandOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_leftHandOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig vrRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaPlaySpace::dyn_vrRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_vrRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig offlineVRRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaPlaySpace::dyn_offlineVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_offlineVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offlineVRRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single vibrationCooldown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_vibrationCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_vibrationCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vibrationCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single vibrationDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_vibrationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_vibrationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vibrationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single leftLastTouchedSurface
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_leftLastTouchedSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_leftLastTouchedSurface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftLastTouchedSurface"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rightLastTouchedSurface
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_rightLastTouchedSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_rightLastTouchedSurface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightLastTouchedSurface"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig myVRRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaPlaySpace::dyn_myVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_myVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myVRRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single bodyHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_bodyHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_bodyHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagCooldown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_tagCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_tagCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single taggedTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_taggedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_taggedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taggedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single disconnectTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_disconnectTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_disconnectTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disconnectTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxStepVelocity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_maxStepVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_maxStepVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxStepVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hapticWaitSeconds
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_hapticWaitSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_hapticWaitSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticWaitSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tapHapticDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_tapHapticDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_tapHapticDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tapHapticDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tapHapticStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_tapHapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_tapHapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tapHapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagHapticDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_tagHapticDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_tagHapticDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagHapticDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagHapticStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_tagHapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_tagHapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagHapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single taggedHapticDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_taggedHapticDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_taggedHapticDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taggedHapticDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single taggedHapticStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_taggedHapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_taggedHapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taggedHapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaPlaySpace.get_Instance
::GlobalNamespace::GorillaPlaySpace* GlobalNamespace::GorillaPlaySpace::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaPlaySpace", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GorillaPlaySpace*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaPlaySpace.Awake
void GlobalNamespace::GorillaPlaySpace::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaPlaySpaceForces
#include "GlobalNamespace/GorillaPlaySpaceForces.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject rightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaPlaySpaceForces::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject leftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaPlaySpaceForces::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider bodyCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::GorillaPlaySpaceForces::dyn_bodyCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_bodyCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider leftHandCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::GorillaPlaySpaceForces::dyn_leftHandCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_leftHandCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider rightHandCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::GorillaPlaySpaceForces::dyn_rightHandCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_rightHandCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaPlaySpaceForces::dyn_rightHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_rightHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaPlaySpaceForces::dyn_leftHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_leftHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody leftHandRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaPlaySpaceForces::dyn_leftHandRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_leftHandRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody rightHandRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaPlaySpaceForces::dyn_rightHandRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_rightHandRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 bodyColliderOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpaceForces::dyn_bodyColliderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_bodyColliderOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyColliderOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single forceConstant
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpaceForces::dyn_forceConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_forceConstant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forceConstant"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastLeftHandPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpaceForces::dyn_lastLeftHandPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_lastLeftHandPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLeftHandPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastRightHandPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpaceForces::dyn_lastRightHandPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_lastRightHandPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRightHandPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody playspaceRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaPlaySpaceForces::dyn_playspaceRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_playspaceRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playspaceRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform headsetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaPlaySpaceForces::dyn_headsetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_headsetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headsetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaPlaySpaceForces.Start
void GlobalNamespace::GorillaPlaySpaceForces::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlaySpaceForces.FixedUpdate
void GlobalNamespace::GorillaPlaySpaceForces::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaQuitBox
#include "GlobalNamespace/GorillaQuitBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaQuitBox.Start
void GlobalNamespace::GorillaQuitBox::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaQuitBox::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaQuitBox.OnBoxTriggered
void GlobalNamespace::GorillaQuitBox::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaQuitBox::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaSceneTransform
#include "GlobalNamespace/GorillaSceneTransform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 scenePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaSceneTransform::dyn_scenePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSceneTransform::dyn_scenePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scenePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 sceneRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaSceneTransform::dyn_sceneRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSceneTransform::dyn_sceneRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider sceneCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::GorillaSceneTransform::dyn_sceneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSceneTransform::dyn_sceneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaSceneCamera
#include "GlobalNamespace/GorillaSceneCamera.hpp"
// Including type: GorillaSceneTransform
#include "GlobalNamespace/GorillaSceneTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaSceneTransform[] sceneTransforms
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GorillaSceneTransform*>& GlobalNamespace::GorillaSceneCamera::dyn_sceneTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSceneCamera::dyn_sceneTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneTransforms"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GorillaSceneTransform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaSceneCamera.SetSceneCamera
void GlobalNamespace::GorillaSceneCamera::SetSceneCamera(int sceneIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSceneCamera::SetSceneCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSceneCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sceneIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaSurfaceOverride
#include "GlobalNamespace/GorillaSurfaceOverride.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 overrideIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaSurfaceOverride::dyn_overrideIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSurfaceOverride::dyn_overrideIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single extraVelMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaSurfaceOverride::dyn_extraVelMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSurfaceOverride::dyn_extraVelMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extraVelMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single extraVelMaxMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaSurfaceOverride::dyn_extraVelMaxMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSurfaceOverride::dyn_extraVelMaxMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extraVelMaxMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sendOnTapEvent
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaSurfaceOverride::dyn_sendOnTapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSurfaceOverride::dyn_sendOnTapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sendOnTapEvent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTriggerBox
#include "GlobalNamespace/GorillaTriggerBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaTriggerBox.OnBoxTriggered
void GlobalNamespace::GorillaTriggerBox::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBox::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTriggerBoxGameFlag
#include "GlobalNamespace/GorillaTriggerBoxGameFlag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String functionName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaTriggerBoxGameFlag::dyn_functionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBoxGameFlag::dyn_functionName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "functionName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTriggerBoxGameFlag.OnBoxTriggered
void GlobalNamespace::GorillaTriggerBoxGameFlag::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBoxGameFlag::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTriggerBoxShaderSettings
#include "GlobalNamespace/GorillaTriggerBoxShaderSettings.hpp"
// Including type: GorillaTag.Rendering.ZoneShaderSettings
#include "GorillaTag/Rendering/ZoneShaderSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private XSceneRef settingsRef
[[deprecated("Use field access instead!")]] ::GlobalNamespace::XSceneRef& GlobalNamespace::GorillaTriggerBoxShaderSettings::dyn_settingsRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBoxShaderSettings::dyn_settingsRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settingsRef"))->offset;
  return *reinterpret_cast<::GlobalNamespace::XSceneRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTag.Rendering.ZoneShaderSettings settings
[[deprecated("Use field access instead!")]] ::GorillaTag::Rendering::ZoneShaderSettings*& GlobalNamespace::GorillaTriggerBoxShaderSettings::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBoxShaderSettings::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::GorillaTag::Rendering::ZoneShaderSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTriggerBoxShaderSettings.Awake
void GlobalNamespace::GorillaTriggerBoxShaderSettings::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBoxShaderSettings::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTriggerBoxShaderSettings.OnBoxTriggered
void GlobalNamespace::GorillaTriggerBoxShaderSettings::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBoxShaderSettings::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaTriggerBoxTeleport
#include "GlobalNamespace/GorillaTriggerBoxTeleport.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 teleportLocation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTriggerBoxTeleport::dyn_teleportLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBoxTeleport::dyn_teleportLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teleportLocation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject cameraOffest
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaTriggerBoxTeleport::dyn_cameraOffest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBoxTeleport::dyn_cameraOffest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraOffest"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTriggerBoxTeleport.OnBoxTriggered
void GlobalNamespace::GorillaTriggerBoxTeleport::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBoxTeleport::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaWalkingGrab
#include "GlobalNamespace/GorillaWalkingGrab.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject handToStickTo
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaWalkingGrab::dyn_handToStickTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_handToStickTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handToStickTo"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ratioToUse
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaWalkingGrab::dyn_ratioToUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_ratioToUse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ratioToUse"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single forceMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaWalkingGrab::dyn_forceMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_forceMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forceMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 historySteps
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaWalkingGrab::dyn_historySteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_historySteps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "historySteps"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rigidbody playspaceRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaWalkingGrab::dyn_playspaceRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_playspaceRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playspaceRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody thisRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaWalkingGrab::dyn_thisRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_thisRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thisRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaWalkingGrab::dyn_lastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_lastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 maybeLastPositionIDK
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaWalkingGrab::dyn_maybeLastPositionIDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_maybeLastPositionIDK");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maybeLastPositionIDK"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] positionHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::GorillaWalkingGrab::dyn_positionHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_positionHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 historyIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaWalkingGrab::dyn_historyIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_historyIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "historyIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaWalkingGrab.Start
void GlobalNamespace::GorillaWalkingGrab::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaWalkingGrab.FixedUpdate
void GlobalNamespace::GorillaWalkingGrab::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaWalkingGrab.MakeJump
bool GlobalNamespace::GorillaWalkingGrab::MakeJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::MakeJump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaWalkingGrab.OnCollisionStay
void GlobalNamespace::GorillaWalkingGrab::OnCollisionStay(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::OnCollisionStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ISnapTurnOverride
#include "GlobalNamespace/ISnapTurnOverride.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ISnapTurnOverride.TurnOverrideActive
bool GlobalNamespace::ISnapTurnOverride::TurnOverrideActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISnapTurnOverride::TurnOverrideActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ISnapTurnOverride*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PrimaryButtonEvent
#include "GlobalNamespace/PrimaryButtonEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PrimaryButtonWatcher
#include "GlobalNamespace/PrimaryButtonWatcher.hpp"
// Including type: PrimaryButtonEvent
#include "GlobalNamespace/PrimaryButtonEvent.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PrimaryButtonEvent primaryButtonPress
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PrimaryButtonEvent*& GlobalNamespace::PrimaryButtonWatcher::dyn_primaryButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::dyn_primaryButtonPress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "primaryButtonPress"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PrimaryButtonEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean lastButtonState
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PrimaryButtonWatcher::dyn_lastButtonState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::dyn_lastButtonState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastButtonState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.InputDevice> devicesWithPrimaryButton
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::InputDevice>*& GlobalNamespace::PrimaryButtonWatcher::dyn_devicesWithPrimaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::dyn_devicesWithPrimaryButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "devicesWithPrimaryButton"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::InputDevice>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PrimaryButtonWatcher.Awake
void GlobalNamespace::PrimaryButtonWatcher::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PrimaryButtonWatcher.OnEnable
void GlobalNamespace::PrimaryButtonWatcher::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PrimaryButtonWatcher.OnDisable
void GlobalNamespace::PrimaryButtonWatcher::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PrimaryButtonWatcher.InputDevices_deviceConnected
void GlobalNamespace::PrimaryButtonWatcher::InputDevices_deviceConnected(::UnityEngine::XR::InputDevice device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::InputDevices_deviceConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InputDevices_deviceConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device);
}
// Autogenerated method: PrimaryButtonWatcher.InputDevices_deviceDisconnected
void GlobalNamespace::PrimaryButtonWatcher::InputDevices_deviceDisconnected(::UnityEngine::XR::InputDevice device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::InputDevices_deviceDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InputDevices_deviceDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device);
}
// Autogenerated method: PrimaryButtonWatcher.Update
void GlobalNamespace::PrimaryButtonWatcher::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AddCollidersToParticleSystemTriggers
#include "GlobalNamespace/AddCollidersToParticleSystemTriggers.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider[] collidersToAdd
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::AddCollidersToParticleSystemTriggers::dyn_collidersToAdd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AddCollidersToParticleSystemTriggers::dyn_collidersToAdd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collidersToAdd"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem particleSystemToUpdate
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::AddCollidersToParticleSystemTriggers::dyn_particleSystemToUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AddCollidersToParticleSystemTriggers::dyn_particleSystemToUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleSystemToUpdate"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AddCollidersToParticleSystemTriggers::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AddCollidersToParticleSystemTriggers::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AddCollidersToParticleSystemTriggers::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AddCollidersToParticleSystemTriggers::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AddCollidersToParticleSystemTriggers.Update
void GlobalNamespace::AddCollidersToParticleSystemTriggers::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AddCollidersToParticleSystemTriggers::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AtticHider
#include "GlobalNamespace/AtticHider.hpp"
// Including type: AtticHider/<WaitForAtticLoad>d__5
#include "GlobalNamespace/AtticHider_-WaitForAtticLoad-d__5.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer AtticRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::AtticHider::dyn_AtticRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AtticHider::dyn_AtticRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AtticRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _coroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GlobalNamespace::AtticHider::dyn__coroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AtticHider::dyn__coroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AtticHider.Start
void GlobalNamespace::AtticHider::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AtticHider::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AtticHider.OnDestroy
void GlobalNamespace::AtticHider::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AtticHider::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AtticHider.OnZoneChanged
void GlobalNamespace::AtticHider::OnZoneChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AtticHider::OnZoneChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnZoneChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AtticHider.WaitForAtticLoad
::System::Collections::IEnumerator* GlobalNamespace::AtticHider::WaitForAtticLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AtticHider::WaitForAtticLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForAtticLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AtticHider/<WaitForAtticLoad>d__5
#include "GlobalNamespace/AtticHider_-WaitForAtticLoad-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AtticHider <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AtticHider*& GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AtticHider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AtticHider/<WaitForAtticLoad>d__5.System.IDisposable.Dispose
void GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AtticHider/<WaitForAtticLoad>d__5.MoveNext
bool GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AtticHider/<WaitForAtticLoad>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AtticHider/<WaitForAtticLoad>d__5.System.Collections.IEnumerator.Reset
void GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AtticHider/<WaitForAtticLoad>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AtticHider::$WaitForAtticLoad$d__5*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AutomaticAdjustIPD
#include "GlobalNamespace/AutomaticAdjustIPD.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.InputDevice headset
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::AutomaticAdjustIPD::dyn_headset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticAdjustIPD::dyn_headset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headset"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single currentIPD
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticAdjustIPD::dyn_currentIPD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticAdjustIPD::dyn_currentIPD");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIPD"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 leftEyePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AutomaticAdjustIPD::dyn_leftEyePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticAdjustIPD::dyn_leftEyePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftEyePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rightEyePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AutomaticAdjustIPD::dyn_rightEyePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticAdjustIPD::dyn_rightEyePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightEyePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testOverride
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AutomaticAdjustIPD::dyn_testOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticAdjustIPD::dyn_testOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] adjustXScaleObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::AutomaticAdjustIPD::dyn_adjustXScaleObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticAdjustIPD::dyn_adjustXScaleObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "adjustXScaleObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sizeAt58mm
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticAdjustIPD::dyn_sizeAt58mm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticAdjustIPD::dyn_sizeAt58mm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sizeAt58mm"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sizeAt63mm
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticAdjustIPD::dyn_sizeAt63mm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticAdjustIPD::dyn_sizeAt63mm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sizeAt63mm"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastIPD
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticAdjustIPD::dyn_lastIPD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticAdjustIPD::dyn_lastIPD");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastIPD"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AutomaticAdjustIPD.Update
void GlobalNamespace::AutomaticAdjustIPD::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticAdjustIPD::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BlinkingLight
#include "GlobalNamespace/BlinkingLight.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private SRand gColor
::GlobalNamespace::SRand GlobalNamespace::BlinkingLight::_get_gColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingLight::_get_gColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SRand>("", "BlinkingLight", "gColor"));
}
// Autogenerated static field setter
// Set static field: static private SRand gColor
void GlobalNamespace::BlinkingLight::_set_gColor(::GlobalNamespace::SRand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingLight::_set_gColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BlinkingLight", "gColor", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material[] materialArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& GlobalNamespace::BlinkingLight::dyn_materialArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingLight::dyn_materialArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BlinkingLight..cctor
void GlobalNamespace::BlinkingLight::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingLight::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BlinkingLight", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BlinkingLight.OnSceneBake
void GlobalNamespace::BlinkingLight::OnSceneBake(::UnityEngine::SceneManagement::Scene scene, ::BuildSafe::SceneBakeMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingLight::OnSceneBake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::BuildSafe::SceneBakeTask*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, mode);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BlinkingLightManager
#include "GlobalNamespace/BlinkingLightManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderBumpGlow
#include "GlobalNamespace/BuilderBumpGlow.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer glowRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::BuilderBumpGlow::dyn_glowRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderBumpGlow::dyn_glowRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "glowRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single blendIn
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BuilderBumpGlow::dyn_blendIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderBumpGlow::dyn_blendIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blendIn"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single intensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BuilderBumpGlow::dyn_intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderBumpGlow::dyn_intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BuilderBumpGlow.Awake
void GlobalNamespace::BuilderBumpGlow::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderBumpGlow::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderBumpGlow.SetIntensity
void GlobalNamespace::BuilderBumpGlow::SetIntensity(float intensity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderBumpGlow::SetIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(intensity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, intensity);
}
// Autogenerated method: BuilderBumpGlow.SetBlendIn
void GlobalNamespace::BuilderBumpGlow::SetBlendIn(float blendIn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderBumpGlow::SetBlendIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBlendIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blendIn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, blendIn);
}
// Autogenerated method: BuilderBumpGlow.UpdateRender
void GlobalNamespace::BuilderBumpGlow::UpdateRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderBumpGlow::UpdateRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderDropZone
#include "GlobalNamespace/BuilderDropZone.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean DropOnEnter
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuilderDropZone::dyn_DropOnEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderDropZone::dyn_DropOnEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DropOnEnter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BuilderDropZone.OnTriggerEnter
void GlobalNamespace::BuilderDropZone::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderDropZone::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: BuilderDropZone.OnTriggerExit
void GlobalNamespace::BuilderDropZone::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderDropZone::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderEnv
#include "GlobalNamespace/BuilderEnv.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BuilderEnv.Start
void GlobalNamespace::BuilderEnv::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderEnv::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderEnv.Update
void GlobalNamespace::BuilderEnv::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderEnv::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderLaserSight
#include "GlobalNamespace/BuilderLaserSight.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LineRenderer lineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::BuilderLaserSight::dyn_lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderLaserSight::dyn_lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BuilderLaserSight.Awake
void GlobalNamespace::BuilderLaserSight::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderLaserSight::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderLaserSight.SetPoints
void GlobalNamespace::BuilderLaserSight::SetPoints(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderLaserSight::SetPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end);
}
// Autogenerated method: BuilderLaserSight.Show
void GlobalNamespace::BuilderLaserSight::Show(bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderLaserSight::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, show);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderMaterialOptions
#include "GlobalNamespace/BuilderMaterialOptions.hpp"
// Including type: BuilderMaterialOptions/Options
#include "GlobalNamespace/BuilderMaterialOptions_Options.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BuilderMaterialOptions/Options> options
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BuilderMaterialOptions::Options*>*& GlobalNamespace::BuilderMaterialOptions::dyn_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderMaterialOptions::dyn_options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "options"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderMaterialOptions::Options*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BuilderMaterialOptions.GetMaterialFromType
::UnityEngine::Material* GlobalNamespace::BuilderMaterialOptions::GetMaterialFromType(int materialType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderMaterialOptions::GetMaterialFromType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterialFromType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materialType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, materialType);
}
// Autogenerated method: BuilderMaterialOptions.GetDefaultMaterial
::UnityEngine::Material* GlobalNamespace::BuilderMaterialOptions::GetDefaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderMaterialOptions::GetDefaultMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: BuilderMaterialOptions.GetDefaultMaterialType
int GlobalNamespace::BuilderMaterialOptions::GetDefaultMaterialType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderMaterialOptions::GetDefaultMaterialType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultMaterialType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderMaterialOptions/Options
#include "GlobalNamespace/BuilderMaterialOptions_Options.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String materialId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BuilderMaterialOptions::Options::dyn_materialId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderMaterialOptions::Options::dyn_materialId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::BuilderMaterialOptions::Options::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderMaterialOptions::Options::dyn_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 materialType
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderMaterialOptions::Options::dyn_materialType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderMaterialOptions::Options::dyn_materialType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: IBuilderPieceComponent
#include "GlobalNamespace/IBuilderPieceComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBuilderPieceComponent.OnPieceCreate
void GlobalNamespace::IBuilderPieceComponent::OnPieceCreate(int pieceType, int pieceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBuilderPieceComponent::OnPieceCreate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IBuilderPieceComponent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pieceType, pieceId);
}
// Autogenerated method: IBuilderPieceComponent.OnPieceDestroy
void GlobalNamespace::IBuilderPieceComponent::OnPieceDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBuilderPieceComponent::OnPieceDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IBuilderPieceComponent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IBuilderPieceComponent.OnPieceActivate
void GlobalNamespace::IBuilderPieceComponent::OnPieceActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBuilderPieceComponent::OnPieceActivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IBuilderPieceComponent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IBuilderPieceComponent.OnPieceDeactivate
void GlobalNamespace::IBuilderPieceComponent::OnPieceDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBuilderPieceComponent::OnPieceDeactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IBuilderPieceComponent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderPieceLod
#include "GlobalNamespace/BuilderPieceLod.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single maxDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BuilderPieceLod::dyn_maxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceLod::dyn_maxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.MeshRenderer> meshRenderers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::MeshRenderer*>*& GlobalNamespace::BuilderPieceLod::dyn_meshRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceLod::dyn_meshRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshRenderers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::MeshRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SnapBounds
#include "GlobalNamespace/SnapBounds.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2Int min
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2Int& GlobalNamespace::SnapBounds::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapBounds::dyn_min");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2Int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2Int max
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2Int& GlobalNamespace::SnapBounds::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapBounds::dyn_max");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2Int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SnapBounds..ctor
// ABORTED elsewhere.  GlobalNamespace::SnapBounds::SnapBounds(::UnityEngine::Vector2Int min, ::UnityEngine::Vector2Int max)
// Autogenerated method: SnapBounds..ctor
GlobalNamespace::SnapBounds::SnapBounds(int minX, int minY, int maxX, int maxY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapBounds::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minX), ::il2cpp_utils::ExtractType(minY), ::il2cpp_utils::ExtractType(maxX), ::il2cpp_utils::ExtractType(maxY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, minX, minY, maxX, maxY);
}
// Autogenerated method: SnapBounds.Clear
void GlobalNamespace::SnapBounds::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapBounds::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SnapBounds.Write
void GlobalNamespace::SnapBounds::Write(::System::IO::BinaryWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapBounds::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: SnapBounds.Read
void GlobalNamespace::SnapBounds::Read(::System::IO::BinaryReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapBounds::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderPiece
#include "GlobalNamespace/BuilderPiece.hpp"
// Including type: BuilderMaterialOptions
#include "GlobalNamespace/BuilderMaterialOptions.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaTagScripts.BuilderAttachGridPlane
#include "GorillaTagScripts/BuilderAttachGridPlane.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Behaviour
#include "UnityEngine/Behaviour.hpp"
// Including type: IBuilderPieceComponent
#include "GlobalNamespace/IBuilderPieceComponent.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: BasePlatform
#include "GlobalNamespace/BasePlatform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 INVALID
int GlobalNamespace::BuilderPiece::_get_INVALID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::_get_INVALID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BuilderPiece", "INVALID"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 INVALID
void GlobalNamespace::BuilderPiece::_set_INVALID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::_set_INVALID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPiece", "INVALID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String displayName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BuilderPiece::dyn_displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_displayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "displayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuilderMaterialOptions materialOptions
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderMaterialOptions*& GlobalNamespace::BuilderPiece::dyn_materialOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_materialOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialOptions"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderMaterialOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.MeshRenderer> materialSwapTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::MeshRenderer*>*& GlobalNamespace::BuilderPiece::dyn_materialSwapTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_materialSwapTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialSwapTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::MeshRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform scaleRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::BuilderPiece::dyn_scaleRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_scaleRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scaleRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject placeVFX
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BuilderPiece::dyn_placeVFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_placeVFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "placeVFX"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject disconnectVFX
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BuilderPiece::dyn_disconnectVFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_disconnectVFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disconnectVFX"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject grabbedVFX
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BuilderPiece::dyn_grabbedVFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_grabbedVFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabbedVFX"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject locationLockVFX
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BuilderPiece::dyn_locationLockVFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_locationLockVFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locationLockVFX"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 pieceType
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderPiece::dyn_pieceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_pieceType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pieceType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 pieceId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderPiece::dyn_pieceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_pieceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pieceId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 materialType
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderPiece::dyn_materialType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_materialType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 heldByPlayerActorNumber
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderPiece::dyn_heldByPlayerActorNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_heldByPlayerActorNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heldByPlayerActorNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean heldInLeftHand
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuilderPiece::dyn_heldInLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_heldInLeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heldInLeftHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform parentHeld
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::BuilderPiece::dyn_parentHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_parentHeld");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentHeld"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuilderPiece parentPiece
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderPiece*& GlobalNamespace::BuilderPiece::dyn_parentPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_parentPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentPiece"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderPiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuilderPiece firstChildPiece
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderPiece*& GlobalNamespace::BuilderPiece::dyn_firstChildPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_firstChildPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstChildPiece"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderPiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuilderPiece nextSiblingPiece
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderPiece*& GlobalNamespace::BuilderPiece::dyn_nextSiblingPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_nextSiblingPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextSiblingPiece"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderPiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 attachIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderPiece::dyn_attachIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_attachIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SnapBounds attachBounds
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SnapBounds& GlobalNamespace::BuilderPiece::dyn_attachBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_attachBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachBounds"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SnapBounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 parentAttachIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderPiece::dyn_parentAttachIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_parentAttachIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentAttachIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SnapBounds parentAttachBounds
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SnapBounds& GlobalNamespace::BuilderPiece::dyn_parentAttachBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_parentAttachBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentAttachBounds"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SnapBounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaTagScripts.BuilderAttachGridPlane> gridPlanes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>*& GlobalNamespace::BuilderPiece::dyn_gridPlanes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_gridPlanes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gridPlanes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Collider> colliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& GlobalNamespace::BuilderPiece::dyn_colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Behaviour> onlyWhenPlacedBehaviours
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Behaviour*>*& GlobalNamespace::BuilderPiece::dyn_onlyWhenPlacedBehaviours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_onlyWhenPlacedBehaviours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlyWhenPlacedBehaviours"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Behaviour*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<IBuilderPieceComponent> pieceComponents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::IBuilderPieceComponent*>*& GlobalNamespace::BuilderPiece::dyn_pieceComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_pieceComponents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pieceComponents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::IBuilderPieceComponent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean pieceComponentsActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuilderPiece::dyn_pieceComponentsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_pieceComponentsActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pieceComponentsActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> onlyWhenPlaced
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::BuilderPiece::dyn_onlyWhenPlaced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_onlyWhenPlaced");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlyWhenPlaced"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> onlyWhenNotPlaced
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::BuilderPiece::dyn_onlyWhenNotPlaced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_onlyWhenNotPlaced");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlyWhenNotPlaced"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean areMeshesToggledOnPlace
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuilderPiece::dyn_areMeshesToggledOnPlace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_areMeshesToggledOnPlace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "areMeshesToggledOnPlace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> moveToRoot
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::BuilderPiece::dyn_moveToRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_moveToRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveToRoot"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rigidbody rigidBody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::BuilderPiece::dyn_rigidBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_rigidBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigidBody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BasePlatform platform
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BasePlatform*& GlobalNamespace::BuilderPiece::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasePlatform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 preventSnapUntilMoved
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderPiece::dyn_preventSnapUntilMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_preventSnapUntilMoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preventSnapUntilMoved"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 preventSnapUntilMovedFromPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::BuilderPiece::dyn_preventSnapUntilMovedFromPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_preventSnapUntilMovedFromPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preventSnapUntilMovedFromPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuilderPiece requestedParentPiece
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderPiece*& GlobalNamespace::BuilderPiece::dyn_requestedParentPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_requestedParentPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestedParentPiece"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderPiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.MeshRenderer> meshesToCombine
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::MeshRenderer*>*& GlobalNamespace::BuilderPiece::dyn_meshesToCombine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_meshesToCombine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshesToCombine"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::MeshRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject bumpPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BuilderPiece::dyn_bumpPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_bumpPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bumpPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> bumps
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::BuilderPiece::dyn_bumps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_bumps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bumps"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuilderPiece/State state
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderPiece::State& GlobalNamespace::BuilderPiece::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderPiece::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isStatic
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuilderPiece::dyn_isStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_isStatic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isStatic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isBuiltIntoTable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuilderPiece::dyn_isBuiltIntoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_isBuiltIntoTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isBuiltIntoTable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.MeshRenderer> renderingIndirect
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::MeshRenderer*>*& GlobalNamespace::BuilderPiece::dyn_renderingIndirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_renderingIndirect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderingIndirect"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::MeshRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tint
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BuilderPiece::dyn_tint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::dyn_tint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tint"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BuilderPiece.Awake
void GlobalNamespace::BuilderPiece::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPiece.OnReturnToPool
void GlobalNamespace::BuilderPiece::OnReturnToPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::OnReturnToPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnReturnToPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPiece.SetupPiece
void GlobalNamespace::BuilderPiece::SetupPiece(float gridSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::SetupPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gridSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gridSize);
}
// Autogenerated method: BuilderPiece.SetMaterial
void GlobalNamespace::BuilderPiece::SetMaterial(int inMaterialType, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::SetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inMaterialType), ::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inMaterialType, force);
}
// Autogenerated method: BuilderPiece.GetPieceId
int GlobalNamespace::BuilderPiece::GetPieceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::GetPieceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPieceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPiece.GetParentPieceId
int GlobalNamespace::BuilderPiece::GetParentPieceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::GetParentPieceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentPieceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPiece.GetAttachIndex
int GlobalNamespace::BuilderPiece::GetAttachIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::GetAttachIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttachIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPiece.GetParentAttachIndex
int GlobalNamespace::BuilderPiece::GetParentAttachIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::GetParentAttachIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentAttachIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPiece.SetPieceActive
void GlobalNamespace::BuilderPiece::SetPieceActive(::System::Collections::Generic::List_1<::GlobalNamespace::IBuilderPieceComponent*>* components, bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::SetPieceActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPieceActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(components), ::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, components, active);
}
// Autogenerated method: BuilderPiece.SetActive
void GlobalNamespace::BuilderPiece::SetActive(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* gameObjects, bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::SetActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObjects), ::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObjects, active);
}
// Autogenerated method: BuilderPiece.SetScale
void GlobalNamespace::BuilderPiece::SetScale(float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::SetScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scale);
}
// Autogenerated method: BuilderPiece.SetTint
void GlobalNamespace::BuilderPiece::SetTint(float tint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::SetTint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tint);
}
// Autogenerated method: BuilderPiece.SetParentPiece
void GlobalNamespace::BuilderPiece::SetParentPiece(int newAttachIndex, ::GlobalNamespace::SnapBounds newAttachBounds, ::GlobalNamespace::BuilderPiece* newParentPiece, int newParentAttachIndex, ::GlobalNamespace::SnapBounds newParentAttachBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::SetParentPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParentPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newAttachIndex), ::il2cpp_utils::ExtractType(newAttachBounds), ::il2cpp_utils::ExtractType(newParentPiece), ::il2cpp_utils::ExtractType(newParentAttachIndex), ::il2cpp_utils::ExtractType(newParentAttachBounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newAttachIndex, newAttachBounds, newParentPiece, newParentAttachIndex, newParentAttachBounds);
}
// Autogenerated method: BuilderPiece.ClearParentPiece
void GlobalNamespace::BuilderPiece::ClearParentPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::ClearParentPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearParentPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPiece.AddSnapToGrid
void GlobalNamespace::BuilderPiece::AddSnapToGrid(int attachGridIndex, ::GlobalNamespace::SnapBounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::AddSnapToGrid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSnapToGrid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attachGridIndex), ::il2cpp_utils::ExtractType(bounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attachGridIndex, bounds);
}
// Autogenerated method: BuilderPiece.RemoveSnapFromGrid
void GlobalNamespace::BuilderPiece::RemoveSnapFromGrid(int attachGridIndex, ::GlobalNamespace::SnapBounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::RemoveSnapFromGrid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSnapFromGrid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attachGridIndex), ::il2cpp_utils::ExtractType(bounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attachGridIndex, bounds);
}
// Autogenerated method: BuilderPiece.AddPieceToParent
void GlobalNamespace::BuilderPiece::AddPieceToParent(::GlobalNamespace::BuilderPiece* piece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::AddPieceToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPieceToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece);
}
// Autogenerated method: BuilderPiece.RemovePieceFromParent
void GlobalNamespace::BuilderPiece::RemovePieceFromParent(::GlobalNamespace::BuilderPiece* piece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::RemovePieceFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BuilderPiece", "RemovePieceFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, piece);
}
// Autogenerated method: BuilderPiece.SetParentHeld
void GlobalNamespace::BuilderPiece::SetParentHeld(::UnityEngine::Transform* parentHeld, int heldByPlayerActorNumber, bool heldInLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::SetParentHeld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParentHeld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentHeld), ::il2cpp_utils::ExtractType(heldByPlayerActorNumber), ::il2cpp_utils::ExtractType(heldInLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentHeld, heldByPlayerActorNumber, heldInLeftHand);
}
// Autogenerated method: BuilderPiece.ClearParentHeld
void GlobalNamespace::BuilderPiece::ClearParentHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::ClearParentHeld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearParentHeld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPiece.SetState
void GlobalNamespace::BuilderPiece::SetState(::GlobalNamespace::BuilderPiece::State newState, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState), ::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState, force);
}
// Autogenerated method: BuilderPiece.SetKinematic
void GlobalNamespace::BuilderPiece::SetKinematic(bool kinematic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::SetKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kinematic)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, kinematic);
}
// Autogenerated method: BuilderPiece.SetStatic
void GlobalNamespace::BuilderPiece::SetStatic(bool isStatic, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::SetStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isStatic), ::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isStatic, force);
}
// Autogenerated method: BuilderPiece.SetChildrenState
void GlobalNamespace::BuilderPiece::SetChildrenState(::GlobalNamespace::BuilderPiece::State newState, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::SetChildrenState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildrenState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState), ::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState, force);
}
// Autogenerated method: BuilderPiece.OnCreate
void GlobalNamespace::BuilderPiece::OnCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::OnCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPiece.PlayPlacementFx
void GlobalNamespace::BuilderPiece::PlayPlacementFx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::PlayPlacementFx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayPlacementFx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPiece.PlayDisconnectFx
void GlobalNamespace::BuilderPiece::PlayDisconnectFx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::PlayDisconnectFx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayDisconnectFx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPiece.PlayGrabbedFx
void GlobalNamespace::BuilderPiece::PlayGrabbedFx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::PlayGrabbedFx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayGrabbedFx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPiece.PlayLocationLockFx
void GlobalNamespace::BuilderPiece::PlayLocationLockFx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::PlayLocationLockFx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayLocationLockFx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPiece.PlayVFX
void GlobalNamespace::BuilderPiece::PlayVFX(::UnityEngine::GameObject* vfx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::PlayVFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayVFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vfx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vfx);
}
// Autogenerated method: BuilderPiece.GetBuilderPieceFromCollider
::GlobalNamespace::BuilderPiece* GlobalNamespace::BuilderPiece::GetBuilderPieceFromCollider(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::GetBuilderPieceFromCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BuilderPiece", "GetBuilderPieceFromCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BuilderPiece*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collider);
}
// Autogenerated method: BuilderPiece.GetBuilderPieceFromTransform
::GlobalNamespace::BuilderPiece* GlobalNamespace::BuilderPiece::GetBuilderPieceFromTransform(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::GetBuilderPieceFromTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BuilderPiece", "GetBuilderPieceFromTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BuilderPiece*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform);
}
// Autogenerated method: BuilderPiece.MakePieceRoot
void GlobalNamespace::BuilderPiece::MakePieceRoot(::GlobalNamespace::BuilderPiece* piece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::MakePieceRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BuilderPiece", "MakePieceRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, piece);
}
// Autogenerated method: BuilderPiece.GetRootPiece
::GlobalNamespace::BuilderPiece* GlobalNamespace::BuilderPiece::GetRootPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::GetRootPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BuilderPiece*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderPiece/State
#include "GlobalNamespace/BuilderPiece.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BuilderPiece/State None
::GlobalNamespace::BuilderPiece::State GlobalNamespace::BuilderPiece::State::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPiece::State>("", "BuilderPiece/State", "None"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPiece/State None
void GlobalNamespace::BuilderPiece::State::_set_None(::GlobalNamespace::BuilderPiece::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPiece/State", "None", value));
}
// Autogenerated static field getter
// Get static field: static public BuilderPiece/State AttachedAndPlaced
::GlobalNamespace::BuilderPiece::State GlobalNamespace::BuilderPiece::State::_get_AttachedAndPlaced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::_get_AttachedAndPlaced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPiece::State>("", "BuilderPiece/State", "AttachedAndPlaced"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPiece/State AttachedAndPlaced
void GlobalNamespace::BuilderPiece::State::_set_AttachedAndPlaced(::GlobalNamespace::BuilderPiece::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::_set_AttachedAndPlaced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPiece/State", "AttachedAndPlaced", value));
}
// Autogenerated static field getter
// Get static field: static public BuilderPiece/State AttachedToDropped
::GlobalNamespace::BuilderPiece::State GlobalNamespace::BuilderPiece::State::_get_AttachedToDropped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::_get_AttachedToDropped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPiece::State>("", "BuilderPiece/State", "AttachedToDropped"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPiece/State AttachedToDropped
void GlobalNamespace::BuilderPiece::State::_set_AttachedToDropped(::GlobalNamespace::BuilderPiece::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::_set_AttachedToDropped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPiece/State", "AttachedToDropped", value));
}
// Autogenerated static field getter
// Get static field: static public BuilderPiece/State Grabbed
::GlobalNamespace::BuilderPiece::State GlobalNamespace::BuilderPiece::State::_get_Grabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::_get_Grabbed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPiece::State>("", "BuilderPiece/State", "Grabbed"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPiece/State Grabbed
void GlobalNamespace::BuilderPiece::State::_set_Grabbed(::GlobalNamespace::BuilderPiece::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::_set_Grabbed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPiece/State", "Grabbed", value));
}
// Autogenerated static field getter
// Get static field: static public BuilderPiece/State Dropped
::GlobalNamespace::BuilderPiece::State GlobalNamespace::BuilderPiece::State::_get_Dropped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::_get_Dropped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPiece::State>("", "BuilderPiece/State", "Dropped"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPiece/State Dropped
void GlobalNamespace::BuilderPiece::State::_set_Dropped(::GlobalNamespace::BuilderPiece::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::_set_Dropped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPiece/State", "Dropped", value));
}
// Autogenerated static field getter
// Get static field: static public BuilderPiece/State OnShelf
::GlobalNamespace::BuilderPiece::State GlobalNamespace::BuilderPiece::State::_get_OnShelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::_get_OnShelf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPiece::State>("", "BuilderPiece/State", "OnShelf"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPiece/State OnShelf
void GlobalNamespace::BuilderPiece::State::_set_OnShelf(::GlobalNamespace::BuilderPiece::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::_set_OnShelf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPiece/State", "OnShelf", value));
}
// Autogenerated static field getter
// Get static field: static public BuilderPiece/State Displayed
::GlobalNamespace::BuilderPiece::State GlobalNamespace::BuilderPiece::State::_get_Displayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::_get_Displayed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPiece::State>("", "BuilderPiece/State", "Displayed"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPiece/State Displayed
void GlobalNamespace::BuilderPiece::State::_set_Displayed(::GlobalNamespace::BuilderPiece::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::_set_Displayed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPiece/State", "Displayed", value));
}
// Autogenerated static field getter
// Get static field: static public BuilderPiece/State GrabbedLocal
::GlobalNamespace::BuilderPiece::State GlobalNamespace::BuilderPiece::State::_get_GrabbedLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::_get_GrabbedLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPiece::State>("", "BuilderPiece/State", "GrabbedLocal"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPiece/State GrabbedLocal
void GlobalNamespace::BuilderPiece::State::_set_GrabbedLocal(::GlobalNamespace::BuilderPiece::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::_set_GrabbedLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPiece/State", "GrabbedLocal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderPiece::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPiece::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderPieceCollider
#include "GlobalNamespace/BuilderPieceCollider.hpp"
// Including type: BuilderPiece
#include "GlobalNamespace/BuilderPiece.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BuilderPiece piece
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderPiece*& GlobalNamespace::BuilderPieceCollider::dyn_piece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceCollider::dyn_piece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "piece"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderPiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderPieceInteractor
#include "GlobalNamespace/BuilderPieceInteractor.hpp"
// Including type: BuilderPieceInteractor/HandType
#include "GlobalNamespace/BuilderPieceInteractor_HandType.hpp"
// Including type: BuilderPiece
#include "GlobalNamespace/BuilderPiece.hpp"
// Including type: EquipmentInteractor
#include "GlobalNamespace/EquipmentInteractor.hpp"
// Including type: GorillaVelocityEstimator
#include "GlobalNamespace/GorillaVelocityEstimator.hpp"
// Including type: BuilderLaserSight
#include "GlobalNamespace/BuilderLaserSight.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: BuilderBumpGlow
#include "GlobalNamespace/BuilderBumpGlow.hpp"
// Including type: GorillaTagScripts.BuilderAttachGridPlane
#include "GorillaTagScripts/BuilderAttachGridPlane.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: HoldableObject
#include "GlobalNamespace/HoldableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BuilderPieceInteractor instance
::GlobalNamespace::BuilderPieceInteractor* GlobalNamespace::BuilderPieceInteractor::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPieceInteractor*>("", "BuilderPieceInteractor", "instance"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPieceInteractor instance
void GlobalNamespace::BuilderPieceInteractor::_set_instance(::GlobalNamespace::BuilderPieceInteractor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor", "instance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean hasInstance
bool GlobalNamespace::BuilderPieceInteractor::_get_hasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_get_hasInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "BuilderPieceInteractor", "hasInstance"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean hasInstance
void GlobalNamespace::BuilderPieceInteractor::_set_hasInstance(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_set_hasInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor", "hasInstance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_HANDS
int GlobalNamespace::BuilderPieceInteractor::_get_NUM_HANDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_get_NUM_HANDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BuilderPieceInteractor", "NUM_HANDS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_HANDS
void GlobalNamespace::BuilderPieceInteractor::_set_NUM_HANDS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_set_NUM_HANDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor", "NUM_HANDS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<GorillaTagScripts.BuilderAttachGridPlane>[] localGridPlanes
::ArrayW<::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>*> GlobalNamespace::BuilderPieceInteractor::_get_localGridPlanes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_get_localGridPlanes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>*>>("", "BuilderPieceInteractor", "localGridPlanes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<GorillaTagScripts.BuilderAttachGridPlane>[] localGridPlanes
void GlobalNamespace::BuilderPieceInteractor::_set_localGridPlanes(::ArrayW<::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_set_localGridPlanes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor", "localGridPlanes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MAX_SPHERE_CHECK_RESULTS
int GlobalNamespace::BuilderPieceInteractor::_get_MAX_SPHERE_CHECK_RESULTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_get_MAX_SPHERE_CHECK_RESULTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BuilderPieceInteractor", "MAX_SPHERE_CHECK_RESULTS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAX_SPHERE_CHECK_RESULTS
void GlobalNamespace::BuilderPieceInteractor::_set_MAX_SPHERE_CHECK_RESULTS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_set_MAX_SPHERE_CHECK_RESULTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor", "MAX_SPHERE_CHECK_RESULTS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<BuilderPiece> tempPieceSet
::System::Collections::Generic::HashSet_1<::GlobalNamespace::BuilderPiece*>* GlobalNamespace::BuilderPieceInteractor::_get_tempPieceSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_get_tempPieceSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::GlobalNamespace::BuilderPiece*>*>("", "BuilderPieceInteractor", "tempPieceSet"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<BuilderPiece> tempPieceSet
void GlobalNamespace::BuilderPieceInteractor::_set_tempPieceSet(::System::Collections::Generic::HashSet_1<::GlobalNamespace::BuilderPiece*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_set_tempPieceSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor", "tempPieceSet", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.RaycastHit[] tempHitResults
::ArrayW<::UnityEngine::RaycastHit> GlobalNamespace::BuilderPieceInteractor::_get_tempHitResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_get_tempHitResults");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::RaycastHit>>("", "BuilderPieceInteractor", "tempHitResults"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.RaycastHit[] tempHitResults
void GlobalNamespace::BuilderPieceInteractor::_set_tempHitResults(::ArrayW<::UnityEngine::RaycastHit> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_set_tempHitResults");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor", "tempHitResults", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single PIECE_DISTANCE_DISABLE
float GlobalNamespace::BuilderPieceInteractor::_get_PIECE_DISTANCE_DISABLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_get_PIECE_DISTANCE_DISABLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BuilderPieceInteractor", "PIECE_DISTANCE_DISABLE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single PIECE_DISTANCE_DISABLE
void GlobalNamespace::BuilderPieceInteractor::_set_PIECE_DISTANCE_DISABLE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_set_PIECE_DISTANCE_DISABLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor", "PIECE_DISTANCE_DISABLE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single PIECE_DISTANCE_ENABLE
float GlobalNamespace::BuilderPieceInteractor::_get_PIECE_DISTANCE_ENABLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_get_PIECE_DISTANCE_ENABLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BuilderPieceInteractor", "PIECE_DISTANCE_ENABLE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single PIECE_DISTANCE_ENABLE
void GlobalNamespace::BuilderPieceInteractor::_set_PIECE_DISTANCE_ENABLE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_set_PIECE_DISTANCE_ENABLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor", "PIECE_DISTANCE_ENABLE", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Collider[] tempDisableColliders
::ArrayW<::UnityEngine::Collider*> GlobalNamespace::BuilderPieceInteractor::_get_tempDisableColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_get_tempDisableColliders");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Collider*>>("", "BuilderPieceInteractor", "tempDisableColliders"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Collider[] tempDisableColliders
void GlobalNamespace::BuilderPieceInteractor::_set_tempDisableColliders(::ArrayW<::UnityEngine::Collider*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::_set_tempDisableColliders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor", "tempDisableColliders", value));
}
// Autogenerated instance field getter
// Get instance field: public EquipmentInteractor equipmentInteractor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EquipmentInteractor*& GlobalNamespace::BuilderPieceInteractor::dyn_equipmentInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_equipmentInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "equipmentInteractor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EquipmentInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaVelocityEstimator velocityEstimatorLeft
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaVelocityEstimator*& GlobalNamespace::BuilderPieceInteractor::dyn_velocityEstimatorLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_velocityEstimatorLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityEstimatorLeft"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaVelocityEstimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaVelocityEstimator velocityEstimatorRight
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaVelocityEstimator*& GlobalNamespace::BuilderPieceInteractor::dyn_velocityEstimatorRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_velocityEstimatorRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityEstimatorRight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaVelocityEstimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuilderLaserSight laserSightLeft
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderLaserSight*& GlobalNamespace::BuilderPieceInteractor::dyn_laserSightLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_laserSightLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laserSightLeft"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderLaserSight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuilderLaserSight laserSightRight
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderLaserSight*& GlobalNamespace::BuilderPieceInteractor::dyn_laserSightRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_laserSightRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laserSightRight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderLaserSight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaVelocityEstimator> velocityEstimator
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::GorillaVelocityEstimator*>*& GlobalNamespace::BuilderPieceInteractor::dyn_velocityEstimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_velocityEstimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityEstimator"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::GorillaVelocityEstimator*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BuilderPieceInteractor/HandState> handState
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPieceInteractor::HandState>*& GlobalNamespace::BuilderPieceInteractor::dyn_handState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_handState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handState"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPieceInteractor::HandState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BuilderPiece> heldPiece
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>*& GlobalNamespace::BuilderPieceInteractor::dyn_heldPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_heldPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heldPiece"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BuilderPiece> potentialHeldPiece
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>*& GlobalNamespace::BuilderPieceInteractor::dyn_potentialHeldPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_potentialHeldPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "potentialHeldPiece"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Single> potentialGrabbedOffsetDist
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<float>*& GlobalNamespace::BuilderPieceInteractor::dyn_potentialGrabbedOffsetDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_potentialGrabbedOffsetDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "potentialGrabbedOffsetDist"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Quaternion> heldInitialRot
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Quaternion>*& GlobalNamespace::BuilderPieceInteractor::dyn_heldInitialRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_heldInitialRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heldInitialRot"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Quaternion>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Quaternion> heldCurrentRot
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Quaternion>*& GlobalNamespace::BuilderPieceInteractor::dyn_heldCurrentRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_heldCurrentRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heldCurrentRot"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Quaternion>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Vector3> heldInitialPos
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::BuilderPieceInteractor::dyn_heldInitialPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_heldInitialPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heldInitialPos"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Vector3> heldCurrentPos
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::BuilderPieceInteractor::dyn_heldCurrentPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_heldCurrentPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heldCurrentPos"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaTagScripts.BuilderPotentialPlacement> delayedPotentialPlacement
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderPotentialPlacement>*& GlobalNamespace::BuilderPieceInteractor::dyn_delayedPotentialPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_delayedPotentialPlacement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delayedPotentialPlacement"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderPotentialPlacement>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Single> delayedPlacementTime
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<float>*& GlobalNamespace::BuilderPieceInteractor::dyn_delayedPlacementTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_delayedPlacementTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delayedPlacementTime"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaTagScripts.BuilderPotentialPlacement> prevPotentialPlacement
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderPotentialPlacement>*& GlobalNamespace::BuilderPieceInteractor::dyn_prevPotentialPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_prevPotentialPlacement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevPotentialPlacement"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderPotentialPlacement>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BuilderLaserSight> laserSight
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BuilderLaserSight*>*& GlobalNamespace::BuilderPieceInteractor::dyn_laserSight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_laserSight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laserSight"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderLaserSight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> collisionDisabledPiecesLeft
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::BuilderPieceInteractor::dyn_collisionDisabledPiecesLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_collisionDisabledPiecesLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collisionDisabledPiecesLeft"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> collisionDisabledPiecesRight
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::BuilderPieceInteractor::dyn_collisionDisabledPiecesRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_collisionDisabledPiecesRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collisionDisabledPiecesRight"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.OverlapSphereCommand> checkPiecesInSphere
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::OverlapSphereCommand>& GlobalNamespace::BuilderPieceInteractor::dyn_checkPiecesInSphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_checkPiecesInSphere");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkPiecesInSphere"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::OverlapSphereCommand>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.ColliderHit> checkPiecesInSphereResults
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::ColliderHit>& GlobalNamespace::BuilderPieceInteractor::dyn_checkPiecesInSphereResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_checkPiecesInSphereResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkPiecesInSphereResults"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::ColliderHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Jobs.JobHandle checkNearbyPiecesHandle
[[deprecated("Use field access instead!")]] ::Unity::Jobs::JobHandle& GlobalNamespace::BuilderPieceInteractor::dyn_checkNearbyPiecesHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_checkNearbyPiecesHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkNearbyPiecesHandle"))->offset;
  return *reinterpret_cast<::Unity::Jobs::JobHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuilderBumpGlow glowBumpPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderBumpGlow*& GlobalNamespace::BuilderPieceInteractor::dyn_glowBumpPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_glowBumpPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "glowBumpPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderBumpGlow**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Collections.Generic.List`1<BuilderBumpGlow>> glowBumps
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderBumpGlow*>*>*& GlobalNamespace::BuilderPieceInteractor::dyn_glowBumps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_glowBumps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "glowBumps"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderBumpGlow*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inDropZone
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuilderPieceInteractor::dyn_inDropZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::dyn_inDropZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inDropZone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BuilderPieceInteractor.Awake
void GlobalNamespace::BuilderPieceInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPieceInteractor.CalcLocalGridPlanes
void GlobalNamespace::BuilderPieceInteractor::CalcLocalGridPlanes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::CalcLocalGridPlanes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalcLocalGridPlanes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPieceInteractor.OnDestroy
void GlobalNamespace::BuilderPieceInteractor::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPieceInteractor.OnLateUpdate
void GlobalNamespace::BuilderPieceInteractor::OnLateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::OnLateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPieceInteractor.SetHandState
void GlobalNamespace::BuilderPieceInteractor::SetHandState(int handIndex, ::GlobalNamespace::BuilderPieceInteractor::HandState newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::SetHandState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHandState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handIndex), ::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handIndex, newState);
}
// Autogenerated method: BuilderPieceInteractor.SetInDropZone
void GlobalNamespace::BuilderPieceInteractor::SetInDropZone(bool inPieceDropZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::SetInDropZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInDropZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inPieceDropZone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inPieceDropZone);
}
// Autogenerated method: BuilderPieceInteractor.UpdateHandState
void GlobalNamespace::BuilderPieceInteractor::UpdateHandState(::GlobalNamespace::BuilderPieceInteractor::HandType handType, ::UnityEngine::Transform* handTransform, ::UnityEngine::Vector3 palmForwardLocal, ::UnityEngine::Transform* handAttachPoint, bool isGrabbing, bool wasGrabPressed, ::GlobalNamespace::HoldableObject* heldEquipment, bool grabDisabled, ::System::Collections::Generic::List_1<::GorillaTagScripts::BuilderAttachGridPlane*>* gridPlanes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::UpdateHandState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateHandState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handType), ::il2cpp_utils::ExtractType(handTransform), ::il2cpp_utils::ExtractType(palmForwardLocal), ::il2cpp_utils::ExtractType(handAttachPoint), ::il2cpp_utils::ExtractType(isGrabbing), ::il2cpp_utils::ExtractType(wasGrabPressed), ::il2cpp_utils::ExtractType(heldEquipment), ::il2cpp_utils::ExtractType(grabDisabled), ::il2cpp_utils::ExtractType(gridPlanes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handType, handTransform, palmForwardLocal, handAttachPoint, isGrabbing, wasGrabPressed, heldEquipment, grabDisabled, gridPlanes);
}
// Autogenerated method: BuilderPieceInteractor.ClearGlowBumps
void GlobalNamespace::BuilderPieceInteractor::ClearGlowBumps(int handIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::ClearGlowBumps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearGlowBumps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handIndex);
}
// Autogenerated method: BuilderPieceInteractor.AddGlowBumps
void GlobalNamespace::BuilderPieceInteractor::AddGlowBumps(int handIndex, ::GorillaTagScripts::BuilderPotentialPlacement potentialPlacement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::AddGlowBumps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGlowBumps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handIndex), ::il2cpp_utils::ExtractType(potentialPlacement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handIndex, potentialPlacement);
}
// Autogenerated method: BuilderPieceInteractor.UpdateGlowBumps
void GlobalNamespace::BuilderPieceInteractor::UpdateGlowBumps(int handIndex, float intensity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::UpdateGlowBumps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGlowBumps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handIndex), ::il2cpp_utils::ExtractType(intensity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handIndex, intensity);
}
// Autogenerated method: BuilderPieceInteractor.UpdatePullApartOffset
void GlobalNamespace::BuilderPieceInteractor::UpdatePullApartOffset(int handIndex, ::GlobalNamespace::BuilderPiece* potentialGrabPiece, ::UnityEngine::Vector3 pullApartDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::UpdatePullApartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePullApartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handIndex), ::il2cpp_utils::ExtractType(potentialGrabPiece), ::il2cpp_utils::ExtractType(pullApartDiff)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handIndex, potentialGrabPiece, pullApartDiff);
}
// Autogenerated method: BuilderPieceInteractor.ClearUnSnapOffset
void GlobalNamespace::BuilderPieceInteractor::ClearUnSnapOffset(int handIndex, ::GlobalNamespace::BuilderPiece* potentialGrabPiece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::ClearUnSnapOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearUnSnapOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handIndex), ::il2cpp_utils::ExtractType(potentialGrabPiece)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handIndex, potentialGrabPiece);
}
// Autogenerated method: BuilderPieceInteractor.RemovePieceFromHeld
void GlobalNamespace::BuilderPieceInteractor::RemovePieceFromHeld(::GlobalNamespace::BuilderPiece* piece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::RemovePieceFromHeld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovePieceFromHeld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece);
}
// Autogenerated method: BuilderPieceInteractor.CalcPieceLocalPosAndRot
void GlobalNamespace::BuilderPieceInteractor::CalcPieceLocalPosAndRot(::UnityEngine::Vector3 worldPosition, ::UnityEngine::Quaternion worldRotation, ::UnityEngine::Transform* attachPoint, ByRef<::UnityEngine::Vector3> localPosition, ByRef<::UnityEngine::Quaternion> localRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::CalcPieceLocalPosAndRot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalcPieceLocalPosAndRot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition), ::il2cpp_utils::ExtractType(worldRotation), ::il2cpp_utils::ExtractType(attachPoint), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, worldPosition, worldRotation, attachPoint, byref(localPosition), byref(localRotation));
}
// Autogenerated method: BuilderPieceInteractor.DisableCollisionsWithHands
void GlobalNamespace::BuilderPieceInteractor::DisableCollisionsWithHands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::DisableCollisionsWithHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableCollisionsWithHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPieceInteractor.DisableCollisionsWithHand
void GlobalNamespace::BuilderPieceInteractor::DisableCollisionsWithHand(bool leftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::DisableCollisionsWithHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableCollisionsWithHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leftHand);
}
// Autogenerated method: BuilderPieceInteractor.UpdatePieceDisables
void GlobalNamespace::BuilderPieceInteractor::UpdatePieceDisables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::UpdatePieceDisables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePieceDisables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderPieceInteractor.UpdatePieceDisablesForHand
void GlobalNamespace::BuilderPieceInteractor::UpdatePieceDisablesForHand(bool leftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::UpdatePieceDisablesForHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePieceDisablesForHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leftHand);
}
// Autogenerated method: BuilderPieceInteractor..cctor
void GlobalNamespace::BuilderPieceInteractor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BuilderPieceInteractor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderPieceInteractor/HandType
#include "GlobalNamespace/BuilderPieceInteractor_HandType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BuilderPieceInteractor/HandType Invalid
::GlobalNamespace::BuilderPieceInteractor::HandType GlobalNamespace::BuilderPieceInteractor::HandType::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandType::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPieceInteractor::HandType>("", "BuilderPieceInteractor/HandType", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPieceInteractor/HandType Invalid
void GlobalNamespace::BuilderPieceInteractor::HandType::_set_Invalid(::GlobalNamespace::BuilderPieceInteractor::HandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandType::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor/HandType", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public BuilderPieceInteractor/HandType Left
::GlobalNamespace::BuilderPieceInteractor::HandType GlobalNamespace::BuilderPieceInteractor::HandType::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandType::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPieceInteractor::HandType>("", "BuilderPieceInteractor/HandType", "Left"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPieceInteractor/HandType Left
void GlobalNamespace::BuilderPieceInteractor::HandType::_set_Left(::GlobalNamespace::BuilderPieceInteractor::HandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandType::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor/HandType", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public BuilderPieceInteractor/HandType Right
::GlobalNamespace::BuilderPieceInteractor::HandType GlobalNamespace::BuilderPieceInteractor::HandType::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandType::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPieceInteractor::HandType>("", "BuilderPieceInteractor/HandType", "Right"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPieceInteractor/HandType Right
void GlobalNamespace::BuilderPieceInteractor::HandType::_set_Right(::GlobalNamespace::BuilderPieceInteractor::HandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandType::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor/HandType", "Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderPieceInteractor::HandType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderPieceInteractor/HandState
#include "GlobalNamespace/BuilderPieceInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BuilderPieceInteractor/HandState Invalid
::GlobalNamespace::BuilderPieceInteractor::HandState GlobalNamespace::BuilderPieceInteractor::HandState::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandState::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPieceInteractor::HandState>("", "BuilderPieceInteractor/HandState", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPieceInteractor/HandState Invalid
void GlobalNamespace::BuilderPieceInteractor::HandState::_set_Invalid(::GlobalNamespace::BuilderPieceInteractor::HandState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandState::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor/HandState", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public BuilderPieceInteractor/HandState Empty
::GlobalNamespace::BuilderPieceInteractor::HandState GlobalNamespace::BuilderPieceInteractor::HandState::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandState::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPieceInteractor::HandState>("", "BuilderPieceInteractor/HandState", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPieceInteractor/HandState Empty
void GlobalNamespace::BuilderPieceInteractor::HandState::_set_Empty(::GlobalNamespace::BuilderPieceInteractor::HandState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandState::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor/HandState", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static public BuilderPieceInteractor/HandState Grabbed
::GlobalNamespace::BuilderPieceInteractor::HandState GlobalNamespace::BuilderPieceInteractor::HandState::_get_Grabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandState::_get_Grabbed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPieceInteractor::HandState>("", "BuilderPieceInteractor/HandState", "Grabbed"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPieceInteractor/HandState Grabbed
void GlobalNamespace::BuilderPieceInteractor::HandState::_set_Grabbed(::GlobalNamespace::BuilderPieceInteractor::HandState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandState::_set_Grabbed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor/HandState", "Grabbed", value));
}
// Autogenerated static field getter
// Get static field: static public BuilderPieceInteractor/HandState PotentialGrabbed
::GlobalNamespace::BuilderPieceInteractor::HandState GlobalNamespace::BuilderPieceInteractor::HandState::_get_PotentialGrabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandState::_get_PotentialGrabbed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPieceInteractor::HandState>("", "BuilderPieceInteractor/HandState", "PotentialGrabbed"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPieceInteractor/HandState PotentialGrabbed
void GlobalNamespace::BuilderPieceInteractor::HandState::_set_PotentialGrabbed(::GlobalNamespace::BuilderPieceInteractor::HandState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandState::_set_PotentialGrabbed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor/HandState", "PotentialGrabbed", value));
}
// Autogenerated static field getter
// Get static field: static public BuilderPieceInteractor/HandState WaitingForSnap
::GlobalNamespace::BuilderPieceInteractor::HandState GlobalNamespace::BuilderPieceInteractor::HandState::_get_WaitingForSnap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandState::_get_WaitingForSnap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPieceInteractor::HandState>("", "BuilderPieceInteractor/HandState", "WaitingForSnap"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPieceInteractor/HandState WaitingForSnap
void GlobalNamespace::BuilderPieceInteractor::HandState::_set_WaitingForSnap(::GlobalNamespace::BuilderPieceInteractor::HandState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandState::_set_WaitingForSnap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor/HandState", "WaitingForSnap", value));
}
// Autogenerated static field getter
// Get static field: static public BuilderPieceInteractor/HandState WaitingForUnSnap
::GlobalNamespace::BuilderPieceInteractor::HandState GlobalNamespace::BuilderPieceInteractor::HandState::_get_WaitingForUnSnap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandState::_get_WaitingForUnSnap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BuilderPieceInteractor::HandState>("", "BuilderPieceInteractor/HandState", "WaitingForUnSnap"));
}
// Autogenerated static field setter
// Set static field: static public BuilderPieceInteractor/HandState WaitingForUnSnap
void GlobalNamespace::BuilderPieceInteractor::HandState::_set_WaitingForUnSnap(::GlobalNamespace::BuilderPieceInteractor::HandState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandState::_set_WaitingForUnSnap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderPieceInteractor/HandState", "WaitingForUnSnap", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderPieceInteractor::HandState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderPieceInteractor::HandState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderTableDataRenderIndirectBatch
#include "GlobalNamespace/BuilderTableDataRenderIndirectBatch.hpp"
// Including type: UnityEngine.GraphicsBuffer
#include "UnityEngine/GraphicsBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 totalInstances
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_totalInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_totalInstances");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalInstances"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Matrix4x4> instanceObjectToWorld
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Matrix4x4>& GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_instanceObjectToWorld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_instanceObjectToWorld");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instanceObjectToWorld"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Matrix4x4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Int32> instanceTexIndex
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_instanceTexIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_instanceTexIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instanceTexIndex"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Single> instanceTint
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<float>& GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_instanceTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_instanceTint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instanceTint"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Int32> instanceLodLevel
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_instanceLodLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_instanceLodLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instanceLodLevel"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Int32> instanceLodLevelDirty
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_instanceLodLevelDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_instanceLodLevelDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instanceLodLevelDirty"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeList`1<BuilderTableMeshInstances> renderMeshes
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeList_1<::GlobalNamespace::BuilderTableMeshInstances>& GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_renderMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_renderMeshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderMeshes"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeList_1<::GlobalNamespace::BuilderTableMeshInstances>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GraphicsBuffer commandBuf
[[deprecated("Use field access instead!")]] ::UnityEngine::GraphicsBuffer*& GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_commandBuf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_commandBuf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "commandBuf"))->offset;
  return *reinterpret_cast<::UnityEngine::GraphicsBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GraphicsBuffer matrixBuf
[[deprecated("Use field access instead!")]] ::UnityEngine::GraphicsBuffer*& GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_matrixBuf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_matrixBuf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matrixBuf"))->offset;
  return *reinterpret_cast<::UnityEngine::GraphicsBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GraphicsBuffer texIndexBuf
[[deprecated("Use field access instead!")]] ::UnityEngine::GraphicsBuffer*& GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_texIndexBuf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_texIndexBuf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texIndexBuf"))->offset;
  return *reinterpret_cast<::UnityEngine::GraphicsBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GraphicsBuffer tintBuf
[[deprecated("Use field access instead!")]] ::UnityEngine::GraphicsBuffer*& GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_tintBuf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_tintBuf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tintBuf"))->offset;
  return *reinterpret_cast<::UnityEngine::GraphicsBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.GraphicsBuffer/IndirectDrawIndexedArgs> commandData
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::GraphicsBuffer::IndirectDrawIndexedArgs>& GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_commandData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_commandData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "commandData"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::GraphicsBuffer::IndirectDrawIndexedArgs>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 commandCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_commandCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderIndirectBatch::dyn_commandCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "commandCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderTableDataRenderData
#include "GlobalNamespace/BuilderTableDataRenderData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Texture2DArray
#include "UnityEngine/Texture2DArray.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: BuilderTableDataRenderIndirectBatch
#include "GlobalNamespace/BuilderTableDataRenderIndirectBatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 NUM_SPLIT_MESH_INSTANCE_GROUPS
int GlobalNamespace::BuilderTableDataRenderData::_get_NUM_SPLIT_MESH_INSTANCE_GROUPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::_get_NUM_SPLIT_MESH_INSTANCE_GROUPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BuilderTableDataRenderData", "NUM_SPLIT_MESH_INSTANCE_GROUPS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 NUM_SPLIT_MESH_INSTANCE_GROUPS
void GlobalNamespace::BuilderTableDataRenderData::_set_NUM_SPLIT_MESH_INSTANCE_GROUPS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::_set_NUM_SPLIT_MESH_INSTANCE_GROUPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderTableDataRenderData", "NUM_SPLIT_MESH_INSTANCE_GROUPS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 texWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderTableDataRenderData::dyn_texWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_texWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 texHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderTableDataRenderData::dyn_texHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_texHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextureFormat textureFormat
[[deprecated("Use field access instead!")]] ::UnityEngine::TextureFormat& GlobalNamespace::BuilderTableDataRenderData::dyn_textureFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_textureFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureFormat"))->offset;
  return *reinterpret_cast<::UnityEngine::TextureFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<UnityEngine.Material,System.Int32> materialToIndex
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Material*, int>*& GlobalNamespace::BuilderTableDataRenderData::dyn_materialToIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_materialToIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialToIndex"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Material*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Material> materials
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Material*>*& GlobalNamespace::BuilderTableDataRenderData::dyn_materials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_materials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materials"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Material*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material sharedMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::BuilderTableDataRenderData::dyn_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_sharedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material sharedMaterialIndirect
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::BuilderTableDataRenderData::dyn_sharedMaterialIndirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_sharedMaterialIndirect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharedMaterialIndirect"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<UnityEngine.Texture2D,System.Int32> textureToIndex
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Texture2D*, int>*& GlobalNamespace::BuilderTableDataRenderData::dyn_textureToIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_textureToIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureToIndex"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Texture2D*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Texture2D> textures
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Texture2D*>*& GlobalNamespace::BuilderTableDataRenderData::dyn_textures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_textures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textures"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Texture2D*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Material> perTextureMaterial
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Material*>*& GlobalNamespace::BuilderTableDataRenderData::dyn_perTextureMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_perTextureMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perTextureMaterial"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Material*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.MaterialPropertyBlock> perTexturePropertyBlock
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::MaterialPropertyBlock*>*& GlobalNamespace::BuilderTableDataRenderData::dyn_perTexturePropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_perTexturePropertyBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perTexturePropertyBlock"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::MaterialPropertyBlock*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2DArray sharedTexArray
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2DArray*& GlobalNamespace::BuilderTableDataRenderData::dyn_sharedTexArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_sharedTexArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharedTexArray"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2DArray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<UnityEngine.Mesh,System.Int32> meshToIndex
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, int>*& GlobalNamespace::BuilderTableDataRenderData::dyn_meshToIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_meshToIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshToIndex"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Mesh> meshes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Mesh*>*& GlobalNamespace::BuilderTableDataRenderData::dyn_meshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_meshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Mesh*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Int32> meshInstanceCount
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GlobalNamespace::BuilderTableDataRenderData::dyn_meshInstanceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_meshInstanceCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshInstanceCount"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeList`1<BuilderTableSubMesh> subMeshes
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeList_1<::GlobalNamespace::BuilderTableSubMesh>& GlobalNamespace::BuilderTableDataRenderData::dyn_subMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_subMeshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subMeshes"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeList_1<::GlobalNamespace::BuilderTableSubMesh>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Mesh sharedMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::BuilderTableDataRenderData::dyn_sharedMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_sharedMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharedMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuilderTableDataRenderIndirectBatch dynamicBatch
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderTableDataRenderIndirectBatch*& GlobalNamespace::BuilderTableDataRenderData::dyn_dynamicBatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_dynamicBatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dynamicBatch"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderTableDataRenderIndirectBatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BuilderTableDataRenderIndirectBatch staticBatch
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderTableDataRenderIndirectBatch*& GlobalNamespace::BuilderTableDataRenderData::dyn_staticBatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTableDataRenderData::dyn_staticBatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "staticBatch"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderTableDataRenderIndirectBatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderRenderer
#include "GlobalNamespace/BuilderRenderer.hpp"
// Including type: BuilderRenderer/SetupInstanceDataForMesh
#include "GlobalNamespace/BuilderRenderer_SetupInstanceDataForMesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: BuilderTableDataRenderData
#include "GlobalNamespace/BuilderTableDataRenderData.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: BuilderPiece
#include "GlobalNamespace/BuilderPiece.hpp"
// Including type: BuilderTableDataRenderIndirectBatch
#include "GlobalNamespace/BuilderTableDataRenderIndirectBatch.hpp"
// Including type: Unity.Collections.NativeList`1
#include "Unity/Collections/NativeList_1.hpp"
// Including type: UnityEngine.Jobs.TransformAccessArray
#include "UnityEngine/Jobs/TransformAccessArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String texturePropName
::StringW GlobalNamespace::BuilderRenderer::_get_texturePropName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_texturePropName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BuilderRenderer", "texturePropName"));
}
// Autogenerated static field setter
// Set static field: static private System.String texturePropName
void GlobalNamespace::BuilderRenderer::_set_texturePropName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_texturePropName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "texturePropName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String textureArrayPropName
::StringW GlobalNamespace::BuilderRenderer::_get_textureArrayPropName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_textureArrayPropName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BuilderRenderer", "textureArrayPropName"));
}
// Autogenerated static field setter
// Set static field: static private System.String textureArrayPropName
void GlobalNamespace::BuilderRenderer::_set_textureArrayPropName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_textureArrayPropName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "textureArrayPropName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String textureArrayIndexPropName
::StringW GlobalNamespace::BuilderRenderer::_get_textureArrayIndexPropName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_textureArrayIndexPropName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BuilderRenderer", "textureArrayIndexPropName"));
}
// Autogenerated static field setter
// Set static field: static private System.String textureArrayIndexPropName
void GlobalNamespace::BuilderRenderer::_set_textureArrayIndexPropName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_textureArrayIndexPropName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "textureArrayIndexPropName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String transformMatrixPropName
::StringW GlobalNamespace::BuilderRenderer::_get_transformMatrixPropName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_transformMatrixPropName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BuilderRenderer", "transformMatrixPropName"));
}
// Autogenerated static field setter
// Set static field: static private System.String transformMatrixPropName
void GlobalNamespace::BuilderRenderer::_set_transformMatrixPropName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_transformMatrixPropName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "transformMatrixPropName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String texIndexPropName
::StringW GlobalNamespace::BuilderRenderer::_get_texIndexPropName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_texIndexPropName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BuilderRenderer", "texIndexPropName"));
}
// Autogenerated static field setter
// Set static field: static private System.String texIndexPropName
void GlobalNamespace::BuilderRenderer::_set_texIndexPropName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_texIndexPropName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "texIndexPropName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String tintPropName
::StringW GlobalNamespace::BuilderRenderer::_get_tintPropName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_tintPropName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BuilderRenderer", "tintPropName"));
}
// Autogenerated static field setter
// Set static field: static private System.String tintPropName
void GlobalNamespace::BuilderRenderer::_set_tintPropName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_tintPropName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "tintPropName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MAX_STATIC_INSTANCES
int GlobalNamespace::BuilderRenderer::_get_MAX_STATIC_INSTANCES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_MAX_STATIC_INSTANCES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BuilderRenderer", "MAX_STATIC_INSTANCES"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MAX_STATIC_INSTANCES
void GlobalNamespace::BuilderRenderer::_set_MAX_STATIC_INSTANCES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_MAX_STATIC_INSTANCES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "MAX_STATIC_INSTANCES", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MAX_DYNAMIC_INSTANCES
int GlobalNamespace::BuilderRenderer::_get_MAX_DYNAMIC_INSTANCES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_MAX_DYNAMIC_INSTANCES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BuilderRenderer", "MAX_DYNAMIC_INSTANCES"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MAX_DYNAMIC_INSTANCES
void GlobalNamespace::BuilderRenderer::_set_MAX_DYNAMIC_INSTANCES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_MAX_DYNAMIC_INSTANCES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "MAX_DYNAMIC_INSTANCES", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.MeshRenderer> meshRenderers
::System::Collections::Generic::List_1<::UnityEngine::MeshRenderer*>* GlobalNamespace::BuilderRenderer::_get_meshRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_meshRenderers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::MeshRenderer*>*>("", "BuilderRenderer", "meshRenderers"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.MeshRenderer> meshRenderers
void GlobalNamespace::BuilderRenderer::_set_meshRenderers(::System::Collections::Generic::List_1<::UnityEngine::MeshRenderer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_meshRenderers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "meshRenderers", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MAX_TOTAL_VERTS
int GlobalNamespace::BuilderRenderer::_get_MAX_TOTAL_VERTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_MAX_TOTAL_VERTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BuilderRenderer", "MAX_TOTAL_VERTS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAX_TOTAL_VERTS
void GlobalNamespace::BuilderRenderer::_set_MAX_TOTAL_VERTS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_MAX_TOTAL_VERTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "MAX_TOTAL_VERTS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MAX_TOTAL_TRIS
int GlobalNamespace::BuilderRenderer::_get_MAX_TOTAL_TRIS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_MAX_TOTAL_TRIS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BuilderRenderer", "MAX_TOTAL_TRIS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAX_TOTAL_TRIS
void GlobalNamespace::BuilderRenderer::_set_MAX_TOTAL_TRIS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_MAX_TOTAL_TRIS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "MAX_TOTAL_TRIS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.Vector3> verticesAll
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* GlobalNamespace::BuilderRenderer::_get_verticesAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_verticesAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*>("", "BuilderRenderer", "verticesAll"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.Vector3> verticesAll
void GlobalNamespace::BuilderRenderer::_set_verticesAll(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_verticesAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "verticesAll", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.Vector3> normalsAll
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* GlobalNamespace::BuilderRenderer::_get_normalsAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_normalsAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*>("", "BuilderRenderer", "normalsAll"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.Vector3> normalsAll
void GlobalNamespace::BuilderRenderer::_set_normalsAll(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_normalsAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "normalsAll", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.Vector2> uv1All
::System::Collections::Generic::List_1<::UnityEngine::Vector2>* GlobalNamespace::BuilderRenderer::_get_uv1All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_uv1All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Vector2>*>("", "BuilderRenderer", "uv1All"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.Vector2> uv1All
void GlobalNamespace::BuilderRenderer::_set_uv1All(::System::Collections::Generic::List_1<::UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_uv1All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "uv1All", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Int32> trianglesAll
::System::Collections::Generic::List_1<int>* GlobalNamespace::BuilderRenderer::_get_trianglesAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_trianglesAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<int>*>("", "BuilderRenderer", "trianglesAll"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Int32> trianglesAll
void GlobalNamespace::BuilderRenderer::_set_trianglesAll(::System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_trianglesAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "trianglesAll", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.Vector3> vertices
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* GlobalNamespace::BuilderRenderer::_get_vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_vertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*>("", "BuilderRenderer", "vertices"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.Vector3> vertices
void GlobalNamespace::BuilderRenderer::_set_vertices(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_vertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "vertices", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.Vector3> normals
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* GlobalNamespace::BuilderRenderer::_get_normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_normals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*>("", "BuilderRenderer", "normals"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.Vector3> normals
void GlobalNamespace::BuilderRenderer::_set_normals(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_normals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "normals", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.Vector2> uv1
::System::Collections::Generic::List_1<::UnityEngine::Vector2>* GlobalNamespace::BuilderRenderer::_get_uv1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_uv1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Vector2>*>("", "BuilderRenderer", "uv1"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.Vector2> uv1
void GlobalNamespace::BuilderRenderer::_set_uv1(::System::Collections::Generic::List_1<::UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_uv1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "uv1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Int32> triangles
::System::Collections::Generic::List_1<int>* GlobalNamespace::BuilderRenderer::_get_triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_get_triangles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<int>*>("", "BuilderRenderer", "triangles"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Int32> triangles
void GlobalNamespace::BuilderRenderer::_set_triangles(::System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::_set_triangles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BuilderRenderer", "triangles", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material sharedMaterialBase
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::BuilderRenderer::dyn_sharedMaterialBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::dyn_sharedMaterialBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharedMaterialBase"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material sharedMaterialIndirectBase
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::BuilderRenderer::dyn_sharedMaterialIndirectBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::dyn_sharedMaterialIndirectBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharedMaterialIndirectBase"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BuilderTableDataRenderData renderData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BuilderTableDataRenderData*& GlobalNamespace::BuilderRenderer::dyn_renderData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::dyn_renderData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BuilderTableDataRenderData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuilderRenderer::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean built
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuilderRenderer::dyn_built() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::dyn_built");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "built"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean showing
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuilderRenderer::dyn_showing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::dyn_showing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BuilderRenderer.Awake
void GlobalNamespace::BuilderRenderer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderRenderer.InitIfNeeded
void GlobalNamespace::BuilderRenderer::InitIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::InitIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderRenderer.Show
void GlobalNamespace::BuilderRenderer::Show(bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, show);
}
// Autogenerated method: BuilderRenderer.BuildRenderer
void GlobalNamespace::BuilderRenderer::BuildRenderer(::System::Collections::Generic::List_1<::GlobalNamespace::BuilderPiece*>* piecePrefabs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::BuildRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piecePrefabs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piecePrefabs);
}
// Autogenerated method: BuilderRenderer.LateUpdate
void GlobalNamespace::BuilderRenderer::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderRenderer.AddPrefab
void GlobalNamespace::BuilderRenderer::AddPrefab(::GlobalNamespace::BuilderPiece* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::AddPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefab);
}
// Autogenerated method: BuilderRenderer.AddMaterial
bool GlobalNamespace::BuilderRenderer::AddMaterial(::UnityEngine::Material* material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::AddMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, material);
}
// Autogenerated method: BuilderRenderer.BuildSharedMaterial
void GlobalNamespace::BuilderRenderer::BuildSharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::BuildSharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderRenderer.BuildSharedMesh
void GlobalNamespace::BuilderRenderer::BuildSharedMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::BuildSharedMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildSharedMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderRenderer.BuildBuffer
void GlobalNamespace::BuilderRenderer::BuildBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::BuildBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderRenderer.BuildBatch
void GlobalNamespace::BuilderRenderer::BuildBatch(::GlobalNamespace::BuilderTableDataRenderIndirectBatch* indirectBatch, int meshCount, int maxInstances) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::BuildBatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BuilderRenderer", "BuildBatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indirectBatch), ::il2cpp_utils::ExtractType(meshCount), ::il2cpp_utils::ExtractType(maxInstances)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, indirectBatch, meshCount, maxInstances);
}
// Autogenerated method: BuilderRenderer.DestroyBuffer
void GlobalNamespace::BuilderRenderer::DestroyBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::DestroyBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderRenderer.DestroyBatch
void GlobalNamespace::BuilderRenderer::DestroyBatch(::GlobalNamespace::BuilderTableDataRenderIndirectBatch* indirectBatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::DestroyBatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BuilderRenderer", "DestroyBatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indirectBatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, indirectBatch);
}
// Autogenerated method: BuilderRenderer.RenderIndirect
void GlobalNamespace::BuilderRenderer::RenderIndirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::RenderIndirect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderIndirect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderRenderer.SetupIndirectBatchArgs
void GlobalNamespace::BuilderRenderer::SetupIndirectBatchArgs(::GlobalNamespace::BuilderTableDataRenderIndirectBatch* indirectBatch, ::Unity::Collections::NativeList_1<::GlobalNamespace::BuilderTableSubMesh> subMeshes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::SetupIndirectBatchArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BuilderRenderer", "SetupIndirectBatchArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indirectBatch), ::il2cpp_utils::ExtractType(subMeshes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, indirectBatch, subMeshes);
}
// Autogenerated method: BuilderRenderer.RenderIndirectBatch
void GlobalNamespace::BuilderRenderer::RenderIndirectBatch(::GlobalNamespace::BuilderTableDataRenderIndirectBatch* indirectBatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::RenderIndirectBatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderIndirectBatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indirectBatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, indirectBatch);
}
// Autogenerated method: BuilderRenderer.AddPiece
void GlobalNamespace::BuilderRenderer::AddPiece(::GlobalNamespace::BuilderPiece* piece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::AddPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece);
}
// Autogenerated method: BuilderRenderer.RemovePiece
void GlobalNamespace::BuilderRenderer::RemovePiece(::GlobalNamespace::BuilderPiece* piece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::RemovePiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovePiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece);
}
// Autogenerated method: BuilderRenderer.ChangePieceIndirectMaterial
void GlobalNamespace::BuilderRenderer::ChangePieceIndirectMaterial(::GlobalNamespace::BuilderPiece* piece, ::System::Collections::Generic::List_1<::UnityEngine::MeshRenderer*>* targetRenderers, ::UnityEngine::Material* targetMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::ChangePieceIndirectMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangePieceIndirectMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece), ::il2cpp_utils::ExtractType(targetRenderers), ::il2cpp_utils::ExtractType(targetMaterial)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece, targetRenderers, targetMaterial);
}
// Autogenerated method: BuilderRenderer.RemoveAt
void GlobalNamespace::BuilderRenderer::RemoveAt(::UnityEngine::Jobs::TransformAccessArray a, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BuilderRenderer", "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, i);
}
// Autogenerated method: BuilderRenderer.SetPieceTint
void GlobalNamespace::BuilderRenderer::SetPieceTint(::GlobalNamespace::BuilderPiece* piece, float tint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::SetPieceTint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPieceTint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece), ::il2cpp_utils::ExtractType(tint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece, tint);
}
// Autogenerated method: BuilderRenderer..cctor
void GlobalNamespace::BuilderRenderer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BuilderRenderer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderRenderer/SetupInstanceDataForMesh
#include "GlobalNamespace/BuilderRenderer_SetupInstanceDataForMesh.hpp"
// Including type: UnityEngine.Jobs.TransformAccess
#include "UnityEngine/Jobs/TransformAccess.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeList`1<System.Int32> texIndex
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeList_1<int>& GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_texIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_texIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texIndex"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeList_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeList`1<System.Single> tint
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeList_1<float>& GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_tint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_tint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tint"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeList_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GraphicsBuffer/IndirectDrawIndexedArgs commandData
[[deprecated("Use field access instead!")]] ::UnityEngine::GraphicsBuffer::IndirectDrawIndexedArgs& GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_commandData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_commandData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "commandData"))->offset;
  return *reinterpret_cast<::UnityEngine::GraphicsBuffer::IndirectDrawIndexedArgs*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 cameraPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_cameraPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_cameraPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Int32> instanceTexIndex
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_instanceTexIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_instanceTexIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instanceTexIndex"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Matrix4x4> objectToWorld
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Matrix4x4>& GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_objectToWorld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_objectToWorld");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectToWorld"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Matrix4x4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Single> instanceTint
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<float>& GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_instanceTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_instanceTint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instanceTint"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Int32> lodLevel
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_lodLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_lodLevel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lodLevel"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Int32> lodDirty
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_lodDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::dyn_lodDirty");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lodDirty"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BuilderRenderer/SetupInstanceDataForMesh.Execute
void GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::Execute(int index, ::UnityEngine::Jobs::TransformAccess transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::BuilderRenderer::SetupInstanceDataForMesh), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, transform);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderResizeWatch
#include "GlobalNamespace/BuilderResizeWatch.hpp"
// Including type: HeldButton
#include "GlobalNamespace/HeldButton.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: SizeManager
#include "GlobalNamespace/SizeManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HeldButton enlargeButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HeldButton*& GlobalNamespace::BuilderResizeWatch::dyn_enlargeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderResizeWatch::dyn_enlargeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enlargeButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HeldButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig ownerRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::BuilderResizeWatch::dyn_ownerRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderResizeWatch::dyn_ownerRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SizeManager sizeManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeManager*& GlobalNamespace::BuilderResizeWatch::dyn_sizeManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderResizeWatch::dyn_sizeManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sizeManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SizeManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean affectLayerA
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuilderResizeWatch::dyn_affectLayerA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderResizeWatch::dyn_affectLayerA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affectLayerA"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean affectLayerB
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuilderResizeWatch::dyn_affectLayerB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderResizeWatch::dyn_affectLayerB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affectLayerB"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean affectLayerC
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuilderResizeWatch::dyn_affectLayerC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderResizeWatch::dyn_affectLayerC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affectLayerC"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean affectLayerD
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BuilderResizeWatch::dyn_affectLayerD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderResizeWatch::dyn_affectLayerD");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affectLayerD"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BuilderResizeWatch.get_SizeLayerMask
int GlobalNamespace::BuilderResizeWatch::get_SizeLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderResizeWatch::get_SizeLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SizeLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BuilderResizeWatch.Start
void GlobalNamespace::BuilderResizeWatch::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderResizeWatch::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderResizeWatch.OnDestroy
void GlobalNamespace::BuilderResizeWatch::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderResizeWatch::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderResizeWatch.OnEnlargeButtonPressed
void GlobalNamespace::BuilderResizeWatch::OnEnlargeButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderResizeWatch::OnEnlargeButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnlargeButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderRoomBoundary
#include "GlobalNamespace/BuilderRoomBoundary.hpp"
// Including type: SizeChangerTrigger
#include "GlobalNamespace/SizeChangerTrigger.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SizeChangerTrigger enableOnEnterTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeChangerTrigger*& GlobalNamespace::BuilderRoomBoundary::dyn_enableOnEnterTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRoomBoundary::dyn_enableOnEnterTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableOnEnterTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SizeChangerTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SizeChangerTrigger disableOnExitTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SizeChangerTrigger*& GlobalNamespace::BuilderRoomBoundary::dyn_disableOnExitTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRoomBoundary::dyn_disableOnExitTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableOnExitTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SizeChangerTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig rigRef
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::BuilderRoomBoundary::dyn_rigRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRoomBoundary::dyn_rigRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigRef"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BuilderRoomBoundary.Awake
void GlobalNamespace::BuilderRoomBoundary::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRoomBoundary::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderRoomBoundary.OnDestroy
void GlobalNamespace::BuilderRoomBoundary::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRoomBoundary::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BuilderRoomBoundary.OnEnteredBoundary
void GlobalNamespace::BuilderRoomBoundary::OnEnteredBoundary(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRoomBoundary::OnEnteredBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnteredBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: BuilderRoomBoundary.OnExitedBoundary
void GlobalNamespace::BuilderRoomBoundary::OnExitedBoundary(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderRoomBoundary::OnExitedBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnExitedBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderShelf
#include "GlobalNamespace/BuilderShelf.hpp"
// Including type: BuilderShelf/BuildPieceSpawn
#include "GlobalNamespace/BuilderShelf_BuildPieceSpawn.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaTagScripts.BuilderTable
#include "GorillaTagScripts/BuilderTable.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderShelf::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderShelf::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single separation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BuilderShelf::dyn_separation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderShelf::dyn_separation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "separation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform center
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::BuilderShelf::dyn_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderShelf::dyn_center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "center"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material overrideMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::BuilderShelf::dyn_overrideMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderShelf::dyn_overrideMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BuilderShelf/BuildPieceSpawn> buildPieceSpawns
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BuilderShelf::BuildPieceSpawn*>*& GlobalNamespace::BuilderShelf::dyn_buildPieceSpawns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderShelf::dyn_buildPieceSpawns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buildPieceSpawns"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BuilderShelf::BuildPieceSpawn*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BuilderShelf.BuildItems
void GlobalNamespace::BuilderShelf::BuildItems(::GorillaTagScripts::BuilderTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderShelf::BuildItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: BuilderShelf.GetSpawnLocation
void GlobalNamespace::BuilderShelf::GetSpawnLocation(int slot, ::GlobalNamespace::BuilderShelf::BuildPieceSpawn* spawn, ByRef<::UnityEngine::Vector3> spawnPosition, ByRef<::UnityEngine::Quaternion> spawnRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderShelf::GetSpawnLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpawnLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(spawn), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slot, spawn, byref(spawnPosition), byref(spawnRotation));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderShelf/BuildPieceSpawn
#include "GlobalNamespace/BuilderShelf_BuildPieceSpawn.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject buildPiecePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BuilderShelf::BuildPieceSpawn::dyn_buildPiecePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderShelf::BuildPieceSpawn::dyn_buildPiecePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buildPiecePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String materialID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BuilderShelf::BuildPieceSpawn::dyn_materialID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderShelf::BuildPieceSpawn::dyn_materialID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BuilderShelf::BuildPieceSpawn::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderShelf::BuildPieceSpawn::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 localAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::BuilderShelf::BuildPieceSpawn::dyn_localAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderShelf::BuildPieceSpawn::dyn_localAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 positionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::BuilderShelf::BuildPieceSpawn::dyn_positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderShelf::BuildPieceSpawn::dyn_positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::BuilderShelf::BuildPieceSpawn::dyn_rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderShelf::BuildPieceSpawn::dyn_rotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Mesh previewMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::BuilderShelf::BuildPieceSpawn::dyn_previewMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderShelf::BuildPieceSpawn::dyn_previewMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BuilderTriggerEnable
#include "GlobalNamespace/BuilderTriggerEnable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> activateOnEnter
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::BuilderTriggerEnable::dyn_activateOnEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTriggerEnable::dyn_activateOnEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activateOnEnter"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> deactivateOnEnter
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::BuilderTriggerEnable::dyn_deactivateOnEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTriggerEnable::dyn_deactivateOnEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deactivateOnEnter"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> activateOnExit
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::BuilderTriggerEnable::dyn_activateOnExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTriggerEnable::dyn_activateOnExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activateOnExit"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> deactivateOnExit
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::BuilderTriggerEnable::dyn_deactivateOnExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTriggerEnable::dyn_deactivateOnExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deactivateOnExit"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BuilderTriggerEnable.OnTriggerEnter
void GlobalNamespace::BuilderTriggerEnable::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTriggerEnable::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: BuilderTriggerEnable.OnTriggerExit
void GlobalNamespace::BuilderTriggerEnable::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BuilderTriggerEnable::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Campfire
#include "GlobalNamespace/Campfire.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform baseFire
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::Campfire::dyn_baseFire() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_baseFire");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseFire"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform middleFire
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::Campfire::dyn_middleFire() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_middleFire");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "middleFire"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform topFire
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::Campfire::dyn_topFire() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_topFire");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topFire"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single baseMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_baseMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_baseMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single middleMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_middleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_middleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "middleMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single topMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_topMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_topMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bottomRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_bottomRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_bottomRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bottomRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single middleRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_middleRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_middleRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "middleRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single topRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_topRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_topRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastAngleBottom
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_lastAngleBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_lastAngleBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAngleBottom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastAngleMiddle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_lastAngleMiddle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_lastAngleMiddle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAngleMiddle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastAngleTop
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_lastAngleTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_lastAngleTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAngleTop"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single perlinStepBottom
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_perlinStepBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_perlinStepBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinStepBottom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single perlinStepMiddle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_perlinStepMiddle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_perlinStepMiddle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinStepMiddle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single perlinStepTop
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_perlinStepTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_perlinStepTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinStepTop"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single perlinBottom
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_perlinBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_perlinBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinBottom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single perlinMiddle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_perlinMiddle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_perlinMiddle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinMiddle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single perlinTop
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_perlinTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_perlinTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinTop"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startingRotationBottom
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_startingRotationBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_startingRotationBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingRotationBottom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startingRotationMiddle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_startingRotationMiddle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_startingRotationMiddle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingRotationMiddle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startingRotationTop
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_startingRotationTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_startingRotationTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingRotationTop"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single slerp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_slerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_slerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slerp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean mergedBottom
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Campfire::dyn_mergedBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_mergedBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mergedBottom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean mergedMiddle
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Campfire::dyn_mergedMiddle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_mergedMiddle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mergedMiddle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean mergedTop
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Campfire::dyn_mergedTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_mergedTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mergedTop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String lastTimeOfDay
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Campfire::dyn_lastTimeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_lastTimeOfDay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTimeOfDay"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material mat
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::Campfire::dyn_mat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_mat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single h
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_h");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "h"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single s
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single v
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_v() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_v");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "v"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 overrideDayNight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Campfire::dyn_overrideDayNight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_overrideDayNight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideDayNight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 tempVec
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Campfire::dyn_tempVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_tempVec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempVec"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean[] isActive
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& GlobalNamespace::Campfire::dyn_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isActive"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean wasActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Campfire::dyn_wasActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_wasActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Campfire.Start
void GlobalNamespace::Campfire::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Campfire.LateUpdate
void GlobalNamespace::Campfire::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Campfire.Flap
void GlobalNamespace::Campfire::Flap(ByRef<float> perlinValue, float perlinStep, ByRef<float> lastAngle, ByRef<::UnityEngine::Transform*> flameTransform, float range, float multiplier, ByRef<bool> isMerged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::Flap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perlinValue), ::il2cpp_utils::ExtractType(perlinStep), ::il2cpp_utils::ExtractType(lastAngle), ::il2cpp_utils::ExtractType(flameTransform), ::il2cpp_utils::ExtractType(range), ::il2cpp_utils::ExtractType(multiplier), ::il2cpp_utils::ExtractType(isMerged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(perlinValue), perlinStep, byref(lastAngle), byref(flameTransform), range, multiplier, byref(isMerged));
}
// Autogenerated method: Campfire.ReturnToOff
void GlobalNamespace::Campfire::ReturnToOff(ByRef<::UnityEngine::Transform*> startTransform, float targetAngle, ByRef<bool> isMerged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::ReturnToOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReturnToOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTransform), ::il2cpp_utils::ExtractType(targetAngle), ::il2cpp_utils::ExtractType(isMerged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(startTransform), targetAngle, byref(isMerged));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: CheatUpdate
#include "GlobalNamespace/CheatUpdate.hpp"
// Including type: CheatUpdate/<UpdateNumberOfPlayers>d__1
#include "GlobalNamespace/CheatUpdate_-UpdateNumberOfPlayers-d__1.hpp"
// Including type: CheatUpdate/<UpdatePlayerCount>d__2
#include "GlobalNamespace/CheatUpdate_-UpdatePlayerCount-d__2.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CheatUpdate.Start
void GlobalNamespace::CheatUpdate::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate.UpdateNumberOfPlayers
::System::Collections::IEnumerator* GlobalNamespace::CheatUpdate::UpdateNumberOfPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::UpdateNumberOfPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNumberOfPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate.UpdatePlayerCount
::System::Collections::IEnumerator* GlobalNamespace::CheatUpdate::UpdatePlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::UpdatePlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CheatUpdate/<UpdateNumberOfPlayers>d__1
#include "GlobalNamespace/CheatUpdate_-UpdateNumberOfPlayers-d__1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CheatUpdate <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CheatUpdate*& GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CheatUpdate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CheatUpdate/<UpdateNumberOfPlayers>d__1.System.IDisposable.Dispose
void GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdateNumberOfPlayers>d__1.MoveNext
bool GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdateNumberOfPlayers>d__1.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdateNumberOfPlayers>d__1.System.Collections.IEnumerator.Reset
void GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdateNumberOfPlayers>d__1.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CheatUpdate/<UpdatePlayerCount>d__2
#include "GlobalNamespace/CheatUpdate_-UpdatePlayerCount-d__2.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::dyn_$www$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::dyn_$www$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CheatUpdate/<UpdatePlayerCount>d__2.System.IDisposable.Dispose
void GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdatePlayerCount>d__2.MoveNext
bool GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdatePlayerCount>d__2.<>m__Finally1
void GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdatePlayerCount>d__2.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdatePlayerCount>d__2.System.Collections.IEnumerator.Reset
void GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdatePlayerCount>d__2.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OverrideControllers
#include "GlobalNamespace/OverrideControllers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OverrideControllers None
::GlobalNamespace::OverrideControllers GlobalNamespace::OverrideControllers::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverrideControllers::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OverrideControllers>("", "OverrideControllers", "None"));
}
// Autogenerated static field setter
// Set static field: static public OverrideControllers None
void GlobalNamespace::OverrideControllers::_set_None(::GlobalNamespace::OverrideControllers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverrideControllers::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OverrideControllers", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OverrideControllers LeftController
::GlobalNamespace::OverrideControllers GlobalNamespace::OverrideControllers::_get_LeftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverrideControllers::_get_LeftController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OverrideControllers>("", "OverrideControllers", "LeftController"));
}
// Autogenerated static field setter
// Set static field: static public OverrideControllers LeftController
void GlobalNamespace::OverrideControllers::_set_LeftController(::GlobalNamespace::OverrideControllers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverrideControllers::_set_LeftController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OverrideControllers", "LeftController", value));
}
// Autogenerated static field getter
// Get static field: static public OverrideControllers RightController
::GlobalNamespace::OverrideControllers GlobalNamespace::OverrideControllers::_get_RightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverrideControllers::_get_RightController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OverrideControllers>("", "OverrideControllers", "RightController"));
}
// Autogenerated static field setter
// Set static field: static public OverrideControllers RightController
void GlobalNamespace::OverrideControllers::_set_RightController(::GlobalNamespace::OverrideControllers value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverrideControllers::_set_RightController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OverrideControllers", "RightController", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OverrideControllers::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverrideControllers::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: HandTransformFollowOffest
#include "GlobalNamespace/HandTransformFollowOffest.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.Transform followTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::HandTransformFollowOffest::dyn_followTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandTransformFollowOffest::dyn_followTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] targetTransforms
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::HandTransformFollowOffest::dyn_targetTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandTransformFollowOffest::dyn_targetTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetTransforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 positionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::HandTransformFollowOffest::dyn_positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandTransformFollowOffest::dyn_positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Quaternion rotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::HandTransformFollowOffest::dyn_rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandTransformFollowOffest::dyn_rotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::HandTransformFollowOffest::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandTransformFollowOffest::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::HandTransformFollowOffest::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandTransformFollowOffest::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandTransformFollowOffest.UpdatePositionRotation
void GlobalNamespace::HandTransformFollowOffest::UpdatePositionRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandTransformFollowOffest::UpdatePositionRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePositionRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ConnectedControllerHandler
#include "GlobalNamespace/ConnectedControllerHandler.hpp"
// Including type: ConnectedControllerHandler/<ControllerValidator>d__36
#include "GlobalNamespace/ConnectedControllerHandler_-ControllerValidator-d__36.hpp"
// Including type: HandTransformFollowOffest
#include "GlobalNamespace/HandTransformFollowOffest.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn
#include "UnityEngine/XR/Interaction/Toolkit/GorillaSnapTurn.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaLocomotion.Player
#include "GorillaLocomotion/Player.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.XR.InputDevice
#include "UnityEngine/XR/InputDevice.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private ConnectedControllerHandler <Instance>k__BackingField
::GlobalNamespace::ConnectedControllerHandler* GlobalNamespace::ConnectedControllerHandler::_get_$Instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::_get_$Instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectedControllerHandler*>("", "ConnectedControllerHandler", "<Instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private ConnectedControllerHandler <Instance>k__BackingField
void GlobalNamespace::ConnectedControllerHandler::_set_$Instance$k__BackingField(::GlobalNamespace::ConnectedControllerHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::_set_$Instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedControllerHandler", "<Instance>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.XR.InputDeviceCharacteristics rightCharecteristics
::UnityEngine::XR::InputDeviceCharacteristics GlobalNamespace::ConnectedControllerHandler::_get_rightCharecteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::_get_rightCharecteristics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("", "ConnectedControllerHandler", "rightCharecteristics"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.XR.InputDeviceCharacteristics rightCharecteristics
void GlobalNamespace::ConnectedControllerHandler::_set_rightCharecteristics(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::_set_rightCharecteristics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedControllerHandler", "rightCharecteristics", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.XR.InputDeviceCharacteristics leftCharecteristics
::UnityEngine::XR::InputDeviceCharacteristics GlobalNamespace::ConnectedControllerHandler::_get_leftCharecteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::_get_leftCharecteristics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputDeviceCharacteristics>("", "ConnectedControllerHandler", "leftCharecteristics"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.XR.InputDeviceCharacteristics leftCharecteristics
void GlobalNamespace::ConnectedControllerHandler::_set_leftCharecteristics(::UnityEngine::XR::InputDeviceCharacteristics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::_set_leftCharecteristics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedControllerHandler", "leftCharecteristics", value));
}
// Autogenerated instance field getter
// Get instance field: private HandTransformFollowOffest rightHandFollower
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HandTransformFollowOffest*& GlobalNamespace::ConnectedControllerHandler::dyn_rightHandFollower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_rightHandFollower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandFollower"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandTransformFollowOffest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HandTransformFollowOffest leftHandFollower
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HandTransformFollowOffest*& GlobalNamespace::ConnectedControllerHandler::dyn_leftHandFollower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_leftHandFollower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandFollower"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandTransformFollowOffest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController rightXRController
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRController*& GlobalNamespace::ConnectedControllerHandler::dyn_rightXRController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_rightXRController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightXRController"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController leftXRController
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRController*& GlobalNamespace::ConnectedControllerHandler::dyn_leftXRController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_leftXRController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftXRController"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn snapTurnController
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn*& GlobalNamespace::ConnectedControllerHandler::dyn_snapTurnController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_snapTurnController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapTurnController"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRController> rightControllerList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>*& GlobalNamespace::ConnectedControllerHandler::dyn_rightControllerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_rightControllerList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRController> leftcontrollerList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>*& GlobalNamespace::ConnectedControllerHandler::dyn_leftcontrollerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_leftcontrollerList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftcontrollerList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean rightControllerValid
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ConnectedControllerHandler::dyn_rightControllerValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_rightControllerValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean leftControllerValid
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ConnectedControllerHandler::dyn_leftControllerValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_leftControllerValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean rightValid
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ConnectedControllerHandler::dyn_rightValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_rightValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean leftValid
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ConnectedControllerHandler::dyn_leftValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_leftValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastRightPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ConnectedControllerHandler::dyn_lastRightPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_lastRightPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRightPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastLeftPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ConnectedControllerHandler::dyn_lastLeftPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_lastLeftPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLeftPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 tempRightPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ConnectedControllerHandler::dyn_tempRightPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_tempRightPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempRightPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 tempLeftPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ConnectedControllerHandler::dyn_tempLeftPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_tempLeftPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempLeftPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean updateControllers
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ConnectedControllerHandler::dyn_updateControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_updateControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateControllers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Player playerHandler
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Player*& GlobalNamespace::ConnectedControllerHandler::dyn_playerHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_playerHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerHandler"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single overridePollRate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ConnectedControllerHandler::dyn_overridePollRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_overridePollRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overridePollRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean overrideEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ConnectedControllerHandler::dyn_overrideEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_overrideEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OverrideControllers overrideController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OverrideControllers& GlobalNamespace::ConnectedControllerHandler::dyn_overrideController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::dyn_overrideController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OverrideControllers*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedControllerHandler.get_Instance
::GlobalNamespace::ConnectedControllerHandler* GlobalNamespace::ConnectedControllerHandler::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedControllerHandler", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedControllerHandler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ConnectedControllerHandler.set_Instance
void GlobalNamespace::ConnectedControllerHandler::set_Instance(::GlobalNamespace::ConnectedControllerHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedControllerHandler", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: ConnectedControllerHandler.get_RightValid
bool GlobalNamespace::ConnectedControllerHandler::get_RightValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::get_RightValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedControllerHandler.get_LeftValid
bool GlobalNamespace::ConnectedControllerHandler::get_LeftValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::get_LeftValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedControllerHandler.Awake
void GlobalNamespace::ConnectedControllerHandler::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedControllerHandler.Start
void GlobalNamespace::ConnectedControllerHandler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedControllerHandler.OnEnable
void GlobalNamespace::ConnectedControllerHandler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedControllerHandler.ONDisable
void GlobalNamespace::ConnectedControllerHandler::ONDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::ONDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ONDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedControllerHandler.OnDestroy
void GlobalNamespace::ConnectedControllerHandler::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedControllerHandler.LateUpdate
void GlobalNamespace::ConnectedControllerHandler::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedControllerHandler.ControllerValidator
::System::Collections::IEnumerator* GlobalNamespace::ConnectedControllerHandler::ControllerValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::ControllerValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ControllerValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedControllerHandler.DeviceDisconnected
void GlobalNamespace::ConnectedControllerHandler::DeviceDisconnected(::UnityEngine::XR::InputDevice device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::DeviceDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeviceDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device);
}
// Autogenerated method: ConnectedControllerHandler.DeviceConnected
void GlobalNamespace::ConnectedControllerHandler::DeviceConnected(::UnityEngine::XR::InputDevice device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::DeviceConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeviceConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device);
}
// Autogenerated method: ConnectedControllerHandler.UpdateControllerStates
void GlobalNamespace::ConnectedControllerHandler::UpdateControllerStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::UpdateControllerStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateControllerStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedControllerHandler.AssignSnapturnController
void GlobalNamespace::ConnectedControllerHandler::AssignSnapturnController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::AssignSnapturnController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignSnapturnController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedControllerHandler.GetValidForXRNode
bool GlobalNamespace::ConnectedControllerHandler::GetValidForXRNode(::UnityEngine::XR::XRNode controllerNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::GetValidForXRNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidForXRNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, controllerNode);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ConnectedControllerHandler/<ControllerValidator>d__36
#include "GlobalNamespace/ConnectedControllerHandler_-ControllerValidator-d__36.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ConnectedControllerHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ConnectedControllerHandler*& GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ConnectedControllerHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedControllerHandler/<ControllerValidator>d__36.System.IDisposable.Dispose
void GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedControllerHandler/<ControllerValidator>d__36.MoveNext
bool GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedControllerHandler/<ControllerValidator>d__36.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedControllerHandler/<ControllerValidator>d__36.System.Collections.IEnumerator.Reset
void GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedControllerHandler/<ControllerValidator>d__36.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ConnectedControllerHandler::$ControllerValidator$d__36*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaControllerType
#include "GlobalNamespace/GorillaControllerType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaControllerType OCULUS_DEFAULT
::GlobalNamespace::GorillaControllerType GlobalNamespace::GorillaControllerType::_get_OCULUS_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaControllerType::_get_OCULUS_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaControllerType>("", "GorillaControllerType", "OCULUS_DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static public GorillaControllerType OCULUS_DEFAULT
void GlobalNamespace::GorillaControllerType::_set_OCULUS_DEFAULT(::GlobalNamespace::GorillaControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaControllerType::_set_OCULUS_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaControllerType", "OCULUS_DEFAULT", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaControllerType INDEX
::GlobalNamespace::GorillaControllerType GlobalNamespace::GorillaControllerType::_get_INDEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaControllerType::_get_INDEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaControllerType>("", "GorillaControllerType", "INDEX"));
}
// Autogenerated static field setter
// Set static field: static public GorillaControllerType INDEX
void GlobalNamespace::GorillaControllerType::_set_INDEX(::GlobalNamespace::GorillaControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaControllerType::_set_INDEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaControllerType", "INDEX", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaControllerType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaControllerType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ControllerInputPoller
#include "GlobalNamespace/ControllerInputPoller.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ControllerInputPoller instance
::GlobalNamespace::ControllerInputPoller* GlobalNamespace::ControllerInputPoller::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ControllerInputPoller*>("", "ControllerInputPoller", "instance"));
}
// Autogenerated static field setter
// Set static field: static public ControllerInputPoller instance
void GlobalNamespace::ControllerInputPoller::_set_instance(::GlobalNamespace::ControllerInputPoller* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ControllerInputPoller", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single leftControllerIndexFloat
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ControllerInputPoller::dyn_leftControllerIndexFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_leftControllerIndexFloat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerIndexFloat"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single leftControllerGripFloat
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ControllerInputPoller::dyn_leftControllerGripFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_leftControllerGripFloat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerGripFloat"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rightControllerIndexFloat
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ControllerInputPoller::dyn_rightControllerIndexFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_rightControllerIndexFloat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerIndexFloat"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rightControllerGripFloat
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ControllerInputPoller::dyn_rightControllerGripFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_rightControllerGripFloat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerGripFloat"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single leftControllerIndexTouch
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ControllerInputPoller::dyn_leftControllerIndexTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_leftControllerIndexTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerIndexTouch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rightControllerIndexTouch
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ControllerInputPoller::dyn_rightControllerIndexTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_rightControllerIndexTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerIndexTouch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rightStickLRFloat
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ControllerInputPoller::dyn_rightStickLRFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_rightStickLRFloat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightStickLRFloat"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 leftControllerPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ControllerInputPoller::dyn_leftControllerPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_leftControllerPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rightControllerPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ControllerInputPoller::dyn_rightControllerPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_rightControllerPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 headPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ControllerInputPoller::dyn_headPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_headPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion leftControllerRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::ControllerInputPoller::dyn_leftControllerRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_leftControllerRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rightControllerRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::ControllerInputPoller::dyn_rightControllerRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_rightControllerRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion headRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::ControllerInputPoller::dyn_headRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_headRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.InputDevice leftControllerDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::ControllerInputPoller::dyn_leftControllerDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_leftControllerDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.InputDevice rightControllerDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::ControllerInputPoller::dyn_rightControllerDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_rightControllerDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.InputDevice headDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::ControllerInputPoller::dyn_headDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_headDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftControllerPrimaryButton
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerInputPoller::dyn_leftControllerPrimaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_leftControllerPrimaryButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerPrimaryButton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftControllerSecondaryButton
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerInputPoller::dyn_leftControllerSecondaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_leftControllerSecondaryButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerSecondaryButton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rightControllerPrimaryButton
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerInputPoller::dyn_rightControllerPrimaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_rightControllerPrimaryButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerPrimaryButton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rightControllerSecondaryButton
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerInputPoller::dyn_rightControllerSecondaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_rightControllerSecondaryButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerSecondaryButton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftControllerPrimaryButtonTouch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerInputPoller::dyn_leftControllerPrimaryButtonTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_leftControllerPrimaryButtonTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerPrimaryButtonTouch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftControllerSecondaryButtonTouch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerInputPoller::dyn_leftControllerSecondaryButtonTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_leftControllerSecondaryButtonTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerSecondaryButtonTouch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rightControllerPrimaryButtonTouch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerInputPoller::dyn_rightControllerPrimaryButtonTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_rightControllerPrimaryButtonTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerPrimaryButtonTouch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rightControllerSecondaryButtonTouch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerInputPoller::dyn_rightControllerSecondaryButtonTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_rightControllerSecondaryButtonTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerSecondaryButtonTouch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftGrab
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerInputPoller::dyn_leftGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_leftGrab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftGrab"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftGrabRelease
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerInputPoller::dyn_leftGrabRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_leftGrabRelease");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftGrabRelease"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rightGrab
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerInputPoller::dyn_rightGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_rightGrab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightGrab"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rightGrabRelease
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerInputPoller::dyn_rightGrabRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_rightGrabRelease");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightGrabRelease"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftGrabMomentary
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerInputPoller::dyn_leftGrabMomentary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_leftGrabMomentary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftGrabMomentary"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftGrabReleaseMomentary
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerInputPoller::dyn_leftGrabReleaseMomentary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_leftGrabReleaseMomentary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftGrabReleaseMomentary"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rightGrabMomentary
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerInputPoller::dyn_rightGrabMomentary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_rightGrabMomentary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightGrabMomentary"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rightGrabReleaseMomentary
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerInputPoller::dyn_rightGrabReleaseMomentary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_rightGrabReleaseMomentary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightGrabReleaseMomentary"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaControllerType <controllerType>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaControllerType& GlobalNamespace::ControllerInputPoller::dyn_$controllerType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_$controllerType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<controllerType>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaControllerType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 leftControllerPrimary2DAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::ControllerInputPoller::dyn_leftControllerPrimary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_leftControllerPrimary2DAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerPrimary2DAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 rightControllerPrimary2DAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::ControllerInputPoller::dyn_rightControllerPrimary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::dyn_rightControllerPrimary2DAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerPrimary2DAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ControllerInputPoller.get_controllerType
::GlobalNamespace::GorillaControllerType GlobalNamespace::ControllerInputPoller::get_controllerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::get_controllerType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllerType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GorillaControllerType, false>(this, ___internal__method);
}
// Autogenerated method: ControllerInputPoller.set_controllerType
void GlobalNamespace::ControllerInputPoller::set_controllerType(::GlobalNamespace::GorillaControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::set_controllerType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllerType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ControllerInputPoller.Awake
void GlobalNamespace::ControllerInputPoller::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ControllerInputPoller.Update
void GlobalNamespace::ControllerInputPoller::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ControllerInputPoller.CalculateGrabState
void GlobalNamespace::ControllerInputPoller::CalculateGrabState(float grabValue, ByRef<bool> grab, ByRef<bool> grabRelease, ByRef<bool> grabMomentary, ByRef<bool> grabReleaseMomentary, float grabThreshold, float grabReleaseThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::CalculateGrabState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateGrabState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabValue), ::il2cpp_utils::ExtractType(grab), ::il2cpp_utils::ExtractType(grabRelease), ::il2cpp_utils::ExtractType(grabMomentary), ::il2cpp_utils::ExtractType(grabReleaseMomentary), ::il2cpp_utils::ExtractType(grabThreshold), ::il2cpp_utils::ExtractType(grabReleaseThreshold)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabValue, byref(grab), byref(grabRelease), byref(grabMomentary), byref(grabReleaseMomentary), grabThreshold, grabReleaseThreshold);
}
// Autogenerated method: ControllerInputPoller.GetGrab
bool GlobalNamespace::ControllerInputPoller::GetGrab(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::GetGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ControllerInputPoller", "GetGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: ControllerInputPoller.GetGrabRelease
bool GlobalNamespace::ControllerInputPoller::GetGrabRelease(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::GetGrabRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ControllerInputPoller", "GetGrabRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: ControllerInputPoller.GetGrabMomentary
bool GlobalNamespace::ControllerInputPoller::GetGrabMomentary(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::GetGrabMomentary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ControllerInputPoller", "GetGrabMomentary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: ControllerInputPoller.GetGrabReleaseMomentary
bool GlobalNamespace::ControllerInputPoller::GetGrabReleaseMomentary(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::GetGrabReleaseMomentary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ControllerInputPoller", "GetGrabReleaseMomentary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: ControllerInputPoller.Primary2DAxis
::UnityEngine::Vector2 GlobalNamespace::ControllerInputPoller::Primary2DAxis(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::Primary2DAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ControllerInputPoller", "Primary2DAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: ControllerInputPoller.PrimaryButtonPress
bool GlobalNamespace::ControllerInputPoller::PrimaryButtonPress(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::PrimaryButtonPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ControllerInputPoller", "PrimaryButtonPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: ControllerInputPoller.SecondaryButtonPress
bool GlobalNamespace::ControllerInputPoller::SecondaryButtonPress(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::SecondaryButtonPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ControllerInputPoller", "SecondaryButtonPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: ControllerInputPoller.PrimaryButtonTouch
bool GlobalNamespace::ControllerInputPoller::PrimaryButtonTouch(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::PrimaryButtonTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ControllerInputPoller", "PrimaryButtonTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: ControllerInputPoller.SecondaryButtonTouch
bool GlobalNamespace::ControllerInputPoller::SecondaryButtonTouch(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::SecondaryButtonTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ControllerInputPoller", "SecondaryButtonTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: ControllerInputPoller.GripFloat
float GlobalNamespace::ControllerInputPoller::GripFloat(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::GripFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ControllerInputPoller", "GripFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: ControllerInputPoller.TriggerFloat
float GlobalNamespace::ControllerInputPoller::TriggerFloat(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::TriggerFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ControllerInputPoller", "TriggerFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: ControllerInputPoller.TriggerTouch
float GlobalNamespace::ControllerInputPoller::TriggerTouch(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::TriggerTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ControllerInputPoller", "TriggerTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: ControllerInputPoller.DevicePosition
::UnityEngine::Vector3 GlobalNamespace::ControllerInputPoller::DevicePosition(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::DevicePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ControllerInputPoller", "DevicePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: ControllerInputPoller.DeviceRotation
::UnityEngine::Quaternion GlobalNamespace::ControllerInputPoller::DeviceRotation(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::DeviceRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ControllerInputPoller", "DeviceRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: ControllerInputPoller.PositionValid
bool GlobalNamespace::ControllerInputPoller::PositionValid(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerInputPoller::PositionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ControllerInputPoller", "PositionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ChestHeartbeat
#include "GlobalNamespace/ChestHeartbeat.hpp"
// Including type: ChestHeartbeat/<HeartBeat>d__13
#include "GlobalNamespace/ChestHeartbeat_-HeartBeat-d__13.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 millisToWait
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ChestHeartbeat::dyn_millisToWait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_millisToWait");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "millisToWait"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 millisMin
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ChestHeartbeat::dyn_millisMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_millisMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "millisMin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lastShot
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ChestHeartbeat::dyn_lastShot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_lastShot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastShot"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::ChestHeartbeat::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform scaleTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::ChestHeartbeat::dyn_scaleTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_scaleTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scaleTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single deltaTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestHeartbeat::dyn_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_deltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single heartMinSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestHeartbeat::dyn_heartMinSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_heartMinSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heartMinSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single heartMaxSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestHeartbeat::dyn_heartMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_heartMaxSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heartMaxSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single minTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestHeartbeat::dyn_minTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_minTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single maxTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestHeartbeat::dyn_maxTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_maxTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single endtime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestHeartbeat::dyn_endtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_endtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endtime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestHeartbeat::dyn_currentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_currentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ChestHeartbeat.Update
void GlobalNamespace::ChestHeartbeat::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ChestHeartbeat.HeartBeat
::System::Collections::IEnumerator* GlobalNamespace::ChestHeartbeat::HeartBeat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::HeartBeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HeartBeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ChestHeartbeat/<HeartBeat>d__13
#include "GlobalNamespace/ChestHeartbeat_-HeartBeat-d__13.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ChestHeartbeat <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ChestHeartbeat*& GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ChestHeartbeat**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::dyn_$startTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::dyn_$startTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ChestHeartbeat/<HeartBeat>d__13.System.IDisposable.Dispose
void GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ChestHeartbeat/<HeartBeat>d__13.MoveNext
bool GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ChestHeartbeat/<HeartBeat>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ChestHeartbeat/<HeartBeat>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ChestHeartbeat/<HeartBeat>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaFlagSpawn
#include "GlobalNamespace/GorillaFlagSpawn.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isRedFlagSpawn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaFlagSpawn::dyn_isRedFlagSpawn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFlagSpawn::dyn_isRedFlagSpawn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRedFlagSpawn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaPlayerCounter
#include "GlobalNamespace/GorillaPlayerCounter.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isRedTeam
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerCounter::dyn_isRedTeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerCounter::dyn_isRedTeam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRedTeam"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaPlayerCounter::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerCounter::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String attribute
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPlayerCounter::dyn_attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerCounter::dyn_attribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attribute"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaPlayerCounter.Awake
void GlobalNamespace::GorillaPlayerCounter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerCounter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerCounter.Update
void GlobalNamespace::GorillaPlayerCounter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerCounter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaScoreCounter
#include "GlobalNamespace/GorillaScoreCounter.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isRedTeam
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreCounter::dyn_isRedTeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreCounter::dyn_isRedTeam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRedTeam"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaScoreCounter::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreCounter::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String attribute
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaScoreCounter::dyn_attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreCounter::dyn_attribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attribute"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaScoreCounter.Awake
void GlobalNamespace::GorillaScoreCounter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreCounter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreCounter.Update
void GlobalNamespace::GorillaScoreCounter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreCounter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ElderGorilla
#include "GlobalNamespace/ElderGorilla.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single MAX_HAND_DIST
float GlobalNamespace::ElderGorilla::_get_MAX_HAND_DIST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::_get_MAX_HAND_DIST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ElderGorilla", "MAX_HAND_DIST"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MAX_HAND_DIST
void GlobalNamespace::ElderGorilla::_set_MAX_HAND_DIST(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::_set_MAX_HAND_DIST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ElderGorilla", "MAX_HAND_DIST", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single COOLDOWN_HAND_DIST
float GlobalNamespace::ElderGorilla::_get_COOLDOWN_HAND_DIST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::_get_COOLDOWN_HAND_DIST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ElderGorilla", "COOLDOWN_HAND_DIST"));
}
// Autogenerated static field setter
// Set static field: static private System.Single COOLDOWN_HAND_DIST
void GlobalNamespace::ElderGorilla::_set_COOLDOWN_HAND_DIST(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::_set_COOLDOWN_HAND_DIST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ElderGorilla", "COOLDOWN_HAND_DIST", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single VALID_HAND_DIST
float GlobalNamespace::ElderGorilla::_get_VALID_HAND_DIST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::_get_VALID_HAND_DIST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ElderGorilla", "VALID_HAND_DIST"));
}
// Autogenerated static field setter
// Set static field: static private System.Single VALID_HAND_DIST
void GlobalNamespace::ElderGorilla::_set_VALID_HAND_DIST(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::_set_VALID_HAND_DIST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ElderGorilla", "VALID_HAND_DIST", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single TIME_VALID_HEAD_HEIGHT
float GlobalNamespace::ElderGorilla::_get_TIME_VALID_HEAD_HEIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::_get_TIME_VALID_HEAD_HEIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ElderGorilla", "TIME_VALID_HEAD_HEIGHT"));
}
// Autogenerated static field setter
// Set static field: static private System.Single TIME_VALID_HEAD_HEIGHT
void GlobalNamespace::ElderGorilla::_set_TIME_VALID_HEAD_HEIGHT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::_set_TIME_VALID_HEAD_HEIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ElderGorilla", "TIME_VALID_HEAD_HEIGHT", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform tHMD
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::ElderGorilla::dyn_tHMD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::dyn_tHMD");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tHMD"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform tLeftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::ElderGorilla::dyn_tLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::dyn_tLeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tLeftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform tRightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::ElderGorilla::dyn_tRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::dyn_tRightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tRightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 countValidArmDists
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ElderGorilla::dyn_countValidArmDists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::dyn_countValidArmDists");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "countValidArmDists"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timeLastValidArmDist
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ElderGorilla::dyn_timeLastValidArmDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::dyn_timeLastValidArmDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeLastValidArmDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean trackingHeadHeight
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ElderGorilla::dyn_trackingHeadHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::dyn_trackingHeadHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackingHeadHeight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single trackedHeadHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ElderGorilla::dyn_trackedHeadHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::dyn_trackedHeadHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedHeadHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timerTrackedHeadHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ElderGorilla::dyn_timerTrackedHeadHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::dyn_timerTrackedHeadHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timerTrackedHeadHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single savedHeadHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ElderGorilla::dyn_savedHeadHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::dyn_savedHeadHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "savedHeadHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ElderGorilla.Update
void GlobalNamespace::ElderGorilla::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ElderGorilla.CheckHandDistance
void GlobalNamespace::ElderGorilla::CheckHandDistance(::UnityEngine::Transform* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::CheckHandDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckHandDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand);
}
// Autogenerated method: ElderGorilla.CheckHeight
void GlobalNamespace::ElderGorilla::CheckHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::CheckHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ElderGorilla.CheckMicVolume
void GlobalNamespace::ElderGorilla::CheckMicVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ElderGorilla::CheckMicVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckMicVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: EnclosedSpaceVolume
#include "GlobalNamespace/EnclosedSpaceVolume.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSourceInside
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::EnclosedSpaceVolume::dyn_audioSourceInside() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnclosedSpaceVolume::dyn_audioSourceInside");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSourceInside"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSourceOutside
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::EnclosedSpaceVolume::dyn_audioSourceOutside() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnclosedSpaceVolume::dyn_audioSourceOutside");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSourceOutside"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single loudVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::EnclosedSpaceVolume::dyn_loudVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnclosedSpaceVolume::dyn_loudVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loudVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single quietVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::EnclosedSpaceVolume::dyn_quietVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnclosedSpaceVolume::dyn_quietVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quietVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnclosedSpaceVolume.Awake
void GlobalNamespace::EnclosedSpaceVolume::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnclosedSpaceVolume::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnclosedSpaceVolume.OnTriggerEnter
void GlobalNamespace::EnclosedSpaceVolume::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnclosedSpaceVolume::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: EnclosedSpaceVolume.OnTriggerExit
void GlobalNamespace::EnclosedSpaceVolume::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnclosedSpaceVolume::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Flocking
#include "GlobalNamespace/Flocking.hpp"
// Including type: SlingshotProjectile
#include "GlobalNamespace/SlingshotProjectile.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaTagScripts.GameObjectManagerWithId
#include "GorillaTagScripts/GameObjectManagerWithId.hpp"
// Including type: UnityEngine.Events.UnityEvent`2
#include "UnityEngine/Events/UnityEvent_2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: FlockingManager/FishArea
#include "GlobalNamespace/FlockingManager_FishArea.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single minSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Flocking::dyn_minSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_minSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Flocking::dyn_maxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_maxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Flocking::dyn_rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxNeighbourDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Flocking::dyn_maxNeighbourDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_maxNeighbourDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNeighbourDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single eatFoodDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Flocking::dyn_eatFoodDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_eatFoodDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eatFoodDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single followFoodSpeedMult
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Flocking::dyn_followFoodSpeedMult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_followFoodSpeedMult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followFoodSpeedMult"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single avoidHandSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Flocking::dyn_avoidHandSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_avoidHandSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "avoidHandSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single flockingAvoidanceDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Flocking::dyn_flockingAvoidanceDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_flockingAvoidanceDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flockingAvoidanceDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double FollowFoodStopDistance
[[deprecated("Use field access instead!")]] double& GlobalNamespace::Flocking::dyn_FollowFoodStopDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_FollowFoodStopDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FollowFoodStopDistance"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FollowFakeFoodStopDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Flocking::dyn_FollowFakeFoodStopDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_FollowFakeFoodStopDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FollowFakeFoodStopDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single speed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Flocking::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 averageHeading
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Flocking::dyn_averageHeading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_averageHeading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "averageHeading"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 averagePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Flocking::dyn_averagePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_averagePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "averagePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single feedingTimeStarted
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Flocking::dyn_feedingTimeStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_feedingTimeStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "feedingTimeStarted"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject projectileGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::Flocking::dyn_projectileGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_projectileGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "projectileGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean followingFood
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Flocking::dyn_followingFood() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_followingFood");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followingFood"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FlockingManager manager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FlockingManager*& GlobalNamespace::Flocking::dyn_manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_manager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "manager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FlockingManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTagScripts.GameObjectManagerWithId _fishSceneGameObjectsManager
[[deprecated("Use field access instead!")]] ::GorillaTagScripts::GameObjectManagerWithId*& GlobalNamespace::Flocking::dyn__fishSceneGameObjectsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn__fishSceneGameObjectsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fishSceneGameObjectsManager"))->offset;
  return *reinterpret_cast<::GorillaTagScripts::GameObjectManagerWithId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent`2<System.String,UnityEngine.Transform> sendIdEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent_2<::StringW, ::UnityEngine::Transform*>*& GlobalNamespace::Flocking::dyn_sendIdEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_sendIdEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sendIdEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent_2<::StringW, ::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Flocking/FishState fishState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Flocking::FishState& GlobalNamespace::Flocking::dyn_fishState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_fishState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fishState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Flocking::FishState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 pos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Flocking::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::Flocking::dyn_rot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_rot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single velocity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Flocking::dyn_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isTurning
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Flocking::dyn_isTurning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_isTurning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isTurning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRealFood
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Flocking::dyn_isRealFood() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_isRealFood");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRealFood"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single avointPointRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Flocking::dyn_avointPointRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_avointPointRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "avointPointRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single cacheSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Flocking::dyn_cacheSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_cacheSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cacheSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isAvoindingHand
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Flocking::dyn_isAvoindingHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_isAvoindingHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isAvoindingHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FlockingManager/FishArea <FishArea>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FlockingManager::FishArea*& GlobalNamespace::Flocking::dyn_$FishArea$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::dyn_$FishArea$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FishArea>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FlockingManager::FishArea**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Flocking.get_FishArea
::GlobalNamespace::FlockingManager::FishArea* GlobalNamespace::Flocking::get_FishArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::get_FishArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FishArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FlockingManager::FishArea*, false>(this, ___internal__method);
}
// Autogenerated method: Flocking.set_FishArea
void GlobalNamespace::Flocking::set_FishArea(::GlobalNamespace::FlockingManager::FishArea* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::set_FishArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FishArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Flocking.Awake
void GlobalNamespace::Flocking::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Flocking.Start
void GlobalNamespace::Flocking::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Flocking.OnDisable
void GlobalNamespace::Flocking::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Flocking.InvokeUpdate
void GlobalNamespace::Flocking::InvokeUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::InvokeUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Flocking.MaybeTurn
void GlobalNamespace::Flocking::MaybeTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::MaybeTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaybeTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Flocking.Turn
void GlobalNamespace::Flocking::Turn(::UnityEngine::Vector3 towardPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::Turn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Turn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(towardPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, towardPoint);
}
// Autogenerated method: Flocking.SwitchState
void GlobalNamespace::Flocking::SwitchState(::GlobalNamespace::Flocking::FishState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::SwitchState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: Flocking.Flock
void GlobalNamespace::Flocking::Flock(::UnityEngine::Vector3 nextGoal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::Flock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nextGoal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nextGoal);
}
// Autogenerated method: Flocking.HandleOnFoodDetected
void GlobalNamespace::Flocking::HandleOnFoodDetected(::GlobalNamespace::SlingshotProjectile* projectile, bool _isRealFood) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::HandleOnFoodDetected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOnFoodDetected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(projectile), ::il2cpp_utils::ExtractType(_isRealFood)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, projectile, _isRealFood);
}
// Autogenerated method: Flocking.HandleOnFoodDestroyed
void GlobalNamespace::Flocking::HandleOnFoodDestroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::HandleOnFoodDestroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOnFoodDestroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Flocking.FollowFood
void GlobalNamespace::Flocking::FollowFood() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::FollowFood");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FollowFood", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Flocking.AvoidPlayerHands
void GlobalNamespace::Flocking::AvoidPlayerHands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::AvoidPlayerHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AvoidPlayerHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Flocking.SetSyncPosRot
void GlobalNamespace::Flocking::SetSyncPosRot(::UnityEngine::Vector3 syncPos, ::UnityEngine::Quaternion syncRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::SetSyncPosRot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSyncPosRot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncPos), ::il2cpp_utils::ExtractType(syncRot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, syncPos, syncRot);
}
// Autogenerated method: Flocking.OnEnable
void GlobalNamespace::Flocking::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Flocking/FishState
#include "GlobalNamespace/Flocking.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Flocking/FishState flock
::GlobalNamespace::Flocking::FishState GlobalNamespace::Flocking::FishState::_get_flock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::FishState::_get_flock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Flocking::FishState>("", "Flocking/FishState", "flock"));
}
// Autogenerated static field setter
// Set static field: static public Flocking/FishState flock
void GlobalNamespace::Flocking::FishState::_set_flock(::GlobalNamespace::Flocking::FishState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::FishState::_set_flock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Flocking/FishState", "flock", value));
}
// Autogenerated static field getter
// Get static field: static public Flocking/FishState patrol
::GlobalNamespace::Flocking::FishState GlobalNamespace::Flocking::FishState::_get_patrol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::FishState::_get_patrol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Flocking::FishState>("", "Flocking/FishState", "patrol"));
}
// Autogenerated static field setter
// Set static field: static public Flocking/FishState patrol
void GlobalNamespace::Flocking::FishState::_set_patrol(::GlobalNamespace::Flocking::FishState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::FishState::_set_patrol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Flocking/FishState", "patrol", value));
}
// Autogenerated static field getter
// Get static field: static public Flocking/FishState followFood
::GlobalNamespace::Flocking::FishState GlobalNamespace::Flocking::FishState::_get_followFood() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::FishState::_get_followFood");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Flocking::FishState>("", "Flocking/FishState", "followFood"));
}
// Autogenerated static field setter
// Set static field: static public Flocking/FishState followFood
void GlobalNamespace::Flocking::FishState::_set_followFood(::GlobalNamespace::Flocking::FishState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::FishState::_set_followFood");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Flocking/FishState", "followFood", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Flocking::FishState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Flocking::FishState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FlockingUpdateManager
#include "GlobalNamespace/FlockingUpdateManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Flocking
#include "GlobalNamespace/Flocking.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FlockingUpdateManager instance
::GlobalNamespace::FlockingUpdateManager* GlobalNamespace::FlockingUpdateManager::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingUpdateManager::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FlockingUpdateManager*>("", "FlockingUpdateManager", "instance"));
}
// Autogenerated static field setter
// Set static field: static public FlockingUpdateManager instance
void GlobalNamespace::FlockingUpdateManager::_set_instance(::GlobalNamespace::FlockingUpdateManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingUpdateManager::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FlockingUpdateManager", "instance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean hasInstance
bool GlobalNamespace::FlockingUpdateManager::_get_hasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingUpdateManager::_get_hasInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "FlockingUpdateManager", "hasInstance"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean hasInstance
void GlobalNamespace::FlockingUpdateManager::_set_hasInstance(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingUpdateManager::_set_hasInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FlockingUpdateManager", "hasInstance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<Flocking> allFlockings
::System::Collections::Generic::List_1<::GlobalNamespace::Flocking*>* GlobalNamespace::FlockingUpdateManager::_get_allFlockings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingUpdateManager::_get_allFlockings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::Flocking*>*>("", "FlockingUpdateManager", "allFlockings"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<Flocking> allFlockings
void GlobalNamespace::FlockingUpdateManager::_set_allFlockings(::System::Collections::Generic::List_1<::GlobalNamespace::Flocking*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingUpdateManager::_set_allFlockings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FlockingUpdateManager", "allFlockings", value));
}
// Autogenerated method: FlockingUpdateManager.Awake
void GlobalNamespace::FlockingUpdateManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingUpdateManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlockingUpdateManager.CreateManager
void GlobalNamespace::FlockingUpdateManager::CreateManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingUpdateManager::CreateManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FlockingUpdateManager", "CreateManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FlockingUpdateManager.SetInstance
void GlobalNamespace::FlockingUpdateManager::SetInstance(::GlobalNamespace::FlockingUpdateManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingUpdateManager::SetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FlockingUpdateManager", "SetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, manager);
}
// Autogenerated method: FlockingUpdateManager.RegisterFlocking
void GlobalNamespace::FlockingUpdateManager::RegisterFlocking(::GlobalNamespace::Flocking* flocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingUpdateManager::RegisterFlocking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FlockingUpdateManager", "RegisterFlocking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flocking)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flocking);
}
// Autogenerated method: FlockingUpdateManager.UnregisterFlocking
void GlobalNamespace::FlockingUpdateManager::UnregisterFlocking(::GlobalNamespace::Flocking* flocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingUpdateManager::UnregisterFlocking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FlockingUpdateManager", "UnregisterFlocking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flocking)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flocking);
}
// Autogenerated method: FlockingUpdateManager.Update
void GlobalNamespace::FlockingUpdateManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingUpdateManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlockingUpdateManager..cctor
void GlobalNamespace::FlockingUpdateManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingUpdateManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FlockingUpdateManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FlockingManager
#include "GlobalNamespace/FlockingManager.hpp"
// Including type: FlockingManager/FishArea
#include "GlobalNamespace/FlockingManager_FishArea.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Flocking
#include "GlobalNamespace/Flocking.hpp"
// Including type: UnityEngine.Events.UnityAction`2
#include "UnityEngine/Events/UnityAction_2.hpp"
// Including type: SlingshotProjectile
#include "GlobalNamespace/SlingshotProjectile.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Generic.List`1<UnityEngine.GameObject> avoidPoints
::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* GlobalNamespace::FlockingManager::_get_avoidPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::_get_avoidPoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*>("", "FlockingManager", "avoidPoints"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Generic.List`1<UnityEngine.GameObject> avoidPoints
void GlobalNamespace::FlockingManager::_set_avoidPoints(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::_set_avoidPoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FlockingManager", "avoidPoints", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> fishAreaContainer
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::FlockingManager::dyn_fishAreaContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::dyn_fishAreaContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fishAreaContainer"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String foodProjectileTag
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::FlockingManager::dyn_foodProjectileTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::dyn_foodProjectileTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foodProjectileTag"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Vector3> areaToWaypointDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Vector3>*& GlobalNamespace::FlockingManager::dyn_areaToWaypointDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::dyn_areaToWaypointDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "areaToWaypointDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<FlockingManager/FishArea> fishAreaList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::FlockingManager::FishArea*>*& GlobalNamespace::FlockingManager::dyn_fishAreaList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::dyn_fishAreaList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fishAreaList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::FlockingManager::FishArea*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Flocking> allFish
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::Flocking*>*& GlobalNamespace::FlockingManager::dyn_allFish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::dyn_allFish");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allFish"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::Flocking*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityAction`2<SlingshotProjectile,System.Boolean> onFoodDetected
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityAction_2<::GlobalNamespace::SlingshotProjectile*, bool>*& GlobalNamespace::FlockingManager::dyn_onFoodDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::dyn_onFoodDetected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFoodDetected"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityAction_2<::GlobalNamespace::SlingshotProjectile*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityAction onFoodDestroyed
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityAction*& GlobalNamespace::FlockingManager::dyn_onFoodDestroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::dyn_onFoodDestroyed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFoodDestroyed"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasBeenSerialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FlockingManager::dyn_hasBeenSerialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::dyn_hasBeenSerialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasBeenSerialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FlockingManager.Awake
void GlobalNamespace::FlockingManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlockingManager.OnDestroy
void GlobalNamespace::FlockingManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlockingManager.Update
void GlobalNamespace::FlockingManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlockingManager.GetRandomPointInsideCollider
::UnityEngine::Vector3 GlobalNamespace::FlockingManager::GetRandomPointInsideCollider(::GlobalNamespace::FlockingManager::FishArea* fishArea) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::GetRandomPointInsideCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRandomPointInsideCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fishArea)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, fishArea);
}
// Autogenerated method: FlockingManager.IsInside
bool GlobalNamespace::FlockingManager::IsInside(::UnityEngine::Vector3 point, ::GlobalNamespace::FlockingManager::FishArea* fish) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::IsInside");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInside", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(fish)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point, fish);
}
// Autogenerated method: FlockingManager.RestrictPointToArea
::UnityEngine::Vector3 GlobalNamespace::FlockingManager::RestrictPointToArea(::UnityEngine::Vector3 point, ::GlobalNamespace::FlockingManager::FishArea* fish) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::RestrictPointToArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestrictPointToArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(fish)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point, fish);
}
// Autogenerated method: FlockingManager.ProjectileHitReceiver
void GlobalNamespace::FlockingManager::ProjectileHitReceiver(::GlobalNamespace::SlingshotProjectile* projectile, ::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::ProjectileHitReceiver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProjectileHitReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(projectile), ::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, projectile, collider);
}
// Autogenerated method: FlockingManager.ProjectileHitExit
void GlobalNamespace::FlockingManager::ProjectileHitExit(::GlobalNamespace::SlingshotProjectile* projectile, ::UnityEngine::Collider* collider1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::ProjectileHitExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProjectileHitExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(projectile), ::il2cpp_utils::ExtractType(collider1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, projectile, collider1);
}
// Autogenerated method: FlockingManager.OnPhotonSerializeView
void GlobalNamespace::FlockingManager::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FlockingManager*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: FlockingManager.RegisterAvoidPoint
void GlobalNamespace::FlockingManager::RegisterAvoidPoint(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::RegisterAvoidPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FlockingManager", "RegisterAvoidPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: FlockingManager.UnregisterAvoidPoint
void GlobalNamespace::FlockingManager::UnregisterAvoidPoint(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::UnregisterAvoidPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FlockingManager", "UnregisterAvoidPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: FlockingManager..cctor
void GlobalNamespace::FlockingManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FlockingManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FlockingManager/FishArea
#include "GlobalNamespace/FlockingManager_FishArea.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Flocking
#include "GlobalNamespace/Flocking.hpp"
// Including type: UnityEngine.BoxCollider
#include "UnityEngine/BoxCollider.hpp"
// Including type: ZoneBasedObject
#include "GlobalNamespace/ZoneBasedObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String id
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::FlockingManager::FishArea::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::FishArea::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Flocking> fishList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::Flocking*>*& GlobalNamespace::FlockingManager::FishArea::dyn_fishList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::FishArea::dyn_fishList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fishList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::Flocking*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 colliderCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::FlockingManager::FishArea::dyn_colliderCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::FishArea::dyn_colliderCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colliderCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.BoxCollider[] colliders
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::BoxCollider*>& GlobalNamespace::FlockingManager::FishArea::dyn_colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::FishArea::dyn_colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::BoxCollider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 nextWaypoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::FlockingManager::FishArea::dyn_nextWaypoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::FishArea::dyn_nextWaypoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextWaypoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ZoneBasedObject zoneBasedObject
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ZoneBasedObject*& GlobalNamespace::FlockingManager::FishArea::dyn_zoneBasedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlockingManager::FishArea::dyn_zoneBasedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zoneBasedObject"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ZoneBasedObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GroupJoinZone
#include "GlobalNamespace/GroupJoinZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GroupJoinZone Basement
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_Basement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_Basement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "Basement"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone Basement
void GlobalNamespace::GroupJoinZone::_set_Basement(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_Basement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "Basement", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone Beach
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_Beach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_Beach");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "Beach"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone Beach
void GlobalNamespace::GroupJoinZone::_set_Beach(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_Beach");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "Beach", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone Cave
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_Cave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_Cave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "Cave"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone Cave
void GlobalNamespace::GroupJoinZone::_set_Cave(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_Cave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "Cave", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone Canyon
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_Canyon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_Canyon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "Canyon"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone Canyon
void GlobalNamespace::GroupJoinZone::_set_Canyon(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_Canyon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "Canyon", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone City
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_City() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_City");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "City"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone City
void GlobalNamespace::GroupJoinZone::_set_City(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_City");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "City", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone Clouds
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_Clouds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_Clouds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "Clouds"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone Clouds
void GlobalNamespace::GroupJoinZone::_set_Clouds(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_Clouds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "Clouds", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone Forest
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_Forest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_Forest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "Forest"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone Forest
void GlobalNamespace::GroupJoinZone::_set_Forest(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_Forest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "Forest", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone Mountain
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_Mountain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_Mountain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "Mountain"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone Mountain
void GlobalNamespace::GroupJoinZone::_set_Mountain(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_Mountain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "Mountain", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone Rotating
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_Rotating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_Rotating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "Rotating"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone Rotating
void GlobalNamespace::GroupJoinZone::_set_Rotating(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_Rotating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "Rotating", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone _LastPrimaryRoom
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get__LastPrimaryRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get__LastPrimaryRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "_LastPrimaryRoom"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone _LastPrimaryRoom
void GlobalNamespace::GroupJoinZone::_set__LastPrimaryRoom(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set__LastPrimaryRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "_LastPrimaryRoom", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone TreeRoom
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_TreeRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_TreeRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "TreeRoom"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone TreeRoom
void GlobalNamespace::GroupJoinZone::_set_TreeRoom(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_TreeRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "TreeRoom", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone MountainTunnel
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_MountainTunnel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_MountainTunnel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "MountainTunnel"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone MountainTunnel
void GlobalNamespace::GroupJoinZone::_set_MountainTunnel(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_MountainTunnel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "MountainTunnel", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone BasementTunnel
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_BasementTunnel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_BasementTunnel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "BasementTunnel"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone BasementTunnel
void GlobalNamespace::GroupJoinZone::_set_BasementTunnel(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_BasementTunnel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "BasementTunnel", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone RotatingTunnel
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_RotatingTunnel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_RotatingTunnel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "RotatingTunnel"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone RotatingTunnel
void GlobalNamespace::GroupJoinZone::_set_RotatingTunnel(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_RotatingTunnel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "RotatingTunnel", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone BeachTunnel
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_BeachTunnel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_BeachTunnel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "BeachTunnel"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone BeachTunnel
void GlobalNamespace::GroupJoinZone::_set_BeachTunnel(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_BeachTunnel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "BeachTunnel", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone CloudsElevator
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_CloudsElevator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_CloudsElevator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "CloudsElevator"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone CloudsElevator
void GlobalNamespace::GroupJoinZone::_set_CloudsElevator(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_CloudsElevator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "CloudsElevator", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone Metropolis
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_Metropolis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_Metropolis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "Metropolis"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone Metropolis
void GlobalNamespace::GroupJoinZone::_set_Metropolis(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_Metropolis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "Metropolis", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone MetropolisTunnel
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_MetropolisTunnel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_MetropolisTunnel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "MetropolisTunnel"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone MetropolisTunnel
void GlobalNamespace::GroupJoinZone::_set_MetropolisTunnel(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_MetropolisTunnel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "MetropolisTunnel", value));
}
// Autogenerated static field getter
// Get static field: static public GroupJoinZone Attic
::GlobalNamespace::GroupJoinZone GlobalNamespace::GroupJoinZone::_get_Attic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_get_Attic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GroupJoinZone>("", "GroupJoinZone", "Attic"));
}
// Autogenerated static field setter
// Set static field: static public GroupJoinZone Attic
void GlobalNamespace::GroupJoinZone::_set_Attic(::GlobalNamespace::GroupJoinZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::_set_Attic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GroupJoinZone", "Attic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GroupJoinZone::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinZone::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GiantSnowflakeAudio
#include "GlobalNamespace/GiantSnowflakeAudio.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GiantSnowflakeAudio/SnowflakeScaleOverride> audioOverrides
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::GiantSnowflakeAudio::SnowflakeScaleOverride>*& GlobalNamespace::GiantSnowflakeAudio::dyn_audioOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GiantSnowflakeAudio::dyn_audioOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioOverrides"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::GiantSnowflakeAudio::SnowflakeScaleOverride>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GiantSnowflakeAudio.Start
void GlobalNamespace::GiantSnowflakeAudio::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GiantSnowflakeAudio::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GameModeSerializer
#include "GlobalNamespace/GameModeSerializer.hpp"
// Including type: GorillaGameManager
#include "GlobalNamespace/GorillaGameManager.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GorillaGameModes.GameModeType gameModeKey
[[deprecated("Use field access instead!")]] ::GorillaGameModes::GameModeType& GlobalNamespace::GameModeSerializer::dyn_gameModeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModeSerializer::dyn_gameModeKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameModeKey"))->offset;
  return *reinterpret_cast<::GorillaGameModes::GameModeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaGameManager gameModeInstance
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaGameManager*& GlobalNamespace::GameModeSerializer::dyn_gameModeInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModeSerializer::dyn_gameModeInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameModeInstance"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaGameManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameModeSerializer.get_GameModeInstance
::GlobalNamespace::GorillaGameManager* GlobalNamespace::GameModeSerializer::get_GameModeInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModeSerializer::get_GameModeInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GameModeInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GorillaGameManager*, false>(this, ___internal__method);
}
// Autogenerated method: GameModeSerializer.Photon.Pun.IOnPhotonViewPreNetDestroy.OnPreNetDestroy
void GlobalNamespace::GameModeSerializer::Photon_Pun_IOnPhotonViewPreNetDestroy_OnPreNetDestroy(::Photon::Pun::PhotonView* rootView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModeSerializer::Photon.Pun.IOnPhotonViewPreNetDestroy.OnPreNetDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GameModeSerializer*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootView);
}
// Autogenerated method: GameModeSerializer.ReportTagRPC
void GlobalNamespace::GameModeSerializer::ReportTagRPC(::Photon::Realtime::Player* taggedPlayer, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModeSerializer::ReportTagRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportTagRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taggedPlayer), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, taggedPlayer, info);
}
// Autogenerated method: GameModeSerializer.ReportHitRPC
void GlobalNamespace::GameModeSerializer::ReportHitRPC(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModeSerializer::ReportHitRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportHitRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: GameModeSerializer.OnInstantiateSetup
bool GlobalNamespace::GameModeSerializer::OnInstantiateSetup(::Photon::Pun::PhotonMessageInfo info, ByRef<::UnityEngine::GameObject*> outTargetObject, ByRef<::System::Type*> outTargetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModeSerializer::OnInstantiateSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaSerializer*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, info, byref(outTargetObject), byref(outTargetType));
}
// Autogenerated method: GameModeSerializer.OnSuccessfullInstantiate
void GlobalNamespace::GameModeSerializer::OnSuccessfullInstantiate(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameModeSerializer::OnSuccessfullInstantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaSerializer*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaNetworkTransform
#include "GlobalNamespace/GorillaNetworkTransform.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonView photonView
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& GlobalNamespace::GorillaNetworkTransform::dyn_photonView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_photonView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photonView"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_UseLocal
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaNetworkTransform::dyn_m_UseLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_m_UseLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UseLocal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean respectOwnership
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaNetworkTransform::dyn_respectOwnership() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_respectOwnership");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "respectOwnership"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single maxDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaNetworkTransform::dyn_maxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_maxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single maxDistanceSquare
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaNetworkTransform::dyn_maxDistanceSquare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_maxDistanceSquare");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDistanceSquare"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean clampToSpawn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaNetworkTransform::dyn_clampToSpawn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_clampToSpawn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clampToSpawn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 clampOriginPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaNetworkTransform::dyn_clampOriginPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_clampOriginPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clampOriginPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizePosition
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaNetworkTransform::dyn_m_SynchronizePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_m_SynchronizePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizePosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizeRotation
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaNetworkTransform::dyn_m_SynchronizeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_m_SynchronizeRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizeScale
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaNetworkTransform::dyn_m_SynchronizeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_m_SynchronizeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeScale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Distance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaNetworkTransform::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_m_Distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Angle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaNetworkTransform::dyn_m_Angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_m_Angle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Angle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaNetworkTransform::dyn_m_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_m_Velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_NetworkPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaNetworkTransform::dyn_m_NetworkPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_m_NetworkPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_StoredPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaNetworkTransform::dyn_m_StoredPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_m_StoredPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StoredPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_NetworkScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaNetworkTransform::dyn_m_NetworkScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_m_NetworkScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_NetworkRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::GorillaNetworkTransform::dyn_m_NetworkRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_m_NetworkRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_firstTake
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaNetworkTransform::dyn_m_firstTake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::dyn_m_firstTake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_firstTake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworkTransform.Awake
void GlobalNamespace::GorillaNetworkTransform::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworkTransform.OnEnable
void GlobalNamespace::GorillaNetworkTransform::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworkTransform.Update
void GlobalNamespace::GorillaNetworkTransform::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworkTransform.OnPhotonSerializeView
void GlobalNamespace::GorillaNetworkTransform::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNetworkTransform*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaNetworkTransform.GTAddition_DoTeleport
void GlobalNamespace::GorillaNetworkTransform::GTAddition_DoTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkTransform::GTAddition_DoTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GTAddition_DoTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaSerializer
#include "GlobalNamespace/GorillaSerializer.hpp"
// Including type: IGorillaSerializeable
#include "GlobalNamespace/IGorillaSerializeable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: RPCNetworkBase
#include "GlobalNamespace/RPCNetworkBase.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Boolean successfullInstantiate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaSerializer::dyn_successfullInstantiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializer::dyn_successfullInstantiate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "successfullInstantiate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected IGorillaSerializeable serializeTarget
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IGorillaSerializeable*& GlobalNamespace::GorillaSerializer::dyn_serializeTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializer::dyn_serializeTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializeTarget"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IGorillaSerializeable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type targetType
[[deprecated("Use field access instead!")]] ::System::Type*& GlobalNamespace::GorillaSerializer::dyn_targetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializer::dyn_targetType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.GameObject targetObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaSerializer::dyn_targetObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializer::dyn_targetObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Photon.Pun.PhotonView photonView
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& GlobalNamespace::GorillaSerializer::dyn_photonView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializer::dyn_photonView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photonView"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaSerializer.Photon.Pun.IPunObservable.OnPhotonSerializeView
void GlobalNamespace::GorillaSerializer::Photon_Pun_IPunObservable_OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializer::Photon.Pun.IPunObservable.OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaSerializer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaSerializer.OnPhotonInstantiate
void GlobalNamespace::GorillaSerializer::OnPhotonInstantiate(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializer::OnPhotonInstantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaSerializer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: GorillaSerializer.OnSuccessfullInstantiate
void GlobalNamespace::GorillaSerializer::OnSuccessfullInstantiate(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializer::OnSuccessfullInstantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaSerializer*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: GorillaSerializer.OnInstantiateSetup
bool GlobalNamespace::GorillaSerializer::OnInstantiateSetup(::Photon::Pun::PhotonMessageInfo info, ByRef<::UnityEngine::GameObject*> outTargetObject, ByRef<::System::Type*> outTargetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializer::OnInstantiateSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaSerializer*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, info, byref(outTargetObject), byref(outTargetType));
}
// Autogenerated method: GorillaSerializer.ValidOnSerialize
bool GlobalNamespace::GorillaSerializer::ValidOnSerialize(::Photon::Pun::PhotonStream* stream, ByRef<::Photon::Pun::PhotonMessageInfo> info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializer::ValidOnSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaSerializer*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream, byref(info));
}
// Autogenerated method: GorillaSerializer.SendRPC
void GlobalNamespace::GorillaSerializer::SendRPC(::StringW rpcName, bool targetOthers, ::ArrayW<::Il2CppObject*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializer::SendRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rpcName), ::il2cpp_utils::ExtractType(targetOthers), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rpcName, targetOthers, data);
}
// Autogenerated method: GorillaSerializer.SendRPC
void GlobalNamespace::GorillaSerializer::SendRPC(::StringW rpcName, ::Photon::Realtime::Player* targetPlayer, ::ArrayW<::Il2CppObject*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializer::SendRPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendRPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rpcName), ::il2cpp_utils::ExtractType(targetPlayer), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rpcName, targetPlayer, data);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaSerializerMasterOnly
#include "GlobalNamespace/GorillaSerializerMasterOnly.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaSerializerMasterOnly.ValidOnSerialize
bool GlobalNamespace::GorillaSerializerMasterOnly::ValidOnSerialize(::Photon::Pun::PhotonStream* stream, ByRef<::Photon::Pun::PhotonMessageInfo> info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializerMasterOnly::ValidOnSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaSerializer*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream, byref(info));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: GorillaSerializerScene
#include "GlobalNamespace/GorillaSerializerScene.hpp"
// Including type: IGorillaSerializeableScene
#include "GlobalNamespace/IGorillaSerializeableScene.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean transferrable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaSerializerScene::dyn_transferrable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializerScene::dyn_transferrable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transferrable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MonoBehaviour targetComponent
[[deprecated("Use field access instead!")]] ::UnityEngine::MonoBehaviour*& GlobalNamespace::GorillaSerializerScene::dyn_targetComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializerScene::dyn_targetComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetComponent"))->offset;
  return *reinterpret_cast<::UnityEngine::MonoBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IGorillaSerializeableScene sceneSerializeTarget
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IGorillaSerializeableScene*& GlobalNamespace::GorillaSerializerScene::dyn_sceneSerializeTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializerScene::dyn_sceneSerializeTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneSerializeTarget"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IGorillaSerializeableScene**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean validDisable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaSerializerScene::dyn_validDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializerScene::dyn_validDisable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validDisable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaSerializerScene.get_HasAuthority
bool GlobalNamespace::GorillaSerializerScene::get_HasAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializerScene::get_HasAuthority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasAuthority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaSerializerScene.Start
void GlobalNamespace::GorillaSerializerScene::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializerScene::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaSerializerScene*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaSerializerScene.OnEnable
void GlobalNamespace::GorillaSerializerScene::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializerScene::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaSerializerScene.OnValidEnable
void GlobalNamespace::GorillaSerializerScene::OnValidEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializerScene::OnValidEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaSerializerScene*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaSerializerScene.OnDisable
void GlobalNamespace::GorillaSerializerScene::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializerScene::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaSerializerScene.OnValidDisable
void GlobalNamespace::GorillaSerializerScene::OnValidDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializerScene::OnValidDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaSerializerScene*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaSerializerScene.Photon.Pun.IOnPhotonViewPreNetDestroy.OnPreNetDestroy
void GlobalNamespace::GorillaSerializerScene::Photon_Pun_IOnPhotonViewPreNetDestroy_OnPreNetDestroy(::Photon::Pun::PhotonView* rootView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializerScene::Photon.Pun.IOnPhotonViewPreNetDestroy.OnPreNetDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaSerializerScene*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootView);
}
// Autogenerated method: GorillaSerializerScene.OnPhotonInstantiate
void GlobalNamespace::GorillaSerializerScene::OnPhotonInstantiate(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializerScene::OnPhotonInstantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaSerializer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: GorillaSerializerScene.ValidOnSerialize
bool GlobalNamespace::GorillaSerializerScene::ValidOnSerialize(::Photon::Pun::PhotonStream* stream, ByRef<::Photon::Pun::PhotonMessageInfo> info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSerializerScene::ValidOnSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaSerializer*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream, byref(info));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: IGorillaSerializeable
#include "GlobalNamespace/IGorillaSerializeable.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IGorillaSerializeable.OnSerializeRead
void GlobalNamespace::IGorillaSerializeable::OnSerializeRead(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGorillaSerializeable::OnSerializeRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IGorillaSerializeable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: IGorillaSerializeable.OnSerializeWrite
void GlobalNamespace::IGorillaSerializeable::OnSerializeWrite(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGorillaSerializeable::OnSerializeWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IGorillaSerializeable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: IGorillaSerializeableScene
#include "GlobalNamespace/IGorillaSerializeableScene.hpp"
// Including type: GorillaSerializerScene
#include "GlobalNamespace/GorillaSerializerScene.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IGorillaSerializeableScene.OnSceneLinking
void GlobalNamespace::IGorillaSerializeableScene::OnSceneLinking(::GlobalNamespace::GorillaSerializerScene* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGorillaSerializeableScene::OnSceneLinking");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IGorillaSerializeableScene*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializer);
}
// Autogenerated method: IGorillaSerializeableScene.OnNetworkObjectDisable
void GlobalNamespace::IGorillaSerializeableScene::OnNetworkObjectDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGorillaSerializeableScene::OnNetworkObjectDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IGorillaSerializeableScene*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IGorillaSerializeableScene.OnNetworkObjectEnable
void GlobalNamespace::IGorillaSerializeableScene::OnNetworkObjectEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGorillaSerializeableScene::OnNetworkObjectEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IGorillaSerializeableScene*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IWrappedSerializable
#include "GlobalNamespace/IWrappedSerializable.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IWrappedSerializable.OnSerializeRead
void GlobalNamespace::IWrappedSerializable::OnSerializeRead(::Il2CppObject* newData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IWrappedSerializable::OnSerializeRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IWrappedSerializable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newData);
}
// Autogenerated method: IWrappedSerializable.OnSerializeRead
void GlobalNamespace::IWrappedSerializable::OnSerializeRead(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IWrappedSerializable::OnSerializeRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IWrappedSerializable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: IWrappedSerializable.OnSerializeWrite
::Il2CppObject* GlobalNamespace::IWrappedSerializable::OnSerializeWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IWrappedSerializable::OnSerializeWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IWrappedSerializable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: IWrappedSerializable.OnSerializeWrite
void GlobalNamespace::IWrappedSerializable::OnSerializeWrite(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IWrappedSerializable::OnSerializeWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::IWrappedSerializable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PhotonPrefabPool
#include "GlobalNamespace/PhotonPrefabPool.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Voice.Unity.RemoteVoiceLink
#include "Photon/Voice/Unity/RemoteVoiceLink.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ITickSystemPre.PreTickRunning>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PhotonPrefabPool::dyn_$ITickSystemPre_PreTickRunning$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhotonPrefabPool::dyn_$ITickSystemPre_PreTickRunning$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ITickSystemPre.PreTickRunning>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PrefabType[] networkPrefabsData
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PrefabType>& GlobalNamespace::PhotonPrefabPool::dyn_networkPrefabsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhotonPrefabPool::dyn_networkPrefabsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "networkPrefabsData"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PrefabType>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,UnityEngine.GameObject> networkPrefabs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>*& GlobalNamespace::PhotonPrefabPool::dyn_networkPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhotonPrefabPool::dyn_networkPrefabs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "networkPrefabs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<UnityEngine.GameObject> objectsWaiting
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::UnityEngine::GameObject*>*& GlobalNamespace::PhotonPrefabPool::dyn_objectsWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhotonPrefabPool::dyn_objectsWaiting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectsWaiting"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<UnityEngine.GameObject> objectsQueued
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>*& GlobalNamespace::PhotonPrefabPool::dyn_objectsQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhotonPrefabPool::dyn_objectsQueued");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectsQueued"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<UnityEngine.GameObject> netInstantiedObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>*& GlobalNamespace::PhotonPrefabPool::dyn_netInstantiedObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhotonPrefabPool::dyn_netInstantiedObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "netInstantiedObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Pun.PhotonView> tempViews
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Pun::PhotonView*>*& GlobalNamespace::PhotonPrefabPool::dyn_tempViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhotonPrefabPool::dyn_tempViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempViews"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Pun::PhotonView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean waiting
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PhotonPrefabPool::dyn_waiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhotonPrefabPool::dyn_waiting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waiting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PhotonPrefabPool.ITickSystemPre.get_PreTickRunning
bool GlobalNamespace::PhotonPrefabPool::ITickSystemPre_get_PreTickRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhotonPrefabPool::ITickSystemPre.get_PreTickRunning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PhotonPrefabPool*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PhotonPrefabPool.ITickSystemPre.set_PreTickRunning
void GlobalNamespace::PhotonPrefabPool::ITickSystemPre_set_PreTickRunning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhotonPrefabPool::ITickSystemPre.set_PreTickRunning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PhotonPrefabPool*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PhotonPrefabPool.Start
void GlobalNamespace::PhotonPrefabPool::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhotonPrefabPool::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PhotonPrefabPool.AddPrefab
void GlobalNamespace::PhotonPrefabPool::AddPrefab(::UnityEngine::GameObject* go, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhotonPrefabPool::AddPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, go, name);
}
// Autogenerated method: PhotonPrefabPool.Photon.Pun.IPunPrefabPool.Instantiate
::UnityEngine::GameObject* GlobalNamespace::PhotonPrefabPool::Photon_Pun_IPunPrefabPool_Instantiate(::StringW prefabId, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhotonPrefabPool::Photon.Pun.IPunPrefabPool.Instantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PhotonPrefabPool*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefabId, position, rotation);
}
// Autogenerated method: PhotonPrefabPool.Photon.Pun.IPunPrefabPool.Destroy
void GlobalNamespace::PhotonPrefabPool::Photon_Pun_IPunPrefabPool_Destroy(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhotonPrefabPool::Photon.Pun.IPunPrefabPool.Destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PhotonPrefabPool*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: PhotonPrefabPool.ITickSystemPre.PreTick
void GlobalNamespace::PhotonPrefabPool::ITickSystemPre_PreTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhotonPrefabPool::ITickSystemPre.PreTick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PhotonPrefabPool*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PhotonPrefabPool.CheckVOIPSettings
void GlobalNamespace::PhotonPrefabPool::CheckVOIPSettings(::Photon::Voice::Unity::RemoteVoiceLink* voiceLink) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhotonPrefabPool::CheckVOIPSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckVOIPSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voiceLink)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, voiceLink);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: RigContainer
#include "GlobalNamespace/RigContainer.hpp"
// Including type: RigContainer/<>c
#include "GlobalNamespace/RigContainer_--c.hpp"
// Including type: RigContainer/<QueueAutomute>d__49
#include "GlobalNamespace/RigContainer_-QueueAutomute-d__49.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: VRRigReliableState
#include "GlobalNamespace/VRRigReliableState.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: Photon.Voice.PUN.PhotonVoiceView
#include "Photon/Voice/PUN/PhotonVoiceView.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: NetPlayer
#include "GlobalNamespace/NetPlayer.hpp"
// Including type: VRRigSerializer
#include "GlobalNamespace/VRRigSerializer.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Photon.Realtime.Player> playersToCheckAutomute
::System::Collections::Generic::List_1<::Photon::Realtime::Player*>* GlobalNamespace::RigContainer::_get_playersToCheckAutomute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::_get_playersToCheckAutomute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*>("", "RigContainer", "playersToCheckAutomute"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Photon.Realtime.Player> playersToCheckAutomute
void GlobalNamespace::RigContainer::_set_playersToCheckAutomute(::System::Collections::Generic::List_1<::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::_set_playersToCheckAutomute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RigContainer", "playersToCheckAutomute", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean automuteQueued
bool GlobalNamespace::RigContainer::_get_automuteQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::_get_automuteQueued");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "RigContainer", "automuteQueued"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean automuteQueued
void GlobalNamespace::RigContainer::_set_automuteQueued(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::_set_automuteQueued");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RigContainer", "automuteQueued", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Photon.Realtime.Player> requestedAutomutePlayers
::System::Collections::Generic::List_1<::Photon::Realtime::Player*>* GlobalNamespace::RigContainer::_get_requestedAutomutePlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::_get_requestedAutomutePlayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*>("", "RigContainer", "requestedAutomutePlayers"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Photon.Realtime.Player> requestedAutomutePlayers
void GlobalNamespace::RigContainer::_set_requestedAutomutePlayers(::System::Collections::Generic::List_1<::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::_set_requestedAutomutePlayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RigContainer", "requestedAutomutePlayers", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean waitingForAutomuteCallback
bool GlobalNamespace::RigContainer::_get_waitingForAutomuteCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::_get_waitingForAutomuteCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "RigContainer", "waitingForAutomuteCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean waitingForAutomuteCallback
void GlobalNamespace::RigContainer::_set_waitingForAutomuteCallback(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::_set_waitingForAutomuteCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RigContainer", "waitingForAutomuteCallback", value));
}
// Autogenerated static field getter
// Get static field: static private RigContainer staticTempRC
::GlobalNamespace::RigContainer* GlobalNamespace::RigContainer::_get_staticTempRC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::_get_staticTempRC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RigContainer*>("", "RigContainer", "staticTempRC"));
}
// Autogenerated static field setter
// Set static field: static private RigContainer staticTempRC
void GlobalNamespace::RigContainer::_set_staticTempRC(::GlobalNamespace::RigContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::_set_staticTempRC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RigContainer", "staticTempRC", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Initialized>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RigContainer::dyn_$Initialized$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::dyn_$Initialized$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Initialized>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig vrrig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::RigContainer::dyn_vrrig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::dyn_vrrig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrrig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRigReliableState reliableState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRigReliableState*& GlobalNamespace::RigContainer::dyn_reliableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::dyn_reliableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reliableState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRigReliableState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform speakerHead
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::RigContainer::dyn_speakerHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::dyn_speakerHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speakerHead"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource replacementVoiceSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::RigContainer::dyn_replacementVoiceSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::dyn_replacementVoiceSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "replacementVoiceSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.PUN.PhotonVoiceView voiceView
[[deprecated("Use field access instead!")]] ::Photon::Voice::PUN::PhotonVoiceView*& GlobalNamespace::RigContainer::dyn_voiceView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::dyn_voiceView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceView"))->offset;
  return *reinterpret_cast<::Photon::Voice::PUN::PhotonVoiceView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableVoice
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RigContainer::dyn_enableVoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::dyn_enableVoice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableVoice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean forceMute
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RigContainer::dyn_forceMute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::dyn_forceMute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forceMute"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hasManualMute
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RigContainer::dyn_hasManualMute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::dyn_hasManualMute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasManualMute"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean bPlayerAutoMuted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RigContainer::dyn_bPlayerAutoMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::dyn_bPlayerAutoMuted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bPlayerAutoMuted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 playerChatQuality
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RigContainer::dyn_playerChatQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::dyn_playerChatQuality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerChatQuality"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RigContainer.get_Initialized
bool GlobalNamespace::RigContainer::get_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::get_Initialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Initialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.set_Initialized
void GlobalNamespace::RigContainer::set_Initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::set_Initialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Initialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RigContainer.get_Rig
::GlobalNamespace::VRRig* GlobalNamespace::RigContainer::get_Rig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::get_Rig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRRig*, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.get_ReliableState
::GlobalNamespace::VRRigReliableState* GlobalNamespace::RigContainer::get_ReliableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::get_ReliableState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReliableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRRigReliableState*, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.get_SpeakerHead
::UnityEngine::Transform* GlobalNamespace::RigContainer::get_SpeakerHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::get_SpeakerHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SpeakerHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.get_ReplacementVoiceSource
::UnityEngine::AudioSource* GlobalNamespace::RigContainer::get_ReplacementVoiceSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::get_ReplacementVoiceSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReplacementVoiceSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioSource*, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.get_Voice
::Photon::Voice::PUN::PhotonVoiceView* GlobalNamespace::RigContainer::get_Voice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::get_Voice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Voice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::PUN::PhotonVoiceView*, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.set_Voice
void GlobalNamespace::RigContainer::set_Voice(::Photon::Voice::PUN::PhotonVoiceView* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::set_Voice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Voice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RigContainer.get_photonView
::Photon::Pun::PhotonView* GlobalNamespace::RigContainer::get_photonView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::get_photonView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_photonView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.get_Muted
bool GlobalNamespace::RigContainer::get_Muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::get_Muted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Muted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.set_Muted
void GlobalNamespace::RigContainer::set_Muted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::set_Muted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Muted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RigContainer.get_Creator
::Photon::Realtime::Player* GlobalNamespace::RigContainer::get_Creator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::get_Creator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Creator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.set_Creator
void GlobalNamespace::RigContainer::set_Creator(::Photon::Realtime::Player* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::set_Creator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Creator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RigContainer.get_CreatorWrapped
::GlobalNamespace::NetPlayer* GlobalNamespace::RigContainer::get_CreatorWrapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::get_CreatorWrapped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CreatorWrapped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NetPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.set_CreatorWrapped
void GlobalNamespace::RigContainer::set_CreatorWrapped(::GlobalNamespace::NetPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::set_CreatorWrapped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CreatorWrapped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RigContainer.get_ForceMute
bool GlobalNamespace::RigContainer::get_ForceMute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::get_ForceMute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ForceMute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.set_ForceMute
void GlobalNamespace::RigContainer::set_ForceMute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::set_ForceMute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ForceMute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RigContainer.GetIsPlayerAutoMuted
bool GlobalNamespace::RigContainer::GetIsPlayerAutoMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::GetIsPlayerAutoMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsPlayerAutoMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.UpdateAutomuteLevel
void GlobalNamespace::RigContainer::UpdateAutomuteLevel(::StringW autoMuteLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::UpdateAutomuteLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAutomuteLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(autoMuteLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, autoMuteLevel);
}
// Autogenerated method: RigContainer.Start
void GlobalNamespace::RigContainer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.OnMultiPlayerStarted
void GlobalNamespace::RigContainer::OnMultiPlayerStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::OnMultiPlayerStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMultiPlayerStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.OnReturnedToSinglePlayer
void GlobalNamespace::RigContainer::OnReturnedToSinglePlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::OnReturnedToSinglePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnReturnedToSinglePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.OnDisable
void GlobalNamespace::RigContainer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.InitializeNetwork
void GlobalNamespace::RigContainer::InitializeNetwork(::Photon::Pun::PhotonView* photonView, ::Photon::Voice::PUN::PhotonVoiceView* voiceView, ::GlobalNamespace::VRRigSerializer* vrRigSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::InitializeNetwork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeNetwork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(photonView), ::il2cpp_utils::ExtractType(voiceView), ::il2cpp_utils::ExtractType(vrRigSerializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, photonView, voiceView, vrRigSerializer);
}
// Autogenerated method: RigContainer.InitializeNetwork_Shared
void GlobalNamespace::RigContainer::InitializeNetwork_Shared(::Photon::Pun::PhotonView* photonView, ::GlobalNamespace::VRRigSerializer* vrRigSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::InitializeNetwork_Shared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeNetwork_Shared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(photonView), ::il2cpp_utils::ExtractType(vrRigSerializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, photonView, vrRigSerializer);
}
// Autogenerated method: RigContainer.QueueAutomute
::System::Collections::IEnumerator* GlobalNamespace::RigContainer::QueueAutomute(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::QueueAutomute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RigContainer", "QueueAutomute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: RigContainer.RequestAutomuteSettings
void GlobalNamespace::RigContainer::RequestAutomuteSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::RequestAutomuteSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RigContainer", "RequestAutomuteSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RigContainer.CancelAutomuteRequest
void GlobalNamespace::RigContainer::CancelAutomuteRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::CancelAutomuteRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RigContainer", "CancelAutomuteRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RigContainer.ReceiveAutomuteSettings
void GlobalNamespace::RigContainer::ReceiveAutomuteSettings(::Photon::Realtime::Player* player, ::StringW score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::ReceiveAutomuteSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RigContainer", "ReceiveAutomuteSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(score)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, score);
}
// Autogenerated method: RigContainer.ProcessAutomute
void GlobalNamespace::RigContainer::ProcessAutomute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::ProcessAutomute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAutomute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.RefreshVoiceChat
void GlobalNamespace::RigContainer::RefreshVoiceChat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::RefreshVoiceChat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVoiceChat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer.RefreshAllRigVoices
void GlobalNamespace::RigContainer::RefreshAllRigVoices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::RefreshAllRigVoices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RigContainer", "RefreshAllRigVoices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RigContainer..cctor
void GlobalNamespace::RigContainer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RigContainer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: RigContainer/<>c
#include "GlobalNamespace/RigContainer_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.CloudScriptModels.ExecuteFunctionResult
#include "PlayFab/CloudScriptModels/ExecuteFunctionResult.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly RigContainer/<>c <>9
::GlobalNamespace::RigContainer::$$c* GlobalNamespace::RigContainer::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::RigContainer::$$c*>("", "RigContainer/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly RigContainer/<>c <>9
void GlobalNamespace::RigContainer::$$c::_set_$$9(::GlobalNamespace::RigContainer::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "RigContainer/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<Photon.Realtime.Player> <>9__52_0
::System::Predicate_1<::Photon::Realtime::Player*>* GlobalNamespace::RigContainer::$$c::_get_$$9__52_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$$c::_get_$$9__52_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::Photon::Realtime::Player*>*>("", "RigContainer/<>c", "<>9__52_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<Photon.Realtime.Player> <>9__52_0
void GlobalNamespace::RigContainer::$$c::_set_$$9__52_0(::System::Predicate_1<::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$$c::_set_$$9__52_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "RigContainer/<>c", "<>9__52_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Realtime.Player,System.String> <>9__52_1
::System::Func_2<::Photon::Realtime::Player*, ::StringW>* GlobalNamespace::RigContainer::$$c::_get_$$9__52_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$$c::_get_$$9__52_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Realtime::Player*, ::StringW>*>("", "RigContainer/<>c", "<>9__52_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Realtime.Player,System.String> <>9__52_1
void GlobalNamespace::RigContainer::$$c::_set_$$9__52_1(::System::Func_2<::Photon::Realtime::Player*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$$c::_set_$$9__52_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "RigContainer/<>c", "<>9__52_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<PlayFab.CloudScriptModels.ExecuteFunctionResult> <>9__52_2
::System::Action_1<::PlayFab::CloudScriptModels::ExecuteFunctionResult*>* GlobalNamespace::RigContainer::$$c::_get_$$9__52_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$$c::_get_$$9__52_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::PlayFab::CloudScriptModels::ExecuteFunctionResult*>*>("", "RigContainer/<>c", "<>9__52_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<PlayFab.CloudScriptModels.ExecuteFunctionResult> <>9__52_2
void GlobalNamespace::RigContainer::$$c::_set_$$9__52_2(::System::Action_1<::PlayFab::CloudScriptModels::ExecuteFunctionResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$$c::_set_$$9__52_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "RigContainer/<>c", "<>9__52_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<PlayFab.PlayFabError> <>9__52_3
::System::Action_1<::PlayFab::PlayFabError*>* GlobalNamespace::RigContainer::$$c::_get_$$9__52_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$$c::_get_$$9__52_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::PlayFab::PlayFabError*>*>("", "RigContainer/<>c", "<>9__52_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<PlayFab.PlayFabError> <>9__52_3
void GlobalNamespace::RigContainer::$$c::_set_$$9__52_3(::System::Action_1<::PlayFab::PlayFabError*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$$c::_set_$$9__52_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "RigContainer/<>c", "<>9__52_3", value)));
}
// Autogenerated method: RigContainer/<>c..cctor
void GlobalNamespace::RigContainer::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RigContainer/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RigContainer/<>c.<RequestAutomuteSettings>b__52_0
bool GlobalNamespace::RigContainer::$$c::$RequestAutomuteSettings$b__52_0(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$$c::<RequestAutomuteSettings>b__52_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestAutomuteSettings>b__52_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: RigContainer/<>c.<RequestAutomuteSettings>b__52_1
::StringW GlobalNamespace::RigContainer::$$c::$RequestAutomuteSettings$b__52_1(::Photon::Realtime::Player* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$$c::<RequestAutomuteSettings>b__52_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestAutomuteSettings>b__52_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, x);
}
// Autogenerated method: RigContainer/<>c.<RequestAutomuteSettings>b__52_2
void GlobalNamespace::RigContainer::$$c::$RequestAutomuteSettings$b__52_2(::PlayFab::CloudScriptModels::ExecuteFunctionResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$$c::<RequestAutomuteSettings>b__52_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestAutomuteSettings>b__52_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: RigContainer/<>c.<RequestAutomuteSettings>b__52_3
void GlobalNamespace::RigContainer::$$c::$RequestAutomuteSettings$b__52_3(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$$c::<RequestAutomuteSettings>b__52_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestAutomuteSettings>b__52_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: RigContainer/<QueueAutomute>d__49
#include "GlobalNamespace/RigContainer_-QueueAutomute-d__49.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RigContainer::$QueueAutomute$d__49::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$QueueAutomute$d__49::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::RigContainer::$QueueAutomute$d__49::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$QueueAutomute$d__49::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player player
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::RigContainer::$QueueAutomute$d__49::dyn_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$QueueAutomute$d__49::dyn_player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RigContainer/<QueueAutomute>d__49.System.IDisposable.Dispose
void GlobalNamespace::RigContainer::$QueueAutomute$d__49::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$QueueAutomute$d__49::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RigContainer::$QueueAutomute$d__49*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer/<QueueAutomute>d__49.MoveNext
bool GlobalNamespace::RigContainer::$QueueAutomute$d__49::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$QueueAutomute$d__49::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RigContainer::$QueueAutomute$d__49*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer/<QueueAutomute>d__49.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::RigContainer::$QueueAutomute$d__49::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$QueueAutomute$d__49::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RigContainer::$QueueAutomute$d__49*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer/<QueueAutomute>d__49.System.Collections.IEnumerator.Reset
void GlobalNamespace::RigContainer::$QueueAutomute$d__49::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$QueueAutomute$d__49::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RigContainer::$QueueAutomute$d__49*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RigContainer/<QueueAutomute>d__49.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::RigContainer::$QueueAutomute$d__49::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RigContainer::$QueueAutomute$d__49::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RigContainer::$QueueAutomute$d__49*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VRRigCache
#include "GlobalNamespace/VRRigCache.hpp"
// Including type: RigContainer
#include "GlobalNamespace/RigContainer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: NetPlayer
#include "GlobalNamespace/NetPlayer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private VRRigCache <Instance>k__BackingField
::GlobalNamespace::VRRigCache* GlobalNamespace::VRRigCache::_get_$Instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::_get_$Instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::VRRigCache*>("", "VRRigCache", "<Instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private VRRigCache <Instance>k__BackingField
void GlobalNamespace::VRRigCache::_set_$Instance$k__BackingField(::GlobalNamespace::VRRigCache* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::_set_$Instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRRigCache", "<Instance>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Queue`1<RigContainer> freeRigs
::System::Collections::Generic::Queue_1<::GlobalNamespace::RigContainer*>* GlobalNamespace::VRRigCache::_get_freeRigs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::_get_freeRigs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::Queue_1<::GlobalNamespace::RigContainer*>*>("", "VRRigCache", "freeRigs"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Queue`1<RigContainer> freeRigs
void GlobalNamespace::VRRigCache::_set_freeRigs(::System::Collections::Generic::Queue_1<::GlobalNamespace::RigContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::_set_freeRigs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRRigCache", "freeRigs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<NetPlayer,RigContainer> rigsInUse
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::NetPlayer*, ::GlobalNamespace::RigContainer*>* GlobalNamespace::VRRigCache::_get_rigsInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::_get_rigsInUse");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::NetPlayer*, ::GlobalNamespace::RigContainer*>*>("", "VRRigCache", "rigsInUse")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<NetPlayer,RigContainer> rigsInUse
void GlobalNamespace::VRRigCache::_set_rigsInUse(::System::Collections::Generic::Dictionary_2<::GlobalNamespace::NetPlayer*, ::GlobalNamespace::RigContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::_set_rigsInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRRigCache", "rigsInUse", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean <isInitialized>k__BackingField
bool GlobalNamespace::VRRigCache::_get_$isInitialized$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::_get_$isInitialized$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("", "VRRigCache", "<isInitialized>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <isInitialized>k__BackingField
void GlobalNamespace::VRRigCache::_set_$isInitialized$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::_set_$isInitialized$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRRigCache", "<isInitialized>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action OnPostInitialize
::System::Action* GlobalNamespace::VRRigCache::_get_OnPostInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::_get_OnPostInitialize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "VRRigCache", "OnPostInitialize"));
}
// Autogenerated static field setter
// Set static field: static private System.Action OnPostInitialize
void GlobalNamespace::VRRigCache::_set_OnPostInitialize(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::_set_OnPostInitialize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRRigCache", "OnPostInitialize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action OnPostSpawnRig
::System::Action* GlobalNamespace::VRRigCache::_get_OnPostSpawnRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::_get_OnPostSpawnRig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "VRRigCache", "OnPostSpawnRig"));
}
// Autogenerated static field setter
// Set static field: static private System.Action OnPostSpawnRig
void GlobalNamespace::VRRigCache::_set_OnPostSpawnRig(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::_set_OnPostSpawnRig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRRigCache", "OnPostSpawnRig", value));
}
// Autogenerated instance field getter
// Get instance field: public RigContainer localRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RigContainer*& GlobalNamespace::VRRigCache::dyn_localRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::dyn_localRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RigContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform rigParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRRigCache::dyn_rigParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::dyn_rigParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform networkParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRRigCache::dyn_networkParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::dyn_networkParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "networkParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject rigTemplate
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::VRRigCache::dyn_rigTemplate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::dyn_rigTemplate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigTemplate"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rigAmount
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRRigCache::dyn_rigAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::dyn_rigAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRRigCache.get_Instance
::GlobalNamespace::VRRigCache* GlobalNamespace::VRRigCache::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRRigCache", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRRigCache*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VRRigCache.set_Instance
void GlobalNamespace::VRRigCache::set_Instance(::GlobalNamespace::VRRigCache* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRRigCache", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: VRRigCache.get_NetworkParent
::UnityEngine::Transform* GlobalNamespace::VRRigCache::get_NetworkParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::get_NetworkParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NetworkParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: VRRigCache.get_isInitialized
bool GlobalNamespace::VRRigCache::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::get_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRRigCache", "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VRRigCache.set_isInitialized
void GlobalNamespace::VRRigCache::set_isInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::set_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRRigCache", "set_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: VRRigCache.add_OnPostInitialize
void GlobalNamespace::VRRigCache::add_OnPostInitialize(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::add_OnPostInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRRigCache", "add_OnPostInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: VRRigCache.remove_OnPostInitialize
void GlobalNamespace::VRRigCache::remove_OnPostInitialize(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::remove_OnPostInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRRigCache", "remove_OnPostInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: VRRigCache.add_OnPostSpawnRig
void GlobalNamespace::VRRigCache::add_OnPostSpawnRig(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::add_OnPostSpawnRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRRigCache", "add_OnPostSpawnRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: VRRigCache.remove_OnPostSpawnRig
void GlobalNamespace::VRRigCache::remove_OnPostSpawnRig(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::remove_OnPostSpawnRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRRigCache", "remove_OnPostSpawnRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: VRRigCache.Start
void GlobalNamespace::VRRigCache::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRigCache.InitializeVRRigCache
void GlobalNamespace::VRRigCache::InitializeVRRigCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::InitializeVRRigCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeVRRigCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRigCache.OnDestroy
void GlobalNamespace::VRRigCache::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRigCache.SpawnRig
::GlobalNamespace::RigContainer* GlobalNamespace::VRRigCache::SpawnRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::SpawnRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::RigContainer*, false>(this, ___internal__method);
}
// Autogenerated method: VRRigCache.TryGetVrrig
bool GlobalNamespace::VRRigCache::TryGetVrrig(::Photon::Realtime::Player* targetPlayer, ByRef<::GlobalNamespace::RigContainer*> playerRig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::TryGetVrrig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetVrrig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPlayer), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::RigContainer*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetPlayer, byref(playerRig));
}
// Autogenerated method: VRRigCache.TryGetVrrig
bool GlobalNamespace::VRRigCache::TryGetVrrig(::GlobalNamespace::NetPlayer* targetPlayer, ByRef<::GlobalNamespace::RigContainer*> playerRig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::TryGetVrrig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetVrrig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPlayer), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::RigContainer*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetPlayer, byref(playerRig));
}
// Autogenerated method: VRRigCache.AddRigToGorillaParent
void GlobalNamespace::VRRigCache::AddRigToGorillaParent(::GlobalNamespace::NetPlayer* player, ::GlobalNamespace::VRRig* vrrig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::AddRigToGorillaParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRigToGorillaParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(vrrig)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, vrrig);
}
// Autogenerated method: VRRigCache.OnPlayerEnteredRoom
void GlobalNamespace::VRRigCache::OnPlayerEnteredRoom(int joiningPlayerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::OnPlayerEnteredRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayerEnteredRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joiningPlayerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, joiningPlayerID);
}
// Autogenerated method: VRRigCache.OnJoinedRoom
void GlobalNamespace::VRRigCache::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::OnJoinedRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnJoinedRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRigCache.RemoveRigFromGorillaParent
void GlobalNamespace::VRRigCache::RemoveRigFromGorillaParent(::GlobalNamespace::NetPlayer* player, ::GlobalNamespace::VRRig* vrrig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::RemoveRigFromGorillaParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveRigFromGorillaParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(vrrig)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, vrrig);
}
// Autogenerated method: VRRigCache.OnPlayerLeftRoom
void GlobalNamespace::VRRigCache::OnPlayerLeftRoom(int playerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::OnPlayerLeftRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayerLeftRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerID);
}
// Autogenerated method: VRRigCache.CheckForMissingPlayer
void GlobalNamespace::VRRigCache::CheckForMissingPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::CheckForMissingPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForMissingPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRigCache.OnLeftRoom
void GlobalNamespace::VRRigCache::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::OnLeftRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLeftRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRigCache.GetAllRigs
::ArrayW<::GlobalNamespace::VRRig*> GlobalNamespace::VRRigCache::GetAllRigs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::GetAllRigs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllRigs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::VRRig*>, false>(this, ___internal__method);
}
// Autogenerated method: VRRigCache.GetAllRigsHash
int GlobalNamespace::VRRigCache::GetAllRigsHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::GetAllRigsHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllRigsHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VRRigCache.LogInfo
void GlobalNamespace::VRRigCache::LogInfo(::StringW log) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::LogInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(log)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, log);
}
// Autogenerated method: VRRigCache.LogWarning
void GlobalNamespace::VRRigCache::LogWarning(::StringW log) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(log)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, log);
}
// Autogenerated method: VRRigCache.LogError
void GlobalNamespace::VRRigCache::LogError(::StringW log) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(log)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, log);
}
// Autogenerated method: VRRigCache..cctor
void GlobalNamespace::VRRigCache::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigCache::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRRigCache", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VrrigReliableSerializer
#include "GlobalNamespace/VrrigReliableSerializer.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VrrigReliableSerializer.OnInstantiateSetup
bool GlobalNamespace::VrrigReliableSerializer::OnInstantiateSetup(::Photon::Pun::PhotonMessageInfo info, ByRef<::UnityEngine::GameObject*> outTargetObject, ByRef<::System::Type*> outTargetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VrrigReliableSerializer::OnInstantiateSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaSerializer*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, info, byref(outTargetObject), byref(outTargetType));
}
