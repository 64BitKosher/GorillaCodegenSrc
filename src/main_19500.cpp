// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.DecimalFormatter
#include "VYaml/Serialization/DecimalFormatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.DecimalFormatter Instance
::VYaml::Serialization::DecimalFormatter* VYaml::Serialization::DecimalFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::DecimalFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::DecimalFormatter*>("VYaml.Serialization", "DecimalFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.DecimalFormatter Instance
void VYaml::Serialization::DecimalFormatter::_set_Instance(::VYaml::Serialization::DecimalFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::DecimalFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "DecimalFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.DecimalFormatter.Serialize
void VYaml::Serialization::DecimalFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::Decimal value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::DecimalFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::DecimalFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.DecimalFormatter.Deserialize
::System::Decimal VYaml::Serialization::DecimalFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::DecimalFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::DecimalFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.DecimalFormatter..cctor
void VYaml::Serialization::DecimalFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::DecimalFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "DecimalFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VYaml.Serialization.EnumAsStringNonGenericCache
#include "VYaml/Serialization/EnumAsStringNonGenericCache.hpp"
// Including type: System.Collections.Concurrent.ConcurrentDictionary`2
#include "System/Collections/Concurrent/ConcurrentDictionary_2.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.EnumAsStringNonGenericCache Instance
::VYaml::Serialization::EnumAsStringNonGenericCache* VYaml::Serialization::EnumAsStringNonGenericCache::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::EnumAsStringNonGenericCache::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::EnumAsStringNonGenericCache*>("VYaml.Serialization", "EnumAsStringNonGenericCache", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.EnumAsStringNonGenericCache Instance
void VYaml::Serialization::EnumAsStringNonGenericCache::_set_Instance(::VYaml::Serialization::EnumAsStringNonGenericCache* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::EnumAsStringNonGenericCache::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "EnumAsStringNonGenericCache", "Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Concurrent.ConcurrentDictionary`2<System.Object,System.String> stringValues
[[deprecated("Use field access instead!")]] ::System::Collections::Concurrent::ConcurrentDictionary_2<::Il2CppObject*, ::StringW>*& VYaml::Serialization::EnumAsStringNonGenericCache::dyn_stringValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::EnumAsStringNonGenericCache::dyn_stringValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringValues"))->offset;
  return *reinterpret_cast<::System::Collections::Concurrent::ConcurrentDictionary_2<::Il2CppObject*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`3<System.Object,System.Type,System.String> valueFactory
[[deprecated("Use field access instead!")]] ::System::Func_3<::Il2CppObject*, ::System::Type*, ::StringW>*& VYaml::Serialization::EnumAsStringNonGenericCache::dyn_valueFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::EnumAsStringNonGenericCache::dyn_valueFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueFactory"))->offset;
  return *reinterpret_cast<::System::Func_3<::Il2CppObject*, ::System::Type*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Serialization.EnumAsStringNonGenericCache.GetStringValue
::StringW VYaml::Serialization::EnumAsStringNonGenericCache::GetStringValue(::System::Type* type, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::EnumAsStringNonGenericCache::GetStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, type, value);
}
// Autogenerated method: VYaml.Serialization.EnumAsStringNonGenericCache.CreateValue
::StringW VYaml::Serialization::EnumAsStringNonGenericCache::CreateValue(::Il2CppObject* value, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::EnumAsStringNonGenericCache::CreateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "EnumAsStringNonGenericCache", "CreateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type);
}
// Autogenerated method: VYaml.Serialization.EnumAsStringNonGenericCache..cctor
void VYaml::Serialization::EnumAsStringNonGenericCache::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::EnumAsStringNonGenericCache::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "EnumAsStringNonGenericCache", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.Float32Formatter
#include "VYaml/Serialization/Float32Formatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.Float32Formatter Instance
::VYaml::Serialization::Float32Formatter* VYaml::Serialization::Float32Formatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Float32Formatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::Float32Formatter*>("VYaml.Serialization", "Float32Formatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.Float32Formatter Instance
void VYaml::Serialization::Float32Formatter::_set_Instance(::VYaml::Serialization::Float32Formatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Float32Formatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "Float32Formatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.Float32Formatter.Serialize
void VYaml::Serialization::Float32Formatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, float value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Float32Formatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::Float32Formatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.Float32Formatter.Deserialize
float VYaml::Serialization::Float32Formatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Float32Formatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::Float32Formatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.Float32Formatter..cctor
void VYaml::Serialization::Float32Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Float32Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "Float32Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.NullableFloat32Formatter
#include "VYaml/Serialization/NullableFloat32Formatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.NullableFloat32Formatter Instance
::VYaml::Serialization::NullableFloat32Formatter* VYaml::Serialization::NullableFloat32Formatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableFloat32Formatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::NullableFloat32Formatter*>("VYaml.Serialization", "NullableFloat32Formatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.NullableFloat32Formatter Instance
void VYaml::Serialization::NullableFloat32Formatter::_set_Instance(::VYaml::Serialization::NullableFloat32Formatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableFloat32Formatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "NullableFloat32Formatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.NullableFloat32Formatter.Serialize
void VYaml::Serialization::NullableFloat32Formatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::Nullable_1<float> value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableFloat32Formatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableFloat32Formatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.NullableFloat32Formatter.Deserialize
::System::Nullable_1<float> VYaml::Serialization::NullableFloat32Formatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableFloat32Formatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableFloat32Formatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<float>, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.NullableFloat32Formatter..cctor
void VYaml::Serialization::NullableFloat32Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableFloat32Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "NullableFloat32Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.Float64Formatter
#include "VYaml/Serialization/Float64Formatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.Float64Formatter Instance
::VYaml::Serialization::Float64Formatter* VYaml::Serialization::Float64Formatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Float64Formatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::Float64Formatter*>("VYaml.Serialization", "Float64Formatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.Float64Formatter Instance
void VYaml::Serialization::Float64Formatter::_set_Instance(::VYaml::Serialization::Float64Formatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Float64Formatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "Float64Formatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.Float64Formatter.Serialize
void VYaml::Serialization::Float64Formatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, double value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Float64Formatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::Float64Formatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.Float64Formatter.Deserialize
double VYaml::Serialization::Float64Formatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Float64Formatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::Float64Formatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.Float64Formatter..cctor
void VYaml::Serialization::Float64Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Float64Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "Float64Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.NullableFloat64Formatter
#include "VYaml/Serialization/NullableFloat64Formatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.NullableFloat64Formatter Instance
::VYaml::Serialization::NullableFloat64Formatter* VYaml::Serialization::NullableFloat64Formatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableFloat64Formatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::NullableFloat64Formatter*>("VYaml.Serialization", "NullableFloat64Formatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.NullableFloat64Formatter Instance
void VYaml::Serialization::NullableFloat64Formatter::_set_Instance(::VYaml::Serialization::NullableFloat64Formatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableFloat64Formatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "NullableFloat64Formatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.NullableFloat64Formatter.Serialize
void VYaml::Serialization::NullableFloat64Formatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::Nullable_1<double> value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableFloat64Formatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableFloat64Formatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.NullableFloat64Formatter.Deserialize
::System::Nullable_1<double> VYaml::Serialization::NullableFloat64Formatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableFloat64Formatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableFloat64Formatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<double>, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.NullableFloat64Formatter..cctor
void VYaml::Serialization::NullableFloat64Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableFloat64Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "NullableFloat64Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.GuidFormatter
#include "VYaml/Serialization/GuidFormatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.GuidFormatter Instance
::VYaml::Serialization::GuidFormatter* VYaml::Serialization::GuidFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::GuidFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::GuidFormatter*>("VYaml.Serialization", "GuidFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.GuidFormatter Instance
void VYaml::Serialization::GuidFormatter::_set_Instance(::VYaml::Serialization::GuidFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::GuidFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "GuidFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.GuidFormatter.Serialize
void VYaml::Serialization::GuidFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::Guid value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::GuidFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::GuidFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.GuidFormatter.Deserialize
::System::Guid VYaml::Serialization::GuidFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::GuidFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::GuidFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.GuidFormatter..cctor
void VYaml::Serialization::GuidFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::GuidFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "GuidFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.Int16Formatter
#include "VYaml/Serialization/Int16Formatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.Int16Formatter Instance
::VYaml::Serialization::Int16Formatter* VYaml::Serialization::Int16Formatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Int16Formatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::Int16Formatter*>("VYaml.Serialization", "Int16Formatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.Int16Formatter Instance
void VYaml::Serialization::Int16Formatter::_set_Instance(::VYaml::Serialization::Int16Formatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Int16Formatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "Int16Formatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.Int16Formatter.Serialize
void VYaml::Serialization::Int16Formatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, int16_t value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Int16Formatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::Int16Formatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.Int16Formatter.Deserialize
int16_t VYaml::Serialization::Int16Formatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Int16Formatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::Int16Formatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.Int16Formatter..cctor
void VYaml::Serialization::Int16Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Int16Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "Int16Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.NullableInt16Formatter
#include "VYaml/Serialization/NullableInt16Formatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.NullableInt16Formatter Instance
::VYaml::Serialization::NullableInt16Formatter* VYaml::Serialization::NullableInt16Formatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableInt16Formatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::NullableInt16Formatter*>("VYaml.Serialization", "NullableInt16Formatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.NullableInt16Formatter Instance
void VYaml::Serialization::NullableInt16Formatter::_set_Instance(::VYaml::Serialization::NullableInt16Formatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableInt16Formatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "NullableInt16Formatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.NullableInt16Formatter.Serialize
void VYaml::Serialization::NullableInt16Formatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::Nullable_1<int16_t> value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableInt16Formatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableInt16Formatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.NullableInt16Formatter.Deserialize
::System::Nullable_1<int16_t> VYaml::Serialization::NullableInt16Formatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableInt16Formatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableInt16Formatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int16_t>, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.NullableInt16Formatter..cctor
void VYaml::Serialization::NullableInt16Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableInt16Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "NullableInt16Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.Int32Formatter
#include "VYaml/Serialization/Int32Formatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.Int32Formatter Instance
::VYaml::Serialization::Int32Formatter* VYaml::Serialization::Int32Formatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Int32Formatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::Int32Formatter*>("VYaml.Serialization", "Int32Formatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.Int32Formatter Instance
void VYaml::Serialization::Int32Formatter::_set_Instance(::VYaml::Serialization::Int32Formatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Int32Formatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "Int32Formatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.Int32Formatter.Serialize
void VYaml::Serialization::Int32Formatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, int value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Int32Formatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::Int32Formatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.Int32Formatter.Deserialize
int VYaml::Serialization::Int32Formatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Int32Formatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::Int32Formatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.Int32Formatter..cctor
void VYaml::Serialization::Int32Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Int32Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "Int32Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.NullableInt32Formatter
#include "VYaml/Serialization/NullableInt32Formatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.NullableInt32Formatter Instance
::VYaml::Serialization::NullableInt32Formatter* VYaml::Serialization::NullableInt32Formatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableInt32Formatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::NullableInt32Formatter*>("VYaml.Serialization", "NullableInt32Formatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.NullableInt32Formatter Instance
void VYaml::Serialization::NullableInt32Formatter::_set_Instance(::VYaml::Serialization::NullableInt32Formatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableInt32Formatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "NullableInt32Formatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.NullableInt32Formatter.Serialize
void VYaml::Serialization::NullableInt32Formatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::Nullable_1<int> value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableInt32Formatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableInt32Formatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.NullableInt32Formatter.Deserialize
::System::Nullable_1<int> VYaml::Serialization::NullableInt32Formatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableInt32Formatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableInt32Formatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.NullableInt32Formatter..cctor
void VYaml::Serialization::NullableInt32Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableInt32Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "NullableInt32Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.Int64Formatter
#include "VYaml/Serialization/Int64Formatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.Int64Formatter Instance
::VYaml::Serialization::Int64Formatter* VYaml::Serialization::Int64Formatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Int64Formatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::Int64Formatter*>("VYaml.Serialization", "Int64Formatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.Int64Formatter Instance
void VYaml::Serialization::Int64Formatter::_set_Instance(::VYaml::Serialization::Int64Formatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Int64Formatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "Int64Formatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.Int64Formatter.Serialize
void VYaml::Serialization::Int64Formatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, int64_t value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Int64Formatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::Int64Formatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.Int64Formatter.Deserialize
int64_t VYaml::Serialization::Int64Formatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Int64Formatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::Int64Formatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.Int64Formatter..cctor
void VYaml::Serialization::Int64Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::Int64Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "Int64Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.NullableInt64Formatter
#include "VYaml/Serialization/NullableInt64Formatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.NullableInt64Formatter Instance
::VYaml::Serialization::NullableInt64Formatter* VYaml::Serialization::NullableInt64Formatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableInt64Formatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::NullableInt64Formatter*>("VYaml.Serialization", "NullableInt64Formatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.NullableInt64Formatter Instance
void VYaml::Serialization::NullableInt64Formatter::_set_Instance(::VYaml::Serialization::NullableInt64Formatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableInt64Formatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "NullableInt64Formatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.NullableInt64Formatter.Serialize
void VYaml::Serialization::NullableInt64Formatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::Nullable_1<int64_t> value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableInt64Formatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableInt64Formatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.NullableInt64Formatter.Deserialize
::System::Nullable_1<int64_t> VYaml::Serialization::NullableInt64Formatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableInt64Formatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableInt64Formatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.NullableInt64Formatter..cctor
void VYaml::Serialization::NullableInt64Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableInt64Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "NullableInt64Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.NullableStringFormatter
#include "VYaml/Serialization/NullableStringFormatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.NullableStringFormatter Instance
::VYaml::Serialization::NullableStringFormatter* VYaml::Serialization::NullableStringFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableStringFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::NullableStringFormatter*>("VYaml.Serialization", "NullableStringFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.NullableStringFormatter Instance
void VYaml::Serialization::NullableStringFormatter::_set_Instance(::VYaml::Serialization::NullableStringFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableStringFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "NullableStringFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.NullableStringFormatter.Serialize
void VYaml::Serialization::NullableStringFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::StringW value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableStringFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableStringFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.NullableStringFormatter.Deserialize
::StringW VYaml::Serialization::NullableStringFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableStringFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableStringFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.NullableStringFormatter..cctor
void VYaml::Serialization::NullableStringFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableStringFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "NullableStringFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VYaml.Serialization.PrimitiveObjectFormatter
#include "VYaml/Serialization/PrimitiveObjectFormatter.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.PrimitiveObjectFormatter Instance
::VYaml::Serialization::PrimitiveObjectFormatter* VYaml::Serialization::PrimitiveObjectFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::PrimitiveObjectFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::PrimitiveObjectFormatter*>("VYaml.Serialization", "PrimitiveObjectFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.PrimitiveObjectFormatter Instance
void VYaml::Serialization::PrimitiveObjectFormatter::_set_Instance(::VYaml::Serialization::PrimitiveObjectFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::PrimitiveObjectFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "PrimitiveObjectFormatter", "Instance", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Int32> TypeToJumpCode
::System::Collections::Generic::Dictionary_2<::System::Type*, int>* VYaml::Serialization::PrimitiveObjectFormatter::_get_TypeToJumpCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::PrimitiveObjectFormatter::_get_TypeToJumpCode");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, int>*>("VYaml.Serialization", "PrimitiveObjectFormatter", "TypeToJumpCode")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Int32> TypeToJumpCode
void VYaml::Serialization::PrimitiveObjectFormatter::_set_TypeToJumpCode(::System::Collections::Generic::Dictionary_2<::System::Type*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::PrimitiveObjectFormatter::_set_TypeToJumpCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "PrimitiveObjectFormatter", "TypeToJumpCode", value));
}
// Autogenerated method: VYaml.Serialization.PrimitiveObjectFormatter.Serialize
void VYaml::Serialization::PrimitiveObjectFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::Il2CppObject* value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::PrimitiveObjectFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::PrimitiveObjectFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.PrimitiveObjectFormatter.Deserialize
::Il2CppObject* VYaml::Serialization::PrimitiveObjectFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::PrimitiveObjectFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::PrimitiveObjectFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.PrimitiveObjectFormatter..cctor
void VYaml::Serialization::PrimitiveObjectFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::PrimitiveObjectFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "PrimitiveObjectFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.SByteFormatter
#include "VYaml/Serialization/SByteFormatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.SByteFormatter Instance
::VYaml::Serialization::SByteFormatter* VYaml::Serialization::SByteFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::SByteFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::SByteFormatter*>("VYaml.Serialization", "SByteFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.SByteFormatter Instance
void VYaml::Serialization::SByteFormatter::_set_Instance(::VYaml::Serialization::SByteFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::SByteFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "SByteFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.SByteFormatter.Serialize
void VYaml::Serialization::SByteFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, int8_t value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::SByteFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::SByteFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.SByteFormatter.Deserialize
int8_t VYaml::Serialization::SByteFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::SByteFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::SByteFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.SByteFormatter..cctor
void VYaml::Serialization::SByteFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::SByteFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "SByteFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.NullableSByteFormatter
#include "VYaml/Serialization/NullableSByteFormatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.NullableSByteFormatter Instance
::VYaml::Serialization::NullableSByteFormatter* VYaml::Serialization::NullableSByteFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableSByteFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::NullableSByteFormatter*>("VYaml.Serialization", "NullableSByteFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.NullableSByteFormatter Instance
void VYaml::Serialization::NullableSByteFormatter::_set_Instance(::VYaml::Serialization::NullableSByteFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableSByteFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "NullableSByteFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.NullableSByteFormatter.Serialize
void VYaml::Serialization::NullableSByteFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::Nullable_1<int8_t> value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableSByteFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableSByteFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.NullableSByteFormatter.Deserialize
::System::Nullable_1<int8_t> VYaml::Serialization::NullableSByteFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableSByteFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableSByteFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int8_t>, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.NullableSByteFormatter..cctor
void VYaml::Serialization::NullableSByteFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableSByteFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "NullableSByteFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.TimeSpanFormatter
#include "VYaml/Serialization/TimeSpanFormatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.TimeSpanFormatter Instance
::VYaml::Serialization::TimeSpanFormatter* VYaml::Serialization::TimeSpanFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::TimeSpanFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::TimeSpanFormatter*>("VYaml.Serialization", "TimeSpanFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.TimeSpanFormatter Instance
void VYaml::Serialization::TimeSpanFormatter::_set_Instance(::VYaml::Serialization::TimeSpanFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::TimeSpanFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "TimeSpanFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.TimeSpanFormatter.Serialize
void VYaml::Serialization::TimeSpanFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::TimeSpan value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::TimeSpanFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::TimeSpanFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.TimeSpanFormatter.Deserialize
::System::TimeSpan VYaml::Serialization::TimeSpanFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::TimeSpanFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::TimeSpanFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.TimeSpanFormatter..cctor
void VYaml::Serialization::TimeSpanFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::TimeSpanFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "TimeSpanFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.UInt16Formatter
#include "VYaml/Serialization/UInt16Formatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.UInt16Formatter Instance
::VYaml::Serialization::UInt16Formatter* VYaml::Serialization::UInt16Formatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UInt16Formatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::UInt16Formatter*>("VYaml.Serialization", "UInt16Formatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.UInt16Formatter Instance
void VYaml::Serialization::UInt16Formatter::_set_Instance(::VYaml::Serialization::UInt16Formatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UInt16Formatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "UInt16Formatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.UInt16Formatter.Serialize
void VYaml::Serialization::UInt16Formatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, uint16_t value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UInt16Formatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::UInt16Formatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.UInt16Formatter.Deserialize
uint16_t VYaml::Serialization::UInt16Formatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UInt16Formatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::UInt16Formatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.UInt16Formatter..cctor
void VYaml::Serialization::UInt16Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UInt16Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "UInt16Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.NullableUInt16Formatter
#include "VYaml/Serialization/NullableUInt16Formatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.NullableUInt16Formatter Instance
::VYaml::Serialization::NullableUInt16Formatter* VYaml::Serialization::NullableUInt16Formatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableUInt16Formatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::NullableUInt16Formatter*>("VYaml.Serialization", "NullableUInt16Formatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.NullableUInt16Formatter Instance
void VYaml::Serialization::NullableUInt16Formatter::_set_Instance(::VYaml::Serialization::NullableUInt16Formatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableUInt16Formatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "NullableUInt16Formatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.NullableUInt16Formatter.Serialize
void VYaml::Serialization::NullableUInt16Formatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::Nullable_1<uint16_t> value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableUInt16Formatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableUInt16Formatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.NullableUInt16Formatter.Deserialize
::System::Nullable_1<uint16_t> VYaml::Serialization::NullableUInt16Formatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableUInt16Formatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableUInt16Formatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<uint16_t>, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.NullableUInt16Formatter..cctor
void VYaml::Serialization::NullableUInt16Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableUInt16Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "NullableUInt16Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.UInt32Formatter
#include "VYaml/Serialization/UInt32Formatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.UInt32Formatter Instance
::VYaml::Serialization::UInt32Formatter* VYaml::Serialization::UInt32Formatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UInt32Formatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::UInt32Formatter*>("VYaml.Serialization", "UInt32Formatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.UInt32Formatter Instance
void VYaml::Serialization::UInt32Formatter::_set_Instance(::VYaml::Serialization::UInt32Formatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UInt32Formatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "UInt32Formatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.UInt32Formatter.Serialize
void VYaml::Serialization::UInt32Formatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, uint value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UInt32Formatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::UInt32Formatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.UInt32Formatter.Deserialize
uint VYaml::Serialization::UInt32Formatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UInt32Formatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::UInt32Formatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.UInt32Formatter..cctor
void VYaml::Serialization::UInt32Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UInt32Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "UInt32Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.NullableUInt32Formatter
#include "VYaml/Serialization/NullableUInt32Formatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.NullableUInt32Formatter Instance
::VYaml::Serialization::NullableUInt32Formatter* VYaml::Serialization::NullableUInt32Formatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableUInt32Formatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::NullableUInt32Formatter*>("VYaml.Serialization", "NullableUInt32Formatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.NullableUInt32Formatter Instance
void VYaml::Serialization::NullableUInt32Formatter::_set_Instance(::VYaml::Serialization::NullableUInt32Formatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableUInt32Formatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "NullableUInt32Formatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.NullableUInt32Formatter.Serialize
void VYaml::Serialization::NullableUInt32Formatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::Nullable_1<uint> value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableUInt32Formatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableUInt32Formatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.NullableUInt32Formatter.Deserialize
::System::Nullable_1<uint> VYaml::Serialization::NullableUInt32Formatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableUInt32Formatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableUInt32Formatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<uint>, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.NullableUInt32Formatter..cctor
void VYaml::Serialization::NullableUInt32Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableUInt32Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "NullableUInt32Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.UInt64Formatter
#include "VYaml/Serialization/UInt64Formatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.UInt64Formatter Instance
::VYaml::Serialization::UInt64Formatter* VYaml::Serialization::UInt64Formatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UInt64Formatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::UInt64Formatter*>("VYaml.Serialization", "UInt64Formatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.UInt64Formatter Instance
void VYaml::Serialization::UInt64Formatter::_set_Instance(::VYaml::Serialization::UInt64Formatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UInt64Formatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "UInt64Formatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.UInt64Formatter.Serialize
void VYaml::Serialization::UInt64Formatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, uint64_t value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UInt64Formatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::UInt64Formatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.UInt64Formatter.Deserialize
uint64_t VYaml::Serialization::UInt64Formatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UInt64Formatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::UInt64Formatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.UInt64Formatter..cctor
void VYaml::Serialization::UInt64Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UInt64Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "UInt64Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.NullableUInt64Formatter
#include "VYaml/Serialization/NullableUInt64Formatter.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.NullableUInt64Formatter Instance
::VYaml::Serialization::NullableUInt64Formatter* VYaml::Serialization::NullableUInt64Formatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableUInt64Formatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::NullableUInt64Formatter*>("VYaml.Serialization", "NullableUInt64Formatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.NullableUInt64Formatter Instance
void VYaml::Serialization::NullableUInt64Formatter::_set_Instance(::VYaml::Serialization::NullableUInt64Formatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableUInt64Formatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "NullableUInt64Formatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.NullableUInt64Formatter.Serialize
void VYaml::Serialization::NullableUInt64Formatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::Nullable_1<uint64_t> value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableUInt64Formatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableUInt64Formatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.NullableUInt64Formatter.Deserialize
::System::Nullable_1<uint64_t> VYaml::Serialization::NullableUInt64Formatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableUInt64Formatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::NullableUInt64Formatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<uint64_t>, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.NullableUInt64Formatter..cctor
void VYaml::Serialization::NullableUInt64Formatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::NullableUInt64Formatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "NullableUInt64Formatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.UriFormatter
#include "VYaml/Serialization/UriFormatter.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.UriFormatter Instance
::VYaml::Serialization::UriFormatter* VYaml::Serialization::UriFormatter::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UriFormatter::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::UriFormatter*>("VYaml.Serialization", "UriFormatter", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.UriFormatter Instance
void VYaml::Serialization::UriFormatter::_set_Instance(::VYaml::Serialization::UriFormatter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UriFormatter::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "UriFormatter", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.UriFormatter.Serialize
void VYaml::Serialization::UriFormatter::Serialize(ByRef<::VYaml::Emitter::Utf8YamlEmitter> emitter, ::System::Uri* value, ::VYaml::Serialization::YamlSerializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UriFormatter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::UriFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitter), value, context);
}
// Autogenerated method: VYaml.Serialization.UriFormatter.Deserialize
::System::Uri* VYaml::Serialization::UriFormatter::Deserialize(ByRef<::VYaml::Parser::YamlParser> parser, ::VYaml::Serialization::YamlDeserializationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UriFormatter::Deserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::UriFormatter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, byref(parser), context);
}
// Autogenerated method: VYaml.Serialization.UriFormatter..cctor
void VYaml::Serialization::UriFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::UriFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "UriFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlSerializerOptions
#include "VYaml/Serialization/YamlSerializerOptions.hpp"
// Including type: VYaml.Serialization.IYamlFormatterResolver
#include "VYaml/Serialization/IYamlFormatterResolver.hpp"
// Including type: VYaml.Emitter.YamlEmitOptions
#include "VYaml/Emitter/YamlEmitOptions.hpp"
// Including type: System.Buffers.ArrayBufferWriter`1
#include "System/Buffers/ArrayBufferWriter_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VYaml.Serialization.YamlSerializerOptions <Options>k__BackingField
[[deprecated("Use field access instead!")]] ::VYaml::Serialization::YamlSerializerOptions*& VYaml::Serialization::YamlSerializationContext::dyn_$Options$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializationContext::dyn_$Options$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Options>k__BackingField"))->offset;
  return *reinterpret_cast<::VYaml::Serialization::YamlSerializerOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VYaml.Serialization.IYamlFormatterResolver <Resolver>k__BackingField
[[deprecated("Use field access instead!")]] ::VYaml::Serialization::IYamlFormatterResolver*& VYaml::Serialization::YamlSerializationContext::dyn_$Resolver$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializationContext::dyn_$Resolver$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Resolver>k__BackingField"))->offset;
  return *reinterpret_cast<::VYaml::Serialization::IYamlFormatterResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VYaml.Emitter.YamlEmitOptions <EmitOptions>k__BackingField
[[deprecated("Use field access instead!")]] ::VYaml::Emitter::YamlEmitOptions*& VYaml::Serialization::YamlSerializationContext::dyn_$EmitOptions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializationContext::dyn_$EmitOptions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EmitOptions>k__BackingField"))->offset;
  return *reinterpret_cast<::VYaml::Emitter::YamlEmitOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] primitiveValueBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& VYaml::Serialization::YamlSerializationContext::dyn_primitiveValueBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializationContext::dyn_primitiveValueBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "primitiveValueBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Buffers.ArrayBufferWriter`1<System.Byte> arrayBufferWriter
[[deprecated("Use field access instead!")]] ::System::Buffers::ArrayBufferWriter_1<uint8_t>*& VYaml::Serialization::YamlSerializationContext::dyn_arrayBufferWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializationContext::dyn_arrayBufferWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayBufferWriter"))->offset;
  return *reinterpret_cast<::System::Buffers::ArrayBufferWriter_1<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Serialization.YamlSerializationContext.get_Options
::VYaml::Serialization::YamlSerializerOptions* VYaml::Serialization::YamlSerializationContext::get_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializationContext::get_Options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Serialization::YamlSerializerOptions*, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Serialization.YamlSerializationContext.set_Options
void VYaml::Serialization::YamlSerializationContext::set_Options(::VYaml::Serialization::YamlSerializerOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializationContext::set_Options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Serialization.YamlSerializationContext.get_Resolver
::VYaml::Serialization::IYamlFormatterResolver* VYaml::Serialization::YamlSerializationContext::get_Resolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializationContext::get_Resolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Resolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Serialization::IYamlFormatterResolver*, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Serialization.YamlSerializationContext.set_Resolver
void VYaml::Serialization::YamlSerializationContext::set_Resolver(::VYaml::Serialization::IYamlFormatterResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializationContext::set_Resolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Resolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Serialization.YamlSerializationContext.get_EmitOptions
::VYaml::Emitter::YamlEmitOptions* VYaml::Serialization::YamlSerializationContext::get_EmitOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializationContext::get_EmitOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EmitOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Emitter::YamlEmitOptions*, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Serialization.YamlSerializationContext.set_EmitOptions
void VYaml::Serialization::YamlSerializationContext::set_EmitOptions(::VYaml::Emitter::YamlEmitOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializationContext::set_EmitOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EmitOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Serialization.YamlSerializationContext.GetArrayBufferWriter
::System::Buffers::ArrayBufferWriter_1<uint8_t>* VYaml::Serialization::YamlSerializationContext::GetArrayBufferWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializationContext::GetArrayBufferWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArrayBufferWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Buffers::ArrayBufferWriter_1<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Serialization.YamlSerializationContext.Reset
void VYaml::Serialization::YamlSerializationContext::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializationContext::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Serialization.YamlSerializationContext.Dispose
void VYaml::Serialization::YamlSerializationContext::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializationContext::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Serialization::YamlSerializationContext*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Serialization.YamlSerializationContext.GetBuffer64
::ArrayW<uint8_t> VYaml::Serialization::YamlSerializationContext::GetBuffer64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializationContext::GetBuffer64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBuffer64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.IYamlFormatterResolver
#include "VYaml/Serialization/IYamlFormatterResolver.hpp"
// Including type: VYaml.Serialization.IYamlFormatter`1
#include "VYaml/Serialization/IYamlFormatter_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.YamlFormatterResolverExtensions
#include "VYaml/Serialization/YamlFormatterResolverExtensions.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: VYaml.Serialization.IYamlFormatterResolver
#include "VYaml/Serialization/IYamlFormatterResolver.hpp"
// Including type: VYaml.Serialization.IYamlFormatter
#include "VYaml/Serialization/IYamlFormatter.hpp"
// Including type: VYaml.Serialization.IYamlFormatter`1
#include "VYaml/Serialization/IYamlFormatter_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Func`2<VYaml.Serialization.IYamlFormatterResolver,VYaml.Serialization.IYamlFormatter>> FormatterGetters
::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Func_2<::VYaml::Serialization::IYamlFormatterResolver*, ::VYaml::Serialization::IYamlFormatter*>*>* VYaml::Serialization::YamlFormatterResolverExtensions::_get_FormatterGetters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlFormatterResolverExtensions::_get_FormatterGetters");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Func_2<::VYaml::Serialization::IYamlFormatterResolver*, ::VYaml::Serialization::IYamlFormatter*>*>*>("VYaml.Serialization", "YamlFormatterResolverExtensions", "FormatterGetters")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Func`2<VYaml.Serialization.IYamlFormatterResolver,VYaml.Serialization.IYamlFormatter>> FormatterGetters
void VYaml::Serialization::YamlFormatterResolverExtensions::_set_FormatterGetters(::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Func_2<::VYaml::Serialization::IYamlFormatterResolver*, ::VYaml::Serialization::IYamlFormatter*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlFormatterResolverExtensions::_set_FormatterGetters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "YamlFormatterResolverExtensions", "FormatterGetters", value));
}
// Autogenerated method: VYaml.Serialization.YamlFormatterResolverExtensions.Throw
void VYaml::Serialization::YamlFormatterResolverExtensions::Throw(::System::Type* t, ::VYaml::Serialization::IYamlFormatterResolver* resolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlFormatterResolverExtensions::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "YamlFormatterResolverExtensions", "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(resolver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, resolver);
}
// Autogenerated method: VYaml.Serialization.YamlFormatterResolverExtensions..cctor
void VYaml::Serialization::YamlFormatterResolverExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlFormatterResolverExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "YamlFormatterResolverExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VYaml.Serialization.BuiltinResolver
#include "VYaml/Serialization/BuiltinResolver.hpp"
// Including type: VYaml.Serialization.BuiltinResolver/FormatterCache`1
#include "VYaml/Serialization/BuiltinResolver_FormatterCache_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: VYaml.Serialization.IYamlFormatter`1
#include "VYaml/Serialization/IYamlFormatter_1.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.BuiltinResolver Instance
::VYaml::Serialization::BuiltinResolver* VYaml::Serialization::BuiltinResolver::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::BuiltinResolver::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::BuiltinResolver*>("VYaml.Serialization", "BuiltinResolver", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.BuiltinResolver Instance
void VYaml::Serialization::BuiltinResolver::_set_Instance(::VYaml::Serialization::BuiltinResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::BuiltinResolver::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "BuiltinResolver", "Instance", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Object> FormatterMap
::System::Collections::Generic::Dictionary_2<::System::Type*, ::Il2CppObject*>* VYaml::Serialization::BuiltinResolver::_get_FormatterMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::BuiltinResolver::_get_FormatterMap");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::Il2CppObject*>*>("VYaml.Serialization", "BuiltinResolver", "FormatterMap")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Object> FormatterMap
void VYaml::Serialization::BuiltinResolver::_set_FormatterMap(::System::Collections::Generic::Dictionary_2<::System::Type*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::BuiltinResolver::_set_FormatterMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "BuiltinResolver", "FormatterMap", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Generic.Dictionary`2<System.Type,System.Type> KnownGenericTypes
::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Type*>* VYaml::Serialization::BuiltinResolver::_get_KnownGenericTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::BuiltinResolver::_get_KnownGenericTypes");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Type*>*>("VYaml.Serialization", "BuiltinResolver", "KnownGenericTypes")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Generic.Dictionary`2<System.Type,System.Type> KnownGenericTypes
void VYaml::Serialization::BuiltinResolver::_set_KnownGenericTypes(::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::BuiltinResolver::_set_KnownGenericTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "BuiltinResolver", "KnownGenericTypes", value));
}
// Autogenerated method: VYaml.Serialization.BuiltinResolver.TryCreateGenericFormatter
::Il2CppObject* VYaml::Serialization::BuiltinResolver::TryCreateGenericFormatter(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::BuiltinResolver::TryCreateGenericFormatter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "BuiltinResolver", "TryCreateGenericFormatter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: VYaml.Serialization.BuiltinResolver.TryCreateGenericFormatterType
::System::Type* VYaml::Serialization::BuiltinResolver::TryCreateGenericFormatterType(::System::Type* type, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Type*>* knownTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::BuiltinResolver::TryCreateGenericFormatterType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "BuiltinResolver", "TryCreateGenericFormatterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(knownTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, knownTypes);
}
// Autogenerated method: VYaml.Serialization.BuiltinResolver..cctor
void VYaml::Serialization::BuiltinResolver::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::BuiltinResolver::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "BuiltinResolver", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VYaml.Serialization.CompositeResolver
#include "VYaml/Serialization/CompositeResolver.hpp"
// Including type: System.Collections.Concurrent.ConcurrentDictionary`2
#include "System/Collections/Concurrent/ConcurrentDictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: VYaml.Serialization.IYamlFormatter
#include "VYaml/Serialization/IYamlFormatter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: VYaml.Serialization.IYamlFormatter`1
#include "VYaml/Serialization/IYamlFormatter_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Concurrent.ConcurrentDictionary`2<System.Type,VYaml.Serialization.IYamlFormatter> formattersCache
[[deprecated("Use field access instead!")]] ::System::Collections::Concurrent::ConcurrentDictionary_2<::System::Type*, ::VYaml::Serialization::IYamlFormatter*>*& VYaml::Serialization::CompositeResolver::dyn_formattersCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::CompositeResolver::dyn_formattersCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "formattersCache"))->offset;
  return *reinterpret_cast<::System::Collections::Concurrent::ConcurrentDictionary_2<::System::Type*, ::VYaml::Serialization::IYamlFormatter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<VYaml.Serialization.IYamlFormatter> formatters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VYaml::Serialization::IYamlFormatter*>*& VYaml::Serialization::CompositeResolver::dyn_formatters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::CompositeResolver::dyn_formatters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "formatters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VYaml::Serialization::IYamlFormatter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<VYaml.Serialization.IYamlFormatterResolver> resolvers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VYaml::Serialization::IYamlFormatterResolver*>*& VYaml::Serialization::CompositeResolver::dyn_resolvers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::CompositeResolver::dyn_resolvers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolvers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VYaml::Serialization::IYamlFormatterResolver*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object gate
[[deprecated("Use field access instead!")]] ::Il2CppObject*& VYaml::Serialization::CompositeResolver::dyn_gate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::CompositeResolver::dyn_gate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gate"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Serialization.CompositeResolver.Create
::VYaml::Serialization::CompositeResolver* VYaml::Serialization::CompositeResolver::Create(::System::Collections::Generic::IEnumerable_1<::VYaml::Serialization::IYamlFormatter*>* formatters, ::System::Collections::Generic::IEnumerable_1<::VYaml::Serialization::IYamlFormatterResolver*>* resolvers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::CompositeResolver::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "CompositeResolver", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formatters), ::il2cpp_utils::ExtractType(resolvers)})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Serialization::CompositeResolver*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, formatters, resolvers);
}
// Autogenerated method: VYaml.Serialization.CompositeResolver.Create
::VYaml::Serialization::CompositeResolver* VYaml::Serialization::CompositeResolver::Create(::System::Collections::Generic::IEnumerable_1<::VYaml::Serialization::IYamlFormatter*>* formatters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::CompositeResolver::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "CompositeResolver", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formatters)})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Serialization::CompositeResolver*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, formatters);
}
// Autogenerated method: VYaml.Serialization.CompositeResolver.Create
::VYaml::Serialization::CompositeResolver* VYaml::Serialization::CompositeResolver::Create(::System::Collections::Generic::IEnumerable_1<::VYaml::Serialization::IYamlFormatterResolver*>* resolvers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::CompositeResolver::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "CompositeResolver", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resolvers)})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Serialization::CompositeResolver*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resolvers);
}
// Autogenerated method: VYaml.Serialization.CompositeResolver.AddFormatter
void VYaml::Serialization::CompositeResolver::AddFormatter(::VYaml::Serialization::IYamlFormatter* formatter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::CompositeResolver::AddFormatter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFormatter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formatter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, formatter);
}
// Autogenerated method: VYaml.Serialization.CompositeResolver.AddResolver
void VYaml::Serialization::CompositeResolver::AddResolver(::VYaml::Serialization::IYamlFormatterResolver* resolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::CompositeResolver::AddResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resolver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resolver);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.GeneratedResolver
#include "VYaml/Serialization/GeneratedResolver.hpp"
// Including type: VYaml.Serialization.GeneratedResolver/Check`1
#include "VYaml/Serialization/GeneratedResolver_Check_1.hpp"
// Including type: VYaml.Serialization.GeneratedResolver/Cache`1
#include "VYaml/Serialization/GeneratedResolver_Cache_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: VYaml.Serialization.IYamlFormatter`1
#include "VYaml/Serialization/IYamlFormatter_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.GeneratedResolver Instance
::VYaml::Serialization::GeneratedResolver* VYaml::Serialization::GeneratedResolver::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::GeneratedResolver::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::GeneratedResolver*>("VYaml.Serialization", "GeneratedResolver", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.GeneratedResolver Instance
void VYaml::Serialization::GeneratedResolver::_set_Instance(::VYaml::Serialization::GeneratedResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::GeneratedResolver::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "GeneratedResolver", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.GeneratedResolver.TryInvokeRegisterYamlFormatter
bool VYaml::Serialization::GeneratedResolver::TryInvokeRegisterYamlFormatter(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::GeneratedResolver::TryInvokeRegisterYamlFormatter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "GeneratedResolver", "TryInvokeRegisterYamlFormatter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: VYaml.Serialization.GeneratedResolver..cctor
void VYaml::Serialization::GeneratedResolver::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::GeneratedResolver::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "GeneratedResolver", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.PrimitiveObjectResolver
#include "VYaml/Serialization/PrimitiveObjectResolver.hpp"
// Including type: VYaml.Serialization.PrimitiveObjectResolver/FormatterCache`1
#include "VYaml/Serialization/PrimitiveObjectResolver_FormatterCache_1.hpp"
// Including type: VYaml.Serialization.IYamlFormatter`1
#include "VYaml/Serialization/IYamlFormatter_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.PrimitiveObjectResolver Instance
::VYaml::Serialization::PrimitiveObjectResolver* VYaml::Serialization::PrimitiveObjectResolver::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::PrimitiveObjectResolver::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::PrimitiveObjectResolver*>("VYaml.Serialization", "PrimitiveObjectResolver", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.PrimitiveObjectResolver Instance
void VYaml::Serialization::PrimitiveObjectResolver::_set_Instance(::VYaml::Serialization::PrimitiveObjectResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::PrimitiveObjectResolver::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "PrimitiveObjectResolver", "Instance", value));
}
// Autogenerated method: VYaml.Serialization.PrimitiveObjectResolver..cctor
void VYaml::Serialization::PrimitiveObjectResolver::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::PrimitiveObjectResolver::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "PrimitiveObjectResolver", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.StandardResolver
#include "VYaml/Serialization/StandardResolver.hpp"
// Including type: VYaml.Serialization.StandardResolver/FormatterCache`1
#include "VYaml/Serialization/StandardResolver_FormatterCache_1.hpp"
// Including type: VYaml.Serialization.IYamlFormatter`1
#include "VYaml/Serialization/IYamlFormatter_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.StandardResolver Instance
::VYaml::Serialization::StandardResolver* VYaml::Serialization::StandardResolver::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::StandardResolver::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::StandardResolver*>("VYaml.Serialization", "StandardResolver", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.StandardResolver Instance
void VYaml::Serialization::StandardResolver::_set_Instance(::VYaml::Serialization::StandardResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::StandardResolver::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "StandardResolver", "Instance", value));
}
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Serialization.IYamlFormatterResolver[] DefaultResolvers
::ArrayW<::VYaml::Serialization::IYamlFormatterResolver*> VYaml::Serialization::StandardResolver::_get_DefaultResolvers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::StandardResolver::_get_DefaultResolvers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::VYaml::Serialization::IYamlFormatterResolver*>>("VYaml.Serialization", "StandardResolver", "DefaultResolvers"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Serialization.IYamlFormatterResolver[] DefaultResolvers
void VYaml::Serialization::StandardResolver::_set_DefaultResolvers(::ArrayW<::VYaml::Serialization::IYamlFormatterResolver*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::StandardResolver::_set_DefaultResolvers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "StandardResolver", "DefaultResolvers", value));
}
// Autogenerated method: VYaml.Serialization.StandardResolver..cctor
void VYaml::Serialization::StandardResolver::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::StandardResolver::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "StandardResolver", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
// Including type: VYaml.Serialization.YamlSerializerOptions
#include "VYaml/Serialization/YamlSerializerOptions.hpp"
// Including type: VYaml.Serialization.IYamlFormatterResolver
#include "VYaml/Serialization/IYamlFormatterResolver.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: VYaml.Parser.Anchor
#include "VYaml/Parser/Anchor.hpp"
// Including type: VYaml.Serialization.IYamlFormatter`1
#include "VYaml/Serialization/IYamlFormatter_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VYaml.Serialization.YamlSerializerOptions <Options>k__BackingField
[[deprecated("Use field access instead!")]] ::VYaml::Serialization::YamlSerializerOptions*& VYaml::Serialization::YamlDeserializationContext::dyn_$Options$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlDeserializationContext::dyn_$Options$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Options>k__BackingField"))->offset;
  return *reinterpret_cast<::VYaml::Serialization::YamlSerializerOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VYaml.Serialization.IYamlFormatterResolver <Resolver>k__BackingField
[[deprecated("Use field access instead!")]] ::VYaml::Serialization::IYamlFormatterResolver*& VYaml::Serialization::YamlDeserializationContext::dyn_$Resolver$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlDeserializationContext::dyn_$Resolver$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Resolver>k__BackingField"))->offset;
  return *reinterpret_cast<::VYaml::Serialization::IYamlFormatterResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<VYaml.Parser.Anchor,System.Object> aliases
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::VYaml::Parser::Anchor*, ::Il2CppObject*>*& VYaml::Serialization::YamlDeserializationContext::dyn_aliases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlDeserializationContext::dyn_aliases");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aliases"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::VYaml::Parser::Anchor*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Serialization.YamlDeserializationContext.get_Options
::VYaml::Serialization::YamlSerializerOptions* VYaml::Serialization::YamlDeserializationContext::get_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlDeserializationContext::get_Options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Serialization::YamlSerializerOptions*, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Serialization.YamlDeserializationContext.set_Options
void VYaml::Serialization::YamlDeserializationContext::set_Options(::VYaml::Serialization::YamlSerializerOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlDeserializationContext::set_Options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Serialization.YamlDeserializationContext.get_Resolver
::VYaml::Serialization::IYamlFormatterResolver* VYaml::Serialization::YamlDeserializationContext::get_Resolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlDeserializationContext::get_Resolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Resolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Serialization::IYamlFormatterResolver*, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Serialization.YamlDeserializationContext.set_Resolver
void VYaml::Serialization::YamlDeserializationContext::set_Resolver(::VYaml::Serialization::IYamlFormatterResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlDeserializationContext::set_Resolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Resolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Serialization.YamlDeserializationContext.Reset
void VYaml::Serialization::YamlDeserializationContext::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlDeserializationContext::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Serialization.YamlDeserializationContext.RegisterAnchor
void VYaml::Serialization::YamlDeserializationContext::RegisterAnchor(::VYaml::Parser::Anchor* anchor, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlDeserializationContext::RegisterAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.YamlSerializerException
#include "VYaml/Serialization/YamlSerializerException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.YamlSerializer
#include "VYaml/Serialization/YamlSerializer.hpp"
// Including type: VYaml.Serialization.YamlSerializer/<DeserializeAsync>d__14`1
#include "VYaml/Serialization/YamlSerializer_-DeserializeAsync-d__14_1.hpp"
// Including type: VYaml.Serialization.YamlSerializer/<DeserializeMultipleDocumentsAsync>d__16`1
#include "VYaml/Serialization/YamlSerializer_-DeserializeMultipleDocumentsAsync-d__16_1.hpp"
// Including type: VYaml.Serialization.YamlDeserializationContext
#include "VYaml/Serialization/YamlDeserializationContext.hpp"
// Including type: VYaml.Serialization.YamlSerializationContext
#include "VYaml/Serialization/YamlSerializationContext.hpp"
// Including type: VYaml.Serialization.YamlSerializerOptions
#include "VYaml/Serialization/YamlSerializerOptions.hpp"
// Including type: System.Buffers.IBufferWriter`1
#include "System/Buffers/IBufferWriter_1.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private VYaml.Serialization.YamlDeserializationContext deserializationContext
::VYaml::Serialization::YamlDeserializationContext* VYaml::Serialization::YamlSerializer::_get_deserializationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializer::_get_deserializationContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::YamlDeserializationContext*>("VYaml.Serialization", "YamlSerializer", "deserializationContext"));
}
// Autogenerated static field setter
// Set static field: static private VYaml.Serialization.YamlDeserializationContext deserializationContext
void VYaml::Serialization::YamlSerializer::_set_deserializationContext(::VYaml::Serialization::YamlDeserializationContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializer::_set_deserializationContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "YamlSerializer", "deserializationContext", value));
}
// Autogenerated static field getter
// Get static field: static private VYaml.Serialization.YamlSerializationContext serializationContext
::VYaml::Serialization::YamlSerializationContext* VYaml::Serialization::YamlSerializer::_get_serializationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializer::_get_serializationContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::YamlSerializationContext*>("VYaml.Serialization", "YamlSerializer", "serializationContext"));
}
// Autogenerated static field setter
// Set static field: static private VYaml.Serialization.YamlSerializationContext serializationContext
void VYaml::Serialization::YamlSerializer::_set_serializationContext(::VYaml::Serialization::YamlSerializationContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializer::_set_serializationContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "YamlSerializer", "serializationContext", value));
}
// Autogenerated static field getter
// Get static field: static private VYaml.Serialization.YamlSerializerOptions defaultOptions
::VYaml::Serialization::YamlSerializerOptions* VYaml::Serialization::YamlSerializer::_get_defaultOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializer::_get_defaultOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Serialization::YamlSerializerOptions*>("VYaml.Serialization", "YamlSerializer", "defaultOptions"));
}
// Autogenerated static field setter
// Set static field: static private VYaml.Serialization.YamlSerializerOptions defaultOptions
void VYaml::Serialization::YamlSerializer::_set_defaultOptions(::VYaml::Serialization::YamlSerializerOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializer::_set_defaultOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Serialization", "YamlSerializer", "defaultOptions", value));
}
// Autogenerated method: VYaml.Serialization.YamlSerializer.GetThreadLocalDeserializationContext
::VYaml::Serialization::YamlDeserializationContext* VYaml::Serialization::YamlSerializer::GetThreadLocalDeserializationContext(::VYaml::Serialization::YamlSerializerOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializer::GetThreadLocalDeserializationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "YamlSerializer", "GetThreadLocalDeserializationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Serialization::YamlDeserializationContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: VYaml.Serialization.YamlSerializer.GetThreadLocalSerializationContext
::VYaml::Serialization::YamlSerializationContext* VYaml::Serialization::YamlSerializer::GetThreadLocalSerializationContext(::VYaml::Serialization::YamlSerializerOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializer::GetThreadLocalSerializationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "YamlSerializer", "GetThreadLocalSerializationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Serialization::YamlSerializationContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: VYaml.Serialization.YamlSerializer.get_DefaultOptions
::VYaml::Serialization::YamlSerializerOptions* VYaml::Serialization::YamlSerializer::get_DefaultOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializer::get_DefaultOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "YamlSerializer", "get_DefaultOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Serialization::YamlSerializerOptions*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VYaml.Serialization.YamlSerializer.set_DefaultOptions
void VYaml::Serialization::YamlSerializer::set_DefaultOptions(::VYaml::Serialization::YamlSerializerOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializer::set_DefaultOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "YamlSerializer", "set_DefaultOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Serialization.YamlSerializerOptions
#include "VYaml/Serialization/YamlSerializerOptions.hpp"
// Including type: VYaml.Serialization.IYamlFormatterResolver
#include "VYaml/Serialization/IYamlFormatterResolver.hpp"
// Including type: VYaml.Emitter.YamlEmitOptions
#include "VYaml/Emitter/YamlEmitOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VYaml.Serialization.IYamlFormatterResolver <Resolver>k__BackingField
[[deprecated("Use field access instead!")]] ::VYaml::Serialization::IYamlFormatterResolver*& VYaml::Serialization::YamlSerializerOptions::dyn_$Resolver$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializerOptions::dyn_$Resolver$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Resolver>k__BackingField"))->offset;
  return *reinterpret_cast<::VYaml::Serialization::IYamlFormatterResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VYaml.Emitter.YamlEmitOptions <EmitOptions>k__BackingField
[[deprecated("Use field access instead!")]] ::VYaml::Emitter::YamlEmitOptions*& VYaml::Serialization::YamlSerializerOptions::dyn_$EmitOptions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializerOptions::dyn_$EmitOptions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EmitOptions>k__BackingField"))->offset;
  return *reinterpret_cast<::VYaml::Emitter::YamlEmitOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <EnableAliasForDeserialization>k__BackingField
[[deprecated("Use field access instead!")]] bool& VYaml::Serialization::YamlSerializerOptions::dyn_$EnableAliasForDeserialization$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializerOptions::dyn_$EnableAliasForDeserialization$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EnableAliasForDeserialization>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Serialization.YamlSerializerOptions.get_Standard
::VYaml::Serialization::YamlSerializerOptions* VYaml::Serialization::YamlSerializerOptions::get_Standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializerOptions::get_Standard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Serialization", "YamlSerializerOptions", "get_Standard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Serialization::YamlSerializerOptions*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VYaml.Serialization.YamlSerializerOptions.get_Resolver
::VYaml::Serialization::IYamlFormatterResolver* VYaml::Serialization::YamlSerializerOptions::get_Resolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializerOptions::get_Resolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Resolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Serialization::IYamlFormatterResolver*, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Serialization.YamlSerializerOptions.set_Resolver
void VYaml::Serialization::YamlSerializerOptions::set_Resolver(::VYaml::Serialization::IYamlFormatterResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializerOptions::set_Resolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Resolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Serialization.YamlSerializerOptions.get_EmitOptions
::VYaml::Emitter::YamlEmitOptions* VYaml::Serialization::YamlSerializerOptions::get_EmitOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializerOptions::get_EmitOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EmitOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Emitter::YamlEmitOptions*, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Serialization.YamlSerializerOptions.set_EmitOptions
void VYaml::Serialization::YamlSerializerOptions::set_EmitOptions(::VYaml::Emitter::YamlEmitOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializerOptions::set_EmitOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EmitOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Serialization.YamlSerializerOptions.get_EnableAliasForDeserialization
bool VYaml::Serialization::YamlSerializerOptions::get_EnableAliasForDeserialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializerOptions::get_EnableAliasForDeserialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableAliasForDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Serialization.YamlSerializerOptions.set_EnableAliasForDeserialization
void VYaml::Serialization::YamlSerializerOptions::set_EnableAliasForDeserialization(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Serialization::YamlSerializerOptions::set_EnableAliasForDeserialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableAliasForDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Parser.ScalarPool
#include "VYaml/Parser/ScalarPool.hpp"
// Including type: System.Collections.Concurrent.ConcurrentQueue`1
#include "System/Collections/Concurrent/ConcurrentQueue_1.hpp"
// Including type: VYaml.Parser.Scalar
#include "VYaml/Parser/Scalar.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Parser.ScalarPool Shared
::VYaml::Parser::ScalarPool* VYaml::Parser::ScalarPool::_get_Shared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ScalarPool::_get_Shared");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ScalarPool*>("VYaml.Parser", "ScalarPool", "Shared"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Parser.ScalarPool Shared
void VYaml::Parser::ScalarPool::_set_Shared(::VYaml::Parser::ScalarPool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ScalarPool::_set_Shared");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ScalarPool", "Shared", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Concurrent.ConcurrentQueue`1<VYaml.Parser.Scalar> queue
[[deprecated("Use field access instead!")]] ::System::Collections::Concurrent::ConcurrentQueue_1<::VYaml::Parser::Scalar*>*& VYaml::Parser::ScalarPool::dyn_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ScalarPool::dyn_queue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queue"))->offset;
  return *reinterpret_cast<::System::Collections::Concurrent::ConcurrentQueue_1<::VYaml::Parser::Scalar*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Parser.ScalarPool.Rent
::VYaml::Parser::Scalar* VYaml::Parser::ScalarPool::Rent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ScalarPool::Rent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Parser::Scalar*, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.ScalarPool.Return
void VYaml::Parser::ScalarPool::Return(::VYaml::Parser::Scalar* scalar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ScalarPool::Return");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Return", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scalar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scalar);
}
// Autogenerated method: VYaml.Parser.ScalarPool..cctor
void VYaml::Parser::ScalarPool::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ScalarPool::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Parser", "ScalarPool", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VYaml.Parser.Scalar
#include "VYaml/Parser/Scalar.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
// Including type: VYaml.Internal.LineBreakState
#include "VYaml/Internal/LineBreakState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MinimumGrow
int VYaml::Parser::Scalar::_get_MinimumGrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::_get_MinimumGrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VYaml.Parser", "Scalar", "MinimumGrow"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MinimumGrow
void VYaml::Parser::Scalar::_set_MinimumGrow(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::_set_MinimumGrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "Scalar", "MinimumGrow", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GrowFactor
int VYaml::Parser::Scalar::_get_GrowFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::_get_GrowFactor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VYaml.Parser", "Scalar", "GrowFactor"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GrowFactor
void VYaml::Parser::Scalar::_set_GrowFactor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::_set_GrowFactor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "Scalar", "GrowFactor", value));
}
// Autogenerated static field getter
// Get static field: static public readonly VYaml.Parser.Scalar Null
::VYaml::Parser::Scalar* VYaml::Parser::Scalar::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::Scalar*>("VYaml.Parser", "Scalar", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly VYaml.Parser.Scalar Null
void VYaml::Parser::Scalar::_set_Null(::VYaml::Parser::Scalar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "Scalar", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Length>k__BackingField
[[deprecated("Use field access instead!")]] int& VYaml::Parser::Scalar::dyn_$Length$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::dyn_$Length$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Length>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& VYaml::Parser::Scalar::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Parser.Scalar.get_Length
int VYaml::Parser::Scalar::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Scalar.set_Length
void VYaml::Parser::Scalar::set_Length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::set_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Parser.Scalar.AsSpan
::System::Span_1<uint8_t> VYaml::Parser::Scalar::AsSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::AsSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Span_1<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Scalar.AsSpan
::System::Span_1<uint8_t> VYaml::Parser::Scalar::AsSpan(int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::AsSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Span_1<uint8_t>, false>(this, ___internal__method, start, length);
}
// Autogenerated method: VYaml.Parser.Scalar.AsUtf8
::System::ReadOnlySpan_1<uint8_t> VYaml::Parser::Scalar::AsUtf8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::AsUtf8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsUtf8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Scalar.Write
void VYaml::Parser::Scalar::Write(uint8_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code);
}
// Autogenerated method: VYaml.Parser.Scalar.Write
void VYaml::Parser::Scalar::Write(::VYaml::Internal::LineBreakState lineBreak) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineBreak)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineBreak);
}
// Autogenerated method: VYaml.Parser.Scalar.Write
void VYaml::Parser::Scalar::Write(::System::ReadOnlySpan_1<uint8_t> codes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, codes);
}
// Autogenerated method: VYaml.Parser.Scalar.WriteUnicodeCodepoint
void VYaml::Parser::Scalar::WriteUnicodeCodepoint(int codepoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::WriteUnicodeCodepoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUnicodeCodepoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codepoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, codepoint);
}
// Autogenerated method: VYaml.Parser.Scalar.Clear
void VYaml::Parser::Scalar::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Scalar.IsNull
bool VYaml::Parser::Scalar::IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::IsNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Scalar.TryGetBool
bool VYaml::Parser::Scalar::TryGetBool(ByRef<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::TryGetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: VYaml.Parser.Scalar.TryGetInt32
bool VYaml::Parser::Scalar::TryGetInt32(ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::TryGetInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: VYaml.Parser.Scalar.TryGetInt64
bool VYaml::Parser::Scalar::TryGetInt64(ByRef<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::TryGetInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: VYaml.Parser.Scalar.TryGetUInt32
bool VYaml::Parser::Scalar::TryGetUInt32(ByRef<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::TryGetUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: VYaml.Parser.Scalar.TryGetUInt64
bool VYaml::Parser::Scalar::TryGetUInt64(ByRef<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::TryGetUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: VYaml.Parser.Scalar.TryGetFloat
bool VYaml::Parser::Scalar::TryGetFloat(ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::TryGetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: VYaml.Parser.Scalar.TryGetDouble
bool VYaml::Parser::Scalar::TryGetDouble(ByRef<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::TryGetDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: VYaml.Parser.Scalar.SequenceEqual
bool VYaml::Parser::Scalar::SequenceEqual(::VYaml::Parser::Scalar* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::SequenceEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SequenceEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: VYaml.Parser.Scalar.SequenceEqual
bool VYaml::Parser::Scalar::SequenceEqual(::System::ReadOnlySpan_1<uint8_t> span) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::SequenceEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SequenceEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, span);
}
// Autogenerated method: VYaml.Parser.Scalar.Grow
void VYaml::Parser::Scalar::Grow(int sizeHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::Grow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Grow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizeHint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sizeHint);
}
// Autogenerated method: VYaml.Parser.Scalar.TryDetectHex
bool VYaml::Parser::Scalar::TryDetectHex(::System::ReadOnlySpan_1<uint8_t> span, ByRef<::System::ReadOnlySpan_1<uint8_t>> slice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::TryDetectHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Parser", "Scalar", "TryDetectHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractIndependentType<::System::ReadOnlySpan_1<uint8_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, byref(slice));
}
// Autogenerated method: VYaml.Parser.Scalar.TryDetectHexNegative
bool VYaml::Parser::Scalar::TryDetectHexNegative(::System::ReadOnlySpan_1<uint8_t> span, ByRef<::System::ReadOnlySpan_1<uint8_t>> slice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::TryDetectHexNegative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Parser", "Scalar", "TryDetectHexNegative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractIndependentType<::System::ReadOnlySpan_1<uint8_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, byref(slice));
}
// Autogenerated method: VYaml.Parser.Scalar.TryParseOctal
bool VYaml::Parser::Scalar::TryParseOctal(::System::ReadOnlySpan_1<uint8_t> span, ByRef<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::TryParseOctal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Parser", "Scalar", "TryParseOctal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span, byref(value));
}
// Autogenerated method: VYaml.Parser.Scalar.Grow
void VYaml::Parser::Scalar::Grow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::Grow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Grow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Scalar.SetCapacity
void VYaml::Parser::Scalar::SetCapacity(int newCapacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::SetCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newCapacity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newCapacity);
}
// Autogenerated method: VYaml.Parser.Scalar..cctor
void VYaml::Parser::Scalar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Parser", "Scalar", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VYaml.Parser.Scalar.ToString
::StringW VYaml::Parser::Scalar::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Scalar::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VYaml.Parser.Anchor
#include "VYaml/Parser/Anchor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VYaml::Parser::Anchor::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Anchor::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <Id>k__BackingField
[[deprecated("Use field access instead!")]] int& VYaml::Parser::Anchor::dyn_$Id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Anchor::dyn_$Id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Id>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Parser.Anchor.get_Name
::StringW VYaml::Parser::Anchor::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Anchor::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Anchor.get_Id
int VYaml::Parser::Anchor::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Anchor::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Anchor.Equals
bool VYaml::Parser::Anchor::Equals(::VYaml::Parser::Anchor* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Anchor::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VYaml::Parser::Anchor*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: VYaml.Parser.Anchor.Equals
bool VYaml::Parser::Anchor::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Anchor::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: VYaml.Parser.Anchor.GetHashCode
int VYaml::Parser::Anchor::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Anchor::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Anchor.ToString
::StringW VYaml::Parser::Anchor::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Anchor::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Parser.Marker
#include "VYaml/Parser/Marker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Position
[[deprecated("Use field access instead!")]] int& VYaml::Parser::Marker::dyn_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Marker::dyn_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Line
[[deprecated("Use field access instead!")]] int& VYaml::Parser::Marker::dyn_Line() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Marker::dyn_Line");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Line"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Col
[[deprecated("Use field access instead!")]] int& VYaml::Parser::Marker::dyn_Col() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Marker::dyn_Col");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Col"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Parser.Marker..ctor
// ABORTED elsewhere.  VYaml::Parser::Marker::Marker(int position, int line, int col)
// Autogenerated method: VYaml.Parser.Marker.ToString
::StringW VYaml::Parser::Marker::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Marker::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VYaml.Parser.Tag
#include "VYaml/Parser/Tag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Handle>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VYaml::Parser::Tag::dyn_$Handle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Tag::dyn_$Handle$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handle>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Suffix>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VYaml::Parser::Tag::dyn_$Suffix$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Tag::dyn_$Suffix$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Suffix>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Parser.Tag.get_Handle
::StringW VYaml::Parser::Tag::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Tag::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Tag.get_Suffix
::StringW VYaml::Parser::Tag::get_Suffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Tag::get_Suffix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Suffix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Tag.Equals
bool VYaml::Parser::Tag::Equals(::StringW tagString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Tag::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tagString)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tagString);
}
// Autogenerated method: VYaml.Parser.Tag.ToString
::StringW VYaml::Parser::Tag::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Tag::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Parser.Token
#include "VYaml/Parser/Token.hpp"
// Including type: VYaml.Parser.ITokenContent
#include "VYaml/Parser/ITokenContent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly VYaml.Parser.TokenType Type
[[deprecated("Use field access instead!")]] ::VYaml::Parser::TokenType& VYaml::Parser::Token::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Token::dyn_Type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::VYaml::Parser::TokenType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly VYaml.Parser.ITokenContent Content
[[deprecated("Use field access instead!")]] ::VYaml::Parser::ITokenContent*& VYaml::Parser::Token::dyn_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Token::dyn_Content");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Content"))->offset;
  return *reinterpret_cast<::VYaml::Parser::ITokenContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Parser.Token..ctor
// ABORTED elsewhere.  VYaml::Parser::Token::Token(::VYaml::Parser::TokenType type, ::VYaml::Parser::ITokenContent* content)
// Autogenerated method: VYaml.Parser.Token.ToString
::StringW VYaml::Parser::Token::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Token::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Parser.TokenType
#include "VYaml/Parser/TokenType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType None
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "None"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType None
void VYaml::Parser::TokenType::_set_None(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType StreamStart
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_StreamStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_StreamStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "StreamStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType StreamStart
void VYaml::Parser::TokenType::_set_StreamStart(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_StreamStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "StreamStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType StreamEnd
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_StreamEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_StreamEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "StreamEnd"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType StreamEnd
void VYaml::Parser::TokenType::_set_StreamEnd(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_StreamEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "StreamEnd", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType VersionDirective
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_VersionDirective() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_VersionDirective");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "VersionDirective"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType VersionDirective
void VYaml::Parser::TokenType::_set_VersionDirective(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_VersionDirective");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "VersionDirective", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType TagDirective
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_TagDirective() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_TagDirective");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "TagDirective"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType TagDirective
void VYaml::Parser::TokenType::_set_TagDirective(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_TagDirective");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "TagDirective", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType DocumentStart
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_DocumentStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_DocumentStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "DocumentStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType DocumentStart
void VYaml::Parser::TokenType::_set_DocumentStart(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_DocumentStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "DocumentStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType DocumentEnd
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_DocumentEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_DocumentEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "DocumentEnd"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType DocumentEnd
void VYaml::Parser::TokenType::_set_DocumentEnd(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_DocumentEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "DocumentEnd", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType BlockSequenceStart
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_BlockSequenceStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_BlockSequenceStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "BlockSequenceStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType BlockSequenceStart
void VYaml::Parser::TokenType::_set_BlockSequenceStart(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_BlockSequenceStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "BlockSequenceStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType BlockMappingStart
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_BlockMappingStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_BlockMappingStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "BlockMappingStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType BlockMappingStart
void VYaml::Parser::TokenType::_set_BlockMappingStart(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_BlockMappingStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "BlockMappingStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType BlockEnd
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_BlockEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_BlockEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "BlockEnd"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType BlockEnd
void VYaml::Parser::TokenType::_set_BlockEnd(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_BlockEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "BlockEnd", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType FlowSequenceStart
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_FlowSequenceStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_FlowSequenceStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "FlowSequenceStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType FlowSequenceStart
void VYaml::Parser::TokenType::_set_FlowSequenceStart(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_FlowSequenceStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "FlowSequenceStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType FlowSequenceEnd
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_FlowSequenceEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_FlowSequenceEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "FlowSequenceEnd"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType FlowSequenceEnd
void VYaml::Parser::TokenType::_set_FlowSequenceEnd(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_FlowSequenceEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "FlowSequenceEnd", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType FlowMappingStart
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_FlowMappingStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_FlowMappingStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "FlowMappingStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType FlowMappingStart
void VYaml::Parser::TokenType::_set_FlowMappingStart(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_FlowMappingStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "FlowMappingStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType FlowMappingEnd
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_FlowMappingEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_FlowMappingEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "FlowMappingEnd"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType FlowMappingEnd
void VYaml::Parser::TokenType::_set_FlowMappingEnd(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_FlowMappingEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "FlowMappingEnd", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType BlockEntryStart
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_BlockEntryStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_BlockEntryStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "BlockEntryStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType BlockEntryStart
void VYaml::Parser::TokenType::_set_BlockEntryStart(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_BlockEntryStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "BlockEntryStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType FlowEntryStart
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_FlowEntryStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_FlowEntryStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "FlowEntryStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType FlowEntryStart
void VYaml::Parser::TokenType::_set_FlowEntryStart(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_FlowEntryStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "FlowEntryStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType KeyStart
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_KeyStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_KeyStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "KeyStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType KeyStart
void VYaml::Parser::TokenType::_set_KeyStart(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_KeyStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "KeyStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType ValueStart
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_ValueStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_ValueStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "ValueStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType ValueStart
void VYaml::Parser::TokenType::_set_ValueStart(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_ValueStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "ValueStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType Alias
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_Alias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_Alias");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "Alias"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType Alias
void VYaml::Parser::TokenType::_set_Alias(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_Alias");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "Alias", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType Anchor
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_Anchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_Anchor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "Anchor"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType Anchor
void VYaml::Parser::TokenType::_set_Anchor(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_Anchor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "Anchor", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType Tag
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_Tag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "Tag"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType Tag
void VYaml::Parser::TokenType::_set_Tag(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_Tag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "Tag", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType PlainScalar
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_PlainScalar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_PlainScalar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "PlainScalar"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType PlainScalar
void VYaml::Parser::TokenType::_set_PlainScalar(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_PlainScalar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "PlainScalar", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType SingleQuotedScaler
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_SingleQuotedScaler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_SingleQuotedScaler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "SingleQuotedScaler"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType SingleQuotedScaler
void VYaml::Parser::TokenType::_set_SingleQuotedScaler(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_SingleQuotedScaler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "SingleQuotedScaler", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType DoubleQuotedScaler
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_DoubleQuotedScaler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_DoubleQuotedScaler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "DoubleQuotedScaler"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType DoubleQuotedScaler
void VYaml::Parser::TokenType::_set_DoubleQuotedScaler(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_DoubleQuotedScaler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "DoubleQuotedScaler", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType LiteralScalar
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_LiteralScalar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_LiteralScalar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "LiteralScalar"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType LiteralScalar
void VYaml::Parser::TokenType::_set_LiteralScalar(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_LiteralScalar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "LiteralScalar", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.TokenType FoldedScalar
::VYaml::Parser::TokenType VYaml::Parser::TokenType::_get_FoldedScalar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_get_FoldedScalar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::TokenType>("VYaml.Parser", "TokenType", "FoldedScalar"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.TokenType FoldedScalar
void VYaml::Parser::TokenType::_set_FoldedScalar(::VYaml::Parser::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::_set_FoldedScalar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "TokenType", "FoldedScalar", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& VYaml::Parser::TokenType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::TokenType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Parser.YamlTokenizerException
#include "VYaml/Parser/YamlTokenizerException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Parser.Utf8YamlTokenizer
#include "VYaml/Parser/Utf8YamlTokenizer.hpp"
// Including type: VYaml.Internal.InsertionQueue`1
#include "VYaml/Internal/InsertionQueue_1.hpp"
// Including type: VYaml.Internal.ExpandBuffer`1
#include "VYaml/Internal/ExpandBuffer_1.hpp"
// Including type: VYaml.Parser.ITokenContent
#include "VYaml/Parser/ITokenContent.hpp"
// Including type: VYaml.Parser.Scalar
#include "VYaml/Parser/Scalar.hpp"
// Including type: VYaml.Internal.LineBreakState
#include "VYaml/Internal/LineBreakState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private VYaml.Internal.InsertionQueue`1<VYaml.Parser.Token> tokensBufferStatic
::VYaml::Internal::InsertionQueue_1<::VYaml::Parser::Token>* VYaml::Parser::Utf8YamlTokenizer::_get_tokensBufferStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::_get_tokensBufferStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Internal::InsertionQueue_1<::VYaml::Parser::Token>*>("VYaml.Parser", "Utf8YamlTokenizer", "tokensBufferStatic"));
}
// Autogenerated static field setter
// Set static field: static private VYaml.Internal.InsertionQueue`1<VYaml.Parser.Token> tokensBufferStatic
void VYaml::Parser::Utf8YamlTokenizer::_set_tokensBufferStatic(::VYaml::Internal::InsertionQueue_1<::VYaml::Parser::Token>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::_set_tokensBufferStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "Utf8YamlTokenizer", "tokensBufferStatic", value));
}
// Autogenerated static field getter
// Get static field: static private VYaml.Internal.ExpandBuffer`1<VYaml.Parser.SimpleKeyState> simpleKeyBufferStatic
::VYaml::Internal::ExpandBuffer_1<::VYaml::Parser::SimpleKeyState>* VYaml::Parser::Utf8YamlTokenizer::_get_simpleKeyBufferStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::_get_simpleKeyBufferStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Internal::ExpandBuffer_1<::VYaml::Parser::SimpleKeyState>*>("VYaml.Parser", "Utf8YamlTokenizer", "simpleKeyBufferStatic"));
}
// Autogenerated static field setter
// Set static field: static private VYaml.Internal.ExpandBuffer`1<VYaml.Parser.SimpleKeyState> simpleKeyBufferStatic
void VYaml::Parser::Utf8YamlTokenizer::_set_simpleKeyBufferStatic(::VYaml::Internal::ExpandBuffer_1<::VYaml::Parser::SimpleKeyState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::_set_simpleKeyBufferStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "Utf8YamlTokenizer", "simpleKeyBufferStatic", value));
}
// Autogenerated static field getter
// Get static field: static private VYaml.Internal.ExpandBuffer`1<System.Int32> indentsBufferStatic
::VYaml::Internal::ExpandBuffer_1<int>* VYaml::Parser::Utf8YamlTokenizer::_get_indentsBufferStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::_get_indentsBufferStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Internal::ExpandBuffer_1<int>*>("VYaml.Parser", "Utf8YamlTokenizer", "indentsBufferStatic"));
}
// Autogenerated static field setter
// Set static field: static private VYaml.Internal.ExpandBuffer`1<System.Int32> indentsBufferStatic
void VYaml::Parser::Utf8YamlTokenizer::_set_indentsBufferStatic(::VYaml::Internal::ExpandBuffer_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::_set_indentsBufferStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "Utf8YamlTokenizer", "indentsBufferStatic", value));
}
// Autogenerated static field getter
// Get static field: static private VYaml.Internal.ExpandBuffer`1<System.Byte> lineBreaksBufferStatic
::VYaml::Internal::ExpandBuffer_1<uint8_t>* VYaml::Parser::Utf8YamlTokenizer::_get_lineBreaksBufferStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::_get_lineBreaksBufferStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Internal::ExpandBuffer_1<uint8_t>*>("VYaml.Parser", "Utf8YamlTokenizer", "lineBreaksBufferStatic"));
}
// Autogenerated static field setter
// Set static field: static private VYaml.Internal.ExpandBuffer`1<System.Byte> lineBreaksBufferStatic
void VYaml::Parser::Utf8YamlTokenizer::_set_lineBreaksBufferStatic(::VYaml::Internal::ExpandBuffer_1<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::_set_lineBreaksBufferStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "Utf8YamlTokenizer", "lineBreaksBufferStatic", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Buffers.SequenceReader`1<System.Byte> reader
[[deprecated("Use field access instead!")]] ::System::Buffers::SequenceReader_1<uint8_t>& VYaml::Parser::Utf8YamlTokenizer::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::dyn_reader");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::Buffers::SequenceReader_1<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VYaml.Parser.Marker mark
[[deprecated("Use field access instead!")]] ::VYaml::Parser::Marker& VYaml::Parser::Utf8YamlTokenizer::dyn_mark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::dyn_mark");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mark"))->offset;
  return *reinterpret_cast<::VYaml::Parser::Marker*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VYaml.Parser.Token currentToken
[[deprecated("Use field access instead!")]] ::VYaml::Parser::Token& VYaml::Parser::Utf8YamlTokenizer::dyn_currentToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::dyn_currentToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentToken"))->offset;
  return *reinterpret_cast<::VYaml::Parser::Token*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean streamStartProduced
[[deprecated("Use field access instead!")]] bool& VYaml::Parser::Utf8YamlTokenizer::dyn_streamStartProduced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::dyn_streamStartProduced");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "streamStartProduced"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean streamEndProduced
[[deprecated("Use field access instead!")]] bool& VYaml::Parser::Utf8YamlTokenizer::dyn_streamEndProduced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::dyn_streamEndProduced");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "streamEndProduced"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte currentCode
[[deprecated("Use field access instead!")]] uint8_t& VYaml::Parser::Utf8YamlTokenizer::dyn_currentCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::dyn_currentCode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCode"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 indent
[[deprecated("Use field access instead!")]] int& VYaml::Parser::Utf8YamlTokenizer::dyn_indent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::dyn_indent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indent"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean simpleKeyAllowed
[[deprecated("Use field access instead!")]] bool& VYaml::Parser::Utf8YamlTokenizer::dyn_simpleKeyAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::dyn_simpleKeyAllowed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simpleKeyAllowed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 adjacentValueAllowedAt
[[deprecated("Use field access instead!")]] int& VYaml::Parser::Utf8YamlTokenizer::dyn_adjacentValueAllowedAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::dyn_adjacentValueAllowedAt");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "adjacentValueAllowedAt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 flowLevel
[[deprecated("Use field access instead!")]] int& VYaml::Parser::Utf8YamlTokenizer::dyn_flowLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::dyn_flowLevel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flowLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tokensParsed
[[deprecated("Use field access instead!")]] int& VYaml::Parser::Utf8YamlTokenizer::dyn_tokensParsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::dyn_tokensParsed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokensParsed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean tokenAvailable
[[deprecated("Use field access instead!")]] bool& VYaml::Parser::Utf8YamlTokenizer::dyn_tokenAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::dyn_tokenAvailable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokenAvailable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VYaml.Internal.InsertionQueue`1<VYaml.Parser.Token> tokens
[[deprecated("Use field access instead!")]] ::VYaml::Internal::InsertionQueue_1<::VYaml::Parser::Token>*& VYaml::Parser::Utf8YamlTokenizer::dyn_tokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::dyn_tokens");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokens"))->offset;
  return *reinterpret_cast<::VYaml::Internal::InsertionQueue_1<::VYaml::Parser::Token>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VYaml.Internal.ExpandBuffer`1<VYaml.Parser.SimpleKeyState> simpleKeyCandidates
[[deprecated("Use field access instead!")]] ::VYaml::Internal::ExpandBuffer_1<::VYaml::Parser::SimpleKeyState>*& VYaml::Parser::Utf8YamlTokenizer::dyn_simpleKeyCandidates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::dyn_simpleKeyCandidates");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simpleKeyCandidates"))->offset;
  return *reinterpret_cast<::VYaml::Internal::ExpandBuffer_1<::VYaml::Parser::SimpleKeyState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VYaml.Internal.ExpandBuffer`1<System.Int32> indents
[[deprecated("Use field access instead!")]] ::VYaml::Internal::ExpandBuffer_1<int>*& VYaml::Parser::Utf8YamlTokenizer::dyn_indents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::dyn_indents");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indents"))->offset;
  return *reinterpret_cast<::VYaml::Internal::ExpandBuffer_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.get_CurrentTokenType
::VYaml::Parser::TokenType VYaml::Parser::Utf8YamlTokenizer::get_CurrentTokenType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::get_CurrentTokenType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CurrentTokenType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Parser::TokenType, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.get_CurrentMark
::VYaml::Parser::Marker VYaml::Parser::Utf8YamlTokenizer::get_CurrentMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::get_CurrentMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CurrentMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Parser::Marker, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer..ctor
VYaml::Parser::Utf8YamlTokenizer::Utf8YamlTokenizer(::System::Buffers::ReadOnlySequence_1<uint8_t> sequence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequence)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sequence);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.Read
bool VYaml::Parser::Utf8YamlTokenizer::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.TrySkipUnityStrippedSymbol
bool VYaml::Parser::Utf8YamlTokenizer::TrySkipUnityStrippedSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::TrySkipUnityStrippedSymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrySkipUnityStrippedSymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeMoreTokens
void VYaml::Parser::Utf8YamlTokenizer::ConsumeMoreTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeMoreTokens");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeMoreTokens", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeNextToken
void VYaml::Parser::Utf8YamlTokenizer::ConsumeNextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeNextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeNextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeStreamStart
void VYaml::Parser::Utf8YamlTokenizer::ConsumeStreamStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeStreamStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeStreamStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeStreamEnd
void VYaml::Parser::Utf8YamlTokenizer::ConsumeStreamEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeStreamEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeStreamEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeBom
void VYaml::Parser::Utf8YamlTokenizer::ConsumeBom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeBom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeBom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeDirective
void VYaml::Parser::Utf8YamlTokenizer::ConsumeDirective() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeDirective");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeDirective", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeDirectiveName
void VYaml::Parser::Utf8YamlTokenizer::ConsumeDirectiveName(::VYaml::Parser::Scalar* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeDirectiveName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeDirectiveName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeVersionDirectiveValue
void VYaml::Parser::Utf8YamlTokenizer::ConsumeVersionDirectiveValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeVersionDirectiveValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeVersionDirectiveValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeVersionDirectiveNumber
int VYaml::Parser::Utf8YamlTokenizer::ConsumeVersionDirectiveNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeVersionDirectiveNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeVersionDirectiveNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeTagDirectiveValue
void VYaml::Parser::Utf8YamlTokenizer::ConsumeTagDirectiveValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeTagDirectiveValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeTagDirectiveValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeDocumentIndicator
void VYaml::Parser::Utf8YamlTokenizer::ConsumeDocumentIndicator(::VYaml::Parser::TokenType tokenType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeDocumentIndicator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeDocumentIndicator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tokenType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tokenType);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeFlowCollectionStart
void VYaml::Parser::Utf8YamlTokenizer::ConsumeFlowCollectionStart(::VYaml::Parser::TokenType tokenType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeFlowCollectionStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeFlowCollectionStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tokenType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tokenType);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeFlowCollectionEnd
void VYaml::Parser::Utf8YamlTokenizer::ConsumeFlowCollectionEnd(::VYaml::Parser::TokenType tokenType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeFlowCollectionEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeFlowCollectionEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tokenType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tokenType);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeFlowEntryStart
void VYaml::Parser::Utf8YamlTokenizer::ConsumeFlowEntryStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeFlowEntryStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeFlowEntryStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeBlockEntry
void VYaml::Parser::Utf8YamlTokenizer::ConsumeBlockEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeBlockEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeBlockEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeComplexKeyStart
void VYaml::Parser::Utf8YamlTokenizer::ConsumeComplexKeyStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeComplexKeyStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeComplexKeyStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeValueStart
void VYaml::Parser::Utf8YamlTokenizer::ConsumeValueStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeValueStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeValueStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeAnchor
void VYaml::Parser::Utf8YamlTokenizer::ConsumeAnchor(bool alias) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alias)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alias);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeTag
void VYaml::Parser::Utf8YamlTokenizer::ConsumeTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeTagHandle
void VYaml::Parser::Utf8YamlTokenizer::ConsumeTagHandle(bool directive, ::VYaml::Parser::Scalar* buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeTagHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeTagHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directive), ::il2cpp_utils::ExtractType(buf)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, directive, buf);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeTagPrefix
void VYaml::Parser::Utf8YamlTokenizer::ConsumeTagPrefix(::VYaml::Parser::Scalar* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeTagPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeTagPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.TryConsumeUriChar
bool VYaml::Parser::Utf8YamlTokenizer::TryConsumeUriChar(::VYaml::Parser::Scalar* scalar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::TryConsumeUriChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryConsumeUriChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scalar)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, scalar);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.TryConsumeTagChar
bool VYaml::Parser::Utf8YamlTokenizer::TryConsumeTagChar(::VYaml::Parser::Scalar* scalar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::TryConsumeTagChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryConsumeTagChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scalar)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, scalar);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeUriEscapes
int VYaml::Parser::Utf8YamlTokenizer::ConsumeUriEscapes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeUriEscapes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeUriEscapes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeBlockScaler
void VYaml::Parser::Utf8YamlTokenizer::ConsumeBlockScaler(bool literal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeBlockScaler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeBlockScaler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(literal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, literal);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeBlockScalarBreaks
void VYaml::Parser::Utf8YamlTokenizer::ConsumeBlockScalarBreaks(ByRef<int> blockIndent, ByRef<::VYaml::Internal::ExpandBuffer_1<uint8_t>*> blockLineBreaks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeBlockScalarBreaks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeBlockScalarBreaks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blockIndent), ::il2cpp_utils::ExtractType(blockLineBreaks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(blockIndent), byref(blockLineBreaks));
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeFlowScaler
void VYaml::Parser::Utf8YamlTokenizer::ConsumeFlowScaler(bool singleQuote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeFlowScaler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeFlowScaler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(singleQuote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, singleQuote);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumePlainScalar
void VYaml::Parser::Utf8YamlTokenizer::ConsumePlainScalar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumePlainScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumePlainScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.SkipToNextToken
void VYaml::Parser::Utf8YamlTokenizer::SkipToNextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::SkipToNextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SkipToNextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.Advance
void VYaml::Parser::Utf8YamlTokenizer::Advance(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::Advance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Advance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.ConsumeLineBreaks
::VYaml::Internal::LineBreakState VYaml::Parser::Utf8YamlTokenizer::ConsumeLineBreaks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::ConsumeLineBreaks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConsumeLineBreaks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Internal::LineBreakState, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.StaleSimpleKeyCandidates
void VYaml::Parser::Utf8YamlTokenizer::StaleSimpleKeyCandidates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::StaleSimpleKeyCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "StaleSimpleKeyCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.SaveSimpleKeyCandidate
void VYaml::Parser::Utf8YamlTokenizer::SaveSimpleKeyCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::SaveSimpleKeyCandidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SaveSimpleKeyCandidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.RemoveSimpleKeyCandidate
void VYaml::Parser::Utf8YamlTokenizer::RemoveSimpleKeyCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::RemoveSimpleKeyCandidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RemoveSimpleKeyCandidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.RollIndent
void VYaml::Parser::Utf8YamlTokenizer::RollIndent(int colTo, ByRef<::VYaml::Parser::Token> nextToken, int insertNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::RollIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RollIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colTo), ::il2cpp_utils::ExtractType(nextToken), ::il2cpp_utils::ExtractType(insertNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colTo, byref(nextToken), insertNumber);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.UnrollIndent
void VYaml::Parser::Utf8YamlTokenizer::UnrollIndent(int col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::UnrollIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UnrollIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.IncreaseFlowLevel
void VYaml::Parser::Utf8YamlTokenizer::IncreaseFlowLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::IncreaseFlowLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IncreaseFlowLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.DecreaseFlowLevel
void VYaml::Parser::Utf8YamlTokenizer::DecreaseFlowLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::DecreaseFlowLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "DecreaseFlowLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.IsEmptyNext
bool VYaml::Parser::Utf8YamlTokenizer::IsEmptyNext(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::IsEmptyNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsEmptyNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, offset);
}
// Autogenerated method: VYaml.Parser.Utf8YamlTokenizer.TryPeek
bool VYaml::Parser::Utf8YamlTokenizer::TryPeek(int64_t offset, ByRef<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::Utf8YamlTokenizer::TryPeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryPeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractIndependentType<uint8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, offset, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Parser.VersionDirective
#include "VYaml/Parser/VersionDirective.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Major
[[deprecated("Use field access instead!")]] int& VYaml::Parser::VersionDirective::dyn_Major() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::VersionDirective::dyn_Major");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Major"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Minor
[[deprecated("Use field access instead!")]] int& VYaml::Parser::VersionDirective::dyn_Minor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::VersionDirective::dyn_Minor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Minor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Parser.VersionDirective..ctor
// ABORTED elsewhere.  VYaml::Parser::VersionDirective::VersionDirective(int major, int minor)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Parser.YamlParserException
#include "VYaml/Parser/YamlParserException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VYaml.Parser.YamlParserException.Throw
void VYaml::Parser::YamlParserException::Throw(ByRef<::VYaml::Parser::Marker> marker, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParserException::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Parser", "YamlParserException", "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(marker), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(marker), message);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Parser.ParseEventType
#include "VYaml/Parser/ParseEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseEventType Nothing
::VYaml::Parser::ParseEventType VYaml::Parser::ParseEventType::_get_Nothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_get_Nothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseEventType>("VYaml.Parser", "ParseEventType", "Nothing"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseEventType Nothing
void VYaml::Parser::ParseEventType::_set_Nothing(::VYaml::Parser::ParseEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_set_Nothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseEventType", "Nothing", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseEventType StreamStart
::VYaml::Parser::ParseEventType VYaml::Parser::ParseEventType::_get_StreamStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_get_StreamStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseEventType>("VYaml.Parser", "ParseEventType", "StreamStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseEventType StreamStart
void VYaml::Parser::ParseEventType::_set_StreamStart(::VYaml::Parser::ParseEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_set_StreamStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseEventType", "StreamStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseEventType StreamEnd
::VYaml::Parser::ParseEventType VYaml::Parser::ParseEventType::_get_StreamEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_get_StreamEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseEventType>("VYaml.Parser", "ParseEventType", "StreamEnd"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseEventType StreamEnd
void VYaml::Parser::ParseEventType::_set_StreamEnd(::VYaml::Parser::ParseEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_set_StreamEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseEventType", "StreamEnd", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseEventType DocumentStart
::VYaml::Parser::ParseEventType VYaml::Parser::ParseEventType::_get_DocumentStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_get_DocumentStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseEventType>("VYaml.Parser", "ParseEventType", "DocumentStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseEventType DocumentStart
void VYaml::Parser::ParseEventType::_set_DocumentStart(::VYaml::Parser::ParseEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_set_DocumentStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseEventType", "DocumentStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseEventType DocumentEnd
::VYaml::Parser::ParseEventType VYaml::Parser::ParseEventType::_get_DocumentEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_get_DocumentEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseEventType>("VYaml.Parser", "ParseEventType", "DocumentEnd"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseEventType DocumentEnd
void VYaml::Parser::ParseEventType::_set_DocumentEnd(::VYaml::Parser::ParseEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_set_DocumentEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseEventType", "DocumentEnd", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseEventType Alias
::VYaml::Parser::ParseEventType VYaml::Parser::ParseEventType::_get_Alias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_get_Alias");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseEventType>("VYaml.Parser", "ParseEventType", "Alias"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseEventType Alias
void VYaml::Parser::ParseEventType::_set_Alias(::VYaml::Parser::ParseEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_set_Alias");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseEventType", "Alias", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseEventType Scalar
::VYaml::Parser::ParseEventType VYaml::Parser::ParseEventType::_get_Scalar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_get_Scalar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseEventType>("VYaml.Parser", "ParseEventType", "Scalar"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseEventType Scalar
void VYaml::Parser::ParseEventType::_set_Scalar(::VYaml::Parser::ParseEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_set_Scalar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseEventType", "Scalar", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseEventType SequenceStart
::VYaml::Parser::ParseEventType VYaml::Parser::ParseEventType::_get_SequenceStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_get_SequenceStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseEventType>("VYaml.Parser", "ParseEventType", "SequenceStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseEventType SequenceStart
void VYaml::Parser::ParseEventType::_set_SequenceStart(::VYaml::Parser::ParseEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_set_SequenceStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseEventType", "SequenceStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseEventType SequenceEnd
::VYaml::Parser::ParseEventType VYaml::Parser::ParseEventType::_get_SequenceEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_get_SequenceEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseEventType>("VYaml.Parser", "ParseEventType", "SequenceEnd"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseEventType SequenceEnd
void VYaml::Parser::ParseEventType::_set_SequenceEnd(::VYaml::Parser::ParseEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_set_SequenceEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseEventType", "SequenceEnd", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseEventType MappingStart
::VYaml::Parser::ParseEventType VYaml::Parser::ParseEventType::_get_MappingStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_get_MappingStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseEventType>("VYaml.Parser", "ParseEventType", "MappingStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseEventType MappingStart
void VYaml::Parser::ParseEventType::_set_MappingStart(::VYaml::Parser::ParseEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_set_MappingStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseEventType", "MappingStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseEventType MappingEnd
::VYaml::Parser::ParseEventType VYaml::Parser::ParseEventType::_get_MappingEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_get_MappingEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseEventType>("VYaml.Parser", "ParseEventType", "MappingEnd"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseEventType MappingEnd
void VYaml::Parser::ParseEventType::_set_MappingEnd(::VYaml::Parser::ParseEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::_set_MappingEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseEventType", "MappingEnd", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& VYaml::Parser::ParseEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Parser.ParseState
#include "VYaml/Parser/ParseState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState StreamStart
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_StreamStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_StreamStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "StreamStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState StreamStart
void VYaml::Parser::ParseState::_set_StreamStart(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_StreamStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "StreamStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState ImplicitDocumentStart
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_ImplicitDocumentStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_ImplicitDocumentStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "ImplicitDocumentStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState ImplicitDocumentStart
void VYaml::Parser::ParseState::_set_ImplicitDocumentStart(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_ImplicitDocumentStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "ImplicitDocumentStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState DocumentStart
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_DocumentStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_DocumentStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "DocumentStart"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState DocumentStart
void VYaml::Parser::ParseState::_set_DocumentStart(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_DocumentStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "DocumentStart", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState DocumentContent
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_DocumentContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_DocumentContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "DocumentContent"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState DocumentContent
void VYaml::Parser::ParseState::_set_DocumentContent(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_DocumentContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "DocumentContent", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState DocumentEnd
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_DocumentEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_DocumentEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "DocumentEnd"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState DocumentEnd
void VYaml::Parser::ParseState::_set_DocumentEnd(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_DocumentEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "DocumentEnd", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState BlockNode
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_BlockNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_BlockNode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "BlockNode"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState BlockNode
void VYaml::Parser::ParseState::_set_BlockNode(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_BlockNode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "BlockNode", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState BlockSequenceFirstEntry
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_BlockSequenceFirstEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_BlockSequenceFirstEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "BlockSequenceFirstEntry"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState BlockSequenceFirstEntry
void VYaml::Parser::ParseState::_set_BlockSequenceFirstEntry(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_BlockSequenceFirstEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "BlockSequenceFirstEntry", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState BlockSequenceEntry
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_BlockSequenceEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_BlockSequenceEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "BlockSequenceEntry"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState BlockSequenceEntry
void VYaml::Parser::ParseState::_set_BlockSequenceEntry(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_BlockSequenceEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "BlockSequenceEntry", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState IndentlessSequenceEntry
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_IndentlessSequenceEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_IndentlessSequenceEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "IndentlessSequenceEntry"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState IndentlessSequenceEntry
void VYaml::Parser::ParseState::_set_IndentlessSequenceEntry(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_IndentlessSequenceEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "IndentlessSequenceEntry", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState BlockMappingFirstKey
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_BlockMappingFirstKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_BlockMappingFirstKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "BlockMappingFirstKey"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState BlockMappingFirstKey
void VYaml::Parser::ParseState::_set_BlockMappingFirstKey(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_BlockMappingFirstKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "BlockMappingFirstKey", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState BlockMappingKey
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_BlockMappingKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_BlockMappingKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "BlockMappingKey"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState BlockMappingKey
void VYaml::Parser::ParseState::_set_BlockMappingKey(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_BlockMappingKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "BlockMappingKey", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState BlockMappingValue
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_BlockMappingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_BlockMappingValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "BlockMappingValue"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState BlockMappingValue
void VYaml::Parser::ParseState::_set_BlockMappingValue(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_BlockMappingValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "BlockMappingValue", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState FlowSequenceFirstEntry
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_FlowSequenceFirstEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_FlowSequenceFirstEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "FlowSequenceFirstEntry"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState FlowSequenceFirstEntry
void VYaml::Parser::ParseState::_set_FlowSequenceFirstEntry(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_FlowSequenceFirstEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "FlowSequenceFirstEntry", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState FlowSequenceEntry
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_FlowSequenceEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_FlowSequenceEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "FlowSequenceEntry"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState FlowSequenceEntry
void VYaml::Parser::ParseState::_set_FlowSequenceEntry(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_FlowSequenceEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "FlowSequenceEntry", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState FlowSequenceEntryMappingKey
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_FlowSequenceEntryMappingKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_FlowSequenceEntryMappingKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "FlowSequenceEntryMappingKey"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState FlowSequenceEntryMappingKey
void VYaml::Parser::ParseState::_set_FlowSequenceEntryMappingKey(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_FlowSequenceEntryMappingKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "FlowSequenceEntryMappingKey", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState FlowSequenceEntryMappingValue
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_FlowSequenceEntryMappingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_FlowSequenceEntryMappingValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "FlowSequenceEntryMappingValue"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState FlowSequenceEntryMappingValue
void VYaml::Parser::ParseState::_set_FlowSequenceEntryMappingValue(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_FlowSequenceEntryMappingValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "FlowSequenceEntryMappingValue", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState FlowSequenceEntryMappingEnd
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_FlowSequenceEntryMappingEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_FlowSequenceEntryMappingEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "FlowSequenceEntryMappingEnd"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState FlowSequenceEntryMappingEnd
void VYaml::Parser::ParseState::_set_FlowSequenceEntryMappingEnd(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_FlowSequenceEntryMappingEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "FlowSequenceEntryMappingEnd", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState FlowMappingFirstKey
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_FlowMappingFirstKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_FlowMappingFirstKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "FlowMappingFirstKey"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState FlowMappingFirstKey
void VYaml::Parser::ParseState::_set_FlowMappingFirstKey(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_FlowMappingFirstKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "FlowMappingFirstKey", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState FlowMappingKey
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_FlowMappingKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_FlowMappingKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "FlowMappingKey"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState FlowMappingKey
void VYaml::Parser::ParseState::_set_FlowMappingKey(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_FlowMappingKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "FlowMappingKey", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState FlowMappingValue
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_FlowMappingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_FlowMappingValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "FlowMappingValue"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState FlowMappingValue
void VYaml::Parser::ParseState::_set_FlowMappingValue(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_FlowMappingValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "FlowMappingValue", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState FlowMappingEmptyValue
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_FlowMappingEmptyValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_FlowMappingEmptyValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "FlowMappingEmptyValue"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState FlowMappingEmptyValue
void VYaml::Parser::ParseState::_set_FlowMappingEmptyValue(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_FlowMappingEmptyValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "FlowMappingEmptyValue", value));
}
// Autogenerated static field getter
// Get static field: static public VYaml.Parser.ParseState End
::VYaml::Parser::ParseState VYaml::Parser::ParseState::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Parser::ParseState>("VYaml.Parser", "ParseState", "End"));
}
// Autogenerated static field setter
// Set static field: static public VYaml.Parser.ParseState End
void VYaml::Parser::ParseState::_set_End(::VYaml::Parser::ParseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "ParseState", "End", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VYaml::Parser::ParseState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::ParseState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Parser.YamlParser
#include "VYaml/Parser/YamlParser.hpp"
// Including type: VYaml.Parser.Scalar
#include "VYaml/Parser/Scalar.hpp"
// Including type: VYaml.Parser.Tag
#include "VYaml/Parser/Tag.hpp"
// Including type: VYaml.Parser.Anchor
#include "VYaml/Parser/Anchor.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: VYaml.Internal.ExpandBuffer`1
#include "VYaml/Internal/ExpandBuffer_1.hpp"
// Including type: System.Memory`1
#include "System/Memory_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Int32> anchorsBufferStatic
::System::Collections::Generic::Dictionary_2<::StringW, int>* VYaml::Parser::YamlParser::_get_anchorsBufferStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::_get_anchorsBufferStatic");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, int>*>("VYaml.Parser", "YamlParser", "anchorsBufferStatic")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Int32> anchorsBufferStatic
void VYaml::Parser::YamlParser::_set_anchorsBufferStatic(::System::Collections::Generic::Dictionary_2<::StringW, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::_set_anchorsBufferStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "YamlParser", "anchorsBufferStatic", value));
}
// Autogenerated static field getter
// Get static field: static private VYaml.Internal.ExpandBuffer`1<VYaml.Parser.ParseState> stateStackBufferStatic
::VYaml::Internal::ExpandBuffer_1<::VYaml::Parser::ParseState>* VYaml::Parser::YamlParser::_get_stateStackBufferStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::_get_stateStackBufferStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VYaml::Internal::ExpandBuffer_1<::VYaml::Parser::ParseState>*>("VYaml.Parser", "YamlParser", "stateStackBufferStatic"));
}
// Autogenerated static field setter
// Set static field: static private VYaml.Internal.ExpandBuffer`1<VYaml.Parser.ParseState> stateStackBufferStatic
void VYaml::Parser::YamlParser::_set_stateStackBufferStatic(::VYaml::Internal::ExpandBuffer_1<::VYaml::Parser::ParseState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::_set_stateStackBufferStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Parser", "YamlParser", "stateStackBufferStatic", value));
}
// Autogenerated instance field getter
// Get instance field: private VYaml.Parser.ParseEventType <CurrentEventType>k__BackingField
[[deprecated("Use field access instead!")]] ::VYaml::Parser::ParseEventType& VYaml::Parser::YamlParser::dyn_$CurrentEventType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::dyn_$CurrentEventType$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentEventType>k__BackingField"))->offset;
  return *reinterpret_cast<::VYaml::Parser::ParseEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <UnityStrippedMark>k__BackingField
[[deprecated("Use field access instead!")]] bool& VYaml::Parser::YamlParser::dyn_$UnityStrippedMark$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::dyn_$UnityStrippedMark$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UnityStrippedMark>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VYaml.Parser.Utf8YamlTokenizer tokenizer
[[deprecated("Use field access instead!")]] ::VYaml::Parser::Utf8YamlTokenizer& VYaml::Parser::YamlParser::dyn_tokenizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::dyn_tokenizer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokenizer"))->offset;
  return *reinterpret_cast<::VYaml::Parser::Utf8YamlTokenizer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VYaml.Parser.ParseState currentState
[[deprecated("Use field access instead!")]] ::VYaml::Parser::ParseState& VYaml::Parser::YamlParser::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::dyn_currentState");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::VYaml::Parser::ParseState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VYaml.Parser.Scalar currentScalar
[[deprecated("Use field access instead!")]] ::VYaml::Parser::Scalar*& VYaml::Parser::YamlParser::dyn_currentScalar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::dyn_currentScalar");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentScalar"))->offset;
  return *reinterpret_cast<::VYaml::Parser::Scalar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VYaml.Parser.Tag currentTag
[[deprecated("Use field access instead!")]] ::VYaml::Parser::Tag*& VYaml::Parser::YamlParser::dyn_currentTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::dyn_currentTag");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTag"))->offset;
  return *reinterpret_cast<::VYaml::Parser::Tag**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VYaml.Parser.Anchor currentAnchor
[[deprecated("Use field access instead!")]] ::VYaml::Parser::Anchor*& VYaml::Parser::YamlParser::dyn_currentAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::dyn_currentAnchor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAnchor"))->offset;
  return *reinterpret_cast<::VYaml::Parser::Anchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastAnchorId
[[deprecated("Use field access instead!")]] int& VYaml::Parser::YamlParser::dyn_lastAnchorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::dyn_lastAnchorId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAnchorId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Int32> anchors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, int>*& VYaml::Parser::YamlParser::dyn_anchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::dyn_anchors");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anchors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VYaml.Internal.ExpandBuffer`1<VYaml.Parser.ParseState> stateStack
[[deprecated("Use field access instead!")]] ::VYaml::Internal::ExpandBuffer_1<::VYaml::Parser::ParseState>*& VYaml::Parser::YamlParser::dyn_stateStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::dyn_stateStack");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stateStack"))->offset;
  return *reinterpret_cast<::VYaml::Internal::ExpandBuffer_1<::VYaml::Parser::ParseState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Parser.YamlParser.FromBytes
::VYaml::Parser::YamlParser VYaml::Parser::YamlParser::FromBytes(::System::Memory_1<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::FromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Parser", "YamlParser", "FromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Parser::YamlParser, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: VYaml.Parser.YamlParser.FromSequence
::VYaml::Parser::YamlParser VYaml::Parser::YamlParser::FromSequence(ByRef<::System::Buffers::ReadOnlySequence_1<uint8_t>> sequence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::FromSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Parser", "YamlParser", "FromSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequence)})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Parser::YamlParser, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sequence));
}
// Autogenerated method: VYaml.Parser.YamlParser.get_CurrentEventType
::VYaml::Parser::ParseEventType VYaml::Parser::YamlParser::get_CurrentEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::get_CurrentEventType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CurrentEventType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Parser::ParseEventType, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.set_CurrentEventType
void VYaml::Parser::YamlParser::set_CurrentEventType(::VYaml::Parser::ParseEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::set_CurrentEventType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_CurrentEventType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Parser.YamlParser.get_UnityStrippedMark
bool VYaml::Parser::YamlParser::get_UnityStrippedMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::get_UnityStrippedMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_UnityStrippedMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.set_UnityStrippedMark
void VYaml::Parser::YamlParser::set_UnityStrippedMark(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::set_UnityStrippedMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_UnityStrippedMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VYaml.Parser.YamlParser.get_CurrentMark
::VYaml::Parser::Marker VYaml::Parser::YamlParser::get_CurrentMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::get_CurrentMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CurrentMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Parser::Marker, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.get_End
bool VYaml::Parser::YamlParser::get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::get_End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.get_CurrentTokenType
::VYaml::Parser::TokenType VYaml::Parser::YamlParser::get_CurrentTokenType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::get_CurrentTokenType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CurrentTokenType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Parser::TokenType, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser..ctor
VYaml::Parser::YamlParser::YamlParser(::System::Buffers::ReadOnlySequence_1<uint8_t> sequence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequence)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sequence);
}
// Autogenerated method: VYaml.Parser.YamlParser..ctor
VYaml::Parser::YamlParser::YamlParser(ByRef<::VYaml::Parser::Utf8YamlTokenizer> tokenizer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tokenizer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(tokenizer));
}
// Autogenerated method: VYaml.Parser.YamlParser.Read
bool VYaml::Parser::YamlParser::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ReadWithVerify
void VYaml::Parser::YamlParser::ReadWithVerify(::VYaml::Parser::ParseEventType eventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ReadWithVerify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadWithVerify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType);
}
// Autogenerated method: VYaml.Parser.YamlParser.SkipAfter
void VYaml::Parser::YamlParser::SkipAfter(::VYaml::Parser::ParseEventType eventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::SkipAfter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SkipAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType);
}
// Autogenerated method: VYaml.Parser.YamlParser.SkipCurrentNode
void VYaml::Parser::YamlParser::SkipCurrentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::SkipCurrentNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SkipCurrentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ParseStreamStart
void VYaml::Parser::YamlParser::ParseStreamStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ParseStreamStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseStreamStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ParseDocumentStart
void VYaml::Parser::YamlParser::ParseDocumentStart(bool implicitStarted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ParseDocumentStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseDocumentStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(implicitStarted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, implicitStarted);
}
// Autogenerated method: VYaml.Parser.YamlParser.ParseExplicitDocumentStart
void VYaml::Parser::YamlParser::ParseExplicitDocumentStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ParseExplicitDocumentStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseExplicitDocumentStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ParseDocumentContent
void VYaml::Parser::YamlParser::ParseDocumentContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ParseDocumentContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseDocumentContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ParseDocumentEnd
void VYaml::Parser::YamlParser::ParseDocumentEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ParseDocumentEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseDocumentEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ParseNode
void VYaml::Parser::YamlParser::ParseNode(bool block, bool indentlessSequence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ParseNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(indentlessSequence)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, block, indentlessSequence);
}
// Autogenerated method: VYaml.Parser.YamlParser.ParseBlockMappingKey
void VYaml::Parser::YamlParser::ParseBlockMappingKey(bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ParseBlockMappingKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseBlockMappingKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, first);
}
// Autogenerated method: VYaml.Parser.YamlParser.ParseBlockMappingValue
void VYaml::Parser::YamlParser::ParseBlockMappingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ParseBlockMappingValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseBlockMappingValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ParseBlockSequenceEntry
void VYaml::Parser::YamlParser::ParseBlockSequenceEntry(bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ParseBlockSequenceEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseBlockSequenceEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, first);
}
// Autogenerated method: VYaml.Parser.YamlParser.ParseFlowSequenceEntry
void VYaml::Parser::YamlParser::ParseFlowSequenceEntry(bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ParseFlowSequenceEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseFlowSequenceEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, first);
}
// Autogenerated method: VYaml.Parser.YamlParser.ParseFlowMappingKey
void VYaml::Parser::YamlParser::ParseFlowMappingKey(bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ParseFlowMappingKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseFlowMappingKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, first);
}
// Autogenerated method: VYaml.Parser.YamlParser.ParseFlowMappingValue
void VYaml::Parser::YamlParser::ParseFlowMappingValue(bool empty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ParseFlowMappingValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseFlowMappingValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(empty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, empty);
}
// Autogenerated method: VYaml.Parser.YamlParser.ParseIndentlessSequenceEntry
void VYaml::Parser::YamlParser::ParseIndentlessSequenceEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ParseIndentlessSequenceEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseIndentlessSequenceEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ParseFlowSequenceEntryMappingKey
void VYaml::Parser::YamlParser::ParseFlowSequenceEntryMappingKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ParseFlowSequenceEntryMappingKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseFlowSequenceEntryMappingKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ParseFlowSequenceEntryMappingValue
void VYaml::Parser::YamlParser::ParseFlowSequenceEntryMappingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ParseFlowSequenceEntryMappingValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseFlowSequenceEntryMappingValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ParseFlowSequenceEntryMappingEnd
void VYaml::Parser::YamlParser::ParseFlowSequenceEntryMappingEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ParseFlowSequenceEntryMappingEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseFlowSequenceEntryMappingEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.PopState
void VYaml::Parser::YamlParser::PopState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::PopState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PopState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.PushState
void VYaml::Parser::YamlParser::PushState(::VYaml::Parser::ParseState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::PushState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PushState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VYaml.Parser.YamlParser.EmptyScalar
void VYaml::Parser::YamlParser::EmptyScalar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::EmptyScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "EmptyScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ProcessDirectives
void VYaml::Parser::YamlParser::ProcessDirectives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ProcessDirectives");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ProcessDirectives", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.RegisterAnchor
int VYaml::Parser::YamlParser::RegisterAnchor(::StringW anchorName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::RegisterAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RegisterAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anchorName);
}
// Autogenerated method: VYaml.Parser.YamlParser.ThrowIfCurrentTokenUnless
void VYaml::Parser::YamlParser::ThrowIfCurrentTokenUnless(::VYaml::Parser::TokenType expectedTokenType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ThrowIfCurrentTokenUnless");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ThrowIfCurrentTokenUnless", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedTokenType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expectedTokenType);
}
// Autogenerated method: VYaml.Parser.YamlParser.IsNullScalar
bool VYaml::Parser::YamlParser::IsNullScalar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::IsNullScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsNullScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.GetScalarAsString
::StringW VYaml::Parser::YamlParser::GetScalarAsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::GetScalarAsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetScalarAsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.GetScalarAsUtf8
::System::ReadOnlySpan_1<uint8_t> VYaml::Parser::YamlParser::GetScalarAsUtf8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::GetScalarAsUtf8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetScalarAsUtf8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.TryGetScalarAsSpan
bool VYaml::Parser::YamlParser::TryGetScalarAsSpan(ByRef<::System::ReadOnlySpan_1<uint8_t>> span) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryGetScalarAsSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetScalarAsSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::ReadOnlySpan_1<uint8_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(span));
}
// Autogenerated method: VYaml.Parser.YamlParser.GetScalarAsBool
bool VYaml::Parser::YamlParser::GetScalarAsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::GetScalarAsBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetScalarAsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.GetScalarAsInt32
int VYaml::Parser::YamlParser::GetScalarAsInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::GetScalarAsInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetScalarAsInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.GetScalarAsInt64
int64_t VYaml::Parser::YamlParser::GetScalarAsInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::GetScalarAsInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetScalarAsInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.GetScalarAsUInt32
uint VYaml::Parser::YamlParser::GetScalarAsUInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::GetScalarAsUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetScalarAsUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.GetScalarAsUInt64
uint64_t VYaml::Parser::YamlParser::GetScalarAsUInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::GetScalarAsUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetScalarAsUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.GetScalarAsFloat
float VYaml::Parser::YamlParser::GetScalarAsFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::GetScalarAsFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetScalarAsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.GetScalarAsDouble
double VYaml::Parser::YamlParser::GetScalarAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::GetScalarAsDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetScalarAsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ReadScalarAsString
::StringW VYaml::Parser::YamlParser::ReadScalarAsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ReadScalarAsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadScalarAsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ReadScalarAsBool
bool VYaml::Parser::YamlParser::ReadScalarAsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ReadScalarAsBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadScalarAsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ReadScalarAsInt32
int VYaml::Parser::YamlParser::ReadScalarAsInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ReadScalarAsInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadScalarAsInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ReadScalarAsInt64
int64_t VYaml::Parser::YamlParser::ReadScalarAsInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ReadScalarAsInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadScalarAsInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ReadScalarAsUInt32
uint VYaml::Parser::YamlParser::ReadScalarAsUInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ReadScalarAsUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadScalarAsUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ReadScalarAsUInt64
uint64_t VYaml::Parser::YamlParser::ReadScalarAsUInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ReadScalarAsUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadScalarAsUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ReadScalarAsFloat
float VYaml::Parser::YamlParser::ReadScalarAsFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ReadScalarAsFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadScalarAsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.ReadScalarAsDouble
double VYaml::Parser::YamlParser::ReadScalarAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::ReadScalarAsDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReadScalarAsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: VYaml.Parser.YamlParser.TryReadScalarAsString
bool VYaml::Parser::YamlParser::TryReadScalarAsString(ByRef<::StringW> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryReadScalarAsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryReadScalarAsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryReadScalarAsBool
bool VYaml::Parser::YamlParser::TryReadScalarAsBool(ByRef<bool> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryReadScalarAsBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryReadScalarAsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryReadScalarAsInt32
bool VYaml::Parser::YamlParser::TryReadScalarAsInt32(ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryReadScalarAsInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryReadScalarAsInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryReadScalarAsInt64
bool VYaml::Parser::YamlParser::TryReadScalarAsInt64(ByRef<int64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryReadScalarAsInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryReadScalarAsInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryReadScalarAsUInt32
bool VYaml::Parser::YamlParser::TryReadScalarAsUInt32(ByRef<uint> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryReadScalarAsUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryReadScalarAsUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryReadScalarAsUInt64
bool VYaml::Parser::YamlParser::TryReadScalarAsUInt64(ByRef<uint64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryReadScalarAsUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryReadScalarAsUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryReadScalarAsFloat
bool VYaml::Parser::YamlParser::TryReadScalarAsFloat(ByRef<float> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryReadScalarAsFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryReadScalarAsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryReadScalarAsDouble
bool VYaml::Parser::YamlParser::TryReadScalarAsDouble(ByRef<double> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryReadScalarAsDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryReadScalarAsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryGetScalarAsString
bool VYaml::Parser::YamlParser::TryGetScalarAsString(ByRef<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryGetScalarAsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetScalarAsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryGetScalarAsBool
bool VYaml::Parser::YamlParser::TryGetScalarAsBool(ByRef<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryGetScalarAsBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetScalarAsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryGetScalarAsInt32
bool VYaml::Parser::YamlParser::TryGetScalarAsInt32(ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryGetScalarAsInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetScalarAsInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryGetScalarAsUInt32
bool VYaml::Parser::YamlParser::TryGetScalarAsUInt32(ByRef<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryGetScalarAsUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetScalarAsUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryGetScalarAsInt64
bool VYaml::Parser::YamlParser::TryGetScalarAsInt64(ByRef<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryGetScalarAsInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetScalarAsInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryGetScalarAsUInt64
bool VYaml::Parser::YamlParser::TryGetScalarAsUInt64(ByRef<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryGetScalarAsUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetScalarAsUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryGetScalarAsFloat
bool VYaml::Parser::YamlParser::TryGetScalarAsFloat(ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryGetScalarAsFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetScalarAsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryGetScalarAsDouble
bool VYaml::Parser::YamlParser::TryGetScalarAsDouble(ByRef<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryGetScalarAsDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetScalarAsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryGetCurrentTag
bool VYaml::Parser::YamlParser::TryGetCurrentTag(ByRef<::VYaml::Parser::Tag*> tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryGetCurrentTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetCurrentTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::VYaml::Parser::Tag*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(tag));
}
// Autogenerated method: VYaml.Parser.YamlParser.TryGetCurrentAnchor
bool VYaml::Parser::YamlParser::TryGetCurrentAnchor(ByRef<::VYaml::Parser::Anchor*> anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Parser::YamlParser::TryGetCurrentAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetCurrentAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::VYaml::Parser::Anchor*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(anchor));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Internal.ByteSequenceHash
#include "VYaml/Internal/ByteSequenceHash.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VYaml.Internal.ByteSequenceHash.GetHashCode
int VYaml::Internal::ByteSequenceHash::GetHashCode(::System::ReadOnlySpan_1<uint8_t> span) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::ByteSequenceHash::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "ByteSequenceHash", "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(span)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, span);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Internal.EmitStringInfo
#include "VYaml/Internal/EmitStringInfo.hpp"
// Including type: VYaml.Emitter.ScalarStyle
#include "VYaml/Emitter/ScalarStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Lines
[[deprecated("Use field access instead!")]] int& VYaml::Internal::EmitStringInfo::dyn_Lines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::EmitStringInfo::dyn_Lines");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Lines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean NeedsQuotes
[[deprecated("Use field access instead!")]] bool& VYaml::Internal::EmitStringInfo::dyn_NeedsQuotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::EmitStringInfo::dyn_NeedsQuotes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NeedsQuotes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsReservedWord
[[deprecated("Use field access instead!")]] bool& VYaml::Internal::EmitStringInfo::dyn_IsReservedWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::EmitStringInfo::dyn_IsReservedWord");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsReservedWord"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VYaml.Internal.EmitStringInfo..ctor
// ABORTED elsewhere.  VYaml::Internal::EmitStringInfo::EmitStringInfo(int lines, bool needsQuotes, bool isReservedWord)
// Autogenerated method: VYaml.Internal.EmitStringInfo.SuggestScalarStyle
::VYaml::Emitter::ScalarStyle VYaml::Internal::EmitStringInfo::SuggestScalarStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::EmitStringInfo::SuggestScalarStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SuggestScalarStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Emitter::ScalarStyle, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VYaml.Internal.EmitStringAnalyzer
#include "VYaml/Internal/EmitStringAnalyzer.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: VYaml.Internal.EmitStringInfo
#include "VYaml/Internal/EmitStringInfo.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.StringBuilder stringBuilderThreadStatic
::System::Text::StringBuilder* VYaml::Internal::EmitStringAnalyzer::_get_stringBuilderThreadStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::EmitStringAnalyzer::_get_stringBuilderThreadStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::StringBuilder*>("VYaml.Internal", "EmitStringAnalyzer", "stringBuilderThreadStatic"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.StringBuilder stringBuilderThreadStatic
void VYaml::Internal::EmitStringAnalyzer::_set_stringBuilderThreadStatic(::System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::EmitStringAnalyzer::_set_stringBuilderThreadStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "EmitStringAnalyzer", "stringBuilderThreadStatic", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char[] whiteSpaces
::ArrayW<::Il2CppChar> VYaml::Internal::EmitStringAnalyzer::_get_whiteSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::EmitStringAnalyzer::_get_whiteSpaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("VYaml.Internal", "EmitStringAnalyzer", "whiteSpaces"));
}
// Autogenerated static field setter
// Set static field: static private System.Char[] whiteSpaces
void VYaml::Internal::EmitStringAnalyzer::_set_whiteSpaces(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::EmitStringAnalyzer::_set_whiteSpaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VYaml.Internal", "EmitStringAnalyzer", "whiteSpaces", value));
}
// Autogenerated method: VYaml.Internal.EmitStringAnalyzer.Analyze
::VYaml::Internal::EmitStringInfo VYaml::Internal::EmitStringAnalyzer::Analyze(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::EmitStringAnalyzer::Analyze");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "EmitStringAnalyzer", "Analyze", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::VYaml::Internal::EmitStringInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: VYaml.Internal.EmitStringAnalyzer.BuildLiteralScalar
::System::Text::StringBuilder* VYaml::Internal::EmitStringAnalyzer::BuildLiteralScalar(::System::ReadOnlySpan_1<::Il2CppChar> originalValue, int indentCharCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::EmitStringAnalyzer::BuildLiteralScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "EmitStringAnalyzer", "BuildLiteralScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalValue), ::il2cpp_utils::ExtractType(indentCharCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, originalValue, indentCharCount);
}
// Autogenerated method: VYaml.Internal.EmitStringAnalyzer.BuildQuotedScalar
::System::Text::StringBuilder* VYaml::Internal::EmitStringAnalyzer::BuildQuotedScalar(::System::ReadOnlySpan_1<::Il2CppChar> originalValue, bool doubleQuote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::EmitStringAnalyzer::BuildQuotedScalar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "EmitStringAnalyzer", "BuildQuotedScalar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalValue), ::il2cpp_utils::ExtractType(doubleQuote)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, originalValue, doubleQuote);
}
// Autogenerated method: VYaml.Internal.EmitStringAnalyzer.IsReservedWord
bool VYaml::Internal::EmitStringAnalyzer::IsReservedWord(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::EmitStringAnalyzer::IsReservedWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "EmitStringAnalyzer", "IsReservedWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: VYaml.Internal.EmitStringAnalyzer.GetStringBuilder
::System::Text::StringBuilder* VYaml::Internal::EmitStringAnalyzer::GetStringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::EmitStringAnalyzer::GetStringBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "EmitStringAnalyzer", "GetStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VYaml.Internal.EmitStringAnalyzer.AppendWhiteSpace
void VYaml::Internal::EmitStringAnalyzer::AppendWhiteSpace(::System::Text::StringBuilder* stringBuilder, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::EmitStringAnalyzer::AppendWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "EmitStringAnalyzer", "AppendWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringBuilder), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringBuilder, length);
}
// Autogenerated method: VYaml.Internal.EmitStringAnalyzer..cctor
void VYaml::Internal::EmitStringAnalyzer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VYaml::Internal::EmitStringAnalyzer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VYaml.Internal", "EmitStringAnalyzer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
