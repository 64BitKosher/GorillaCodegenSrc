// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Photon.Realtime.LoadBalancingClient/EncryptionDataParameters
#include "Photon/Realtime/LoadBalancingClient_EncryptionDataParameters.hpp"
// Including type: Photon.Realtime.LoadBalancingClient/CallbackTargetChange
#include "Photon/Realtime/LoadBalancingClient_CallbackTargetChange.hpp"
// Including type: Photon.Realtime.LoadBalancingPeer
#include "Photon/Realtime/LoadBalancingPeer.hpp"
// Including type: Photon.Realtime.AuthenticationValues
#include "Photon/Realtime/AuthenticationValues.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ExitGames.Client.Photon.EventData
#include "ExitGames/Client/Photon/EventData.hpp"
// Including type: ExitGames.Client.Photon.OperationResponse
#include "ExitGames/Client/Photon/OperationResponse.hpp"
// Including type: Photon.Realtime.ConnectionCallbacksContainer
#include "Photon/Realtime/ConnectionCallbacksContainer.hpp"
// Including type: Photon.Realtime.MatchMakingCallbacksContainer
#include "Photon/Realtime/MatchMakingCallbacksContainer.hpp"
// Including type: Photon.Realtime.InRoomCallbacksContainer
#include "Photon/Realtime/InRoomCallbacksContainer.hpp"
// Including type: Photon.Realtime.LobbyCallbacksContainer
#include "Photon/Realtime/LobbyCallbacksContainer.hpp"
// Including type: Photon.Realtime.WebRpcCallbacksContainer
#include "Photon/Realtime/WebRpcCallbacksContainer.hpp"
// Including type: Photon.Realtime.ErrorInfoCallbacksContainer
#include "Photon/Realtime/ErrorInfoCallbacksContainer.hpp"
// Including type: Photon.Realtime.TypedLobby
#include "Photon/Realtime/TypedLobby.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.TypedLobbyInfo
#include "Photon/Realtime/TypedLobbyInfo.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Realtime.Room
#include "Photon/Realtime/Room.hpp"
// Including type: Photon.Realtime.EnterRoomParams
#include "Photon/Realtime/EnterRoomParams.hpp"
// Including type: Photon.Realtime.RegionHandler
#include "Photon/Realtime/RegionHandler.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ExitGames.Client.Photon.SerializationProtocol
#include "ExitGames/Client/Photon/SerializationProtocol.hpp"
// Including type: Photon.Realtime.AppSettings
#include "Photon/Realtime/AppSettings.hpp"
// Including type: Photon.Realtime.FindFriendsOptions
#include "Photon/Realtime/FindFriendsOptions.hpp"
// Including type: Photon.Realtime.OpJoinRandomRoomParams
#include "Photon/Realtime/OpJoinRandomRoomParams.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.WebFlags
#include "Photon/Realtime/WebFlags.hpp"
// Including type: Photon.Realtime.RaiseEventOptions
#include "Photon/Realtime/RaiseEventOptions.hpp"
// Including type: ExitGames.Client.Photon.SendOptions
#include "ExitGames/Client/Photon/SendOptions.hpp"
// Including type: Photon.Realtime.RoomOptions
#include "Photon/Realtime/RoomOptions.hpp"
// Including type: ExitGames.Client.Photon.DebugLevel
#include "ExitGames/Client/Photon/DebugLevel.hpp"
// Including type: ExitGames.Client.Photon.StatusCode
#include "ExitGames/Client/Photon/StatusCode.hpp"
// Including type: ExitGames.Client.Photon.DisconnectMessage
#include "ExitGames/Client/Photon/DisconnectMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<ExitGames.Client.Photon.ConnectionProtocol,System.Int32> ProtocolToNameServerPort
::System::Collections::Generic::Dictionary_2<::ExitGames::Client::Photon::ConnectionProtocol, int>* Photon::Realtime::LoadBalancingClient::_get_ProtocolToNameServerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::_get_ProtocolToNameServerPort");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::ExitGames::Client::Photon::ConnectionProtocol, int>*>("Photon.Realtime", "LoadBalancingClient", "ProtocolToNameServerPort")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<ExitGames.Client.Photon.ConnectionProtocol,System.Int32> ProtocolToNameServerPort
void Photon::Realtime::LoadBalancingClient::_set_ProtocolToNameServerPort(::System::Collections::Generic::Dictionary_2<::ExitGames::Client::Photon::ConnectionProtocol, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::_set_ProtocolToNameServerPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "LoadBalancingClient", "ProtocolToNameServerPort", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 FriendRequestListMax
int Photon::Realtime::LoadBalancingClient::_get_FriendRequestListMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::_get_FriendRequestListMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "LoadBalancingClient", "FriendRequestListMax"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 FriendRequestListMax
void Photon::Realtime::LoadBalancingClient::_set_FriendRequestListMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::_set_FriendRequestListMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "LoadBalancingClient", "FriendRequestListMax", value));
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.LoadBalancingPeer <LoadBalancingPeer>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingPeer*& Photon::Realtime::LoadBalancingClient::dyn_$LoadBalancingPeer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$LoadBalancingPeer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LoadBalancingPeer>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingPeer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <AppVersion>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_$AppVersion$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$AppVersion$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AppVersion>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <AppId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_$AppId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$AppId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AppId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.ClientAppType <ClientType>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::ClientAppType& Photon::Realtime::LoadBalancingClient::dyn_$ClientType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$ClientType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ClientType>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::ClientAppType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.AuthenticationValues <AuthValues>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::AuthenticationValues*& Photon::Realtime::LoadBalancingClient::dyn_$AuthValues$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$AuthValues$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AuthValues>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::AuthenticationValues**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.AuthModeOption AuthMode
[[deprecated("Use field access instead!")]] ::Photon::Realtime::AuthModeOption& Photon::Realtime::LoadBalancingClient::dyn_AuthMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_AuthMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AuthMode"))->offset;
  return *reinterpret_cast<::Photon::Realtime::AuthModeOption*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.EncryptionMode EncryptionMode
[[deprecated("Use field access instead!")]] ::Photon::Realtime::EncryptionMode& Photon::Realtime::LoadBalancingClient::dyn_EncryptionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_EncryptionMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EncryptionMode"))->offset;
  return *reinterpret_cast<::Photon::Realtime::EncryptionMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<ExitGames.Client.Photon.ConnectionProtocol> <ExpectedProtocol>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::ExitGames::Client::Photon::ConnectionProtocol>& Photon::Realtime::LoadBalancingClient::dyn_$ExpectedProtocol$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$ExpectedProtocol$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ExpectedProtocol>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::ExitGames::Client::Photon::ConnectionProtocol>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object tokenCache
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Realtime::LoadBalancingClient::dyn_tokenCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_tokenCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokenCache"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsUsingNameServer>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::LoadBalancingClient::dyn_$IsUsingNameServer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$IsUsingNameServer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsUsingNameServer>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String NameServerHost
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_NameServerHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_NameServerHost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NameServerHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <UseAlternativeUdpPorts>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::LoadBalancingClient::dyn_$UseAlternativeUdpPorts$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$UseAlternativeUdpPorts$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UseAlternativeUdpPorts>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.PhotonPortDefinition ServerPortOverrides
[[deprecated("Use field access instead!")]] ::Photon::Realtime::PhotonPortDefinition& Photon::Realtime::LoadBalancingClient::dyn_ServerPortOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_ServerPortOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerPortOverrides"))->offset;
  return *reinterpret_cast<::Photon::Realtime::PhotonPortDefinition*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <EnableProtocolFallback>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::LoadBalancingClient::dyn_$EnableProtocolFallback$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$EnableProtocolFallback$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EnableProtocolFallback>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <MasterServerAddress>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_$MasterServerAddress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$MasterServerAddress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MasterServerAddress>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <GameServerAddress>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_$GameServerAddress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$GameServerAddress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GameServerAddress>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.ServerConnection <Server>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::ServerConnection& Photon::Realtime::LoadBalancingClient::dyn_$Server$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$Server$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Server>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::ServerConnection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ProxyServerAddress
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_ProxyServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_ProxyServerAddress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProxyServerAddress"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.ClientState state
[[deprecated("Use field access instead!")]] ::Photon::Realtime::ClientState& Photon::Realtime::LoadBalancingClient::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::Photon::Realtime::ClientState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<Photon.Realtime.ClientState,Photon.Realtime.ClientState> StateChanged
[[deprecated("Use field access instead!")]] ::System::Action_2<::Photon::Realtime::ClientState, ::Photon::Realtime::ClientState>*& Photon::Realtime::LoadBalancingClient::dyn_StateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_StateChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StateChanged"))->offset;
  return *reinterpret_cast<::System::Action_2<::Photon::Realtime::ClientState, ::Photon::Realtime::ClientState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ExitGames.Client.Photon.EventData> EventReceived
[[deprecated("Use field access instead!")]] ::System::Action_1<::ExitGames::Client::Photon::EventData*>*& Photon::Realtime::LoadBalancingClient::dyn_EventReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_EventReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EventReceived"))->offset;
  return *reinterpret_cast<::System::Action_1<::ExitGames::Client::Photon::EventData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ExitGames.Client.Photon.OperationResponse> OpResponseReceived
[[deprecated("Use field access instead!")]] ::System::Action_1<::ExitGames::Client::Photon::OperationResponse*>*& Photon::Realtime::LoadBalancingClient::dyn_OpResponseReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_OpResponseReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OpResponseReceived"))->offset;
  return *reinterpret_cast<::System::Action_1<::ExitGames::Client::Photon::OperationResponse*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.ConnectionCallbacksContainer ConnectionCallbackTargets
[[deprecated("Use field access instead!")]] ::Photon::Realtime::ConnectionCallbacksContainer*& Photon::Realtime::LoadBalancingClient::dyn_ConnectionCallbackTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_ConnectionCallbackTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionCallbackTargets"))->offset;
  return *reinterpret_cast<::Photon::Realtime::ConnectionCallbacksContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.MatchMakingCallbacksContainer MatchMakingCallbackTargets
[[deprecated("Use field access instead!")]] ::Photon::Realtime::MatchMakingCallbacksContainer*& Photon::Realtime::LoadBalancingClient::dyn_MatchMakingCallbackTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_MatchMakingCallbackTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchMakingCallbackTargets"))->offset;
  return *reinterpret_cast<::Photon::Realtime::MatchMakingCallbacksContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Photon.Realtime.InRoomCallbacksContainer InRoomCallbackTargets
[[deprecated("Use field access instead!")]] ::Photon::Realtime::InRoomCallbacksContainer*& Photon::Realtime::LoadBalancingClient::dyn_InRoomCallbackTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_InRoomCallbackTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InRoomCallbackTargets"))->offset;
  return *reinterpret_cast<::Photon::Realtime::InRoomCallbacksContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Photon.Realtime.LobbyCallbacksContainer LobbyCallbackTargets
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LobbyCallbacksContainer*& Photon::Realtime::LoadBalancingClient::dyn_LobbyCallbackTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_LobbyCallbackTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LobbyCallbackTargets"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LobbyCallbacksContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Photon.Realtime.WebRpcCallbacksContainer WebRpcCallbackTargets
[[deprecated("Use field access instead!")]] ::Photon::Realtime::WebRpcCallbacksContainer*& Photon::Realtime::LoadBalancingClient::dyn_WebRpcCallbackTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_WebRpcCallbackTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WebRpcCallbackTargets"))->offset;
  return *reinterpret_cast<::Photon::Realtime::WebRpcCallbacksContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Photon.Realtime.ErrorInfoCallbacksContainer ErrorInfoCallbackTargets
[[deprecated("Use field access instead!")]] ::Photon::Realtime::ErrorInfoCallbacksContainer*& Photon::Realtime::LoadBalancingClient::dyn_ErrorInfoCallbackTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_ErrorInfoCallbackTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ErrorInfoCallbackTargets"))->offset;
  return *reinterpret_cast<::Photon::Realtime::ErrorInfoCallbacksContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.DisconnectCause <DisconnectedCause>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::DisconnectCause& Photon::Realtime::LoadBalancingClient::dyn_$DisconnectedCause$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$DisconnectedCause$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DisconnectedCause>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::DisconnectCause*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.TypedLobby <CurrentLobby>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::TypedLobby*& Photon::Realtime::LoadBalancingClient::dyn_$CurrentLobby$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$CurrentLobby$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentLobby>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::TypedLobby**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableLobbyStatistics
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::LoadBalancingClient::dyn_EnableLobbyStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_EnableLobbyStatistics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableLobbyStatistics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Photon.Realtime.TypedLobbyInfo> lobbyStatistics
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Realtime::TypedLobbyInfo*>*& Photon::Realtime::LoadBalancingClient::dyn_lobbyStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_lobbyStatistics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lobbyStatistics"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Realtime::TypedLobbyInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player <LocalPlayer>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& Photon::Realtime::LoadBalancingClient::dyn_$LocalPlayer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$LocalPlayer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LocalPlayer>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Room <CurrentRoom>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Room*& Photon::Realtime::LoadBalancingClient::dyn_$CurrentRoom$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$CurrentRoom$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentRoom>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <PlayersOnMasterCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Realtime::LoadBalancingClient::dyn_$PlayersOnMasterCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$PlayersOnMasterCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlayersOnMasterCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <PlayersInRoomsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Realtime::LoadBalancingClient::dyn_$PlayersInRoomsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$PlayersInRoomsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlayersInRoomsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <RoomsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Realtime::LoadBalancingClient::dyn_$RoomsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$RoomsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RoomsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.JoinType lastJoinType
[[deprecated("Use field access instead!")]] ::Photon::Realtime::JoinType& Photon::Realtime::LoadBalancingClient::dyn_lastJoinType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_lastJoinType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastJoinType"))->offset;
  return *reinterpret_cast<::Photon::Realtime::JoinType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.EnterRoomParams enterRoomParamsCache
[[deprecated("Use field access instead!")]] ::Photon::Realtime::EnterRoomParams*& Photon::Realtime::LoadBalancingClient::dyn_enterRoomParamsCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_enterRoomParamsCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enterRoomParamsCache"))->offset;
  return *reinterpret_cast<::Photon::Realtime::EnterRoomParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExitGames.Client.Photon.OperationResponse failedRoomEntryOperation
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::OperationResponse*& Photon::Realtime::LoadBalancingClient::dyn_failedRoomEntryOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_failedRoomEntryOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failedRoomEntryOperation"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::OperationResponse**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] friendListRequested
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Photon::Realtime::LoadBalancingClient::dyn_friendListRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_friendListRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "friendListRequested"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <CloudRegion>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_$CloudRegion$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$CloudRegion$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CloudRegion>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <CurrentCluster>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_$CurrentCluster$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$CurrentCluster$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentCluster>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.RegionHandler RegionHandler
[[deprecated("Use field access instead!")]] ::Photon::Realtime::RegionHandler*& Photon::Realtime::LoadBalancingClient::dyn_RegionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_RegionHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RegionHandler"))->offset;
  return *reinterpret_cast<::Photon::Realtime::RegionHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String bestRegionSummaryFromStorage
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_bestRegionSummaryFromStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_bestRegionSummaryFromStorage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bestRegionSummaryFromStorage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SummaryToCache
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_SummaryToCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_SummaryToCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SummaryToCache"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean connectToBestRegion
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::LoadBalancingClient::dyn_connectToBestRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_connectToBestRegion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectToBestRegion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<Photon.Realtime.LoadBalancingClient/CallbackTargetChange> callbackTargetChanges
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Photon::Realtime::LoadBalancingClient::CallbackTargetChange*>*& Photon::Realtime::LoadBalancingClient::dyn_callbackTargetChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_callbackTargetChanges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbackTargetChanges"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Photon::Realtime::LoadBalancingClient::CallbackTargetChange*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.Object> callbackTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::Il2CppObject*>*& Photon::Realtime::LoadBalancingClient::dyn_callbackTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_callbackTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbackTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NameServerPortInAppSettings
[[deprecated("Use field access instead!")]] int& Photon::Realtime::LoadBalancingClient::dyn_NameServerPortInAppSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_NameServerPortInAppSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NameServerPortInAppSettings"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_LoadBalancingPeer
::Photon::Realtime::LoadBalancingPeer* Photon::Realtime::LoadBalancingClient::get_LoadBalancingPeer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_LoadBalancingPeer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoadBalancingPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::LoadBalancingPeer*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_LoadBalancingPeer
void Photon::Realtime::LoadBalancingClient::set_LoadBalancingPeer(::Photon::Realtime::LoadBalancingPeer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_LoadBalancingPeer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LoadBalancingPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_SerializationProtocol
::ExitGames::Client::Photon::SerializationProtocol Photon::Realtime::LoadBalancingClient::get_SerializationProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_SerializationProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SerializationProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::SerializationProtocol, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_SerializationProtocol
void Photon::Realtime::LoadBalancingClient::set_SerializationProtocol(::ExitGames::Client::Photon::SerializationProtocol value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_SerializationProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SerializationProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_AppVersion
::StringW Photon::Realtime::LoadBalancingClient::get_AppVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_AppVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AppVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_AppVersion
void Photon::Realtime::LoadBalancingClient::set_AppVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_AppVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AppVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_AppId
::StringW Photon::Realtime::LoadBalancingClient::get_AppId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_AppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_AppId
void Photon::Realtime::LoadBalancingClient::set_AppId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_AppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_ClientType
::Photon::Realtime::ClientAppType Photon::Realtime::LoadBalancingClient::get_ClientType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_ClientType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::ClientAppType, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_ClientType
void Photon::Realtime::LoadBalancingClient::set_ClientType(::Photon::Realtime::ClientAppType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_ClientType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClientType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_AuthValues
::Photon::Realtime::AuthenticationValues* Photon::Realtime::LoadBalancingClient::get_AuthValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_AuthValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::AuthenticationValues*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_AuthValues
void Photon::Realtime::LoadBalancingClient::set_AuthValues(::Photon::Realtime::AuthenticationValues* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_AuthValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AuthValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_ExpectedProtocol
::System::Nullable_1<::ExitGames::Client::Photon::ConnectionProtocol> Photon::Realtime::LoadBalancingClient::get_ExpectedProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_ExpectedProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectedProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::ExitGames::Client::Photon::ConnectionProtocol>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_ExpectedProtocol
void Photon::Realtime::LoadBalancingClient::set_ExpectedProtocol(::System::Nullable_1<::ExitGames::Client::Photon::ConnectionProtocol> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_ExpectedProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExpectedProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_TokenForInit
::Il2CppObject* Photon::Realtime::LoadBalancingClient::get_TokenForInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_TokenForInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenForInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_IsUsingNameServer
bool Photon::Realtime::LoadBalancingClient::get_IsUsingNameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_IsUsingNameServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUsingNameServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_IsUsingNameServer
void Photon::Realtime::LoadBalancingClient::set_IsUsingNameServer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_IsUsingNameServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsUsingNameServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_NameServerAddress
::StringW Photon::Realtime::LoadBalancingClient::get_NameServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_NameServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_UseAlternativeUdpPorts
bool Photon::Realtime::LoadBalancingClient::get_UseAlternativeUdpPorts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_UseAlternativeUdpPorts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseAlternativeUdpPorts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_UseAlternativeUdpPorts
void Photon::Realtime::LoadBalancingClient::set_UseAlternativeUdpPorts(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_UseAlternativeUdpPorts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseAlternativeUdpPorts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_EnableProtocolFallback
bool Photon::Realtime::LoadBalancingClient::get_EnableProtocolFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_EnableProtocolFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableProtocolFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_EnableProtocolFallback
void Photon::Realtime::LoadBalancingClient::set_EnableProtocolFallback(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_EnableProtocolFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableProtocolFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_CurrentServerAddress
::StringW Photon::Realtime::LoadBalancingClient::get_CurrentServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_CurrentServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_MasterServerAddress
::StringW Photon::Realtime::LoadBalancingClient::get_MasterServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_MasterServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MasterServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_MasterServerAddress
void Photon::Realtime::LoadBalancingClient::set_MasterServerAddress(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_MasterServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MasterServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_GameServerAddress
::StringW Photon::Realtime::LoadBalancingClient::get_GameServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_GameServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GameServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_GameServerAddress
void Photon::Realtime::LoadBalancingClient::set_GameServerAddress(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_GameServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GameServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_Server
::Photon::Realtime::ServerConnection Photon::Realtime::LoadBalancingClient::get_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_Server");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Server", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::ServerConnection, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_Server
void Photon::Realtime::LoadBalancingClient::set_Server(::Photon::Realtime::ServerConnection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_Server");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Server", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_State
::Photon::Realtime::ClientState Photon::Realtime::LoadBalancingClient::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::ClientState, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_State
void Photon::Realtime::LoadBalancingClient::set_State(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_IsConnected
bool Photon::Realtime::LoadBalancingClient::get_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_IsConnectedAndReady
bool Photon::Realtime::LoadBalancingClient::get_IsConnectedAndReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_IsConnectedAndReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsConnectedAndReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.add_StateChanged
void Photon::Realtime::LoadBalancingClient::add_StateChanged(::System::Action_2<::Photon::Realtime::ClientState, ::Photon::Realtime::ClientState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::add_StateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_StateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.remove_StateChanged
void Photon::Realtime::LoadBalancingClient::remove_StateChanged(::System::Action_2<::Photon::Realtime::ClientState, ::Photon::Realtime::ClientState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::remove_StateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_StateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.add_EventReceived
void Photon::Realtime::LoadBalancingClient::add_EventReceived(::System::Action_1<::ExitGames::Client::Photon::EventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::add_EventReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EventReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.remove_EventReceived
void Photon::Realtime::LoadBalancingClient::remove_EventReceived(::System::Action_1<::ExitGames::Client::Photon::EventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::remove_EventReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EventReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.add_OpResponseReceived
void Photon::Realtime::LoadBalancingClient::add_OpResponseReceived(::System::Action_1<::ExitGames::Client::Photon::OperationResponse*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::add_OpResponseReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OpResponseReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.remove_OpResponseReceived
void Photon::Realtime::LoadBalancingClient::remove_OpResponseReceived(::System::Action_1<::ExitGames::Client::Photon::OperationResponse*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::remove_OpResponseReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OpResponseReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_DisconnectedCause
::Photon::Realtime::DisconnectCause Photon::Realtime::LoadBalancingClient::get_DisconnectedCause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_DisconnectedCause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisconnectedCause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::DisconnectCause, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_DisconnectedCause
void Photon::Realtime::LoadBalancingClient::set_DisconnectedCause(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_DisconnectedCause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisconnectedCause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_InLobby
bool Photon::Realtime::LoadBalancingClient::get_InLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_InLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_CurrentLobby
::Photon::Realtime::TypedLobby* Photon::Realtime::LoadBalancingClient::get_CurrentLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_CurrentLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::TypedLobby*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_CurrentLobby
void Photon::Realtime::LoadBalancingClient::set_CurrentLobby(::Photon::Realtime::TypedLobby* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_CurrentLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_LocalPlayer
::Photon::Realtime::Player* Photon::Realtime::LoadBalancingClient::get_LocalPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_LocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_LocalPlayer
void Photon::Realtime::LoadBalancingClient::set_LocalPlayer(::Photon::Realtime::Player* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_LocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_NickName
::StringW Photon::Realtime::LoadBalancingClient::get_NickName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_NickName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NickName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_NickName
void Photon::Realtime::LoadBalancingClient::set_NickName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_NickName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NickName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_UserId
::StringW Photon::Realtime::LoadBalancingClient::get_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_UserId
void Photon::Realtime::LoadBalancingClient::set_UserId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_CurrentRoom
::Photon::Realtime::Room* Photon::Realtime::LoadBalancingClient::get_CurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_CurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_CurrentRoom
void Photon::Realtime::LoadBalancingClient::set_CurrentRoom(::Photon::Realtime::Room* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_CurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_InRoom
bool Photon::Realtime::LoadBalancingClient::get_InRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_InRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_PlayersOnMasterCount
int Photon::Realtime::LoadBalancingClient::get_PlayersOnMasterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_PlayersOnMasterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayersOnMasterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_PlayersOnMasterCount
void Photon::Realtime::LoadBalancingClient::set_PlayersOnMasterCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_PlayersOnMasterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayersOnMasterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_PlayersInRoomsCount
int Photon::Realtime::LoadBalancingClient::get_PlayersInRoomsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_PlayersInRoomsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayersInRoomsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_PlayersInRoomsCount
void Photon::Realtime::LoadBalancingClient::set_PlayersInRoomsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_PlayersInRoomsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayersInRoomsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_RoomsCount
int Photon::Realtime::LoadBalancingClient::get_RoomsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_RoomsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RoomsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_RoomsCount
void Photon::Realtime::LoadBalancingClient::set_RoomsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_RoomsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RoomsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_IsFetchingFriendList
bool Photon::Realtime::LoadBalancingClient::get_IsFetchingFriendList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_IsFetchingFriendList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFetchingFriendList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_CloudRegion
::StringW Photon::Realtime::LoadBalancingClient::get_CloudRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_CloudRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CloudRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_CloudRegion
void Photon::Realtime::LoadBalancingClient::set_CloudRegion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_CloudRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CloudRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_CurrentCluster
::StringW Photon::Realtime::LoadBalancingClient::get_CurrentCluster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_CurrentCluster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentCluster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_CurrentCluster
void Photon::Realtime::LoadBalancingClient::set_CurrentCluster(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_CurrentCluster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentCluster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.GetNameServerAddress
::StringW Photon::Realtime::LoadBalancingClient::GetNameServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::GetNameServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNameServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ConnectUsingSettings
bool Photon::Realtime::LoadBalancingClient::ConnectUsingSettings(::Photon::Realtime::AppSettings* appSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ConnectUsingSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appSettings);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.Connect
bool Photon::Realtime::LoadBalancingClient::Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ConnectToMasterServer
bool Photon::Realtime::LoadBalancingClient::ConnectToMasterServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ConnectToMasterServer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ConnectToNameServer
bool Photon::Realtime::LoadBalancingClient::ConnectToNameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ConnectToNameServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToNameServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ConnectToRegionMaster
bool Photon::Realtime::LoadBalancingClient::ConnectToRegionMaster(::StringW region) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ConnectToRegionMaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToRegionMaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(region)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, region);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.CheckConnectSetupWebGl
void Photon::Realtime::LoadBalancingClient::CheckConnectSetupWebGl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CheckConnectSetupWebGl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckConnectSetupWebGl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.Connect
bool Photon::Realtime::LoadBalancingClient::Connect(::StringW serverAddress, ::StringW proxyServerAddress, ::Photon::Realtime::ServerConnection serverType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverAddress), ::il2cpp_utils::ExtractType(proxyServerAddress), ::il2cpp_utils::ExtractType(serverType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, serverAddress, proxyServerAddress, serverType);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ReconnectToMaster
bool Photon::Realtime::LoadBalancingClient::ReconnectToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ReconnectToMaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReconnectToMaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ReconnectAndRejoin
bool Photon::Realtime::LoadBalancingClient::ReconnectAndRejoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ReconnectAndRejoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReconnectAndRejoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.Disconnect
void Photon::Realtime::LoadBalancingClient::Disconnect(::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.DisconnectToReconnect
void Photon::Realtime::LoadBalancingClient::DisconnectToReconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::DisconnectToReconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectToReconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.SimulateConnectionLoss
void Photon::Realtime::LoadBalancingClient::SimulateConnectionLoss(bool simulateTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::SimulateConnectionLoss");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimulateConnectionLoss", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(simulateTimeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, simulateTimeout);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.CallAuthenticate
bool Photon::Realtime::LoadBalancingClient::CallAuthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CallAuthenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.Service
void Photon::Realtime::LoadBalancingClient::Service() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::Service");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Service", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpGetRegions
bool Photon::Realtime::LoadBalancingClient::OpGetRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpGetRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpGetRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpFindFriends
bool Photon::Realtime::LoadBalancingClient::OpFindFriends(::ArrayW<::StringW> friendsToFind, ::Photon::Realtime::FindFriendsOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpFindFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpFindFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(friendsToFind), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, friendsToFind, options);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpJoinLobby
bool Photon::Realtime::LoadBalancingClient::OpJoinLobby(::Photon::Realtime::TypedLobby* lobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpJoinLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpJoinLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobby)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lobby);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpLeaveLobby
bool Photon::Realtime::LoadBalancingClient::OpLeaveLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpLeaveLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpLeaveLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpJoinRandomRoom
bool Photon::Realtime::LoadBalancingClient::OpJoinRandomRoom(::Photon::Realtime::OpJoinRandomRoomParams* opJoinRandomRoomParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpJoinRandomRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpJoinRandomRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opJoinRandomRoomParams)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opJoinRandomRoomParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpJoinRandomOrCreateRoom
bool Photon::Realtime::LoadBalancingClient::OpJoinRandomOrCreateRoom(::Photon::Realtime::OpJoinRandomRoomParams* opJoinRandomRoomParams, ::Photon::Realtime::EnterRoomParams* createRoomParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpJoinRandomOrCreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpJoinRandomOrCreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opJoinRandomRoomParams), ::il2cpp_utils::ExtractType(createRoomParams)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opJoinRandomRoomParams, createRoomParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpCreateRoom
bool Photon::Realtime::LoadBalancingClient::OpCreateRoom(::Photon::Realtime::EnterRoomParams* enterRoomParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpCreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpCreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enterRoomParams)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, enterRoomParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpJoinOrCreateRoom
bool Photon::Realtime::LoadBalancingClient::OpJoinOrCreateRoom(::Photon::Realtime::EnterRoomParams* enterRoomParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpJoinOrCreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpJoinOrCreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enterRoomParams)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, enterRoomParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpJoinRoom
bool Photon::Realtime::LoadBalancingClient::OpJoinRoom(::Photon::Realtime::EnterRoomParams* enterRoomParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpJoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpJoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enterRoomParams)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, enterRoomParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpRejoinRoom
bool Photon::Realtime::LoadBalancingClient::OpRejoinRoom(::StringW roomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpRejoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpRejoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, roomName);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpLeaveRoom
bool Photon::Realtime::LoadBalancingClient::OpLeaveRoom(bool becomeInactive, bool sendAuthCookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpLeaveRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpLeaveRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(becomeInactive), ::il2cpp_utils::ExtractType(sendAuthCookie)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, becomeInactive, sendAuthCookie);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpGetGameList
bool Photon::Realtime::LoadBalancingClient::OpGetGameList(::Photon::Realtime::TypedLobby* typedLobby, ::StringW sqlLobbyFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpGetGameList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpGetGameList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typedLobby), ::il2cpp_utils::ExtractType(sqlLobbyFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, typedLobby, sqlLobbyFilter);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpSetCustomPropertiesOfActor
bool Photon::Realtime::LoadBalancingClient::OpSetCustomPropertiesOfActor(int actorNr, ::ExitGames::Client::Photon::Hashtable* propertiesToSet, ::ExitGames::Client::Photon::Hashtable* expectedProperties, ::Photon::Realtime::WebFlags* webFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpSetCustomPropertiesOfActor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetCustomPropertiesOfActor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNr), ::il2cpp_utils::ExtractType(propertiesToSet), ::il2cpp_utils::ExtractType(expectedProperties), ::il2cpp_utils::ExtractType(webFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, actorNr, propertiesToSet, expectedProperties, webFlags);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpSetPropertiesOfActor
bool Photon::Realtime::LoadBalancingClient::OpSetPropertiesOfActor(int actorNr, ::ExitGames::Client::Photon::Hashtable* actorProperties, ::ExitGames::Client::Photon::Hashtable* expectedProperties, ::Photon::Realtime::WebFlags* webFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpSetPropertiesOfActor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetPropertiesOfActor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNr), ::il2cpp_utils::ExtractType(actorProperties), ::il2cpp_utils::ExtractType(expectedProperties), ::il2cpp_utils::ExtractType(webFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, actorNr, actorProperties, expectedProperties, webFlags);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpSetCustomPropertiesOfRoom
bool Photon::Realtime::LoadBalancingClient::OpSetCustomPropertiesOfRoom(::ExitGames::Client::Photon::Hashtable* propertiesToSet, ::ExitGames::Client::Photon::Hashtable* expectedProperties, ::Photon::Realtime::WebFlags* webFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpSetCustomPropertiesOfRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetCustomPropertiesOfRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertiesToSet), ::il2cpp_utils::ExtractType(expectedProperties), ::il2cpp_utils::ExtractType(webFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, propertiesToSet, expectedProperties, webFlags);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpSetPropertyOfRoom
bool Photon::Realtime::LoadBalancingClient::OpSetPropertyOfRoom(uint8_t propCode, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpSetPropertyOfRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetPropertyOfRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propCode), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, propCode, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpSetPropertiesOfRoom
bool Photon::Realtime::LoadBalancingClient::OpSetPropertiesOfRoom(::ExitGames::Client::Photon::Hashtable* gameProperties, ::ExitGames::Client::Photon::Hashtable* expectedProperties, ::Photon::Realtime::WebFlags* webFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpSetPropertiesOfRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetPropertiesOfRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameProperties), ::il2cpp_utils::ExtractType(expectedProperties), ::il2cpp_utils::ExtractType(webFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameProperties, expectedProperties, webFlags);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpRaiseEvent
bool Photon::Realtime::LoadBalancingClient::OpRaiseEvent(uint8_t eventCode, ::Il2CppObject* customEventContent, ::Photon::Realtime::RaiseEventOptions* raiseEventOptions, ::ExitGames::Client::Photon::SendOptions sendOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpRaiseEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eventCode, customEventContent, raiseEventOptions, sendOptions);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpChangeGroups
bool Photon::Realtime::LoadBalancingClient::OpChangeGroups(::ArrayW<uint8_t> groupsToRemove, ::ArrayW<uint8_t> groupsToAdd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpChangeGroups");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, groupsToRemove, groupsToAdd);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ReadoutProperties
void Photon::Realtime::LoadBalancingClient::ReadoutProperties(::ExitGames::Client::Photon::Hashtable* gameProperties, ::ExitGames::Client::Photon::Hashtable* actorProperties, int targetActorNr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ReadoutProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadoutProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameProperties), ::il2cpp_utils::ExtractType(actorProperties), ::il2cpp_utils::ExtractType(targetActorNr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameProperties, actorProperties, targetActorNr);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ReadoutPropertiesForActorNr
::ExitGames::Client::Photon::Hashtable* Photon::Realtime::LoadBalancingClient::ReadoutPropertiesForActorNr(::ExitGames::Client::Photon::Hashtable* actorProperties, int actorNr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ReadoutPropertiesForActorNr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadoutPropertiesForActorNr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorProperties), ::il2cpp_utils::ExtractType(actorNr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::Hashtable*, false>(this, ___internal__method, actorProperties, actorNr);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ChangeLocalID
void Photon::Realtime::LoadBalancingClient::ChangeLocalID(int newID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ChangeLocalID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeLocalID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newID);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.GameEnteredOnGameServer
void Photon::Realtime::LoadBalancingClient::GameEnteredOnGameServer(::ExitGames::Client::Photon::OperationResponse* operationResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::GameEnteredOnGameServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GameEnteredOnGameServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operationResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, operationResponse);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.UpdatedActorList
void Photon::Realtime::LoadBalancingClient::UpdatedActorList(::ArrayW<int> actorsInGame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::UpdatedActorList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatedActorList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorsInGame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, actorsInGame);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.CreatePlayer
::Photon::Realtime::Player* Photon::Realtime::LoadBalancingClient::CreatePlayer(::StringW actorName, int actorNumber, bool isLocal, ::ExitGames::Client::Photon::Hashtable* actorProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CreatePlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method, actorName, actorNumber, isLocal, actorProperties);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.CreateRoom
::Photon::Realtime::Room* Photon::Realtime::LoadBalancingClient::CreateRoom(::StringW roomName, ::Photon::Realtime::RoomOptions* opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CreateRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Room*, false>(this, ___internal__method, roomName, opt);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.CheckIfOpAllowedOnServer
bool Photon::Realtime::LoadBalancingClient::CheckIfOpAllowedOnServer(uint8_t opCode, ::Photon::Realtime::ServerConnection serverConnection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CheckIfOpAllowedOnServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfOpAllowedOnServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opCode), ::il2cpp_utils::ExtractType(serverConnection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opCode, serverConnection);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.CheckIfOpCanBeSent
bool Photon::Realtime::LoadBalancingClient::CheckIfOpCanBeSent(uint8_t opCode, ::Photon::Realtime::ServerConnection serverConnection, ::StringW opName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CheckIfOpCanBeSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfOpCanBeSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opCode), ::il2cpp_utils::ExtractType(serverConnection), ::il2cpp_utils::ExtractType(opName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opCode, serverConnection, opName);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.CheckIfClientIsReadyToCallOperation
bool Photon::Realtime::LoadBalancingClient::CheckIfClientIsReadyToCallOperation(uint8_t opCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CheckIfClientIsReadyToCallOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfClientIsReadyToCallOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opCode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opCode);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.DebugReturn
void Photon::Realtime::LoadBalancingClient::DebugReturn(::ExitGames::Client::Photon::DebugLevel level, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::DebugReturn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, message);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.CallbackRoomEnterFailed
void Photon::Realtime::LoadBalancingClient::CallbackRoomEnterFailed(::ExitGames::Client::Photon::OperationResponse* operationResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CallbackRoomEnterFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallbackRoomEnterFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operationResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, operationResponse);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OnOperationResponse
void Photon::Realtime::LoadBalancingClient::OnOperationResponse(::ExitGames::Client::Photon::OperationResponse* operationResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OnOperationResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, operationResponse);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OnStatusChanged
void Photon::Realtime::LoadBalancingClient::OnStatusChanged(::ExitGames::Client::Photon::StatusCode statusCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OnStatusChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, statusCode);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OnEvent
void Photon::Realtime::LoadBalancingClient::OnEvent(::ExitGames::Client::Photon::EventData* photonEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OnEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, photonEvent);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OnMessage
void Photon::Realtime::LoadBalancingClient::OnMessage(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OnMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OnDisconnectMessageReceived
void Photon::Realtime::LoadBalancingClient::OnDisconnectMessageReceived(::ExitGames::Client::Photon::DisconnectMessage* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OnDisconnectMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisconnectMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OnRegionPingCompleted
void Photon::Realtime::LoadBalancingClient::OnRegionPingCompleted(::Photon::Realtime::RegionHandler* regionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OnRegionPingCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRegionPingCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(regionHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, regionHandler);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ReplacePortWithAlternative
::StringW Photon::Realtime::LoadBalancingClient::ReplacePortWithAlternative(::StringW address, uint16_t replacementPort) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ReplacePortWithAlternative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "LoadBalancingClient", "ReplacePortWithAlternative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(replacementPort)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address, replacementPort);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.SetupEncryption
void Photon::Realtime::LoadBalancingClient::SetupEncryption(::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>* encryptionData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::SetupEncryption");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupEncryption", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encryptionData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encryptionData);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpWebRpc
bool Photon::Realtime::LoadBalancingClient::OpWebRpc(::StringW uriPath, ::Il2CppObject* parameters, bool sendAuthCookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpWebRpc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpWebRpc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriPath), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(sendAuthCookie)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uriPath, parameters, sendAuthCookie);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.AddCallbackTarget
void Photon::Realtime::LoadBalancingClient::AddCallbackTarget(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::AddCallbackTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCallbackTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.RemoveCallbackTarget
void Photon::Realtime::LoadBalancingClient::RemoveCallbackTarget(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::RemoveCallbackTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCallbackTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.UpdateCallbackTargets
void Photon::Realtime::LoadBalancingClient::UpdateCallbackTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::UpdateCallbackTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCallbackTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient..cctor
void Photon::Realtime::LoadBalancingClient::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "LoadBalancingClient", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.LoadBalancingClient/EncryptionDataParameters
#include "Photon/Realtime/LoadBalancingClient_EncryptionDataParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte Mode
uint8_t Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_get_Mode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "LoadBalancingClient/EncryptionDataParameters", "Mode"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Mode
void Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_set_Mode(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_set_Mode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "LoadBalancingClient/EncryptionDataParameters", "Mode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Secret1
uint8_t Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_get_Secret1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_get_Secret1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "LoadBalancingClient/EncryptionDataParameters", "Secret1"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Secret1
void Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_set_Secret1(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_set_Secret1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "LoadBalancingClient/EncryptionDataParameters", "Secret1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Secret2
uint8_t Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_get_Secret2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_get_Secret2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "LoadBalancingClient/EncryptionDataParameters", "Secret2"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Secret2
void Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_set_Secret2(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_set_Secret2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "LoadBalancingClient/EncryptionDataParameters", "Secret2", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.LoadBalancingClient/CallbackTargetChange
#include "Photon/Realtime/LoadBalancingClient_CallbackTargetChange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Object Target
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Realtime::LoadBalancingClient::CallbackTargetChange::dyn_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CallbackTargetChange::dyn_Target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Target"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean AddTarget
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::LoadBalancingClient::CallbackTargetChange::dyn_AddTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CallbackTargetChange::dyn_AddTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AddTarget"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.IConnectionCallbacks
#include "Photon/Realtime/IConnectionCallbacks.hpp"
// Including type: Photon.Realtime.DisconnectCause
#include "Photon/Realtime/DisconnectCause.hpp"
// Including type: Photon.Realtime.RegionHandler
#include "Photon/Realtime/RegionHandler.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Realtime.IConnectionCallbacks.OnConnected
void Photon::Realtime::IConnectionCallbacks::OnConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IConnectionCallbacks::OnConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IConnectionCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.IConnectionCallbacks.OnConnectedToMaster
void Photon::Realtime::IConnectionCallbacks::OnConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IConnectionCallbacks::OnConnectedToMaster");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IConnectionCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.IConnectionCallbacks.OnDisconnected
void Photon::Realtime::IConnectionCallbacks::OnDisconnected(::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IConnectionCallbacks::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IConnectionCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: Photon.Realtime.IConnectionCallbacks.OnRegionListReceived
void Photon::Realtime::IConnectionCallbacks::OnRegionListReceived(::Photon::Realtime::RegionHandler* regionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IConnectionCallbacks::OnRegionListReceived");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IConnectionCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, regionHandler);
}
// Autogenerated method: Photon.Realtime.IConnectionCallbacks.OnCustomAuthenticationResponse
void Photon::Realtime::IConnectionCallbacks::OnCustomAuthenticationResponse(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IConnectionCallbacks::OnCustomAuthenticationResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IConnectionCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Photon.Realtime.IConnectionCallbacks.OnCustomAuthenticationFailed
void Photon::Realtime::IConnectionCallbacks::OnCustomAuthenticationFailed(::StringW debugMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IConnectionCallbacks::OnCustomAuthenticationFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IConnectionCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, debugMessage);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.ILobbyCallbacks
#include "Photon/Realtime/ILobbyCallbacks.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.RoomInfo
#include "Photon/Realtime/RoomInfo.hpp"
// Including type: Photon.Realtime.TypedLobbyInfo
#include "Photon/Realtime/TypedLobbyInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Realtime.ILobbyCallbacks.OnJoinedLobby
void Photon::Realtime::ILobbyCallbacks::OnJoinedLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ILobbyCallbacks::OnJoinedLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ILobbyCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.ILobbyCallbacks.OnLeftLobby
void Photon::Realtime::ILobbyCallbacks::OnLeftLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ILobbyCallbacks::OnLeftLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ILobbyCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.ILobbyCallbacks.OnRoomListUpdate
void Photon::Realtime::ILobbyCallbacks::OnRoomListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::RoomInfo*>* roomList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ILobbyCallbacks::OnRoomListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ILobbyCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomList);
}
// Autogenerated method: Photon.Realtime.ILobbyCallbacks.OnLobbyStatisticsUpdate
void Photon::Realtime::ILobbyCallbacks::OnLobbyStatisticsUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::TypedLobbyInfo*>* lobbyStatistics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ILobbyCallbacks::OnLobbyStatisticsUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ILobbyCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyStatistics);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.IMatchmakingCallbacks
#include "Photon/Realtime/IMatchmakingCallbacks.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Realtime.IMatchmakingCallbacks.OnFriendListUpdate
void Photon::Realtime::IMatchmakingCallbacks::OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IMatchmakingCallbacks::OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IMatchmakingCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated method: Photon.Realtime.IMatchmakingCallbacks.OnCreatedRoom
void Photon::Realtime::IMatchmakingCallbacks::OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IMatchmakingCallbacks::OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IMatchmakingCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.IMatchmakingCallbacks.OnCreateRoomFailed
void Photon::Realtime::IMatchmakingCallbacks::OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IMatchmakingCallbacks::OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IMatchmakingCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.IMatchmakingCallbacks.OnJoinedRoom
void Photon::Realtime::IMatchmakingCallbacks::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IMatchmakingCallbacks::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IMatchmakingCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.IMatchmakingCallbacks.OnJoinRoomFailed
void Photon::Realtime::IMatchmakingCallbacks::OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IMatchmakingCallbacks::OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IMatchmakingCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.IMatchmakingCallbacks.OnJoinRandomFailed
void Photon::Realtime::IMatchmakingCallbacks::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IMatchmakingCallbacks::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IMatchmakingCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.IMatchmakingCallbacks.OnLeftRoom
void Photon::Realtime::IMatchmakingCallbacks::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IMatchmakingCallbacks::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IMatchmakingCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.IMatchmakingCallbacks.OnPreLeavingRoom
void Photon::Realtime::IMatchmakingCallbacks::OnPreLeavingRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IMatchmakingCallbacks::OnPreLeavingRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IMatchmakingCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.IInRoomCallbacks
#include "Photon/Realtime/IInRoomCallbacks.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom
void Photon::Realtime::IInRoomCallbacks::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IInRoomCallbacks::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IInRoomCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom
void Photon::Realtime::IInRoomCallbacks::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IInRoomCallbacks::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IInRoomCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate
void Photon::Realtime::IInRoomCallbacks::OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IInRoomCallbacks::OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IInRoomCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate
void Photon::Realtime::IInRoomCallbacks::OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IInRoomCallbacks::OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IInRoomCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated method: Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched
void Photon::Realtime::IInRoomCallbacks::OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IInRoomCallbacks::OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IInRoomCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.IOnEventCallback
#include "Photon/Realtime/IOnEventCallback.hpp"
// Including type: ExitGames.Client.Photon.EventData
#include "ExitGames/Client/Photon/EventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Realtime.IOnEventCallback.OnEvent
void Photon::Realtime::IOnEventCallback::OnEvent(::ExitGames::Client::Photon::EventData* photonEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IOnEventCallback::OnEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IOnEventCallback*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, photonEvent);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.IWebRpcCallback
#include "Photon/Realtime/IWebRpcCallback.hpp"
// Including type: ExitGames.Client.Photon.OperationResponse
#include "ExitGames/Client/Photon/OperationResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Realtime.IWebRpcCallback.OnWebRpcResponse
void Photon::Realtime::IWebRpcCallback::OnWebRpcResponse(::ExitGames::Client::Photon::OperationResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IWebRpcCallback::OnWebRpcResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IWebRpcCallback*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.IErrorInfoCallback
#include "Photon/Realtime/IErrorInfoCallback.hpp"
// Including type: Photon.Realtime.ErrorInfo
#include "Photon/Realtime/ErrorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Realtime.IErrorInfoCallback.OnErrorInfo
void Photon::Realtime::IErrorInfoCallback::OnErrorInfo(::Photon::Realtime::ErrorInfo* errorInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IErrorInfoCallback::OnErrorInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IErrorInfoCallback*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.ConnectionCallbacksContainer
#include "Photon/Realtime/ConnectionCallbacksContainer.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Photon.Realtime.RegionHandler
#include "Photon/Realtime/RegionHandler.hpp"
// Including type: Photon.Realtime.DisconnectCause
#include "Photon/Realtime/DisconnectCause.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::ConnectionCallbacksContainer::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionCallbacksContainer::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.ConnectionCallbacksContainer.OnConnected
void Photon::Realtime::ConnectionCallbacksContainer::OnConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionCallbacksContainer::OnConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionCallbacksContainer*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.ConnectionCallbacksContainer.OnConnectedToMaster
void Photon::Realtime::ConnectionCallbacksContainer::OnConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionCallbacksContainer::OnConnectedToMaster");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionCallbacksContainer*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.ConnectionCallbacksContainer.OnRegionListReceived
void Photon::Realtime::ConnectionCallbacksContainer::OnRegionListReceived(::Photon::Realtime::RegionHandler* regionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionCallbacksContainer::OnRegionListReceived");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionCallbacksContainer*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, regionHandler);
}
// Autogenerated method: Photon.Realtime.ConnectionCallbacksContainer.OnDisconnected
void Photon::Realtime::ConnectionCallbacksContainer::OnDisconnected(::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionCallbacksContainer::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionCallbacksContainer*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: Photon.Realtime.ConnectionCallbacksContainer.OnCustomAuthenticationResponse
void Photon::Realtime::ConnectionCallbacksContainer::OnCustomAuthenticationResponse(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionCallbacksContainer::OnCustomAuthenticationResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionCallbacksContainer*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Photon.Realtime.ConnectionCallbacksContainer.OnCustomAuthenticationFailed
void Photon::Realtime::ConnectionCallbacksContainer::OnCustomAuthenticationFailed(::StringW debugMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionCallbacksContainer::OnCustomAuthenticationFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionCallbacksContainer*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, debugMessage);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.MatchMakingCallbacksContainer
#include "Photon/Realtime/MatchMakingCallbacksContainer.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::MatchMakingCallbacksContainer::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.MatchMakingCallbacksContainer.OnCreatedRoom
void Photon::Realtime::MatchMakingCallbacksContainer::OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::MatchMakingCallbacksContainer*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.MatchMakingCallbacksContainer.OnJoinedRoom
void Photon::Realtime::MatchMakingCallbacksContainer::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::MatchMakingCallbacksContainer*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.MatchMakingCallbacksContainer.OnCreateRoomFailed
void Photon::Realtime::MatchMakingCallbacksContainer::OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::MatchMakingCallbacksContainer*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.MatchMakingCallbacksContainer.OnJoinRandomFailed
void Photon::Realtime::MatchMakingCallbacksContainer::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::MatchMakingCallbacksContainer*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.MatchMakingCallbacksContainer.OnJoinRoomFailed
void Photon::Realtime::MatchMakingCallbacksContainer::OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::MatchMakingCallbacksContainer*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.MatchMakingCallbacksContainer.OnLeftRoom
void Photon::Realtime::MatchMakingCallbacksContainer::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::MatchMakingCallbacksContainer*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.MatchMakingCallbacksContainer.OnPreLeavingRoom
void Photon::Realtime::MatchMakingCallbacksContainer::OnPreLeavingRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::OnPreLeavingRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::MatchMakingCallbacksContainer*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.MatchMakingCallbacksContainer.OnFriendListUpdate
void Photon::Realtime::MatchMakingCallbacksContainer::OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::MatchMakingCallbacksContainer*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.InRoomCallbacksContainer
#include "Photon/Realtime/InRoomCallbacksContainer.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::InRoomCallbacksContainer::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::InRoomCallbacksContainer::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.InRoomCallbacksContainer.OnPlayerEnteredRoom
void Photon::Realtime::InRoomCallbacksContainer::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::InRoomCallbacksContainer::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::InRoomCallbacksContainer*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: Photon.Realtime.InRoomCallbacksContainer.OnPlayerLeftRoom
void Photon::Realtime::InRoomCallbacksContainer::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::InRoomCallbacksContainer::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::InRoomCallbacksContainer*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Photon.Realtime.InRoomCallbacksContainer.OnRoomPropertiesUpdate
void Photon::Realtime::InRoomCallbacksContainer::OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::InRoomCallbacksContainer::OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::InRoomCallbacksContainer*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: Photon.Realtime.InRoomCallbacksContainer.OnPlayerPropertiesUpdate
void Photon::Realtime::InRoomCallbacksContainer::OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::InRoomCallbacksContainer::OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::InRoomCallbacksContainer*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProp);
}
// Autogenerated method: Photon.Realtime.InRoomCallbacksContainer.OnMasterClientSwitched
void Photon::Realtime::InRoomCallbacksContainer::OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::InRoomCallbacksContainer::OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::InRoomCallbacksContainer*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.LobbyCallbacksContainer
#include "Photon/Realtime/LobbyCallbacksContainer.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Photon.Realtime.RoomInfo
#include "Photon/Realtime/RoomInfo.hpp"
// Including type: Photon.Realtime.TypedLobbyInfo
#include "Photon/Realtime/TypedLobbyInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::LobbyCallbacksContainer::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyCallbacksContainer::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.LobbyCallbacksContainer.OnJoinedLobby
void Photon::Realtime::LobbyCallbacksContainer::OnJoinedLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyCallbacksContainer::OnJoinedLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LobbyCallbacksContainer*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LobbyCallbacksContainer.OnLeftLobby
void Photon::Realtime::LobbyCallbacksContainer::OnLeftLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyCallbacksContainer::OnLeftLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LobbyCallbacksContainer*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LobbyCallbacksContainer.OnRoomListUpdate
void Photon::Realtime::LobbyCallbacksContainer::OnRoomListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::RoomInfo*>* roomList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyCallbacksContainer::OnRoomListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LobbyCallbacksContainer*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomList);
}
// Autogenerated method: Photon.Realtime.LobbyCallbacksContainer.OnLobbyStatisticsUpdate
void Photon::Realtime::LobbyCallbacksContainer::OnLobbyStatisticsUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::TypedLobbyInfo*>* lobbyStatistics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyCallbacksContainer::OnLobbyStatisticsUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LobbyCallbacksContainer*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyStatistics);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.WebRpcCallbacksContainer
#include "Photon/Realtime/WebRpcCallbacksContainer.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: ExitGames.Client.Photon.OperationResponse
#include "ExitGames/Client/Photon/OperationResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::WebRpcCallbacksContainer::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcCallbacksContainer::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.WebRpcCallbacksContainer.OnWebRpcResponse
void Photon::Realtime::WebRpcCallbacksContainer::OnWebRpcResponse(::ExitGames::Client::Photon::OperationResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcCallbacksContainer::OnWebRpcResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::WebRpcCallbacksContainer*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.ErrorInfoCallbacksContainer
#include "Photon/Realtime/ErrorInfoCallbacksContainer.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Photon.Realtime.ErrorInfo
#include "Photon/Realtime/ErrorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::ErrorInfoCallbacksContainer::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorInfoCallbacksContainer::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.ErrorInfoCallbacksContainer.OnErrorInfo
void Photon::Realtime::ErrorInfoCallbacksContainer::OnErrorInfo(::Photon::Realtime::ErrorInfo* errorInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorInfoCallbacksContainer::OnErrorInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ErrorInfoCallbacksContainer*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.ErrorInfo
#include "Photon/Realtime/ErrorInfo.hpp"
// Including type: ExitGames.Client.Photon.EventData
#include "ExitGames/Client/Photon/EventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Info
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::ErrorInfo::dyn_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorInfo::dyn_Info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Info"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.ErrorInfo.ToString
::StringW Photon::Realtime::ErrorInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.LoadBalancingPeer
#include "Photon/Realtime/LoadBalancingPeer.hpp"
// Including type: Photon.Realtime.LoadBalancingPeer/<>c
#include "Photon/Realtime/LoadBalancingPeer_--c.hpp"
// Including type: ExitGames.Client.Photon.Pool`1
#include "ExitGames/Client/Photon/Pool_1.hpp"
// Including type: ExitGames.Client.Photon.ParameterDictionary
#include "ExitGames/Client/Photon/ParameterDictionary.hpp"
// Including type: Photon.Realtime.EnterRoomParams
#include "Photon/Realtime/EnterRoomParams.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: ExitGames.Client.Photon.IPhotonPeerListener
#include "ExitGames/Client/Photon/IPhotonPeerListener.hpp"
// Including type: Photon.Realtime.TypedLobby
#include "Photon/Realtime/TypedLobby.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Photon.Realtime.RoomOptions
#include "Photon/Realtime/RoomOptions.hpp"
// Including type: Photon.Realtime.OpJoinRandomRoomParams
#include "Photon/Realtime/OpJoinRandomRoomParams.hpp"
// Including type: Photon.Realtime.FindFriendsOptions
#include "Photon/Realtime/FindFriendsOptions.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.WebFlags
#include "Photon/Realtime/WebFlags.hpp"
// Including type: Photon.Realtime.AuthenticationValues
#include "Photon/Realtime/AuthenticationValues.hpp"
// Including type: Photon.Realtime.EncryptionMode
#include "Photon/Realtime/EncryptionMode.hpp"
// Including type: Photon.Realtime.RaiseEventOptions
#include "Photon/Realtime/RaiseEventOptions.hpp"
// Including type: ExitGames.Client.Photon.SendOptions
#include "ExitGames/Client/Photon/SendOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ExitGames.Client.Photon.Pool`1<ExitGames.Client.Photon.ParameterDictionary> paramDictionaryPool
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::Pool_1<::ExitGames::Client::Photon::ParameterDictionary*>*& Photon::Realtime::LoadBalancingPeer::dyn_paramDictionaryPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::dyn_paramDictionaryPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "paramDictionaryPool"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::Pool_1<::ExitGames::Client::Photon::ParameterDictionary*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.EnterRoomParams enterRoomParams
[[deprecated("Use field access instead!")]] ::Photon::Realtime::EnterRoomParams*& Photon::Realtime::LoadBalancingPeer::dyn_enterRoomParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::dyn_enterRoomParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enterRoomParams"))->offset;
  return *reinterpret_cast<::Photon::Realtime::EnterRoomParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.get_PingImplementation
::System::Type* Photon::Realtime::LoadBalancingPeer::get_PingImplementation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::get_PingImplementation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "LoadBalancingPeer", "get_PingImplementation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.set_PingImplementation
void Photon::Realtime::LoadBalancingPeer::set_PingImplementation(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::set_PingImplementation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "LoadBalancingPeer", "set_PingImplementation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.ConfigUnitySockets
void Photon::Realtime::LoadBalancingPeer::ConfigUnitySockets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::ConfigUnitySockets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigUnitySockets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpGetRegions
bool Photon::Realtime::LoadBalancingPeer::OpGetRegions(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpGetRegions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpJoinLobby
bool Photon::Realtime::LoadBalancingPeer::OpJoinLobby(::Photon::Realtime::TypedLobby* lobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpJoinLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lobby);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpLeaveLobby
bool Photon::Realtime::LoadBalancingPeer::OpLeaveLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpLeaveLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.RoomOptionsToOpParameters
void Photon::Realtime::LoadBalancingPeer::RoomOptionsToOpParameters(::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>* op, ::Photon::Realtime::RoomOptions* roomOptions, bool usePropertiesKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::RoomOptionsToOpParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RoomOptionsToOpParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(roomOptions), ::il2cpp_utils::ExtractType(usePropertiesKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op, roomOptions, usePropertiesKey);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpCreateRoom
bool Photon::Realtime::LoadBalancingPeer::OpCreateRoom(::Photon::Realtime::EnterRoomParams* opParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpCreateRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpJoinRoom
bool Photon::Realtime::LoadBalancingPeer::OpJoinRoom(::Photon::Realtime::EnterRoomParams* opParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpJoinRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpJoinRandomRoom
bool Photon::Realtime::LoadBalancingPeer::OpJoinRandomRoom(::Photon::Realtime::OpJoinRandomRoomParams* opJoinRandomRoomParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpJoinRandomRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opJoinRandomRoomParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpJoinRandomOrCreateRoom
bool Photon::Realtime::LoadBalancingPeer::OpJoinRandomOrCreateRoom(::Photon::Realtime::OpJoinRandomRoomParams* opJoinRandomRoomParams, ::Photon::Realtime::EnterRoomParams* createRoomParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpJoinRandomOrCreateRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opJoinRandomRoomParams, createRoomParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpLeaveRoom
bool Photon::Realtime::LoadBalancingPeer::OpLeaveRoom(bool becomeInactive, bool sendAuthCookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpLeaveRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, becomeInactive, sendAuthCookie);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpGetGameList
bool Photon::Realtime::LoadBalancingPeer::OpGetGameList(::Photon::Realtime::TypedLobby* lobby, ::StringW queryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpGetGameList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lobby, queryData);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpFindFriends
bool Photon::Realtime::LoadBalancingPeer::OpFindFriends(::ArrayW<::StringW> friendsToFind, ::Photon::Realtime::FindFriendsOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpFindFriends");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, friendsToFind, options);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpSetCustomPropertiesOfActor
bool Photon::Realtime::LoadBalancingPeer::OpSetCustomPropertiesOfActor(int actorNr, ::ExitGames::Client::Photon::Hashtable* actorProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpSetCustomPropertiesOfActor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetCustomPropertiesOfActor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNr), ::il2cpp_utils::ExtractType(actorProperties)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, actorNr, actorProperties);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpSetPropertiesOfActor
bool Photon::Realtime::LoadBalancingPeer::OpSetPropertiesOfActor(int actorNr, ::ExitGames::Client::Photon::Hashtable* actorProperties, ::ExitGames::Client::Photon::Hashtable* expectedProperties, ::Photon::Realtime::WebFlags* webflags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpSetPropertiesOfActor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetPropertiesOfActor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNr), ::il2cpp_utils::ExtractType(actorProperties), ::il2cpp_utils::ExtractType(expectedProperties), ::il2cpp_utils::ExtractType(webflags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, actorNr, actorProperties, expectedProperties, webflags);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpSetPropertyOfRoom
bool Photon::Realtime::LoadBalancingPeer::OpSetPropertyOfRoom(uint8_t propCode, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpSetPropertyOfRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetPropertyOfRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propCode), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, propCode, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpSetCustomPropertiesOfRoom
bool Photon::Realtime::LoadBalancingPeer::OpSetCustomPropertiesOfRoom(::ExitGames::Client::Photon::Hashtable* gameProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpSetCustomPropertiesOfRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetCustomPropertiesOfRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameProperties)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameProperties);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpSetPropertiesOfRoom
bool Photon::Realtime::LoadBalancingPeer::OpSetPropertiesOfRoom(::ExitGames::Client::Photon::Hashtable* gameProperties, ::ExitGames::Client::Photon::Hashtable* expectedProperties, ::Photon::Realtime::WebFlags* webflags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpSetPropertiesOfRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetPropertiesOfRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameProperties), ::il2cpp_utils::ExtractType(expectedProperties), ::il2cpp_utils::ExtractType(webflags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameProperties, expectedProperties, webflags);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpAuthenticate
bool Photon::Realtime::LoadBalancingPeer::OpAuthenticate(::StringW appId, ::StringW appVersion, ::Photon::Realtime::AuthenticationValues* authValues, ::StringW regionCode, bool getLobbyStatistics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpAuthenticate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId, appVersion, authValues, regionCode, getLobbyStatistics);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpAuthenticateOnce
bool Photon::Realtime::LoadBalancingPeer::OpAuthenticateOnce(::StringW appId, ::StringW appVersion, ::Photon::Realtime::AuthenticationValues* authValues, ::StringW regionCode, ::Photon::Realtime::EncryptionMode encryptionMode, ::ExitGames::Client::Photon::ConnectionProtocol expectedProtocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpAuthenticateOnce");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId, appVersion, authValues, regionCode, encryptionMode, expectedProtocol);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpChangeGroups
bool Photon::Realtime::LoadBalancingPeer::OpChangeGroups(::ArrayW<uint8_t> groupsToRemove, ::ArrayW<uint8_t> groupsToAdd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpChangeGroups");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 29));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, groupsToRemove, groupsToAdd);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpRaiseEvent
bool Photon::Realtime::LoadBalancingPeer::OpRaiseEvent(uint8_t eventCode, ::Il2CppObject* customEventContent, ::Photon::Realtime::RaiseEventOptions* raiseEventOptions, ::ExitGames::Client::Photon::SendOptions sendOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpRaiseEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eventCode, customEventContent, raiseEventOptions, sendOptions);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpSettings
bool Photon::Realtime::LoadBalancingPeer::OpSettings(bool receiveLobbyStats) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, receiveLobbyStats);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.LoadBalancingPeer/<>c
#include "Photon/Realtime/LoadBalancingPeer_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: ExitGames.Client.Photon.ParameterDictionary
#include "ExitGames/Client/Photon/ParameterDictionary.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Realtime.LoadBalancingPeer/<>c <>9
::Photon::Realtime::LoadBalancingPeer::$$c* Photon::Realtime::LoadBalancingPeer::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Photon::Realtime::LoadBalancingPeer::$$c*>("Photon.Realtime", "LoadBalancingPeer/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Realtime.LoadBalancingPeer/<>c <>9
void Photon::Realtime::LoadBalancingPeer::$$c::_set_$$9(::Photon::Realtime::LoadBalancingPeer::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Realtime", "LoadBalancingPeer/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<ExitGames.Client.Photon.ParameterDictionary> <>9__4_0
::System::Func_1<::ExitGames::Client::Photon::ParameterDictionary*>* Photon::Realtime::LoadBalancingPeer::$$c::_get_$$9__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::_get_$$9__4_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::ExitGames::Client::Photon::ParameterDictionary*>*>("Photon.Realtime", "LoadBalancingPeer/<>c", "<>9__4_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<ExitGames.Client.Photon.ParameterDictionary> <>9__4_0
void Photon::Realtime::LoadBalancingPeer::$$c::_set_$$9__4_0(::System::Func_1<::ExitGames::Client::Photon::ParameterDictionary*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::_set_$$9__4_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Realtime", "LoadBalancingPeer/<>c", "<>9__4_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<ExitGames.Client.Photon.ParameterDictionary> <>9__4_1
::System::Action_1<::ExitGames::Client::Photon::ParameterDictionary*>* Photon::Realtime::LoadBalancingPeer::$$c::_get_$$9__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::_get_$$9__4_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::ExitGames::Client::Photon::ParameterDictionary*>*>("Photon.Realtime", "LoadBalancingPeer/<>c", "<>9__4_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<ExitGames.Client.Photon.ParameterDictionary> <>9__4_1
void Photon::Realtime::LoadBalancingPeer::$$c::_set_$$9__4_1(::System::Action_1<::ExitGames::Client::Photon::ParameterDictionary*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::_set_$$9__4_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Realtime", "LoadBalancingPeer/<>c", "<>9__4_1", value)));
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer/<>c..cctor
void Photon::Realtime::LoadBalancingPeer::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "LoadBalancingPeer/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer/<>c.<.ctor>b__4_0
::ExitGames::Client::Photon::ParameterDictionary* Photon::Realtime::LoadBalancingPeer::$$c::$_ctor$b__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::<.ctor>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::ParameterDictionary*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer/<>c.<.ctor>b__4_1
void Photon::Realtime::LoadBalancingPeer::$$c::$_ctor$b__4_1(::ExitGames::Client::Photon::ParameterDictionary* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::<.ctor>b__4_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.RoomOptionBit
#include "Photon/Realtime/RoomOptionBit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.RoomOptionBit CheckUserOnJoin
::Photon::Realtime::RoomOptionBit Photon::Realtime::RoomOptionBit::_get_CheckUserOnJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_get_CheckUserOnJoin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RoomOptionBit>("Photon.Realtime", "RoomOptionBit", "CheckUserOnJoin"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.RoomOptionBit CheckUserOnJoin
void Photon::Realtime::RoomOptionBit::_set_CheckUserOnJoin(::Photon::Realtime::RoomOptionBit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_set_CheckUserOnJoin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RoomOptionBit", "CheckUserOnJoin", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.RoomOptionBit DeleteCacheOnLeave
::Photon::Realtime::RoomOptionBit Photon::Realtime::RoomOptionBit::_get_DeleteCacheOnLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_get_DeleteCacheOnLeave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RoomOptionBit>("Photon.Realtime", "RoomOptionBit", "DeleteCacheOnLeave"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.RoomOptionBit DeleteCacheOnLeave
void Photon::Realtime::RoomOptionBit::_set_DeleteCacheOnLeave(::Photon::Realtime::RoomOptionBit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_set_DeleteCacheOnLeave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RoomOptionBit", "DeleteCacheOnLeave", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.RoomOptionBit SuppressRoomEvents
::Photon::Realtime::RoomOptionBit Photon::Realtime::RoomOptionBit::_get_SuppressRoomEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_get_SuppressRoomEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RoomOptionBit>("Photon.Realtime", "RoomOptionBit", "SuppressRoomEvents"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.RoomOptionBit SuppressRoomEvents
void Photon::Realtime::RoomOptionBit::_set_SuppressRoomEvents(::Photon::Realtime::RoomOptionBit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_set_SuppressRoomEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RoomOptionBit", "SuppressRoomEvents", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.RoomOptionBit PublishUserId
::Photon::Realtime::RoomOptionBit Photon::Realtime::RoomOptionBit::_get_PublishUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_get_PublishUserId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RoomOptionBit>("Photon.Realtime", "RoomOptionBit", "PublishUserId"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.RoomOptionBit PublishUserId
void Photon::Realtime::RoomOptionBit::_set_PublishUserId(::Photon::Realtime::RoomOptionBit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_set_PublishUserId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RoomOptionBit", "PublishUserId", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.RoomOptionBit DeleteNullProps
::Photon::Realtime::RoomOptionBit Photon::Realtime::RoomOptionBit::_get_DeleteNullProps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_get_DeleteNullProps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RoomOptionBit>("Photon.Realtime", "RoomOptionBit", "DeleteNullProps"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.RoomOptionBit DeleteNullProps
void Photon::Realtime::RoomOptionBit::_set_DeleteNullProps(::Photon::Realtime::RoomOptionBit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_set_DeleteNullProps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RoomOptionBit", "DeleteNullProps", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.RoomOptionBit BroadcastPropsChangeToAll
::Photon::Realtime::RoomOptionBit Photon::Realtime::RoomOptionBit::_get_BroadcastPropsChangeToAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_get_BroadcastPropsChangeToAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RoomOptionBit>("Photon.Realtime", "RoomOptionBit", "BroadcastPropsChangeToAll"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.RoomOptionBit BroadcastPropsChangeToAll
void Photon::Realtime::RoomOptionBit::_set_BroadcastPropsChangeToAll(::Photon::Realtime::RoomOptionBit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_set_BroadcastPropsChangeToAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RoomOptionBit", "BroadcastPropsChangeToAll", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.RoomOptionBit SuppressPlayerInfo
::Photon::Realtime::RoomOptionBit Photon::Realtime::RoomOptionBit::_get_SuppressPlayerInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_get_SuppressPlayerInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RoomOptionBit>("Photon.Realtime", "RoomOptionBit", "SuppressPlayerInfo"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.RoomOptionBit SuppressPlayerInfo
void Photon::Realtime::RoomOptionBit::_set_SuppressPlayerInfo(::Photon::Realtime::RoomOptionBit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_set_SuppressPlayerInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RoomOptionBit", "SuppressPlayerInfo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RoomOptionBit::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.FindFriendsOptions
#include "Photon/Realtime/FindFriendsOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean CreatedOnGs
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::FindFriendsOptions::dyn_CreatedOnGs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FindFriendsOptions::dyn_CreatedOnGs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CreatedOnGs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Visible
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::FindFriendsOptions::dyn_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FindFriendsOptions::dyn_Visible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Visible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Open
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::FindFriendsOptions::dyn_Open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FindFriendsOptions::dyn_Open");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Open"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.FindFriendsOptions.ToIntFlags
int Photon::Realtime::FindFriendsOptions::ToIntFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FindFriendsOptions::ToIntFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToIntFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.OpJoinRandomRoomParams
#include "Photon/Realtime/OpJoinRandomRoomParams.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.TypedLobby
#include "Photon/Realtime/TypedLobby.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExitGames.Client.Photon.Hashtable ExpectedCustomRoomProperties
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::Hashtable*& Photon::Realtime::OpJoinRandomRoomParams::dyn_ExpectedCustomRoomProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OpJoinRandomRoomParams::dyn_ExpectedCustomRoomProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpectedCustomRoomProperties"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte ExpectedMaxPlayers
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::OpJoinRandomRoomParams::dyn_ExpectedMaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OpJoinRandomRoomParams::dyn_ExpectedMaxPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpectedMaxPlayers"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.MatchmakingMode MatchingType
[[deprecated("Use field access instead!")]] ::Photon::Realtime::MatchmakingMode& Photon::Realtime::OpJoinRandomRoomParams::dyn_MatchingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OpJoinRandomRoomParams::dyn_MatchingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchingType"))->offset;
  return *reinterpret_cast<::Photon::Realtime::MatchmakingMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.TypedLobby TypedLobby
[[deprecated("Use field access instead!")]] ::Photon::Realtime::TypedLobby*& Photon::Realtime::OpJoinRandomRoomParams::dyn_TypedLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OpJoinRandomRoomParams::dyn_TypedLobby");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TypedLobby"))->offset;
  return *reinterpret_cast<::Photon::Realtime::TypedLobby**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SqlLobbyFilter
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::OpJoinRandomRoomParams::dyn_SqlLobbyFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OpJoinRandomRoomParams::dyn_SqlLobbyFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SqlLobbyFilter"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] ExpectedUsers
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Photon::Realtime::OpJoinRandomRoomParams::dyn_ExpectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OpJoinRandomRoomParams::dyn_ExpectedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpectedUsers"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.EnterRoomParams
#include "Photon/Realtime/EnterRoomParams.hpp"
// Including type: Photon.Realtime.RoomOptions
#include "Photon/Realtime/RoomOptions.hpp"
// Including type: Photon.Realtime.TypedLobby
#include "Photon/Realtime/TypedLobby.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String RoomName
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::EnterRoomParams::dyn_RoomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EnterRoomParams::dyn_RoomName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.RoomOptions RoomOptions
[[deprecated("Use field access instead!")]] ::Photon::Realtime::RoomOptions*& Photon::Realtime::EnterRoomParams::dyn_RoomOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EnterRoomParams::dyn_RoomOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomOptions"))->offset;
  return *reinterpret_cast<::Photon::Realtime::RoomOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.TypedLobby Lobby
[[deprecated("Use field access instead!")]] ::Photon::Realtime::TypedLobby*& Photon::Realtime::EnterRoomParams::dyn_Lobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EnterRoomParams::dyn_Lobby");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Lobby"))->offset;
  return *reinterpret_cast<::Photon::Realtime::TypedLobby**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExitGames.Client.Photon.Hashtable PlayerProperties
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::Hashtable*& Photon::Realtime::EnterRoomParams::dyn_PlayerProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EnterRoomParams::dyn_PlayerProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerProperties"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Boolean OnGameServer
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::EnterRoomParams::dyn_OnGameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EnterRoomParams::dyn_OnGameServer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnGameServer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal Photon.Realtime.JoinMode JoinMode
[[deprecated("Use field access instead!")]] ::Photon::Realtime::JoinMode& Photon::Realtime::EnterRoomParams::dyn_JoinMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EnterRoomParams::dyn_JoinMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JoinMode"))->offset;
  return *reinterpret_cast<::Photon::Realtime::JoinMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] ExpectedUsers
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Photon::Realtime::EnterRoomParams::dyn_ExpectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EnterRoomParams::dyn_ExpectedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpectedUsers"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.ErrorCode
#include "Photon/Realtime/ErrorCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 Ok
int Photon::Realtime::ErrorCode::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Ok
void Photon::Realtime::ErrorCode::_set_Ok(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OperationNotAllowedInCurrentState
int Photon::Realtime::ErrorCode::_get_OperationNotAllowedInCurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_OperationNotAllowedInCurrentState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "OperationNotAllowedInCurrentState"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OperationNotAllowedInCurrentState
void Photon::Realtime::ErrorCode::_set_OperationNotAllowedInCurrentState(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_OperationNotAllowedInCurrentState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "OperationNotAllowedInCurrentState", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InvalidOperationCode
int Photon::Realtime::ErrorCode::_get_InvalidOperationCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_InvalidOperationCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "InvalidOperationCode"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InvalidOperationCode
void Photon::Realtime::ErrorCode::_set_InvalidOperationCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_InvalidOperationCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "InvalidOperationCode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InvalidOperation
int Photon::Realtime::ErrorCode::_get_InvalidOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_InvalidOperation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "InvalidOperation"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InvalidOperation
void Photon::Realtime::ErrorCode::_set_InvalidOperation(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_InvalidOperation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "InvalidOperation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InternalServerError
int Photon::Realtime::ErrorCode::_get_InternalServerError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_InternalServerError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "InternalServerError"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InternalServerError
void Photon::Realtime::ErrorCode::_set_InternalServerError(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_InternalServerError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "InternalServerError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InvalidAuthentication
int Photon::Realtime::ErrorCode::_get_InvalidAuthentication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_InvalidAuthentication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "InvalidAuthentication"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InvalidAuthentication
void Photon::Realtime::ErrorCode::_set_InvalidAuthentication(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_InvalidAuthentication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "InvalidAuthentication", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 GameIdAlreadyExists
int Photon::Realtime::ErrorCode::_get_GameIdAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_GameIdAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "GameIdAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 GameIdAlreadyExists
void Photon::Realtime::ErrorCode::_set_GameIdAlreadyExists(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_GameIdAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "GameIdAlreadyExists", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 GameFull
int Photon::Realtime::ErrorCode::_get_GameFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_GameFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "GameFull"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 GameFull
void Photon::Realtime::ErrorCode::_set_GameFull(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_GameFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "GameFull", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 GameClosed
int Photon::Realtime::ErrorCode::_get_GameClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_GameClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "GameClosed"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 GameClosed
void Photon::Realtime::ErrorCode::_set_GameClosed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_GameClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "GameClosed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 AlreadyMatched
int Photon::Realtime::ErrorCode::_get_AlreadyMatched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_AlreadyMatched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "AlreadyMatched"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 AlreadyMatched
void Photon::Realtime::ErrorCode::_set_AlreadyMatched(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_AlreadyMatched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "AlreadyMatched", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ServerFull
int Photon::Realtime::ErrorCode::_get_ServerFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_ServerFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "ServerFull"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ServerFull
void Photon::Realtime::ErrorCode::_set_ServerFull(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_ServerFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "ServerFull", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 UserBlocked
int Photon::Realtime::ErrorCode::_get_UserBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_UserBlocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "UserBlocked"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 UserBlocked
void Photon::Realtime::ErrorCode::_set_UserBlocked(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_UserBlocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "UserBlocked", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 NoRandomMatchFound
int Photon::Realtime::ErrorCode::_get_NoRandomMatchFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_NoRandomMatchFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "NoRandomMatchFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 NoRandomMatchFound
void Photon::Realtime::ErrorCode::_set_NoRandomMatchFound(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_NoRandomMatchFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "NoRandomMatchFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 GameDoesNotExist
int Photon::Realtime::ErrorCode::_get_GameDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_GameDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "GameDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 GameDoesNotExist
void Photon::Realtime::ErrorCode::_set_GameDoesNotExist(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_GameDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "GameDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxCcuReached
int Photon::Realtime::ErrorCode::_get_MaxCcuReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_MaxCcuReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "MaxCcuReached"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxCcuReached
void Photon::Realtime::ErrorCode::_set_MaxCcuReached(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_MaxCcuReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "MaxCcuReached", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InvalidRegion
int Photon::Realtime::ErrorCode::_get_InvalidRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_InvalidRegion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "InvalidRegion"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InvalidRegion
void Photon::Realtime::ErrorCode::_set_InvalidRegion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_InvalidRegion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "InvalidRegion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 CustomAuthenticationFailed
int Photon::Realtime::ErrorCode::_get_CustomAuthenticationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_CustomAuthenticationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "CustomAuthenticationFailed"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 CustomAuthenticationFailed
void Photon::Realtime::ErrorCode::_set_CustomAuthenticationFailed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_CustomAuthenticationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "CustomAuthenticationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 AuthenticationTicketExpired
int Photon::Realtime::ErrorCode::_get_AuthenticationTicketExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_AuthenticationTicketExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "AuthenticationTicketExpired"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 AuthenticationTicketExpired
void Photon::Realtime::ErrorCode::_set_AuthenticationTicketExpired(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_AuthenticationTicketExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "AuthenticationTicketExpired", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 PluginReportedError
int Photon::Realtime::ErrorCode::_get_PluginReportedError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_PluginReportedError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "PluginReportedError"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 PluginReportedError
void Photon::Realtime::ErrorCode::_set_PluginReportedError(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_PluginReportedError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "PluginReportedError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 PluginMismatch
int Photon::Realtime::ErrorCode::_get_PluginMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_PluginMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "PluginMismatch"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 PluginMismatch
void Photon::Realtime::ErrorCode::_set_PluginMismatch(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_PluginMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "PluginMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 JoinFailedPeerAlreadyJoined
int Photon::Realtime::ErrorCode::_get_JoinFailedPeerAlreadyJoined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_JoinFailedPeerAlreadyJoined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "JoinFailedPeerAlreadyJoined"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 JoinFailedPeerAlreadyJoined
void Photon::Realtime::ErrorCode::_set_JoinFailedPeerAlreadyJoined(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_JoinFailedPeerAlreadyJoined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "JoinFailedPeerAlreadyJoined", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 JoinFailedFoundInactiveJoiner
int Photon::Realtime::ErrorCode::_get_JoinFailedFoundInactiveJoiner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_JoinFailedFoundInactiveJoiner");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "JoinFailedFoundInactiveJoiner"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 JoinFailedFoundInactiveJoiner
void Photon::Realtime::ErrorCode::_set_JoinFailedFoundInactiveJoiner(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_JoinFailedFoundInactiveJoiner");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "JoinFailedFoundInactiveJoiner", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 JoinFailedWithRejoinerNotFound
int Photon::Realtime::ErrorCode::_get_JoinFailedWithRejoinerNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_JoinFailedWithRejoinerNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "JoinFailedWithRejoinerNotFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 JoinFailedWithRejoinerNotFound
void Photon::Realtime::ErrorCode::_set_JoinFailedWithRejoinerNotFound(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_JoinFailedWithRejoinerNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "JoinFailedWithRejoinerNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 JoinFailedFoundExcludedUserId
int Photon::Realtime::ErrorCode::_get_JoinFailedFoundExcludedUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_JoinFailedFoundExcludedUserId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "JoinFailedFoundExcludedUserId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 JoinFailedFoundExcludedUserId
void Photon::Realtime::ErrorCode::_set_JoinFailedFoundExcludedUserId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_JoinFailedFoundExcludedUserId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "JoinFailedFoundExcludedUserId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 JoinFailedFoundActiveJoiner
int Photon::Realtime::ErrorCode::_get_JoinFailedFoundActiveJoiner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_JoinFailedFoundActiveJoiner");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "JoinFailedFoundActiveJoiner"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 JoinFailedFoundActiveJoiner
void Photon::Realtime::ErrorCode::_set_JoinFailedFoundActiveJoiner(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_JoinFailedFoundActiveJoiner");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "JoinFailedFoundActiveJoiner", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 HttpLimitReached
int Photon::Realtime::ErrorCode::_get_HttpLimitReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_HttpLimitReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "HttpLimitReached"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 HttpLimitReached
void Photon::Realtime::ErrorCode::_set_HttpLimitReached(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_HttpLimitReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "HttpLimitReached", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ExternalHttpCallFailed
int Photon::Realtime::ErrorCode::_get_ExternalHttpCallFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_ExternalHttpCallFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "ExternalHttpCallFailed"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ExternalHttpCallFailed
void Photon::Realtime::ErrorCode::_set_ExternalHttpCallFailed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_ExternalHttpCallFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "ExternalHttpCallFailed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OperationLimitReached
int Photon::Realtime::ErrorCode::_get_OperationLimitReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_OperationLimitReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "OperationLimitReached"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OperationLimitReached
void Photon::Realtime::ErrorCode::_set_OperationLimitReached(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_OperationLimitReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "OperationLimitReached", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SlotError
int Photon::Realtime::ErrorCode::_get_SlotError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_SlotError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "SlotError"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SlotError
void Photon::Realtime::ErrorCode::_set_SlotError(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_SlotError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "SlotError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InvalidEncryptionParameters
int Photon::Realtime::ErrorCode::_get_InvalidEncryptionParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_InvalidEncryptionParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "InvalidEncryptionParameters"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InvalidEncryptionParameters
void Photon::Realtime::ErrorCode::_set_InvalidEncryptionParameters(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_InvalidEncryptionParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "InvalidEncryptionParameters", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.ActorProperties
#include "Photon/Realtime/ActorProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte PlayerName
uint8_t Photon::Realtime::ActorProperties::_get_PlayerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ActorProperties::_get_PlayerName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ActorProperties", "PlayerName"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PlayerName
void Photon::Realtime::ActorProperties::_set_PlayerName(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ActorProperties::_set_PlayerName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ActorProperties", "PlayerName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte IsInactive
uint8_t Photon::Realtime::ActorProperties::_get_IsInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ActorProperties::_get_IsInactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ActorProperties", "IsInactive"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte IsInactive
void Photon::Realtime::ActorProperties::_set_IsInactive(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ActorProperties::_set_IsInactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ActorProperties", "IsInactive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte UserId
uint8_t Photon::Realtime::ActorProperties::_get_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ActorProperties::_get_UserId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ActorProperties", "UserId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte UserId
void Photon::Realtime::ActorProperties::_set_UserId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ActorProperties::_set_UserId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ActorProperties", "UserId", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.GamePropertyKey
#include "Photon/Realtime/GamePropertyKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte MaxPlayers
uint8_t Photon::Realtime::GamePropertyKey::_get_MaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_MaxPlayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "MaxPlayers"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MaxPlayers
void Photon::Realtime::GamePropertyKey::_set_MaxPlayers(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_MaxPlayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "MaxPlayers", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte IsVisible
uint8_t Photon::Realtime::GamePropertyKey::_get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_IsVisible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "IsVisible"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte IsVisible
void Photon::Realtime::GamePropertyKey::_set_IsVisible(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_IsVisible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "IsVisible", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte IsOpen
uint8_t Photon::Realtime::GamePropertyKey::_get_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_IsOpen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "IsOpen"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte IsOpen
void Photon::Realtime::GamePropertyKey::_set_IsOpen(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_IsOpen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "IsOpen", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PlayerCount
uint8_t Photon::Realtime::GamePropertyKey::_get_PlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_PlayerCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "PlayerCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PlayerCount
void Photon::Realtime::GamePropertyKey::_set_PlayerCount(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_PlayerCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "PlayerCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Removed
uint8_t Photon::Realtime::GamePropertyKey::_get_Removed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_Removed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "Removed"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Removed
void Photon::Realtime::GamePropertyKey::_set_Removed(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_Removed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "Removed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PropsListedInLobby
uint8_t Photon::Realtime::GamePropertyKey::_get_PropsListedInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_PropsListedInLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "PropsListedInLobby"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PropsListedInLobby
void Photon::Realtime::GamePropertyKey::_set_PropsListedInLobby(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_PropsListedInLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "PropsListedInLobby", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CleanupCacheOnLeave
uint8_t Photon::Realtime::GamePropertyKey::_get_CleanupCacheOnLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_CleanupCacheOnLeave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "CleanupCacheOnLeave"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CleanupCacheOnLeave
void Photon::Realtime::GamePropertyKey::_set_CleanupCacheOnLeave(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_CleanupCacheOnLeave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "CleanupCacheOnLeave", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte MasterClientId
uint8_t Photon::Realtime::GamePropertyKey::_get_MasterClientId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_MasterClientId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "MasterClientId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MasterClientId
void Photon::Realtime::GamePropertyKey::_set_MasterClientId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_MasterClientId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "MasterClientId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ExpectedUsers
uint8_t Photon::Realtime::GamePropertyKey::_get_ExpectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_ExpectedUsers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "ExpectedUsers"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ExpectedUsers
void Photon::Realtime::GamePropertyKey::_set_ExpectedUsers(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_ExpectedUsers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "ExpectedUsers", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PlayerTtl
uint8_t Photon::Realtime::GamePropertyKey::_get_PlayerTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_PlayerTtl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "PlayerTtl"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PlayerTtl
void Photon::Realtime::GamePropertyKey::_set_PlayerTtl(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_PlayerTtl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "PlayerTtl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte EmptyRoomTtl
uint8_t Photon::Realtime::GamePropertyKey::_get_EmptyRoomTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_EmptyRoomTtl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "EmptyRoomTtl"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte EmptyRoomTtl
void Photon::Realtime::GamePropertyKey::_set_EmptyRoomTtl(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_EmptyRoomTtl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "EmptyRoomTtl", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.EventCode
#include "Photon/Realtime/EventCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte GameList
uint8_t Photon::Realtime::EventCode::_get_GameList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_GameList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "GameList"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GameList
void Photon::Realtime::EventCode::_set_GameList(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_GameList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "GameList", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte GameListUpdate
uint8_t Photon::Realtime::EventCode::_get_GameListUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_GameListUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "GameListUpdate"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GameListUpdate
void Photon::Realtime::EventCode::_set_GameListUpdate(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_GameListUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "GameListUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte QueueState
uint8_t Photon::Realtime::EventCode::_get_QueueState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_QueueState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "QueueState"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte QueueState
void Photon::Realtime::EventCode::_set_QueueState(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_QueueState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "QueueState", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Match
uint8_t Photon::Realtime::EventCode::_get_Match() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_Match");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "Match"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Match
void Photon::Realtime::EventCode::_set_Match(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_Match");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "Match", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte AppStats
uint8_t Photon::Realtime::EventCode::_get_AppStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_AppStats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "AppStats"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AppStats
void Photon::Realtime::EventCode::_set_AppStats(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_AppStats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "AppStats", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte LobbyStats
uint8_t Photon::Realtime::EventCode::_get_LobbyStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_LobbyStats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "LobbyStats"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte LobbyStats
void Photon::Realtime::EventCode::_set_LobbyStats(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_LobbyStats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "LobbyStats", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte AzureNodeInfo
uint8_t Photon::Realtime::EventCode::_get_AzureNodeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_AzureNodeInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "AzureNodeInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AzureNodeInfo
void Photon::Realtime::EventCode::_set_AzureNodeInfo(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_AzureNodeInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "AzureNodeInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Join
uint8_t Photon::Realtime::EventCode::_get_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "Join"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Join
void Photon::Realtime::EventCode::_set_Join(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "Join", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Leave
uint8_t Photon::Realtime::EventCode::_get_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "Leave"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Leave
void Photon::Realtime::EventCode::_set_Leave(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "Leave", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PropertiesChanged
uint8_t Photon::Realtime::EventCode::_get_PropertiesChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_PropertiesChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "PropertiesChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PropertiesChanged
void Photon::Realtime::EventCode::_set_PropertiesChanged(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_PropertiesChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "PropertiesChanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SetProperties
uint8_t Photon::Realtime::EventCode::_get_SetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_SetProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "SetProperties"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SetProperties
void Photon::Realtime::EventCode::_set_SetProperties(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_SetProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "SetProperties", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ErrorInfo
uint8_t Photon::Realtime::EventCode::_get_ErrorInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_ErrorInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "ErrorInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ErrorInfo
void Photon::Realtime::EventCode::_set_ErrorInfo(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_ErrorInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "ErrorInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CacheSliceChanged
uint8_t Photon::Realtime::EventCode::_get_CacheSliceChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_CacheSliceChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "CacheSliceChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CacheSliceChanged
void Photon::Realtime::EventCode::_set_CacheSliceChanged(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_CacheSliceChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "CacheSliceChanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte AuthEvent
uint8_t Photon::Realtime::EventCode::_get_AuthEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_AuthEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "AuthEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AuthEvent
void Photon::Realtime::EventCode::_set_AuthEvent(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_AuthEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "AuthEvent", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.ParameterCode
#include "Photon/Realtime/ParameterCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte SuppressRoomEvents
uint8_t Photon::Realtime::ParameterCode::_get_SuppressRoomEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_SuppressRoomEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "SuppressRoomEvents"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SuppressRoomEvents
void Photon::Realtime::ParameterCode::_set_SuppressRoomEvents(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_SuppressRoomEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "SuppressRoomEvents", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte EmptyRoomTTL
uint8_t Photon::Realtime::ParameterCode::_get_EmptyRoomTTL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_EmptyRoomTTL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "EmptyRoomTTL"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte EmptyRoomTTL
void Photon::Realtime::ParameterCode::_set_EmptyRoomTTL(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_EmptyRoomTTL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "EmptyRoomTTL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PlayerTTL
uint8_t Photon::Realtime::ParameterCode::_get_PlayerTTL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_PlayerTTL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "PlayerTTL"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PlayerTTL
void Photon::Realtime::ParameterCode::_set_PlayerTTL(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_PlayerTTL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "PlayerTTL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte EventForward
uint8_t Photon::Realtime::ParameterCode::_get_EventForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_EventForward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "EventForward"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte EventForward
void Photon::Realtime::ParameterCode::_set_EventForward(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_EventForward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "EventForward", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte IsComingBack
uint8_t Photon::Realtime::ParameterCode::_get_IsComingBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_IsComingBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "IsComingBack"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte IsComingBack
void Photon::Realtime::ParameterCode::_set_IsComingBack(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_IsComingBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "IsComingBack", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte IsInactive
uint8_t Photon::Realtime::ParameterCode::_get_IsInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_IsInactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "IsInactive"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte IsInactive
void Photon::Realtime::ParameterCode::_set_IsInactive(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_IsInactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "IsInactive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CheckUserOnJoin
uint8_t Photon::Realtime::ParameterCode::_get_CheckUserOnJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_CheckUserOnJoin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "CheckUserOnJoin"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CheckUserOnJoin
void Photon::Realtime::ParameterCode::_set_CheckUserOnJoin(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_CheckUserOnJoin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "CheckUserOnJoin", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ExpectedValues
uint8_t Photon::Realtime::ParameterCode::_get_ExpectedValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ExpectedValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ExpectedValues"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ExpectedValues
void Photon::Realtime::ParameterCode::_set_ExpectedValues(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ExpectedValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ExpectedValues", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Address
uint8_t Photon::Realtime::ParameterCode::_get_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Address");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Address"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Address
void Photon::Realtime::ParameterCode::_set_Address(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Address");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Address", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PeerCount
uint8_t Photon::Realtime::ParameterCode::_get_PeerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_PeerCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "PeerCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PeerCount
void Photon::Realtime::ParameterCode::_set_PeerCount(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_PeerCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "PeerCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte GameCount
uint8_t Photon::Realtime::ParameterCode::_get_GameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_GameCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "GameCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GameCount
void Photon::Realtime::ParameterCode::_set_GameCount(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_GameCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "GameCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte MasterPeerCount
uint8_t Photon::Realtime::ParameterCode::_get_MasterPeerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_MasterPeerCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "MasterPeerCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MasterPeerCount
void Photon::Realtime::ParameterCode::_set_MasterPeerCount(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_MasterPeerCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "MasterPeerCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte UserId
uint8_t Photon::Realtime::ParameterCode::_get_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_UserId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "UserId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte UserId
void Photon::Realtime::ParameterCode::_set_UserId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_UserId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "UserId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ApplicationId
uint8_t Photon::Realtime::ParameterCode::_get_ApplicationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ApplicationId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ApplicationId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ApplicationId
void Photon::Realtime::ParameterCode::_set_ApplicationId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ApplicationId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ApplicationId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Position
uint8_t Photon::Realtime::ParameterCode::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Position"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Position
void Photon::Realtime::ParameterCode::_set_Position(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte MatchMakingType
uint8_t Photon::Realtime::ParameterCode::_get_MatchMakingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_MatchMakingType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "MatchMakingType"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MatchMakingType
void Photon::Realtime::ParameterCode::_set_MatchMakingType(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_MatchMakingType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "MatchMakingType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte GameList
uint8_t Photon::Realtime::ParameterCode::_get_GameList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_GameList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "GameList"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GameList
void Photon::Realtime::ParameterCode::_set_GameList(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_GameList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "GameList", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Token
uint8_t Photon::Realtime::ParameterCode::_get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Token");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Token"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Token
void Photon::Realtime::ParameterCode::_set_Token(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Token");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Token", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte AppVersion
uint8_t Photon::Realtime::ParameterCode::_get_AppVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_AppVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "AppVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AppVersion
void Photon::Realtime::ParameterCode::_set_AppVersion(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_AppVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "AppVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte AzureNodeInfo
uint8_t Photon::Realtime::ParameterCode::_get_AzureNodeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_AzureNodeInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "AzureNodeInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AzureNodeInfo
void Photon::Realtime::ParameterCode::_set_AzureNodeInfo(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_AzureNodeInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "AzureNodeInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte AzureLocalNodeId
uint8_t Photon::Realtime::ParameterCode::_get_AzureLocalNodeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_AzureLocalNodeId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "AzureLocalNodeId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AzureLocalNodeId
void Photon::Realtime::ParameterCode::_set_AzureLocalNodeId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_AzureLocalNodeId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "AzureLocalNodeId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte AzureMasterNodeId
uint8_t Photon::Realtime::ParameterCode::_get_AzureMasterNodeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_AzureMasterNodeId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "AzureMasterNodeId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AzureMasterNodeId
void Photon::Realtime::ParameterCode::_set_AzureMasterNodeId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_AzureMasterNodeId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "AzureMasterNodeId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte RoomName
uint8_t Photon::Realtime::ParameterCode::_get_RoomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_RoomName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "RoomName"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte RoomName
void Photon::Realtime::ParameterCode::_set_RoomName(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_RoomName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "RoomName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Broadcast
uint8_t Photon::Realtime::ParameterCode::_get_Broadcast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Broadcast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Broadcast"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Broadcast
void Photon::Realtime::ParameterCode::_set_Broadcast(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Broadcast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Broadcast", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ActorList
uint8_t Photon::Realtime::ParameterCode::_get_ActorList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ActorList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ActorList"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ActorList
void Photon::Realtime::ParameterCode::_set_ActorList(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ActorList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ActorList", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ActorNr
uint8_t Photon::Realtime::ParameterCode::_get_ActorNr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ActorNr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ActorNr"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ActorNr
void Photon::Realtime::ParameterCode::_set_ActorNr(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ActorNr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ActorNr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PlayerProperties
uint8_t Photon::Realtime::ParameterCode::_get_PlayerProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_PlayerProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "PlayerProperties"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PlayerProperties
void Photon::Realtime::ParameterCode::_set_PlayerProperties(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_PlayerProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "PlayerProperties", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CustomEventContent
uint8_t Photon::Realtime::ParameterCode::_get_CustomEventContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_CustomEventContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "CustomEventContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CustomEventContent
void Photon::Realtime::ParameterCode::_set_CustomEventContent(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_CustomEventContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "CustomEventContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Data
uint8_t Photon::Realtime::ParameterCode::_get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Data");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Data"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Data
void Photon::Realtime::ParameterCode::_set_Data(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Data");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Data", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Code
uint8_t Photon::Realtime::ParameterCode::_get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Code");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Code"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Code
void Photon::Realtime::ParameterCode::_set_Code(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Code");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Code", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte GameProperties
uint8_t Photon::Realtime::ParameterCode::_get_GameProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_GameProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "GameProperties"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GameProperties
void Photon::Realtime::ParameterCode::_set_GameProperties(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_GameProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "GameProperties", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Properties
uint8_t Photon::Realtime::ParameterCode::_get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Properties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Properties"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Properties
void Photon::Realtime::ParameterCode::_set_Properties(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Properties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Properties", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte TargetActorNr
uint8_t Photon::Realtime::ParameterCode::_get_TargetActorNr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_TargetActorNr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "TargetActorNr"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte TargetActorNr
void Photon::Realtime::ParameterCode::_set_TargetActorNr(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_TargetActorNr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "TargetActorNr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ReceiverGroup
uint8_t Photon::Realtime::ParameterCode::_get_ReceiverGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ReceiverGroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ReceiverGroup"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ReceiverGroup
void Photon::Realtime::ParameterCode::_set_ReceiverGroup(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ReceiverGroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ReceiverGroup", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Cache
uint8_t Photon::Realtime::ParameterCode::_get_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Cache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Cache"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Cache
void Photon::Realtime::ParameterCode::_set_Cache(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Cache", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CleanupCacheOnLeave
uint8_t Photon::Realtime::ParameterCode::_get_CleanupCacheOnLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_CleanupCacheOnLeave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "CleanupCacheOnLeave"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CleanupCacheOnLeave
void Photon::Realtime::ParameterCode::_set_CleanupCacheOnLeave(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_CleanupCacheOnLeave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "CleanupCacheOnLeave", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Group
uint8_t Photon::Realtime::ParameterCode::_get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Group");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Group"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Group
void Photon::Realtime::ParameterCode::_set_Group(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Group");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Group", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Remove
uint8_t Photon::Realtime::ParameterCode::_get_Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Remove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Remove"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Remove
void Photon::Realtime::ParameterCode::_set_Remove(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Remove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Remove", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PublishUserId
uint8_t Photon::Realtime::ParameterCode::_get_PublishUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_PublishUserId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "PublishUserId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PublishUserId
void Photon::Realtime::ParameterCode::_set_PublishUserId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_PublishUserId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "PublishUserId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Add
uint8_t Photon::Realtime::ParameterCode::_get_Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Add");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Add"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Add
void Photon::Realtime::ParameterCode::_set_Add(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Add");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Add", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Info
uint8_t Photon::Realtime::ParameterCode::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Info"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Info
void Photon::Realtime::ParameterCode::_set_Info(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ClientAuthenticationType
uint8_t Photon::Realtime::ParameterCode::_get_ClientAuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ClientAuthenticationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ClientAuthenticationType"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ClientAuthenticationType
void Photon::Realtime::ParameterCode::_set_ClientAuthenticationType(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ClientAuthenticationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ClientAuthenticationType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ClientAuthenticationParams
uint8_t Photon::Realtime::ParameterCode::_get_ClientAuthenticationParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ClientAuthenticationParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ClientAuthenticationParams"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ClientAuthenticationParams
void Photon::Realtime::ParameterCode::_set_ClientAuthenticationParams(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ClientAuthenticationParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ClientAuthenticationParams", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte JoinMode
uint8_t Photon::Realtime::ParameterCode::_get_JoinMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_JoinMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "JoinMode"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte JoinMode
void Photon::Realtime::ParameterCode::_set_JoinMode(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_JoinMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "JoinMode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ClientAuthenticationData
uint8_t Photon::Realtime::ParameterCode::_get_ClientAuthenticationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ClientAuthenticationData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ClientAuthenticationData"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ClientAuthenticationData
void Photon::Realtime::ParameterCode::_set_ClientAuthenticationData(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ClientAuthenticationData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ClientAuthenticationData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte MasterClientId
uint8_t Photon::Realtime::ParameterCode::_get_MasterClientId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_MasterClientId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "MasterClientId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MasterClientId
void Photon::Realtime::ParameterCode::_set_MasterClientId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_MasterClientId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "MasterClientId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FindFriendsRequestList
uint8_t Photon::Realtime::ParameterCode::_get_FindFriendsRequestList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_FindFriendsRequestList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "FindFriendsRequestList"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FindFriendsRequestList
void Photon::Realtime::ParameterCode::_set_FindFriendsRequestList(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_FindFriendsRequestList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "FindFriendsRequestList", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FindFriendsOptions
uint8_t Photon::Realtime::ParameterCode::_get_FindFriendsOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_FindFriendsOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "FindFriendsOptions"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FindFriendsOptions
void Photon::Realtime::ParameterCode::_set_FindFriendsOptions(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_FindFriendsOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "FindFriendsOptions", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FindFriendsResponseOnlineList
uint8_t Photon::Realtime::ParameterCode::_get_FindFriendsResponseOnlineList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_FindFriendsResponseOnlineList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "FindFriendsResponseOnlineList"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FindFriendsResponseOnlineList
void Photon::Realtime::ParameterCode::_set_FindFriendsResponseOnlineList(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_FindFriendsResponseOnlineList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "FindFriendsResponseOnlineList", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FindFriendsResponseRoomIdList
uint8_t Photon::Realtime::ParameterCode::_get_FindFriendsResponseRoomIdList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_FindFriendsResponseRoomIdList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "FindFriendsResponseRoomIdList"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FindFriendsResponseRoomIdList
void Photon::Realtime::ParameterCode::_set_FindFriendsResponseRoomIdList(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_FindFriendsResponseRoomIdList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "FindFriendsResponseRoomIdList", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte LobbyName
uint8_t Photon::Realtime::ParameterCode::_get_LobbyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_LobbyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "LobbyName"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte LobbyName
void Photon::Realtime::ParameterCode::_set_LobbyName(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_LobbyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "LobbyName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte LobbyType
uint8_t Photon::Realtime::ParameterCode::_get_LobbyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_LobbyType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "LobbyType"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte LobbyType
void Photon::Realtime::ParameterCode::_set_LobbyType(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_LobbyType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "LobbyType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte LobbyStats
uint8_t Photon::Realtime::ParameterCode::_get_LobbyStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_LobbyStats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "LobbyStats"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte LobbyStats
void Photon::Realtime::ParameterCode::_set_LobbyStats(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_LobbyStats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "LobbyStats", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Region
uint8_t Photon::Realtime::ParameterCode::_get_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Region");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Region"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Region
void Photon::Realtime::ParameterCode::_set_Region(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Region");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Region", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte UriPath
uint8_t Photon::Realtime::ParameterCode::_get_UriPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_UriPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "UriPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte UriPath
void Photon::Realtime::ParameterCode::_set_UriPath(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_UriPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "UriPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte WebRpcParameters
uint8_t Photon::Realtime::ParameterCode::_get_WebRpcParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_WebRpcParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "WebRpcParameters"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte WebRpcParameters
void Photon::Realtime::ParameterCode::_set_WebRpcParameters(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_WebRpcParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "WebRpcParameters", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte WebRpcReturnCode
uint8_t Photon::Realtime::ParameterCode::_get_WebRpcReturnCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_WebRpcReturnCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "WebRpcReturnCode"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte WebRpcReturnCode
void Photon::Realtime::ParameterCode::_set_WebRpcReturnCode(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_WebRpcReturnCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "WebRpcReturnCode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte WebRpcReturnMessage
uint8_t Photon::Realtime::ParameterCode::_get_WebRpcReturnMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_WebRpcReturnMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "WebRpcReturnMessage"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte WebRpcReturnMessage
void Photon::Realtime::ParameterCode::_set_WebRpcReturnMessage(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_WebRpcReturnMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "WebRpcReturnMessage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CacheSliceIndex
uint8_t Photon::Realtime::ParameterCode::_get_CacheSliceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_CacheSliceIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "CacheSliceIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CacheSliceIndex
void Photon::Realtime::ParameterCode::_set_CacheSliceIndex(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_CacheSliceIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "CacheSliceIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Plugins
uint8_t Photon::Realtime::ParameterCode::_get_Plugins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Plugins");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Plugins"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Plugins
void Photon::Realtime::ParameterCode::_set_Plugins(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Plugins");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Plugins", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte NickName
uint8_t Photon::Realtime::ParameterCode::_get_NickName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_NickName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "NickName"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte NickName
void Photon::Realtime::ParameterCode::_set_NickName(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_NickName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "NickName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PluginName
uint8_t Photon::Realtime::ParameterCode::_get_PluginName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_PluginName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "PluginName"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PluginName
void Photon::Realtime::ParameterCode::_set_PluginName(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_PluginName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "PluginName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PluginVersion
uint8_t Photon::Realtime::ParameterCode::_get_PluginVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_PluginVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "PluginVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PluginVersion
void Photon::Realtime::ParameterCode::_set_PluginVersion(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_PluginVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "PluginVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Cluster
uint8_t Photon::Realtime::ParameterCode::_get_Cluster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Cluster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Cluster"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Cluster
void Photon::Realtime::ParameterCode::_set_Cluster(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Cluster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Cluster", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ExpectedProtocol
uint8_t Photon::Realtime::ParameterCode::_get_ExpectedProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ExpectedProtocol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ExpectedProtocol"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ExpectedProtocol
void Photon::Realtime::ParameterCode::_set_ExpectedProtocol(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ExpectedProtocol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ExpectedProtocol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CustomInitData
uint8_t Photon::Realtime::ParameterCode::_get_CustomInitData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_CustomInitData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "CustomInitData"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CustomInitData
void Photon::Realtime::ParameterCode::_set_CustomInitData(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_CustomInitData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "CustomInitData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte EncryptionMode
uint8_t Photon::Realtime::ParameterCode::_get_EncryptionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_EncryptionMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "EncryptionMode"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte EncryptionMode
void Photon::Realtime::ParameterCode::_set_EncryptionMode(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_EncryptionMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "EncryptionMode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte EncryptionData
uint8_t Photon::Realtime::ParameterCode::_get_EncryptionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_EncryptionData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "EncryptionData"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte EncryptionData
void Photon::Realtime::ParameterCode::_set_EncryptionData(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_EncryptionData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "EncryptionData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte RoomOptionFlags
uint8_t Photon::Realtime::ParameterCode::_get_RoomOptionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_RoomOptionFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "RoomOptionFlags"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte RoomOptionFlags
void Photon::Realtime::ParameterCode::_set_RoomOptionFlags(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_RoomOptionFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "RoomOptionFlags", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.OperationCode
#include "Photon/Realtime/OperationCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte ExchangeKeysForEncryption
uint8_t Photon::Realtime::OperationCode::_get_ExchangeKeysForEncryption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_ExchangeKeysForEncryption");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "ExchangeKeysForEncryption"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ExchangeKeysForEncryption
void Photon::Realtime::OperationCode::_set_ExchangeKeysForEncryption(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_ExchangeKeysForEncryption");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "ExchangeKeysForEncryption", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Join
uint8_t Photon::Realtime::OperationCode::_get_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "Join"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Join
void Photon::Realtime::OperationCode::_set_Join(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "Join", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte AuthenticateOnce
uint8_t Photon::Realtime::OperationCode::_get_AuthenticateOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_AuthenticateOnce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "AuthenticateOnce"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AuthenticateOnce
void Photon::Realtime::OperationCode::_set_AuthenticateOnce(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_AuthenticateOnce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "AuthenticateOnce", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Authenticate
uint8_t Photon::Realtime::OperationCode::_get_Authenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_Authenticate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "Authenticate"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Authenticate
void Photon::Realtime::OperationCode::_set_Authenticate(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_Authenticate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "Authenticate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte JoinLobby
uint8_t Photon::Realtime::OperationCode::_get_JoinLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_JoinLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "JoinLobby"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte JoinLobby
void Photon::Realtime::OperationCode::_set_JoinLobby(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_JoinLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "JoinLobby", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte LeaveLobby
uint8_t Photon::Realtime::OperationCode::_get_LeaveLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_LeaveLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "LeaveLobby"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte LeaveLobby
void Photon::Realtime::OperationCode::_set_LeaveLobby(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_LeaveLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "LeaveLobby", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CreateGame
uint8_t Photon::Realtime::OperationCode::_get_CreateGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_CreateGame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "CreateGame"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CreateGame
void Photon::Realtime::OperationCode::_set_CreateGame(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_CreateGame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "CreateGame", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte JoinGame
uint8_t Photon::Realtime::OperationCode::_get_JoinGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_JoinGame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "JoinGame"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte JoinGame
void Photon::Realtime::OperationCode::_set_JoinGame(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_JoinGame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "JoinGame", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte JoinRandomGame
uint8_t Photon::Realtime::OperationCode::_get_JoinRandomGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_JoinRandomGame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "JoinRandomGame"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte JoinRandomGame
void Photon::Realtime::OperationCode::_set_JoinRandomGame(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_JoinRandomGame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "JoinRandomGame", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Leave
uint8_t Photon::Realtime::OperationCode::_get_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "Leave"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Leave
void Photon::Realtime::OperationCode::_set_Leave(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "Leave", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte RaiseEvent
uint8_t Photon::Realtime::OperationCode::_get_RaiseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_RaiseEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "RaiseEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte RaiseEvent
void Photon::Realtime::OperationCode::_set_RaiseEvent(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_RaiseEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "RaiseEvent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SetProperties
uint8_t Photon::Realtime::OperationCode::_get_SetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_SetProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "SetProperties"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SetProperties
void Photon::Realtime::OperationCode::_set_SetProperties(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_SetProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "SetProperties", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte GetProperties
uint8_t Photon::Realtime::OperationCode::_get_GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_GetProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "GetProperties"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GetProperties
void Photon::Realtime::OperationCode::_set_GetProperties(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_GetProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "GetProperties", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ChangeGroups
uint8_t Photon::Realtime::OperationCode::_get_ChangeGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_ChangeGroups");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "ChangeGroups"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ChangeGroups
void Photon::Realtime::OperationCode::_set_ChangeGroups(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_ChangeGroups");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "ChangeGroups", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FindFriends
uint8_t Photon::Realtime::OperationCode::_get_FindFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_FindFriends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "FindFriends"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FindFriends
void Photon::Realtime::OperationCode::_set_FindFriends(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_FindFriends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "FindFriends", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FindFriendsUpdate
uint8_t Photon::Realtime::OperationCode::_get_FindFriendsUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_FindFriendsUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "FindFriendsUpdate"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FindFriendsUpdate
void Photon::Realtime::OperationCode::_set_FindFriendsUpdate(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_FindFriendsUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "FindFriendsUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte GetLobbyStats
uint8_t Photon::Realtime::OperationCode::_get_GetLobbyStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_GetLobbyStats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "GetLobbyStats"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GetLobbyStats
void Photon::Realtime::OperationCode::_set_GetLobbyStats(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_GetLobbyStats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "GetLobbyStats", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte GetRegions
uint8_t Photon::Realtime::OperationCode::_get_GetRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_GetRegions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "GetRegions"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GetRegions
void Photon::Realtime::OperationCode::_set_GetRegions(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_GetRegions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "GetRegions", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte WebRpc
uint8_t Photon::Realtime::OperationCode::_get_WebRpc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_WebRpc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "WebRpc"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte WebRpc
void Photon::Realtime::OperationCode::_set_WebRpc(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_WebRpc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "WebRpc", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ServerSettings
uint8_t Photon::Realtime::OperationCode::_get_ServerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_ServerSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "ServerSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ServerSettings
void Photon::Realtime::OperationCode::_set_ServerSettings(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_ServerSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "ServerSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte GetGameList
uint8_t Photon::Realtime::OperationCode::_get_GetGameList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_GetGameList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "GetGameList"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GetGameList
void Photon::Realtime::OperationCode::_set_GetGameList(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_GetGameList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "GetGameList", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.JoinMode
#include "Photon/Realtime/JoinMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.JoinMode Default
::Photon::Realtime::JoinMode Photon::Realtime::JoinMode::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::JoinMode>("Photon.Realtime", "JoinMode", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.JoinMode Default
void Photon::Realtime::JoinMode::_set_Default(::Photon::Realtime::JoinMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "JoinMode", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.JoinMode CreateIfNotExists
::Photon::Realtime::JoinMode Photon::Realtime::JoinMode::_get_CreateIfNotExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::_get_CreateIfNotExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::JoinMode>("Photon.Realtime", "JoinMode", "CreateIfNotExists"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.JoinMode CreateIfNotExists
void Photon::Realtime::JoinMode::_set_CreateIfNotExists(::Photon::Realtime::JoinMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::_set_CreateIfNotExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "JoinMode", "CreateIfNotExists", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.JoinMode JoinOrRejoin
::Photon::Realtime::JoinMode Photon::Realtime::JoinMode::_get_JoinOrRejoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::_get_JoinOrRejoin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::JoinMode>("Photon.Realtime", "JoinMode", "JoinOrRejoin"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.JoinMode JoinOrRejoin
void Photon::Realtime::JoinMode::_set_JoinOrRejoin(::Photon::Realtime::JoinMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::_set_JoinOrRejoin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "JoinMode", "JoinOrRejoin", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.JoinMode RejoinOnly
::Photon::Realtime::JoinMode Photon::Realtime::JoinMode::_get_RejoinOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::_get_RejoinOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::JoinMode>("Photon.Realtime", "JoinMode", "RejoinOnly"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.JoinMode RejoinOnly
void Photon::Realtime::JoinMode::_set_RejoinOnly(::Photon::Realtime::JoinMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::_set_RejoinOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "JoinMode", "RejoinOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::JoinMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.MatchmakingMode
#include "Photon/Realtime/MatchmakingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.MatchmakingMode FillRoom
::Photon::Realtime::MatchmakingMode Photon::Realtime::MatchmakingMode::_get_FillRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchmakingMode::_get_FillRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::MatchmakingMode>("Photon.Realtime", "MatchmakingMode", "FillRoom"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.MatchmakingMode FillRoom
void Photon::Realtime::MatchmakingMode::_set_FillRoom(::Photon::Realtime::MatchmakingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchmakingMode::_set_FillRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "MatchmakingMode", "FillRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.MatchmakingMode SerialMatching
::Photon::Realtime::MatchmakingMode Photon::Realtime::MatchmakingMode::_get_SerialMatching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchmakingMode::_get_SerialMatching");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::MatchmakingMode>("Photon.Realtime", "MatchmakingMode", "SerialMatching"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.MatchmakingMode SerialMatching
void Photon::Realtime::MatchmakingMode::_set_SerialMatching(::Photon::Realtime::MatchmakingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchmakingMode::_set_SerialMatching");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "MatchmakingMode", "SerialMatching", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.MatchmakingMode RandomMatching
::Photon::Realtime::MatchmakingMode Photon::Realtime::MatchmakingMode::_get_RandomMatching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchmakingMode::_get_RandomMatching");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::MatchmakingMode>("Photon.Realtime", "MatchmakingMode", "RandomMatching"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.MatchmakingMode RandomMatching
void Photon::Realtime::MatchmakingMode::_set_RandomMatching(::Photon::Realtime::MatchmakingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchmakingMode::_set_RandomMatching");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "MatchmakingMode", "RandomMatching", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::MatchmakingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchmakingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.ReceiverGroup
#include "Photon/Realtime/ReceiverGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ReceiverGroup Others
::Photon::Realtime::ReceiverGroup Photon::Realtime::ReceiverGroup::_get_Others() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ReceiverGroup::_get_Others");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ReceiverGroup>("Photon.Realtime", "ReceiverGroup", "Others"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ReceiverGroup Others
void Photon::Realtime::ReceiverGroup::_set_Others(::Photon::Realtime::ReceiverGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ReceiverGroup::_set_Others");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ReceiverGroup", "Others", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ReceiverGroup All
::Photon::Realtime::ReceiverGroup Photon::Realtime::ReceiverGroup::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ReceiverGroup::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ReceiverGroup>("Photon.Realtime", "ReceiverGroup", "All"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ReceiverGroup All
void Photon::Realtime::ReceiverGroup::_set_All(::Photon::Realtime::ReceiverGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ReceiverGroup::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ReceiverGroup", "All", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ReceiverGroup MasterClient
::Photon::Realtime::ReceiverGroup Photon::Realtime::ReceiverGroup::_get_MasterClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ReceiverGroup::_get_MasterClient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ReceiverGroup>("Photon.Realtime", "ReceiverGroup", "MasterClient"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ReceiverGroup MasterClient
void Photon::Realtime::ReceiverGroup::_set_MasterClient(::Photon::Realtime::ReceiverGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ReceiverGroup::_set_MasterClient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ReceiverGroup", "MasterClient", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::ReceiverGroup::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ReceiverGroup::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.EventCaching
#include "Photon/Realtime/EventCaching.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching DoNotCache
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_DoNotCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_DoNotCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "DoNotCache"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching DoNotCache
void Photon::Realtime::EventCaching::_set_DoNotCache(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_DoNotCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "DoNotCache", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching MergeCache
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_MergeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_MergeCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "MergeCache"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching MergeCache
void Photon::Realtime::EventCaching::_set_MergeCache(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_MergeCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "MergeCache", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching ReplaceCache
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_ReplaceCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_ReplaceCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "ReplaceCache"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching ReplaceCache
void Photon::Realtime::EventCaching::_set_ReplaceCache(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_ReplaceCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "ReplaceCache", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching RemoveCache
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_RemoveCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_RemoveCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "RemoveCache"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching RemoveCache
void Photon::Realtime::EventCaching::_set_RemoveCache(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_RemoveCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "RemoveCache", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching AddToRoomCache
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_AddToRoomCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_AddToRoomCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "AddToRoomCache"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching AddToRoomCache
void Photon::Realtime::EventCaching::_set_AddToRoomCache(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_AddToRoomCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "AddToRoomCache", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching AddToRoomCacheGlobal
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_AddToRoomCacheGlobal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_AddToRoomCacheGlobal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "AddToRoomCacheGlobal"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching AddToRoomCacheGlobal
void Photon::Realtime::EventCaching::_set_AddToRoomCacheGlobal(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_AddToRoomCacheGlobal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "AddToRoomCacheGlobal", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching RemoveFromRoomCache
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_RemoveFromRoomCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_RemoveFromRoomCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "RemoveFromRoomCache"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching RemoveFromRoomCache
void Photon::Realtime::EventCaching::_set_RemoveFromRoomCache(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_RemoveFromRoomCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "RemoveFromRoomCache", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching RemoveFromRoomCacheForActorsLeft
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_RemoveFromRoomCacheForActorsLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_RemoveFromRoomCacheForActorsLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "RemoveFromRoomCacheForActorsLeft"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching RemoveFromRoomCacheForActorsLeft
void Photon::Realtime::EventCaching::_set_RemoveFromRoomCacheForActorsLeft(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_RemoveFromRoomCacheForActorsLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "RemoveFromRoomCacheForActorsLeft", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching SliceIncreaseIndex
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_SliceIncreaseIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_SliceIncreaseIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "SliceIncreaseIndex"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching SliceIncreaseIndex
void Photon::Realtime::EventCaching::_set_SliceIncreaseIndex(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_SliceIncreaseIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "SliceIncreaseIndex", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching SliceSetIndex
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_SliceSetIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_SliceSetIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "SliceSetIndex"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching SliceSetIndex
void Photon::Realtime::EventCaching::_set_SliceSetIndex(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_SliceSetIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "SliceSetIndex", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching SlicePurgeIndex
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_SlicePurgeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_SlicePurgeIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "SlicePurgeIndex"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching SlicePurgeIndex
void Photon::Realtime::EventCaching::_set_SlicePurgeIndex(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_SlicePurgeIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "SlicePurgeIndex", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching SlicePurgeUpToIndex
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_SlicePurgeUpToIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_SlicePurgeUpToIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "SlicePurgeUpToIndex"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching SlicePurgeUpToIndex
void Photon::Realtime::EventCaching::_set_SlicePurgeUpToIndex(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_SlicePurgeUpToIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "SlicePurgeUpToIndex", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::EventCaching::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.PropertyTypeFlag
#include "Photon/Realtime/PropertyTypeFlag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.PropertyTypeFlag None
::Photon::Realtime::PropertyTypeFlag Photon::Realtime::PropertyTypeFlag::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::PropertyTypeFlag>("Photon.Realtime", "PropertyTypeFlag", "None"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.PropertyTypeFlag None
void Photon::Realtime::PropertyTypeFlag::_set_None(::Photon::Realtime::PropertyTypeFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "PropertyTypeFlag", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.PropertyTypeFlag Game
::Photon::Realtime::PropertyTypeFlag Photon::Realtime::PropertyTypeFlag::_get_Game() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::_get_Game");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::PropertyTypeFlag>("Photon.Realtime", "PropertyTypeFlag", "Game"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.PropertyTypeFlag Game
void Photon::Realtime::PropertyTypeFlag::_set_Game(::Photon::Realtime::PropertyTypeFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::_set_Game");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "PropertyTypeFlag", "Game", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.PropertyTypeFlag Actor
::Photon::Realtime::PropertyTypeFlag Photon::Realtime::PropertyTypeFlag::_get_Actor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::_get_Actor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::PropertyTypeFlag>("Photon.Realtime", "PropertyTypeFlag", "Actor"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.PropertyTypeFlag Actor
void Photon::Realtime::PropertyTypeFlag::_set_Actor(::Photon::Realtime::PropertyTypeFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::_set_Actor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "PropertyTypeFlag", "Actor", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.PropertyTypeFlag GameAndActor
::Photon::Realtime::PropertyTypeFlag Photon::Realtime::PropertyTypeFlag::_get_GameAndActor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::_get_GameAndActor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::PropertyTypeFlag>("Photon.Realtime", "PropertyTypeFlag", "GameAndActor"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.PropertyTypeFlag GameAndActor
void Photon::Realtime::PropertyTypeFlag::_set_GameAndActor(::Photon::Realtime::PropertyTypeFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::_set_GameAndActor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "PropertyTypeFlag", "GameAndActor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::PropertyTypeFlag::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.RoomOptions
#include "Photon/Realtime/RoomOptions.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isVisible
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomOptions::dyn_isVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_isVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isOpen
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomOptions::dyn_isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte MaxPlayers
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::RoomOptions::dyn_MaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_MaxPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxPlayers"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PlayerTtl
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RoomOptions::dyn_PlayerTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_PlayerTtl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerTtl"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 EmptyRoomTtl
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RoomOptions::dyn_EmptyRoomTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_EmptyRoomTtl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EmptyRoomTtl"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean cleanupCacheOnLeave
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomOptions::dyn_cleanupCacheOnLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_cleanupCacheOnLeave");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cleanupCacheOnLeave"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExitGames.Client.Photon.Hashtable CustomRoomProperties
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::Hashtable*& Photon::Realtime::RoomOptions::dyn_CustomRoomProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_CustomRoomProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomRoomProperties"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] CustomRoomPropertiesForLobby
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Photon::Realtime::RoomOptions::dyn_CustomRoomPropertiesForLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_CustomRoomPropertiesForLobby");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomRoomPropertiesForLobby"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] Plugins
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Photon::Realtime::RoomOptions::dyn_Plugins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_Plugins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Plugins"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <SuppressRoomEvents>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomOptions::dyn_$SuppressRoomEvents$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_$SuppressRoomEvents$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SuppressRoomEvents>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <SuppressPlayerInfo>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomOptions::dyn_$SuppressPlayerInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_$SuppressPlayerInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SuppressPlayerInfo>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <PublishUserId>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomOptions::dyn_$PublishUserId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_$PublishUserId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PublishUserId>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <DeleteNullProperties>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomOptions::dyn_$DeleteNullProperties$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_$DeleteNullProperties$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DeleteNullProperties>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean broadcastPropsChangeToAll
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomOptions::dyn_broadcastPropsChangeToAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_broadcastPropsChangeToAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "broadcastPropsChangeToAll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.RoomOptions.get_IsVisible
bool Photon::Realtime::RoomOptions::get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::get_IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomOptions.set_IsVisible
void Photon::Realtime::RoomOptions::set_IsVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::set_IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RoomOptions.get_IsOpen
bool Photon::Realtime::RoomOptions::get_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::get_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomOptions.set_IsOpen
void Photon::Realtime::RoomOptions::set_IsOpen(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::set_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RoomOptions.get_CleanupCacheOnLeave
bool Photon::Realtime::RoomOptions::get_CleanupCacheOnLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::get_CleanupCacheOnLeave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CleanupCacheOnLeave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomOptions.set_CleanupCacheOnLeave
void Photon::Realtime::RoomOptions::set_CleanupCacheOnLeave(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::set_CleanupCacheOnLeave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CleanupCacheOnLeave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RoomOptions.get_SuppressRoomEvents
bool Photon::Realtime::RoomOptions::get_SuppressRoomEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::get_SuppressRoomEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SuppressRoomEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomOptions.set_SuppressRoomEvents
void Photon::Realtime::RoomOptions::set_SuppressRoomEvents(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::set_SuppressRoomEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SuppressRoomEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RoomOptions.get_SuppressPlayerInfo
bool Photon::Realtime::RoomOptions::get_SuppressPlayerInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::get_SuppressPlayerInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SuppressPlayerInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomOptions.set_SuppressPlayerInfo
void Photon::Realtime::RoomOptions::set_SuppressPlayerInfo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::set_SuppressPlayerInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SuppressPlayerInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RoomOptions.get_PublishUserId
bool Photon::Realtime::RoomOptions::get_PublishUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::get_PublishUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublishUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomOptions.set_PublishUserId
void Photon::Realtime::RoomOptions::set_PublishUserId(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::set_PublishUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PublishUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RoomOptions.get_DeleteNullProperties
bool Photon::Realtime::RoomOptions::get_DeleteNullProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::get_DeleteNullProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeleteNullProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomOptions.set_DeleteNullProperties
void Photon::Realtime::RoomOptions::set_DeleteNullProperties(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::set_DeleteNullProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DeleteNullProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RoomOptions.get_BroadcastPropsChangeToAll
bool Photon::Realtime::RoomOptions::get_BroadcastPropsChangeToAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::get_BroadcastPropsChangeToAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BroadcastPropsChangeToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomOptions.set_BroadcastPropsChangeToAll
void Photon::Realtime::RoomOptions::set_BroadcastPropsChangeToAll(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::set_BroadcastPropsChangeToAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BroadcastPropsChangeToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.RaiseEventOptions
#include "Photon/Realtime/RaiseEventOptions.hpp"
// Including type: Photon.Realtime.WebFlags
#include "Photon/Realtime/WebFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Realtime.RaiseEventOptions Default
::Photon::Realtime::RaiseEventOptions* Photon::Realtime::RaiseEventOptions::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Realtime", "RaiseEventOptions", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Realtime.RaiseEventOptions Default
void Photon::Realtime::RaiseEventOptions::_set_Default(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RaiseEventOptions", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.EventCaching CachingOption
[[deprecated("Use field access instead!")]] ::Photon::Realtime::EventCaching& Photon::Realtime::RaiseEventOptions::dyn_CachingOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::dyn_CachingOption");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CachingOption"))->offset;
  return *reinterpret_cast<::Photon::Realtime::EventCaching*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte InterestGroup
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::RaiseEventOptions::dyn_InterestGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::dyn_InterestGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterestGroup"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] TargetActors
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Photon::Realtime::RaiseEventOptions::dyn_TargetActors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::dyn_TargetActors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetActors"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.ReceiverGroup Receivers
[[deprecated("Use field access instead!")]] ::Photon::Realtime::ReceiverGroup& Photon::Realtime::RaiseEventOptions::dyn_Receivers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::dyn_Receivers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Receivers"))->offset;
  return *reinterpret_cast<::Photon::Realtime::ReceiverGroup*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte SequenceChannel
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::RaiseEventOptions::dyn_SequenceChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::dyn_SequenceChannel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SequenceChannel"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.WebFlags Flags
[[deprecated("Use field access instead!")]] ::Photon::Realtime::WebFlags*& Photon::Realtime::RaiseEventOptions::dyn_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::dyn_Flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Flags"))->offset;
  return *reinterpret_cast<::Photon::Realtime::WebFlags**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.RaiseEventOptions..cctor
void Photon::Realtime::RaiseEventOptions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "RaiseEventOptions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.LobbyType
#include "Photon/Realtime/LobbyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.LobbyType Default
::Photon::Realtime::LobbyType Photon::Realtime::LobbyType::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyType::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::LobbyType>("Photon.Realtime", "LobbyType", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.LobbyType Default
void Photon::Realtime::LobbyType::_set_Default(::Photon::Realtime::LobbyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyType::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "LobbyType", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.LobbyType SqlLobby
::Photon::Realtime::LobbyType Photon::Realtime::LobbyType::_get_SqlLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyType::_get_SqlLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::LobbyType>("Photon.Realtime", "LobbyType", "SqlLobby"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.LobbyType SqlLobby
void Photon::Realtime::LobbyType::_set_SqlLobby(::Photon::Realtime::LobbyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyType::_set_SqlLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "LobbyType", "SqlLobby", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.LobbyType AsyncRandomLobby
::Photon::Realtime::LobbyType Photon::Realtime::LobbyType::_get_AsyncRandomLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyType::_get_AsyncRandomLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::LobbyType>("Photon.Realtime", "LobbyType", "AsyncRandomLobby"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.LobbyType AsyncRandomLobby
void Photon::Realtime::LobbyType::_set_AsyncRandomLobby(::Photon::Realtime::LobbyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyType::_set_AsyncRandomLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "LobbyType", "AsyncRandomLobby", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::LobbyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.TypedLobby
#include "Photon/Realtime/TypedLobby.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Realtime.TypedLobby Default
::Photon::Realtime::TypedLobby* Photon::Realtime::TypedLobby::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobby::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::TypedLobby*>("Photon.Realtime", "TypedLobby", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Realtime.TypedLobby Default
void Photon::Realtime::TypedLobby::_set_Default(::Photon::Realtime::TypedLobby* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobby::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "TypedLobby", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::TypedLobby::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobby::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.LobbyType Type
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LobbyType& Photon::Realtime::TypedLobby::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobby::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LobbyType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.TypedLobby.get_IsDefault
bool Photon::Realtime::TypedLobby::get_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobby::get_IsDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.TypedLobby..cctor
void Photon::Realtime::TypedLobby::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobby::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "TypedLobby", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Realtime.TypedLobby.ToString
::StringW Photon::Realtime::TypedLobby::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobby::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.TypedLobbyInfo
#include "Photon/Realtime/TypedLobbyInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 PlayerCount
[[deprecated("Use field access instead!")]] int& Photon::Realtime::TypedLobbyInfo::dyn_PlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobbyInfo::dyn_PlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 RoomCount
[[deprecated("Use field access instead!")]] int& Photon::Realtime::TypedLobbyInfo::dyn_RoomCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobbyInfo::dyn_RoomCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.TypedLobbyInfo.ToString
::StringW Photon::Realtime::TypedLobbyInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobbyInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::TypedLobby*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.AuthModeOption
#include "Photon/Realtime/AuthModeOption.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.AuthModeOption Auth
::Photon::Realtime::AuthModeOption Photon::Realtime::AuthModeOption::_get_Auth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthModeOption::_get_Auth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::AuthModeOption>("Photon.Realtime", "AuthModeOption", "Auth"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.AuthModeOption Auth
void Photon::Realtime::AuthModeOption::_set_Auth(::Photon::Realtime::AuthModeOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthModeOption::_set_Auth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "AuthModeOption", "Auth", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.AuthModeOption AuthOnce
::Photon::Realtime::AuthModeOption Photon::Realtime::AuthModeOption::_get_AuthOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthModeOption::_get_AuthOnce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::AuthModeOption>("Photon.Realtime", "AuthModeOption", "AuthOnce"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.AuthModeOption AuthOnce
void Photon::Realtime::AuthModeOption::_set_AuthOnce(::Photon::Realtime::AuthModeOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthModeOption::_set_AuthOnce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "AuthModeOption", "AuthOnce", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.AuthModeOption AuthOnceWss
::Photon::Realtime::AuthModeOption Photon::Realtime::AuthModeOption::_get_AuthOnceWss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthModeOption::_get_AuthOnceWss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::AuthModeOption>("Photon.Realtime", "AuthModeOption", "AuthOnceWss"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.AuthModeOption AuthOnceWss
void Photon::Realtime::AuthModeOption::_set_AuthOnceWss(::Photon::Realtime::AuthModeOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthModeOption::_set_AuthOnceWss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "AuthModeOption", "AuthOnceWss", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Realtime::AuthModeOption::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthModeOption::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.CustomAuthenticationType
#include "Photon/Realtime/CustomAuthenticationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType Custom
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType Custom
void Photon::Realtime::CustomAuthenticationType::_set_Custom(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType Steam
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_Steam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_Steam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "Steam"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType Steam
void Photon::Realtime::CustomAuthenticationType::_set_Steam(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_Steam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "Steam", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType Facebook
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_Facebook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_Facebook");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "Facebook"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType Facebook
void Photon::Realtime::CustomAuthenticationType::_set_Facebook(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_Facebook");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "Facebook", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType Oculus
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_Oculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_Oculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "Oculus"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType Oculus
void Photon::Realtime::CustomAuthenticationType::_set_Oculus(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_Oculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "Oculus", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType PlayStation4
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_PlayStation4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_PlayStation4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "PlayStation4"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType PlayStation4
void Photon::Realtime::CustomAuthenticationType::_set_PlayStation4(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_PlayStation4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "PlayStation4", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType PlayStation
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_PlayStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_PlayStation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "PlayStation"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType PlayStation
void Photon::Realtime::CustomAuthenticationType::_set_PlayStation(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_PlayStation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "PlayStation", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType Xbox
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_Xbox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_Xbox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "Xbox"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType Xbox
void Photon::Realtime::CustomAuthenticationType::_set_Xbox(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_Xbox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "Xbox", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType Viveport
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_Viveport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_Viveport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "Viveport"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType Viveport
void Photon::Realtime::CustomAuthenticationType::_set_Viveport(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_Viveport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "Viveport", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType NintendoSwitch
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_NintendoSwitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_NintendoSwitch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "NintendoSwitch"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType NintendoSwitch
void Photon::Realtime::CustomAuthenticationType::_set_NintendoSwitch(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_NintendoSwitch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "NintendoSwitch", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType PlayStation5
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_PlayStation5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_PlayStation5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "PlayStation5"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType PlayStation5
void Photon::Realtime::CustomAuthenticationType::_set_PlayStation5(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_PlayStation5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "PlayStation5", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType Playstation5
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_Playstation5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_Playstation5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "Playstation5"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType Playstation5
void Photon::Realtime::CustomAuthenticationType::_set_Playstation5(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_Playstation5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "Playstation5", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType Epic
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_Epic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_Epic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "Epic"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType Epic
void Photon::Realtime::CustomAuthenticationType::_set_Epic(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_Epic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "Epic", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType FacebookGaming
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_FacebookGaming() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_FacebookGaming");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "FacebookGaming"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType FacebookGaming
void Photon::Realtime::CustomAuthenticationType::_set_FacebookGaming(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_FacebookGaming");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "FacebookGaming", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType None
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType None
void Photon::Realtime::CustomAuthenticationType::_set_None(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::CustomAuthenticationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.AuthenticationValues
#include "Photon/Realtime/AuthenticationValues.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.CustomAuthenticationType authType
[[deprecated("Use field access instead!")]] ::Photon::Realtime::CustomAuthenticationType& Photon::Realtime::AuthenticationValues::dyn_authType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::dyn_authType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authType"))->offset;
  return *reinterpret_cast<::Photon::Realtime::CustomAuthenticationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <AuthGetParameters>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::AuthenticationValues::dyn_$AuthGetParameters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::dyn_$AuthGetParameters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AuthGetParameters>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <AuthPostData>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Realtime::AuthenticationValues::dyn_$AuthPostData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::dyn_$AuthPostData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AuthPostData>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <Token>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Realtime::AuthenticationValues::dyn_$Token$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::dyn_$Token$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Token>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <UserId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::AuthenticationValues::dyn_$UserId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::dyn_$UserId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.get_AuthType
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::AuthenticationValues::get_AuthType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::get_AuthType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::CustomAuthenticationType, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.set_AuthType
void Photon::Realtime::AuthenticationValues::set_AuthType(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::set_AuthType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AuthType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.get_AuthGetParameters
::StringW Photon::Realtime::AuthenticationValues::get_AuthGetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::get_AuthGetParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthGetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.set_AuthGetParameters
void Photon::Realtime::AuthenticationValues::set_AuthGetParameters(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::set_AuthGetParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AuthGetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.get_AuthPostData
::Il2CppObject* Photon::Realtime::AuthenticationValues::get_AuthPostData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::get_AuthPostData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthPostData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.set_AuthPostData
void Photon::Realtime::AuthenticationValues::set_AuthPostData(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::set_AuthPostData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AuthPostData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.get_Token
::Il2CppObject* Photon::Realtime::AuthenticationValues::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::get_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.set_Token
void Photon::Realtime::AuthenticationValues::set_Token(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::set_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.get_UserId
::StringW Photon::Realtime::AuthenticationValues::get_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::get_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.set_UserId
void Photon::Realtime::AuthenticationValues::set_UserId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::set_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.SetAuthPostData
void Photon::Realtime::AuthenticationValues::SetAuthPostData(::StringW stringData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::SetAuthPostData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::AuthenticationValues*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stringData);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.SetAuthPostData
void Photon::Realtime::AuthenticationValues::SetAuthPostData(::ArrayW<uint8_t> byteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::SetAuthPostData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::AuthenticationValues*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byteData);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.SetAuthPostData
void Photon::Realtime::AuthenticationValues::SetAuthPostData(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* dictData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::SetAuthPostData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::AuthenticationValues*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dictData);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.AddAuthParameter
void Photon::Realtime::AuthenticationValues::AddAuthParameter(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::AddAuthParameter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::AuthenticationValues*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.CopyTo
::Photon::Realtime::AuthenticationValues* Photon::Realtime::AuthenticationValues::CopyTo(::Photon::Realtime::AuthenticationValues* copy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(copy)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::AuthenticationValues*, false>(this, ___internal__method, copy);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.ToString
::StringW Photon::Realtime::AuthenticationValues::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.PhotonPing
#include "Photon/Realtime/PhotonPing.hpp"
// Including type: System.Random
#include "System/Random.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Random RandomIdProvider
::System::Random* Photon::Realtime::PhotonPing::_get_RandomIdProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::_get_RandomIdProvider");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Random*>("Photon.Realtime", "PhotonPing", "RandomIdProvider"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Random RandomIdProvider
void Photon::Realtime::PhotonPing::_set_RandomIdProvider(::System::Random* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::_set_RandomIdProvider");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "PhotonPing", "RandomIdProvider", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String DebugString
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::PhotonPing::dyn_DebugString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::dyn_DebugString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DebugString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Successful
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::PhotonPing::dyn_Successful() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::dyn_Successful");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Successful"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Boolean GotResult
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::PhotonPing::dyn_GotResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::dyn_GotResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GotResult"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 PingLength
[[deprecated("Use field access instead!")]] int& Photon::Realtime::PhotonPing::dyn_PingLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::dyn_PingLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PingLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Byte[] PingBytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Photon::Realtime::PhotonPing::dyn_PingBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::dyn_PingBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PingBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Byte PingId
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::PhotonPing::dyn_PingId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::dyn_PingId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PingId"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.PhotonPing.StartPing
bool Photon::Realtime::PhotonPing::StartPing(::StringW ip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::StartPing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::PhotonPing*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ip);
}
// Autogenerated method: Photon.Realtime.PhotonPing.Done
bool Photon::Realtime::PhotonPing::Done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::Done");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::PhotonPing*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.PhotonPing.Dispose
void Photon::Realtime::PhotonPing::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::PhotonPing*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.PhotonPing.Init
void Photon::Realtime::PhotonPing::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.PhotonPing..cctor
void Photon::Realtime::PhotonPing::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "PhotonPing", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.PingMono
#include "Photon/Realtime/PingMono.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.Socket sock
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& Photon::Realtime::PingMono::dyn_sock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PingMono::dyn_sock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sock"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::Socket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.PingMono.StartPing
bool Photon::Realtime::PingMono::StartPing(::StringW ip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PingMono::StartPing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::PhotonPing*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ip);
}
// Autogenerated method: Photon.Realtime.PingMono.Done
bool Photon::Realtime::PingMono::Done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PingMono::Done");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::PhotonPing*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.PingMono.Dispose
void Photon::Realtime::PingMono::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PingMono::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::PhotonPing*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Realtime.Room
#include "Photon/Realtime/Room.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.WebFlags
#include "Photon/Realtime/WebFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Room <RoomReference>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Room*& Photon::Realtime::Player::dyn_$RoomReference$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_$RoomReference$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RoomReference>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 actorNumber
[[deprecated("Use field access instead!")]] int& Photon::Realtime::Player::dyn_actorNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_actorNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "actorNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsLocal
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Player::dyn_IsLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_IsLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsLocal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <HasRejoined>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Player::dyn_$HasRejoined$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_$HasRejoined$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HasRejoined>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String nickName
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::Player::dyn_nickName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_nickName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nickName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String defaultName
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::Player::dyn_defaultName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_defaultName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <UserId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::Player::dyn_$UserId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_$UserId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsInactive>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Player::dyn_$IsInactive$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_$IsInactive$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsInactive>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExitGames.Client.Photon.Hashtable <CustomProperties>k__BackingField
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::Hashtable*& Photon::Realtime::Player::dyn_$CustomProperties$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_$CustomProperties$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CustomProperties>k__BackingField"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object TagObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Realtime::Player::dyn_TagObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_TagObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TagObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.Player.get_RoomReference
::Photon::Realtime::Room* Photon::Realtime::Player::get_RoomReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_RoomReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RoomReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.set_RoomReference
void Photon::Realtime::Player::set_RoomReference(::Photon::Realtime::Room* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::set_RoomReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RoomReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Player.get_ActorNumber
int Photon::Realtime::Player::get_ActorNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_ActorNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActorNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.get_HasRejoined
bool Photon::Realtime::Player::get_HasRejoined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_HasRejoined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasRejoined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.set_HasRejoined
void Photon::Realtime::Player::set_HasRejoined(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::set_HasRejoined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasRejoined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Player.get_NickName
::StringW Photon::Realtime::Player::get_NickName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_NickName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NickName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.set_NickName
void Photon::Realtime::Player::set_NickName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::set_NickName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NickName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Player.get_DefaultName
::StringW Photon::Realtime::Player::get_DefaultName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_DefaultName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.get_UserId
::StringW Photon::Realtime::Player::get_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.set_UserId
void Photon::Realtime::Player::set_UserId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::set_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Player.get_IsMasterClient
bool Photon::Realtime::Player::get_IsMasterClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_IsMasterClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMasterClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.get_IsInactive
bool Photon::Realtime::Player::get_IsInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_IsInactive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.set_IsInactive
void Photon::Realtime::Player::set_IsInactive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::set_IsInactive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsInactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Player.get_CustomProperties
::ExitGames::Client::Photon::Hashtable* Photon::Realtime::Player::get_CustomProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_CustomProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::Hashtable*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.set_CustomProperties
void Photon::Realtime::Player::set_CustomProperties(::ExitGames::Client::Photon::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::set_CustomProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CustomProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Player.Get
::Photon::Realtime::Player* Photon::Realtime::Player::Get(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method, id);
}
// Autogenerated method: Photon.Realtime.Player.GetNext
::Photon::Realtime::Player* Photon::Realtime::Player::GetNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::GetNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.GetNextFor
::Photon::Realtime::Player* Photon::Realtime::Player::GetNextFor(::Photon::Realtime::Player* currentPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::GetNextFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method, currentPlayer);
}
// Autogenerated method: Photon.Realtime.Player.GetNextFor
::Photon::Realtime::Player* Photon::Realtime::Player::GetNextFor(int currentPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::GetNextFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPlayerId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method, currentPlayerId);
}
// Autogenerated method: Photon.Realtime.Player.InternalCacheProperties
void Photon::Realtime::Player::InternalCacheProperties(::ExitGames::Client::Photon::Hashtable* properties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::InternalCacheProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::Player*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, properties);
}
// Autogenerated method: Photon.Realtime.Player.ToStringFull
::StringW Photon::Realtime::Player::ToStringFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::ToStringFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.ChangeLocalID
void Photon::Realtime::Player::ChangeLocalID(int newID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::ChangeLocalID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeLocalID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newID);
}
// Autogenerated method: Photon.Realtime.Player.SetCustomProperties
bool Photon::Realtime::Player::SetCustomProperties(::ExitGames::Client::Photon::Hashtable* propertiesToSet, ::ExitGames::Client::Photon::Hashtable* expectedValues, ::Photon::Realtime::WebFlags* webFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::SetCustomProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCustomProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertiesToSet), ::il2cpp_utils::ExtractType(expectedValues), ::il2cpp_utils::ExtractType(webFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, propertiesToSet, expectedValues, webFlags);
}
// Autogenerated method: Photon.Realtime.Player.SetPlayerNameProperty
bool Photon::Realtime::Player::SetPlayerNameProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::SetPlayerNameProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerNameProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.ToString
::StringW Photon::Realtime::Player::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.Equals
bool Photon::Realtime::Player::Equals(::Il2CppObject* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: Photon.Realtime.Player.GetHashCode
int Photon::Realtime::Player::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.Region
#include "Photon/Realtime/Region.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Code>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::Region::dyn_$Code$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::dyn_$Code$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Code>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Cluster>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::Region::dyn_$Cluster$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::dyn_$Cluster$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Cluster>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <HostAndPort>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::Region::dyn_$HostAndPort$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::dyn_$HostAndPort$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HostAndPort>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Ping>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Realtime::Region::dyn_$Ping$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::dyn_$Ping$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Ping>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.Region.get_Code
::StringW Photon::Realtime::Region::get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::get_Code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Region.set_Code
void Photon::Realtime::Region::set_Code(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::set_Code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Region.get_Cluster
::StringW Photon::Realtime::Region::get_Cluster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::get_Cluster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cluster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Region.set_Cluster
void Photon::Realtime::Region::set_Cluster(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::set_Cluster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Cluster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Region.get_HostAndPort
::StringW Photon::Realtime::Region::get_HostAndPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::get_HostAndPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HostAndPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Region.set_HostAndPort
void Photon::Realtime::Region::set_HostAndPort(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::set_HostAndPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HostAndPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Region.get_Ping
int Photon::Realtime::Region::get_Ping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::get_Ping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Region.set_Ping
void Photon::Realtime::Region::set_Ping(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::set_Ping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Ping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Region.get_WasPinged
bool Photon::Realtime::Region::get_WasPinged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::get_WasPinged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WasPinged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Region.SetCodeAndCluster
void Photon::Realtime::Region::SetCodeAndCluster(::StringW codeAsString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::SetCodeAndCluster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCodeAndCluster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codeAsString)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, codeAsString);
}
// Autogenerated method: Photon.Realtime.Region.ToString
::StringW Photon::Realtime::Region::ToString(bool compact) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compact)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, compact);
}
// Autogenerated method: Photon.Realtime.Region.ToString
::StringW Photon::Realtime::Region::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.RegionHandler
#include "Photon/Realtime/RegionHandler.hpp"
// Including type: Photon.Realtime.RegionHandler/<>c
#include "Photon/Realtime/RegionHandler_--c.hpp"
// Including type: Photon.Realtime.RegionHandler/<>c__DisplayClass23_0
#include "Photon/Realtime/RegionHandler_--c__DisplayClass23_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.Region
#include "Photon/Realtime/Region.hpp"
// Including type: Photon.Realtime.RegionPinger
#include "Photon/Realtime/RegionPinger.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: ExitGames.Client.Photon.OperationResponse
#include "ExitGames/Client/Photon/OperationResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Type PingImplementation
::System::Type* Photon::Realtime::RegionHandler::_get_PingImplementation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::_get_PingImplementation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("Photon.Realtime", "RegionHandler", "PingImplementation"));
}
// Autogenerated static field setter
// Set static field: static public System.Type PingImplementation
void Photon::Realtime::RegionHandler::_set_PingImplementation(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::_set_PingImplementation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RegionHandler", "PingImplementation", value));
}
// Autogenerated static field getter
// Get static field: static protected internal System.UInt16 PortToPingOverride
uint16_t Photon::Realtime::RegionHandler::_get_PortToPingOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::_get_PortToPingOverride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint16_t>("Photon.Realtime", "RegionHandler", "PortToPingOverride"));
}
// Autogenerated static field setter
// Set static field: static protected internal System.UInt16 PortToPingOverride
void Photon::Realtime::RegionHandler::_set_PortToPingOverride(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::_set_PortToPingOverride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RegionHandler", "PortToPingOverride", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Realtime.Region> <EnabledRegions>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Realtime::Region*>*& Photon::Realtime::RegionHandler::dyn_$EnabledRegions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::dyn_$EnabledRegions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EnabledRegions>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Realtime::Region*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String availableRegionCodes
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::RegionHandler::dyn_availableRegionCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::dyn_availableRegionCodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "availableRegionCodes"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Region bestRegionCache
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Region*& Photon::Realtime::RegionHandler::dyn_bestRegionCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::dyn_bestRegionCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bestRegionCache"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Region**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Realtime.RegionPinger> pingerList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Realtime::RegionPinger*>*& Photon::Realtime::RegionHandler::dyn_pingerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::dyn_pingerList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pingerList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Realtime::RegionPinger*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Photon.Realtime.RegionHandler> onCompleteCall
[[deprecated("Use field access instead!")]] ::System::Action_1<::Photon::Realtime::RegionHandler*>*& Photon::Realtime::RegionHandler::dyn_onCompleteCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::dyn_onCompleteCall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onCompleteCall"))->offset;
  return *reinterpret_cast<::System::Action_1<::Photon::Realtime::RegionHandler*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 previousPing
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RegionHandler::dyn_previousPing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::dyn_previousPing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousPing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsPinging>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RegionHandler::dyn_$IsPinging$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::dyn_$IsPinging$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsPinging>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String previousSummaryProvided
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::RegionHandler::dyn_previousSummaryProvided() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::dyn_previousSummaryProvided");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousSummaryProvided"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.RegionHandler.get_EnabledRegions
::System::Collections::Generic::List_1<::Photon::Realtime::Region*>* Photon::Realtime::RegionHandler::get_EnabledRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::get_EnabledRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnabledRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Photon::Realtime::Region*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionHandler.set_EnabledRegions
void Photon::Realtime::RegionHandler::set_EnabledRegions(::System::Collections::Generic::List_1<::Photon::Realtime::Region*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::set_EnabledRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnabledRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RegionHandler.get_BestRegion
::Photon::Realtime::Region* Photon::Realtime::RegionHandler::get_BestRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::get_BestRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BestRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Region*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionHandler.get_SummaryToCache
::StringW Photon::Realtime::RegionHandler::get_SummaryToCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::get_SummaryToCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SummaryToCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionHandler.GetResults
::StringW Photon::Realtime::RegionHandler::GetResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::GetResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionHandler.SetRegions
void Photon::Realtime::RegionHandler::SetRegions(::ExitGames::Client::Photon::OperationResponse* opGetRegions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::SetRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opGetRegions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, opGetRegions);
}
// Autogenerated method: Photon.Realtime.RegionHandler.get_IsPinging
bool Photon::Realtime::RegionHandler::get_IsPinging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::get_IsPinging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPinging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionHandler.set_IsPinging
void Photon::Realtime::RegionHandler::set_IsPinging(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::set_IsPinging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPinging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RegionHandler.PingMinimumOfRegions
bool Photon::Realtime::RegionHandler::PingMinimumOfRegions(::System::Action_1<::Photon::Realtime::RegionHandler*>* onCompleteCallback, ::StringW previousSummary) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::PingMinimumOfRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PingMinimumOfRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onCompleteCallback), ::il2cpp_utils::ExtractType(previousSummary)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, onCompleteCallback, previousSummary);
}
// Autogenerated method: Photon.Realtime.RegionHandler.OnPreferredRegionPinged
void Photon::Realtime::RegionHandler::OnPreferredRegionPinged(::Photon::Realtime::Region* preferredRegion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::OnPreferredRegionPinged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreferredRegionPinged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(preferredRegion)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, preferredRegion);
}
// Autogenerated method: Photon.Realtime.RegionHandler.PingEnabledRegions
bool Photon::Realtime::RegionHandler::PingEnabledRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::PingEnabledRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PingEnabledRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionHandler.OnRegionDone
void Photon::Realtime::RegionHandler::OnRegionDone(::Photon::Realtime::Region* region) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::OnRegionDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRegionDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(region)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, region);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.RegionHandler/<>c
#include "Photon/Realtime/RegionHandler_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: Photon.Realtime.Region
#include "Photon/Realtime/Region.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Realtime.RegionHandler/<>c <>9
::Photon::Realtime::RegionHandler::$$c* Photon::Realtime::RegionHandler::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Photon::Realtime::RegionHandler::$$c*>("Photon.Realtime", "RegionHandler/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Realtime.RegionHandler/<>c <>9
void Photon::Realtime::RegionHandler::$$c::_set_$$9(::Photon::Realtime::RegionHandler::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Realtime", "RegionHandler/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<Photon.Realtime.Region> <>9__8_0
::System::Comparison_1<::Photon::Realtime::Region*>* Photon::Realtime::RegionHandler::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::Photon::Realtime::Region*>*>("Photon.Realtime", "RegionHandler/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<Photon.Realtime.Region> <>9__8_0
void Photon::Realtime::RegionHandler::$$c::_set_$$9__8_0(::System::Comparison_1<::Photon::Realtime::Region*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Realtime", "RegionHandler/<>c", "<>9__8_0", value)));
}
// Autogenerated method: Photon.Realtime.RegionHandler/<>c..cctor
void Photon::Realtime::RegionHandler::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "RegionHandler/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionHandler/<>c.<get_BestRegion>b__8_0
int Photon::Realtime::RegionHandler::$$c::$get_BestRegion$b__8_0(::Photon::Realtime::Region* a, ::Photon::Realtime::Region* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::$$c::<get_BestRegion>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_BestRegion>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.RegionHandler/<>c__DisplayClass23_0
#include "Photon/Realtime/RegionHandler_--c__DisplayClass23_0.hpp"
// Including type: Photon.Realtime.Region
#include "Photon/Realtime/Region.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String prevBestRegionCode
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::RegionHandler::$$c__DisplayClass23_0::dyn_prevBestRegionCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::$$c__DisplayClass23_0::dyn_prevBestRegionCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevBestRegionCode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.RegionHandler/<>c__DisplayClass23_0.<PingMinimumOfRegions>b__0
bool Photon::Realtime::RegionHandler::$$c__DisplayClass23_0::$PingMinimumOfRegions$b__0(::Photon::Realtime::Region* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::$$c__DisplayClass23_0::<PingMinimumOfRegions>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PingMinimumOfRegions>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, r);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.RegionPinger
#include "Photon/Realtime/RegionPinger.hpp"
// Including type: Photon.Realtime.RegionPinger/<RegionPingCoroutine>d__19
#include "Photon/Realtime/RegionPinger_-RegionPingCoroutine-d__19.hpp"
// Including type: Photon.Realtime.Region
#include "Photon/Realtime/Region.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Photon.Realtime.PhotonPing
#include "Photon/Realtime/PhotonPing.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 Attempts
int Photon::Realtime::RegionPinger::_get_Attempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::_get_Attempts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "RegionPinger", "Attempts"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Attempts
void Photon::Realtime::RegionPinger::_set_Attempts(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::_set_Attempts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RegionPinger", "Attempts", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean IgnoreInitialAttempt
bool Photon::Realtime::RegionPinger::_get_IgnoreInitialAttempt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::_get_IgnoreInitialAttempt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Realtime", "RegionPinger", "IgnoreInitialAttempt"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean IgnoreInitialAttempt
void Photon::Realtime::RegionPinger::_set_IgnoreInitialAttempt(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::_set_IgnoreInitialAttempt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RegionPinger", "IgnoreInitialAttempt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxMilliseconsPerPing
int Photon::Realtime::RegionPinger::_get_MaxMilliseconsPerPing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::_get_MaxMilliseconsPerPing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "RegionPinger", "MaxMilliseconsPerPing"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxMilliseconsPerPing
void Photon::Realtime::RegionPinger::_set_MaxMilliseconsPerPing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::_set_MaxMilliseconsPerPing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RegionPinger", "MaxMilliseconsPerPing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 PingWhenFailed
int Photon::Realtime::RegionPinger::_get_PingWhenFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::_get_PingWhenFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "RegionPinger", "PingWhenFailed"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 PingWhenFailed
void Photon::Realtime::RegionPinger::_set_PingWhenFailed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::_set_PingWhenFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RegionPinger", "PingWhenFailed", value));
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Region region
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Region*& Photon::Realtime::RegionPinger::dyn_region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::dyn_region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "region"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Region**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String regionAddress
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::RegionPinger::dyn_regionAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::dyn_regionAddress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "regionAddress"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CurrentAttempt
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RegionPinger::dyn_CurrentAttempt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::dyn_CurrentAttempt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentAttempt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Done>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RegionPinger::dyn_$Done$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::dyn_$Done$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Done>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Photon.Realtime.Region> onDoneCall
[[deprecated("Use field access instead!")]] ::System::Action_1<::Photon::Realtime::Region*>*& Photon::Realtime::RegionPinger::dyn_onDoneCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::dyn_onDoneCall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDoneCall"))->offset;
  return *reinterpret_cast<::System::Action_1<::Photon::Realtime::Region*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.PhotonPing ping
[[deprecated("Use field access instead!")]] ::Photon::Realtime::PhotonPing*& Photon::Realtime::RegionPinger::dyn_ping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::dyn_ping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ping"))->offset;
  return *reinterpret_cast<::Photon::Realtime::PhotonPing**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> rttResults
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Photon::Realtime::RegionPinger::dyn_rttResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::dyn_rttResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rttResults"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.RegionPinger.get_Done
bool Photon::Realtime::RegionPinger::get_Done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::get_Done");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Done", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger.set_Done
void Photon::Realtime::RegionPinger::set_Done(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::set_Done");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Done", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RegionPinger.GetPingImplementation
::Photon::Realtime::PhotonPing* Photon::Realtime::RegionPinger::GetPingImplementation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::GetPingImplementation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPingImplementation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::PhotonPing*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger.Start
bool Photon::Realtime::RegionPinger::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger.RegionPingPooled
void Photon::Realtime::RegionPinger::RegionPingPooled(::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::RegionPingPooled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegionPingPooled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: Photon.Realtime.RegionPinger.RegionPingThreaded
bool Photon::Realtime::RegionPinger::RegionPingThreaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::RegionPingThreaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegionPingThreaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger.RegionPingCoroutine
::System::Collections::IEnumerator* Photon::Realtime::RegionPinger::RegionPingCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::RegionPingCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegionPingCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger.GetResults
::StringW Photon::Realtime::RegionPinger::GetResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::GetResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger.ResolveHost
::StringW Photon::Realtime::RegionPinger::ResolveHost(::StringW hostName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::ResolveHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "RegionPinger", "ResolveHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostName);
}
// Autogenerated method: Photon.Realtime.RegionPinger..cctor
void Photon::Realtime::RegionPinger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "RegionPinger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.RegionPinger/<RegionPingCoroutine>d__19
#include "Photon/Realtime/RegionPinger_-RegionPingCoroutine-d__19.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.RegionPinger <>4__this
[[deprecated("Use field access instead!")]] ::Photon::Realtime::RegionPinger*& Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Photon::Realtime::RegionPinger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <rttSum>5__2
[[deprecated("Use field access instead!")]] float& Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$rttSum$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$rttSum$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rttSum>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <replyCount>5__3
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$replyCount$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$replyCount$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<replyCount>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Stopwatch <sw>5__4
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$sw$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$sw$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sw>5__4"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <overtime>5__5
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$overtime$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$overtime$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<overtime>5__5"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.RegionPinger/<RegionPingCoroutine>d__19.System.IDisposable.Dispose
void Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger/<RegionPingCoroutine>d__19.MoveNext
bool Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger/<RegionPingCoroutine>d__19.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger/<RegionPingCoroutine>d__19.System.Collections.IEnumerator.Reset
void Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger/<RegionPingCoroutine>d__19.System.Collections.IEnumerator.get_Current
::Il2CppObject* Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.Room
#include "Photon/Realtime/Room.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Realtime.RoomOptions
#include "Photon/Realtime/RoomOptions.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.WebFlags
#include "Photon/Realtime/WebFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.LoadBalancingClient <LoadBalancingClient>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::Room::dyn_$LoadBalancingClient$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::dyn_$LoadBalancingClient$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LoadBalancingClient>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isOffline
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Room::dyn_isOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::dyn_isOffline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOffline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,Photon.Realtime.Player> players
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::Photon::Realtime::Player*>*& Photon::Realtime::Room::dyn_players() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::dyn_players");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "players"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::Photon::Realtime::Player*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <BroadcastPropertiesChangeToAll>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Room::dyn_$BroadcastPropertiesChangeToAll$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::dyn_$BroadcastPropertiesChangeToAll$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BroadcastPropertiesChangeToAll>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <SuppressRoomEvents>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Room::dyn_$SuppressRoomEvents$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::dyn_$SuppressRoomEvents$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SuppressRoomEvents>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <SuppressPlayerInfo>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Room::dyn_$SuppressPlayerInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::dyn_$SuppressPlayerInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SuppressPlayerInfo>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <PublishUserId>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Room::dyn_$PublishUserId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::dyn_$PublishUserId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PublishUserId>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <DeleteNullProperties>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Room::dyn_$DeleteNullProperties$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::dyn_$DeleteNullProperties$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DeleteNullProperties>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.Room.get_LoadBalancingClient
::Photon::Realtime::LoadBalancingClient* Photon::Realtime::Room::get_LoadBalancingClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_LoadBalancingClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoadBalancingClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::LoadBalancingClient*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_LoadBalancingClient
void Photon::Realtime::Room::set_LoadBalancingClient(::Photon::Realtime::LoadBalancingClient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_LoadBalancingClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LoadBalancingClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.set_Name
void Photon::Realtime::Room::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_IsOffline
bool Photon::Realtime::Room::get_IsOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_IsOffline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOffline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_IsOffline
void Photon::Realtime::Room::set_IsOffline(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_IsOffline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsOffline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.set_IsOpen
void Photon::Realtime::Room::set_IsOpen(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.set_IsVisible
void Photon::Realtime::Room::set_IsVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.set_MaxPlayers
void Photon::Realtime::Room::set_MaxPlayers(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_MaxPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_PlayerCount
uint8_t Photon::Realtime::Room::get_PlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_PlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.get_Players
::System::Collections::Generic::Dictionary_2<int, ::Photon::Realtime::Player*>* Photon::Realtime::Room::get_Players() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_Players");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Players", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<int, ::Photon::Realtime::Player*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_Players
void Photon::Realtime::Room::set_Players(::System::Collections::Generic::Dictionary_2<int, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_Players");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Players", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_ExpectedUsers
::ArrayW<::StringW> Photon::Realtime::Room::get_ExpectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_ExpectedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.get_PlayerTtl
int Photon::Realtime::Room::get_PlayerTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_PlayerTtl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayerTtl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_PlayerTtl
void Photon::Realtime::Room::set_PlayerTtl(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_PlayerTtl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayerTtl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_EmptyRoomTtl
int Photon::Realtime::Room::get_EmptyRoomTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_EmptyRoomTtl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EmptyRoomTtl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_EmptyRoomTtl
void Photon::Realtime::Room::set_EmptyRoomTtl(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_EmptyRoomTtl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EmptyRoomTtl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_MasterClientId
int Photon::Realtime::Room::get_MasterClientId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_MasterClientId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MasterClientId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.get_PropertiesListedInLobby
::ArrayW<::StringW> Photon::Realtime::Room::get_PropertiesListedInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_PropertiesListedInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertiesListedInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_PropertiesListedInLobby
void Photon::Realtime::Room::set_PropertiesListedInLobby(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_PropertiesListedInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PropertiesListedInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_AutoCleanUp
bool Photon::Realtime::Room::get_AutoCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_AutoCleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoCleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.get_BroadcastPropertiesChangeToAll
bool Photon::Realtime::Room::get_BroadcastPropertiesChangeToAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_BroadcastPropertiesChangeToAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BroadcastPropertiesChangeToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_BroadcastPropertiesChangeToAll
void Photon::Realtime::Room::set_BroadcastPropertiesChangeToAll(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_BroadcastPropertiesChangeToAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BroadcastPropertiesChangeToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_SuppressRoomEvents
bool Photon::Realtime::Room::get_SuppressRoomEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_SuppressRoomEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SuppressRoomEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_SuppressRoomEvents
void Photon::Realtime::Room::set_SuppressRoomEvents(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_SuppressRoomEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SuppressRoomEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_SuppressPlayerInfo
bool Photon::Realtime::Room::get_SuppressPlayerInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_SuppressPlayerInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SuppressPlayerInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_SuppressPlayerInfo
void Photon::Realtime::Room::set_SuppressPlayerInfo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_SuppressPlayerInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SuppressPlayerInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_PublishUserId
bool Photon::Realtime::Room::get_PublishUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_PublishUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublishUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_PublishUserId
void Photon::Realtime::Room::set_PublishUserId(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_PublishUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PublishUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_DeleteNullProperties
bool Photon::Realtime::Room::get_DeleteNullProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_DeleteNullProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeleteNullProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_DeleteNullProperties
void Photon::Realtime::Room::set_DeleteNullProperties(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_DeleteNullProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DeleteNullProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.InternalCacheRoomFlags
void Photon::Realtime::Room::InternalCacheRoomFlags(int roomFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::InternalCacheRoomFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCacheRoomFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomFlags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomFlags);
}
// Autogenerated method: Photon.Realtime.Room.SetCustomProperties
bool Photon::Realtime::Room::SetCustomProperties(::ExitGames::Client::Photon::Hashtable* propertiesToSet, ::ExitGames::Client::Photon::Hashtable* expectedProperties, ::Photon::Realtime::WebFlags* webFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::SetCustomProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::Room*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, propertiesToSet, expectedProperties, webFlags);
}
// Autogenerated method: Photon.Realtime.Room.SetPropertiesListedInLobby
bool Photon::Realtime::Room::SetPropertiesListedInLobby(::ArrayW<::StringW> lobbyProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::SetPropertiesListedInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPropertiesListedInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyProps)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lobbyProps);
}
// Autogenerated method: Photon.Realtime.Room.RemovePlayer
void Photon::Realtime::Room::RemovePlayer(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::RemovePlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::Room*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: Photon.Realtime.Room.RemovePlayer
void Photon::Realtime::Room::RemovePlayer(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::RemovePlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::Room*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Photon.Realtime.Room.SetMasterClient
bool Photon::Realtime::Room::SetMasterClient(::Photon::Realtime::Player* masterClientPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::SetMasterClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMasterClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(masterClientPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, masterClientPlayer);
}
// Autogenerated method: Photon.Realtime.Room.AddPlayer
bool Photon::Realtime::Room::AddPlayer(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::AddPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::Room*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: Photon.Realtime.Room.StorePlayer
::Photon::Realtime::Player* Photon::Realtime::Room::StorePlayer(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::StorePlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::Room*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method, player);
}
// Autogenerated method: Photon.Realtime.Room.GetPlayer
::Photon::Realtime::Player* Photon::Realtime::Room::GetPlayer(int id, bool findMaster) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::GetPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::Room*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method, id, findMaster);
}
// Autogenerated method: Photon.Realtime.Room.ClearExpectedUsers
bool Photon::Realtime::Room::ClearExpectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::ClearExpectedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearExpectedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.SetExpectedUsers
bool Photon::Realtime::Room::SetExpectedUsers(::ArrayW<::StringW> newExpectedUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::SetExpectedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExpectedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newExpectedUsers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, newExpectedUsers);
}
// Autogenerated method: Photon.Realtime.Room.SetExpectedUsers
bool Photon::Realtime::Room::SetExpectedUsers(::ArrayW<::StringW> newExpectedUsers, ::ArrayW<::StringW> oldExpectedUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::SetExpectedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExpectedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newExpectedUsers), ::il2cpp_utils::ExtractType(oldExpectedUsers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, newExpectedUsers, oldExpectedUsers);
}
// Autogenerated method: Photon.Realtime.Room.get_Name
::StringW Photon::Realtime::Room::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.get_IsOpen
bool Photon::Realtime::Room::get_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.get_IsVisible
bool Photon::Realtime::Room::get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.get_MaxPlayers
uint8_t Photon::Realtime::Room::get_MaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_MaxPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.InternalCacheProperties
void Photon::Realtime::Room::InternalCacheProperties(::ExitGames::Client::Photon::Hashtable* propertiesToCache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::InternalCacheProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::RoomInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesToCache);
}
// Autogenerated method: Photon.Realtime.Room.ToString
::StringW Photon::Realtime::Room::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::RoomInfo*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.ToStringFull
::StringW Photon::Realtime::Room::ToStringFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::ToStringFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.RoomInfo
#include "Photon/Realtime/RoomInfo.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean RemovedFromList
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomInfo::dyn_RemovedFromList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_RemovedFromList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RemovedFromList"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExitGames.Client.Photon.Hashtable customProperties
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::Hashtable*& Photon::Realtime::RoomInfo::dyn_customProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_customProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customProperties"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Byte maxPlayers
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::RoomInfo::dyn_maxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_maxPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxPlayers"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 emptyRoomTtl
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RoomInfo::dyn_emptyRoomTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_emptyRoomTtl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emptyRoomTtl"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 playerTtl
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RoomInfo::dyn_playerTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_playerTtl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerTtl"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String[] expectedUsers
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Photon::Realtime::RoomInfo::dyn_expectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_expectedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expectedUsers"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean isOpen
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomInfo::dyn_isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean isVisible
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomInfo::dyn_isVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_isVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean autoCleanUp
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomInfo::dyn_autoCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_autoCleanUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoCleanUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String name
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::RoomInfo::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 masterClientId
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RoomInfo::dyn_masterClientId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_masterClientId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "masterClientId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String[] propertiesListedInLobby
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Photon::Realtime::RoomInfo::dyn_propertiesListedInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_propertiesListedInLobby");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertiesListedInLobby"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <PlayerCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RoomInfo::dyn_$PlayerCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_$PlayerCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlayerCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.RoomInfo.get_CustomProperties
::ExitGames::Client::Photon::Hashtable* Photon::Realtime::RoomInfo::get_CustomProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::get_CustomProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::Hashtable*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomInfo.get_Name
::StringW Photon::Realtime::RoomInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomInfo.get_PlayerCount
int Photon::Realtime::RoomInfo::get_PlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::get_PlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomInfo.set_PlayerCount
void Photon::Realtime::RoomInfo::set_PlayerCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::set_PlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RoomInfo.get_MaxPlayers
uint8_t Photon::Realtime::RoomInfo::get_MaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::get_MaxPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomInfo.get_IsOpen
bool Photon::Realtime::RoomInfo::get_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::get_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomInfo.get_IsVisible
bool Photon::Realtime::RoomInfo::get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::get_IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomInfo.ToStringFull
::StringW Photon::Realtime::RoomInfo::ToStringFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::ToStringFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomInfo.InternalCacheProperties
void Photon::Realtime::RoomInfo::InternalCacheProperties(::ExitGames::Client::Photon::Hashtable* propertiesToCache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::InternalCacheProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::RoomInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesToCache);
}
// Autogenerated method: Photon.Realtime.RoomInfo.Equals
bool Photon::Realtime::RoomInfo::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Photon.Realtime.RoomInfo.GetHashCode
int Photon::Realtime::RoomInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomInfo.ToString
::StringW Photon::Realtime::RoomInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.SupportLogger
#include "Photon/Realtime/SupportLogger.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
// Including type: Photon.Realtime.DisconnectCause
#include "Photon/Realtime/DisconnectCause.hpp"
// Including type: Photon.Realtime.RegionHandler
#include "Photon/Realtime/RegionHandler.hpp"
// Including type: Photon.Realtime.RoomInfo
#include "Photon/Realtime/RoomInfo.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Photon.Realtime.TypedLobbyInfo
#include "Photon/Realtime/TypedLobbyInfo.hpp"
// Including type: Photon.Realtime.ErrorInfo
#include "Photon/Realtime/ErrorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean LogTrafficStats
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::SupportLogger::dyn_LogTrafficStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::dyn_LogTrafficStats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LogTrafficStats"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean loggedStillOfflineMessage
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::SupportLogger::dyn_loggedStillOfflineMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::dyn_loggedStillOfflineMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loggedStillOfflineMessage"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::SupportLogger::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Stopwatch startStopwatch
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& Photon::Realtime::SupportLogger::dyn_startStopwatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::dyn_startStopwatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startStopwatch"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialOnApplicationPauseSkipped
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::SupportLogger::dyn_initialOnApplicationPauseSkipped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::dyn_initialOnApplicationPauseSkipped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialOnApplicationPauseSkipped"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pingMax
[[deprecated("Use field access instead!")]] int& Photon::Realtime::SupportLogger::dyn_pingMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::dyn_pingMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pingMax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pingMin
[[deprecated("Use field access instead!")]] int& Photon::Realtime::SupportLogger::dyn_pingMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::dyn_pingMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pingMin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.SupportLogger.get_Client
::Photon::Realtime::LoadBalancingClient* Photon::Realtime::SupportLogger::get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::get_Client");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Client", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::LoadBalancingClient*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.set_Client
void Photon::Realtime::SupportLogger::set_Client(::Photon::Realtime::LoadBalancingClient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::set_Client");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Client", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.SupportLogger.Start
void Photon::Realtime::SupportLogger::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnDestroy
void Photon::Realtime::SupportLogger::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnApplicationPause
void Photon::Realtime::SupportLogger::OnApplicationPause(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pause);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnApplicationQuit
void Photon::Realtime::SupportLogger::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.StartLogStats
void Photon::Realtime::SupportLogger::StartLogStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::StartLogStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLogStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.StopLogStats
void Photon::Realtime::SupportLogger::StopLogStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::StopLogStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopLogStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.StartTrackValues
void Photon::Realtime::SupportLogger::StartTrackValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::StartTrackValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTrackValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.StopTrackValues
void Photon::Realtime::SupportLogger::StopTrackValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::StopTrackValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopTrackValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.GetFormattedTimestamp
::StringW Photon::Realtime::SupportLogger::GetFormattedTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::GetFormattedTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFormattedTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.TrackValues
void Photon::Realtime::SupportLogger::TrackValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::TrackValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.LogStats
void Photon::Realtime::SupportLogger::LogStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::LogStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.LogBasics
void Photon::Realtime::SupportLogger::LogBasics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::LogBasics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogBasics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnConnected
void Photon::Realtime::SupportLogger::OnConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnConnectedToMaster
void Photon::Realtime::SupportLogger::OnConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnConnectedToMaster");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnFriendListUpdate
void Photon::Realtime::SupportLogger::OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnJoinedLobby
void Photon::Realtime::SupportLogger::OnJoinedLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnJoinedLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnLeftLobby
void Photon::Realtime::SupportLogger::OnLeftLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnLeftLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnCreateRoomFailed
void Photon::Realtime::SupportLogger::OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnJoinedRoom
void Photon::Realtime::SupportLogger::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnJoinRoomFailed
void Photon::Realtime::SupportLogger::OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnJoinRandomFailed
void Photon::Realtime::SupportLogger::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnCreatedRoom
void Photon::Realtime::SupportLogger::OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnLeftRoom
void Photon::Realtime::SupportLogger::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnPreLeavingRoom
void Photon::Realtime::SupportLogger::OnPreLeavingRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnPreLeavingRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnDisconnected
void Photon::Realtime::SupportLogger::OnDisconnected(::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnRegionListReceived
void Photon::Realtime::SupportLogger::OnRegionListReceived(::Photon::Realtime::RegionHandler* regionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnRegionListReceived");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, regionHandler);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnRoomListUpdate
void Photon::Realtime::SupportLogger::OnRoomListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::RoomInfo*>* roomList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnRoomListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomList);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnPlayerEnteredRoom
void Photon::Realtime::SupportLogger::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnPlayerLeftRoom
void Photon::Realtime::SupportLogger::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnRoomPropertiesUpdate
void Photon::Realtime::SupportLogger::OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnPlayerPropertiesUpdate
void Photon::Realtime::SupportLogger::OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnMasterClientSwitched
void Photon::Realtime::SupportLogger::OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnCustomAuthenticationResponse
void Photon::Realtime::SupportLogger::OnCustomAuthenticationResponse(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnCustomAuthenticationResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnCustomAuthenticationFailed
void Photon::Realtime::SupportLogger::OnCustomAuthenticationFailed(::StringW debugMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnCustomAuthenticationFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, debugMessage);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnLobbyStatisticsUpdate
void Photon::Realtime::SupportLogger::OnLobbyStatisticsUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::TypedLobbyInfo*>* lobbyStatistics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnLobbyStatisticsUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyStatistics);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnErrorInfo
void Photon::Realtime::SupportLogger::OnErrorInfo(::Photon::Realtime::ErrorInfo* errorInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnErrorInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorInfo);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.WebRpcResponse
#include "Photon/Realtime/WebRpcResponse.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ExitGames.Client.Photon.OperationResponse
#include "ExitGames/Client/Photon/OperationResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::WebRpcResponse::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <ResultCode>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Realtime::WebRpcResponse::dyn_$ResultCode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::dyn_$ResultCode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ResultCode>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Message>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::WebRpcResponse::dyn_$Message$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::dyn_$Message$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Message>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Object> <Parameters>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*& Photon::Realtime::WebRpcResponse::dyn_$Parameters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::dyn_$Parameters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parameters>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.get_Name
::StringW Photon::Realtime::WebRpcResponse::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.set_Name
void Photon::Realtime::WebRpcResponse::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.get_ResultCode
int Photon::Realtime::WebRpcResponse::get_ResultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::get_ResultCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.set_ResultCode
void Photon::Realtime::WebRpcResponse::set_ResultCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::set_ResultCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ResultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.get_ReturnCode
int Photon::Realtime::WebRpcResponse::get_ReturnCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::get_ReturnCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.get_Message
::StringW Photon::Realtime::WebRpcResponse::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::get_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.set_Message
void Photon::Realtime::WebRpcResponse::set_Message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.get_DebugMessage
::StringW Photon::Realtime::WebRpcResponse::get_DebugMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::get_DebugMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DebugMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.get_Parameters
::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* Photon::Realtime::WebRpcResponse::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.set_Parameters
void Photon::Realtime::WebRpcResponse::set_Parameters(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::set_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.ToStringFull
::StringW Photon::Realtime::WebRpcResponse::ToStringFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::ToStringFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.WebFlags
#include "Photon/Realtime/WebFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Realtime.WebFlags Default
::Photon::Realtime::WebFlags* Photon::Realtime::WebFlags::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::WebFlags*>("Photon.Realtime", "WebFlags", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Realtime.WebFlags Default
void Photon::Realtime::WebFlags::_set_Default(::Photon::Realtime::WebFlags* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "WebFlags", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte HttpForwardConst
uint8_t Photon::Realtime::WebFlags::_get_HttpForwardConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_get_HttpForwardConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "WebFlags", "HttpForwardConst"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte HttpForwardConst
void Photon::Realtime::WebFlags::_set_HttpForwardConst(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_set_HttpForwardConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "WebFlags", "HttpForwardConst", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SendAuthCookieConst
uint8_t Photon::Realtime::WebFlags::_get_SendAuthCookieConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_get_SendAuthCookieConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "WebFlags", "SendAuthCookieConst"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SendAuthCookieConst
void Photon::Realtime::WebFlags::_set_SendAuthCookieConst(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_set_SendAuthCookieConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "WebFlags", "SendAuthCookieConst", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SendSyncConst
uint8_t Photon::Realtime::WebFlags::_get_SendSyncConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_get_SendSyncConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "WebFlags", "SendSyncConst"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SendSyncConst
void Photon::Realtime::WebFlags::_set_SendSyncConst(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_set_SendSyncConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "WebFlags", "SendSyncConst", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SendStateConst
uint8_t Photon::Realtime::WebFlags::_get_SendStateConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_get_SendStateConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "WebFlags", "SendStateConst"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SendStateConst
void Photon::Realtime::WebFlags::_set_SendStateConst(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_set_SendStateConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "WebFlags", "SendStateConst", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte WebhookFlags
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::WebFlags::dyn_WebhookFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::dyn_WebhookFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WebhookFlags"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.WebFlags.get_HttpForward
bool Photon::Realtime::WebFlags::get_HttpForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::get_HttpForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HttpForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebFlags.set_HttpForward
void Photon::Realtime::WebFlags::set_HttpForward(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::set_HttpForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HttpForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.WebFlags.get_SendAuthCookie
bool Photon::Realtime::WebFlags::get_SendAuthCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::get_SendAuthCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendAuthCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebFlags.set_SendAuthCookie
void Photon::Realtime::WebFlags::set_SendAuthCookie(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::set_SendAuthCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendAuthCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.WebFlags.get_SendSync
bool Photon::Realtime::WebFlags::get_SendSync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::get_SendSync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendSync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebFlags.set_SendSync
void Photon::Realtime::WebFlags::set_SendSync(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::set_SendSync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendSync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.WebFlags.get_SendState
bool Photon::Realtime::WebFlags::get_SendState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::get_SendState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebFlags.set_SendState
void Photon::Realtime::WebFlags::set_SendState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::set_SendState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.WebFlags..cctor
void Photon::Realtime::WebFlags::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "WebFlags", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.CustomTypes
#include "Photon/Pun/CustomTypes.hpp"
// Including type: ExitGames.Client.Photon.StreamBuffer
#include "ExitGames/Client/Photon/StreamBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] memPlayer
::ArrayW<uint8_t> Photon::Pun::CustomTypes::_get_memPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::CustomTypes::_get_memPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Photon.Pun", "CustomTypes", "memPlayer"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] memPlayer
void Photon::Pun::CustomTypes::_set_memPlayer(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::CustomTypes::_set_memPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "CustomTypes", "memPlayer", value));
}
// Autogenerated method: Photon.Pun.CustomTypes.Register
void Photon::Pun::CustomTypes::Register() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::CustomTypes::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "CustomTypes", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.CustomTypes.SerializePhotonPlayer
int16_t Photon::Pun::CustomTypes::SerializePhotonPlayer(::ExitGames::Client::Photon::StreamBuffer* outStream, ::Il2CppObject* customobject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::CustomTypes::SerializePhotonPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "CustomTypes", "SerializePhotonPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outStream), ::il2cpp_utils::ExtractType(customobject)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, outStream, customobject);
}
// Autogenerated method: Photon.Pun.CustomTypes.DeserializePhotonPlayer
::Il2CppObject* Photon::Pun::CustomTypes::DeserializePhotonPlayer(::ExitGames::Client::Photon::StreamBuffer* inStream, int16_t length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::CustomTypes::DeserializePhotonPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "CustomTypes", "DeserializePhotonPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStream), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inStream, length);
}
// Autogenerated method: Photon.Pun.CustomTypes..cctor
void Photon::Pun::CustomTypes::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::CustomTypes::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "CustomTypes", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.ConnectMethod
#include "Photon/Pun/ConnectMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ConnectMethod NotCalled
::Photon::Pun::ConnectMethod Photon::Pun::ConnectMethod::_get_NotCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::_get_NotCalled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ConnectMethod>("Photon.Pun", "ConnectMethod", "NotCalled"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ConnectMethod NotCalled
void Photon::Pun::ConnectMethod::_set_NotCalled(::Photon::Pun::ConnectMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::_set_NotCalled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "ConnectMethod", "NotCalled", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ConnectMethod ConnectToMaster
::Photon::Pun::ConnectMethod Photon::Pun::ConnectMethod::_get_ConnectToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::_get_ConnectToMaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ConnectMethod>("Photon.Pun", "ConnectMethod", "ConnectToMaster"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ConnectMethod ConnectToMaster
void Photon::Pun::ConnectMethod::_set_ConnectToMaster(::Photon::Pun::ConnectMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::_set_ConnectToMaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "ConnectMethod", "ConnectToMaster", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ConnectMethod ConnectToRegion
::Photon::Pun::ConnectMethod Photon::Pun::ConnectMethod::_get_ConnectToRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::_get_ConnectToRegion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ConnectMethod>("Photon.Pun", "ConnectMethod", "ConnectToRegion"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ConnectMethod ConnectToRegion
void Photon::Pun::ConnectMethod::_set_ConnectToRegion(::Photon::Pun::ConnectMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::_set_ConnectToRegion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "ConnectMethod", "ConnectToRegion", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ConnectMethod ConnectToBest
::Photon::Pun::ConnectMethod Photon::Pun::ConnectMethod::_get_ConnectToBest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::_get_ConnectToBest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ConnectMethod>("Photon.Pun", "ConnectMethod", "ConnectToBest"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ConnectMethod ConnectToBest
void Photon::Pun::ConnectMethod::_set_ConnectToBest(::Photon::Pun::ConnectMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::_set_ConnectToBest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "ConnectMethod", "ConnectToBest", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::ConnectMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PunLogLevel
#include "Photon/Pun/PunLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PunLogLevel ErrorsOnly
::Photon::Pun::PunLogLevel Photon::Pun::PunLogLevel::_get_ErrorsOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunLogLevel::_get_ErrorsOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PunLogLevel>("Photon.Pun", "PunLogLevel", "ErrorsOnly"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PunLogLevel ErrorsOnly
void Photon::Pun::PunLogLevel::_set_ErrorsOnly(::Photon::Pun::PunLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunLogLevel::_set_ErrorsOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunLogLevel", "ErrorsOnly", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PunLogLevel Informational
::Photon::Pun::PunLogLevel Photon::Pun::PunLogLevel::_get_Informational() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunLogLevel::_get_Informational");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PunLogLevel>("Photon.Pun", "PunLogLevel", "Informational"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PunLogLevel Informational
void Photon::Pun::PunLogLevel::_set_Informational(::Photon::Pun::PunLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunLogLevel::_set_Informational");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunLogLevel", "Informational", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PunLogLevel Full
::Photon::Pun::PunLogLevel Photon::Pun::PunLogLevel::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunLogLevel::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PunLogLevel>("Photon.Pun", "PunLogLevel", "Full"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PunLogLevel Full
void Photon::Pun::PunLogLevel::_set_Full(::Photon::Pun::PunLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunLogLevel::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunLogLevel", "Full", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::PunLogLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunLogLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.RpcTarget
#include "Photon/Pun/RpcTarget.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.RpcTarget All
::Photon::Pun::RpcTarget Photon::Pun::RpcTarget::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::RpcTarget>("Photon.Pun", "RpcTarget", "All"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.RpcTarget All
void Photon::Pun::RpcTarget::_set_All(::Photon::Pun::RpcTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "RpcTarget", "All", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.RpcTarget Others
::Photon::Pun::RpcTarget Photon::Pun::RpcTarget::_get_Others() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_get_Others");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::RpcTarget>("Photon.Pun", "RpcTarget", "Others"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.RpcTarget Others
void Photon::Pun::RpcTarget::_set_Others(::Photon::Pun::RpcTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_set_Others");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "RpcTarget", "Others", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.RpcTarget MasterClient
::Photon::Pun::RpcTarget Photon::Pun::RpcTarget::_get_MasterClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_get_MasterClient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::RpcTarget>("Photon.Pun", "RpcTarget", "MasterClient"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.RpcTarget MasterClient
void Photon::Pun::RpcTarget::_set_MasterClient(::Photon::Pun::RpcTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_set_MasterClient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "RpcTarget", "MasterClient", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.RpcTarget AllBuffered
::Photon::Pun::RpcTarget Photon::Pun::RpcTarget::_get_AllBuffered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_get_AllBuffered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::RpcTarget>("Photon.Pun", "RpcTarget", "AllBuffered"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.RpcTarget AllBuffered
void Photon::Pun::RpcTarget::_set_AllBuffered(::Photon::Pun::RpcTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_set_AllBuffered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "RpcTarget", "AllBuffered", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.RpcTarget OthersBuffered
::Photon::Pun::RpcTarget Photon::Pun::RpcTarget::_get_OthersBuffered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_get_OthersBuffered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::RpcTarget>("Photon.Pun", "RpcTarget", "OthersBuffered"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.RpcTarget OthersBuffered
void Photon::Pun::RpcTarget::_set_OthersBuffered(::Photon::Pun::RpcTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_set_OthersBuffered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "RpcTarget", "OthersBuffered", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.RpcTarget AllViaServer
::Photon::Pun::RpcTarget Photon::Pun::RpcTarget::_get_AllViaServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_get_AllViaServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::RpcTarget>("Photon.Pun", "RpcTarget", "AllViaServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.RpcTarget AllViaServer
void Photon::Pun::RpcTarget::_set_AllViaServer(::Photon::Pun::RpcTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_set_AllViaServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "RpcTarget", "AllViaServer", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.RpcTarget AllBufferedViaServer
::Photon::Pun::RpcTarget Photon::Pun::RpcTarget::_get_AllBufferedViaServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_get_AllBufferedViaServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::RpcTarget>("Photon.Pun", "RpcTarget", "AllBufferedViaServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.RpcTarget AllBufferedViaServer
void Photon::Pun::RpcTarget::_set_AllBufferedViaServer(::Photon::Pun::RpcTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_set_AllBufferedViaServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "RpcTarget", "AllBufferedViaServer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::RpcTarget::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.ViewSynchronization
#include "Photon/Pun/ViewSynchronization.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ViewSynchronization Off
::Photon::Pun::ViewSynchronization Photon::Pun::ViewSynchronization::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ViewSynchronization>("Photon.Pun", "ViewSynchronization", "Off"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ViewSynchronization Off
void Photon::Pun::ViewSynchronization::_set_Off(::Photon::Pun::ViewSynchronization value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "ViewSynchronization", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ViewSynchronization ReliableDeltaCompressed
::Photon::Pun::ViewSynchronization Photon::Pun::ViewSynchronization::_get_ReliableDeltaCompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::_get_ReliableDeltaCompressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ViewSynchronization>("Photon.Pun", "ViewSynchronization", "ReliableDeltaCompressed"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ViewSynchronization ReliableDeltaCompressed
void Photon::Pun::ViewSynchronization::_set_ReliableDeltaCompressed(::Photon::Pun::ViewSynchronization value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::_set_ReliableDeltaCompressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "ViewSynchronization", "ReliableDeltaCompressed", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ViewSynchronization Unreliable
::Photon::Pun::ViewSynchronization Photon::Pun::ViewSynchronization::_get_Unreliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::_get_Unreliable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ViewSynchronization>("Photon.Pun", "ViewSynchronization", "Unreliable"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ViewSynchronization Unreliable
void Photon::Pun::ViewSynchronization::_set_Unreliable(::Photon::Pun::ViewSynchronization value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::_set_Unreliable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "ViewSynchronization", "Unreliable", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ViewSynchronization UnreliableOnChange
::Photon::Pun::ViewSynchronization Photon::Pun::ViewSynchronization::_get_UnreliableOnChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::_get_UnreliableOnChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ViewSynchronization>("Photon.Pun", "ViewSynchronization", "UnreliableOnChange"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ViewSynchronization UnreliableOnChange
void Photon::Pun::ViewSynchronization::_set_UnreliableOnChange(::Photon::Pun::ViewSynchronization value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::_set_UnreliableOnChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "ViewSynchronization", "UnreliableOnChange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::ViewSynchronization::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.OwnershipOption
#include "Photon/Pun/OwnershipOption.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.OwnershipOption Fixed
::Photon::Pun::OwnershipOption Photon::Pun::OwnershipOption::_get_Fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::OwnershipOption::_get_Fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::OwnershipOption>("Photon.Pun", "OwnershipOption", "Fixed"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.OwnershipOption Fixed
void Photon::Pun::OwnershipOption::_set_Fixed(::Photon::Pun::OwnershipOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::OwnershipOption::_set_Fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "OwnershipOption", "Fixed", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.OwnershipOption Takeover
::Photon::Pun::OwnershipOption Photon::Pun::OwnershipOption::_get_Takeover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::OwnershipOption::_get_Takeover");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::OwnershipOption>("Photon.Pun", "OwnershipOption", "Takeover"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.OwnershipOption Takeover
void Photon::Pun::OwnershipOption::_set_Takeover(::Photon::Pun::OwnershipOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::OwnershipOption::_set_Takeover");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "OwnershipOption", "Takeover", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.OwnershipOption Request
::Photon::Pun::OwnershipOption Photon::Pun::OwnershipOption::_get_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::OwnershipOption::_get_Request");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::OwnershipOption>("Photon.Pun", "OwnershipOption", "Request"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.OwnershipOption Request
void Photon::Pun::OwnershipOption::_set_Request(::Photon::Pun::OwnershipOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::OwnershipOption::_set_Request");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "OwnershipOption", "Request", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::OwnershipOption::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::OwnershipOption::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.IOnPhotonViewPreNetDestroy
#include "Photon/Pun/IOnPhotonViewPreNetDestroy.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.IOnPhotonViewPreNetDestroy.OnPreNetDestroy
void Photon::Pun::IOnPhotonViewPreNetDestroy::OnPreNetDestroy(::Photon::Pun::PhotonView* rootView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IOnPhotonViewPreNetDestroy::OnPreNetDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IOnPhotonViewPreNetDestroy*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootView);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.IOnPhotonViewOwnerChange
#include "Photon/Pun/IOnPhotonViewOwnerChange.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.IOnPhotonViewOwnerChange.OnOwnerChange
void Photon::Pun::IOnPhotonViewOwnerChange::OnOwnerChange(::Photon::Realtime::Player* newOwner, ::Photon::Realtime::Player* previousOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IOnPhotonViewOwnerChange::OnOwnerChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IOnPhotonViewOwnerChange*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newOwner, previousOwner);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.IOnPhotonViewControllerChange
#include "Photon/Pun/IOnPhotonViewControllerChange.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.IOnPhotonViewControllerChange.OnControllerChange
void Photon::Pun::IOnPhotonViewControllerChange::OnControllerChange(::Photon::Realtime::Player* newController, ::Photon::Realtime::Player* previousController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IOnPhotonViewControllerChange::OnControllerChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IOnPhotonViewControllerChange*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newController, previousController);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.IPunObservable
#include "Photon/Pun/IPunObservable.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.IPunObservable.OnPhotonSerializeView
void Photon::Pun::IPunObservable::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IPunObservable::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IPunObservable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.IPunOwnershipCallbacks
#include "Photon/Pun/IPunOwnershipCallbacks.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.IPunOwnershipCallbacks.OnOwnershipRequest
void Photon::Pun::IPunOwnershipCallbacks::OnOwnershipRequest(::Photon::Pun::PhotonView* targetView, ::Photon::Realtime::Player* requestingPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IPunOwnershipCallbacks::OnOwnershipRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IPunOwnershipCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetView, requestingPlayer);
}
// Autogenerated method: Photon.Pun.IPunOwnershipCallbacks.OnOwnershipTransfered
void Photon::Pun::IPunOwnershipCallbacks::OnOwnershipTransfered(::Photon::Pun::PhotonView* targetView, ::Photon::Realtime::Player* previousOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IPunOwnershipCallbacks::OnOwnershipTransfered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IPunOwnershipCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetView, previousOwner);
}
// Autogenerated method: Photon.Pun.IPunOwnershipCallbacks.OnOwnershipTransferFailed
void Photon::Pun::IPunOwnershipCallbacks::OnOwnershipTransferFailed(::Photon::Pun::PhotonView* targetView, ::Photon::Realtime::Player* senderOfFailedRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IPunOwnershipCallbacks::OnOwnershipTransferFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IPunOwnershipCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetView, senderOfFailedRequest);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.IPunInstantiateMagicCallback
#include "Photon/Pun/IPunInstantiateMagicCallback.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.IPunInstantiateMagicCallback.OnPhotonInstantiate
void Photon::Pun::IPunInstantiateMagicCallback::OnPhotonInstantiate(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IPunInstantiateMagicCallback::OnPhotonInstantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IPunInstantiateMagicCallback*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.IPunPrefabPool
#include "Photon/Pun/IPunPrefabPool.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.IPunPrefabPool.Instantiate
::UnityEngine::GameObject* Photon::Pun::IPunPrefabPool::Instantiate(::StringW prefabId, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IPunPrefabPool::Instantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IPunPrefabPool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefabId, position, rotation);
}
// Autogenerated method: Photon.Pun.IPunPrefabPool.Destroy
void Photon::Pun::IPunPrefabPool::Destroy(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IPunPrefabPool::Destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IPunPrefabPool*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonHandler
#include "Photon/Pun/PhotonHandler.hpp"
// Including type: Photon.Pun.PhotonHandler/<>c
#include "Photon/Pun/PhotonHandler_--c.hpp"
// Including type: Photon.Realtime.SupportLogger
#include "Photon/Realtime/SupportLogger.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Photon.Pun.PhotonHandler instance
::Photon::Pun::PhotonHandler* Photon::Pun::PhotonHandler::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonHandler*>("Photon.Pun", "PhotonHandler", "instance"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Pun.PhotonHandler instance
void Photon::Pun::PhotonHandler::_set_instance(::Photon::Pun::PhotonHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonHandler", "instance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxDatagrams
int Photon::Pun::PhotonHandler::_get_MaxDatagrams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::_get_MaxDatagrams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonHandler", "MaxDatagrams"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxDatagrams
void Photon::Pun::PhotonHandler::_set_MaxDatagrams(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::_set_MaxDatagrams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonHandler", "MaxDatagrams", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean SendAsap
bool Photon::Pun::PhotonHandler::_get_SendAsap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::_get_SendAsap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonHandler", "SendAsap"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean SendAsap
void Photon::Pun::PhotonHandler::_set_SendAsap(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::_set_SendAsap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonHandler", "SendAsap", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SerializeRateFrameCorrection
int Photon::Pun::PhotonHandler::_get_SerializeRateFrameCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::_get_SerializeRateFrameCorrection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonHandler", "SerializeRateFrameCorrection"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SerializeRateFrameCorrection
void Photon::Pun::PhotonHandler::_set_SerializeRateFrameCorrection(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::_set_SerializeRateFrameCorrection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonHandler", "SerializeRateFrameCorrection", value));
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 UpdateInterval
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonHandler::dyn_UpdateInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::dyn_UpdateInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateInterval"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 UpdateIntervalOnSerialize
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonHandler::dyn_UpdateIntervalOnSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::dyn_UpdateIntervalOnSerialize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateIntervalOnSerialize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nextSendTickCount
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonHandler::dyn_nextSendTickCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::dyn_nextSendTickCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextSendTickCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nextSendTickCountOnSerialize
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonHandler::dyn_nextSendTickCountOnSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::dyn_nextSendTickCountOnSerialize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextSendTickCountOnSerialize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.SupportLogger supportLoggerComponent
[[deprecated("Use field access instead!")]] ::Photon::Realtime::SupportLogger*& Photon::Pun::PhotonHandler::dyn_supportLoggerComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::dyn_supportLoggerComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportLoggerComponent"))->offset;
  return *reinterpret_cast<::Photon::Realtime::SupportLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.Int32> reusableIntList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Photon::Pun::PhotonHandler::dyn_reusableIntList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::dyn_reusableIntList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reusableIntList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonHandler.get_Instance
::Photon::Pun::PhotonHandler* Photon::Pun::PhotonHandler::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonHandler", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonHandler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnEnable
void Photon::Pun::PhotonHandler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.Start
void Photon::Pun::PhotonHandler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.FixedUpdate
void Photon::Pun::PhotonHandler::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.LateUpdate
void Photon::Pun::PhotonHandler::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.Dispatch
void Photon::Pun::PhotonHandler::Dispatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::Dispatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnCreatedRoom
void Photon::Pun::PhotonHandler::OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnRoomPropertiesUpdate
void Photon::Pun::PhotonHandler::OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnPlayerPropertiesUpdate
void Photon::Pun::PhotonHandler::OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnMasterClientSwitched
void Photon::Pun::PhotonHandler::OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnFriendListUpdate
void Photon::Pun::PhotonHandler::OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnCreateRoomFailed
void Photon::Pun::PhotonHandler::OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnJoinRoomFailed
void Photon::Pun::PhotonHandler::OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnJoinRandomFailed
void Photon::Pun::PhotonHandler::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnJoinedRoom
void Photon::Pun::PhotonHandler::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnLeftRoom
void Photon::Pun::PhotonHandler::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnPreLeavingRoom
void Photon::Pun::PhotonHandler::OnPreLeavingRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnPreLeavingRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnPlayerEnteredRoom
void Photon::Pun::PhotonHandler::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnPlayerLeftRoom
void Photon::Pun::PhotonHandler::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Photon.Pun.PhotonHandler..cctor
void Photon::Pun::PhotonHandler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonHandler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.Awake
void Photon::Pun::PhotonHandler::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnDisable
void Photon::Pun::PhotonHandler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionHandler*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonHandler/<>c
#include "Photon/Pun/PhotonHandler_--c.hpp"
// Including type: UnityEngine.Events.UnityAction`2
#include "UnityEngine/Events/UnityAction_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Pun.PhotonHandler/<>c <>9
::Photon::Pun::PhotonHandler::$$c* Photon::Pun::PhotonHandler::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonHandler::$$c*>("Photon.Pun", "PhotonHandler/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Pun.PhotonHandler/<>c <>9
void Photon::Pun::PhotonHandler::$$c::_set_$$9(::Photon::Pun::PhotonHandler::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonHandler/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> <>9__13_0
::UnityEngine::Events::UnityAction_2<::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode>* Photon::Pun::PhotonHandler::$$c::_get_$$9__13_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::$$c::_get_$$9__13_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityAction_2<::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode>*>("Photon.Pun", "PhotonHandler/<>c", "<>9__13_0")));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> <>9__13_0
void Photon::Pun::PhotonHandler::$$c::_set_$$9__13_0(::UnityEngine::Events::UnityAction_2<::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::$$c::_set_$$9__13_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonHandler/<>c", "<>9__13_0", value)));
}
// Autogenerated method: Photon.Pun.PhotonHandler/<>c..cctor
void Photon::Pun::PhotonHandler::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonHandler/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler/<>c.<Start>b__13_0
void Photon::Pun::PhotonHandler::$$c::$Start$b__13_0(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode loadingMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::$$c::<Start>b__13_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__13_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(loadingMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, loadingMode);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.InstantiateParameters
#include "Photon/Pun/InstantiateParameters.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32[] viewIDs
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Photon::Pun::InstantiateParameters::dyn_viewIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_viewIDs");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "viewIDs"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte objLevelPrefix
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::InstantiateParameters::dyn_objLevelPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_objLevelPrefix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objLevelPrefix"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object[] data
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& Photon::Pun::InstantiateParameters::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte group
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::InstantiateParameters::dyn_group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_group");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "group"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Photon::Pun::InstantiateParameters::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::InstantiateParameters::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String prefabName
[[deprecated("Use field access instead!")]] ::StringW& Photon::Pun::InstantiateParameters::dyn_prefabName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_prefabName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player creator
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& Photon::Pun::InstantiateParameters::dyn_creator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_creator");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "creator"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 timestamp
[[deprecated("Use field access instead!")]] int& Photon::Pun::InstantiateParameters::dyn_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_timestamp");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timestamp"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.InstantiateParameters..ctor
Photon::Pun::InstantiateParameters::InstantiateParameters(::StringW prefabName, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, uint8_t group, ::ArrayW<::Il2CppObject*> data, uint8_t objLevelPrefix, ::ArrayW<int> viewIDs, ::Photon::Realtime::Player* creator, int timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(objLevelPrefix), ::il2cpp_utils::ExtractType(viewIDs), ::il2cpp_utils::ExtractType(creator), ::il2cpp_utils::ExtractType(timestamp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefabName, position, rotation, group, data, objLevelPrefix, viewIDs, creator, timestamp);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.PhotonNetwork
#include "Photon/Pun/PhotonNetwork.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Photon.Pun.PhotonNetwork/SerializeViewBatch
#include "Photon/Pun/PhotonNetwork_SerializeViewBatch.hpp"
// Including type: Photon.Pun.PhotonNetwork/<>c
#include "Photon/Pun/PhotonNetwork_--c.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Photon.Pun.ServerSettings
#include "Photon/Pun/ServerSettings.hpp"
// Including type: Photon.Realtime.Room
#include "Photon/Realtime/Room.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.RaiseEventOptions
#include "Photon/Realtime/RaiseEventOptions.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Pun.IPunPrefabPool
#include "Photon/Pun/IPunPrefabPool.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Realtime.RegionHandler
#include "Photon/Realtime/RegionHandler.hpp"
// Including type: Photon.Realtime.ClientState
#include "Photon/Realtime/ClientState.hpp"
// Including type: Photon.Realtime.ServerConnection
#include "Photon/Realtime/ServerConnection.hpp"
// Including type: Photon.Realtime.AuthenticationValues
#include "Photon/Realtime/AuthenticationValues.hpp"
// Including type: Photon.Realtime.TypedLobby
#include "Photon/Realtime/TypedLobby.hpp"
// Including type: Photon.Realtime.PhotonPortDefinition
#include "Photon/Realtime/PhotonPortDefinition.hpp"
// Including type: Photon.Realtime.AppSettings
#include "Photon/Realtime/AppSettings.hpp"
// Including type: Photon.Realtime.MatchmakingMode
#include "Photon/Realtime/MatchmakingMode.hpp"
// Including type: Photon.Realtime.RoomOptions
#include "Photon/Realtime/RoomOptions.hpp"
// Including type: ExitGames.Client.Photon.SendOptions
#include "ExitGames/Client/Photon/SendOptions.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: Photon.Pun.InstantiateParameters
#include "Photon/Pun/InstantiateParameters.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: ExitGames.Client.Photon.EventData
#include "ExitGames/Client/Photon/EventData.hpp"
// Including type: ExitGames.Client.Photon.OperationResponse
#include "ExitGames/Client/Photon/OperationResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String PunVersion
::StringW Photon::Pun::PhotonNetwork::_get_PunVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_PunVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun", "PhotonNetwork", "PunVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.String PunVersion
void Photon::Pun::PhotonNetwork::_set_PunVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_PunVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "PunVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.String gameVersion
::StringW Photon::Pun::PhotonNetwork::_get_gameVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_gameVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun", "PhotonNetwork", "gameVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String gameVersion
void Photon::Pun::PhotonNetwork::_set_gameVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_gameVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "gameVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.LoadBalancingClient NetworkingClient
::Photon::Realtime::LoadBalancingClient* Photon::Pun::PhotonNetwork::_get_NetworkingClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_NetworkingClient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::LoadBalancingClient*>("Photon.Pun", "PhotonNetwork", "NetworkingClient"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.LoadBalancingClient NetworkingClient
void Photon::Pun::PhotonNetwork::_set_NetworkingClient(::Photon::Realtime::LoadBalancingClient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_NetworkingClient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "NetworkingClient", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 MAX_VIEW_IDS
int Photon::Pun::PhotonNetwork::_get_MAX_VIEW_IDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_MAX_VIEW_IDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "MAX_VIEW_IDS"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 MAX_VIEW_IDS
void Photon::Pun::PhotonNetwork::_set_MAX_VIEW_IDS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_MAX_VIEW_IDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "MAX_VIEW_IDS", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ServerSettingsFileName
::StringW Photon::Pun::PhotonNetwork::_get_ServerSettingsFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_ServerSettingsFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun", "PhotonNetwork", "ServerSettingsFileName"));
}
// Autogenerated static field setter
// Set static field: static public System.String ServerSettingsFileName
void Photon::Pun::PhotonNetwork::_set_ServerSettingsFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_ServerSettingsFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "ServerSettingsFileName", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Pun.ServerSettings photonServerSettings
::Photon::Pun::ServerSettings* Photon::Pun::PhotonNetwork::_get_photonServerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_photonServerSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ServerSettings*>("Photon.Pun", "PhotonNetwork", "photonServerSettings"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Pun.ServerSettings photonServerSettings
void Photon::Pun::PhotonNetwork::_set_photonServerSettings(::Photon::Pun::ServerSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_photonServerSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "photonServerSettings", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PlayerPrefsKey
::StringW Photon::Pun::PhotonNetwork::_get_PlayerPrefsKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_PlayerPrefsKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun", "PhotonNetwork", "PlayerPrefsKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String PlayerPrefsKey
void Photon::Pun::PhotonNetwork::_set_PlayerPrefsKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_PlayerPrefsKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "PlayerPrefsKey", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ConnectMethod ConnectMethod
::Photon::Pun::ConnectMethod Photon::Pun::PhotonNetwork::_get_ConnectMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_ConnectMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ConnectMethod>("Photon.Pun", "PhotonNetwork", "ConnectMethod"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ConnectMethod ConnectMethod
void Photon::Pun::PhotonNetwork::_set_ConnectMethod(::Photon::Pun::ConnectMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_ConnectMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "ConnectMethod", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PunLogLevel LogLevel
::Photon::Pun::PunLogLevel Photon::Pun::PhotonNetwork::_get_LogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_LogLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PunLogLevel>("Photon.Pun", "PhotonNetwork", "LogLevel"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PunLogLevel LogLevel
void Photon::Pun::PhotonNetwork::_set_LogLevel(::Photon::Pun::PunLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_LogLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "LogLevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean EnableCloseConnection
bool Photon::Pun::PhotonNetwork::_get_EnableCloseConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_EnableCloseConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonNetwork", "EnableCloseConnection"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean EnableCloseConnection
void Photon::Pun::PhotonNetwork::_set_EnableCloseConnection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_EnableCloseConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "EnableCloseConnection", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single PrecisionForVectorSynchronization
float Photon::Pun::PhotonNetwork::_get_PrecisionForVectorSynchronization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_PrecisionForVectorSynchronization");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Photon.Pun", "PhotonNetwork", "PrecisionForVectorSynchronization"));
}
// Autogenerated static field setter
// Set static field: static public System.Single PrecisionForVectorSynchronization
void Photon::Pun::PhotonNetwork::_set_PrecisionForVectorSynchronization(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_PrecisionForVectorSynchronization");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "PrecisionForVectorSynchronization", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single PrecisionForQuaternionSynchronization
float Photon::Pun::PhotonNetwork::_get_PrecisionForQuaternionSynchronization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_PrecisionForQuaternionSynchronization");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Photon.Pun", "PhotonNetwork", "PrecisionForQuaternionSynchronization"));
}
// Autogenerated static field setter
// Set static field: static public System.Single PrecisionForQuaternionSynchronization
void Photon::Pun::PhotonNetwork::_set_PrecisionForQuaternionSynchronization(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_PrecisionForQuaternionSynchronization");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "PrecisionForQuaternionSynchronization", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single PrecisionForFloatSynchronization
float Photon::Pun::PhotonNetwork::_get_PrecisionForFloatSynchronization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_PrecisionForFloatSynchronization");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Photon.Pun", "PhotonNetwork", "PrecisionForFloatSynchronization"));
}
// Autogenerated static field setter
// Set static field: static public System.Single PrecisionForFloatSynchronization
void Photon::Pun::PhotonNetwork::_set_PrecisionForFloatSynchronization(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_PrecisionForFloatSynchronization");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "PrecisionForFloatSynchronization", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean offlineMode
bool Photon::Pun::PhotonNetwork::_get_offlineMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_offlineMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonNetwork", "offlineMode"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean offlineMode
void Photon::Pun::PhotonNetwork::_set_offlineMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_offlineMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "offlineMode", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Realtime.Room offlineModeRoom
::Photon::Realtime::Room* Photon::Pun::PhotonNetwork::_get_offlineModeRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_offlineModeRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::Room*>("Photon.Pun", "PhotonNetwork", "offlineModeRoom"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Realtime.Room offlineModeRoom
void Photon::Pun::PhotonNetwork::_set_offlineModeRoom(::Photon::Realtime::Room* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_offlineModeRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "offlineModeRoom", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean automaticallySyncScene
bool Photon::Pun::PhotonNetwork::_get_automaticallySyncScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_automaticallySyncScene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonNetwork", "automaticallySyncScene"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean automaticallySyncScene
void Photon::Pun::PhotonNetwork::_set_automaticallySyncScene(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_automaticallySyncScene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "automaticallySyncScene", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 sendFrequency
int Photon::Pun::PhotonNetwork::_get_sendFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_sendFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "sendFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 sendFrequency
void Photon::Pun::PhotonNetwork::_set_sendFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_sendFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "sendFrequency", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 serializationFrequency
int Photon::Pun::PhotonNetwork::_get_serializationFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_serializationFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "serializationFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 serializationFrequency
void Photon::Pun::PhotonNetwork::_set_serializationFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_serializationFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "serializationFrequency", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isMessageQueueRunning
bool Photon::Pun::PhotonNetwork::_get_isMessageQueueRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_isMessageQueueRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonNetwork", "isMessageQueueRunning"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isMessageQueueRunning
void Photon::Pun::PhotonNetwork::_set_isMessageQueueRunning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_isMessageQueueRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "isMessageQueueRunning", value));
}
// Autogenerated static field getter
// Get static field: static private System.Double frametime
double Photon::Pun::PhotonNetwork::_get_frametime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_frametime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("Photon.Pun", "PhotonNetwork", "frametime"));
}
// Autogenerated static field setter
// Set static field: static private System.Double frametime
void Photon::Pun::PhotonNetwork::_set_frametime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_frametime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "frametime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 frame
int Photon::Pun::PhotonNetwork::_get_frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_frame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "frame"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 frame
void Photon::Pun::PhotonNetwork::_set_frame(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_frame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "frame", value));
}
// Autogenerated static field getter
// Get static field: static private System.Diagnostics.Stopwatch StartupStopwatch
::System::Diagnostics::Stopwatch* Photon::Pun::PhotonNetwork::_get_StartupStopwatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_StartupStopwatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Stopwatch*>("Photon.Pun", "PhotonNetwork", "StartupStopwatch"));
}
// Autogenerated static field setter
// Set static field: static private System.Diagnostics.Stopwatch StartupStopwatch
void Photon::Pun::PhotonNetwork::_set_StartupStopwatch(::System::Diagnostics::Stopwatch* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_StartupStopwatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "StartupStopwatch", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single MinimalTimeScaleToDispatchInFixedUpdate
float Photon::Pun::PhotonNetwork::_get_MinimalTimeScaleToDispatchInFixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_MinimalTimeScaleToDispatchInFixedUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Photon.Pun", "PhotonNetwork", "MinimalTimeScaleToDispatchInFixedUpdate"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MinimalTimeScaleToDispatchInFixedUpdate
void Photon::Pun::PhotonNetwork::_set_MinimalTimeScaleToDispatchInFixedUpdate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_MinimalTimeScaleToDispatchInFixedUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "MinimalTimeScaleToDispatchInFixedUpdate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean <UseAlternativeUdpPorts>k__BackingField
bool Photon::Pun::PhotonNetwork::_get_$UseAlternativeUdpPorts$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_$UseAlternativeUdpPorts$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonNetwork", "<UseAlternativeUdpPorts>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <UseAlternativeUdpPorts>k__BackingField
void Photon::Pun::PhotonNetwork::_set_$UseAlternativeUdpPorts$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_$UseAlternativeUdpPorts$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "<UseAlternativeUdpPorts>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 lastUsedViewSubId
int Photon::Pun::PhotonNetwork::_get_lastUsedViewSubId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_lastUsedViewSubId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "lastUsedViewSubId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 lastUsedViewSubId
void Photon::Pun::PhotonNetwork::_set_lastUsedViewSubId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_lastUsedViewSubId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "lastUsedViewSubId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 lastUsedViewSubIdStatic
int Photon::Pun::PhotonNetwork::_get_lastUsedViewSubIdStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_lastUsedViewSubIdStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "lastUsedViewSubIdStatic"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 lastUsedViewSubIdStatic
void Photon::Pun::PhotonNetwork::_set_lastUsedViewSubIdStatic(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_lastUsedViewSubIdStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "lastUsedViewSubIdStatic", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.HashSet`1<System.String> PrefabsWithoutMagicCallback
::System::Collections::Generic::HashSet_1<::StringW>* Photon::Pun::PhotonNetwork::_get_PrefabsWithoutMagicCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_PrefabsWithoutMagicCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::StringW>*>("Photon.Pun", "PhotonNetwork", "PrefabsWithoutMagicCallback"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.HashSet`1<System.String> PrefabsWithoutMagicCallback
void Photon::Pun::PhotonNetwork::_set_PrefabsWithoutMagicCallback(::System::Collections::Generic::HashSet_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_PrefabsWithoutMagicCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "PrefabsWithoutMagicCallback", value));
}
// Autogenerated static field getter
// Get static field: static private readonly ExitGames.Client.Photon.Hashtable SendInstantiateEvHashtable
::ExitGames::Client::Photon::Hashtable* Photon::Pun::PhotonNetwork::_get_SendInstantiateEvHashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SendInstantiateEvHashtable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExitGames::Client::Photon::Hashtable*>("Photon.Pun", "PhotonNetwork", "SendInstantiateEvHashtable"));
}
// Autogenerated static field setter
// Set static field: static private readonly ExitGames.Client.Photon.Hashtable SendInstantiateEvHashtable
void Photon::Pun::PhotonNetwork::_set_SendInstantiateEvHashtable(::ExitGames::Client::Photon::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SendInstantiateEvHashtable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SendInstantiateEvHashtable", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Photon.Realtime.RaiseEventOptions SendInstantiateRaiseEventOptions
::Photon::Realtime::RaiseEventOptions* Photon::Pun::PhotonNetwork::_get_SendInstantiateRaiseEventOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SendInstantiateRaiseEventOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Pun", "PhotonNetwork", "SendInstantiateRaiseEventOptions"));
}
// Autogenerated static field setter
// Set static field: static private readonly Photon.Realtime.RaiseEventOptions SendInstantiateRaiseEventOptions
void Photon::Pun::PhotonNetwork::_set_SendInstantiateRaiseEventOptions(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SendInstantiateRaiseEventOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SendInstantiateRaiseEventOptions", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<System.Byte> allowedReceivingGroups
::System::Collections::Generic::HashSet_1<uint8_t>* Photon::Pun::PhotonNetwork::_get_allowedReceivingGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_allowedReceivingGroups");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<uint8_t>*>("Photon.Pun", "PhotonNetwork", "allowedReceivingGroups"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<System.Byte> allowedReceivingGroups
void Photon::Pun::PhotonNetwork::_set_allowedReceivingGroups(::System::Collections::Generic::HashSet_1<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_allowedReceivingGroups");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "allowedReceivingGroups", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<System.Byte> blockedSendingGroups
::System::Collections::Generic::HashSet_1<uint8_t>* Photon::Pun::PhotonNetwork::_get_blockedSendingGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_blockedSendingGroups");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<uint8_t>*>("Photon.Pun", "PhotonNetwork", "blockedSendingGroups"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<System.Byte> blockedSendingGroups
void Photon::Pun::PhotonNetwork::_set_blockedSendingGroups(::System::Collections::Generic::HashSet_1<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_blockedSendingGroups");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "blockedSendingGroups", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<Photon.Pun.PhotonView> reusablePVHashset
::System::Collections::Generic::HashSet_1<::Photon::Pun::PhotonView*>* Photon::Pun::PhotonNetwork::_get_reusablePVHashset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_reusablePVHashset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::Photon::Pun::PhotonView*>*>("Photon.Pun", "PhotonNetwork", "reusablePVHashset"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<Photon.Pun.PhotonView> reusablePVHashset
void Photon::Pun::PhotonNetwork::_set_reusablePVHashset(::System::Collections::Generic::HashSet_1<::Photon::Pun::PhotonView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_reusablePVHashset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "reusablePVHashset", value));
}
// Autogenerated static field getter
// Get static field: static private ExitGames.Client.Photon.NonAllocDictionary`2<System.Int32,Photon.Pun.PhotonView> photonViewList
::ExitGames::Client::Photon::NonAllocDictionary_2<int, ::Photon::Pun::PhotonView*>* Photon::Pun::PhotonNetwork::_get_photonViewList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_photonViewList");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::ExitGames::Client::Photon::NonAllocDictionary_2<int, ::Photon::Pun::PhotonView*>*>("Photon.Pun", "PhotonNetwork", "photonViewList")));
}
// Autogenerated static field setter
// Set static field: static private ExitGames.Client.Photon.NonAllocDictionary`2<System.Int32,Photon.Pun.PhotonView> photonViewList
void Photon::Pun::PhotonNetwork::_set_photonViewList(::ExitGames::Client::Photon::NonAllocDictionary_2<int, ::Photon::Pun::PhotonView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_photonViewList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "photonViewList", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipRequestEv
::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* Photon::Pun::PhotonNetwork::_get_OnOwnershipRequestEv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_OnOwnershipRequestEv");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>*>("Photon.Pun", "PhotonNetwork", "OnOwnershipRequestEv")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipRequestEv
void Photon::Pun::PhotonNetwork::_set_OnOwnershipRequestEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_OnOwnershipRequestEv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "OnOwnershipRequestEv", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipTransferedEv
::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* Photon::Pun::PhotonNetwork::_get_OnOwnershipTransferedEv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_OnOwnershipTransferedEv");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>*>("Photon.Pun", "PhotonNetwork", "OnOwnershipTransferedEv")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipTransferedEv
void Photon::Pun::PhotonNetwork::_set_OnOwnershipTransferedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_OnOwnershipTransferedEv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "OnOwnershipTransferedEv", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipTransferFailedEv
::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* Photon::Pun::PhotonNetwork::_get_OnOwnershipTransferFailedEv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_OnOwnershipTransferFailedEv");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>*>("Photon.Pun", "PhotonNetwork", "OnOwnershipTransferFailedEv")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipTransferFailedEv
void Photon::Pun::PhotonNetwork::_set_OnOwnershipTransferFailedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_OnOwnershipTransferFailedEv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "OnOwnershipTransferFailedEv", value));
}
// Autogenerated static field getter
// Get static field: static System.Byte currentLevelPrefix
uint8_t Photon::Pun::PhotonNetwork::_get_currentLevelPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_currentLevelPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PhotonNetwork", "currentLevelPrefix"));
}
// Autogenerated static field setter
// Set static field: static System.Byte currentLevelPrefix
void Photon::Pun::PhotonNetwork::_set_currentLevelPrefix(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_currentLevelPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "currentLevelPrefix", value));
}
// Autogenerated static field getter
// Get static field: static System.Boolean loadingLevelAndPausedNetwork
bool Photon::Pun::PhotonNetwork::_get_loadingLevelAndPausedNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_loadingLevelAndPausedNetwork");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonNetwork", "loadingLevelAndPausedNetwork"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean loadingLevelAndPausedNetwork
void Photon::Pun::PhotonNetwork::_set_loadingLevelAndPausedNetwork(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_loadingLevelAndPausedNetwork");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "loadingLevelAndPausedNetwork", value));
}
// Autogenerated static field getter
// Get static field: static System.String CurrentSceneProperty
::StringW Photon::Pun::PhotonNetwork::_get_CurrentSceneProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_CurrentSceneProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun", "PhotonNetwork", "CurrentSceneProperty"));
}
// Autogenerated static field setter
// Set static field: static System.String CurrentSceneProperty
void Photon::Pun::PhotonNetwork::_set_CurrentSceneProperty(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_CurrentSceneProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "CurrentSceneProperty", value));
}
// Autogenerated static field getter
// Get static field: static System.String CurrentScenePropertyLoadAsync
::StringW Photon::Pun::PhotonNetwork::_get_CurrentScenePropertyLoadAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_CurrentScenePropertyLoadAsync");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun", "PhotonNetwork", "CurrentScenePropertyLoadAsync"));
}
// Autogenerated static field setter
// Set static field: static System.String CurrentScenePropertyLoadAsync
void Photon::Pun::PhotonNetwork::_set_CurrentScenePropertyLoadAsync(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_CurrentScenePropertyLoadAsync");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "CurrentScenePropertyLoadAsync", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Pun.IPunPrefabPool prefabPool
::Photon::Pun::IPunPrefabPool* Photon::Pun::PhotonNetwork::_get_prefabPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_prefabPool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::IPunPrefabPool*>("Photon.Pun", "PhotonNetwork", "prefabPool"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Pun.IPunPrefabPool prefabPool
void Photon::Pun::PhotonNetwork::_set_prefabPool(::Photon::Pun::IPunPrefabPool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_prefabPool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "prefabPool", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean UseRpcMonoBehaviourCache
bool Photon::Pun::PhotonNetwork::_get_UseRpcMonoBehaviourCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_UseRpcMonoBehaviourCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonNetwork", "UseRpcMonoBehaviourCache"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean UseRpcMonoBehaviourCache
void Photon::Pun::PhotonNetwork::_set_UseRpcMonoBehaviourCache(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_UseRpcMonoBehaviourCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "UseRpcMonoBehaviourCache", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<System.Reflection.MethodInfo>> monoRPCMethodsCache
::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::System::Reflection::MethodInfo*>*>* Photon::Pun::PhotonNetwork::_get_monoRPCMethodsCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_monoRPCMethodsCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::System::Reflection::MethodInfo*>*>*>("Photon.Pun", "PhotonNetwork", "monoRPCMethodsCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<System.Reflection.MethodInfo>> monoRPCMethodsCache
void Photon::Pun::PhotonNetwork::_set_monoRPCMethodsCache(::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::System::Reflection::MethodInfo*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_monoRPCMethodsCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "monoRPCMethodsCache", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Int32> rpcShortcuts
::System::Collections::Generic::Dictionary_2<::StringW, int>* Photon::Pun::PhotonNetwork::_get_rpcShortcuts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_rpcShortcuts");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, int>*>("Photon.Pun", "PhotonNetwork", "rpcShortcuts")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Int32> rpcShortcuts
void Photon::Pun::PhotonNetwork::_set_rpcShortcuts(::System::Collections::Generic::Dictionary_2<::StringW, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_rpcShortcuts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "rpcShortcuts", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean RunRpcCoroutines
bool Photon::Pun::PhotonNetwork::_get_RunRpcCoroutines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_RunRpcCoroutines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonNetwork", "RunRpcCoroutines"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean RunRpcCoroutines
void Photon::Pun::PhotonNetwork::_set_RunRpcCoroutines(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_RunRpcCoroutines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "RunRpcCoroutines", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.AsyncOperation _AsyncLevelLoadingOperation
::UnityEngine::AsyncOperation* Photon::Pun::PhotonNetwork::_get__AsyncLevelLoadingOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get__AsyncLevelLoadingOperation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AsyncOperation*>("Photon.Pun", "PhotonNetwork", "_AsyncLevelLoadingOperation"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AsyncOperation _AsyncLevelLoadingOperation
void Photon::Pun::PhotonNetwork::_set__AsyncLevelLoadingOperation(::UnityEngine::AsyncOperation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set__AsyncLevelLoadingOperation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "_AsyncLevelLoadingOperation", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single _levelLoadingProgress
float Photon::Pun::PhotonNetwork::_get__levelLoadingProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get__levelLoadingProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Photon.Pun", "PhotonNetwork", "_levelLoadingProgress"));
}
// Autogenerated static field setter
// Set static field: static private System.Single _levelLoadingProgress
void Photon::Pun::PhotonNetwork::_set__levelLoadingProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set__levelLoadingProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "_levelLoadingProgress", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type typePunRPC
::System::Type* Photon::Pun::PhotonNetwork::_get_typePunRPC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_typePunRPC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("Photon.Pun", "PhotonNetwork", "typePunRPC"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type typePunRPC
void Photon::Pun::PhotonNetwork::_set_typePunRPC(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_typePunRPC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "typePunRPC", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type typePhotonMessageInfo
::System::Type* Photon::Pun::PhotonNetwork::_get_typePhotonMessageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_typePhotonMessageInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("Photon.Pun", "PhotonNetwork", "typePhotonMessageInfo"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type typePhotonMessageInfo
void Photon::Pun::PhotonNetwork::_set_typePhotonMessageInfo(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_typePhotonMessageInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "typePhotonMessageInfo", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteZero
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteZero"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteZero
void Photon::Pun::PhotonNetwork::_set_keyByteZero(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteZero", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteOne
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteOne");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteOne"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteOne
void Photon::Pun::PhotonNetwork::_set_keyByteOne(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteOne");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteOne", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteTwo
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteTwo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteTwo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteTwo"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteTwo
void Photon::Pun::PhotonNetwork::_set_keyByteTwo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteTwo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteTwo", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteThree
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteThree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteThree");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteThree"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteThree
void Photon::Pun::PhotonNetwork::_set_keyByteThree(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteThree");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteThree", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteFour
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteFour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteFour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteFour"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteFour
void Photon::Pun::PhotonNetwork::_set_keyByteFour(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteFour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteFour", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteFive
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteFive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteFive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteFive"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteFive
void Photon::Pun::PhotonNetwork::_set_keyByteFive(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteFive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteFive", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteSix
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteSix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteSix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteSix"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteSix
void Photon::Pun::PhotonNetwork::_set_keyByteSix(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteSix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteSix", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteSeven
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteSeven() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteSeven");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteSeven"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteSeven
void Photon::Pun::PhotonNetwork::_set_keyByteSeven(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteSeven");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteSeven", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteEight
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteEight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteEight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteEight"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteEight
void Photon::Pun::PhotonNetwork::_set_keyByteEight(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteEight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteEight", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] emptyObjectArray
::ArrayW<::Il2CppObject*> Photon::Pun::PhotonNetwork::_get_emptyObjectArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_emptyObjectArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("Photon.Pun", "PhotonNetwork", "emptyObjectArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] emptyObjectArray
void Photon::Pun::PhotonNetwork::_set_emptyObjectArray(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_emptyObjectArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "emptyObjectArray", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type[] emptyTypeArray
::ArrayW<::System::Type*> Photon::Pun::PhotonNetwork::_get_emptyTypeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_emptyTypeArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("Photon.Pun", "PhotonNetwork", "emptyTypeArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type[] emptyTypeArray
void Photon::Pun::PhotonNetwork::_set_emptyTypeArray(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_emptyTypeArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "emptyTypeArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<Photon.Pun.PhotonView> foundPVs
::System::Collections::Generic::List_1<::Photon::Pun::PhotonView*>* Photon::Pun::PhotonNetwork::_get_foundPVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_foundPVs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Photon::Pun::PhotonView*>*>("Photon.Pun", "PhotonNetwork", "foundPVs"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<Photon.Pun.PhotonView> foundPVs
void Photon::Pun::PhotonNetwork::_set_foundPVs(::System::Collections::Generic::List_1<::Photon::Pun::PhotonView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_foundPVs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "foundPVs", value));
}
// Autogenerated static field getter
// Get static field: static private readonly ExitGames.Client.Photon.Hashtable removeFilter
::ExitGames::Client::Photon::Hashtable* Photon::Pun::PhotonNetwork::_get_removeFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_removeFilter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExitGames::Client::Photon::Hashtable*>("Photon.Pun", "PhotonNetwork", "removeFilter"));
}
// Autogenerated static field setter
// Set static field: static private readonly ExitGames.Client.Photon.Hashtable removeFilter
void Photon::Pun::PhotonNetwork::_set_removeFilter(::ExitGames::Client::Photon::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_removeFilter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "removeFilter", value));
}
// Autogenerated static field getter
// Get static field: static private readonly ExitGames.Client.Photon.Hashtable ServerCleanDestroyEvent
::ExitGames::Client::Photon::Hashtable* Photon::Pun::PhotonNetwork::_get_ServerCleanDestroyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_ServerCleanDestroyEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExitGames::Client::Photon::Hashtable*>("Photon.Pun", "PhotonNetwork", "ServerCleanDestroyEvent"));
}
// Autogenerated static field setter
// Set static field: static private readonly ExitGames.Client.Photon.Hashtable ServerCleanDestroyEvent
void Photon::Pun::PhotonNetwork::_set_ServerCleanDestroyEvent(::ExitGames::Client::Photon::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_ServerCleanDestroyEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "ServerCleanDestroyEvent", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Photon.Realtime.RaiseEventOptions ServerCleanOptions
::Photon::Realtime::RaiseEventOptions* Photon::Pun::PhotonNetwork::_get_ServerCleanOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_ServerCleanOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Pun", "PhotonNetwork", "ServerCleanOptions"));
}
// Autogenerated static field setter
// Set static field: static private readonly Photon.Realtime.RaiseEventOptions ServerCleanOptions
void Photon::Pun::PhotonNetwork::_set_ServerCleanOptions(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_ServerCleanOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "ServerCleanOptions", value));
}
// Autogenerated static field getter
// Get static field: static Photon.Realtime.RaiseEventOptions SendToAllOptions
::Photon::Realtime::RaiseEventOptions* Photon::Pun::PhotonNetwork::_get_SendToAllOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SendToAllOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Pun", "PhotonNetwork", "SendToAllOptions"));
}
// Autogenerated static field setter
// Set static field: static Photon.Realtime.RaiseEventOptions SendToAllOptions
void Photon::Pun::PhotonNetwork::_set_SendToAllOptions(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SendToAllOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SendToAllOptions", value));
}
// Autogenerated static field getter
// Get static field: static Photon.Realtime.RaiseEventOptions SendToOthersOptions
::Photon::Realtime::RaiseEventOptions* Photon::Pun::PhotonNetwork::_get_SendToOthersOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SendToOthersOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Pun", "PhotonNetwork", "SendToOthersOptions"));
}
// Autogenerated static field setter
// Set static field: static Photon.Realtime.RaiseEventOptions SendToOthersOptions
void Photon::Pun::PhotonNetwork::_set_SendToOthersOptions(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SendToOthersOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SendToOthersOptions", value));
}
// Autogenerated static field getter
// Get static field: static Photon.Realtime.RaiseEventOptions SendToSingleOptions
::Photon::Realtime::RaiseEventOptions* Photon::Pun::PhotonNetwork::_get_SendToSingleOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SendToSingleOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Pun", "PhotonNetwork", "SendToSingleOptions"));
}
// Autogenerated static field setter
// Set static field: static Photon.Realtime.RaiseEventOptions SendToSingleOptions
void Photon::Pun::PhotonNetwork::_set_SendToSingleOptions(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SendToSingleOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SendToSingleOptions", value));
}
// Autogenerated static field getter
// Get static field: static private readonly ExitGames.Client.Photon.Hashtable rpcFilterByViewId
::ExitGames::Client::Photon::Hashtable* Photon::Pun::PhotonNetwork::_get_rpcFilterByViewId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_rpcFilterByViewId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExitGames::Client::Photon::Hashtable*>("Photon.Pun", "PhotonNetwork", "rpcFilterByViewId"));
}
// Autogenerated static field setter
// Set static field: static private readonly ExitGames.Client.Photon.Hashtable rpcFilterByViewId
void Photon::Pun::PhotonNetwork::_set_rpcFilterByViewId(::ExitGames::Client::Photon::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_rpcFilterByViewId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "rpcFilterByViewId", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Photon.Realtime.RaiseEventOptions OpCleanRpcBufferOptions
::Photon::Realtime::RaiseEventOptions* Photon::Pun::PhotonNetwork::_get_OpCleanRpcBufferOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_OpCleanRpcBufferOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Pun", "PhotonNetwork", "OpCleanRpcBufferOptions"));
}
// Autogenerated static field setter
// Set static field: static private readonly Photon.Realtime.RaiseEventOptions OpCleanRpcBufferOptions
void Photon::Pun::PhotonNetwork::_set_OpCleanRpcBufferOptions(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_OpCleanRpcBufferOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "OpCleanRpcBufferOptions", value));
}
// Autogenerated static field getter
// Get static field: static private ExitGames.Client.Photon.Hashtable rpcEvent
::ExitGames::Client::Photon::Hashtable* Photon::Pun::PhotonNetwork::_get_rpcEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_rpcEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExitGames::Client::Photon::Hashtable*>("Photon.Pun", "PhotonNetwork", "rpcEvent"));
}
// Autogenerated static field setter
// Set static field: static private ExitGames.Client.Photon.Hashtable rpcEvent
void Photon::Pun::PhotonNetwork::_set_rpcEvent(::ExitGames::Client::Photon::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_rpcEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "rpcEvent", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Realtime.RaiseEventOptions RpcOptionsToAll
::Photon::Realtime::RaiseEventOptions* Photon::Pun::PhotonNetwork::_get_RpcOptionsToAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_RpcOptionsToAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Pun", "PhotonNetwork", "RpcOptionsToAll"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Realtime.RaiseEventOptions RpcOptionsToAll
void Photon::Pun::PhotonNetwork::_set_RpcOptionsToAll(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_RpcOptionsToAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "RpcOptionsToAll", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ObjectsInOneUpdate
int Photon::Pun::PhotonNetwork::_get_ObjectsInOneUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_ObjectsInOneUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "ObjectsInOneUpdate"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ObjectsInOneUpdate
void Photon::Pun::PhotonNetwork::_set_ObjectsInOneUpdate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_ObjectsInOneUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "ObjectsInOneUpdate", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Photon.Pun.PhotonStream serializeStreamOut
::Photon::Pun::PhotonStream* Photon::Pun::PhotonNetwork::_get_serializeStreamOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_serializeStreamOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonStream*>("Photon.Pun", "PhotonNetwork", "serializeStreamOut"));
}
// Autogenerated static field setter
// Set static field: static private readonly Photon.Pun.PhotonStream serializeStreamOut
void Photon::Pun::PhotonNetwork::_set_serializeStreamOut(::Photon::Pun::PhotonStream* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_serializeStreamOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "serializeStreamOut", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Photon.Pun.PhotonStream serializeStreamIn
::Photon::Pun::PhotonStream* Photon::Pun::PhotonNetwork::_get_serializeStreamIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_serializeStreamIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonStream*>("Photon.Pun", "PhotonNetwork", "serializeStreamIn"));
}
// Autogenerated static field setter
// Set static field: static private readonly Photon.Pun.PhotonStream serializeStreamIn
void Photon::Pun::PhotonNetwork::_set_serializeStreamIn(::Photon::Pun::PhotonStream* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_serializeStreamIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "serializeStreamIn", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Realtime.RaiseEventOptions serializeRaiseEvOptions
::Photon::Realtime::RaiseEventOptions* Photon::Pun::PhotonNetwork::_get_serializeRaiseEvOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_serializeRaiseEvOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Pun", "PhotonNetwork", "serializeRaiseEvOptions"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Realtime.RaiseEventOptions serializeRaiseEvOptions
void Photon::Pun::PhotonNetwork::_set_serializeRaiseEvOptions(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_serializeRaiseEvOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "serializeRaiseEvOptions", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<Photon.Pun.PhotonNetwork/RaiseEventBatch,Photon.Pun.PhotonNetwork/SerializeViewBatch> serializeViewBatches
::System::Collections::Generic::Dictionary_2<::Photon::Pun::PhotonNetwork::RaiseEventBatch, ::Photon::Pun::PhotonNetwork::SerializeViewBatch*>* Photon::Pun::PhotonNetwork::_get_serializeViewBatches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_serializeViewBatches");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Photon::Pun::PhotonNetwork::RaiseEventBatch, ::Photon::Pun::PhotonNetwork::SerializeViewBatch*>*>("Photon.Pun", "PhotonNetwork", "serializeViewBatches")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<Photon.Pun.PhotonNetwork/RaiseEventBatch,Photon.Pun.PhotonNetwork/SerializeViewBatch> serializeViewBatches
void Photon::Pun::PhotonNetwork::_set_serializeViewBatches(::System::Collections::Generic::Dictionary_2<::Photon::Pun::PhotonNetwork::RaiseEventBatch, ::Photon::Pun::PhotonNetwork::SerializeViewBatch*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_serializeViewBatches");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "serializeViewBatches", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.Queue`1<System.Object[]>>> cachedData
::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Queue_1<::ArrayW<::Il2CppObject*>>*>*>* Photon::Pun::PhotonNetwork::_get_cachedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_cachedData");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Queue_1<::ArrayW<::Il2CppObject*>>*>*>*>("Photon.Pun", "PhotonNetwork", "cachedData")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.Queue`1<System.Object[]>>> cachedData
void Photon::Pun::PhotonNetwork::_set_cachedData(::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Queue_1<::ArrayW<::Il2CppObject*>>*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_cachedData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "cachedData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SyncViewId
int Photon::Pun::PhotonNetwork::_get_SyncViewId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SyncViewId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "SyncViewId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SyncViewId
void Photon::Pun::PhotonNetwork::_set_SyncViewId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SyncViewId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SyncViewId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SyncCompressed
int Photon::Pun::PhotonNetwork::_get_SyncCompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SyncCompressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "SyncCompressed"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SyncCompressed
void Photon::Pun::PhotonNetwork::_set_SyncCompressed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SyncCompressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SyncCompressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SyncNullValues
int Photon::Pun::PhotonNetwork::_get_SyncNullValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SyncNullValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "SyncNullValues"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SyncNullValues
void Photon::Pun::PhotonNetwork::_set_SyncNullValues(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SyncNullValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SyncNullValues", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SyncFirstValue
int Photon::Pun::PhotonNetwork::_get_SyncFirstValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SyncFirstValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "SyncFirstValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SyncFirstValue
void Photon::Pun::PhotonNetwork::_set_SyncFirstValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SyncFirstValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SyncFirstValue", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Realtime.RegionHandler _cachedRegionHandler
::Photon::Realtime::RegionHandler* Photon::Pun::PhotonNetwork::_get__cachedRegionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get__cachedRegionHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RegionHandler*>("Photon.Pun", "PhotonNetwork", "_cachedRegionHandler"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Realtime.RegionHandler _cachedRegionHandler
void Photon::Pun::PhotonNetwork::_set__cachedRegionHandler(::Photon::Realtime::RegionHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set__cachedRegionHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "_cachedRegionHandler", value));
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_GameVersion
::StringW Photon::Pun::PhotonNetwork::get_GameVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_GameVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_GameVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_GameVersion
void Photon::Pun::PhotonNetwork::set_GameVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_GameVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_GameVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_AppVersion
::StringW Photon::Pun::PhotonNetwork::get_AppVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_AppVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_AppVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_PhotonServerSettings
::Photon::Pun::ServerSettings* Photon::Pun::PhotonNetwork::get_PhotonServerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_PhotonServerSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_PhotonServerSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::ServerSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_PhotonServerSettings
void Photon::Pun::PhotonNetwork::set_PhotonServerSettings(::Photon::Pun::ServerSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_PhotonServerSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_PhotonServerSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_ServerAddress
::StringW Photon::Pun::PhotonNetwork::get_ServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_ServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_ServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CloudRegion
::StringW Photon::Pun::PhotonNetwork::get_CloudRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CloudRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CloudRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CurrentCluster
::StringW Photon::Pun::PhotonNetwork::get_CurrentCluster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CurrentCluster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CurrentCluster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_BestRegionSummaryInPreferences
::StringW Photon::Pun::PhotonNetwork::get_BestRegionSummaryInPreferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_BestRegionSummaryInPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_BestRegionSummaryInPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_BestRegionSummaryInPreferences
void Photon::Pun::PhotonNetwork::set_BestRegionSummaryInPreferences(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_BestRegionSummaryInPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_BestRegionSummaryInPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_IsConnected
bool Photon::Pun::PhotonNetwork::get_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_IsConnectedAndReady
bool Photon::Pun::PhotonNetwork::get_IsConnectedAndReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_IsConnectedAndReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_IsConnectedAndReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_NetworkClientState
::Photon::Realtime::ClientState Photon::Pun::PhotonNetwork::get_NetworkClientState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_NetworkClientState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_NetworkClientState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::ClientState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_Server
::Photon::Realtime::ServerConnection Photon::Pun::PhotonNetwork::get_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_Server");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_Server", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::ServerConnection, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_AuthValues
::Photon::Realtime::AuthenticationValues* Photon::Pun::PhotonNetwork::get_AuthValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_AuthValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_AuthValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::AuthenticationValues*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_AuthValues
void Photon::Pun::PhotonNetwork::set_AuthValues(::Photon::Realtime::AuthenticationValues* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_AuthValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_AuthValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CurrentLobby
::Photon::Realtime::TypedLobby* Photon::Pun::PhotonNetwork::get_CurrentLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CurrentLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CurrentLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::TypedLobby*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CurrentRoom
::Photon::Realtime::Room* Photon::Pun::PhotonNetwork::get_CurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Room*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_LocalPlayer
::Photon::Realtime::Player* Photon::Pun::PhotonNetwork::get_LocalPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_LocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_LocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_NickName
::StringW Photon::Pun::PhotonNetwork::get_NickName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_NickName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_NickName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_NickName
void Photon::Pun::PhotonNetwork::set_NickName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_NickName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_NickName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_PlayerList
::ArrayW<::Photon::Realtime::Player*> Photon::Pun::PhotonNetwork::get_PlayerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_PlayerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_PlayerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Photon::Realtime::Player*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_PlayerListOthers
::ArrayW<::Photon::Realtime::Player*> Photon::Pun::PhotonNetwork::get_PlayerListOthers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_PlayerListOthers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_PlayerListOthers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Photon::Realtime::Player*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_OfflineMode
bool Photon::Pun::PhotonNetwork::get_OfflineMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_OfflineMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_OfflineMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_OfflineMode
void Photon::Pun::PhotonNetwork::set_OfflineMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_OfflineMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_OfflineMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_AutomaticallySyncScene
bool Photon::Pun::PhotonNetwork::get_AutomaticallySyncScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_AutomaticallySyncScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_AutomaticallySyncScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_AutomaticallySyncScene
void Photon::Pun::PhotonNetwork::set_AutomaticallySyncScene(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_AutomaticallySyncScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_AutomaticallySyncScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_EnableLobbyStatistics
bool Photon::Pun::PhotonNetwork::get_EnableLobbyStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_EnableLobbyStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_EnableLobbyStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_InLobby
bool Photon::Pun::PhotonNetwork::get_InLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_InLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_InLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_SendRate
int Photon::Pun::PhotonNetwork::get_SendRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_SendRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_SendRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_SendRate
void Photon::Pun::PhotonNetwork::set_SendRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_SendRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_SendRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_SerializationRate
int Photon::Pun::PhotonNetwork::get_SerializationRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_SerializationRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_SerializationRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_SerializationRate
void Photon::Pun::PhotonNetwork::set_SerializationRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_SerializationRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_SerializationRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_IsMessageQueueRunning
bool Photon::Pun::PhotonNetwork::get_IsMessageQueueRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_IsMessageQueueRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_IsMessageQueueRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_IsMessageQueueRunning
void Photon::Pun::PhotonNetwork::set_IsMessageQueueRunning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_IsMessageQueueRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_IsMessageQueueRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_Time
double Photon::Pun::PhotonNetwork::get_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_Time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_Time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_ServerTimestamp
int Photon::Pun::PhotonNetwork::get_ServerTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_ServerTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_ServerTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_KeepAliveInBackground
void Photon::Pun::PhotonNetwork::set_KeepAliveInBackground(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_KeepAliveInBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_KeepAliveInBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_KeepAliveInBackground
float Photon::Pun::PhotonNetwork::get_KeepAliveInBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_KeepAliveInBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_KeepAliveInBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_IsMasterClient
bool Photon::Pun::PhotonNetwork::get_IsMasterClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_IsMasterClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_IsMasterClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_MasterClient
::Photon::Realtime::Player* Photon::Pun::PhotonNetwork::get_MasterClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_MasterClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_MasterClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_InRoom
bool Photon::Pun::PhotonNetwork::get_InRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_InRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_InRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CountOfPlayersOnMaster
int Photon::Pun::PhotonNetwork::get_CountOfPlayersOnMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CountOfPlayersOnMaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CountOfPlayersOnMaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CountOfPlayersInRooms
int Photon::Pun::PhotonNetwork::get_CountOfPlayersInRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CountOfPlayersInRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CountOfPlayersInRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CountOfPlayers
int Photon::Pun::PhotonNetwork::get_CountOfPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CountOfPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CountOfPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CountOfRooms
int Photon::Pun::PhotonNetwork::get_CountOfRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CountOfRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CountOfRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_NetworkStatisticsEnabled
bool Photon::Pun::PhotonNetwork::get_NetworkStatisticsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_NetworkStatisticsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_NetworkStatisticsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_NetworkStatisticsEnabled
void Photon::Pun::PhotonNetwork::set_NetworkStatisticsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_NetworkStatisticsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_NetworkStatisticsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_ResentReliableCommands
int Photon::Pun::PhotonNetwork::get_ResentReliableCommands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_ResentReliableCommands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_ResentReliableCommands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CrcCheckEnabled
bool Photon::Pun::PhotonNetwork::get_CrcCheckEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CrcCheckEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CrcCheckEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_CrcCheckEnabled
void Photon::Pun::PhotonNetwork::set_CrcCheckEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_CrcCheckEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_CrcCheckEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_PacketLossByCrcCheck
int Photon::Pun::PhotonNetwork::get_PacketLossByCrcCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_PacketLossByCrcCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_PacketLossByCrcCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_MaxResendsBeforeDisconnect
int Photon::Pun::PhotonNetwork::get_MaxResendsBeforeDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_MaxResendsBeforeDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_MaxResendsBeforeDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_MaxResendsBeforeDisconnect
void Photon::Pun::PhotonNetwork::set_MaxResendsBeforeDisconnect(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_MaxResendsBeforeDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_MaxResendsBeforeDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_QuickResends
int Photon::Pun::PhotonNetwork::get_QuickResends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_QuickResends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_QuickResends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_QuickResends
void Photon::Pun::PhotonNetwork::set_QuickResends(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_QuickResends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_QuickResends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_UseAlternativeUdpPorts
bool Photon::Pun::PhotonNetwork::get_UseAlternativeUdpPorts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_UseAlternativeUdpPorts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_UseAlternativeUdpPorts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_UseAlternativeUdpPorts
void Photon::Pun::PhotonNetwork::set_UseAlternativeUdpPorts(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_UseAlternativeUdpPorts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_UseAlternativeUdpPorts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_ServerPortOverrides
::Photon::Realtime::PhotonPortDefinition Photon::Pun::PhotonNetwork::get_ServerPortOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_ServerPortOverrides");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_ServerPortOverrides", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::PhotonPortDefinition, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_ServerPortOverrides
void Photon::Pun::PhotonNetwork::set_ServerPortOverrides(::Photon::Realtime::PhotonPortDefinition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_ServerPortOverrides");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_ServerPortOverrides", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork..cctor
void Photon::Pun::PhotonNetwork::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.StaticReset
void Photon::Pun::PhotonNetwork::StaticReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::StaticReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "StaticReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ConnectUsingSettings
bool Photon::Pun::PhotonNetwork::ConnectUsingSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ConnectUsingSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ConnectUsingSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ConnectUsingSettings
bool Photon::Pun::PhotonNetwork::ConnectUsingSettings(::Photon::Realtime::AppSettings* appSettings, bool startInOfflineMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ConnectUsingSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ConnectUsingSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appSettings), ::il2cpp_utils::ExtractType(startInOfflineMode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appSettings, startInOfflineMode);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ConnectToMaster
bool Photon::Pun::PhotonNetwork::ConnectToMaster(::StringW masterServerAddress, int port, ::StringW appID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ConnectToMaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ConnectToMaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(masterServerAddress), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(appID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, masterServerAddress, port, appID);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ConnectToBestCloudServer
bool Photon::Pun::PhotonNetwork::ConnectToBestCloudServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ConnectToBestCloudServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ConnectToBestCloudServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ConnectToRegion
bool Photon::Pun::PhotonNetwork::ConnectToRegion(::StringW region) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ConnectToRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ConnectToRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(region)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, region);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.Disconnect
void Photon::Pun::PhotonNetwork::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.Reconnect
bool Photon::Pun::PhotonNetwork::Reconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::Reconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "Reconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.NetworkStatisticsReset
void Photon::Pun::PhotonNetwork::NetworkStatisticsReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::NetworkStatisticsReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "NetworkStatisticsReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.NetworkStatisticsToString
::StringW Photon::Pun::PhotonNetwork::NetworkStatisticsToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::NetworkStatisticsToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "NetworkStatisticsToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.VerifyCanUseNetwork
bool Photon::Pun::PhotonNetwork::VerifyCanUseNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::VerifyCanUseNetwork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "VerifyCanUseNetwork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.GetPing
int Photon::Pun::PhotonNetwork::GetPing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::GetPing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "GetPing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.FetchServerTimestamp
void Photon::Pun::PhotonNetwork::FetchServerTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::FetchServerTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "FetchServerTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SendAllOutgoingCommands
void Photon::Pun::PhotonNetwork::SendAllOutgoingCommands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SendAllOutgoingCommands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SendAllOutgoingCommands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.CloseConnection
bool Photon::Pun::PhotonNetwork::CloseConnection(::Photon::Realtime::Player* kickPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::CloseConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "CloseConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kickPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, kickPlayer);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetMasterClient
bool Photon::Pun::PhotonNetwork::SetMasterClient(::Photon::Realtime::Player* masterClientPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetMasterClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetMasterClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(masterClientPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, masterClientPlayer);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.JoinRandomRoom
bool Photon::Pun::PhotonNetwork::JoinRandomRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::JoinRandomRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "JoinRandomRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.JoinRandomRoom
bool Photon::Pun::PhotonNetwork::JoinRandomRoom(::ExitGames::Client::Photon::Hashtable* expectedCustomRoomProperties, uint8_t expectedMaxPlayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::JoinRandomRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "JoinRandomRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedCustomRoomProperties), ::il2cpp_utils::ExtractType(expectedMaxPlayers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expectedCustomRoomProperties, expectedMaxPlayers);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.JoinRandomRoom
bool Photon::Pun::PhotonNetwork::JoinRandomRoom(::ExitGames::Client::Photon::Hashtable* expectedCustomRoomProperties, uint8_t expectedMaxPlayers, ::Photon::Realtime::MatchmakingMode matchingType, ::Photon::Realtime::TypedLobby* typedLobby, ::StringW sqlLobbyFilter, ::ArrayW<::StringW> expectedUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::JoinRandomRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "JoinRandomRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedCustomRoomProperties), ::il2cpp_utils::ExtractType(expectedMaxPlayers), ::il2cpp_utils::ExtractType(matchingType), ::il2cpp_utils::ExtractType(typedLobby), ::il2cpp_utils::ExtractType(sqlLobbyFilter), ::il2cpp_utils::ExtractType(expectedUsers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expectedCustomRoomProperties, expectedMaxPlayers, matchingType, typedLobby, sqlLobbyFilter, expectedUsers);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.JoinRandomOrCreateRoom
bool Photon::Pun::PhotonNetwork::JoinRandomOrCreateRoom(::ExitGames::Client::Photon::Hashtable* expectedCustomRoomProperties, uint8_t expectedMaxPlayers, ::Photon::Realtime::MatchmakingMode matchingType, ::Photon::Realtime::TypedLobby* typedLobby, ::StringW sqlLobbyFilter, ::StringW roomName, ::Photon::Realtime::RoomOptions* roomOptions, ::ArrayW<::StringW> expectedUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::JoinRandomOrCreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "JoinRandomOrCreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedCustomRoomProperties), ::il2cpp_utils::ExtractType(expectedMaxPlayers), ::il2cpp_utils::ExtractType(matchingType), ::il2cpp_utils::ExtractType(typedLobby), ::il2cpp_utils::ExtractType(sqlLobbyFilter), ::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(roomOptions), ::il2cpp_utils::ExtractType(expectedUsers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expectedCustomRoomProperties, expectedMaxPlayers, matchingType, typedLobby, sqlLobbyFilter, roomName, roomOptions, expectedUsers);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.CreateRoom
bool Photon::Pun::PhotonNetwork::CreateRoom(::StringW roomName, ::Photon::Realtime::RoomOptions* roomOptions, ::Photon::Realtime::TypedLobby* typedLobby, ::ArrayW<::StringW> expectedUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::CreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "CreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(roomOptions), ::il2cpp_utils::ExtractType(typedLobby), ::il2cpp_utils::ExtractType(expectedUsers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomName, roomOptions, typedLobby, expectedUsers);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.JoinOrCreateRoom
bool Photon::Pun::PhotonNetwork::JoinOrCreateRoom(::StringW roomName, ::Photon::Realtime::RoomOptions* roomOptions, ::Photon::Realtime::TypedLobby* typedLobby, ::ArrayW<::StringW> expectedUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::JoinOrCreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "JoinOrCreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(roomOptions), ::il2cpp_utils::ExtractType(typedLobby), ::il2cpp_utils::ExtractType(expectedUsers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomName, roomOptions, typedLobby, expectedUsers);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.JoinRoom
bool Photon::Pun::PhotonNetwork::JoinRoom(::StringW roomName, ::ArrayW<::StringW> expectedUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::JoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "JoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(expectedUsers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomName, expectedUsers);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RejoinRoom
bool Photon::Pun::PhotonNetwork::RejoinRoom(::StringW roomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RejoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RejoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomName);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ReconnectAndRejoin
bool Photon::Pun::PhotonNetwork::ReconnectAndRejoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ReconnectAndRejoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ReconnectAndRejoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LeaveRoom
bool Photon::Pun::PhotonNetwork::LeaveRoom(bool becomeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LeaveRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LeaveRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(becomeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, becomeInactive);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.EnterOfflineRoom
void Photon::Pun::PhotonNetwork::EnterOfflineRoom(::StringW roomName, ::Photon::Realtime::RoomOptions* roomOptions, bool createdRoom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::EnterOfflineRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "EnterOfflineRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(roomOptions), ::il2cpp_utils::ExtractType(createdRoom)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomName, roomOptions, createdRoom);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.JoinLobby
bool Photon::Pun::PhotonNetwork::JoinLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::JoinLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "JoinLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.JoinLobby
bool Photon::Pun::PhotonNetwork::JoinLobby(::Photon::Realtime::TypedLobby* typedLobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::JoinLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "JoinLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typedLobby)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typedLobby);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LeaveLobby
bool Photon::Pun::PhotonNetwork::LeaveLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LeaveLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LeaveLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.FindFriends
bool Photon::Pun::PhotonNetwork::FindFriends(::ArrayW<::StringW> friendsToFind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::FindFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "FindFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(friendsToFind)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, friendsToFind);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.GetCustomRoomList
bool Photon::Pun::PhotonNetwork::GetCustomRoomList(::Photon::Realtime::TypedLobby* typedLobby, ::StringW sqlLobbyFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::GetCustomRoomList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "GetCustomRoomList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typedLobby), ::il2cpp_utils::ExtractType(sqlLobbyFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typedLobby, sqlLobbyFilter);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetPlayerCustomProperties
bool Photon::Pun::PhotonNetwork::SetPlayerCustomProperties(::ExitGames::Client::Photon::Hashtable* customProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetPlayerCustomProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetPlayerCustomProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(customProperties)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, customProperties);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RemovePlayerCustomProperties
void Photon::Pun::PhotonNetwork::RemovePlayerCustomProperties(::ArrayW<::StringW> customPropertiesToDelete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RemovePlayerCustomProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RemovePlayerCustomProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(customPropertiesToDelete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, customPropertiesToDelete);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RaiseEvent
bool Photon::Pun::PhotonNetwork::RaiseEvent(uint8_t eventCode, ::Il2CppObject* eventContent, ::Photon::Realtime::RaiseEventOptions* raiseEventOptions, ::ExitGames::Client::Photon::SendOptions sendOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RaiseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RaiseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventCode), ::il2cpp_utils::ExtractType(eventContent), ::il2cpp_utils::ExtractType(raiseEventOptions), ::il2cpp_utils::ExtractType(sendOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventCode, eventContent, raiseEventOptions, sendOptions);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RaiseEventInternal
bool Photon::Pun::PhotonNetwork::RaiseEventInternal(uint8_t eventCode, ::Il2CppObject* eventContent, ::Photon::Realtime::RaiseEventOptions* raiseEventOptions, ::ExitGames::Client::Photon::SendOptions sendOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RaiseEventInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RaiseEventInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventCode), ::il2cpp_utils::ExtractType(eventContent), ::il2cpp_utils::ExtractType(raiseEventOptions), ::il2cpp_utils::ExtractType(sendOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventCode, eventContent, raiseEventOptions, sendOptions);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.AllocateViewID
bool Photon::Pun::PhotonNetwork::AllocateViewID(::Photon::Pun::PhotonView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::AllocateViewID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "AllocateViewID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.AllocateSceneViewID
bool Photon::Pun::PhotonNetwork::AllocateSceneViewID(::Photon::Pun::PhotonView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::AllocateSceneViewID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "AllocateSceneViewID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.AllocateRoomViewID
bool Photon::Pun::PhotonNetwork::AllocateRoomViewID(::Photon::Pun::PhotonView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::AllocateRoomViewID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "AllocateRoomViewID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.AllocateViewID
int Photon::Pun::PhotonNetwork::AllocateViewID(bool roomObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::AllocateViewID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "AllocateViewID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomObject)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomObject);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.AllocateViewID
int Photon::Pun::PhotonNetwork::AllocateViewID(int ownerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::AllocateViewID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "AllocateViewID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ownerId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ownerId);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.Instantiate
::UnityEngine::GameObject* Photon::Pun::PhotonNetwork::Instantiate(::StringW prefabName, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, uint8_t group, ::ArrayW<::Il2CppObject*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabName, position, rotation, group, data);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.InstantiateSceneObject
::UnityEngine::GameObject* Photon::Pun::PhotonNetwork::InstantiateSceneObject(::StringW prefabName, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, uint8_t group, ::ArrayW<::Il2CppObject*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::InstantiateSceneObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "InstantiateSceneObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabName, position, rotation, group, data);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.InstantiateRoomObject
::UnityEngine::GameObject* Photon::Pun::PhotonNetwork::InstantiateRoomObject(::StringW prefabName, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, uint8_t group, ::ArrayW<::Il2CppObject*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::InstantiateRoomObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "InstantiateRoomObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabName, position, rotation, group, data);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.NetworkInstantiate
::UnityEngine::GameObject* Photon::Pun::PhotonNetwork::NetworkInstantiate(::ExitGames::Client::Photon::Hashtable* networkEvent, ::Photon::Realtime::Player* creator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::NetworkInstantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "NetworkInstantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(networkEvent), ::il2cpp_utils::ExtractType(creator)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, networkEvent, creator);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.NetworkInstantiate
::UnityEngine::GameObject* Photon::Pun::PhotonNetwork::NetworkInstantiate(::Photon::Pun::InstantiateParameters parameters, bool roomObject, bool instantiateEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::NetworkInstantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "NetworkInstantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(roomObject), ::il2cpp_utils::ExtractType(instantiateEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameters, roomObject, instantiateEvent);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SendInstantiate
bool Photon::Pun::PhotonNetwork::SendInstantiate(::Photon::Pun::InstantiateParameters parameters, bool roomObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SendInstantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SendInstantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(roomObject)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameters, roomObject);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.Destroy
void Photon::Pun::PhotonNetwork::Destroy(::Photon::Pun::PhotonView* targetView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetView);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.Destroy
void Photon::Pun::PhotonNetwork::Destroy(::UnityEngine::GameObject* targetGo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetGo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetGo);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.DestroyPlayerObjects
void Photon::Pun::PhotonNetwork::DestroyPlayerObjects(::Photon::Realtime::Player* targetPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::DestroyPlayerObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "DestroyPlayerObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetPlayer);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.DestroyPlayerObjects
void Photon::Pun::PhotonNetwork::DestroyPlayerObjects(int targetPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::DestroyPlayerObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "DestroyPlayerObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPlayerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetPlayerId);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.DestroyAll
void Photon::Pun::PhotonNetwork::DestroyAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::DestroyAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "DestroyAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RemoveRPCs
void Photon::Pun::PhotonNetwork::RemoveRPCs(::Photon::Realtime::Player* targetPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RemoveRPCs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RemoveRPCs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetPlayer);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RemoveRPCs
void Photon::Pun::PhotonNetwork::RemoveRPCs(::Photon::Pun::PhotonView* targetPhotonView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RemoveRPCs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RemoveRPCs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPhotonView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetPhotonView);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RPC
void Photon::Pun::PhotonNetwork::RPC(::Photon::Pun::PhotonView* view, ::StringW methodName, ::Photon::Pun::RpcTarget target, bool encrypt, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(encrypt), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view, methodName, target, encrypt, parameters);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RPC
void Photon::Pun::PhotonNetwork::RPC(::Photon::Pun::PhotonView* view, ::StringW methodName, ::Photon::Realtime::Player* targetPlayer, bool encrypt, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(targetPlayer), ::il2cpp_utils::ExtractType(encrypt), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view, methodName, targetPlayer, encrypt, parameters);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.FindGameObjectsWithComponent
::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>* Photon::Pun::PhotonNetwork::FindGameObjectsWithComponent(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::FindGameObjectsWithComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "FindGameObjectsWithComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetInterestGroups
void Photon::Pun::PhotonNetwork::SetInterestGroups(uint8_t group, bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetInterestGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetInterestGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, group, enabled);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LoadLevel
void Photon::Pun::PhotonNetwork::LoadLevel(int levelNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LoadLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LoadLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, levelNumber);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LoadLevel
void Photon::Pun::PhotonNetwork::LoadLevel(::StringW levelName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LoadLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LoadLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, levelName);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.WebRpc
bool Photon::Pun::PhotonNetwork::WebRpc(::StringW name, ::Il2CppObject* parameters, bool sendAuthCookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::WebRpc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "WebRpc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(sendAuthCookie)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, parameters, sendAuthCookie);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetupLogging
void Photon::Pun::PhotonNetwork::SetupLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetupLogging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetupLogging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LoadOrCreateSettings
void Photon::Pun::PhotonNetwork::LoadOrCreateSettings(bool reload) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LoadOrCreateSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LoadOrCreateSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reload)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reload);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_PhotonViews
::ArrayW<::Photon::Pun::PhotonView*> Photon::Pun::PhotonNetwork::get_PhotonViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_PhotonViews");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_PhotonViews", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Photon::Pun::PhotonView*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_PhotonViewCollection
typename ::ExitGames::Client::Photon::NonAllocDictionary_2<int, ::Photon::Pun::PhotonView*>::ValueIterator Photon::Pun::PhotonNetwork::get_PhotonViewCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_PhotonViewCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_PhotonViewCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<typename ::ExitGames::Client::Photon::NonAllocDictionary_2<int, ::Photon::Pun::PhotonView*>::ValueIterator, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_ViewCount
int Photon::Pun::PhotonNetwork::get_ViewCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_ViewCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_ViewCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.add_OnOwnershipRequestEv
void Photon::Pun::PhotonNetwork::add_OnOwnershipRequestEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::add_OnOwnershipRequestEv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "add_OnOwnershipRequestEv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.remove_OnOwnershipRequestEv
void Photon::Pun::PhotonNetwork::remove_OnOwnershipRequestEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::remove_OnOwnershipRequestEv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "remove_OnOwnershipRequestEv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.add_OnOwnershipTransferedEv
void Photon::Pun::PhotonNetwork::add_OnOwnershipTransferedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::add_OnOwnershipTransferedEv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "add_OnOwnershipTransferedEv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.remove_OnOwnershipTransferedEv
void Photon::Pun::PhotonNetwork::remove_OnOwnershipTransferedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::remove_OnOwnershipTransferedEv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "remove_OnOwnershipTransferedEv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.add_OnOwnershipTransferFailedEv
void Photon::Pun::PhotonNetwork::add_OnOwnershipTransferFailedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::add_OnOwnershipTransferFailedEv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "add_OnOwnershipTransferFailedEv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.remove_OnOwnershipTransferFailedEv
void Photon::Pun::PhotonNetwork::remove_OnOwnershipTransferFailedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::remove_OnOwnershipTransferFailedEv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "remove_OnOwnershipTransferFailedEv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.AddCallbackTarget
void Photon::Pun::PhotonNetwork::AddCallbackTarget(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::AddCallbackTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "AddCallbackTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RemoveCallbackTarget
void Photon::Pun::PhotonNetwork::RemoveCallbackTarget(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RemoveCallbackTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RemoveCallbackTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.CallbacksToString
::StringW Photon::Pun::PhotonNetwork::CallbacksToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::CallbacksToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "CallbacksToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_PrefabPool
::Photon::Pun::IPunPrefabPool* Photon::Pun::PhotonNetwork::get_PrefabPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_PrefabPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_PrefabPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::IPunPrefabPool*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_PrefabPool
void Photon::Pun::PhotonNetwork::set_PrefabPool(::Photon::Pun::IPunPrefabPool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_PrefabPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_PrefabPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_LevelLoadingProgress
float Photon::Pun::PhotonNetwork::get_LevelLoadingProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_LevelLoadingProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_LevelLoadingProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LeftRoomCleanup
void Photon::Pun::PhotonNetwork::LeftRoomCleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LeftRoomCleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LeftRoomCleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LocalCleanupAnythingInstantiated
void Photon::Pun::PhotonNetwork::LocalCleanupAnythingInstantiated(bool destroyInstantiatedGameObjects) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LocalCleanupAnythingInstantiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LocalCleanupAnythingInstantiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destroyInstantiatedGameObjects)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, destroyInstantiatedGameObjects);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ResetPhotonViewsOnSerialize
void Photon::Pun::PhotonNetwork::ResetPhotonViewsOnSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ResetPhotonViewsOnSerialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ResetPhotonViewsOnSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ExecuteRpc
void Photon::Pun::PhotonNetwork::ExecuteRpc(::ExitGames::Client::Photon::Hashtable* rpcData, ::Photon::Realtime::Player* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ExecuteRpc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ExecuteRpc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rpcData), ::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rpcData, sender);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.CheckTypeMatch
bool Photon::Pun::PhotonNetwork::CheckTypeMatch(::ArrayW<::System::Reflection::ParameterInfo*> methodParameters, ::ArrayW<::System::Type*> callParameterTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::CheckTypeMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "CheckTypeMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodParameters), ::il2cpp_utils::ExtractType(callParameterTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, methodParameters, callParameterTypes);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.DestroyPlayerObjects
void Photon::Pun::PhotonNetwork::DestroyPlayerObjects(int playerId, bool localOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::DestroyPlayerObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "DestroyPlayerObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerId), ::il2cpp_utils::ExtractType(localOnly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerId, localOnly);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.DestroyAll
void Photon::Pun::PhotonNetwork::DestroyAll(bool localOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::DestroyAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "DestroyAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localOnly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, localOnly);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RemoveInstantiatedGO
void Photon::Pun::PhotonNetwork::RemoveInstantiatedGO(::UnityEngine::GameObject* go, bool localOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RemoveInstantiatedGO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RemoveInstantiatedGO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(localOnly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go, localOnly);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ServerCleanInstantiateAndDestroy
void Photon::Pun::PhotonNetwork::ServerCleanInstantiateAndDestroy(::Photon::Pun::PhotonView* photonView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ServerCleanInstantiateAndDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ServerCleanInstantiateAndDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(photonView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, photonView);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SendDestroyOfPlayer
void Photon::Pun::PhotonNetwork::SendDestroyOfPlayer(int actorNr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SendDestroyOfPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SendDestroyOfPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, actorNr);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SendDestroyOfAll
void Photon::Pun::PhotonNetwork::SendDestroyOfAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SendDestroyOfAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SendDestroyOfAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OpRemoveFromServerInstantiationsOfPlayer
void Photon::Pun::PhotonNetwork::OpRemoveFromServerInstantiationsOfPlayer(int actorNr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OpRemoveFromServerInstantiationsOfPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OpRemoveFromServerInstantiationsOfPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, actorNr);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RequestOwnership
void Photon::Pun::PhotonNetwork::RequestOwnership(int viewID, int fromOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RequestOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RequestOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewID), ::il2cpp_utils::ExtractType(fromOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, viewID, fromOwner);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.TransferOwnership
void Photon::Pun::PhotonNetwork::TransferOwnership(int viewID, int playerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::TransferOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "TransferOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewID), ::il2cpp_utils::ExtractType(playerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, viewID, playerID);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OwnershipUpdate
void Photon::Pun::PhotonNetwork::OwnershipUpdate(::ArrayW<int> viewOwnerPairs, int targetActor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OwnershipUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OwnershipUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewOwnerPairs), ::il2cpp_utils::ExtractType(targetActor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, viewOwnerPairs, targetActor);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LocalCleanPhotonView
bool Photon::Pun::PhotonNetwork::LocalCleanPhotonView(::Photon::Pun::PhotonView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LocalCleanPhotonView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LocalCleanPhotonView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.GetPhotonView
::Photon::Pun::PhotonView* Photon::Pun::PhotonNetwork::GetPhotonView(int viewID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::GetPhotonView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "GetPhotonView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, viewID);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RegisterPhotonView
void Photon::Pun::PhotonNetwork::RegisterPhotonView(::Photon::Pun::PhotonView* netView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RegisterPhotonView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RegisterPhotonView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(netView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, netView);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OpCleanActorRpcBuffer
void Photon::Pun::PhotonNetwork::OpCleanActorRpcBuffer(int actorNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OpCleanActorRpcBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OpCleanActorRpcBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, actorNumber);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OpRemoveCompleteCacheOfPlayer
void Photon::Pun::PhotonNetwork::OpRemoveCompleteCacheOfPlayer(int actorNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OpRemoveCompleteCacheOfPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OpRemoveCompleteCacheOfPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, actorNumber);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OpRemoveCompleteCache
void Photon::Pun::PhotonNetwork::OpRemoveCompleteCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OpRemoveCompleteCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OpRemoveCompleteCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RemoveCacheOfLeftPlayers
void Photon::Pun::PhotonNetwork::RemoveCacheOfLeftPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RemoveCacheOfLeftPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RemoveCacheOfLeftPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.CleanRpcBufferIfMine
void Photon::Pun::PhotonNetwork::CleanRpcBufferIfMine(::Photon::Pun::PhotonView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::CleanRpcBufferIfMine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "CleanRpcBufferIfMine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OpCleanRpcBuffer
void Photon::Pun::PhotonNetwork::OpCleanRpcBuffer(::Photon::Pun::PhotonView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OpCleanRpcBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OpCleanRpcBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RemoveRPCsInGroup
void Photon::Pun::PhotonNetwork::RemoveRPCsInGroup(int group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RemoveRPCsInGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RemoveRPCsInGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, group);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RemoveBufferedRPCs
bool Photon::Pun::PhotonNetwork::RemoveBufferedRPCs(int viewId, ::StringW methodName, ::ArrayW<int> callersActorNumbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RemoveBufferedRPCs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RemoveBufferedRPCs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewId), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(callersActorNumbers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, viewId, methodName, callersActorNumbers);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetLevelPrefix
void Photon::Pun::PhotonNetwork::SetLevelPrefix(uint8_t prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetLevelPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetLevelPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefix);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RPC
void Photon::Pun::PhotonNetwork::RPC(::Photon::Pun::PhotonView* view, ::StringW methodName, ::Photon::Pun::RpcTarget target, ::Photon::Realtime::Player* player, bool encrypt, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(encrypt), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view, methodName, target, player, encrypt, parameters);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetInterestGroups
void Photon::Pun::PhotonNetwork::SetInterestGroups(::ArrayW<uint8_t> disableGroups, ::ArrayW<uint8_t> enableGroups) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetInterestGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetInterestGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disableGroups), ::il2cpp_utils::ExtractType(enableGroups)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, disableGroups, enableGroups);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetSendingEnabled
void Photon::Pun::PhotonNetwork::SetSendingEnabled(uint8_t group, bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetSendingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetSendingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, group, enabled);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetSendingEnabled
void Photon::Pun::PhotonNetwork::SetSendingEnabled(::ArrayW<uint8_t> disableGroups, ::ArrayW<uint8_t> enableGroups) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetSendingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetSendingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disableGroups), ::il2cpp_utils::ExtractType(enableGroups)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, disableGroups, enableGroups);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.NewSceneLoaded
void Photon::Pun::PhotonNetwork::NewSceneLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::NewSceneLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "NewSceneLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RunViewUpdate
void Photon::Pun::PhotonNetwork::RunViewUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RunViewUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RunViewUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SendSerializeViewBatch
void Photon::Pun::PhotonNetwork::SendSerializeViewBatch(::Photon::Pun::PhotonNetwork::SerializeViewBatch* batch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SendSerializeViewBatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SendSerializeViewBatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(batch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, batch);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OnSerializeWrite
::System::Collections::Generic::List_1<::Il2CppObject*>* Photon::Pun::PhotonNetwork::OnSerializeWrite(::Photon::Pun::PhotonView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OnSerializeWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OnSerializeWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Il2CppObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OnSerializeRead
void Photon::Pun::PhotonNetwork::OnSerializeRead(::ArrayW<::Il2CppObject*> data, ::Photon::Realtime::Player* sender, int networkTime, int16_t correctPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OnSerializeRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OnSerializeRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(networkTime), ::il2cpp_utils::ExtractType(correctPrefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, sender, networkTime, correctPrefix);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.DeltaCompressionWrite
::System::Collections::Generic::List_1<::Il2CppObject*>* Photon::Pun::PhotonNetwork::DeltaCompressionWrite(::System::Collections::Generic::List_1<::Il2CppObject*>* previousContent, ::System::Collections::Generic::List_1<::Il2CppObject*>* currentContent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::DeltaCompressionWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "DeltaCompressionWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousContent), ::il2cpp_utils::ExtractType(currentContent)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Il2CppObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, previousContent, currentContent);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.DeltaCompressionRead
::ArrayW<::Il2CppObject*> Photon::Pun::PhotonNetwork::DeltaCompressionRead(::ArrayW<::Il2CppObject*> lastOnSerializeDataReceived, ::ArrayW<::Il2CppObject*> incomingData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::DeltaCompressionRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "DeltaCompressionRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lastOnSerializeDataReceived), ::il2cpp_utils::ExtractType(incomingData)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lastOnSerializeDataReceived, incomingData);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.AlmostEquals
bool Photon::Pun::PhotonNetwork::AlmostEquals(::System::Collections::Generic::IList_1<::Il2CppObject*>* lastData, ::System::Collections::Generic::IList_1<::Il2CppObject*>* currentContent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::AlmostEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "AlmostEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lastData), ::il2cpp_utils::ExtractType(currentContent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lastData, currentContent);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.AlmostEquals
bool Photon::Pun::PhotonNetwork::AlmostEquals(::Il2CppObject* one, ::Il2CppObject* two) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::AlmostEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "AlmostEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(one), ::il2cpp_utils::ExtractType(two)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, one, two);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.GetMethod
bool Photon::Pun::PhotonNetwork::GetMethod(::UnityEngine::MonoBehaviour* monob, ::StringW methodType, ByRef<::System::Reflection::MethodInfo*> mi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::GetMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "GetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monob), ::il2cpp_utils::ExtractType(methodType), ::il2cpp_utils::ExtractIndependentType<::System::Reflection::MethodInfo*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, monob, methodType, byref(mi));
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LoadLevelIfSynced
void Photon::Pun::PhotonNetwork::LoadLevelIfSynced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LoadLevelIfSynced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LoadLevelIfSynced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetLevelInPropsIfSynced
void Photon::Pun::PhotonNetwork::SetLevelInPropsIfSynced(::Il2CppObject* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetLevelInPropsIfSynced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetLevelInPropsIfSynced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, levelId);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OnEvent
void Photon::Pun::PhotonNetwork::OnEvent(::ExitGames::Client::Photon::EventData* photonEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OnEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OnEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(photonEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, photonEvent);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OnOperation
void Photon::Pun::PhotonNetwork::OnOperation(::ExitGames::Client::Photon::OperationResponse* opResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OnOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OnOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, opResponse);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OnClientStateChanged
void Photon::Pun::PhotonNetwork::OnClientStateChanged(::Photon::Realtime::ClientState previousState, ::Photon::Realtime::ClientState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OnClientStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OnClientStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousState), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, previousState, state);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OnRegionsPinged
void Photon::Pun::PhotonNetwork::OnRegionsPinged(::Photon::Realtime::RegionHandler* regionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OnRegionsPinged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OnRegionsPinged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(regionHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, regionHandler);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonNetwork/RaiseEventBatch
#include "Photon/Pun/PhotonNetwork.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte Group
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::PhotonNetwork::RaiseEventBatch::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RaiseEventBatch::dyn_Group");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Reliable
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonNetwork::RaiseEventBatch::dyn_Reliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RaiseEventBatch::dyn_Reliable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reliable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/RaiseEventBatch.Equals
bool Photon::Pun::PhotonNetwork::RaiseEventBatch::Equals(::Photon::Pun::PhotonNetwork::RaiseEventBatch other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RaiseEventBatch::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Photon::Pun::PhotonNetwork::RaiseEventBatch), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/RaiseEventBatch.GetHashCode
int Photon::Pun::PhotonNetwork::RaiseEventBatch::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RaiseEventBatch::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.PhotonNetwork/SerializeViewBatch
#include "Photon/Pun/PhotonNetwork_SerializeViewBatch.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Photon.Pun.PhotonNetwork/RaiseEventBatch Batch
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonNetwork::RaiseEventBatch& Photon::Pun::PhotonNetwork::SerializeViewBatch::dyn_Batch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::dyn_Batch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Batch"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonNetwork::RaiseEventBatch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Object> ObjectUpdates
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& Photon::Pun::PhotonNetwork::SerializeViewBatch::dyn_ObjectUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::dyn_ObjectUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ObjectUpdates"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 defaultSize
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonNetwork::SerializeViewBatch::dyn_defaultSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::dyn_defaultSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 offset
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonNetwork::SerializeViewBatch::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/SerializeViewBatch.Equals
bool Photon::Pun::PhotonNetwork::SerializeViewBatch::Equals(::Photon::Pun::PhotonNetwork::SerializeViewBatch* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonNetwork::SerializeViewBatch*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/SerializeViewBatch.Equals
bool Photon::Pun::PhotonNetwork::SerializeViewBatch::Equals(::Photon::Pun::PhotonNetwork::RaiseEventBatch other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonNetwork::SerializeViewBatch*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/SerializeViewBatch.Clear
void Photon::Pun::PhotonNetwork::SerializeViewBatch::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/SerializeViewBatch.Add
void Photon::Pun::PhotonNetwork::SerializeViewBatch::Add(::System::Collections::Generic::List_1<::Il2CppObject*>* viewData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewData);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/SerializeViewBatch.GetHashCode
int Photon::Pun::PhotonNetwork::SerializeViewBatch::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/SerializeViewBatch.Equals
bool Photon::Pun::PhotonNetwork::SerializeViewBatch::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonNetwork/<>c
#include "Photon/Pun/PhotonNetwork_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Realtime.IConnectionCallbacks
#include "Photon/Realtime/IConnectionCallbacks.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Pun.PhotonNetwork/<>c <>9
::Photon::Pun::PhotonNetwork::$$c* Photon::Pun::PhotonNetwork::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonNetwork::$$c*>("Photon.Pun", "PhotonNetwork/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Pun.PhotonNetwork/<>c <>9
void Photon::Pun::PhotonNetwork::$$c::_set_$$9(::Photon::Pun::PhotonNetwork::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__47_0
::System::Func_2<::Photon::Realtime::Player*, int>* Photon::Pun::PhotonNetwork::$$c::_get_$$9__47_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_get_$$9__47_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Realtime::Player*, int>*>("Photon.Pun", "PhotonNetwork/<>c", "<>9__47_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__47_0
void Photon::Pun::PhotonNetwork::$$c::_set_$$9__47_0(::System::Func_2<::Photon::Realtime::Player*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_set_$$9__47_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork/<>c", "<>9__47_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__49_0
::System::Func_2<::Photon::Realtime::Player*, int>* Photon::Pun::PhotonNetwork::$$c::_get_$$9__49_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_get_$$9__49_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Realtime::Player*, int>*>("Photon.Pun", "PhotonNetwork/<>c", "<>9__49_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__49_0
void Photon::Pun::PhotonNetwork::$$c::_set_$$9__49_0(::System::Func_2<::Photon::Realtime::Player*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_set_$$9__49_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork/<>c", "<>9__49_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Realtime.Player,System.Boolean> <>9__49_1
::System::Func_2<::Photon::Realtime::Player*, bool>* Photon::Pun::PhotonNetwork::$$c::_get_$$9__49_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_get_$$9__49_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Realtime::Player*, bool>*>("Photon.Pun", "PhotonNetwork/<>c", "<>9__49_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Realtime.Player,System.Boolean> <>9__49_1
void Photon::Pun::PhotonNetwork::$$c::_set_$$9__49_1(::System::Func_2<::Photon::Realtime::Player*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_set_$$9__49_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork/<>c", "<>9__49_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Realtime.IConnectionCallbacks,System.String> <>9__217_0
::System::Func_2<::Photon::Realtime::IConnectionCallbacks*, ::StringW>* Photon::Pun::PhotonNetwork::$$c::_get_$$9__217_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_get_$$9__217_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Realtime::IConnectionCallbacks*, ::StringW>*>("Photon.Pun", "PhotonNetwork/<>c", "<>9__217_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Realtime.IConnectionCallbacks,System.String> <>9__217_0
void Photon::Pun::PhotonNetwork::$$c::_set_$$9__217_0(::System::Func_2<::Photon::Realtime::IConnectionCallbacks*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_set_$$9__217_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork/<>c", "<>9__217_0", value)));
}
// Autogenerated method: Photon.Pun.PhotonNetwork/<>c..cctor
void Photon::Pun::PhotonNetwork::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/<>c.<get_PlayerList>b__47_0
int Photon::Pun::PhotonNetwork::$$c::$get_PlayerList$b__47_0(::Photon::Realtime::Player* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::<get_PlayerList>b__47_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_PlayerList>b__47_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/<>c.<get_PlayerListOthers>b__49_0
int Photon::Pun::PhotonNetwork::$$c::$get_PlayerListOthers$b__49_0(::Photon::Realtime::Player* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::<get_PlayerListOthers>b__49_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_PlayerListOthers>b__49_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/<>c.<get_PlayerListOthers>b__49_1
bool Photon::Pun::PhotonNetwork::$$c::$get_PlayerListOthers$b__49_1(::Photon::Realtime::Player* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::<get_PlayerListOthers>b__49_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_PlayerListOthers>b__49_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/<>c.<CallbacksToString>b__217_0
::StringW Photon::Pun::PhotonNetwork::$$c::$CallbacksToString$b__217_0(::Photon::Realtime::IConnectionCallbacks* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::<CallbacksToString>b__217_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CallbacksToString>b__217_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, m);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.PhotonStreamQueue
#include "Photon/Pun/PhotonStreamQueue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_SampleRate
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonStreamQueue::dyn_m_SampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::dyn_m_SampleRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SampleRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_SampleCount
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonStreamQueue::dyn_m_SampleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::dyn_m_SampleCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SampleCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ObjectsPerSample
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonStreamQueue::dyn_m_ObjectsPerSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::dyn_m_ObjectsPerSample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ObjectsPerSample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastSampleTime
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonStreamQueue::dyn_m_LastSampleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::dyn_m_LastSampleTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastSampleTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_LastFrameCount
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonStreamQueue::dyn_m_LastFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::dyn_m_LastFrameCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastFrameCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NextObjectIndex
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonStreamQueue::dyn_m_NextObjectIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::dyn_m_NextObjectIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NextObjectIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Object> m_Objects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& Photon::Pun::PhotonStreamQueue::dyn_m_Objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::dyn_m_Objects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Objects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsWriting
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonStreamQueue::dyn_m_IsWriting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::dyn_m_IsWriting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsWriting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonStreamQueue.BeginWritePackage
void Photon::Pun::PhotonStreamQueue::BeginWritePackage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::BeginWritePackage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWritePackage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStreamQueue.Reset
void Photon::Pun::PhotonStreamQueue::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStreamQueue.SendNext
void Photon::Pun::PhotonStreamQueue::SendNext(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::SendNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Photon.Pun.PhotonStreamQueue.HasQueuedObjects
bool Photon::Pun::PhotonStreamQueue::HasQueuedObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::HasQueuedObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasQueuedObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStreamQueue.ReceiveNext
::Il2CppObject* Photon::Pun::PhotonStreamQueue::ReceiveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::ReceiveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStreamQueue.Serialize
void Photon::Pun::PhotonStreamQueue::Serialize(::Photon::Pun::PhotonStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Photon.Pun.PhotonStreamQueue.Deserialize
void Photon::Pun::PhotonStreamQueue::Deserialize(::Photon::Pun::PhotonStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Photon.Pun.IOnPhotonViewPreNetDestroy
#include "Photon/Pun/IOnPhotonViewPreNetDestroy.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Photon.Pun.IOnPhotonViewOwnerChange
#include "Photon/Pun/IOnPhotonViewOwnerChange.hpp"
// Including type: Photon.Pun.IOnPhotonViewControllerChange
#include "Photon/Pun/IOnPhotonViewControllerChange.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Photon.Pun.IPhotonViewCallback
#include "Photon/Pun/IPhotonViewCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte Group
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::PhotonView::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 prefixField
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonView::dyn_prefixField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_prefixField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefixField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object[] instantiationDataField
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& Photon::Pun::PhotonView::dyn_instantiationDataField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_instantiationDataField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instantiationDataField"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Collections.Generic.List`1<System.Object> lastOnSerializeDataSent
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& Photon::Pun::PhotonView::dyn_lastOnSerializeDataSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_lastOnSerializeDataSent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastOnSerializeDataSent"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Collections.Generic.List`1<System.Object> syncValues
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& Photon::Pun::PhotonView::dyn_syncValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_syncValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncValues"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Object[] lastOnSerializeDataReceived
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& Photon::Pun::PhotonView::dyn_lastOnSerializeDataReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_lastOnSerializeDataReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastOnSerializeDataReceived"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.ViewSynchronization Synchronization
[[deprecated("Use field access instead!")]] ::Photon::Pun::ViewSynchronization& Photon::Pun::PhotonView::dyn_Synchronization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_Synchronization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Synchronization"))->offset;
  return *reinterpret_cast<::Photon::Pun::ViewSynchronization*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Boolean mixedModeIsReliable
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonView::dyn_mixedModeIsReliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_mixedModeIsReliable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixedModeIsReliable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.OwnershipOption OwnershipTransfer
[[deprecated("Use field access instead!")]] ::Photon::Pun::OwnershipOption& Photon::Pun::PhotonView::dyn_OwnershipTransfer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_OwnershipTransfer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OwnershipTransfer"))->offset;
  return *reinterpret_cast<::Photon::Pun::OwnershipOption*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonView/ObservableSearch observableSearch
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView::ObservableSearch& Photon::Pun::PhotonView::dyn_observableSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_observableSearch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "observableSearch"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView::ObservableSearch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Component> ObservedComponents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Component*>*& Photon::Pun::PhotonView::dyn_ObservedComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_ObservedComponents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ObservedComponents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Component*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.MonoBehaviour[] RpcMonoBehaviours
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::MonoBehaviour*>& Photon::Pun::PhotonView::dyn_RpcMonoBehaviours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_RpcMonoBehaviours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RpcMonoBehaviours"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MonoBehaviour*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsMine>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonView::dyn_$IsMine$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_$IsMine$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsMine>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player <Controller>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& Photon::Pun::PhotonView::dyn_$Controller$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_$Controller$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Controller>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <CreatorActorNr>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonView::dyn_$CreatorActorNr$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_$CreatorActorNr$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CreatorActorNr>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <AmOwner>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonView::dyn_$AmOwner$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_$AmOwner$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AmOwner>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player <Owner>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& Photon::Pun::PhotonView::dyn_$Owner$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_$Owner$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Owner>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 ownerActorNr
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonView::dyn_ownerActorNr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_ownerActorNr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerActorNr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 controllerActorNr
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonView::dyn_controllerActorNr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_controllerActorNr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerActorNr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sceneViewId
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonView::dyn_sceneViewId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_sceneViewId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneViewId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 viewIdField
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonView::dyn_viewIdField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_viewIdField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "viewIdField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 InstantiationId
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonView::dyn_InstantiationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_InstantiationId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InstantiationId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isRuntimeInstantiated
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonView::dyn_isRuntimeInstantiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_isRuntimeInstantiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRuntimeInstantiated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Boolean removedFromLocalViewList
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonView::dyn_removedFromLocalViewList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_removedFromLocalViewList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "removedFromLocalViewList"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<Photon.Pun.PhotonView/CallbackTargetChange> CallbackChangeQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Photon::Pun::PhotonView::CallbackTargetChange>*& Photon::Pun::PhotonView::dyn_CallbackChangeQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_CallbackChangeQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CallbackChangeQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Photon::Pun::PhotonView::CallbackTargetChange>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Pun.IOnPhotonViewPreNetDestroy> OnPreNetDestroyCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Pun::IOnPhotonViewPreNetDestroy*>*& Photon::Pun::PhotonView::dyn_OnPreNetDestroyCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_OnPreNetDestroyCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreNetDestroyCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Pun::IOnPhotonViewPreNetDestroy*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Pun.IOnPhotonViewOwnerChange> OnOwnerChangeCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Pun::IOnPhotonViewOwnerChange*>*& Photon::Pun::PhotonView::dyn_OnOwnerChangeCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_OnOwnerChangeCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnOwnerChangeCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Pun::IOnPhotonViewOwnerChange*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Pun.IOnPhotonViewControllerChange> OnControllerChangeCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Pun::IOnPhotonViewControllerChange*>*& Photon::Pun::PhotonView::dyn_OnControllerChangeCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_OnControllerChangeCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnControllerChangeCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Pun::IOnPhotonViewControllerChange*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonView.get_Prefix
int Photon::Pun::PhotonView::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_Prefix
void Photon::Pun::PhotonView::set_Prefix(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_InstantiationData
::ArrayW<::Il2CppObject*> Photon::Pun::PhotonView::get_InstantiationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_InstantiationData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstantiationData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_InstantiationData
void Photon::Pun::PhotonView::set_InstantiationData(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_InstantiationData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InstantiationData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_IsSceneView
bool Photon::Pun::PhotonView::get_IsSceneView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_IsSceneView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSceneView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.get_IsRoomView
bool Photon::Pun::PhotonView::get_IsRoomView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_IsRoomView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRoomView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.get_IsOwnerActive
bool Photon::Pun::PhotonView::get_IsOwnerActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_IsOwnerActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOwnerActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.get_IsMine
bool Photon::Pun::PhotonView::get_IsMine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_IsMine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_IsMine
void Photon::Pun::PhotonView::set_IsMine(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_IsMine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsMine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_AmController
bool Photon::Pun::PhotonView::get_AmController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_AmController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AmController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.get_Controller
::Photon::Realtime::Player* Photon::Pun::PhotonView::get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_Controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_Controller
void Photon::Pun::PhotonView::set_Controller(::Photon::Realtime::Player* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_Controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_CreatorActorNr
int Photon::Pun::PhotonView::get_CreatorActorNr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_CreatorActorNr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CreatorActorNr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_CreatorActorNr
void Photon::Pun::PhotonView::set_CreatorActorNr(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_CreatorActorNr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CreatorActorNr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_AmOwner
bool Photon::Pun::PhotonView::get_AmOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_AmOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AmOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_AmOwner
void Photon::Pun::PhotonView::set_AmOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_AmOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AmOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_Owner
::Photon::Realtime::Player* Photon::Pun::PhotonView::get_Owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_Owner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Owner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_Owner
void Photon::Pun::PhotonView::set_Owner(::Photon::Realtime::Player* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_Owner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Owner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_OwnerActorNr
int Photon::Pun::PhotonView::get_OwnerActorNr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_OwnerActorNr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OwnerActorNr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_OwnerActorNr
void Photon::Pun::PhotonView::set_OwnerActorNr(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_OwnerActorNr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OwnerActorNr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_ControllerActorNr
int Photon::Pun::PhotonView::get_ControllerActorNr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_ControllerActorNr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ControllerActorNr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_ControllerActorNr
void Photon::Pun::PhotonView::set_ControllerActorNr(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_ControllerActorNr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ControllerActorNr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_ViewID
int Photon::Pun::PhotonView::get_ViewID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_ViewID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ViewID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_ViewID
void Photon::Pun::PhotonView::set_ViewID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_ViewID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ViewID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.Awake
void Photon::Pun::PhotonView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.ResetPhotonView
void Photon::Pun::PhotonView::ResetPhotonView(bool resetOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ResetPhotonView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPhotonView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resetOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resetOwner);
}
// Autogenerated method: Photon.Pun.PhotonView.RebuildControllerCache
void Photon::Pun::PhotonView::RebuildControllerCache(bool ownerHasChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::RebuildControllerCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildControllerCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ownerHasChanged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ownerHasChanged);
}
// Autogenerated method: Photon.Pun.PhotonView.OnPreNetDestroy
void Photon::Pun::PhotonView::OnPreNetDestroy(::Photon::Pun::PhotonView* rootView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::OnPreNetDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreNetDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootView);
}
// Autogenerated method: Photon.Pun.PhotonView.OnDestroy
void Photon::Pun::PhotonView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.RequestOwnership
void Photon::Pun::PhotonView::RequestOwnership() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::RequestOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.TransferOwnership
void Photon::Pun::PhotonView::TransferOwnership(::Photon::Realtime::Player* newOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::TransferOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransferOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newOwner);
}
// Autogenerated method: Photon.Pun.PhotonView.TransferOwnership
void Photon::Pun::PhotonView::TransferOwnership(int newOwnerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::TransferOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransferOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newOwnerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newOwnerId);
}
// Autogenerated method: Photon.Pun.PhotonView.FindObservables
void Photon::Pun::PhotonView::FindObservables(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::FindObservables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindObservables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: Photon.Pun.PhotonView.SerializeView
void Photon::Pun::PhotonView::SerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::SerializeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: Photon.Pun.PhotonView.DeserializeView
void Photon::Pun::PhotonView::DeserializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::DeserializeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: Photon.Pun.PhotonView.DeserializeComponent
void Photon::Pun::PhotonView::DeserializeComponent(::UnityEngine::Component* component, ::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::DeserializeComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, stream, info);
}
// Autogenerated method: Photon.Pun.PhotonView.SerializeComponent
void Photon::Pun::PhotonView::SerializeComponent(::UnityEngine::Component* component, ::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::SerializeComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, stream, info);
}
// Autogenerated method: Photon.Pun.PhotonView.RefreshRpcMonoBehaviourCache
void Photon::Pun::PhotonView::RefreshRpcMonoBehaviourCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::RefreshRpcMonoBehaviourCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshRpcMonoBehaviourCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.RPC
void Photon::Pun::PhotonView::RPC(::StringW methodName, ::Photon::Pun::RpcTarget target, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::RPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, target, parameters);
}
// Autogenerated method: Photon.Pun.PhotonView.RpcSecure
void Photon::Pun::PhotonView::RpcSecure(::StringW methodName, ::Photon::Pun::RpcTarget target, bool encrypt, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::RpcSecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RpcSecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(encrypt), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, target, encrypt, parameters);
}
// Autogenerated method: Photon.Pun.PhotonView.RPC
void Photon::Pun::PhotonView::RPC(::StringW methodName, ::Photon::Realtime::Player* targetPlayer, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::RPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(targetPlayer), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, targetPlayer, parameters);
}
// Autogenerated method: Photon.Pun.PhotonView.RpcSecure
void Photon::Pun::PhotonView::RpcSecure(::StringW methodName, ::Photon::Realtime::Player* targetPlayer, bool encrypt, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::RpcSecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RpcSecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(targetPlayer), ::il2cpp_utils::ExtractType(encrypt), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, targetPlayer, encrypt, parameters);
}
// Autogenerated method: Photon.Pun.PhotonView.Get
::Photon::Pun::PhotonView* Photon::Pun::PhotonView::Get(::UnityEngine::Component* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonView", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component);
}
// Autogenerated method: Photon.Pun.PhotonView.Get
::Photon::Pun::PhotonView* Photon::Pun::PhotonView::Get(::UnityEngine::GameObject* gameObj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonView", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObj);
}
// Autogenerated method: Photon.Pun.PhotonView.Find
::Photon::Pun::PhotonView* Photon::Pun::PhotonView::Find(int viewID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonView", "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, viewID);
}
// Autogenerated method: Photon.Pun.PhotonView.AddCallbackTarget
void Photon::Pun::PhotonView::AddCallbackTarget(::Photon::Pun::IPhotonViewCallback* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::AddCallbackTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCallbackTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Photon.Pun.PhotonView.RemoveCallbackTarget
void Photon::Pun::PhotonView::RemoveCallbackTarget(::Photon::Pun::IPhotonViewCallback* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::RemoveCallbackTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCallbackTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Photon.Pun.PhotonView.UpdateCallbackLists
void Photon::Pun::PhotonView::UpdateCallbackLists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::UpdateCallbackLists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCallbackLists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.ToString
::StringW Photon::Pun::PhotonView::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Object*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonView/ObservableSearch
#include "Photon/Pun/PhotonView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonView/ObservableSearch Manual
::Photon::Pun::PhotonView::ObservableSearch Photon::Pun::PhotonView::ObservableSearch::_get_Manual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ObservableSearch::_get_Manual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonView::ObservableSearch>("Photon.Pun", "PhotonView/ObservableSearch", "Manual"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonView/ObservableSearch Manual
void Photon::Pun::PhotonView::ObservableSearch::_set_Manual(::Photon::Pun::PhotonView::ObservableSearch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ObservableSearch::_set_Manual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonView/ObservableSearch", "Manual", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonView/ObservableSearch AutoFindActive
::Photon::Pun::PhotonView::ObservableSearch Photon::Pun::PhotonView::ObservableSearch::_get_AutoFindActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ObservableSearch::_get_AutoFindActive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonView::ObservableSearch>("Photon.Pun", "PhotonView/ObservableSearch", "AutoFindActive"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonView/ObservableSearch AutoFindActive
void Photon::Pun::PhotonView::ObservableSearch::_set_AutoFindActive(::Photon::Pun::PhotonView::ObservableSearch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ObservableSearch::_set_AutoFindActive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonView/ObservableSearch", "AutoFindActive", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonView/ObservableSearch AutoFindAll
::Photon::Pun::PhotonView::ObservableSearch Photon::Pun::PhotonView::ObservableSearch::_get_AutoFindAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ObservableSearch::_get_AutoFindAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonView::ObservableSearch>("Photon.Pun", "PhotonView/ObservableSearch", "AutoFindAll"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonView/ObservableSearch AutoFindAll
void Photon::Pun::PhotonView::ObservableSearch::_set_AutoFindAll(::Photon::Pun::PhotonView::ObservableSearch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ObservableSearch::_set_AutoFindAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonView/ObservableSearch", "AutoFindAll", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonView::ObservableSearch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ObservableSearch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonView/CallbackTargetChange
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Pun.IPhotonViewCallback
#include "Photon/Pun/IPhotonViewCallback.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.IPhotonViewCallback obj
[[deprecated("Use field access instead!")]] ::Photon::Pun::IPhotonViewCallback*& Photon::Pun::PhotonView::CallbackTargetChange::dyn_obj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::CallbackTargetChange::dyn_obj");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obj"))->offset;
  return *reinterpret_cast<::Photon::Pun::IPhotonViewCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& Photon::Pun::PhotonView::CallbackTargetChange::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::CallbackTargetChange::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean add
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonView::CallbackTargetChange::dyn_add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::CallbackTargetChange::dyn_add");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "add"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonView/CallbackTargetChange..ctor
// ABORTED elsewhere.  Photon::Pun::PhotonView::CallbackTargetChange::CallbackTargetChange(::Photon::Pun::IPhotonViewCallback* obj, ::System::Type* type, bool add)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PunRPC
#include "Photon/Pun/PunRPC.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.MonoBehaviourPun
#include "Photon/Pun/MonoBehaviourPun.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonView pvCache
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& Photon::Pun::MonoBehaviourPun::dyn_pvCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPun::dyn_pvCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pvCache"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPun.get_photonView
::Photon::Pun::PhotonView* Photon::Pun::MonoBehaviourPun::get_photonView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPun::get_photonView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_photonView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.MonoBehaviourPunCallbacks
#include "Photon/Pun/MonoBehaviourPunCallbacks.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Realtime.DisconnectCause
#include "Photon/Realtime/DisconnectCause.hpp"
// Including type: Photon.Realtime.RegionHandler
#include "Photon/Realtime/RegionHandler.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.RoomInfo
#include "Photon/Realtime/RoomInfo.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ExitGames.Client.Photon.OperationResponse
#include "ExitGames/Client/Photon/OperationResponse.hpp"
// Including type: Photon.Realtime.TypedLobbyInfo
#include "Photon/Realtime/TypedLobbyInfo.hpp"
// Including type: Photon.Realtime.ErrorInfo
#include "Photon/Realtime/ErrorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnEnable
void Photon::Pun::MonoBehaviourPunCallbacks::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnDisable
void Photon::Pun::MonoBehaviourPunCallbacks::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnConnected
void Photon::Pun::MonoBehaviourPunCallbacks::OnConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnLeftRoom
void Photon::Pun::MonoBehaviourPunCallbacks::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnMasterClientSwitched
void Photon::Pun::MonoBehaviourPunCallbacks::OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnCreateRoomFailed
void Photon::Pun::MonoBehaviourPunCallbacks::OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnJoinRoomFailed
void Photon::Pun::MonoBehaviourPunCallbacks::OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnCreatedRoom
void Photon::Pun::MonoBehaviourPunCallbacks::OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnJoinedLobby
void Photon::Pun::MonoBehaviourPunCallbacks::OnJoinedLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnJoinedLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnLeftLobby
void Photon::Pun::MonoBehaviourPunCallbacks::OnLeftLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnLeftLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnDisconnected
void Photon::Pun::MonoBehaviourPunCallbacks::OnDisconnected(::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnRegionListReceived
void Photon::Pun::MonoBehaviourPunCallbacks::OnRegionListReceived(::Photon::Realtime::RegionHandler* regionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnRegionListReceived");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, regionHandler);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnRoomListUpdate
void Photon::Pun::MonoBehaviourPunCallbacks::OnRoomListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::RoomInfo*>* roomList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnRoomListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomList);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnJoinedRoom
void Photon::Pun::MonoBehaviourPunCallbacks::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnPlayerEnteredRoom
void Photon::Pun::MonoBehaviourPunCallbacks::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnPlayerLeftRoom
void Photon::Pun::MonoBehaviourPunCallbacks::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnJoinRandomFailed
void Photon::Pun::MonoBehaviourPunCallbacks::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnConnectedToMaster
void Photon::Pun::MonoBehaviourPunCallbacks::OnConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnConnectedToMaster");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnRoomPropertiesUpdate
void Photon::Pun::MonoBehaviourPunCallbacks::OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnPlayerPropertiesUpdate
void Photon::Pun::MonoBehaviourPunCallbacks::OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnFriendListUpdate
void Photon::Pun::MonoBehaviourPunCallbacks::OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnCustomAuthenticationResponse
void Photon::Pun::MonoBehaviourPunCallbacks::OnCustomAuthenticationResponse(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnCustomAuthenticationResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnCustomAuthenticationFailed
void Photon::Pun::MonoBehaviourPunCallbacks::OnCustomAuthenticationFailed(::StringW debugMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnCustomAuthenticationFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, debugMessage);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnWebRpcResponse
void Photon::Pun::MonoBehaviourPunCallbacks::OnWebRpcResponse(::ExitGames::Client::Photon::OperationResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnWebRpcResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnLobbyStatisticsUpdate
void Photon::Pun::MonoBehaviourPunCallbacks::OnLobbyStatisticsUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::TypedLobbyInfo*>* lobbyStatistics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnLobbyStatisticsUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyStatistics);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnErrorInfo
void Photon::Pun::MonoBehaviourPunCallbacks::OnErrorInfo(::Photon::Realtime::ErrorInfo* errorInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnErrorInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorInfo);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnPreLeavingRoom
void Photon::Pun::MonoBehaviourPunCallbacks::OnPreLeavingRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnPreLeavingRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 timeInt
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonMessageInfo::dyn_timeInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonMessageInfo::dyn_timeInt");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeInt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Photon.Realtime.Player Sender
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& Photon::Pun::PhotonMessageInfo::dyn_Sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonMessageInfo::dyn_Sender");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sender"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Photon.Pun.PhotonView photonView
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& Photon::Pun::PhotonMessageInfo::dyn_photonView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonMessageInfo::dyn_photonView");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photonView"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonMessageInfo..ctor
Photon::Pun::PhotonMessageInfo::PhotonMessageInfo(::Photon::Realtime::Player* player, int timestamp, ::Photon::Pun::PhotonView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonMessageInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, timestamp, view);
}
// Autogenerated method: Photon.Pun.PhotonMessageInfo.get_timestamp
double Photon::Pun::PhotonMessageInfo::get_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonMessageInfo::get_timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonMessageInfo.get_SentServerTime
double Photon::Pun::PhotonMessageInfo::get_SentServerTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonMessageInfo::get_SentServerTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_SentServerTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonMessageInfo.get_SentServerTimestamp
int Photon::Pun::PhotonMessageInfo::get_SentServerTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonMessageInfo::get_SentServerTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_SentServerTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonMessageInfo.ToString
::StringW Photon::Pun::PhotonMessageInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonMessageInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PunEvent
#include "Photon/Pun/PunEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte RPC
uint8_t Photon::Pun::PunEvent::_get_RPC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_RPC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "RPC"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte RPC
void Photon::Pun::PunEvent::_set_RPC(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_RPC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "RPC", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SendSerialize
uint8_t Photon::Pun::PunEvent::_get_SendSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_SendSerialize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "SendSerialize"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SendSerialize
void Photon::Pun::PunEvent::_set_SendSerialize(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_SendSerialize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "SendSerialize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Instantiation
uint8_t Photon::Pun::PunEvent::_get_Instantiation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_Instantiation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "Instantiation"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Instantiation
void Photon::Pun::PunEvent::_set_Instantiation(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_Instantiation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "Instantiation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CloseConnection
uint8_t Photon::Pun::PunEvent::_get_CloseConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_CloseConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "CloseConnection"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CloseConnection
void Photon::Pun::PunEvent::_set_CloseConnection(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_CloseConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "CloseConnection", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Destroy
uint8_t Photon::Pun::PunEvent::_get_Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_Destroy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "Destroy"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Destroy
void Photon::Pun::PunEvent::_set_Destroy(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_Destroy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "Destroy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte RemoveCachedRPCs
uint8_t Photon::Pun::PunEvent::_get_RemoveCachedRPCs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_RemoveCachedRPCs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "RemoveCachedRPCs"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte RemoveCachedRPCs
void Photon::Pun::PunEvent::_set_RemoveCachedRPCs(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_RemoveCachedRPCs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "RemoveCachedRPCs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SendSerializeReliable
uint8_t Photon::Pun::PunEvent::_get_SendSerializeReliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_SendSerializeReliable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "SendSerializeReliable"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SendSerializeReliable
void Photon::Pun::PunEvent::_set_SendSerializeReliable(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_SendSerializeReliable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "SendSerializeReliable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte DestroyPlayer
uint8_t Photon::Pun::PunEvent::_get_DestroyPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_DestroyPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "DestroyPlayer"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte DestroyPlayer
void Photon::Pun::PunEvent::_set_DestroyPlayer(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_DestroyPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "DestroyPlayer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte OwnershipRequest
uint8_t Photon::Pun::PunEvent::_get_OwnershipRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_OwnershipRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "OwnershipRequest"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte OwnershipRequest
void Photon::Pun::PunEvent::_set_OwnershipRequest(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_OwnershipRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "OwnershipRequest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte OwnershipTransfer
uint8_t Photon::Pun::PunEvent::_get_OwnershipTransfer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_OwnershipTransfer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "OwnershipTransfer"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte OwnershipTransfer
void Photon::Pun::PunEvent::_set_OwnershipTransfer(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_OwnershipTransfer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "OwnershipTransfer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte VacantViewIds
uint8_t Photon::Pun::PunEvent::_get_VacantViewIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_VacantViewIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "VacantViewIds"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte VacantViewIds
void Photon::Pun::PunEvent::_set_VacantViewIds(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_VacantViewIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "VacantViewIds", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte OwnershipUpdate
uint8_t Photon::Pun::PunEvent::_get_OwnershipUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_OwnershipUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "OwnershipUpdate"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte OwnershipUpdate
void Photon::Pun::PunEvent::_set_OwnershipUpdate(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_OwnershipUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "OwnershipUpdate", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Object> writeData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& Photon::Pun::PhotonStream::dyn_writeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::dyn_writeData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] readData
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& Photon::Pun::PhotonStream::dyn_readData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::dyn_readData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readData"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentItem
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonStream::dyn_currentItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::dyn_currentItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentItem"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsWriting>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonStream::dyn_$IsWriting$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::dyn_$IsWriting$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsWriting>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonStream.get_IsWriting
bool Photon::Pun::PhotonStream::get_IsWriting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::get_IsWriting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsWriting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStream.set_IsWriting
void Photon::Pun::PhotonStream::set_IsWriting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::set_IsWriting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsWriting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonStream.get_IsReading
bool Photon::Pun::PhotonStream::get_IsReading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::get_IsReading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStream.get_Count
int Photon::Pun::PhotonStream::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStream.SetReadStream
void Photon::Pun::PhotonStream::SetReadStream(::ArrayW<::Il2CppObject*> incomingData, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::SetReadStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReadStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(incomingData), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, incomingData, pos);
}
// Autogenerated method: Photon.Pun.PhotonStream.SetWriteStream
void Photon::Pun::PhotonStream::SetWriteStream(::System::Collections::Generic::List_1<::Il2CppObject*>* newWriteData, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::SetWriteStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWriteStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newWriteData), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newWriteData, pos);
}
// Autogenerated method: Photon.Pun.PhotonStream.GetWriteStream
::System::Collections::Generic::List_1<::Il2CppObject*>* Photon::Pun::PhotonStream::GetWriteStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::GetWriteStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWriteStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStream.ResetWriteStream
void Photon::Pun::PhotonStream::ResetWriteStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::ResetWriteStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetWriteStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStream.ReceiveNext
::Il2CppObject* Photon::Pun::PhotonStream::ReceiveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::ReceiveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStream.PeekNext
::Il2CppObject* Photon::Pun::PhotonStream::PeekNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::PeekNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStream.SendNext
void Photon::Pun::PhotonStream::SendNext(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::SendNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Photon.Pun.PhotonStream.CopyToListAndClear
bool Photon::Pun::PhotonStream::CopyToListAndClear(::System::Collections::Generic::List_1<::Il2CppObject*>* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::CopyToListAndClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyToListAndClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target);
}
// Autogenerated method: Photon.Pun.PhotonStream.ToArray
::ArrayW<::Il2CppObject*> Photon::Pun::PhotonStream::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::ToArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<bool> myBool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(myBool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(myBool));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<int> myInt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(myInt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(myInt));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<int16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<float> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(obj));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<::Photon::Realtime::Player*> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(obj));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<::UnityEngine::Vector3> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(obj));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<::UnityEngine::Vector2> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(obj));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<::UnityEngine::Quaternion> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(obj));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.SceneManagerHelper
#include "Photon/Pun/SceneManagerHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.SceneManagerHelper.get_ActiveSceneName
::StringW Photon::Pun::SceneManagerHelper::get_ActiveSceneName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::SceneManagerHelper::get_ActiveSceneName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "SceneManagerHelper", "get_ActiveSceneName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.SceneManagerHelper.get_ActiveSceneBuildIndex
int Photon::Pun::SceneManagerHelper::get_ActiveSceneBuildIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::SceneManagerHelper::get_ActiveSceneBuildIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "SceneManagerHelper", "get_ActiveSceneBuildIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.DefaultPool
#include "Photon/Pun/DefaultPool.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.Dictionary`2<System.String,UnityEngine.GameObject> ResourceCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>*& Photon::Pun::DefaultPool::dyn_ResourceCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::DefaultPool::dyn_ResourceCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ResourceCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.DefaultPool.Instantiate
::UnityEngine::GameObject* Photon::Pun::DefaultPool::Instantiate(::StringW prefabId, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::DefaultPool::Instantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::DefaultPool*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefabId, position, rotation);
}
// Autogenerated method: Photon.Pun.DefaultPool.Destroy
void Photon::Pun::DefaultPool::Destroy(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::DefaultPool::Destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::DefaultPool*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PunExtensions
#include "Photon/Pun/PunExtensions.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<System.Reflection.MethodInfo,System.Reflection.ParameterInfo[]> ParametersOfMethods
::System::Collections::Generic::Dictionary_2<::System::Reflection::MethodInfo*, ::ArrayW<::System::Reflection::ParameterInfo*>>* Photon::Pun::PunExtensions::_get_ParametersOfMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::_get_ParametersOfMethods");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Reflection::MethodInfo*, ::ArrayW<::System::Reflection::ParameterInfo*>>*>("Photon.Pun", "PunExtensions", "ParametersOfMethods")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<System.Reflection.MethodInfo,System.Reflection.ParameterInfo[]> ParametersOfMethods
void Photon::Pun::PunExtensions::_set_ParametersOfMethods(::System::Collections::Generic::Dictionary_2<::System::Reflection::MethodInfo*, ::ArrayW<::System::Reflection::ParameterInfo*>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::_set_ParametersOfMethods");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunExtensions", "ParametersOfMethods", value));
}
// Autogenerated method: Photon.Pun.PunExtensions.GetCachedParemeters
::ArrayW<::System::Reflection::ParameterInfo*> Photon::Pun::PunExtensions::GetCachedParemeters(::System::Reflection::MethodInfo* mo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::GetCachedParemeters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "GetCachedParemeters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mo)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mo);
}
// Autogenerated method: Photon.Pun.PunExtensions.GetPhotonViewsInChildren
::ArrayW<::Photon::Pun::PhotonView*> Photon::Pun::PunExtensions::GetPhotonViewsInChildren(::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::GetPhotonViewsInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "GetPhotonViewsInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Photon::Pun::PhotonView*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go);
}
// Autogenerated method: Photon.Pun.PunExtensions.GetPhotonView
::Photon::Pun::PhotonView* Photon::Pun::PunExtensions::GetPhotonView(::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::GetPhotonView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "GetPhotonView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go);
}
// Autogenerated method: Photon.Pun.PunExtensions.AlmostEquals
bool Photon::Pun::PunExtensions::AlmostEquals(::UnityEngine::Vector3 target, ::UnityEngine::Vector3 second, float sqrMagnitudePrecision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::AlmostEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "AlmostEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(sqrMagnitudePrecision)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, second, sqrMagnitudePrecision);
}
// Autogenerated method: Photon.Pun.PunExtensions.AlmostEquals
bool Photon::Pun::PunExtensions::AlmostEquals(::UnityEngine::Vector2 target, ::UnityEngine::Vector2 second, float sqrMagnitudePrecision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::AlmostEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "AlmostEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(sqrMagnitudePrecision)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, second, sqrMagnitudePrecision);
}
// Autogenerated method: Photon.Pun.PunExtensions.AlmostEquals
bool Photon::Pun::PunExtensions::AlmostEquals(::UnityEngine::Quaternion target, ::UnityEngine::Quaternion second, float maxAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::AlmostEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "AlmostEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(maxAngle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, second, maxAngle);
}
// Autogenerated method: Photon.Pun.PunExtensions.AlmostEquals
bool Photon::Pun::PunExtensions::AlmostEquals(float target, float second, float floatDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::AlmostEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "AlmostEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(floatDiff)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, second, floatDiff);
}
// Autogenerated method: Photon.Pun.PunExtensions.CheckIsAssignableFrom
bool Photon::Pun::PunExtensions::CheckIsAssignableFrom(::System::Type* to, ::System::Type* from) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::CheckIsAssignableFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "CheckIsAssignableFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(from)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, to, from);
}
// Autogenerated method: Photon.Pun.PunExtensions.CheckIsInterface
bool Photon::Pun::PunExtensions::CheckIsInterface(::System::Type* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::CheckIsInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "CheckIsInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, to);
}
// Autogenerated method: Photon.Pun.PunExtensions..cctor
void Photon::Pun::PunExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.ServerSettings
#include "Photon/Pun/ServerSettings.hpp"
// Including type: Photon.Realtime.AppSettings
#include "Photon/Realtime/AppSettings.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.AppSettings AppSettings
[[deprecated("Use field access instead!")]] ::Photon::Realtime::AppSettings*& Photon::Pun::ServerSettings::dyn_AppSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::dyn_AppSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppSettings"))->offset;
  return *reinterpret_cast<::Photon::Realtime::AppSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DevRegion
[[deprecated("Use field access instead!")]] ::StringW& Photon::Pun::ServerSettings::dyn_DevRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::dyn_DevRegion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DevRegion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PunLogLevel PunLogging
[[deprecated("Use field access instead!")]] ::Photon::Pun::PunLogLevel& Photon::Pun::ServerSettings::dyn_PunLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::dyn_PunLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PunLogging"))->offset;
  return *reinterpret_cast<::Photon::Pun::PunLogLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableSupportLogger
[[deprecated("Use field access instead!")]] bool& Photon::Pun::ServerSettings::dyn_EnableSupportLogger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::dyn_EnableSupportLogger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableSupportLogger"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RunInBackground
[[deprecated("Use field access instead!")]] bool& Photon::Pun::ServerSettings::dyn_RunInBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::dyn_RunInBackground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RunInBackground"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean StartInOfflineMode
[[deprecated("Use field access instead!")]] bool& Photon::Pun::ServerSettings::dyn_StartInOfflineMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::dyn_StartInOfflineMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartInOfflineMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> RpcList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Photon::Pun::ServerSettings::dyn_RpcList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::dyn_RpcList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RpcList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.ServerSettings.UseCloud
void Photon::Pun::ServerSettings::UseCloud(::StringW cloudAppid, ::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::UseCloud");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseCloud", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cloudAppid), ::il2cpp_utils::ExtractType(code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cloudAppid, code);
}
// Autogenerated method: Photon.Pun.ServerSettings.IsAppId
bool Photon::Pun::ServerSettings::IsAppId(::StringW val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::IsAppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "ServerSettings", "IsAppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: Photon.Pun.ServerSettings.get_BestRegionSummaryInPreferences
::StringW Photon::Pun::ServerSettings::get_BestRegionSummaryInPreferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::get_BestRegionSummaryInPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "ServerSettings", "get_BestRegionSummaryInPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.ServerSettings.ResetBestRegionCodeInPreferences
void Photon::Pun::ServerSettings::ResetBestRegionCodeInPreferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::ResetBestRegionCodeInPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "ServerSettings", "ResetBestRegionCodeInPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.ServerSettings.ToString
::StringW Photon::Pun::ServerSettings::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Object*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.NestedComponentUtilities
#include "Photon/Pun/NestedComponentUtilities.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Queue`1<UnityEngine.Transform> nodesQueue
::System::Collections::Generic::Queue_1<::UnityEngine::Transform*>* Photon::Pun::NestedComponentUtilities::_get_nodesQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::NestedComponentUtilities::_get_nodesQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::Queue_1<::UnityEngine::Transform*>*>("Photon.Pun", "NestedComponentUtilities", "nodesQueue"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Queue`1<UnityEngine.Transform> nodesQueue
void Photon::Pun::NestedComponentUtilities::_set_nodesQueue(::System::Collections::Generic::Queue_1<::UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::NestedComponentUtilities::_set_nodesQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "NestedComponentUtilities", "nodesQueue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<System.Type,System.Collections.ICollection> searchLists
::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::ICollection*>* Photon::Pun::NestedComponentUtilities::_get_searchLists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::NestedComponentUtilities::_get_searchLists");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::ICollection*>*>("Photon.Pun", "NestedComponentUtilities", "searchLists")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<System.Type,System.Collections.ICollection> searchLists
void Photon::Pun::NestedComponentUtilities::_set_searchLists(::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::ICollection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::NestedComponentUtilities::_set_searchLists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "NestedComponentUtilities", "searchLists", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Stack`1<UnityEngine.Transform> nodeStack
::System::Collections::Generic::Stack_1<::UnityEngine::Transform*>* Photon::Pun::NestedComponentUtilities::_get_nodeStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::NestedComponentUtilities::_get_nodeStack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::Stack_1<::UnityEngine::Transform*>*>("Photon.Pun", "NestedComponentUtilities", "nodeStack"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Stack`1<UnityEngine.Transform> nodeStack
void Photon::Pun::NestedComponentUtilities::_set_nodeStack(::System::Collections::Generic::Stack_1<::UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::NestedComponentUtilities::_set_nodeStack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "NestedComponentUtilities", "nodeStack", value));
}
// Autogenerated method: Photon.Pun.NestedComponentUtilities..cctor
void Photon::Pun::NestedComponentUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::NestedComponentUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "NestedComponentUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView
#include "Photon/Pun/PhotonAnimatorView.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/ParameterType
#include "Photon/Pun/PhotonAnimatorView_ParameterType.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizeType
#include "Photon/Pun/PhotonAnimatorView_SynchronizeType.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedParameter
#include "Photon/Pun/PhotonAnimatorView_SynchronizedParameter.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedLayer
#include "Photon/Pun/PhotonAnimatorView_SynchronizedLayer.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass18_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass18_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass19_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass19_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass22_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass22_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass23_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass23_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass24_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass24_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass25_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass25_0.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: Photon.Pun.PhotonStreamQueue
#include "Photon/Pun/PhotonStreamQueue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean TriggerUsageWarningDone
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonAnimatorView::dyn_TriggerUsageWarningDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_TriggerUsageWarningDone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TriggerUsageWarningDone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator m_Animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& Photon::Pun::PhotonAnimatorView::dyn_m_Animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_m_Animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonStreamQueue m_StreamQueue
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonStreamQueue*& Photon::Pun::PhotonAnimatorView::dyn_m_StreamQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_m_StreamQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StreamQueue"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonStreamQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ShowLayerWeightsInspector
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonAnimatorView::dyn_ShowLayerWeightsInspector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_ShowLayerWeightsInspector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShowLayerWeightsInspector"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ShowParameterInspector
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonAnimatorView::dyn_ShowParameterInspector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_ShowParameterInspector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShowParameterInspector"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Pun.PhotonAnimatorView/SynchronizedParameter> m_SynchronizeParameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Pun::PhotonAnimatorView::SynchronizedParameter*>*& Photon::Pun::PhotonAnimatorView::dyn_m_SynchronizeParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_m_SynchronizeParameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeParameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Pun::PhotonAnimatorView::SynchronizedParameter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Pun.PhotonAnimatorView/SynchronizedLayer> m_SynchronizeLayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Pun::PhotonAnimatorView::SynchronizedLayer*>*& Photon::Pun::PhotonAnimatorView::dyn_m_SynchronizeLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_m_SynchronizeLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeLayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Pun::PhotonAnimatorView::SynchronizedLayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_ReceiverPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::PhotonAnimatorView::dyn_m_ReceiverPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_m_ReceiverPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReceiverPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastDeserializeTime
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonAnimatorView::dyn_m_LastDeserializeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_m_LastDeserializeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastDeserializeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_WasSynchronizeTypeChanged
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonAnimatorView::dyn_m_WasSynchronizeTypeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_m_WasSynchronizeTypeChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WasSynchronizeTypeChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> m_raisedDiscreteTriggersCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Photon::Pun::PhotonAnimatorView::dyn_m_raisedDiscreteTriggersCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_m_raisedDiscreteTriggersCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_raisedDiscreteTriggersCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.Awake
void Photon::Pun::PhotonAnimatorView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.Update
void Photon::Pun::PhotonAnimatorView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.CacheDiscreteTriggers
void Photon::Pun::PhotonAnimatorView::CacheDiscreteTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::CacheDiscreteTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheDiscreteTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.DoesLayerSynchronizeTypeExist
bool Photon::Pun::PhotonAnimatorView::DoesLayerSynchronizeTypeExist(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::DoesLayerSynchronizeTypeExist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoesLayerSynchronizeTypeExist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.DoesParameterSynchronizeTypeExist
bool Photon::Pun::PhotonAnimatorView::DoesParameterSynchronizeTypeExist(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::DoesParameterSynchronizeTypeExist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoesParameterSynchronizeTypeExist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.GetSynchronizedLayers
::System::Collections::Generic::List_1<::Photon::Pun::PhotonAnimatorView::SynchronizedLayer*>* Photon::Pun::PhotonAnimatorView::GetSynchronizedLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::GetSynchronizedLayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSynchronizedLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Photon::Pun::PhotonAnimatorView::SynchronizedLayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.GetSynchronizedParameters
::System::Collections::Generic::List_1<::Photon::Pun::PhotonAnimatorView::SynchronizedParameter*>* Photon::Pun::PhotonAnimatorView::GetSynchronizedParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::GetSynchronizedParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSynchronizedParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Photon::Pun::PhotonAnimatorView::SynchronizedParameter*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.GetLayerSynchronizeType
::Photon::Pun::PhotonAnimatorView::SynchronizeType Photon::Pun::PhotonAnimatorView::GetLayerSynchronizeType(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::GetLayerSynchronizeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLayerSynchronizeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonAnimatorView::SynchronizeType, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.GetParameterSynchronizeType
::Photon::Pun::PhotonAnimatorView::SynchronizeType Photon::Pun::PhotonAnimatorView::GetParameterSynchronizeType(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::GetParameterSynchronizeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameterSynchronizeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonAnimatorView::SynchronizeType, false>(this, ___internal__method, name);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.SetLayerSynchronized
void Photon::Pun::PhotonAnimatorView::SetLayerSynchronized(int layerIndex, ::Photon::Pun::PhotonAnimatorView::SynchronizeType synchronizeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SetLayerSynchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayerSynchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(synchronizeType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layerIndex, synchronizeType);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.SetParameterSynchronized
void Photon::Pun::PhotonAnimatorView::SetParameterSynchronized(::StringW name, ::Photon::Pun::PhotonAnimatorView::ParameterType type, ::Photon::Pun::PhotonAnimatorView::SynchronizeType synchronizeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SetParameterSynchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParameterSynchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(synchronizeType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, type, synchronizeType);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.SerializeDataContinuously
void Photon::Pun::PhotonAnimatorView::SerializeDataContinuously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SerializeDataContinuously");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeDataContinuously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.DeserializeDataContinuously
void Photon::Pun::PhotonAnimatorView::DeserializeDataContinuously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::DeserializeDataContinuously");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeDataContinuously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.SerializeDataDiscretly
void Photon::Pun::PhotonAnimatorView::SerializeDataDiscretly(::Photon::Pun::PhotonStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SerializeDataDiscretly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeDataDiscretly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.DeserializeDataDiscretly
void Photon::Pun::PhotonAnimatorView::DeserializeDataDiscretly(::Photon::Pun::PhotonStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::DeserializeDataDiscretly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeDataDiscretly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.SerializeSynchronizationTypeState
void Photon::Pun::PhotonAnimatorView::SerializeSynchronizationTypeState(::Photon::Pun::PhotonStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SerializeSynchronizationTypeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeSynchronizationTypeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.DeserializeSynchronizationTypeState
void Photon::Pun::PhotonAnimatorView::DeserializeSynchronizationTypeState(::Photon::Pun::PhotonStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::DeserializeSynchronizationTypeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeSynchronizationTypeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.OnPhotonSerializeView
void Photon::Pun::PhotonAnimatorView::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonAnimatorView*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/ParameterType
#include "Photon/Pun/PhotonAnimatorView_ParameterType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonAnimatorView/ParameterType Float
::Photon::Pun::PhotonAnimatorView::ParameterType Photon::Pun::PhotonAnimatorView::ParameterType::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonAnimatorView::ParameterType>("Photon.Pun", "PhotonAnimatorView/ParameterType", "Float"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonAnimatorView/ParameterType Float
void Photon::Pun::PhotonAnimatorView::ParameterType::_set_Float(::Photon::Pun::PhotonAnimatorView::ParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonAnimatorView/ParameterType", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonAnimatorView/ParameterType Int
::Photon::Pun::PhotonAnimatorView::ParameterType Photon::Pun::PhotonAnimatorView::ParameterType::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonAnimatorView::ParameterType>("Photon.Pun", "PhotonAnimatorView/ParameterType", "Int"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonAnimatorView/ParameterType Int
void Photon::Pun::PhotonAnimatorView::ParameterType::_set_Int(::Photon::Pun::PhotonAnimatorView::ParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonAnimatorView/ParameterType", "Int", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonAnimatorView/ParameterType Bool
::Photon::Pun::PhotonAnimatorView::ParameterType Photon::Pun::PhotonAnimatorView::ParameterType::_get_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::_get_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonAnimatorView::ParameterType>("Photon.Pun", "PhotonAnimatorView/ParameterType", "Bool"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonAnimatorView/ParameterType Bool
void Photon::Pun::PhotonAnimatorView::ParameterType::_set_Bool(::Photon::Pun::PhotonAnimatorView::ParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::_set_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonAnimatorView/ParameterType", "Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonAnimatorView/ParameterType Trigger
::Photon::Pun::PhotonAnimatorView::ParameterType Photon::Pun::PhotonAnimatorView::ParameterType::_get_Trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::_get_Trigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonAnimatorView::ParameterType>("Photon.Pun", "PhotonAnimatorView/ParameterType", "Trigger"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonAnimatorView/ParameterType Trigger
void Photon::Pun::PhotonAnimatorView::ParameterType::_set_Trigger(::Photon::Pun::PhotonAnimatorView::ParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::_set_Trigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonAnimatorView/ParameterType", "Trigger", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonAnimatorView::ParameterType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizeType
#include "Photon/Pun/PhotonAnimatorView_SynchronizeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonAnimatorView/SynchronizeType Disabled
::Photon::Pun::PhotonAnimatorView::SynchronizeType Photon::Pun::PhotonAnimatorView::SynchronizeType::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizeType::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonAnimatorView::SynchronizeType>("Photon.Pun", "PhotonAnimatorView/SynchronizeType", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonAnimatorView/SynchronizeType Disabled
void Photon::Pun::PhotonAnimatorView::SynchronizeType::_set_Disabled(::Photon::Pun::PhotonAnimatorView::SynchronizeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizeType::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonAnimatorView/SynchronizeType", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonAnimatorView/SynchronizeType Discrete
::Photon::Pun::PhotonAnimatorView::SynchronizeType Photon::Pun::PhotonAnimatorView::SynchronizeType::_get_Discrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizeType::_get_Discrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonAnimatorView::SynchronizeType>("Photon.Pun", "PhotonAnimatorView/SynchronizeType", "Discrete"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonAnimatorView/SynchronizeType Discrete
void Photon::Pun::PhotonAnimatorView::SynchronizeType::_set_Discrete(::Photon::Pun::PhotonAnimatorView::SynchronizeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizeType::_set_Discrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonAnimatorView/SynchronizeType", "Discrete", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonAnimatorView/SynchronizeType Continuous
::Photon::Pun::PhotonAnimatorView::SynchronizeType Photon::Pun::PhotonAnimatorView::SynchronizeType::_get_Continuous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizeType::_get_Continuous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonAnimatorView::SynchronizeType>("Photon.Pun", "PhotonAnimatorView/SynchronizeType", "Continuous"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonAnimatorView/SynchronizeType Continuous
void Photon::Pun::PhotonAnimatorView::SynchronizeType::_set_Continuous(::Photon::Pun::PhotonAnimatorView::SynchronizeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizeType::_set_Continuous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonAnimatorView/SynchronizeType", "Continuous", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonAnimatorView::SynchronizeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedParameter
#include "Photon/Pun/PhotonAnimatorView_SynchronizedParameter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonAnimatorView/ParameterType Type
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonAnimatorView::ParameterType& Photon::Pun::PhotonAnimatorView::SynchronizedParameter::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizedParameter::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonAnimatorView::ParameterType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonAnimatorView/SynchronizeType SynchronizeType
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonAnimatorView::SynchronizeType& Photon::Pun::PhotonAnimatorView::SynchronizedParameter::dyn_SynchronizeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizedParameter::dyn_SynchronizeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SynchronizeType"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonAnimatorView::SynchronizeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Photon::Pun::PhotonAnimatorView::SynchronizedParameter::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizedParameter::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedLayer
#include "Photon/Pun/PhotonAnimatorView_SynchronizedLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonAnimatorView/SynchronizeType SynchronizeType
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonAnimatorView::SynchronizeType& Photon::Pun::PhotonAnimatorView::SynchronizedLayer::dyn_SynchronizeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizedLayer::dyn_SynchronizeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SynchronizeType"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonAnimatorView::SynchronizeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 LayerIndex
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonAnimatorView::SynchronizedLayer::dyn_LayerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizedLayer::dyn_LayerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LayerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass18_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass18_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedLayer
#include "Photon/Pun/PhotonAnimatorView_SynchronizedLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 layerIndex
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonAnimatorView::$$c__DisplayClass18_0::dyn_layerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass18_0::dyn_layerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass18_0.<DoesLayerSynchronizeTypeExist>b__0
bool Photon::Pun::PhotonAnimatorView::$$c__DisplayClass18_0::$DoesLayerSynchronizeTypeExist$b__0(::Photon::Pun::PhotonAnimatorView::SynchronizedLayer* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass18_0::<DoesLayerSynchronizeTypeExist>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DoesLayerSynchronizeTypeExist>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
