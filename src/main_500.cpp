// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BasicSceneManager/<>c__DisplayClass2_0
#include "GlobalNamespace/BasicSceneManager_--c__DisplayClass2_0.hpp"
// Including type: BasicSceneManager/<>c__DisplayClass2_0/<<CreateSceneAnchors>b__0>d
#include "GlobalNamespace/BasicSceneManager_--c__DisplayClass2_0_--CreateSceneAnchors-b__0-d.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: OVRAnchor
#include "GlobalNamespace/OVRAnchor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject roomGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::dyn_roomGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::dyn_roomGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BasicSceneManager/<>c__DisplayClass2_0.<CreateSceneAnchors>b__0
::System::Threading::Tasks::Task* GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$CreateSceneAnchors$b__0(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::<CreateSceneAnchors>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateSceneAnchors>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, anchor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BasicSceneManager/<>c__DisplayClass2_0/<<CreateSceneAnchors>b__0>d
#include "GlobalNamespace/BasicSceneManager_--c__DisplayClass2_0_--CreateSceneAnchors-b__0-d.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRAnchor anchor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRAnchor& GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d::dyn_anchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d::dyn_anchor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anchor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRAnchor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BasicSceneManager/<>c__DisplayClass2_0 <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0*& GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLocatable <locatable>5__2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLocatable& GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d::dyn_$locatable$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d::dyn_$locatable$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<locatable>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLocatable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTask`1/Awaiter<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter& GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BasicSceneManager/<>c__DisplayClass2_0/<<CreateSceneAnchors>b__0>d.MoveNext
void GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicSceneManager/<>c__DisplayClass2_0/<<CreateSceneAnchors>b__0>d.SetStateMachine
void GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::BasicSceneManager::$$c__DisplayClass2_0::$$CreateSceneAnchors$b__0$d), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BasicSceneManager/<CreateSceneAnchors>d__2
#include "GlobalNamespace/BasicSceneManager_-CreateSceneAnchors-d__2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject roomGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2::dyn_roomGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2::dyn_roomGameObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<OVRAnchor> anchors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2::dyn_anchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2::dyn_anchors");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anchors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BasicSceneManager/<CreateSceneAnchors>d__2.MoveNext
void GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicSceneManager/<CreateSceneAnchors>d__2.SetStateMachine
void GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::BasicSceneManager::$CreateSceneAnchors$d__2), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: BasicSceneManager/<LoadSceneAsync>d__1
#include "GlobalNamespace/BasicSceneManager_-LoadSceneAsync-d__1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BasicSceneManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BasicSceneManager*& GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicSceneManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRAnchor> <rooms>5__2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::dyn_$rooms$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::dyn_$rooms$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rooms>5__2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTask`1/Awaiter<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter& GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__3
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::dyn_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::dyn_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BasicSceneManager/<LoadSceneAsync>d__1.MoveNext
void GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicSceneManager/<LoadSceneAsync>d__1.SetStateMachine
void GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::BasicSceneManager::$LoadSceneAsync$d__1), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DynamicSceneManager
#include "GlobalNamespace/DynamicSceneManager.hpp"
// Including type: DynamicSceneManager/<>c
#include "GlobalNamespace/DynamicSceneManager_--c.hpp"
// Including type: DynamicSceneManager/<>c__DisplayClass10_0
#include "GlobalNamespace/DynamicSceneManager_--c__DisplayClass10_0.hpp"
// Including type: DynamicSceneManager/<LoadSceneSnapshotAsync>d__8
#include "GlobalNamespace/DynamicSceneManager_-LoadSceneSnapshotAsync-d__8.hpp"
// Including type: DynamicSceneManager/<UpdateScene>d__7
#include "GlobalNamespace/DynamicSceneManager_-UpdateScene-d__7.hpp"
// Including type: DynamicSceneManager/<UpdateScenePeriodically>d__6
#include "GlobalNamespace/DynamicSceneManager_-UpdateScenePeriodically-d__6.hpp"
// Including type: DynamicSceneManager/<UpdateUnityObjects>d__9
#include "GlobalNamespace/DynamicSceneManager_-UpdateUnityObjects-d__9.hpp"
// Including type: DynamicSceneManagerHelper.SceneSnapshot/Data
#include "DynamicSceneManagerHelper/SceneSnapshot_Data.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single UpdateFrequencySeconds
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DynamicSceneManager::dyn_UpdateFrequencySeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::dyn_UpdateFrequencySeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateFrequencySeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DynamicSceneManagerHelper.SceneSnapshot _snapshot
[[deprecated("Use field access instead!")]] ::DynamicSceneManagerHelper::SceneSnapshot*& GlobalNamespace::DynamicSceneManager::dyn__snapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::dyn__snapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snapshot"))->offset;
  return *reinterpret_cast<::DynamicSceneManagerHelper::SceneSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OVRAnchor,UnityEngine.GameObject> _sceneGameObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRAnchor, ::UnityEngine::GameObject*>*& GlobalNamespace::DynamicSceneManager::dyn__sceneGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::dyn__sceneGameObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneGameObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRAnchor, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task _updateSceneTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& GlobalNamespace::DynamicSceneManager::dyn__updateSceneTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::dyn__updateSceneTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateSceneTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DynamicSceneManager.Start
void GlobalNamespace::DynamicSceneManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManager.Update
void GlobalNamespace::DynamicSceneManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManager.UpdateScenePeriodically
::System::Collections::IEnumerator* GlobalNamespace::DynamicSceneManager::UpdateScenePeriodically() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::UpdateScenePeriodically");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScenePeriodically", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManager.UpdateScene
::System::Threading::Tasks::Task* GlobalNamespace::DynamicSceneManager::UpdateScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::UpdateScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManager.LoadSceneSnapshotAsync
::System::Threading::Tasks::Task_1<::DynamicSceneManagerHelper::SceneSnapshot*>* GlobalNamespace::DynamicSceneManager::LoadSceneSnapshotAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::LoadSceneSnapshotAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneSnapshotAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::DynamicSceneManagerHelper::SceneSnapshot*>*, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManager.UpdateUnityObjects
::System::Threading::Tasks::Task* GlobalNamespace::DynamicSceneManager::UpdateUnityObjects(::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>>* changes, ::DynamicSceneManagerHelper::SceneSnapshot* newSnapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::UpdateUnityObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateUnityObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changes), ::il2cpp_utils::ExtractType(newSnapshot)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, changes, newSnapshot);
}
// Autogenerated method: DynamicSceneManager.FilterChanges
::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* GlobalNamespace::DynamicSceneManager::FilterChanges(::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>>* changes, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType changeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::FilterChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changes), ::il2cpp_utils::ExtractType(changeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*, false>(this, ___internal__method, changes, changeType);
}
// Autogenerated method: DynamicSceneManager.FindAnchorPairs
::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::GlobalNamespace::OVRAnchor>>* GlobalNamespace::DynamicSceneManager::FindAnchorPairs(::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* allAnchors, ::DynamicSceneManagerHelper::SceneSnapshot* newSnapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::FindAnchorPairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindAnchorPairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allAnchors), ::il2cpp_utils::ExtractType(newSnapshot)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::GlobalNamespace::OVRAnchor>>*, false>(this, ___internal__method, allAnchors, newSnapshot);
}
// Autogenerated method: DynamicSceneManager.AreAnchorsEqual
bool GlobalNamespace::DynamicSceneManager::AreAnchorsEqual(::DynamicSceneManagerHelper::SceneSnapshot::Data* anchor1Data, ::DynamicSceneManagerHelper::SceneSnapshot::Data* anchor2Data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::AreAnchorsEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AreAnchorsEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor1Data), ::il2cpp_utils::ExtractType(anchor2Data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, anchor1Data, anchor2Data);
}
// Autogenerated method: DynamicSceneManager.GetParentAnchor
::GlobalNamespace::OVRAnchor GlobalNamespace::DynamicSceneManager::GetParentAnchor(::GlobalNamespace::OVRAnchor childAnchor, ::DynamicSceneManagerHelper::SceneSnapshot* snapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::GetParentAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childAnchor), ::il2cpp_utils::ExtractType(snapshot)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRAnchor, false>(this, ___internal__method, childAnchor, snapshot);
}
// Autogenerated method: DynamicSceneManager.<UpdateScenePeriodically>b__6_0
bool GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$b__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::<UpdateScenePeriodically>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateScenePeriodically>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DynamicSceneManager/<>c
#include "GlobalNamespace/DynamicSceneManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly DynamicSceneManager/<>c <>9
::GlobalNamespace::DynamicSceneManager::$$c* GlobalNamespace::DynamicSceneManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::DynamicSceneManager::$$c*>("", "DynamicSceneManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly DynamicSceneManager/<>c <>9
void GlobalNamespace::DynamicSceneManager::$$c::_set_$$9(::GlobalNamespace::DynamicSceneManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "DynamicSceneManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.ValueTuple`2<OVRAnchor,DynamicSceneManagerHelper.SnapshotComparer/ChangeType>,OVRAnchor> <>9__10_1
::System::Func_2<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>, ::GlobalNamespace::OVRAnchor>* GlobalNamespace::DynamicSceneManager::$$c::_get_$$9__10_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$$c::_get_$$9__10_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>, ::GlobalNamespace::OVRAnchor>*>("", "DynamicSceneManager/<>c", "<>9__10_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.ValueTuple`2<OVRAnchor,DynamicSceneManagerHelper.SnapshotComparer/ChangeType>,OVRAnchor> <>9__10_1
void GlobalNamespace::DynamicSceneManager::$$c::_set_$$9__10_1(::System::Func_2<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>, ::GlobalNamespace::OVRAnchor>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$$c::_set_$$9__10_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "DynamicSceneManager/<>c", "<>9__10_1", value)));
}
// Autogenerated method: DynamicSceneManager/<>c..cctor
void GlobalNamespace::DynamicSceneManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DynamicSceneManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: DynamicSceneManager/<>c.<FilterChanges>b__10_1
::GlobalNamespace::OVRAnchor GlobalNamespace::DynamicSceneManager::$$c::$FilterChanges$b__10_1(::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType> tuple) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$$c::<FilterChanges>b__10_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FilterChanges>b__10_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tuple)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRAnchor, false>(this, ___internal__method, tuple);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DynamicSceneManager/<>c__DisplayClass10_0
#include "GlobalNamespace/DynamicSceneManager_--c__DisplayClass10_0.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DynamicSceneManagerHelper.SnapshotComparer/ChangeType changeType
[[deprecated("Use field access instead!")]] ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType& GlobalNamespace::DynamicSceneManager::$$c__DisplayClass10_0::dyn_changeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$$c__DisplayClass10_0::dyn_changeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "changeType"))->offset;
  return *reinterpret_cast<::DynamicSceneManagerHelper::SnapshotComparer::ChangeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DynamicSceneManager/<>c__DisplayClass10_0.<FilterChanges>b__0
bool GlobalNamespace::DynamicSceneManager::$$c__DisplayClass10_0::$FilterChanges$b__0(::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType> tuple) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$$c__DisplayClass10_0::<FilterChanges>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FilterChanges>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tuple)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tuple);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DynamicSceneManager/<LoadSceneSnapshotAsync>d__8
#include "GlobalNamespace/DynamicSceneManager_-LoadSceneSnapshotAsync-d__8.hpp"
// Including type: DynamicSceneManagerHelper.SceneSnapshot
#include "DynamicSceneManagerHelper/SceneSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<DynamicSceneManagerHelper.SceneSnapshot> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::DynamicSceneManagerHelper::SceneSnapshot*>& GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::DynamicSceneManagerHelper::SceneSnapshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DynamicSceneManagerHelper.SceneSnapshot <snapshot>5__2
[[deprecated("Use field access instead!")]] ::DynamicSceneManagerHelper::SceneSnapshot*& GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::dyn_$snapshot$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::dyn_$snapshot$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<snapshot>5__2"))->offset;
  return *reinterpret_cast<::DynamicSceneManagerHelper::SceneSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRAnchor> <rooms>5__3
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::dyn_$rooms$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::dyn_$rooms$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rooms>5__3"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTask`1/Awaiter<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter& GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/Enumerator<OVRAnchor> <>7__wrap3
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>::Enumerator& GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::dyn_$$7__wrap3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::dyn_$$7__wrap3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap3"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRAnchor <room>5__5
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRAnchor& GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::dyn_$room$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::dyn_$room$5__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<room>5__5"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRAnchor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRAnchor> <children>5__6
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::dyn_$children$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::dyn_$children$5__6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<children>5__6"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DynamicSceneManager/<LoadSceneSnapshotAsync>d__8.MoveNext
void GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManager/<LoadSceneSnapshotAsync>d__8.SetStateMachine
void GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::DynamicSceneManager::$LoadSceneSnapshotAsync$d__8), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DynamicSceneManager/<UpdateScene>d__7
#include "GlobalNamespace/DynamicSceneManager_-UpdateScene-d__7.hpp"
// Including type: DynamicSceneManagerHelper.SceneSnapshot
#include "DynamicSceneManagerHelper/SceneSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DynamicSceneManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DynamicSceneManager*& GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DynamicSceneManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DynamicSceneManagerHelper.SceneSnapshot <currentSnapshot>5__2
[[deprecated("Use field access instead!")]] ::DynamicSceneManagerHelper::SceneSnapshot*& GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7::dyn_$currentSnapshot$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7::dyn_$currentSnapshot$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentSnapshot>5__2"))->offset;
  return *reinterpret_cast<::DynamicSceneManagerHelper::SceneSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<DynamicSceneManagerHelper.SceneSnapshot> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::DynamicSceneManagerHelper::SceneSnapshot*>& GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::DynamicSceneManagerHelper::SceneSnapshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DynamicSceneManager/<UpdateScene>d__7.MoveNext
void GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManager/<UpdateScene>d__7.SetStateMachine
void GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::DynamicSceneManager::$UpdateScene$d__7), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DynamicSceneManager/<UpdateScenePeriodically>d__6
#include "GlobalNamespace/DynamicSceneManager_-UpdateScenePeriodically-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DynamicSceneManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DynamicSceneManager*& GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DynamicSceneManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DynamicSceneManager/<UpdateScenePeriodically>d__6.System.IDisposable.Dispose
void GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManager/<UpdateScenePeriodically>d__6.MoveNext
bool GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManager/<UpdateScenePeriodically>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManager/<UpdateScenePeriodically>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManager/<UpdateScenePeriodically>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DynamicSceneManager::$UpdateScenePeriodically$d__6*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: DynamicSceneManager/<UpdateUnityObjects>d__9
#include "GlobalNamespace/DynamicSceneManager_-UpdateUnityObjects-d__9.hpp"
// Including type: DynamicSceneManagerHelper.SceneSnapshot
#include "DynamicSceneManagerHelper/SceneSnapshot.hpp"
// Including type: DynamicSceneManagerHelper.UnityObjectUpdater
#include "DynamicSceneManagerHelper/UnityObjectUpdater.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.ValueTuple`2<OVRAnchor,DynamicSceneManagerHelper.SnapshotComparer/ChangeType>> changes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>>*& GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_changes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_changes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "changes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::DynamicSceneManagerHelper::SnapshotComparer::ChangeType>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DynamicSceneManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DynamicSceneManager*& GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DynamicSceneManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DynamicSceneManagerHelper.SceneSnapshot newSnapshot
[[deprecated("Use field access instead!")]] ::DynamicSceneManagerHelper::SceneSnapshot*& GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_newSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_newSnapshot");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newSnapshot"))->offset;
  return *reinterpret_cast<::DynamicSceneManagerHelper::SceneSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DynamicSceneManagerHelper.UnityObjectUpdater <updater>5__2
[[deprecated("Use field access instead!")]] ::DynamicSceneManagerHelper::UnityObjectUpdater*& GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$updater$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$updater$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<updater>5__2"))->offset;
  return *reinterpret_cast<::DynamicSceneManagerHelper::UnityObjectUpdater**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRAnchor> <changesMissing>5__3
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$changesMissing$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$changesMissing$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<changesMissing>5__3"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRAnchor> <changesId>5__4
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$changesId$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$changesId$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<changesId>5__4"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRAnchor> <changesBounds>5__5
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$changesBounds$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$changesBounds$5__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<changesBounds>5__5"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/Enumerator<OVRAnchor> <>7__wrap5
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>::Enumerator& GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$$7__wrap5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$$7__wrap5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap5"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OVRAnchor,UnityEngine.GameObject> <>7__wrap6
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRAnchor, ::UnityEngine::GameObject*>*& GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$$7__wrap6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$$7__wrap6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap6"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRAnchor, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRAnchor <>7__wrap7
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRAnchor& GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$$7__wrap7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$$7__wrap7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap7"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRAnchor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.GameObject> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::GameObject*>& GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DynamicSceneManager/<UpdateUnityObjects>d__9.MoveNext
void GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DynamicSceneManager/<UpdateUnityObjects>d__9.SetStateMachine
void GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::DynamicSceneManager::$UpdateUnityObjects$d__9), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PrefabSceneManager
#include "GlobalNamespace/PrefabSceneManager.hpp"
// Including type: PrefabSceneManager/<<LoadSceneAsync>b__7_0>d
#include "GlobalNamespace/PrefabSceneManager_--LoadSceneAsync-b__7_0-d.hpp"
// Including type: PrefabSceneManager/<>c__DisplayClass8_0
#include "GlobalNamespace/PrefabSceneManager_--c__DisplayClass8_0.hpp"
// Including type: PrefabSceneManager/<CreateSceneAnchors>d__8
#include "GlobalNamespace/PrefabSceneManager_-CreateSceneAnchors-d__8.hpp"
// Including type: PrefabSceneManager/<LoadSceneAsync>d__7
#include "GlobalNamespace/PrefabSceneManager_-LoadSceneAsync-d__7.hpp"
// Including type: PrefabSceneManager/<UpdateAnchorsPeriodically>d__9
#include "GlobalNamespace/PrefabSceneManager_-UpdateAnchorsPeriodically-d__9.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: OVRRoomLayout
#include "GlobalNamespace/OVRRoomLayout.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject WallPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PrefabSceneManager::dyn_WallPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::dyn_WallPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WallPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject CeilingPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PrefabSceneManager::dyn_CeilingPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::dyn_CeilingPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CeilingPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject FloorPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PrefabSceneManager::dyn_FloorPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::dyn_FloorPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FloorPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject FallbackPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PrefabSceneManager::dyn_FallbackPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::dyn_FallbackPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FallbackPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single UpdateFrequencySeconds
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PrefabSceneManager::dyn_UpdateFrequencySeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::dyn_UpdateFrequencySeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateFrequencySeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.ValueTuple`2<UnityEngine.GameObject,OVRLocatable>> _locatableObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::ValueTuple_2<::UnityEngine::GameObject*, ::GlobalNamespace::OVRLocatable>>*& GlobalNamespace::PrefabSceneManager::dyn__locatableObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::dyn__locatableObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locatableObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::ValueTuple_2<::UnityEngine::GameObject*, ::GlobalNamespace::OVRLocatable>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PrefabSceneManager.Start
void GlobalNamespace::PrefabSceneManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PrefabSceneManager.LoadSceneAsync
void GlobalNamespace::PrefabSceneManager::LoadSceneAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PrefabSceneManager.CreateSceneAnchors
::System::Threading::Tasks::Task* GlobalNamespace::PrefabSceneManager::CreateSceneAnchors(::UnityEngine::GameObject* roomGameObject, ::GlobalNamespace::OVRRoomLayout roomLayout, ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* anchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::CreateSceneAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSceneAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomGameObject), ::il2cpp_utils::ExtractType(roomLayout), ::il2cpp_utils::ExtractType(anchors)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, roomGameObject, roomLayout, anchors);
}
// Autogenerated method: PrefabSceneManager.UpdateAnchorsPeriodically
::System::Collections::IEnumerator* GlobalNamespace::PrefabSceneManager::UpdateAnchorsPeriodically() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::UpdateAnchorsPeriodically");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAnchorsPeriodically", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: PrefabSceneManager.<LoadSceneAsync>b__7_0
::System::Threading::Tasks::Task* GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$b__7_0(::GlobalNamespace::OVRAnchor room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::<LoadSceneAsync>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadSceneAsync>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, room);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PrefabSceneManager/<<LoadSceneAsync>b__7_0>d
#include "GlobalNamespace/PrefabSceneManager_--LoadSceneAsync-b__7_0-d.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRAnchor room
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRAnchor& GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_room");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "room"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRAnchor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PrefabSceneManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PrefabSceneManager*& GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PrefabSceneManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <roomObject>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_$roomObject$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_$roomObject$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<roomObject>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRRoomLayout <roomLayout>5__3
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRRoomLayout& GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_$roomLayout$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_$roomLayout$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<roomLayout>5__3"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRRoomLayout*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRAnchor> <children>5__4
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_$children$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_$children$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<children>5__4"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTask`1/Awaiter<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter& GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PrefabSceneManager/<<LoadSceneAsync>b__7_0>d.MoveNext
void GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PrefabSceneManager/<<LoadSceneAsync>b__7_0>d.SetStateMachine
void GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::PrefabSceneManager::$$LoadSceneAsync$b__7_0$d), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PrefabSceneManager/<>c__DisplayClass8_0
#include "GlobalNamespace/PrefabSceneManager_--c__DisplayClass8_0.hpp"
// Including type: PrefabSceneManager/<>c__DisplayClass8_0/<<CreateSceneAnchors>b__0>d
#include "GlobalNamespace/PrefabSceneManager_--c__DisplayClass8_0_--CreateSceneAnchors-b__0-d.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: OVRAnchor
#include "GlobalNamespace/OVRAnchor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PrefabSceneManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PrefabSceneManager*& GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PrefabSceneManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Guid floorUuid
[[deprecated("Use field access instead!")]] ::System::Guid& GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::dyn_floorUuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::dyn_floorUuid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floorUuid"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Guid ceilingUuid
[[deprecated("Use field access instead!")]] ::System::Guid& GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::dyn_ceilingUuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::dyn_ceilingUuid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ceilingUuid"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Guid[] wallUuids
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Guid>& GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::dyn_wallUuids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::dyn_wallUuids");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallUuids"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Guid>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject roomGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::dyn_roomGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::dyn_roomGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PrefabSceneManager/<>c__DisplayClass8_0.<CreateSceneAnchors>b__0
::System::Threading::Tasks::Task* GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$CreateSceneAnchors$b__0(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::<CreateSceneAnchors>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateSceneAnchors>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, anchor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PrefabSceneManager/<>c__DisplayClass8_0/<<CreateSceneAnchors>b__0>d
#include "GlobalNamespace/PrefabSceneManager_--c__DisplayClass8_0_--CreateSceneAnchors-b__0-d.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRAnchor anchor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRAnchor& GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d::dyn_anchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d::dyn_anchor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anchor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRAnchor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PrefabSceneManager/<>c__DisplayClass8_0 <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0*& GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLocatable <locatable>5__2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLocatable& GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d::dyn_$locatable$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d::dyn_$locatable$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<locatable>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLocatable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTask`1/Awaiter<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter& GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PrefabSceneManager/<>c__DisplayClass8_0/<<CreateSceneAnchors>b__0>d.MoveNext
void GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PrefabSceneManager/<>c__DisplayClass8_0/<<CreateSceneAnchors>b__0>d.SetStateMachine
void GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::PrefabSceneManager::$$c__DisplayClass8_0::$$CreateSceneAnchors$b__0$d), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PrefabSceneManager/<CreateSceneAnchors>d__8
#include "GlobalNamespace/PrefabSceneManager_-CreateSceneAnchors-d__8.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PrefabSceneManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PrefabSceneManager*& GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PrefabSceneManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject roomGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::dyn_roomGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::dyn_roomGameObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRRoomLayout roomLayout
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRRoomLayout& GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::dyn_roomLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::dyn_roomLayout");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomLayout"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRRoomLayout*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<OVRAnchor> anchors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::dyn_anchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::dyn_anchors");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anchors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PrefabSceneManager/<CreateSceneAnchors>d__8.MoveNext
void GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PrefabSceneManager/<CreateSceneAnchors>d__8.SetStateMachine
void GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::PrefabSceneManager::$CreateSceneAnchors$d__8), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PrefabSceneManager/<LoadSceneAsync>d__7
#include "GlobalNamespace/PrefabSceneManager_-LoadSceneAsync-d__7.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PrefabSceneManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PrefabSceneManager*& GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PrefabSceneManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRAnchor> <rooms>5__2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::dyn_$rooms$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::dyn_$rooms$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rooms>5__2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTask`1/Awaiter<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter& GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__3
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::dyn_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::dyn_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PrefabSceneManager/<LoadSceneAsync>d__7.MoveNext
void GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PrefabSceneManager/<LoadSceneAsync>d__7.SetStateMachine
void GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::PrefabSceneManager::$LoadSceneAsync$d__7), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PrefabSceneManager/<UpdateAnchorsPeriodically>d__9
#include "GlobalNamespace/PrefabSceneManager_-UpdateAnchorsPeriodically-d__9.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PrefabSceneManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PrefabSceneManager*& GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PrefabSceneManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PrefabSceneManager/<UpdateAnchorsPeriodically>d__9.System.IDisposable.Dispose
void GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PrefabSceneManager/<UpdateAnchorsPeriodically>d__9.MoveNext
bool GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PrefabSceneManager/<UpdateAnchorsPeriodically>d__9.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: PrefabSceneManager/<UpdateAnchorsPeriodically>d__9.System.Collections.IEnumerator.Reset
void GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PrefabSceneManager/<UpdateAnchorsPeriodically>d__9.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PrefabSceneManager::$UpdateAnchorsPeriodically$d__9*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SceneManagerHelper
#include "GlobalNamespace/SceneManagerHelper.hpp"
// Including type: SceneManagerHelper/<>c__DisplayClass11_0
#include "GlobalNamespace/SceneManagerHelper_--c__DisplayClass11_0.hpp"
// Including type: SceneManagerHelper/<RequestSceneCapture>d__11
#include "GlobalNamespace/SceneManagerHelper_-RequestSceneCapture-d__11.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRLocatable
#include "GlobalNamespace/OVRLocatable.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: OVRBounded2D
#include "GlobalNamespace/OVRBounded2D.hpp"
// Including type: OVRBounded3D
#include "GlobalNamespace/OVRBounded3D.hpp"
// Including type: OVRTriangleMesh
#include "GlobalNamespace/OVRTriangleMesh.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean SceneCaptureRunning
bool GlobalNamespace::SceneManagerHelper::_get_SceneCaptureRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::_get_SceneCaptureRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "SceneManagerHelper", "SceneCaptureRunning"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean SceneCaptureRunning
void GlobalNamespace::SceneManagerHelper::_set_SceneCaptureRunning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::_set_SceneCaptureRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SceneManagerHelper", "SceneCaptureRunning", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.GameObject <AnchorGameObject>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SceneManagerHelper::dyn_$AnchorGameObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::dyn_$AnchorGameObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AnchorGameObject>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SceneManagerHelper.get_AnchorGameObject
::UnityEngine::GameObject* GlobalNamespace::SceneManagerHelper::get_AnchorGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::get_AnchorGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AnchorGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: SceneManagerHelper.SetLocation
void GlobalNamespace::SceneManagerHelper::SetLocation(::GlobalNamespace::OVRLocatable locatable, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::SetLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locatable), ::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, locatable, camera);
}
// Autogenerated method: SceneManagerHelper.CreatePlane
void GlobalNamespace::SceneManagerHelper::CreatePlane(::GlobalNamespace::OVRBounded2D bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::CreatePlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bounds);
}
// Autogenerated method: SceneManagerHelper.UpdatePlane
void GlobalNamespace::SceneManagerHelper::UpdatePlane(::GlobalNamespace::OVRBounded2D bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::UpdatePlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bounds);
}
// Autogenerated method: SceneManagerHelper.CreateVolume
void GlobalNamespace::SceneManagerHelper::CreateVolume(::GlobalNamespace::OVRBounded3D bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::CreateVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bounds);
}
// Autogenerated method: SceneManagerHelper.UpdateVolume
void GlobalNamespace::SceneManagerHelper::UpdateVolume(::GlobalNamespace::OVRBounded3D bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::UpdateVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bounds);
}
// Autogenerated method: SceneManagerHelper.CreateMesh
void GlobalNamespace::SceneManagerHelper::CreateMesh(::GlobalNamespace::OVRTriangleMesh mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::CreateMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh);
}
// Autogenerated method: SceneManagerHelper.UpdateMesh
void GlobalNamespace::SceneManagerHelper::UpdateMesh(::GlobalNamespace::OVRTriangleMesh mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::UpdateMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh);
}
// Autogenerated method: SceneManagerHelper.RequestSceneCapture
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::SceneManagerHelper::RequestSceneCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::RequestSceneCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SceneManagerHelper", "RequestSceneCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SceneManagerHelper.RequestScenePermission
void GlobalNamespace::SceneManagerHelper::RequestScenePermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::RequestScenePermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SceneManagerHelper", "RequestScenePermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SceneManagerHelper/<>c__DisplayClass11_0
#include "GlobalNamespace/SceneManagerHelper_--c__DisplayClass11_0.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean waiting
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SceneManagerHelper::$$c__DisplayClass11_0::dyn_waiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::$$c__DisplayClass11_0::dyn_waiting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waiting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<System.UInt64,System.Boolean> onCaptured
[[deprecated("Use field access instead!")]] ::System::Action_2<uint64_t, bool>*& GlobalNamespace::SceneManagerHelper::$$c__DisplayClass11_0::dyn_onCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::$$c__DisplayClass11_0::dyn_onCaptured");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onCaptured"))->offset;
  return *reinterpret_cast<::System::Action_2<uint64_t, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SceneManagerHelper/<>c__DisplayClass11_0.<RequestSceneCapture>b__0
void GlobalNamespace::SceneManagerHelper::$$c__DisplayClass11_0::$RequestSceneCapture$b__0(uint64_t id, bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::$$c__DisplayClass11_0::<RequestSceneCapture>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestSceneCapture>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, success);
}
// Autogenerated method: SceneManagerHelper/<>c__DisplayClass11_0.<RequestSceneCapture>b__1
bool GlobalNamespace::SceneManagerHelper::$$c__DisplayClass11_0::$RequestSceneCapture$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::$$c__DisplayClass11_0::<RequestSceneCapture>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestSceneCapture>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SceneManagerHelper/<RequestSceneCapture>d__11
#include "GlobalNamespace/SceneManagerHelper_-RequestSceneCapture-d__11.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SceneManagerHelper::$RequestSceneCapture$d__11::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::$RequestSceneCapture$d__11::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>& GlobalNamespace::SceneManagerHelper::$RequestSceneCapture$d__11::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::$RequestSceneCapture$d__11::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::SceneManagerHelper::$RequestSceneCapture$d__11::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::$RequestSceneCapture$d__11::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SceneManagerHelper/<RequestSceneCapture>d__11.MoveNext
void GlobalNamespace::SceneManagerHelper::$RequestSceneCapture$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::$RequestSceneCapture$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::SceneManagerHelper::$RequestSceneCapture$d__11), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SceneManagerHelper/<RequestSceneCapture>d__11.SetStateMachine
void GlobalNamespace::SceneManagerHelper::$RequestSceneCapture$d__11::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneManagerHelper::$RequestSceneCapture$d__11::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::SceneManagerHelper::$RequestSceneCapture$d__11), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SnapshotSceneManager
#include "GlobalNamespace/SnapshotSceneManager.hpp"
// Including type: SnapshotSceneManager/SceneSnapshot
#include "GlobalNamespace/SnapshotSceneManager_SceneSnapshot.hpp"
// Including type: SnapshotSceneManager/SnapshotComparer
#include "GlobalNamespace/SnapshotSceneManager_SnapshotComparer.hpp"
// Including type: SnapshotSceneManager/<LoadSceneSnapshotAsync>d__6
#include "GlobalNamespace/SnapshotSceneManager_-LoadSceneSnapshotAsync-d__6.hpp"
// Including type: SnapshotSceneManager/<UpdateScene>d__5
#include "GlobalNamespace/SnapshotSceneManager_-UpdateScene-d__5.hpp"
// Including type: SnapshotSceneManager/<UpdateScenePeriodically>d__4
#include "GlobalNamespace/SnapshotSceneManager_-UpdateScenePeriodically-d__4.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: OVRAnchor
#include "GlobalNamespace/OVRAnchor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single UpdateFrequencySeconds
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SnapshotSceneManager::dyn_UpdateFrequencySeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::dyn_UpdateFrequencySeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateFrequencySeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SnapshotSceneManager/SceneSnapshot _snapshot
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*& GlobalNamespace::SnapshotSceneManager::dyn__snapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::dyn__snapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snapshot"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SnapshotSceneManager::SceneSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SnapshotSceneManager.Start
void GlobalNamespace::SnapshotSceneManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SnapshotSceneManager.Update
void GlobalNamespace::SnapshotSceneManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SnapshotSceneManager.UpdateScenePeriodically
::System::Collections::IEnumerator* GlobalNamespace::SnapshotSceneManager::UpdateScenePeriodically() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::UpdateScenePeriodically");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScenePeriodically", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: SnapshotSceneManager.UpdateScene
void GlobalNamespace::SnapshotSceneManager::UpdateScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::UpdateScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SnapshotSceneManager.LoadSceneSnapshotAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*>* GlobalNamespace::SnapshotSceneManager::LoadSceneSnapshotAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::LoadSceneSnapshotAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneSnapshotAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*>*, false>(this, ___internal__method);
}
// Autogenerated method: SnapshotSceneManager.AnchorInfo
::StringW GlobalNamespace::SnapshotSceneManager::AnchorInfo(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::AnchorInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnchorInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, anchor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SnapshotSceneManager/SceneSnapshot
#include "GlobalNamespace/SnapshotSceneManager_SceneSnapshot.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<OVRAnchor> <Anchors>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::SnapshotSceneManager::SceneSnapshot::dyn_$Anchors$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SceneSnapshot::dyn_$Anchors$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Anchors>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SnapshotSceneManager/SceneSnapshot.get_Anchors
::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* GlobalNamespace::SnapshotSceneManager::SceneSnapshot::get_Anchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SceneSnapshot::get_Anchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Anchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SnapshotSceneManager/SnapshotComparer
#include "GlobalNamespace/SnapshotSceneManager_SnapshotComparer.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: SnapshotSceneManager/SnapshotComparer/<CheckRoomChanges>d__9
#include "GlobalNamespace/SnapshotSceneManager_SnapshotComparer_-CheckRoomChanges-d__9.hpp"
// Including type: SnapshotSceneManager/SnapshotComparer/<Compare>d__8
#include "GlobalNamespace/SnapshotSceneManager_SnapshotComparer_-Compare-d__8.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SnapshotSceneManager/SceneSnapshot
#include "GlobalNamespace/SnapshotSceneManager_SceneSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly SnapshotSceneManager/SceneSnapshot <BaseSnapshot>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::dyn_$BaseSnapshot$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::dyn_$BaseSnapshot$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BaseSnapshot>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SnapshotSceneManager::SceneSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SnapshotSceneManager/SceneSnapshot <NewSnapshot>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::dyn_$NewSnapshot$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::dyn_$NewSnapshot$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NewSnapshot>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SnapshotSceneManager::SceneSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SnapshotSceneManager/SnapshotComparer.get_BaseSnapshot
::GlobalNamespace::SnapshotSceneManager::SceneSnapshot* GlobalNamespace::SnapshotSceneManager::SnapshotComparer::get_BaseSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::get_BaseSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: SnapshotSceneManager/SnapshotComparer.get_NewSnapshot
::GlobalNamespace::SnapshotSceneManager::SceneSnapshot* GlobalNamespace::SnapshotSceneManager::SnapshotComparer::get_NewSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::get_NewSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NewSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: SnapshotSceneManager/SnapshotComparer.Compare
::System::Threading::Tasks::Task_1<::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType>>*>* GlobalNamespace::SnapshotSceneManager::SnapshotComparer::Compare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType>>*>*, false>(this, ___internal__method);
}
// Autogenerated method: SnapshotSceneManager/SnapshotComparer.CheckRoomChanges
::System::Threading::Tasks::Task* GlobalNamespace::SnapshotSceneManager::SnapshotComparer::CheckRoomChanges(::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType>>* changes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::CheckRoomChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRoomChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, changes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SnapshotSceneManager/SnapshotComparer/ChangeType
#include "GlobalNamespace/SnapshotSceneManager_SnapshotComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SnapshotSceneManager/SnapshotComparer/ChangeType New
::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType::_get_New() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType::_get_New");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType>("", "SnapshotSceneManager/SnapshotComparer/ChangeType", "New"));
}
// Autogenerated static field setter
// Set static field: static public SnapshotSceneManager/SnapshotComparer/ChangeType New
void GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType::_set_New(::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType::_set_New");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SnapshotSceneManager/SnapshotComparer/ChangeType", "New", value));
}
// Autogenerated static field getter
// Get static field: static public SnapshotSceneManager/SnapshotComparer/ChangeType Missing
::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType::_get_Missing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType::_get_Missing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType>("", "SnapshotSceneManager/SnapshotComparer/ChangeType", "Missing"));
}
// Autogenerated static field setter
// Set static field: static public SnapshotSceneManager/SnapshotComparer/ChangeType Missing
void GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType::_set_Missing(::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType::_set_Missing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SnapshotSceneManager/SnapshotComparer/ChangeType", "Missing", value));
}
// Autogenerated static field getter
// Get static field: static public SnapshotSceneManager/SnapshotComparer/ChangeType Changed
::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType::_get_Changed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType::_get_Changed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType>("", "SnapshotSceneManager/SnapshotComparer/ChangeType", "Changed"));
}
// Autogenerated static field setter
// Set static field: static public SnapshotSceneManager/SnapshotComparer/ChangeType Changed
void GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType::_set_Changed(::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType::_set_Changed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SnapshotSceneManager/SnapshotComparer/ChangeType", "Changed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SnapshotSceneManager/SnapshotComparer/<CheckRoomChanges>d__9
#include "GlobalNamespace/SnapshotSceneManager_SnapshotComparer_-CheckRoomChanges-d__9.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.ValueTuple`2<OVRAnchor,SnapshotSceneManager/SnapshotComparer/ChangeType>> changes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType>>*& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_changes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_changes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "changes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SnapshotSceneManager/SnapshotComparer <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SnapshotSceneManager::SnapshotComparer*& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SnapshotSceneManager::SnapshotComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__2
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_$i$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_$i$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRAnchor <anchor>5__3
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRAnchor& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_$anchor$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_$anchor$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<anchor>5__3"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRAnchor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SnapshotSceneManager/SnapshotComparer/ChangeType <change>5__4
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_$change$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_$change$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<change>5__4"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRAnchor> <childAnchors>5__5
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_$childAnchors$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_$childAnchors$5__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<childAnchors>5__5"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTask`1/Awaiter<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SnapshotSceneManager/SnapshotComparer/<CheckRoomChanges>d__9.MoveNext
void GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SnapshotSceneManager/SnapshotComparer/<CheckRoomChanges>d__9.SetStateMachine
void GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$CheckRoomChanges$d__9), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SnapshotSceneManager/SnapshotComparer/<Compare>d__8
#include "GlobalNamespace/SnapshotSceneManager_SnapshotComparer_-Compare-d__8.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$Compare$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$Compare$d__8::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Collections.Generic.List`1<System.ValueTuple`2<OVRAnchor,SnapshotSceneManager/SnapshotComparer/ChangeType>>> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType>>*>& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$Compare$d__8::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$Compare$d__8::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType>>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SnapshotSceneManager/SnapshotComparer <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SnapshotSceneManager::SnapshotComparer*& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$Compare$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$Compare$d__8::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SnapshotSceneManager::SnapshotComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.ValueTuple`2<OVRAnchor,SnapshotSceneManager/SnapshotComparer/ChangeType>> <changes>5__2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType>>*& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$Compare$d__8::dyn_$changes$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$Compare$d__8::dyn_$changes$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<changes>5__2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$Compare$d__8::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$Compare$d__8::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SnapshotSceneManager/SnapshotComparer/<Compare>d__8.MoveNext
void GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$Compare$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$Compare$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$Compare$d__8), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SnapshotSceneManager/SnapshotComparer/<Compare>d__8.SetStateMachine
void GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$Compare$d__8::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$Compare$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::$Compare$d__8), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SnapshotSceneManager/<LoadSceneSnapshotAsync>d__6
#include "GlobalNamespace/SnapshotSceneManager_-LoadSceneSnapshotAsync-d__6.hpp"
// Including type: SnapshotSceneManager/SceneSnapshot
#include "GlobalNamespace/SnapshotSceneManager_SceneSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<SnapshotSceneManager/SceneSnapshot> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*>& GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SnapshotSceneManager/SceneSnapshot <snapshot>5__2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*& GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::dyn_$snapshot$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::dyn_$snapshot$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<snapshot>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SnapshotSceneManager::SceneSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRAnchor> <rooms>5__3
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::dyn_$rooms$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::dyn_$rooms$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rooms>5__3"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTask`1/Awaiter<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter& GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::GlobalNamespace::OVRTask_1<bool>::Awaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/Enumerator<OVRAnchor> <>7__wrap3
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>::Enumerator& GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::dyn_$$7__wrap3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::dyn_$$7__wrap3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap3"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRAnchor <room>5__5
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRAnchor& GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::dyn_$room$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::dyn_$room$5__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<room>5__5"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRAnchor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRAnchor> <children>5__6
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*& GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::dyn_$children$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::dyn_$children$5__6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<children>5__6"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SnapshotSceneManager/<LoadSceneSnapshotAsync>d__6.MoveNext
void GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SnapshotSceneManager/<LoadSceneSnapshotAsync>d__6.SetStateMachine
void GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::SnapshotSceneManager::$LoadSceneSnapshotAsync$d__6), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SnapshotSceneManager/<UpdateScene>d__5
#include "GlobalNamespace/SnapshotSceneManager_-UpdateScene-d__5.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SnapshotSceneManager/SceneSnapshot
#include "GlobalNamespace/SnapshotSceneManager_SceneSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SnapshotSceneManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SnapshotSceneManager*& GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SnapshotSceneManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SnapshotSceneManager/SceneSnapshot <currentSnapshot>5__2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*& GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5::dyn_$currentSnapshot$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5::dyn_$currentSnapshot$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentSnapshot>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SnapshotSceneManager::SceneSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<SnapshotSceneManager/SceneSnapshot> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*>& GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::SnapshotSceneManager::SceneSnapshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Collections.Generic.List`1<System.ValueTuple`2<OVRAnchor,SnapshotSceneManager/SnapshotComparer/ChangeType>>> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType>>*>& GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::System::Collections::Generic::List_1<::System::ValueTuple_2<::GlobalNamespace::OVRAnchor, ::GlobalNamespace::SnapshotSceneManager::SnapshotComparer::ChangeType>>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SnapshotSceneManager/<UpdateScene>d__5.MoveNext
void GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SnapshotSceneManager/<UpdateScene>d__5.SetStateMachine
void GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::SnapshotSceneManager::$UpdateScene$d__5), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SnapshotSceneManager/<UpdateScenePeriodically>d__4
#include "GlobalNamespace/SnapshotSceneManager_-UpdateScenePeriodically-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SnapshotSceneManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SnapshotSceneManager*& GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SnapshotSceneManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SnapshotSceneManager/<UpdateScenePeriodically>d__4.System.IDisposable.Dispose
void GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SnapshotSceneManager/<UpdateScenePeriodically>d__4.MoveNext
bool GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SnapshotSceneManager/<UpdateScenePeriodically>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: SnapshotSceneManager/<UpdateScenePeriodically>d__4.System.Collections.IEnumerator.Reset
void GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SnapshotSceneManager/<UpdateScenePeriodically>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SnapshotSceneManager::$UpdateScenePeriodically$d__4*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FurnitureSpawner
#include "GlobalNamespace/FurnitureSpawner.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: SimpleResizable
#include "GlobalNamespace/SimpleResizable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Spawnable
#include "GlobalNamespace/Spawnable.hpp"
// Including type: OVRSceneAnchor
#include "GlobalNamespace/OVRSceneAnchor.hpp"
// Including type: OVRSemanticClassification
#include "GlobalNamespace/OVRSemanticClassification.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.GameObject _roomLightRef
::UnityEngine::GameObject* GlobalNamespace::FurnitureSpawner::_get__roomLightRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FurnitureSpawner::_get__roomLightRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GameObject*>("", "FurnitureSpawner", "_roomLightRef"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.GameObject _roomLightRef
void GlobalNamespace::FurnitureSpawner::_set__roomLightRef(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FurnitureSpawner::_set__roomLightRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FurnitureSpawner", "_roomLightRef", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject RoomLightPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::FurnitureSpawner::dyn_RoomLightPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FurnitureSpawner::dyn_RoomLightPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomLightPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SimpleResizable FallbackPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleResizable*& GlobalNamespace::FurnitureSpawner::dyn_FallbackPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FurnitureSpawner::dyn_FallbackPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FallbackPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleResizable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Spawnable> SpawnablePrefabs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::Spawnable*>*& GlobalNamespace::FurnitureSpawner::dyn_SpawnablePrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FurnitureSpawner::dyn_SpawnablePrefabs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SpawnablePrefabs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::Spawnable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSceneAnchor _sceneAnchor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneAnchor*& GlobalNamespace::FurnitureSpawner::dyn__sceneAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FurnitureSpawner::dyn__sceneAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneAnchor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneAnchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSemanticClassification _classification
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSemanticClassification*& GlobalNamespace::FurnitureSpawner::dyn__classification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FurnitureSpawner::dyn__classification");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_classification"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSemanticClassification**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _frameCounter
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FurnitureSpawner::dyn__frameCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FurnitureSpawner::dyn__frameCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_frameCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FurnitureSpawner.Start
void GlobalNamespace::FurnitureSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FurnitureSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FurnitureSpawner.SpawnSpawnable
void GlobalNamespace::FurnitureSpawner::SpawnSpawnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FurnitureSpawner::SpawnSpawnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnSpawnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FurnitureSpawner.FindValidSpawnable
bool GlobalNamespace::FurnitureSpawner::FindValidSpawnable(ByRef<::GlobalNamespace::SimpleResizable*> currentSpawnable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FurnitureSpawner::FindValidSpawnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindValidSpawnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::SimpleResizable*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(currentSpawnable));
}
// Autogenerated method: FurnitureSpawner.AddRoomLight
void GlobalNamespace::FurnitureSpawner::AddRoomLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FurnitureSpawner::AddRoomLight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRoomLight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FurnitureSpawner.GetVolumeFromTopPlane
void GlobalNamespace::FurnitureSpawner::GetVolumeFromTopPlane(::UnityEngine::Transform* plane, ::UnityEngine::Vector2 dimensions, float height, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> localScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FurnitureSpawner::GetVolumeFromTopPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVolumeFromTopPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plane), ::il2cpp_utils::ExtractType(dimensions), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, plane, dimensions, height, byref(position), byref(rotation), byref(localScale));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: MyCustomSceneModelLoader
#include "GlobalNamespace/MyCustomSceneModelLoader.hpp"
// Including type: MyCustomSceneModelLoader/<DelayedLoad>d__0
#include "GlobalNamespace/MyCustomSceneModelLoader_-DelayedLoad-d__0.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MyCustomSceneModelLoader.DelayedLoad
::System::Collections::IEnumerator* GlobalNamespace::MyCustomSceneModelLoader::DelayedLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MyCustomSceneModelLoader::DelayedLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MyCustomSceneModelLoader.OnStart
void GlobalNamespace::MyCustomSceneModelLoader::OnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MyCustomSceneModelLoader::OnStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneModelLoader*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MyCustomSceneModelLoader.OnNoSceneModelToLoad
void GlobalNamespace::MyCustomSceneModelLoader::OnNoSceneModelToLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MyCustomSceneModelLoader::OnNoSceneModelToLoad");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRSceneModelLoader*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MyCustomSceneModelLoader/<DelayedLoad>d__0
#include "GlobalNamespace/MyCustomSceneModelLoader_-DelayedLoad-d__0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MyCustomSceneModelLoader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MyCustomSceneModelLoader*& GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MyCustomSceneModelLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MyCustomSceneModelLoader/<DelayedLoad>d__0.System.IDisposable.Dispose
void GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MyCustomSceneModelLoader/<DelayedLoad>d__0.MoveNext
bool GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MyCustomSceneModelLoader/<DelayedLoad>d__0.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MyCustomSceneModelLoader/<DelayedLoad>d__0.System.Collections.IEnumerator.Reset
void GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MyCustomSceneModelLoader/<DelayedLoad>d__0.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MyCustomSceneModelLoader::$DelayedLoad$d__0*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PassthroughPlayInEditor
#include "GlobalNamespace/PassthroughPlayInEditor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: RequestCaptureFlow
#include "GlobalNamespace/RequestCaptureFlow.hpp"
// Including type: OVRSceneManager
#include "GlobalNamespace/OVRSceneManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRInput/Button RequestCaptureBtn
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Button& GlobalNamespace::RequestCaptureFlow::dyn_RequestCaptureBtn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RequestCaptureFlow::dyn_RequestCaptureBtn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RequestCaptureBtn"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSceneManager _sceneManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneManager*& GlobalNamespace::RequestCaptureFlow::dyn__sceneManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RequestCaptureFlow::dyn__sceneManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RequestCaptureFlow.Start
void GlobalNamespace::RequestCaptureFlow::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RequestCaptureFlow::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RequestCaptureFlow.Update
void GlobalNamespace::RequestCaptureFlow::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RequestCaptureFlow::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SetMeshBarycentricCoordinates
#include "GlobalNamespace/SetMeshBarycentricCoordinates.hpp"
// Including type: SetMeshBarycentricCoordinates/<CheckMeshData>d__3
#include "GlobalNamespace/SetMeshBarycentricCoordinates_-CheckMeshData-d__3.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _meshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::SetMeshBarycentricCoordinates::dyn__meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetMeshBarycentricCoordinates::dyn__meshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::SetMeshBarycentricCoordinates::dyn__mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetMeshBarycentricCoordinates::dyn__mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SetMeshBarycentricCoordinates.Start
void GlobalNamespace::SetMeshBarycentricCoordinates::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetMeshBarycentricCoordinates::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SetMeshBarycentricCoordinates.CheckMeshData
::System::Collections::IEnumerator* GlobalNamespace::SetMeshBarycentricCoordinates::CheckMeshData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetMeshBarycentricCoordinates::CheckMeshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckMeshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: SetMeshBarycentricCoordinates.CreateBarycentricCoordinates
void GlobalNamespace::SetMeshBarycentricCoordinates::CreateBarycentricCoordinates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetMeshBarycentricCoordinates::CreateBarycentricCoordinates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBarycentricCoordinates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SetMeshBarycentricCoordinates/<CheckMeshData>d__3
#include "GlobalNamespace/SetMeshBarycentricCoordinates_-CheckMeshData-d__3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SetMeshBarycentricCoordinates <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SetMeshBarycentricCoordinates*& GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SetMeshBarycentricCoordinates**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SetMeshBarycentricCoordinates/<CheckMeshData>d__3.System.IDisposable.Dispose
void GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SetMeshBarycentricCoordinates/<CheckMeshData>d__3.MoveNext
bool GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SetMeshBarycentricCoordinates/<CheckMeshData>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: SetMeshBarycentricCoordinates/<CheckMeshData>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SetMeshBarycentricCoordinates/<CheckMeshData>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SetMeshBarycentricCoordinates::$CheckMeshData$d__3*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SimpleResizable
#include "GlobalNamespace/SimpleResizable.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SimpleResizable/Method ScalingX
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleResizable::Method& GlobalNamespace::SimpleResizable::dyn_ScalingX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::dyn_ScalingX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScalingX"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleResizable::Method*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PaddingX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleResizable::dyn_PaddingX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::dyn_PaddingX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PaddingX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PaddingXMax
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleResizable::dyn_PaddingXMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::dyn_PaddingXMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PaddingXMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SimpleResizable/Method ScalingY
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleResizable::Method& GlobalNamespace::SimpleResizable::dyn_ScalingY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::dyn_ScalingY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScalingY"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleResizable::Method*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PaddingY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleResizable::dyn_PaddingY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::dyn_PaddingY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PaddingY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PaddingYMax
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleResizable::dyn_PaddingYMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::dyn_PaddingYMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PaddingYMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SimpleResizable/Method ScalingZ
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleResizable::Method& GlobalNamespace::SimpleResizable::dyn_ScalingZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::dyn_ScalingZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScalingZ"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleResizable::Method*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PaddingZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleResizable::dyn_PaddingZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::dyn_PaddingZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PaddingZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PaddingZMax
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleResizable::dyn_PaddingZMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::dyn_PaddingZMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PaddingZMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <DefaultSize>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SimpleResizable::dyn_$DefaultSize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::dyn_$DefaultSize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DefaultSize>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh <OriginalMesh>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::SimpleResizable::dyn_$OriginalMesh$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::dyn_$OriginalMesh$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OriginalMesh>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _oldSize
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SimpleResizable::dyn__oldSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::dyn__oldSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oldSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _meshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::SimpleResizable::dyn__meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::dyn__meshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _newSize
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SimpleResizable::dyn__newSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::dyn__newSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _updateInPlayMode
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleResizable::dyn__updateInPlayMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::dyn__updateInPlayMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateInPlayMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _pivotTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::SimpleResizable::dyn__pivotTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::dyn__pivotTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pivotTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleResizable.get_PivotPosition
::UnityEngine::Vector3 GlobalNamespace::SimpleResizable::get_PivotPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::get_PivotPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PivotPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: SimpleResizable.get_DefaultSize
::UnityEngine::Vector3 GlobalNamespace::SimpleResizable::get_DefaultSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::get_DefaultSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: SimpleResizable.set_DefaultSize
void GlobalNamespace::SimpleResizable::set_DefaultSize(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::set_DefaultSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleResizable.get_OriginalMesh
::UnityEngine::Mesh* GlobalNamespace::SimpleResizable::get_OriginalMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::get_OriginalMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OriginalMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: SimpleResizable.set_OriginalMesh
void GlobalNamespace::SimpleResizable::set_OriginalMesh(::UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::set_OriginalMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OriginalMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleResizable.SetNewSize
void GlobalNamespace::SimpleResizable::SetNewSize(::UnityEngine::Vector3 newSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::SetNewSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNewSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newSize);
}
// Autogenerated method: SimpleResizable.Awake
void GlobalNamespace::SimpleResizable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleResizable.OnEnable
void GlobalNamespace::SimpleResizable::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleResizable.Update
void GlobalNamespace::SimpleResizable::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleResizable.OnDrawGizmos
void GlobalNamespace::SimpleResizable::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleResizable.OnDrawGizmosSelected
void GlobalNamespace::SimpleResizable::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SimpleResizable/Method
#include "GlobalNamespace/SimpleResizable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SimpleResizable/Method Adapt
::GlobalNamespace::SimpleResizable::Method GlobalNamespace::SimpleResizable::Method::_get_Adapt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::Method::_get_Adapt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SimpleResizable::Method>("", "SimpleResizable/Method", "Adapt"));
}
// Autogenerated static field setter
// Set static field: static public SimpleResizable/Method Adapt
void GlobalNamespace::SimpleResizable::Method::_set_Adapt(::GlobalNamespace::SimpleResizable::Method value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::Method::_set_Adapt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleResizable/Method", "Adapt", value));
}
// Autogenerated static field getter
// Get static field: static public SimpleResizable/Method AdaptWithAsymmetricalPadding
::GlobalNamespace::SimpleResizable::Method GlobalNamespace::SimpleResizable::Method::_get_AdaptWithAsymmetricalPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::Method::_get_AdaptWithAsymmetricalPadding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SimpleResizable::Method>("", "SimpleResizable/Method", "AdaptWithAsymmetricalPadding"));
}
// Autogenerated static field setter
// Set static field: static public SimpleResizable/Method AdaptWithAsymmetricalPadding
void GlobalNamespace::SimpleResizable::Method::_set_AdaptWithAsymmetricalPadding(::GlobalNamespace::SimpleResizable::Method value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::Method::_set_AdaptWithAsymmetricalPadding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleResizable/Method", "AdaptWithAsymmetricalPadding", value));
}
// Autogenerated static field getter
// Get static field: static public SimpleResizable/Method Scale
::GlobalNamespace::SimpleResizable::Method GlobalNamespace::SimpleResizable::Method::_get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::Method::_get_Scale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SimpleResizable::Method>("", "SimpleResizable/Method", "Scale"));
}
// Autogenerated static field setter
// Set static field: static public SimpleResizable/Method Scale
void GlobalNamespace::SimpleResizable::Method::_set_Scale(::GlobalNamespace::SimpleResizable::Method value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::Method::_set_Scale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleResizable/Method", "Scale", value));
}
// Autogenerated static field getter
// Get static field: static public SimpleResizable/Method None
::GlobalNamespace::SimpleResizable::Method GlobalNamespace::SimpleResizable::Method::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::Method::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SimpleResizable::Method>("", "SimpleResizable/Method", "None"));
}
// Autogenerated static field setter
// Set static field: static public SimpleResizable/Method None
void GlobalNamespace::SimpleResizable::Method::_set_None(::GlobalNamespace::SimpleResizable::Method value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::Method::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleResizable/Method", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SimpleResizable::Method::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizable::Method::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SimpleResizer
#include "GlobalNamespace/SimpleResizer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SimpleResizer.CreateResizedObject
void GlobalNamespace::SimpleResizer::CreateResizedObject(::UnityEngine::Vector3 newSize, ::UnityEngine::GameObject* parent, ::GlobalNamespace::SimpleResizable* sourcePrefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizer::CreateResizedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateResizedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newSize), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(sourcePrefab)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newSize, parent, sourcePrefab);
}
// Autogenerated method: SimpleResizer.ProcessVertices
::UnityEngine::Mesh* GlobalNamespace::SimpleResizer::ProcessVertices(::GlobalNamespace::SimpleResizable* resizable, ::UnityEngine::Vector3 newSize, bool pivot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizer::ProcessVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SimpleResizer", "ProcessVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resizable), ::il2cpp_utils::ExtractType(newSize), ::il2cpp_utils::ExtractType(pivot)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resizable, newSize, pivot);
}
// Autogenerated method: SimpleResizer.CalculateNewVertexPosition
float GlobalNamespace::SimpleResizer::CalculateNewVertexPosition(::GlobalNamespace::SimpleResizable::Method resizeMethod, float currentPosition, float currentSize, float newSize, float padding, float paddingMax, float pivot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleResizer::CalculateNewVertexPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SimpleResizer", "CalculateNewVertexPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resizeMethod), ::il2cpp_utils::ExtractType(currentPosition), ::il2cpp_utils::ExtractType(currentSize), ::il2cpp_utils::ExtractType(newSize), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(paddingMax), ::il2cpp_utils::ExtractType(pivot)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resizeMethod, currentPosition, currentSize, newSize, padding, paddingMax, pivot);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Spawnable
#include "GlobalNamespace/Spawnable.hpp"
// Including type: SimpleResizable
#include "GlobalNamespace/SimpleResizable.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SimpleResizable ResizablePrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleResizable*& GlobalNamespace::Spawnable::dyn_ResizablePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spawnable::dyn_ResizablePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ResizablePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleResizable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ClassificationLabel
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Spawnable::dyn_ClassificationLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spawnable::dyn_ClassificationLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClassificationLabel"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _editorClassificationIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Spawnable::dyn__editorClassificationIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spawnable::dyn__editorClassificationIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editorClassificationIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Spawnable.OnBeforeSerialize
void GlobalNamespace::Spawnable::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spawnable::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Spawnable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Spawnable.OnAfterDeserialize
void GlobalNamespace::Spawnable::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spawnable::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Spawnable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Spawnable.<OnAfterDeserialize>g__IndexOf|4_0
int GlobalNamespace::Spawnable::$OnAfterDeserialize$g__IndexOf_4_0(::StringW label, ::System::Collections::Generic::IEnumerable_1<::StringW>* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spawnable::<OnAfterDeserialize>g__IndexOf|4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Spawnable", "<OnAfterDeserialize>g__IndexOf|4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, label, collection);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VolumeAndPlaneSwitcher
#include "GlobalNamespace/VolumeAndPlaneSwitcher.hpp"
// Including type: OVRSceneAnchor
#include "GlobalNamespace/OVRSceneAnchor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRSceneAnchor planePrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneAnchor*& GlobalNamespace::VolumeAndPlaneSwitcher::dyn_planePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VolumeAndPlaneSwitcher::dyn_planePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "planePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneAnchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSceneAnchor volumePrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSceneAnchor*& GlobalNamespace::VolumeAndPlaneSwitcher::dyn_volumePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VolumeAndPlaneSwitcher::dyn_volumePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSceneAnchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<VolumeAndPlaneSwitcher/LabelGeometryPair> desiredSwitches
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::VolumeAndPlaneSwitcher::LabelGeometryPair>*& GlobalNamespace::VolumeAndPlaneSwitcher::dyn_desiredSwitches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VolumeAndPlaneSwitcher::dyn_desiredSwitches");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "desiredSwitches"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::VolumeAndPlaneSwitcher::LabelGeometryPair>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VolumeAndPlaneSwitcher.ReplaceAnchor
void GlobalNamespace::VolumeAndPlaneSwitcher::ReplaceAnchor(::GlobalNamespace::OVRSceneAnchor* prefab, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 localScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VolumeAndPlaneSwitcher::ReplaceAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(localScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefab, position, rotation, localScale);
}
// Autogenerated method: VolumeAndPlaneSwitcher.Start
void GlobalNamespace::VolumeAndPlaneSwitcher::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VolumeAndPlaneSwitcher::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VolumeAndPlaneSwitcher.GetVolumeFromTopPlane
void GlobalNamespace::VolumeAndPlaneSwitcher::GetVolumeFromTopPlane(::UnityEngine::Transform* plane, ::UnityEngine::Vector2 dimensions, float height, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> localScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VolumeAndPlaneSwitcher::GetVolumeFromTopPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVolumeFromTopPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plane), ::il2cpp_utils::ExtractType(dimensions), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, plane, dimensions, height, byref(position), byref(rotation), byref(localScale));
}
// Autogenerated method: VolumeAndPlaneSwitcher.GetTopPlaneFromVolume
void GlobalNamespace::VolumeAndPlaneSwitcher::GetTopPlaneFromVolume(::UnityEngine::Transform* volume, ::UnityEngine::Vector3 dimensions, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> localScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VolumeAndPlaneSwitcher::GetTopPlaneFromVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTopPlaneFromVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(dimensions), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume, dimensions, byref(position), byref(rotation), byref(localScale));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: VolumeAndPlaneSwitcher/GeometryType
#include "GlobalNamespace/VolumeAndPlaneSwitcher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VolumeAndPlaneSwitcher/GeometryType Plane
::GlobalNamespace::VolumeAndPlaneSwitcher::GeometryType GlobalNamespace::VolumeAndPlaneSwitcher::GeometryType::_get_Plane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VolumeAndPlaneSwitcher::GeometryType::_get_Plane");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::VolumeAndPlaneSwitcher::GeometryType>("", "VolumeAndPlaneSwitcher/GeometryType", "Plane"));
}
// Autogenerated static field setter
// Set static field: static public VolumeAndPlaneSwitcher/GeometryType Plane
void GlobalNamespace::VolumeAndPlaneSwitcher::GeometryType::_set_Plane(::GlobalNamespace::VolumeAndPlaneSwitcher::GeometryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VolumeAndPlaneSwitcher::GeometryType::_set_Plane");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VolumeAndPlaneSwitcher/GeometryType", "Plane", value));
}
// Autogenerated static field getter
// Get static field: static public VolumeAndPlaneSwitcher/GeometryType Volume
::GlobalNamespace::VolumeAndPlaneSwitcher::GeometryType GlobalNamespace::VolumeAndPlaneSwitcher::GeometryType::_get_Volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VolumeAndPlaneSwitcher::GeometryType::_get_Volume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::VolumeAndPlaneSwitcher::GeometryType>("", "VolumeAndPlaneSwitcher/GeometryType", "Volume"));
}
// Autogenerated static field setter
// Set static field: static public VolumeAndPlaneSwitcher/GeometryType Volume
void GlobalNamespace::VolumeAndPlaneSwitcher::GeometryType::_set_Volume(::GlobalNamespace::VolumeAndPlaneSwitcher::GeometryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VolumeAndPlaneSwitcher::GeometryType::_set_Volume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VolumeAndPlaneSwitcher/GeometryType", "Volume", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VolumeAndPlaneSwitcher::GeometryType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VolumeAndPlaneSwitcher::GeometryType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Anchor
#include "GlobalNamespace/Anchor.hpp"
// Including type: Anchor/<Start>d__21
#include "GlobalNamespace/Anchor_-Start-d__21.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: AnchorUIManager
#include "GlobalNamespace/AnchorUIManager.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: OVRSpatialAnchor
#include "GlobalNamespace/OVRSpatialAnchor.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String NumUuidsPlayerPref
::StringW GlobalNamespace::Anchor::_get_NumUuidsPlayerPref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::_get_NumUuidsPlayerPref");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "Anchor", "NumUuidsPlayerPref"));
}
// Autogenerated static field setter
// Set static field: static public System.String NumUuidsPlayerPref
void GlobalNamespace::Anchor::_set_NumUuidsPlayerPref(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::_set_NumUuidsPlayerPref");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Anchor", "NumUuidsPlayerPref", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas _canvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& GlobalNamespace::Anchor::dyn__canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _pivot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::Anchor::dyn__pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__pivot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pivot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _anchorMenu
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::Anchor::dyn__anchorMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__anchorMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anchorMenu"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isSelected
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Anchor::dyn__isSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__isSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isSelected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isHovered
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Anchor::dyn__isHovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__isHovered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isHovered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _anchorName
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::Anchor::dyn__anchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__anchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anchorName"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _saveIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::Anchor::dyn__saveIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__saveIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saveIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _labelImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::Anchor::dyn__labelImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__labelImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_labelImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _labelBaseColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::Anchor::dyn__labelBaseColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__labelBaseColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_labelBaseColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _labelHighlightColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::Anchor::dyn__labelHighlightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__labelHighlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_labelHighlightColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _labelSelectedColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::Anchor::dyn__labelSelectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__labelSelectedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_labelSelectedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AnchorUIManager _uiManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AnchorUIManager*& GlobalNamespace::Anchor::dyn__uiManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__uiManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uiManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AnchorUIManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] _renderers
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::MeshRenderer*>& GlobalNamespace::Anchor::dyn__renderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__renderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderers"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _menuIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Anchor::dyn__menuIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__menuIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.UI.Button> _buttonList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UI::Button*>*& GlobalNamespace::Anchor::dyn__buttonList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__buttonList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UI::Button*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _selectedButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::Anchor::dyn__selectedButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__selectedButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSpatialAnchor _spatialAnchor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSpatialAnchor*& GlobalNamespace::Anchor::dyn__spatialAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__spatialAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spatialAnchor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSpatialAnchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _icon
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::Anchor::dyn__icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::dyn__icon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_icon"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Anchor.Awake
void GlobalNamespace::Anchor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Anchor.ConvertUuidToString
::StringW GlobalNamespace::Anchor::ConvertUuidToString(::System::Guid guid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::ConvertUuidToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Anchor", "ConvertUuidToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guid)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guid);
}
// Autogenerated method: Anchor.Start
::System::Collections::IEnumerator* GlobalNamespace::Anchor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Anchor.Update
void GlobalNamespace::Anchor::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Anchor.OnSaveLocalButtonPressed
void GlobalNamespace::Anchor::OnSaveLocalButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::OnSaveLocalButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSaveLocalButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Anchor.SaveUuidToPlayerPrefs
void GlobalNamespace::Anchor::SaveUuidToPlayerPrefs(::System::Guid uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::SaveUuidToPlayerPrefs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveUuidToPlayerPrefs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uuid);
}
// Autogenerated method: Anchor.OnHideButtonPressed
void GlobalNamespace::Anchor::OnHideButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::OnHideButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHideButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Anchor.OnEraseButtonPressed
void GlobalNamespace::Anchor::OnEraseButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::OnEraseButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEraseButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Anchor.set_ShowSaveIcon
void GlobalNamespace::Anchor::set_ShowSaveIcon(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::set_ShowSaveIcon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ShowSaveIcon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Anchor.OnHoverStart
void GlobalNamespace::Anchor::OnHoverStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::OnHoverStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHoverStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Anchor.OnHoverEnd
void GlobalNamespace::Anchor::OnHoverEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::OnHoverEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHoverEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Anchor.OnSelect
void GlobalNamespace::Anchor::OnSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::OnSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Anchor.BillboardPanel
void GlobalNamespace::Anchor::BillboardPanel(::UnityEngine::Transform* panel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::BillboardPanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BillboardPanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(panel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, panel);
}
// Autogenerated method: Anchor.HandleMenuNavigation
void GlobalNamespace::Anchor::HandleMenuNavigation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::HandleMenuNavigation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuNavigation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Anchor.NavigateToIndexInMenu
void GlobalNamespace::Anchor::NavigateToIndexInMenu(bool moveNext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::NavigateToIndexInMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NavigateToIndexInMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moveNext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, moveNext);
}
// Autogenerated method: Anchor.<OnSaveLocalButtonPressed>b__23_0
void GlobalNamespace::Anchor::$OnSaveLocalButtonPressed$b__23_0(::GlobalNamespace::OVRSpatialAnchor* anchor, bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::<OnSaveLocalButtonPressed>b__23_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnSaveLocalButtonPressed>b__23_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor), ::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor, success);
}
// Autogenerated method: Anchor.<OnEraseButtonPressed>b__26_0
void GlobalNamespace::Anchor::$OnEraseButtonPressed$b__26_0(::GlobalNamespace::OVRSpatialAnchor* anchor, bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::<OnEraseButtonPressed>b__26_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEraseButtonPressed>b__26_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor), ::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor, success);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Anchor/<Start>d__21
#include "GlobalNamespace/Anchor_-Start-d__21.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Anchor::$Start$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::$Start$d__21::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::Anchor::$Start$d__21::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::$Start$d__21::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Anchor <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Anchor*& GlobalNamespace::Anchor::$Start$d__21::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::$Start$d__21::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Anchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Anchor/<Start>d__21.System.IDisposable.Dispose
void GlobalNamespace::Anchor::$Start$d__21::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::$Start$d__21::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Anchor::$Start$d__21*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Anchor/<Start>d__21.MoveNext
bool GlobalNamespace::Anchor::$Start$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::$Start$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Anchor::$Start$d__21*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Anchor/<Start>d__21.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::Anchor::$Start$d__21::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::$Start$d__21::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Anchor::$Start$d__21*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Anchor/<Start>d__21.System.Collections.IEnumerator.Reset
void GlobalNamespace::Anchor::$Start$d__21::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::$Start$d__21::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Anchor::$Start$d__21*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Anchor/<Start>d__21.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::Anchor::$Start$d__21::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Anchor::$Start$d__21::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Anchor::$Start$d__21*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AnchorUIManager
#include "GlobalNamespace/AnchorUIManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AnchorUIManager/PrimaryPressDelegate
#include "GlobalNamespace/AnchorUIManager_PrimaryPressDelegate.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: Anchor
#include "GlobalNamespace/Anchor.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AnchorUIManager Instance
::GlobalNamespace::AnchorUIManager* GlobalNamespace::AnchorUIManager::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AnchorUIManager*>("", "AnchorUIManager", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public AnchorUIManager Instance
void GlobalNamespace::AnchorUIManager::_set_Instance(::GlobalNamespace::AnchorUIManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AnchorUIManager", "Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _createModeButton
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::AnchorUIManager::dyn__createModeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__createModeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_createModeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _selectModeButton
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::AnchorUIManager::dyn__selectModeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__selectModeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectModeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _trackedDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AnchorUIManager::dyn__trackedDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__trackedDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackedDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _raycastOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AnchorUIManager::dyn__raycastOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__raycastOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_raycastOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _drawRaycast
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AnchorUIManager::dyn__drawRaycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__drawRaycast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_drawRaycast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer _lineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::AnchorUIManager::dyn__lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Anchor _hoveredAnchor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Anchor*& GlobalNamespace::AnchorUIManager::dyn__hoveredAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__hoveredAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoveredAnchor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Anchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Anchor _selectedAnchor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Anchor*& GlobalNamespace::AnchorUIManager::dyn__selectedAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__selectedAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAnchor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Anchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AnchorUIManager/AnchorMode _mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AnchorUIManager::AnchorMode& GlobalNamespace::AnchorUIManager::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AnchorUIManager::AnchorMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.UI.Button> _buttonList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UI::Button*>*& GlobalNamespace::AnchorUIManager::dyn__buttonList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__buttonList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UI::Button*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _menuIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AnchorUIManager::dyn__menuIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__menuIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _selectedButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::AnchorUIManager::dyn__selectedButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__selectedButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Anchor _anchorPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Anchor*& GlobalNamespace::AnchorUIManager::dyn__anchorPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__anchorPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anchorPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Anchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _placementPreview
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::AnchorUIManager::dyn__placementPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__placementPreview");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_placementPreview"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _anchorPlacementTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AnchorUIManager::dyn__anchorPlacementTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__anchorPlacementTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anchorPlacementTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AnchorUIManager/PrimaryPressDelegate _primaryPressDelegate
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AnchorUIManager::PrimaryPressDelegate*& GlobalNamespace::AnchorUIManager::dyn__primaryPressDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__primaryPressDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryPressDelegate"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AnchorUIManager::PrimaryPressDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isFocused
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AnchorUIManager::dyn__isFocused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::dyn__isFocused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isFocused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AnchorUIManager.get_AnchorPrefab
::GlobalNamespace::Anchor* GlobalNamespace::AnchorUIManager::get_AnchorPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::get_AnchorPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AnchorPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::Anchor*, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.Awake
void GlobalNamespace::AnchorUIManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.Start
void GlobalNamespace::AnchorUIManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.Update
void GlobalNamespace::AnchorUIManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.OnCreateModeButtonPressed
void GlobalNamespace::AnchorUIManager::OnCreateModeButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::OnCreateModeButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCreateModeButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.OnLoadAnchorsButtonPressed
void GlobalNamespace::AnchorUIManager::OnLoadAnchorsButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::OnLoadAnchorsButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLoadAnchorsButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.ToggleCreateMode
void GlobalNamespace::AnchorUIManager::ToggleCreateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::ToggleCreateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleCreateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.StartPlacementMode
void GlobalNamespace::AnchorUIManager::StartPlacementMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::StartPlacementMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPlacementMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.EndPlacementMode
void GlobalNamespace::AnchorUIManager::EndPlacementMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::EndPlacementMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndPlacementMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.StartSelectMode
void GlobalNamespace::AnchorUIManager::StartSelectMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::StartSelectMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSelectMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.EndSelectMode
void GlobalNamespace::AnchorUIManager::EndSelectMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::EndSelectMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndSelectMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.HandleMenuNavigation
void GlobalNamespace::AnchorUIManager::HandleMenuNavigation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::HandleMenuNavigation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuNavigation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.NavigateToIndexInMenu
void GlobalNamespace::AnchorUIManager::NavigateToIndexInMenu(bool moveNext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::NavigateToIndexInMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NavigateToIndexInMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moveNext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, moveNext);
}
// Autogenerated method: AnchorUIManager.ShowAnchorPreview
void GlobalNamespace::AnchorUIManager::ShowAnchorPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::ShowAnchorPreview");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowAnchorPreview", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.HideAnchorPreview
void GlobalNamespace::AnchorUIManager::HideAnchorPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::HideAnchorPreview");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideAnchorPreview", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.PlaceAnchor
void GlobalNamespace::AnchorUIManager::PlaceAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::PlaceAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaceAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.ShowRaycastLine
void GlobalNamespace::AnchorUIManager::ShowRaycastLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::ShowRaycastLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowRaycastLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.HideRaycastLine
void GlobalNamespace::AnchorUIManager::HideRaycastLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::HideRaycastLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideRaycastLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.ControllerRaycast
void GlobalNamespace::AnchorUIManager::ControllerRaycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::ControllerRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ControllerRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.HoverAnchor
void GlobalNamespace::AnchorUIManager::HoverAnchor(::GlobalNamespace::Anchor* anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::HoverAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor);
}
// Autogenerated method: AnchorUIManager.UnhoverAnchor
void GlobalNamespace::AnchorUIManager::UnhoverAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::UnhoverAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnhoverAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager.SelectAnchor
void GlobalNamespace::AnchorUIManager::SelectAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::SelectAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AnchorUIManager/AnchorMode
#include "GlobalNamespace/AnchorUIManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AnchorUIManager/AnchorMode Create
::GlobalNamespace::AnchorUIManager::AnchorMode GlobalNamespace::AnchorUIManager::AnchorMode::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::AnchorMode::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AnchorUIManager::AnchorMode>("", "AnchorUIManager/AnchorMode", "Create"));
}
// Autogenerated static field setter
// Set static field: static public AnchorUIManager/AnchorMode Create
void GlobalNamespace::AnchorUIManager::AnchorMode::_set_Create(::GlobalNamespace::AnchorUIManager::AnchorMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::AnchorMode::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AnchorUIManager/AnchorMode", "Create", value));
}
// Autogenerated static field getter
// Get static field: static public AnchorUIManager/AnchorMode Select
::GlobalNamespace::AnchorUIManager::AnchorMode GlobalNamespace::AnchorUIManager::AnchorMode::_get_Select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::AnchorMode::_get_Select");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AnchorUIManager::AnchorMode>("", "AnchorUIManager/AnchorMode", "Select"));
}
// Autogenerated static field setter
// Set static field: static public AnchorUIManager/AnchorMode Select
void GlobalNamespace::AnchorUIManager::AnchorMode::_set_Select(::GlobalNamespace::AnchorUIManager::AnchorMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::AnchorMode::_set_Select");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AnchorUIManager/AnchorMode", "Select", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AnchorUIManager::AnchorMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::AnchorMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AnchorUIManager/PrimaryPressDelegate
#include "GlobalNamespace/AnchorUIManager_PrimaryPressDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AnchorUIManager/PrimaryPressDelegate.Invoke
void GlobalNamespace::AnchorUIManager::PrimaryPressDelegate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::PrimaryPressDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AnchorUIManager::PrimaryPressDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnchorUIManager/PrimaryPressDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::AnchorUIManager::PrimaryPressDelegate::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::PrimaryPressDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AnchorUIManager::PrimaryPressDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: AnchorUIManager/PrimaryPressDelegate.EndInvoke
void GlobalNamespace::AnchorUIManager::PrimaryPressDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorUIManager::PrimaryPressDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AnchorUIManager::PrimaryPressDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SpatialAnchorLoader
#include "GlobalNamespace/SpatialAnchorLoader.hpp"
// Including type: OVRSpatialAnchor/LoadOptions
#include "GlobalNamespace/OVRSpatialAnchor_LoadOptions.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSpatialAnchor _anchorPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSpatialAnchor*& GlobalNamespace::SpatialAnchorLoader::dyn__anchorPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpatialAnchorLoader::dyn__anchorPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anchorPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSpatialAnchor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<OVRSpatialAnchor/UnboundAnchor,System.Boolean> _onLoadAnchor
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor, bool>*& GlobalNamespace::SpatialAnchorLoader::dyn__onLoadAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpatialAnchorLoader::dyn__onLoadAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onLoadAnchor"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SpatialAnchorLoader.LoadAnchorsByUuid
void GlobalNamespace::SpatialAnchorLoader::LoadAnchorsByUuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpatialAnchorLoader::LoadAnchorsByUuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAnchorsByUuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpatialAnchorLoader.Awake
void GlobalNamespace::SpatialAnchorLoader::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpatialAnchorLoader::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpatialAnchorLoader.Load
void GlobalNamespace::SpatialAnchorLoader::Load(::GlobalNamespace::OVRSpatialAnchor::LoadOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpatialAnchorLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: SpatialAnchorLoader.OnLocalized
void GlobalNamespace::SpatialAnchorLoader::OnLocalized(::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor unboundAnchor, bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpatialAnchorLoader::OnLocalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLocalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unboundAnchor), ::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unboundAnchor, success);
}
// Autogenerated method: SpatialAnchorLoader.Log
void GlobalNamespace::SpatialAnchorLoader::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpatialAnchorLoader::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SpatialAnchorLoader", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: SpatialAnchorLoader.<Load>b__4_0
void GlobalNamespace::SpatialAnchorLoader::$Load$b__4_0(::ArrayW<::GlobalNamespace::OVRSpatialAnchor::UnboundAnchor> anchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpatialAnchorLoader::<Load>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Load>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchors);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: StartMenu
#include "GlobalNamespace/StartMenu.hpp"
// Including type: StartMenu/<>c__DisplayClass3_0
#include "GlobalNamespace/StartMenu_--c__DisplayClass3_0.hpp"
// Including type: OVROverlay
#include "GlobalNamespace/OVROverlay.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVROverlay overlay
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& GlobalNamespace::StartMenu::dyn_overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::dyn_overlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overlay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVROverlay text
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& GlobalNamespace::StartMenu::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig vrRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::StartMenu::dyn_vrRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::dyn_vrRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StartMenu.Start
void GlobalNamespace::StartMenu::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StartMenu.LoadScene
void GlobalNamespace::StartMenu::LoadScene(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: StartMenu/<>c__DisplayClass3_0
#include "GlobalNamespace/StartMenu_--c__DisplayClass3_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 sceneIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StartMenu::$$c__DisplayClass3_0::dyn_sceneIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::$$c__DisplayClass3_0::dyn_sceneIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public StartMenu <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StartMenu*& GlobalNamespace::StartMenu::$$c__DisplayClass3_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::$$c__DisplayClass3_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StartMenu**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StartMenu/<>c__DisplayClass3_0.<Start>b__0
void GlobalNamespace::StartMenu::$$c__DisplayClass3_0::$Start$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::$$c__DisplayClass3_0::<Start>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: LocalizedHaptics
#include "GlobalNamespace/LocalizedHaptics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRInput/Handedness m_handedness
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Handedness& GlobalNamespace::LocalizedHaptics::dyn_m_handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedHaptics::dyn_m_handedness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_handedness"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Handedness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller m_controller
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::LocalizedHaptics::dyn_m_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedHaptics::dyn_m_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_controller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalizedHaptics.Start
void GlobalNamespace::LocalizedHaptics::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedHaptics::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalizedHaptics.Update
void GlobalNamespace::LocalizedHaptics::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedHaptics::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: SceneSettings
#include "GlobalNamespace/SceneSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_fixedTimeStep
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SceneSettings::dyn_m_fixedTimeStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneSettings::dyn_m_fixedTimeStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fixedTimeStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_gravityScalar
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SceneSettings::dyn_m_gravityScalar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneSettings::dyn_m_gravityScalar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_gravityScalar"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_defaultContactOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SceneSettings::dyn_m_defaultContactOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneSettings::dyn_m_defaultContactOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultContactOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SceneSettings.Awake
void GlobalNamespace::SceneSettings::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneSettings::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SceneSettings.Start
void GlobalNamespace::SceneSettings::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneSettings::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SceneSettings.CollidersSetContactOffset
void GlobalNamespace::SceneSettings::CollidersSetContactOffset(float contactOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneSettings::CollidersSetContactOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SceneSettings", "CollidersSetContactOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contactOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, contactOffset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: StylusTip
#include "GlobalNamespace/StylusTip.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxBreadCrumbs
int GlobalNamespace::StylusTip::_get_MaxBreadCrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::_get_MaxBreadCrumbs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "StylusTip", "MaxBreadCrumbs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxBreadCrumbs
void GlobalNamespace::StylusTip::_set_MaxBreadCrumbs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::_set_MaxBreadCrumbs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StylusTip", "MaxBreadCrumbs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single BreadCrumbMinSize
float GlobalNamespace::StylusTip::_get_BreadCrumbMinSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::_get_BreadCrumbMinSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "StylusTip", "BreadCrumbMinSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Single BreadCrumbMinSize
void GlobalNamespace::StylusTip::_set_BreadCrumbMinSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::_set_BreadCrumbMinSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StylusTip", "BreadCrumbMinSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single BreadCrumbMaxSize
float GlobalNamespace::StylusTip::_get_BreadCrumbMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::_get_BreadCrumbMaxSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "StylusTip", "BreadCrumbMaxSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Single BreadCrumbMaxSize
void GlobalNamespace::StylusTip::_set_BreadCrumbMaxSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::_set_BreadCrumbMaxSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StylusTip", "BreadCrumbMaxSize", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_trackingSpace
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::StylusTip::dyn_m_trackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::dyn_m_trackingSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_trackingSpace"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Handedness m_handedness
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Handedness& GlobalNamespace::StylusTip::dyn_m_handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::dyn_m_handedness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_handedness"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Handedness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_breadCrumbPf
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::StylusTip::dyn_m_breadCrumbPf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::dyn_m_breadCrumbPf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_breadCrumbPf"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_breadCrumbContainer
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::StylusTip::dyn_m_breadCrumbContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::dyn_m_breadCrumbContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_breadCrumbContainer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] m_breadCrumbs
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::StylusTip::dyn_m_breadCrumbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::dyn_m_breadCrumbs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_breadCrumbs"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_breadCrumbIndexPrev
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StylusTip::dyn_m_breadCrumbIndexPrev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::dyn_m_breadCrumbIndexPrev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_breadCrumbIndexPrev"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_breadCrumbIndexCurr
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StylusTip::dyn_m_breadCrumbIndexCurr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::dyn_m_breadCrumbIndexCurr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_breadCrumbIndexCurr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller m_controller
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::StylusTip::dyn_m_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::dyn_m_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_controller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StylusTip.Awake
void GlobalNamespace::StylusTip::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StylusTip.Update
void GlobalNamespace::StylusTip::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StylusTip.GetT_Device_StylusTip
::UnityEngine::Pose GlobalNamespace::StylusTip::GetT_Device_StylusTip(::GlobalNamespace::OVRInput::Controller controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StylusTip::GetT_Device_StylusTip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StylusTip", "GetT_Device_StylusTip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controller);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UiAxis1dInspector
#include "GlobalNamespace/UiAxis1dInspector.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Slider
#include "UnityEngine/UI/Slider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_minExtent
[[deprecated("Use field access instead!")]] float& GlobalNamespace::UiAxis1dInspector::dyn_m_minExtent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiAxis1dInspector::dyn_m_minExtent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minExtent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_maxExtent
[[deprecated("Use field access instead!")]] float& GlobalNamespace::UiAxis1dInspector::dyn_m_maxExtent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiAxis1dInspector::dyn_m_maxExtent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxExtent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI m_nameLabel
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::UiAxis1dInspector::dyn_m_nameLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiAxis1dInspector::dyn_m_nameLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nameLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI m_valueLabel
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::UiAxis1dInspector::dyn_m_valueLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiAxis1dInspector::dyn_m_valueLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_valueLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Slider m_slider
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Slider*& GlobalNamespace::UiAxis1dInspector::dyn_m_slider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiAxis1dInspector::dyn_m_slider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_slider"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Slider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UiAxis1dInspector.SetExtents
void GlobalNamespace::UiAxis1dInspector::SetExtents(float minExtent, float maxExtent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiAxis1dInspector::SetExtents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExtents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minExtent), ::il2cpp_utils::ExtractType(maxExtent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, minExtent, maxExtent);
}
// Autogenerated method: UiAxis1dInspector.SetName
void GlobalNamespace::UiAxis1dInspector::SetName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiAxis1dInspector::SetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UiAxis1dInspector.SetValue
void GlobalNamespace::UiAxis1dInspector::SetValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiAxis1dInspector::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UiAxis2dInspector
#include "GlobalNamespace/UiAxis2dInspector.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_xExtent
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::UiAxis2dInspector::dyn_m_xExtent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiAxis2dInspector::dyn_m_xExtent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_xExtent"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_yExtent
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::UiAxis2dInspector::dyn_m_yExtent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiAxis2dInspector::dyn_m_yExtent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_yExtent"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI m_nameLabel
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::UiAxis2dInspector::dyn_m_nameLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiAxis2dInspector::dyn_m_nameLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nameLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI m_valueLabel
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::UiAxis2dInspector::dyn_m_valueLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiAxis2dInspector::dyn_m_valueLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_valueLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image m_handle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::UiAxis2dInspector::dyn_m_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiAxis2dInspector::dyn_m_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_handle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UiAxis2dInspector.SetExtents
void GlobalNamespace::UiAxis2dInspector::SetExtents(::UnityEngine::Vector2 xExtent, ::UnityEngine::Vector2 yExtent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiAxis2dInspector::SetExtents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExtents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xExtent), ::il2cpp_utils::ExtractType(yExtent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xExtent, yExtent);
}
// Autogenerated method: UiAxis2dInspector.SetName
void GlobalNamespace::UiAxis2dInspector::SetName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiAxis2dInspector::SetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UiAxis2dInspector.SetValue
void GlobalNamespace::UiAxis2dInspector::SetValue(bool isTouching, ::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiAxis2dInspector::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isTouching), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isTouching, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UiBoolInspector
#include "GlobalNamespace/UiBoolInspector.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI m_nameLabel
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::UiBoolInspector::dyn_m_nameLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiBoolInspector::dyn_m_nameLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nameLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle m_toggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::UiBoolInspector::dyn_m_toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiBoolInspector::dyn_m_toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_toggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UiBoolInspector.SetName
void GlobalNamespace::UiBoolInspector::SetName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiBoolInspector::SetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UiBoolInspector.SetValue
void GlobalNamespace::UiBoolInspector::SetValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiBoolInspector::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UiDeviceInspector
#include "GlobalNamespace/UiDeviceInspector.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UiBoolInspector
#include "GlobalNamespace/UiBoolInspector.hpp"
// Including type: UiAxis1dInspector
#include "GlobalNamespace/UiAxis1dInspector.hpp"
// Including type: UiAxis2dInspector
#include "GlobalNamespace/UiAxis2dInspector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRInput/Handedness m_handedness
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Handedness& GlobalNamespace::UiDeviceInspector::dyn_m_handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_handedness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_handedness"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Handedness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI m_title
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::UiDeviceInspector::dyn_m_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_title"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI m_status
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::UiDeviceInspector::dyn_m_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_status"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UiBoolInspector m_thumbRestTouch
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UiBoolInspector*& GlobalNamespace::UiDeviceInspector::dyn_m_thumbRestTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_thumbRestTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_thumbRestTouch"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UiBoolInspector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UiAxis1dInspector m_thumbRestForce
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UiAxis1dInspector*& GlobalNamespace::UiDeviceInspector::dyn_m_thumbRestForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_thumbRestForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_thumbRestForce"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UiAxis1dInspector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UiAxis1dInspector m_indexTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UiAxis1dInspector*& GlobalNamespace::UiDeviceInspector::dyn_m_indexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_indexTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_indexTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UiAxis1dInspector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UiAxis1dInspector m_gripTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UiAxis1dInspector*& GlobalNamespace::UiDeviceInspector::dyn_m_gripTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_gripTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_gripTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UiAxis1dInspector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UiAxis1dInspector m_stylusTipForce
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UiAxis1dInspector*& GlobalNamespace::UiDeviceInspector::dyn_m_stylusTipForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_stylusTipForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_stylusTipForce"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UiAxis1dInspector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UiAxis1dInspector m_indexCurl1d
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UiAxis1dInspector*& GlobalNamespace::UiDeviceInspector::dyn_m_indexCurl1d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_indexCurl1d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_indexCurl1d"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UiAxis1dInspector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UiAxis1dInspector m_indexSlider1d
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UiAxis1dInspector*& GlobalNamespace::UiDeviceInspector::dyn_m_indexSlider1d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_indexSlider1d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_indexSlider1d"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UiAxis1dInspector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UiBoolInspector m_ax
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UiBoolInspector*& GlobalNamespace::UiDeviceInspector::dyn_m_ax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_ax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ax"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UiBoolInspector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UiBoolInspector m_axTouch
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UiBoolInspector*& GlobalNamespace::UiDeviceInspector::dyn_m_axTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_axTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_axTouch"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UiBoolInspector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UiBoolInspector m_by
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UiBoolInspector*& GlobalNamespace::UiDeviceInspector::dyn_m_by() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_by");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_by"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UiBoolInspector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UiBoolInspector m_byTouch
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UiBoolInspector*& GlobalNamespace::UiDeviceInspector::dyn_m_byTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_byTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_byTouch"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UiBoolInspector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UiBoolInspector m_indexTouch
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UiBoolInspector*& GlobalNamespace::UiDeviceInspector::dyn_m_indexTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_indexTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_indexTouch"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UiBoolInspector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UiAxis2dInspector m_thumbstick
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UiAxis2dInspector*& GlobalNamespace::UiDeviceInspector::dyn_m_thumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_thumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_thumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UiAxis2dInspector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller m_controller
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::UiDeviceInspector::dyn_m_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::dyn_m_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_controller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UiDeviceInspector.Start
void GlobalNamespace::UiDeviceInspector::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UiDeviceInspector.Update
void GlobalNamespace::UiDeviceInspector::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UiDeviceInspector.ToDeviceModel
::StringW GlobalNamespace::UiDeviceInspector::ToDeviceModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::ToDeviceModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UiDeviceInspector", "ToDeviceModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UiDeviceInspector.ToHandednessString
::StringW GlobalNamespace::UiDeviceInspector::ToHandednessString(::GlobalNamespace::OVRInput::Handedness handedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiDeviceInspector::ToHandednessString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UiDeviceInspector", "ToHandednessString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handedness)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handedness);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UiSceneMenu
#include "GlobalNamespace/UiSceneMenu.hpp"
// Including type: UnityEngine.UI.VerticalLayoutGroup
#include "UnityEngine/UI/VerticalLayoutGroup.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 s_lastThumbstickL
::UnityEngine::Vector2 GlobalNamespace::UiSceneMenu::_get_s_lastThumbstickL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::_get_s_lastThumbstickL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("", "UiSceneMenu", "s_lastThumbstickL"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 s_lastThumbstickL
void GlobalNamespace::UiSceneMenu::_set_s_lastThumbstickL(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::_set_s_lastThumbstickL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UiSceneMenu", "s_lastThumbstickL", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 s_lastThumbstickR
::UnityEngine::Vector2 GlobalNamespace::UiSceneMenu::_get_s_lastThumbstickR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::_get_s_lastThumbstickR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("", "UiSceneMenu", "s_lastThumbstickR"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 s_lastThumbstickR
void GlobalNamespace::UiSceneMenu::_set_s_lastThumbstickR(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::_set_s_lastThumbstickR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UiSceneMenu", "s_lastThumbstickR", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.VerticalLayoutGroup m_layoutGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::VerticalLayoutGroup*& GlobalNamespace::UiSceneMenu::dyn_m_layoutGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::dyn_m_layoutGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_layoutGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::VerticalLayoutGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI m_labelPf
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::UiSceneMenu::dyn_m_labelPf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::dyn_m_labelPf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_labelPf"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SceneManagement.Scene m_activeScene
[[deprecated("Use field access instead!")]] ::UnityEngine::SceneManagement::Scene& GlobalNamespace::UiSceneMenu::dyn_m_activeScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::dyn_m_activeScene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_activeScene"))->offset;
  return *reinterpret_cast<::UnityEngine::SceneManagement::Scene*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UiSceneMenu.Awake
void GlobalNamespace::UiSceneMenu::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UiSceneMenu.Update
void GlobalNamespace::UiSceneMenu::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UiSceneMenu.InputPrevScene
bool GlobalNamespace::UiSceneMenu::InputPrevScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::InputPrevScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InputPrevScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UiSceneMenu.InputNextScene
bool GlobalNamespace::UiSceneMenu::InputNextScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::InputNextScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InputNextScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UiSceneMenu.KeyboardPrevScene
bool GlobalNamespace::UiSceneMenu::KeyboardPrevScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::KeyboardPrevScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyboardPrevScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UiSceneMenu.KeyboardNextScene
bool GlobalNamespace::UiSceneMenu::KeyboardNextScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::KeyboardNextScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyboardNextScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UiSceneMenu.ThumbstickPrevScene
bool GlobalNamespace::UiSceneMenu::ThumbstickPrevScene(::GlobalNamespace::OVRInput::Controller controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::ThumbstickPrevScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThumbstickPrevScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, controller);
}
// Autogenerated method: UiSceneMenu.ThumbstickNextScene
bool GlobalNamespace::UiSceneMenu::ThumbstickNextScene(::GlobalNamespace::OVRInput::Controller controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::ThumbstickNextScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThumbstickNextScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, controller);
}
// Autogenerated method: UiSceneMenu.GetLastThumbstickValue
::UnityEngine::Vector2 GlobalNamespace::UiSceneMenu::GetLastThumbstickValue(::GlobalNamespace::OVRInput::Controller controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::GetLastThumbstickValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastThumbstickValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, controller);
}
// Autogenerated method: UiSceneMenu.ChangeScene
void GlobalNamespace::UiSceneMenu::ChangeScene(int nextScene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::ChangeScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nextScene)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nextScene);
}
// Autogenerated method: UiSceneMenu.CreateLabel
void GlobalNamespace::UiSceneMenu::CreateLabel(int sceneIndex, ::StringW scenePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiSceneMenu::CreateLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneIndex), ::il2cpp_utils::ExtractType(scenePath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sceneIndex, scenePath);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UiVectorInspector
#include "GlobalNamespace/UiVectorInspector.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI m_nameLabel
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::UiVectorInspector::dyn_m_nameLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiVectorInspector::dyn_m_nameLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nameLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI m_valueLabel
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::UiVectorInspector::dyn_m_valueLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiVectorInspector::dyn_m_valueLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_valueLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UiVectorInspector.SetName
void GlobalNamespace::UiVectorInspector::SetName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiVectorInspector::SetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UiVectorInspector.SetValue
void GlobalNamespace::UiVectorInspector::SetValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UiVectorInspector::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FusionGraph
#include "GlobalNamespace/FusionGraph.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.UI.Dropdown
#include "UnityEngine/UI/Dropdown.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Fusion.IStatsBuffer
#include "Fusion/IStatsBuffer.hpp"
// Including type: FusionStats
#include "GlobalNamespace/FusionStats.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 GRPH_TOP_PAD
int GlobalNamespace::FusionGraph::_get_GRPH_TOP_PAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::_get_GRPH_TOP_PAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FusionGraph", "GRPH_TOP_PAD"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GRPH_TOP_PAD
void GlobalNamespace::FusionGraph::_set_GRPH_TOP_PAD(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::_set_GRPH_TOP_PAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph", "GRPH_TOP_PAD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GRPH_BTM_PAD
int GlobalNamespace::FusionGraph::_get_GRPH_BTM_PAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::_get_GRPH_BTM_PAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FusionGraph", "GRPH_BTM_PAD"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GRPH_BTM_PAD
void GlobalNamespace::FusionGraph::_set_GRPH_BTM_PAD(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::_set_GRPH_BTM_PAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph", "GRPH_BTM_PAD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 HIDE_XTRAS_WDTH
int GlobalNamespace::FusionGraph::_get_HIDE_XTRAS_WDTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::_get_HIDE_XTRAS_WDTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FusionGraph", "HIDE_XTRAS_WDTH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 HIDE_XTRAS_WDTH
void GlobalNamespace::FusionGraph::_set_HIDE_XTRAS_WDTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::_set_HIDE_XTRAS_WDTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph", "HIDE_XTRAS_WDTH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 INTERMITTENT_DATA_ARRAYSIZE
int GlobalNamespace::FusionGraph::_get_INTERMITTENT_DATA_ARRAYSIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::_get_INTERMITTENT_DATA_ARRAYSIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FusionGraph", "INTERMITTENT_DATA_ARRAYSIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 INTERMITTENT_DATA_ARRAYSIZE
void GlobalNamespace::FusionGraph::_set_INTERMITTENT_DATA_ARRAYSIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::_set_INTERMITTENT_DATA_ARRAYSIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph", "INTERMITTENT_DATA_ARRAYSIZE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 EXPAND_GRPH_THRESH
int GlobalNamespace::FusionGraph::_get_EXPAND_GRPH_THRESH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::_get_EXPAND_GRPH_THRESH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FusionGraph", "EXPAND_GRPH_THRESH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 EXPAND_GRPH_THRESH
void GlobalNamespace::FusionGraph::_set_EXPAND_GRPH_THRESH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::_set_EXPAND_GRPH_THRESH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph", "EXPAND_GRPH_THRESH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 COMPACT_THRESH
int GlobalNamespace::FusionGraph::_get_COMPACT_THRESH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::_get_COMPACT_THRESH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FusionGraph", "COMPACT_THRESH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 COMPACT_THRESH
void GlobalNamespace::FusionGraph::_set_COMPACT_THRESH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::_set_COMPACT_THRESH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph", "COMPACT_THRESH", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single Height
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FusionGraph::dyn_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn_Height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FusionGraph/Layouts _layout
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FusionGraph::Layouts& GlobalNamespace::FusionGraph::dyn__layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__layout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_layout"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FusionGraph::Layouts*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FusionGraph/ShowGraphOptions _showGraph
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FusionGraph::ShowGraphOptions& GlobalNamespace::FusionGraph::dyn__showGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__showGraph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showGraph"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FusionGraph::ShowGraphOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Padding
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FusionGraph::dyn_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn_Padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Padding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _alwaysExpandGraph
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionGraph::dyn__alwaysExpandGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__alwaysExpandGraph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysExpandGraph"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showUITargets
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionGraph::dyn__showUITargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__showUITargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showUITargets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image GraphImg
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::FusionGraph::dyn_GraphImg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn_GraphImg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GraphImg"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text LabelMin
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionGraph::dyn_LabelMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn_LabelMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LabelMin"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text LabelMax
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionGraph::dyn_LabelMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn_LabelMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LabelMax"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text LabelAvg
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionGraph::dyn_LabelAvg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn_LabelAvg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LabelAvg"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text LabelLast
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionGraph::dyn_LabelLast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn_LabelLast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LabelLast"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text LabelPer
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionGraph::dyn_LabelPer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn_LabelPer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LabelPer"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Dropdown _viewDropdown
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Dropdown*& GlobalNamespace::FusionGraph::dyn__viewDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__viewDropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewDropdown"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Dropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Button _avgBttn
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::FusionGraph::dyn__avgBttn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__avgBttn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avgBttn"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _min
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FusionGraph::dyn__min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _max
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FusionGraph::dyn__max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::FusionGraph::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _intensity
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::FusionGraph::dyn__intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intensity"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _histogram
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::FusionGraph::dyn__histogram() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__histogram");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_histogram"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> DropdownLookup
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GlobalNamespace::FusionGraph::dyn_DropdownLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn_DropdownLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DropdownLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.FusionGraphVisualization _graphVisualization
[[deprecated("Use field access instead!")]] ::Fusion::FusionGraphVisualization& GlobalNamespace::FusionGraph::dyn__graphVisualization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__graphVisualization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphVisualization"))->offset;
  return *reinterpret_cast<::Fusion::FusionGraphVisualization*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FusionGraph/ShaderType _currentShader
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FusionGraph::ShaderType& GlobalNamespace::FusionGraph::dyn__currentShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__currentShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentShader"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FusionGraph::ShaderType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ValueTuple`2<System.Int32,System.Single>[] _cachedValues
[[deprecated("Use field access instead!")]] ::ArrayW<::System::ValueTuple_2<int, float>>& GlobalNamespace::FusionGraph::dyn__cachedValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__cachedValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedValues"))->offset;
  return *reinterpret_cast<::ArrayW<::System::ValueTuple_2<int, float>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _lastCachedTickTime
[[deprecated("Use field access instead!")]] double& GlobalNamespace::FusionGraph::dyn__lastCachedTickTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__lastCachedTickTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastCachedTickTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastCachedTick
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionGraph::dyn__lastCachedTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__lastCachedTick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastCachedTick"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _histoHighestUsedBucketIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionGraph::dyn__histoHighestUsedBucketIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__histoHighestUsedBucketIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_histoHighestUsedBucketIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _histoAvgSampleCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionGraph::dyn__histoAvgSampleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__histoAvgSampleCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_histoAvgSampleCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _histoStepInverse
[[deprecated("Use field access instead!")]] double& GlobalNamespace::FusionGraph::dyn__histoStepInverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__histoStepInverse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_histoStepInverse"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _histoAvg
[[deprecated("Use field access instead!")]] double& GlobalNamespace::FusionGraph::dyn__histoAvg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::dyn__histoAvg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_histoAvg"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FusionGraph.get_Shader
::UnityEngine::Shader* GlobalNamespace::FusionGraph::get_Shader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::get_Shader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FusionGraph", "get_Shader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FusionGraph.get_Layout
::GlobalNamespace::FusionGraph::Layouts GlobalNamespace::FusionGraph::get_Layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::get_Layout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Layout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FusionGraph::Layouts, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraph.set_Layout
void GlobalNamespace::FusionGraph::set_Layout(::GlobalNamespace::FusionGraph::Layouts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::set_Layout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Layout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionGraph.get_ShowGraph
::GlobalNamespace::FusionGraph::ShowGraphOptions GlobalNamespace::FusionGraph::get_ShowGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::get_ShowGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShowGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FusionGraph::ShowGraphOptions, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraph.set_ShowGraph
void GlobalNamespace::FusionGraph::set_ShowGraph(::GlobalNamespace::FusionGraph::ShowGraphOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::set_ShowGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ShowGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionGraph.get_AlwaysExpandGraph
bool GlobalNamespace::FusionGraph::get_AlwaysExpandGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::get_AlwaysExpandGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlwaysExpandGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraph.set_AlwaysExpandGraph
void GlobalNamespace::FusionGraph::set_AlwaysExpandGraph(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::set_AlwaysExpandGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AlwaysExpandGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionGraph.set_GraphVisualization
void GlobalNamespace::FusionGraph::set_GraphVisualization(::Fusion::FusionGraphVisualization value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::set_GraphVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GraphVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionGraph.Reset
void GlobalNamespace::FusionGraph::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraph.Clear
void GlobalNamespace::FusionGraph::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraph.OnDropdownChanged
void GlobalNamespace::FusionGraph::OnDropdownChanged(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::OnDropdownChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDropdownChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionGraph.ResetShaderButton
void GlobalNamespace::FusionGraph::ResetShaderButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ResetShaderButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetShaderButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraph.ResetGraphShader
void GlobalNamespace::FusionGraph::ResetGraphShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ResetGraphShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetGraphShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraph.SetPerText
void GlobalNamespace::FusionGraph::SetPerText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::SetPerText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraph.UpdateContinuousTick
void GlobalNamespace::FusionGraph::UpdateContinuousTick(ByRef<::Fusion::IStatsBuffer*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::UpdateContinuousTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateContinuousTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(data));
}
// Autogenerated method: FusionGraph.UpdateIntermittentTick
void GlobalNamespace::FusionGraph::UpdateIntermittentTick(ByRef<::Fusion::IStatsBuffer*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::UpdateIntermittentTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateIntermittentTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(data));
}
// Autogenerated method: FusionGraph.UpdateIntermittentTime
void GlobalNamespace::FusionGraph::UpdateIntermittentTime(ByRef<::Fusion::IStatsBuffer*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::UpdateIntermittentTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateIntermittentTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(data));
}
// Autogenerated method: FusionGraph.ApplyScaling
void GlobalNamespace::FusionGraph::ApplyScaling(ByRef<float> min, ByRef<float> max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ApplyScaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyScaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(min), byref(max));
}
// Autogenerated method: FusionGraph.UpdateUiText
void GlobalNamespace::FusionGraph::UpdateUiText(float min, float max, float avg, float last) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::UpdateUiText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateUiText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max), ::il2cpp_utils::ExtractType(avg), ::il2cpp_utils::ExtractType(last)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, min, max, avg, last);
}
// Autogenerated method: FusionGraph.GetIntermittentAverageInfo
float GlobalNamespace::FusionGraph::GetIntermittentAverageInfo(ByRef<::Fusion::IStatsBuffer*> data, float sum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::GetIntermittentAverageInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIntermittentAverageInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(sum)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, byref(data), sum);
}
// Autogenerated method: FusionGraph.UpdateTickValueHistogram
void GlobalNamespace::FusionGraph::UpdateTickValueHistogram(ByRef<::Fusion::IStatsBuffer*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::UpdateTickValueHistogram");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTickValueHistogram", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(data));
}
// Autogenerated method: FusionGraph.Create
::GlobalNamespace::FusionGraph* GlobalNamespace::FusionGraph::Create(::GlobalNamespace::FusionStats* iFusionStats, ::Fusion::Simulation::Statistics::StatSourceTypes statSourceType, int statId, ::UnityEngine::RectTransform* parentRT) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FusionGraph", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iFusionStats), ::il2cpp_utils::ExtractType(statSourceType), ::il2cpp_utils::ExtractType(statId), ::il2cpp_utils::ExtractType(parentRT)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FusionGraph*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, iFusionStats, statSourceType, statId, parentRT);
}
// Autogenerated method: FusionGraph.Generate
void GlobalNamespace::FusionGraph::Generate(::Fusion::Simulation::Statistics::StatSourceTypes type, int statId, ::UnityEngine::RectTransform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Generate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Generate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(statId), ::il2cpp_utils::ExtractType(root)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, statId, root);
}
// Autogenerated method: FusionGraph.TryConnect
bool GlobalNamespace::FusionGraph::TryConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::TryConnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraph.Initialize
void GlobalNamespace::FusionGraph::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraph.CyclePer
void GlobalNamespace::FusionGraph::CyclePer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::CyclePer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraph.Refresh
void GlobalNamespace::FusionGraph::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Refresh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraph.CalculateLayout
void GlobalNamespace::FusionGraph::CalculateLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::CalculateLayout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FusionGraph/Layouts
#include "GlobalNamespace/FusionGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FusionGraph/Layouts Auto
::GlobalNamespace::FusionGraph::Layouts GlobalNamespace::FusionGraph::Layouts::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraph::Layouts>("", "FusionGraph/Layouts", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraph/Layouts Auto
void GlobalNamespace::FusionGraph::Layouts::_set_Auto(::GlobalNamespace::FusionGraph::Layouts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph/Layouts", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public FusionGraph/Layouts FullAuto
::GlobalNamespace::FusionGraph::Layouts GlobalNamespace::FusionGraph::Layouts::_get_FullAuto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::_get_FullAuto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraph::Layouts>("", "FusionGraph/Layouts", "FullAuto"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraph/Layouts FullAuto
void GlobalNamespace::FusionGraph::Layouts::_set_FullAuto(::GlobalNamespace::FusionGraph::Layouts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::_set_FullAuto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph/Layouts", "FullAuto", value));
}
// Autogenerated static field getter
// Get static field: static public FusionGraph/Layouts FullNoOverlap
::GlobalNamespace::FusionGraph::Layouts GlobalNamespace::FusionGraph::Layouts::_get_FullNoOverlap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::_get_FullNoOverlap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraph::Layouts>("", "FusionGraph/Layouts", "FullNoOverlap"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraph/Layouts FullNoOverlap
void GlobalNamespace::FusionGraph::Layouts::_set_FullNoOverlap(::GlobalNamespace::FusionGraph::Layouts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::_set_FullNoOverlap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph/Layouts", "FullNoOverlap", value));
}
// Autogenerated static field getter
// Get static field: static public FusionGraph/Layouts CenteredAuto
::GlobalNamespace::FusionGraph::Layouts GlobalNamespace::FusionGraph::Layouts::_get_CenteredAuto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::_get_CenteredAuto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraph::Layouts>("", "FusionGraph/Layouts", "CenteredAuto"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraph/Layouts CenteredAuto
void GlobalNamespace::FusionGraph::Layouts::_set_CenteredAuto(::GlobalNamespace::FusionGraph::Layouts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::_set_CenteredAuto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph/Layouts", "CenteredAuto", value));
}
// Autogenerated static field getter
// Get static field: static public FusionGraph/Layouts CenteredNoGraph
::GlobalNamespace::FusionGraph::Layouts GlobalNamespace::FusionGraph::Layouts::_get_CenteredNoGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::_get_CenteredNoGraph");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraph::Layouts>("", "FusionGraph/Layouts", "CenteredNoGraph"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraph/Layouts CenteredNoGraph
void GlobalNamespace::FusionGraph::Layouts::_set_CenteredNoGraph(::GlobalNamespace::FusionGraph::Layouts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::_set_CenteredNoGraph");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph/Layouts", "CenteredNoGraph", value));
}
// Autogenerated static field getter
// Get static field: static public FusionGraph/Layouts CenteredNoOverlap
::GlobalNamespace::FusionGraph::Layouts GlobalNamespace::FusionGraph::Layouts::_get_CenteredNoOverlap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::_get_CenteredNoOverlap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraph::Layouts>("", "FusionGraph/Layouts", "CenteredNoOverlap"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraph/Layouts CenteredNoOverlap
void GlobalNamespace::FusionGraph::Layouts::_set_CenteredNoOverlap(::GlobalNamespace::FusionGraph::Layouts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::_set_CenteredNoOverlap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph/Layouts", "CenteredNoOverlap", value));
}
// Autogenerated static field getter
// Get static field: static public FusionGraph/Layouts CompactAuto
::GlobalNamespace::FusionGraph::Layouts GlobalNamespace::FusionGraph::Layouts::_get_CompactAuto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::_get_CompactAuto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraph::Layouts>("", "FusionGraph/Layouts", "CompactAuto"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraph/Layouts CompactAuto
void GlobalNamespace::FusionGraph::Layouts::_set_CompactAuto(::GlobalNamespace::FusionGraph::Layouts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::_set_CompactAuto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph/Layouts", "CompactAuto", value));
}
// Autogenerated static field getter
// Get static field: static public FusionGraph/Layouts CompactNoGraph
::GlobalNamespace::FusionGraph::Layouts GlobalNamespace::FusionGraph::Layouts::_get_CompactNoGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::_get_CompactNoGraph");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraph::Layouts>("", "FusionGraph/Layouts", "CompactNoGraph"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraph/Layouts CompactNoGraph
void GlobalNamespace::FusionGraph::Layouts::_set_CompactNoGraph(::GlobalNamespace::FusionGraph::Layouts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::_set_CompactNoGraph");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph/Layouts", "CompactNoGraph", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionGraph::Layouts::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::Layouts::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FusionGraph/ShowGraphOptions
#include "GlobalNamespace/FusionGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FusionGraph/ShowGraphOptions Never
::GlobalNamespace::FusionGraph::ShowGraphOptions GlobalNamespace::FusionGraph::ShowGraphOptions::_get_Never() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ShowGraphOptions::_get_Never");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraph::ShowGraphOptions>("", "FusionGraph/ShowGraphOptions", "Never"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraph/ShowGraphOptions Never
void GlobalNamespace::FusionGraph::ShowGraphOptions::_set_Never(::GlobalNamespace::FusionGraph::ShowGraphOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ShowGraphOptions::_set_Never");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph/ShowGraphOptions", "Never", value));
}
// Autogenerated static field getter
// Get static field: static public FusionGraph/ShowGraphOptions OverlayOnly
::GlobalNamespace::FusionGraph::ShowGraphOptions GlobalNamespace::FusionGraph::ShowGraphOptions::_get_OverlayOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ShowGraphOptions::_get_OverlayOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraph::ShowGraphOptions>("", "FusionGraph/ShowGraphOptions", "OverlayOnly"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraph/ShowGraphOptions OverlayOnly
void GlobalNamespace::FusionGraph::ShowGraphOptions::_set_OverlayOnly(::GlobalNamespace::FusionGraph::ShowGraphOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ShowGraphOptions::_set_OverlayOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph/ShowGraphOptions", "OverlayOnly", value));
}
// Autogenerated static field getter
// Get static field: static public FusionGraph/ShowGraphOptions Always
::GlobalNamespace::FusionGraph::ShowGraphOptions GlobalNamespace::FusionGraph::ShowGraphOptions::_get_Always() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ShowGraphOptions::_get_Always");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraph::ShowGraphOptions>("", "FusionGraph/ShowGraphOptions", "Always"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraph/ShowGraphOptions Always
void GlobalNamespace::FusionGraph::ShowGraphOptions::_set_Always(::GlobalNamespace::FusionGraph::ShowGraphOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ShowGraphOptions::_set_Always");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph/ShowGraphOptions", "Always", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionGraph::ShowGraphOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ShowGraphOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FusionGraph/ShaderType
#include "GlobalNamespace/FusionGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FusionGraph/ShaderType None
::GlobalNamespace::FusionGraph::ShaderType GlobalNamespace::FusionGraph::ShaderType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ShaderType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraph::ShaderType>("", "FusionGraph/ShaderType", "None"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraph/ShaderType None
void GlobalNamespace::FusionGraph::ShaderType::_set_None(::GlobalNamespace::FusionGraph::ShaderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ShaderType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph/ShaderType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public FusionGraph/ShaderType Overlay
::GlobalNamespace::FusionGraph::ShaderType GlobalNamespace::FusionGraph::ShaderType::_get_Overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ShaderType::_get_Overlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraph::ShaderType>("", "FusionGraph/ShaderType", "Overlay"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraph/ShaderType Overlay
void GlobalNamespace::FusionGraph::ShaderType::_set_Overlay(::GlobalNamespace::FusionGraph::ShaderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ShaderType::_set_Overlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph/ShaderType", "Overlay", value));
}
// Autogenerated static field getter
// Get static field: static public FusionGraph/ShaderType GameObject
::GlobalNamespace::FusionGraph::ShaderType GlobalNamespace::FusionGraph::ShaderType::_get_GameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ShaderType::_get_GameObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraph::ShaderType>("", "FusionGraph/ShaderType", "GameObject"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraph/ShaderType GameObject
void GlobalNamespace::FusionGraph::ShaderType::_set_GameObject(::GlobalNamespace::FusionGraph::ShaderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ShaderType::_set_GameObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraph/ShaderType", "GameObject", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionGraph::ShaderType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraph::ShaderType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FusionStats
#include "GlobalNamespace/FusionStats.hpp"
// Including type: Fusion.NetworkObject
#include "Fusion/NetworkObject.hpp"
// Including type: Fusion.NetworkRunner
#include "Fusion/NetworkRunner.hpp"
// Including type: FusionGraph
#include "GlobalNamespace/FusionGraph.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Fusion.StatsInternal.IFusionStatsView
#include "Fusion/StatsInternal/IFusionStatsView.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.GridLayoutGroup
#include "UnityEngine/UI/GridLayoutGroup.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.Font
#include "UnityEngine/Font.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: Fusion.Simulation/Statistics/StatSourceTypes
#include "Fusion/Simulation_Statistics_StatSourceTypes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<Fusion.NetworkRunner,System.Collections.Generic.List`1<FusionStats>> _statsForRunnerLookup
::System::Collections::Generic::Dictionary_2<::Fusion::NetworkRunner*, ::System::Collections::Generic::List_1<::GlobalNamespace::FusionStats*>*>* GlobalNamespace::FusionStats::_get__statsForRunnerLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get__statsForRunnerLookup");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Fusion::NetworkRunner*, ::System::Collections::Generic::List_1<::GlobalNamespace::FusionStats*>*>*>("", "FusionStats", "_statsForRunnerLookup")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<Fusion.NetworkRunner,System.Collections.Generic.List`1<FusionStats>> _statsForRunnerLookup
void GlobalNamespace::FusionStats::_set__statsForRunnerLookup(::System::Collections::Generic::Dictionary_2<::Fusion::NetworkRunner*, ::System::Collections::Generic::List_1<::GlobalNamespace::FusionStats*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set__statsForRunnerLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "_statsForRunnerLookup", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,FusionStats> _activeGuids
::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::FusionStats*>* GlobalNamespace::FusionStats::_get__activeGuids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get__activeGuids");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::FusionStats*>*>("", "FusionStats", "_activeGuids")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,FusionStats> _activeGuids
void GlobalNamespace::FusionStats::_set__activeGuids(::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::FusionStats*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set__activeGuids");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "_activeGuids", value));
}
// Autogenerated static field getter
// Get static field: static public Fusion.Simulation/Statistics/SimStatFlags DefaultSimStatsMask
::Fusion::Simulation::Statistics::SimStatFlags GlobalNamespace::FusionStats::_get_DefaultSimStatsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_DefaultSimStatsMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Simulation::Statistics::SimStatFlags>("", "FusionStats", "DefaultSimStatsMask"));
}
// Autogenerated static field setter
// Set static field: static public Fusion.Simulation/Statistics/SimStatFlags DefaultSimStatsMask
void GlobalNamespace::FusionStats::_set_DefaultSimStatsMask(::Fusion::Simulation::Statistics::SimStatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_DefaultSimStatsMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "DefaultSimStatsMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SCREEN_SCALE_W
int GlobalNamespace::FusionStats::_get_SCREEN_SCALE_W() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_SCREEN_SCALE_W");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FusionStats", "SCREEN_SCALE_W"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SCREEN_SCALE_W
void GlobalNamespace::FusionStats::_set_SCREEN_SCALE_W(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_SCREEN_SCALE_W");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "SCREEN_SCALE_W", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SCREEN_SCALE_H
int GlobalNamespace::FusionStats::_get_SCREEN_SCALE_H() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_SCREEN_SCALE_H");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FusionStats", "SCREEN_SCALE_H"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SCREEN_SCALE_H
void GlobalNamespace::FusionStats::_set_SCREEN_SCALE_H(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_SCREEN_SCALE_H");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "SCREEN_SCALE_H", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single TEXT_MARGIN
float GlobalNamespace::FusionStats::_get_TEXT_MARGIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_TEXT_MARGIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FusionStats", "TEXT_MARGIN"));
}
// Autogenerated static field setter
// Set static field: static private System.Single TEXT_MARGIN
void GlobalNamespace::FusionStats::_set_TEXT_MARGIN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_TEXT_MARGIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "TEXT_MARGIN", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single TITLE_HEIGHT
float GlobalNamespace::FusionStats::_get_TITLE_HEIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_TITLE_HEIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FusionStats", "TITLE_HEIGHT"));
}
// Autogenerated static field setter
// Set static field: static private System.Single TITLE_HEIGHT
void GlobalNamespace::FusionStats::_set_TITLE_HEIGHT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_TITLE_HEIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "TITLE_HEIGHT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MARGIN
int GlobalNamespace::FusionStats::_get_MARGIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_MARGIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FusionStats", "MARGIN"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MARGIN
void GlobalNamespace::FusionStats::_set_MARGIN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_MARGIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "MARGIN", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 PAD
int GlobalNamespace::FusionStats::_get_PAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_PAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FusionStats", "PAD"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 PAD
void GlobalNamespace::FusionStats::_set_PAD(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_PAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "PAD", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PLAY_TEXT
::StringW GlobalNamespace::FusionStats::_get_PLAY_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_PLAY_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "FusionStats", "PLAY_TEXT"));
}
// Autogenerated static field setter
// Set static field: static private System.String PLAY_TEXT
void GlobalNamespace::FusionStats::_set_PLAY_TEXT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_PLAY_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "PLAY_TEXT", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PAUS_TEXT
::StringW GlobalNamespace::FusionStats::_get_PAUS_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_PAUS_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "FusionStats", "PAUS_TEXT"));
}
// Autogenerated static field setter
// Set static field: static private System.String PAUS_TEXT
void GlobalNamespace::FusionStats::_set_PAUS_TEXT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_PAUS_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "PAUS_TEXT", value));
}
// Autogenerated static field getter
// Get static field: static private System.String SHOW_TEXT
::StringW GlobalNamespace::FusionStats::_get_SHOW_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_SHOW_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "FusionStats", "SHOW_TEXT"));
}
// Autogenerated static field setter
// Set static field: static private System.String SHOW_TEXT
void GlobalNamespace::FusionStats::_set_SHOW_TEXT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_SHOW_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "SHOW_TEXT", value));
}
// Autogenerated static field getter
// Get static field: static private System.String HIDE_TEXT
::StringW GlobalNamespace::FusionStats::_get_HIDE_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_HIDE_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "FusionStats", "HIDE_TEXT"));
}
// Autogenerated static field setter
// Set static field: static private System.String HIDE_TEXT
void GlobalNamespace::FusionStats::_set_HIDE_TEXT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_HIDE_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "HIDE_TEXT", value));
}
// Autogenerated static field getter
// Get static field: static private System.String CLER_TEXT
::StringW GlobalNamespace::FusionStats::_get_CLER_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_CLER_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "FusionStats", "CLER_TEXT"));
}
// Autogenerated static field setter
// Set static field: static private System.String CLER_TEXT
void GlobalNamespace::FusionStats::_set_CLER_TEXT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_CLER_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "CLER_TEXT", value));
}
// Autogenerated static field getter
// Get static field: static private System.String CNVS_TEXT
::StringW GlobalNamespace::FusionStats::_get_CNVS_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_CNVS_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "FusionStats", "CNVS_TEXT"));
}
// Autogenerated static field setter
// Set static field: static private System.String CNVS_TEXT
void GlobalNamespace::FusionStats::_set_CNVS_TEXT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_CNVS_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "CNVS_TEXT", value));
}
// Autogenerated static field getter
// Get static field: static private System.String CLSE_TEXT
::StringW GlobalNamespace::FusionStats::_get_CLSE_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_CLSE_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "FusionStats", "CLSE_TEXT"));
}
// Autogenerated static field setter
// Set static field: static private System.String CLSE_TEXT
void GlobalNamespace::FusionStats::_set_CLSE_TEXT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_CLSE_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "CLSE_TEXT", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PLAY_ICON
::StringW GlobalNamespace::FusionStats::_get_PLAY_ICON() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_PLAY_ICON");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "FusionStats", "PLAY_ICON"));
}
// Autogenerated static field setter
// Set static field: static private System.String PLAY_ICON
void GlobalNamespace::FusionStats::_set_PLAY_ICON(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_PLAY_ICON");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "PLAY_ICON", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PAUS_ICON
::StringW GlobalNamespace::FusionStats::_get_PAUS_ICON() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_PAUS_ICON");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "FusionStats", "PAUS_ICON"));
}
// Autogenerated static field setter
// Set static field: static private System.String PAUS_ICON
void GlobalNamespace::FusionStats::_set_PAUS_ICON(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_PAUS_ICON");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "PAUS_ICON", value));
}
// Autogenerated static field getter
// Get static field: static private System.String HIDE_ICON
::StringW GlobalNamespace::FusionStats::_get_HIDE_ICON() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_HIDE_ICON");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "FusionStats", "HIDE_ICON"));
}
// Autogenerated static field setter
// Set static field: static private System.String HIDE_ICON
void GlobalNamespace::FusionStats::_set_HIDE_ICON(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_HIDE_ICON");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "HIDE_ICON", value));
}
// Autogenerated static field getter
// Get static field: static private System.String SHOW_ICON
::StringW GlobalNamespace::FusionStats::_get_SHOW_ICON() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_SHOW_ICON");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "FusionStats", "SHOW_ICON"));
}
// Autogenerated static field setter
// Set static field: static private System.String SHOW_ICON
void GlobalNamespace::FusionStats::_set_SHOW_ICON(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_SHOW_ICON");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "SHOW_ICON", value));
}
// Autogenerated static field getter
// Get static field: static private System.String CLER_ICON
::StringW GlobalNamespace::FusionStats::_get_CLER_ICON() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_CLER_ICON");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "FusionStats", "CLER_ICON"));
}
// Autogenerated static field setter
// Set static field: static private System.String CLER_ICON
void GlobalNamespace::FusionStats::_set_CLER_ICON(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_CLER_ICON");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "CLER_ICON", value));
}
// Autogenerated static field getter
// Get static field: static private System.String CNVS_ICON
::StringW GlobalNamespace::FusionStats::_get_CNVS_ICON() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_CNVS_ICON");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "FusionStats", "CNVS_ICON"));
}
// Autogenerated static field setter
// Set static field: static private System.String CNVS_ICON
void GlobalNamespace::FusionStats::_set_CNVS_ICON(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_CNVS_ICON");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "CNVS_ICON", value));
}
// Autogenerated static field getter
// Get static field: static private System.String CLSE_ICON
::StringW GlobalNamespace::FusionStats::_get_CLSE_ICON() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get_CLSE_ICON");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "FusionStats", "CLSE_ICON"));
}
// Autogenerated static field setter
// Set static field: static private System.String CLSE_ICON
void GlobalNamespace::FusionStats::_set_CLSE_ICON(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set_CLSE_ICON");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "CLSE_ICON", value));
}
// Autogenerated static field getter
// Get static field: static private System.Nullable`1<System.Boolean> _newInputSystemFound
::System::Nullable_1<bool> GlobalNamespace::FusionStats::_get__newInputSystemFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_get__newInputSystemFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Nullable_1<bool>>("", "FusionStats", "_newInputSystemFound"));
}
// Autogenerated static field setter
// Set static field: static private System.Nullable`1<System.Boolean> _newInputSystemFound
void GlobalNamespace::FusionStats::_set__newInputSystemFound(::System::Nullable_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::_set__newInputSystemFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats", "_newInputSystemFound", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single RedrawInterval
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FusionStats::dyn_RedrawInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn_RedrawInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RedrawInterval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FusionStats/StatCanvasTypes _canvasType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FusionStats::StatCanvasTypes& GlobalNamespace::FusionStats::dyn__canvasType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__canvasType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FusionStats::StatCanvasTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showButtonLabels
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionStats::dyn__showButtonLabels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__showButtonLabels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showButtonLabels"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxHeaderHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionStats::dyn__maxHeaderHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__maxHeaderHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxHeaderHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CanvasScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FusionStats::dyn_CanvasScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn_CanvasScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CanvasScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CanvasDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FusionStats::dyn_CanvasDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn_CanvasDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CanvasDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect _gameObjectRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::FusionStats::dyn__gameObjectRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__gameObjectRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameObjectRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect _overlayRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::FusionStats::dyn__overlayRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__overlayRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overlayRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FusionGraph/Layouts _defaultLayout
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FusionGraph::Layouts& GlobalNamespace::FusionStats::dyn__defaultLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__defaultLayout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultLayout"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FusionGraph::Layouts*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _noTextOverlap
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionStats::dyn__noTextOverlap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__noTextOverlap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noTextOverlap"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _noGraphShader
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionStats::dyn__noGraphShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__noGraphShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noGraphShader"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 GraphColumnCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionStats::dyn_GraphColumnCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn_GraphColumnCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GraphColumnCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _graphMaxWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionStats::dyn__graphMaxWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__graphMaxWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphMaxWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _enableObjectStats
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionStats::dyn__enableObjectStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__enableObjectStats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enableObjectStats"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.NetworkObject _object
[[deprecated("Use field access instead!")]] ::Fusion::NetworkObject*& GlobalNamespace::FusionStats::dyn__object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__object");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_object"))->offset;
  return *reinterpret_cast<::Fusion::NetworkObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _objectTitleHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionStats::dyn__objectTitleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__objectTitleHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectTitleHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _objectIdsHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionStats::dyn__objectIdsHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__objectIdsHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectIdsHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _objectMetersHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionStats::dyn__objectMetersHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__objectMetersHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectMetersHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.NetworkRunner _runner
[[deprecated("Use field access instead!")]] ::Fusion::NetworkRunner*& GlobalNamespace::FusionStats::dyn__runner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__runner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_runner"))->offset;
  return *reinterpret_cast<::Fusion::NetworkRunner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean InitializeAllGraphs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionStats::dyn_InitializeAllGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn_InitializeAllGraphs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitializeAllGraphs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.SimulationModes ConnectTo
[[deprecated("Use field access instead!")]] ::Fusion::SimulationModes& GlobalNamespace::FusionStats::dyn_ConnectTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn_ConnectTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectTo"))->offset;
  return *reinterpret_cast<::Fusion::SimulationModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Simulation/Statistics/ObjStatFlags _includedObjStats
[[deprecated("Use field access instead!")]] ::Fusion::Simulation::Statistics::ObjStatFlags& GlobalNamespace::FusionStats::dyn__includedObjStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__includedObjStats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_includedObjStats"))->offset;
  return *reinterpret_cast<::Fusion::Simulation::Statistics::ObjStatFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Simulation/Statistics/NetStatFlags _includedNetStats
[[deprecated("Use field access instead!")]] ::Fusion::Simulation::Statistics::NetStatFlags& GlobalNamespace::FusionStats::dyn__includedNetStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__includedNetStats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_includedNetStats"))->offset;
  return *reinterpret_cast<::Fusion::Simulation::Statistics::NetStatFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Simulation/Statistics/SimStatFlags _includedSimStats
[[deprecated("Use field access instead!")]] ::Fusion::Simulation::Statistics::SimStatFlags& GlobalNamespace::FusionStats::dyn__includedSimStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__includedSimStats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_includedSimStats"))->offset;
  return *reinterpret_cast<::Fusion::Simulation::Statistics::SimStatFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutoDestroy
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionStats::dyn_AutoDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn_AutoDestroy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoDestroy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnforceSingle
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionStats::dyn_EnforceSingle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn_EnforceSingle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnforceSingle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Guid
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::FusionStats::dyn_Guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn_Guid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Guid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _modifyColors
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionStats::dyn__modifyColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__modifyColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modifyColors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _graphColorGood
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::FusionStats::dyn__graphColorGood() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__graphColorGood");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphColorGood"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _graphColorWarn
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::FusionStats::dyn__graphColorWarn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__graphColorWarn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphColorWarn"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _graphColorBad
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::FusionStats::dyn__graphColorBad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__graphColorBad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphColorBad"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _graphColorFlag
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::FusionStats::dyn__graphColorFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__graphColorFlag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphColorFlag"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _fontColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::FusionStats::dyn__fontColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__fontColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fontColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color PanelColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::FusionStats::dyn_PanelColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn_PanelColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PanelColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _simDataBackColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::FusionStats::dyn__simDataBackColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__simDataBackColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simDataBackColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _netDataBackColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::FusionStats::dyn__netDataBackColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__netDataBackColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_netDataBackColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _objDataBackColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::FusionStats::dyn__objDataBackColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__objDataBackColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objDataBackColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FusionGraph[] _simGraphs
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::FusionGraph*>& GlobalNamespace::FusionStats::dyn__simGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__simGraphs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simGraphs"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::FusionGraph*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FusionGraph[] _objGraphs
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::FusionGraph*>& GlobalNamespace::FusionStats::dyn__objGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__objGraphs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objGraphs"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::FusionGraph*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FusionGraph[] _netGraphs
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::FusionGraph*>& GlobalNamespace::FusionStats::dyn__netGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__netGraphs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_netGraphs"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::FusionGraph*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Fusion.StatsInternal.IFusionStatsView> _foundViews
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Fusion::StatsInternal::IFusionStatsView*>*& GlobalNamespace::FusionStats::dyn__foundViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__foundViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_foundViews"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Fusion::StatsInternal::IFusionStatsView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<FusionGraph> _foundGraphs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::FusionGraph*>*& GlobalNamespace::FusionStats::dyn__foundGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__foundGraphs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_foundGraphs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::FusionGraph*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _titleText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionStats::dyn__titleText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__titleText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _clearIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionStats::dyn__clearIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__clearIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _pauseIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionStats::dyn__pauseIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__pauseIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _togglIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionStats::dyn__togglIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__togglIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_togglIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _closeIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionStats::dyn__closeIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__closeIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closeIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _canvsIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionStats::dyn__canvsIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__canvsIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvsIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _clearLabel
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionStats::dyn__clearLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__clearLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearLabel"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _pauseLabel
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionStats::dyn__pauseLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__pauseLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseLabel"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _togglLabel
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionStats::dyn__togglLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__togglLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_togglLabel"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _closeLabel
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionStats::dyn__closeLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__closeLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closeLabel"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _canvsLabel
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionStats::dyn__canvsLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__canvsLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvsLabel"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _objectNameText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionStats::dyn__objectNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__objectNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectNameText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.GridLayoutGroup _graphGridLayoutGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::GridLayoutGroup*& GlobalNamespace::FusionStats::dyn__graphGridLayoutGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__graphGridLayoutGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphGridLayoutGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::GridLayoutGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas _canvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& GlobalNamespace::FusionStats::dyn__canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _canvasRT
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::FusionStats::dyn__canvasRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__canvasRT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasRT"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rootPanelRT
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::FusionStats::dyn__rootPanelRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__rootPanelRT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootPanelRT"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _guidesRT
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::FusionStats::dyn__guidesRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__guidesRT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_guidesRT"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _headerRT
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::FusionStats::dyn__headerRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__headerRT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headerRT"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _statsPanelRT
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::FusionStats::dyn__statsPanelRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__statsPanelRT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_statsPanelRT"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _graphsLayoutRT
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::FusionStats::dyn__graphsLayoutRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__graphsLayoutRT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphsLayoutRT"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _titleRT
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::FusionStats::dyn__titleRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__titleRT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleRT"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _buttonsRT
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::FusionStats::dyn__buttonsRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__buttonsRT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonsRT"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _objectTitlePanelRT
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::FusionStats::dyn__objectTitlePanelRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__objectTitlePanelRT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectTitlePanelRT"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _objectIdsGroupRT
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::FusionStats::dyn__objectIdsGroupRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__objectIdsGroupRT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectIdsGroupRT"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _objectMetersPanelRT
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::FusionStats::dyn__objectMetersPanelRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__objectMetersPanelRT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectMetersPanelRT"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _clientIdPanelRT
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::FusionStats::dyn__clientIdPanelRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__clientIdPanelRT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clientIdPanelRT"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _authorityPanelRT
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::FusionStats::dyn__authorityPanelRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__authorityPanelRT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authorityPanelRT"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _titleButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::FusionStats::dyn__titleButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__titleButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _objctButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::FusionStats::dyn__objctButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__objctButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objctButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _clearButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::FusionStats::dyn__clearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__clearButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _togglButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::FusionStats::dyn__togglButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__togglButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_togglButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _pauseButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::FusionStats::dyn__pauseButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__pauseButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _closeButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::FusionStats::dyn__closeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__closeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _canvsButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::FusionStats::dyn__canvsButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__canvsButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvsButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Font _font
[[deprecated("Use field access instead!")]] ::UnityEngine::Font*& GlobalNamespace::FusionStats::dyn__font() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__font");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_font"))->offset;
  return *reinterpret_cast<::UnityEngine::Font**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hidden
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionStats::dyn__hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__hidden");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hidden"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _paused
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionStats::dyn__paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__paused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_paused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _layoutDirty
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionStats::dyn__layoutDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__layoutDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_layoutDirty"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _activeDirty
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionStats::dyn__activeDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__activeDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _currentDrawTime
[[deprecated("Use field access instead!")]] double& GlobalNamespace::FusionStats::dyn__currentDrawTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__currentDrawTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentDrawTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _delayDrawUntil
[[deprecated("Use field access instead!")]] double& GlobalNamespace::FusionStats::dyn__delayDrawUntil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__delayDrawUntil");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delayDrawUntil"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _previousObjectTitle
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::FusionStats::dyn__previousObjectTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__previousObjectTitle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousObjectTitle"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastLayoutUpdate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FusionStats::dyn__lastLayoutUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::dyn__lastLayoutUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastLayoutUpdate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FusionStats.CreateInternal
::GlobalNamespace::FusionStats* GlobalNamespace::FusionStats::CreateInternal(::Fusion::NetworkRunner* runner, ::GlobalNamespace::FusionStats::DefaultLayouts layout, ::System::Nullable_1<::Fusion::Simulation::Statistics::NetStatFlags> netStatsMask, ::System::Nullable_1<::Fusion::Simulation::Statistics::SimStatFlags> simStatsMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::CreateInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FusionStats", "CreateInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runner), ::il2cpp_utils::ExtractType(layout), ::il2cpp_utils::ExtractType(netStatsMask), ::il2cpp_utils::ExtractType(simStatsMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FusionStats*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, runner, layout, netStatsMask, simStatsMask);
}
// Autogenerated method: FusionStats.Create
::GlobalNamespace::FusionStats* GlobalNamespace::FusionStats::Create(::UnityEngine::Transform* parent, ::Fusion::NetworkRunner* runner, ::System::Nullable_1<::GlobalNamespace::FusionStats::DefaultLayouts> screenLayout, ::System::Nullable_1<::GlobalNamespace::FusionStats::DefaultLayouts> objectLayout, ::System::Nullable_1<::Fusion::Simulation::Statistics::NetStatFlags> netStatsMask, ::System::Nullable_1<::Fusion::Simulation::Statistics::SimStatFlags> simStatsMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FusionStats", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(runner), ::il2cpp_utils::ExtractType(screenLayout), ::il2cpp_utils::ExtractType(objectLayout), ::il2cpp_utils::ExtractType(netStatsMask), ::il2cpp_utils::ExtractType(simStatsMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FusionStats*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, runner, screenLayout, objectLayout, netStatsMask, simStatsMask);
}
// Autogenerated method: FusionStats.ResetStatics
void GlobalNamespace::FusionStats::ResetStatics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::ResetStatics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FusionStats", "ResetStatics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FusionStats.get_DefaultNetStatsMask
::Fusion::Simulation::Statistics::NetStatFlags GlobalNamespace::FusionStats::get_DefaultNetStatsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_DefaultNetStatsMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FusionStats", "get_DefaultNetStatsMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Simulation::Statistics::NetStatFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FusionStats.get_ShowColorControls
bool GlobalNamespace::FusionStats::get_ShowColorControls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_ShowColorControls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShowColorControls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.get_IsNotPlaying
bool GlobalNamespace::FusionStats::get_IsNotPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_IsNotPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNotPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.get_CanvasType
::GlobalNamespace::FusionStats::StatCanvasTypes GlobalNamespace::FusionStats::get_CanvasType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_CanvasType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanvasType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FusionStats::StatCanvasTypes, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_CanvasType
void GlobalNamespace::FusionStats::set_CanvasType(::GlobalNamespace::FusionStats::StatCanvasTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_CanvasType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CanvasType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_ShowButtonLabels
bool GlobalNamespace::FusionStats::get_ShowButtonLabels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_ShowButtonLabels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShowButtonLabels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_ShowButtonLabels
void GlobalNamespace::FusionStats::set_ShowButtonLabels(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_ShowButtonLabels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ShowButtonLabels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_MaxHeaderHeight
int GlobalNamespace::FusionStats::get_MaxHeaderHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_MaxHeaderHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxHeaderHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_MaxHeaderHeight
void GlobalNamespace::FusionStats::set_MaxHeaderHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_MaxHeaderHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxHeaderHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_GameObjectRect
::UnityEngine::Rect GlobalNamespace::FusionStats::get_GameObjectRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_GameObjectRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GameObjectRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_GameObjectRect
void GlobalNamespace::FusionStats::set_GameObjectRect(::UnityEngine::Rect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_GameObjectRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GameObjectRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_OverlayRect
::UnityEngine::Rect GlobalNamespace::FusionStats::get_OverlayRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_OverlayRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverlayRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_OverlayRect
void GlobalNamespace::FusionStats::set_OverlayRect(::UnityEngine::Rect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_OverlayRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OverlayRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_DefaultLayout
::GlobalNamespace::FusionGraph::Layouts GlobalNamespace::FusionStats::get_DefaultLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_DefaultLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FusionGraph::Layouts, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_DefaultLayout
void GlobalNamespace::FusionStats::set_DefaultLayout(::GlobalNamespace::FusionGraph::Layouts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_DefaultLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_NoTextOverlap
bool GlobalNamespace::FusionStats::get_NoTextOverlap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_NoTextOverlap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoTextOverlap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_NoTextOverlap
void GlobalNamespace::FusionStats::set_NoTextOverlap(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_NoTextOverlap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoTextOverlap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_NoGraphShader
bool GlobalNamespace::FusionStats::get_NoGraphShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_NoGraphShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoGraphShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_NoGraphShader
void GlobalNamespace::FusionStats::set_NoGraphShader(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_NoGraphShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoGraphShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_GraphMaxWidth
int GlobalNamespace::FusionStats::get_GraphMaxWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_GraphMaxWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GraphMaxWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_GraphMaxWidth
void GlobalNamespace::FusionStats::set_GraphMaxWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_GraphMaxWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GraphMaxWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_EnableObjectStats
bool GlobalNamespace::FusionStats::get_EnableObjectStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_EnableObjectStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableObjectStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_EnableObjectStats
void GlobalNamespace::FusionStats::set_EnableObjectStats(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_EnableObjectStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableObjectStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_ShowMissingNetObjWarning
bool GlobalNamespace::FusionStats::get_ShowMissingNetObjWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_ShowMissingNetObjWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShowMissingNetObjWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.get_Object
::Fusion::NetworkObject* GlobalNamespace::FusionStats::get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_Object");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkObject*, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.get_ObjectTitleHeight
int GlobalNamespace::FusionStats::get_ObjectTitleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_ObjectTitleHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectTitleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_ObjectTitleHeight
void GlobalNamespace::FusionStats::set_ObjectTitleHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_ObjectTitleHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ObjectTitleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_ObjectIdsHeight
int GlobalNamespace::FusionStats::get_ObjectIdsHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_ObjectIdsHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectIdsHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_ObjectIdsHeight
void GlobalNamespace::FusionStats::set_ObjectIdsHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_ObjectIdsHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ObjectIdsHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_ObjectMetersHeight
int GlobalNamespace::FusionStats::get_ObjectMetersHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_ObjectMetersHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectMetersHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_ObjectMetersHeight
void GlobalNamespace::FusionStats::set_ObjectMetersHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_ObjectMetersHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ObjectMetersHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_Runner
::Fusion::NetworkRunner* GlobalNamespace::FusionStats::get_Runner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_Runner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Runner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::NetworkRunner*, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_Runner
void GlobalNamespace::FusionStats::set_Runner(::Fusion::NetworkRunner* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_Runner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Runner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_IncludedObjectStats
::Fusion::Simulation::Statistics::ObjStatFlags GlobalNamespace::FusionStats::get_IncludedObjectStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_IncludedObjectStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IncludedObjectStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Simulation::Statistics::ObjStatFlags, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_IncludedObjectStats
void GlobalNamespace::FusionStats::set_IncludedObjectStats(::Fusion::Simulation::Statistics::ObjStatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_IncludedObjectStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IncludedObjectStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_IncludedNetStats
::Fusion::Simulation::Statistics::NetStatFlags GlobalNamespace::FusionStats::get_IncludedNetStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_IncludedNetStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IncludedNetStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Simulation::Statistics::NetStatFlags, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_IncludedNetStats
void GlobalNamespace::FusionStats::set_IncludedNetStats(::Fusion::Simulation::Statistics::NetStatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_IncludedNetStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IncludedNetStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_IncludedSimStats
::Fusion::Simulation::Statistics::SimStatFlags GlobalNamespace::FusionStats::get_IncludedSimStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_IncludedSimStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IncludedSimStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Simulation::Statistics::SimStatFlags, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.set_IncludedSimStats
void GlobalNamespace::FusionStats::set_IncludedSimStats(::Fusion::Simulation::Statistics::SimStatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::set_IncludedSimStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IncludedSimStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStats.get_ModifyColors
bool GlobalNamespace::FusionStats::get_ModifyColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_ModifyColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ModifyColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.get_FontColor
::UnityEngine::Color GlobalNamespace::FusionStats::get_FontColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_FontColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FontColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.get_GraphColorGood
::UnityEngine::Color GlobalNamespace::FusionStats::get_GraphColorGood() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_GraphColorGood");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GraphColorGood", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.get_GraphColorWarn
::UnityEngine::Color GlobalNamespace::FusionStats::get_GraphColorWarn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_GraphColorWarn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GraphColorWarn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.get_GraphColorBad
::UnityEngine::Color GlobalNamespace::FusionStats::get_GraphColorBad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_GraphColorBad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GraphColorBad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.get_GraphColorFlag
::UnityEngine::Color GlobalNamespace::FusionStats::get_GraphColorFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_GraphColorFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GraphColorFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.get_SimDataBackColor
::UnityEngine::Color GlobalNamespace::FusionStats::get_SimDataBackColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_SimDataBackColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SimDataBackColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.get_NetDataBackColor
::UnityEngine::Color GlobalNamespace::FusionStats::get_NetDataBackColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_NetDataBackColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NetDataBackColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.get_ObjDataBackColor
::UnityEngine::Color GlobalNamespace::FusionStats::get_ObjDataBackColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_ObjDataBackColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjDataBackColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.get_CurrentRect
::UnityEngine::Rect GlobalNamespace::FusionStats::get_CurrentRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_CurrentRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.UpdateTitle
void GlobalNamespace::FusionStats::UpdateTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::UpdateTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.get_Shader
::UnityEngine::Shader* GlobalNamespace::FusionStats::get_Shader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_Shader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Shader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.DirtyLayout
void GlobalNamespace::FusionStats::DirtyLayout(int minimumRefreshes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::DirtyLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DirtyLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minimumRefreshes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, minimumRefreshes);
}
// Autogenerated method: FusionStats.ResetInternal
void GlobalNamespace::FusionStats::ResetInternal(::System::Nullable_1<bool> enableObjectStats, ::System::Nullable_1<::Fusion::Simulation::Statistics::NetStatFlags> netStatsMask, ::System::Nullable_1<::Fusion::Simulation::Statistics::SimStatFlags> simStatsMask, ::System::Nullable_1<::GlobalNamespace::FusionStats::DefaultLayouts> objectLayout, ::System::Nullable_1<::GlobalNamespace::FusionStats::DefaultLayouts> screenLayout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::ResetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enableObjectStats), ::il2cpp_utils::ExtractType(netStatsMask), ::il2cpp_utils::ExtractType(simStatsMask), ::il2cpp_utils::ExtractType(objectLayout), ::il2cpp_utils::ExtractType(screenLayout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enableObjectStats, netStatsMask, simStatsMask, objectLayout, screenLayout);
}
// Autogenerated method: FusionStats.Awake
void GlobalNamespace::FusionStats::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.Start
void GlobalNamespace::FusionStats::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.OnDestroy
void GlobalNamespace::FusionStats::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.DestroyGraphs
void GlobalNamespace::FusionStats::DestroyGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::DestroyGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.get_NewInputSystemFound
bool GlobalNamespace::FusionStats::get_NewInputSystemFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get_NewInputSystemFound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FusionStats", "get_NewInputSystemFound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FusionStats.Initialize
void GlobalNamespace::FusionStats::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.get__graphsAreMissing
bool GlobalNamespace::FusionStats::get__graphsAreMissing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::get__graphsAreMissing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__graphsAreMissing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.GenerateGraphs
void GlobalNamespace::FusionStats::GenerateGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::GenerateGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.AssociateWithRunner
void GlobalNamespace::FusionStats::AssociateWithRunner(::Fusion::NetworkRunner* runner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::AssociateWithRunner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssociateWithRunner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner);
}
// Autogenerated method: FusionStats.DisassociateWithRunner
void GlobalNamespace::FusionStats::DisassociateWithRunner(::Fusion::NetworkRunner* runner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::DisassociateWithRunner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisassociateWithRunner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner);
}
// Autogenerated method: FusionStats.Pause
void GlobalNamespace::FusionStats::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.Toggle
void GlobalNamespace::FusionStats::Toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::Toggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Toggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.Clear
void GlobalNamespace::FusionStats::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.ToggleCanvasType
void GlobalNamespace::FusionStats::ToggleCanvasType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::ToggleCanvasType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleCanvasType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.Close
void GlobalNamespace::FusionStats::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.PingSelectObject
void GlobalNamespace::FusionStats::PingSelectObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::PingSelectObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PingSelectObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.PingSelectFusionStats
void GlobalNamespace::FusionStats::PingSelectFusionStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::PingSelectFusionStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PingSelectFusionStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.LateUpdate
void GlobalNamespace::FusionStats::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.RefreshObjectValues
void GlobalNamespace::FusionStats::RefreshObjectValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::RefreshObjectValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshObjectValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.CreateGraph
::GlobalNamespace::FusionGraph* GlobalNamespace::FusionStats::CreateGraph(::Fusion::Simulation::Statistics::StatSourceTypes type, int statId, ::UnityEngine::RectTransform* parentRT) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::CreateGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(statId), ::il2cpp_utils::ExtractType(parentRT)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FusionGraph*, false>(this, ___internal__method, type, statId, parentRT);
}
// Autogenerated method: FusionStats.ReapplyEnabled
void GlobalNamespace::FusionStats::ReapplyEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::ReapplyEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReapplyEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.CalculateLayout
void GlobalNamespace::FusionStats::CalculateLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::CalculateLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStats.ApplyDefaultLayout
void GlobalNamespace::FusionStats::ApplyDefaultLayout(::GlobalNamespace::FusionStats::DefaultLayouts defaults, ::System::Nullable_1<::GlobalNamespace::FusionStats::StatCanvasTypes> applyForCanvasType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::ApplyDefaultLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyDefaultLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaults), ::il2cpp_utils::ExtractType(applyForCanvasType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, defaults, applyForCanvasType);
}
// Autogenerated method: FusionStats..cctor
void GlobalNamespace::FusionStats::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FusionStats", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FusionStats/StatCanvasTypes
#include "GlobalNamespace/FusionStats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FusionStats/StatCanvasTypes Overlay
::GlobalNamespace::FusionStats::StatCanvasTypes GlobalNamespace::FusionStats::StatCanvasTypes::_get_Overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::StatCanvasTypes::_get_Overlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionStats::StatCanvasTypes>("", "FusionStats/StatCanvasTypes", "Overlay"));
}
// Autogenerated static field setter
// Set static field: static public FusionStats/StatCanvasTypes Overlay
void GlobalNamespace::FusionStats::StatCanvasTypes::_set_Overlay(::GlobalNamespace::FusionStats::StatCanvasTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::StatCanvasTypes::_set_Overlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats/StatCanvasTypes", "Overlay", value));
}
// Autogenerated static field getter
// Get static field: static public FusionStats/StatCanvasTypes GameObject
::GlobalNamespace::FusionStats::StatCanvasTypes GlobalNamespace::FusionStats::StatCanvasTypes::_get_GameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::StatCanvasTypes::_get_GameObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionStats::StatCanvasTypes>("", "FusionStats/StatCanvasTypes", "GameObject"));
}
// Autogenerated static field setter
// Set static field: static public FusionStats/StatCanvasTypes GameObject
void GlobalNamespace::FusionStats::StatCanvasTypes::_set_GameObject(::GlobalNamespace::FusionStats::StatCanvasTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::StatCanvasTypes::_set_GameObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats/StatCanvasTypes", "GameObject", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionStats::StatCanvasTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::StatCanvasTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FusionStats/DefaultLayouts
#include "GlobalNamespace/FusionStats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FusionStats/DefaultLayouts Custom
::GlobalNamespace::FusionStats::DefaultLayouts GlobalNamespace::FusionStats::DefaultLayouts::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::DefaultLayouts::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionStats::DefaultLayouts>("", "FusionStats/DefaultLayouts", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public FusionStats/DefaultLayouts Custom
void GlobalNamespace::FusionStats::DefaultLayouts::_set_Custom(::GlobalNamespace::FusionStats::DefaultLayouts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::DefaultLayouts::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats/DefaultLayouts", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public FusionStats/DefaultLayouts Left
::GlobalNamespace::FusionStats::DefaultLayouts GlobalNamespace::FusionStats::DefaultLayouts::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::DefaultLayouts::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionStats::DefaultLayouts>("", "FusionStats/DefaultLayouts", "Left"));
}
// Autogenerated static field setter
// Set static field: static public FusionStats/DefaultLayouts Left
void GlobalNamespace::FusionStats::DefaultLayouts::_set_Left(::GlobalNamespace::FusionStats::DefaultLayouts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::DefaultLayouts::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats/DefaultLayouts", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public FusionStats/DefaultLayouts Right
::GlobalNamespace::FusionStats::DefaultLayouts GlobalNamespace::FusionStats::DefaultLayouts::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::DefaultLayouts::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionStats::DefaultLayouts>("", "FusionStats/DefaultLayouts", "Right"));
}
// Autogenerated static field setter
// Set static field: static public FusionStats/DefaultLayouts Right
void GlobalNamespace::FusionStats::DefaultLayouts::_set_Right(::GlobalNamespace::FusionStats::DefaultLayouts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::DefaultLayouts::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats/DefaultLayouts", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public FusionStats/DefaultLayouts UpperLeft
::GlobalNamespace::FusionStats::DefaultLayouts GlobalNamespace::FusionStats::DefaultLayouts::_get_UpperLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::DefaultLayouts::_get_UpperLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionStats::DefaultLayouts>("", "FusionStats/DefaultLayouts", "UpperLeft"));
}
// Autogenerated static field setter
// Set static field: static public FusionStats/DefaultLayouts UpperLeft
void GlobalNamespace::FusionStats::DefaultLayouts::_set_UpperLeft(::GlobalNamespace::FusionStats::DefaultLayouts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::DefaultLayouts::_set_UpperLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats/DefaultLayouts", "UpperLeft", value));
}
// Autogenerated static field getter
// Get static field: static public FusionStats/DefaultLayouts UpperRight
::GlobalNamespace::FusionStats::DefaultLayouts GlobalNamespace::FusionStats::DefaultLayouts::_get_UpperRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::DefaultLayouts::_get_UpperRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionStats::DefaultLayouts>("", "FusionStats/DefaultLayouts", "UpperRight"));
}
// Autogenerated static field setter
// Set static field: static public FusionStats/DefaultLayouts UpperRight
void GlobalNamespace::FusionStats::DefaultLayouts::_set_UpperRight(::GlobalNamespace::FusionStats::DefaultLayouts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::DefaultLayouts::_set_UpperRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats/DefaultLayouts", "UpperRight", value));
}
// Autogenerated static field getter
// Get static field: static public FusionStats/DefaultLayouts Full
::GlobalNamespace::FusionStats::DefaultLayouts GlobalNamespace::FusionStats::DefaultLayouts::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::DefaultLayouts::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionStats::DefaultLayouts>("", "FusionStats/DefaultLayouts", "Full"));
}
// Autogenerated static field setter
// Set static field: static public FusionStats/DefaultLayouts Full
void GlobalNamespace::FusionStats::DefaultLayouts::_set_Full(::GlobalNamespace::FusionStats::DefaultLayouts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::DefaultLayouts::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStats/DefaultLayouts", "Full", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionStats::DefaultLayouts::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStats::DefaultLayouts::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FusionGraphBase
#include "GlobalNamespace/FusionGraphBase.hpp"
// Including type: Fusion.IStatsBuffer
#include "Fusion/IStatsBuffer.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: FusionStats
#include "GlobalNamespace/FusionStats.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Fusion.NetworkRunner
#include "Fusion/NetworkRunner.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Int32 PAD
int GlobalNamespace::FusionGraphBase::_get_PAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::_get_PAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FusionGraphBase", "PAD"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 PAD
void GlobalNamespace::FusionGraphBase::_set_PAD(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::_set_PAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraphBase", "PAD", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Int32 MRGN
int GlobalNamespace::FusionGraphBase::_get_MRGN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::_get_MRGN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FusionGraphBase", "MRGN"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 MRGN
void GlobalNamespace::FusionGraphBase::_set_MRGN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::_set_MRGN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraphBase", "MRGN", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Int32 MAX_FONT_SIZE_WITH_GRAPH
int GlobalNamespace::FusionGraphBase::_get_MAX_FONT_SIZE_WITH_GRAPH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::_get_MAX_FONT_SIZE_WITH_GRAPH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FusionGraphBase", "MAX_FONT_SIZE_WITH_GRAPH"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 MAX_FONT_SIZE_WITH_GRAPH
void GlobalNamespace::FusionGraphBase::_set_MAX_FONT_SIZE_WITH_GRAPH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::_set_MAX_FONT_SIZE_WITH_GRAPH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraphBase", "MAX_FONT_SIZE_WITH_GRAPH", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.Text LabelTitle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionGraphBase::dyn_LabelTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::dyn_LabelTitle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LabelTitle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.Image BackImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::FusionGraphBase::dyn_BackImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::dyn_BackImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BackImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Fusion.Simulation/Statistics/StatSourceTypes _statSourceType
[[deprecated("Use field access instead!")]] ::Fusion::Simulation::Statistics::StatSourceTypes& GlobalNamespace::FusionGraphBase::dyn__statSourceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::dyn__statSourceType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_statSourceType"))->offset;
  return *reinterpret_cast<::Fusion::Simulation::Statistics::StatSourceTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _statId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionGraphBase::dyn__statId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::dyn__statId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_statId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FusionGraphBase/StatsPer StatsPerDefault
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FusionGraphBase::StatsPer& GlobalNamespace::FusionGraphBase::dyn_StatsPerDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::dyn_StatsPerDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StatsPerDefault"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FusionGraphBase::StatsPer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single WarnThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FusionGraphBase::dyn_WarnThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::dyn_WarnThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WarnThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ErrorThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FusionGraphBase::dyn_ErrorThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::dyn_ErrorThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ErrorThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Fusion.IStatsBuffer _statsBuffer
[[deprecated("Use field access instead!")]] ::Fusion::IStatsBuffer*& GlobalNamespace::FusionGraphBase::dyn__statsBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::dyn__statsBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_statsBuffer"))->offset;
  return *reinterpret_cast<::Fusion::IStatsBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _isOverlay
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionGraphBase::dyn__isOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::dyn__isOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isOverlay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected FusionStats _fusionStats
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FusionStats*& GlobalNamespace::FusionGraphBase::dyn__fusionStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::dyn__fusionStats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fusionStats"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FusionStats**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _layoutDirty
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionGraphBase::dyn__layoutDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::dyn__layoutDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_layoutDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Fusion.Simulation/Statistics/StatsPer CurrentPer
[[deprecated("Use field access instead!")]] ::Fusion::Simulation::Statistics::StatsPer& GlobalNamespace::FusionGraphBase::dyn_CurrentPer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::dyn_CurrentPer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentPer"))->offset;
  return *reinterpret_cast<::Fusion::Simulation::Statistics::StatsPer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Simulation/Statistics/StatSourceInfo StatSourceInfo
[[deprecated("Use field access instead!")]] ::Fusion::Simulation::Statistics::StatSourceInfo& GlobalNamespace::FusionGraphBase::dyn_StatSourceInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::dyn_StatSourceInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StatSourceInfo"))->offset;
  return *reinterpret_cast<::Fusion::Simulation::Statistics::StatSourceInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.Simulation/Statistics/StatSourceTypes _prevStatSourceType
[[deprecated("Use field access instead!")]] ::Fusion::Simulation::Statistics::StatSourceTypes& GlobalNamespace::FusionGraphBase::dyn__prevStatSourceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::dyn__prevStatSourceType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevStatSourceType"))->offset;
  return *reinterpret_cast<::Fusion::Simulation::Statistics::StatSourceTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevStatId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionGraphBase::dyn__prevStatId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::dyn__prevStatId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevStatId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FusionGraphBase.get_StateSourceType
::Fusion::Simulation::Statistics::StatSourceTypes GlobalNamespace::FusionGraphBase::get_StateSourceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::get_StateSourceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StateSourceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::Simulation::Statistics::StatSourceTypes, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraphBase.set_StateSourceType
void GlobalNamespace::FusionGraphBase::set_StateSourceType(::Fusion::Simulation::Statistics::StatSourceTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::set_StateSourceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StateSourceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionGraphBase.get_StatId
int GlobalNamespace::FusionGraphBase::get_StatId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::get_StatId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraphBase.set_StatId
void GlobalNamespace::FusionGraphBase::set_StatId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::set_StatId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionGraphBase.get_StatsBuffer
::Fusion::IStatsBuffer* GlobalNamespace::FusionGraphBase::get_StatsBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::get_StatsBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatsBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::IStatsBuffer*, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraphBase.set_IsOverlay
void GlobalNamespace::FusionGraphBase::set_IsOverlay(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::set_IsOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionGraphBase.get_IsOverlay
bool GlobalNamespace::FusionGraphBase::get_IsOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::get_IsOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraphBase.get_BackColor
::UnityEngine::Color GlobalNamespace::FusionGraphBase::get_BackColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::get_BackColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraphBase.get_CastToStatType
::System::Type* GlobalNamespace::FusionGraphBase::get_CastToStatType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::get_CastToStatType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CastToStatType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraphBase.LocateParentFusionStats
::GlobalNamespace::FusionStats* GlobalNamespace::FusionGraphBase::LocateParentFusionStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::LocateParentFusionStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocateParentFusionStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FusionStats*, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraphBase.Initialize
void GlobalNamespace::FusionGraphBase::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraphBase.CyclePer
void GlobalNamespace::FusionGraphBase::CyclePer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::CyclePer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraphBase.CalculateLayout
void GlobalNamespace::FusionGraphBase::CalculateLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::CalculateLayout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraphBase.Refresh
void GlobalNamespace::FusionGraphBase::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::Refresh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraphBase.TryConnect
bool GlobalNamespace::FusionGraphBase::TryConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::TryConnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraphBase.ApplyTitleText
void GlobalNamespace::FusionGraphBase::ApplyTitleText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::ApplyTitleText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyTitleText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraphBase.CheckIfValidIncurrentMode
void GlobalNamespace::FusionGraphBase::CheckIfValidIncurrentMode(::Fusion::NetworkRunner* runner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::CheckIfValidIncurrentMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfValidIncurrentMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner);
}
// Autogenerated method: FusionGraphBase.Fusion.StatsInternal.IFusionStatsView.get_isActiveAndEnabled
bool GlobalNamespace::FusionGraphBase::Fusion_StatsInternal_IFusionStatsView_get_isActiveAndEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::Fusion.StatsInternal.IFusionStatsView.get_isActiveAndEnabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FusionGraphBase.Fusion.StatsInternal.IFusionStatsView.get_transform
::UnityEngine::Transform* GlobalNamespace::FusionGraphBase::Fusion_StatsInternal_IFusionStatsView_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::Fusion.StatsInternal.IFusionStatsView.get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FusionGraphBase/StatsPer
#include "GlobalNamespace/FusionGraphBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FusionGraphBase/StatsPer Default
::GlobalNamespace::FusionGraphBase::StatsPer GlobalNamespace::FusionGraphBase::StatsPer::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::StatsPer::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraphBase::StatsPer>("", "FusionGraphBase/StatsPer", "Default"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraphBase/StatsPer Default
void GlobalNamespace::FusionGraphBase::StatsPer::_set_Default(::GlobalNamespace::FusionGraphBase::StatsPer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::StatsPer::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraphBase/StatsPer", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public FusionGraphBase/StatsPer Individual
::GlobalNamespace::FusionGraphBase::StatsPer GlobalNamespace::FusionGraphBase::StatsPer::_get_Individual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::StatsPer::_get_Individual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraphBase::StatsPer>("", "FusionGraphBase/StatsPer", "Individual"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraphBase/StatsPer Individual
void GlobalNamespace::FusionGraphBase::StatsPer::_set_Individual(::GlobalNamespace::FusionGraphBase::StatsPer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::StatsPer::_set_Individual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraphBase/StatsPer", "Individual", value));
}
// Autogenerated static field getter
// Get static field: static public FusionGraphBase/StatsPer Tick
::GlobalNamespace::FusionGraphBase::StatsPer GlobalNamespace::FusionGraphBase::StatsPer::_get_Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::StatsPer::_get_Tick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraphBase::StatsPer>("", "FusionGraphBase/StatsPer", "Tick"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraphBase/StatsPer Tick
void GlobalNamespace::FusionGraphBase::StatsPer::_set_Tick(::GlobalNamespace::FusionGraphBase::StatsPer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::StatsPer::_set_Tick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraphBase/StatsPer", "Tick", value));
}
// Autogenerated static field getter
// Get static field: static public FusionGraphBase/StatsPer Second
::GlobalNamespace::FusionGraphBase::StatsPer GlobalNamespace::FusionGraphBase::StatsPer::_get_Second() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::StatsPer::_get_Second");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FusionGraphBase::StatsPer>("", "FusionGraphBase/StatsPer", "Second"));
}
// Autogenerated static field setter
// Set static field: static public FusionGraphBase/StatsPer Second
void GlobalNamespace::FusionGraphBase::StatsPer::_set_Second(::GlobalNamespace::FusionGraphBase::StatsPer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::StatsPer::_set_Second");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionGraphBase/StatsPer", "Second", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionGraphBase::StatsPer::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionGraphBase::StatsPer::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FusionStatsBillboard
#include "GlobalNamespace/FusionStatsBillboard.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: FusionStats
#include "GlobalNamespace/FusionStats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single _lastCameraFindTime
float GlobalNamespace::FusionStatsBillboard::_get__lastCameraFindTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsBillboard::_get__lastCameraFindTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FusionStatsBillboard", "_lastCameraFindTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single _lastCameraFindTime
void GlobalNamespace::FusionStatsBillboard::_set__lastCameraFindTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsBillboard::_set__lastCameraFindTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStatsBillboard", "_lastCameraFindTime", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Camera _currentCam
::UnityEngine::Camera* GlobalNamespace::FusionStatsBillboard::_get__currentCam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsBillboard::_get__currentCam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Camera*>("", "FusionStatsBillboard", "_currentCam"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Camera _currentCam
void GlobalNamespace::FusionStatsBillboard::_set__currentCam(::UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsBillboard::_set__currentCam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStatsBillboard", "_currentCam", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera Camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::FusionStatsBillboard::dyn_Camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsBillboard::dyn_Camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FusionStats _fusionStats
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FusionStats*& GlobalNamespace::FusionStatsBillboard::dyn__fusionStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsBillboard::dyn__fusionStats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fusionStats"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FusionStats**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FusionStatsBillboard.Awake
void GlobalNamespace::FusionStatsBillboard::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsBillboard::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsBillboard.OnEnable
void GlobalNamespace::FusionStatsBillboard::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsBillboard::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsBillboard.OnDisable
void GlobalNamespace::FusionStatsBillboard::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsBillboard::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsBillboard.set_MainCamera
void GlobalNamespace::FusionStatsBillboard::set_MainCamera(::UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsBillboard::set_MainCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MainCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStatsBillboard.get_MainCamera
::UnityEngine::Camera* GlobalNamespace::FusionStatsBillboard::get_MainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsBillboard::get_MainCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MainCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsBillboard.LateUpdate
void GlobalNamespace::FusionStatsBillboard::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsBillboard::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsBillboard.UpdateLookAt
void GlobalNamespace::FusionStatsBillboard::UpdateLookAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsBillboard::UpdateLookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsBillboard.ResetStatics
void GlobalNamespace::FusionStatsBillboard::ResetStatics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsBillboard::ResetStatics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FusionStatsBillboard", "ResetStatics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FusionStatsMeterBar
#include "GlobalNamespace/FusionStatsMeterBar.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: FusionStats
#include "GlobalNamespace/FusionStats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single HoldPeakTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FusionStatsMeterBar::dyn_HoldPeakTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::dyn_HoldPeakTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HoldPeakTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single DecayTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FusionStatsMeterBar::dyn_DecayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::dyn_DecayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DecayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MeterMax
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionStatsMeterBar::dyn_MeterMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::dyn_MeterMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MeterMax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showUITargets
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionStatsMeterBar::dyn__showUITargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::dyn__showUITargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showUITargets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text ValueLabel
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionStatsMeterBar::dyn_ValueLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::dyn_ValueLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ValueLabel"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image Bar
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::FusionStatsMeterBar::dyn_Bar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::dyn_Bar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Bar"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _currentDisplayValue
[[deprecated("Use field access instead!")]] double& GlobalNamespace::FusionStatsMeterBar::dyn__currentDisplayValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::dyn__currentDisplayValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentDisplayValue"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _currentBarValue
[[deprecated("Use field access instead!")]] double& GlobalNamespace::FusionStatsMeterBar::dyn__currentBarValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::dyn__currentBarValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentBarValue"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color CurrentColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::FusionStatsMeterBar::dyn_CurrentColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::dyn_CurrentColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _lastImportedSampleTickTime
[[deprecated("Use field access instead!")]] double& GlobalNamespace::FusionStatsMeterBar::dyn__lastImportedSampleTickTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::dyn__lastImportedSampleTickTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastImportedSampleTickTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _max
[[deprecated("Use field access instead!")]] double& GlobalNamespace::FusionStatsMeterBar::dyn__max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::dyn__max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_max"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _total
[[deprecated("Use field access instead!")]] double& GlobalNamespace::FusionStatsMeterBar::dyn__total() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::dyn__total");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_total"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastPeakSetTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FusionStatsMeterBar::dyn__lastPeakSetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::dyn__lastPeakSetTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPeakSetTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FusionStatsMeterBar.LateUpdate
void GlobalNamespace::FusionStatsMeterBar::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsMeterBar.SetValue
void GlobalNamespace::FusionStatsMeterBar::SetValue(double rawvalue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawvalue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rawvalue);
}
// Autogenerated method: FusionStatsMeterBar.SetBar
void GlobalNamespace::FusionStatsMeterBar::SetBar(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::SetBar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FusionStatsMeterBar.Create
::GlobalNamespace::FusionStatsMeterBar* GlobalNamespace::FusionStatsMeterBar::Create(::UnityEngine::RectTransform* parent, ::GlobalNamespace::FusionStats* fusionStats, ::Fusion::Simulation::Statistics::StatSourceTypes statSourceType, int statId, float warnThreshold, float alertThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FusionStatsMeterBar", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(fusionStats), ::il2cpp_utils::ExtractType(statSourceType), ::il2cpp_utils::ExtractType(statId), ::il2cpp_utils::ExtractType(warnThreshold), ::il2cpp_utils::ExtractType(alertThreshold)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FusionStatsMeterBar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, fusionStats, statSourceType, statId, warnThreshold, alertThreshold);
}
// Autogenerated method: FusionStatsMeterBar.GenerateMeter
void GlobalNamespace::FusionStatsMeterBar::GenerateMeter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::GenerateMeter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateMeter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsMeterBar.get_BackColor
::UnityEngine::Color GlobalNamespace::FusionStatsMeterBar::get_BackColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::get_BackColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsMeterBar.Initialize
void GlobalNamespace::FusionStatsMeterBar::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsMeterBar.Refresh
void GlobalNamespace::FusionStatsMeterBar::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::Refresh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsMeterBar.CalculateLayout
void GlobalNamespace::FusionStatsMeterBar::CalculateLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsMeterBar::CalculateLayout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionGraphBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FusionStatsObjectIds
#include "GlobalNamespace/FusionStatsObjectIds.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: FusionStats
#include "GlobalNamespace/FusionStats.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Int32 PAD
int GlobalNamespace::FusionStatsObjectIds::_get_PAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_get_PAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FusionStatsObjectIds", "PAD"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 PAD
void GlobalNamespace::FusionStatsObjectIds::_set_PAD(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_set_PAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStatsObjectIds", "PAD", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Int32 MARGIN
int GlobalNamespace::FusionStatsObjectIds::_get_MARGIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_get_MARGIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FusionStatsObjectIds", "MARGIN"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 MARGIN
void GlobalNamespace::FusionStatsObjectIds::_set_MARGIN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_set_MARGIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStatsObjectIds", "MARGIN", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Color _noneAuthColor
::UnityEngine::Color GlobalNamespace::FusionStatsObjectIds::_get__noneAuthColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_get__noneAuthColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("", "FusionStatsObjectIds", "_noneAuthColor"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Color _noneAuthColor
void GlobalNamespace::FusionStatsObjectIds::_set__noneAuthColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_set__noneAuthColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStatsObjectIds", "_noneAuthColor", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Color _inputAuthColor
::UnityEngine::Color GlobalNamespace::FusionStatsObjectIds::_get__inputAuthColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_get__inputAuthColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("", "FusionStatsObjectIds", "_inputAuthColor"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Color _inputAuthColor
void GlobalNamespace::FusionStatsObjectIds::_set__inputAuthColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_set__inputAuthColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStatsObjectIds", "_inputAuthColor", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Color _stateAuthColor
::UnityEngine::Color GlobalNamespace::FusionStatsObjectIds::_get__stateAuthColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_get__stateAuthColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("", "FusionStatsObjectIds", "_stateAuthColor"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Color _stateAuthColor
void GlobalNamespace::FusionStatsObjectIds::_set__stateAuthColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_set__stateAuthColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStatsObjectIds", "_stateAuthColor", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single LABEL_DIVIDING_POINT
float GlobalNamespace::FusionStatsObjectIds::_get_LABEL_DIVIDING_POINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_get_LABEL_DIVIDING_POINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FusionStatsObjectIds", "LABEL_DIVIDING_POINT"));
}
// Autogenerated static field setter
// Set static field: static private System.Single LABEL_DIVIDING_POINT
void GlobalNamespace::FusionStatsObjectIds::_set_LABEL_DIVIDING_POINT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_set_LABEL_DIVIDING_POINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStatsObjectIds", "LABEL_DIVIDING_POINT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single TEXT_PAD
float GlobalNamespace::FusionStatsObjectIds::_get_TEXT_PAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_get_TEXT_PAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FusionStatsObjectIds", "TEXT_PAD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single TEXT_PAD
void GlobalNamespace::FusionStatsObjectIds::_set_TEXT_PAD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_set_TEXT_PAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStatsObjectIds", "TEXT_PAD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single TEXT_PAD_HORIZ
float GlobalNamespace::FusionStatsObjectIds::_get_TEXT_PAD_HORIZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_get_TEXT_PAD_HORIZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FusionStatsObjectIds", "TEXT_PAD_HORIZ"));
}
// Autogenerated static field setter
// Set static field: static private System.Single TEXT_PAD_HORIZ
void GlobalNamespace::FusionStatsObjectIds::_set_TEXT_PAD_HORIZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_set_TEXT_PAD_HORIZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStatsObjectIds", "TEXT_PAD_HORIZ", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MAX_TAG_FONT_SIZE
int GlobalNamespace::FusionStatsObjectIds::_get_MAX_TAG_FONT_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_get_MAX_TAG_FONT_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FusionStatsObjectIds", "MAX_TAG_FONT_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAX_TAG_FONT_SIZE
void GlobalNamespace::FusionStatsObjectIds::_set_MAX_TAG_FONT_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::_set_MAX_TAG_FONT_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionStatsObjectIds", "MAX_TAG_FONT_SIZE", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _inputValueText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionStatsObjectIds::dyn__inputValueText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::dyn__inputValueText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputValueText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _stateValueText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionStatsObjectIds::dyn__stateValueText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::dyn__stateValueText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stateValueText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _objectIdLabel
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FusionStatsObjectIds::dyn__objectIdLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::dyn__objectIdLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectIdLabel"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _stateAuthBackImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::FusionStatsObjectIds::dyn__stateAuthBackImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::dyn__stateAuthBackImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stateAuthBackImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _inputAuthBackImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::FusionStatsObjectIds::dyn__inputAuthBackImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::dyn__inputAuthBackImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputAuthBackImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FusionStats _fusionStats
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FusionStats*& GlobalNamespace::FusionStatsObjectIds::dyn__fusionStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::dyn__fusionStats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fusionStats"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FusionStats**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _previousHasInputAuth
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionStatsObjectIds::dyn__previousHasInputAuth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::dyn__previousHasInputAuth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousHasInputAuth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _previousHasStateAuth
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FusionStatsObjectIds::dyn__previousHasStateAuth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::dyn__previousHasStateAuth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousHasStateAuth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _previousInputAuthValue
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionStatsObjectIds::dyn__previousInputAuthValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::dyn__previousInputAuthValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousInputAuthValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _previousStateAuthValue
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FusionStatsObjectIds::dyn__previousStateAuthValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::dyn__previousStateAuthValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousStateAuthValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _previousObjectIdValue
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::FusionStatsObjectIds::dyn__previousObjectIdValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::dyn__previousObjectIdValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousObjectIdValue"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FusionStatsObjectIds.Awake
void GlobalNamespace::FusionStatsObjectIds::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsObjectIds.Fusion.StatsInternal.IFusionStatsView.Initialize
void GlobalNamespace::FusionStatsObjectIds::Fusion_StatsInternal_IFusionStatsView_Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::Fusion.StatsInternal.IFusionStatsView.Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionStatsObjectIds*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsObjectIds.Create
::UnityEngine::RectTransform* GlobalNamespace::FusionStatsObjectIds::Create(::UnityEngine::RectTransform* parent, ::GlobalNamespace::FusionStats* fusionStats) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FusionStatsObjectIds", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(fusionStats)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, fusionStats);
}
// Autogenerated method: FusionStatsObjectIds.Generate
void GlobalNamespace::FusionStatsObjectIds::Generate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::Generate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Generate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsObjectIds.AddAuthorityPanel
::UnityEngine::RectTransform* GlobalNamespace::FusionStatsObjectIds::AddAuthorityPanel(::UnityEngine::RectTransform* parent, ::StringW label, ByRef<::UnityEngine::UI::Text*> valueText, ByRef<::UnityEngine::UI::Image*> backImage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::AddAuthorityPanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAuthorityPanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(valueText), ::il2cpp_utils::ExtractType(backImage)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, parent, label, byref(valueText), byref(backImage));
}
// Autogenerated method: FusionStatsObjectIds.Fusion.StatsInternal.IFusionStatsView.CalculateLayout
void GlobalNamespace::FusionStatsObjectIds::Fusion_StatsInternal_IFusionStatsView_CalculateLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::Fusion.StatsInternal.IFusionStatsView.CalculateLayout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionStatsObjectIds*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsObjectIds.Fusion.StatsInternal.IFusionStatsView.Refresh
void GlobalNamespace::FusionStatsObjectIds::Fusion_StatsInternal_IFusionStatsView_Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::Fusion.StatsInternal.IFusionStatsView.Refresh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionStatsObjectIds*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsObjectIds..cctor
void GlobalNamespace::FusionStatsObjectIds::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FusionStatsObjectIds", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FusionStatsObjectIds.Fusion.StatsInternal.IFusionStatsView.get_isActiveAndEnabled
bool GlobalNamespace::FusionStatsObjectIds::Fusion_StatsInternal_IFusionStatsView_get_isActiveAndEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::Fusion.StatsInternal.IFusionStatsView.get_isActiveAndEnabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionStatsObjectIds*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FusionStatsObjectIds.Fusion.StatsInternal.IFusionStatsView.get_transform
::UnityEngine::Transform* GlobalNamespace::FusionStatsObjectIds::Fusion_StatsInternal_IFusionStatsView_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionStatsObjectIds::Fusion.StatsInternal.IFusionStatsView.get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::FusionStatsObjectIds*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayerAOIPrototype
#include "GlobalNamespace/PlayerAOIPrototype.hpp"
// Including type: Fusion.ChangedDelegate`1
#include "Fusion/ChangedDelegate_1.hpp"
// Including type: Fusion.NetworkBehaviourCallbacks`1
#include "Fusion/NetworkBehaviourCallbacks_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static Fusion.Changed`1<PlayerAOIPrototype> $IL2CPP_CHANGED
::Fusion::Changed_1<::GlobalNamespace::PlayerAOIPrototype*> GlobalNamespace::PlayerAOIPrototype::_get_$IL2CPP_CHANGED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAOIPrototype::_get_$IL2CPP_CHANGED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Changed_1<::GlobalNamespace::PlayerAOIPrototype*>>("", "PlayerAOIPrototype", "$IL2CPP_CHANGED"));
}
// Autogenerated static field setter
// Set static field: static Fusion.Changed`1<PlayerAOIPrototype> $IL2CPP_CHANGED
void GlobalNamespace::PlayerAOIPrototype::_set_$IL2CPP_CHANGED(::Fusion::Changed_1<::GlobalNamespace::PlayerAOIPrototype*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAOIPrototype::_set_$IL2CPP_CHANGED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerAOIPrototype", "$IL2CPP_CHANGED", value));
}
// Autogenerated static field getter
// Get static field: static Fusion.ChangedDelegate`1<PlayerAOIPrototype> $IL2CPP_CHANGED_DELEGATE
::Fusion::ChangedDelegate_1<::GlobalNamespace::PlayerAOIPrototype*>* GlobalNamespace::PlayerAOIPrototype::_get_$IL2CPP_CHANGED_DELEGATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAOIPrototype::_get_$IL2CPP_CHANGED_DELEGATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::ChangedDelegate_1<::GlobalNamespace::PlayerAOIPrototype*>*>("", "PlayerAOIPrototype", "$IL2CPP_CHANGED_DELEGATE"));
}
// Autogenerated static field setter
// Set static field: static Fusion.ChangedDelegate`1<PlayerAOIPrototype> $IL2CPP_CHANGED_DELEGATE
void GlobalNamespace::PlayerAOIPrototype::_set_$IL2CPP_CHANGED_DELEGATE(::Fusion::ChangedDelegate_1<::GlobalNamespace::PlayerAOIPrototype*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAOIPrototype::_set_$IL2CPP_CHANGED_DELEGATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerAOIPrototype", "$IL2CPP_CHANGED_DELEGATE", value));
}
// Autogenerated static field getter
// Get static field: static Fusion.NetworkBehaviourCallbacks`1<PlayerAOIPrototype> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS
::Fusion::NetworkBehaviourCallbacks_1<::GlobalNamespace::PlayerAOIPrototype*>* GlobalNamespace::PlayerAOIPrototype::_get_$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAOIPrototype::_get_$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::NetworkBehaviourCallbacks_1<::GlobalNamespace::PlayerAOIPrototype*>*>("", "PlayerAOIPrototype", "$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS"));
}
// Autogenerated static field setter
// Set static field: static Fusion.NetworkBehaviourCallbacks`1<PlayerAOIPrototype> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS
void GlobalNamespace::PlayerAOIPrototype::_set_$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS(::Fusion::NetworkBehaviourCallbacks_1<::GlobalNamespace::PlayerAOIPrototype*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAOIPrototype::_set_$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerAOIPrototype", "$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean DrawAreaOfInterestRadius
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerAOIPrototype::dyn_DrawAreaOfInterestRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAOIPrototype::dyn_DrawAreaOfInterestRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DrawAreaOfInterestRadius"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Radius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerAOIPrototype::dyn_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAOIPrototype::dyn_Radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerAOIPrototype.OnDrawGizmos
void GlobalNamespace::PlayerAOIPrototype::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAOIPrototype::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAOIPrototype.FixedUpdateNetwork
void GlobalNamespace::PlayerAOIPrototype::FixedUpdateNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAOIPrototype::FixedUpdateNetwork");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkBehaviour*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAOIPrototype.CopyBackingFieldsToState
void GlobalNamespace::PlayerAOIPrototype::CopyBackingFieldsToState(bool param_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAOIPrototype::CopyBackingFieldsToState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkBehaviour*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, param_0);
}
// Autogenerated method: PlayerAOIPrototype.CopyStateToBackingFields
void GlobalNamespace::PlayerAOIPrototype::CopyStateToBackingFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAOIPrototype::CopyStateToBackingFields");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkBehaviour*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ControllerPrototype
#include "GlobalNamespace/ControllerPrototype.hpp"
// Including type: NetworkCharacterControllerPrototype
#include "GlobalNamespace/NetworkCharacterControllerPrototype.hpp"
// Including type: Fusion.NetworkRigidbody
#include "Fusion/NetworkRigidbody.hpp"
// Including type: Fusion.NetworkRigidbody2D
#include "Fusion/NetworkRigidbody2D.hpp"
// Including type: Fusion.NetworkTransform
#include "Fusion/NetworkTransform.hpp"
// Including type: Fusion.ChangedDelegate`1
#include "Fusion/ChangedDelegate_1.hpp"
// Including type: Fusion.NetworkBehaviourCallbacks`1
#include "Fusion/NetworkBehaviourCallbacks_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static Fusion.Changed`1<ControllerPrototype> $IL2CPP_CHANGED
::Fusion::Changed_1<::GlobalNamespace::ControllerPrototype*> GlobalNamespace::ControllerPrototype::_get_$IL2CPP_CHANGED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::_get_$IL2CPP_CHANGED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Changed_1<::GlobalNamespace::ControllerPrototype*>>("", "ControllerPrototype", "$IL2CPP_CHANGED"));
}
// Autogenerated static field setter
// Set static field: static Fusion.Changed`1<ControllerPrototype> $IL2CPP_CHANGED
void GlobalNamespace::ControllerPrototype::_set_$IL2CPP_CHANGED(::Fusion::Changed_1<::GlobalNamespace::ControllerPrototype*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::_set_$IL2CPP_CHANGED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ControllerPrototype", "$IL2CPP_CHANGED", value));
}
// Autogenerated static field getter
// Get static field: static Fusion.ChangedDelegate`1<ControllerPrototype> $IL2CPP_CHANGED_DELEGATE
::Fusion::ChangedDelegate_1<::GlobalNamespace::ControllerPrototype*>* GlobalNamespace::ControllerPrototype::_get_$IL2CPP_CHANGED_DELEGATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::_get_$IL2CPP_CHANGED_DELEGATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::ChangedDelegate_1<::GlobalNamespace::ControllerPrototype*>*>("", "ControllerPrototype", "$IL2CPP_CHANGED_DELEGATE"));
}
// Autogenerated static field setter
// Set static field: static Fusion.ChangedDelegate`1<ControllerPrototype> $IL2CPP_CHANGED_DELEGATE
void GlobalNamespace::ControllerPrototype::_set_$IL2CPP_CHANGED_DELEGATE(::Fusion::ChangedDelegate_1<::GlobalNamespace::ControllerPrototype*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::_set_$IL2CPP_CHANGED_DELEGATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ControllerPrototype", "$IL2CPP_CHANGED_DELEGATE", value));
}
// Autogenerated static field getter
// Get static field: static Fusion.NetworkBehaviourCallbacks`1<ControllerPrototype> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS
::Fusion::NetworkBehaviourCallbacks_1<::GlobalNamespace::ControllerPrototype*>* GlobalNamespace::ControllerPrototype::_get_$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::_get_$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::NetworkBehaviourCallbacks_1<::GlobalNamespace::ControllerPrototype*>*>("", "ControllerPrototype", "$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS"));
}
// Autogenerated static field setter
// Set static field: static Fusion.NetworkBehaviourCallbacks`1<ControllerPrototype> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS
void GlobalNamespace::ControllerPrototype::_set_$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS(::Fusion::NetworkBehaviourCallbacks_1<::GlobalNamespace::ControllerPrototype*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::_set_$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ControllerPrototype", "$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS", value));
}
// Autogenerated instance field getter
// Get instance field: protected NetworkCharacterControllerPrototype _ncc
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkCharacterControllerPrototype*& GlobalNamespace::ControllerPrototype::dyn__ncc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::dyn__ncc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ncc"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkCharacterControllerPrototype**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Fusion.NetworkRigidbody _nrb
[[deprecated("Use field access instead!")]] ::Fusion::NetworkRigidbody*& GlobalNamespace::ControllerPrototype::dyn__nrb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::dyn__nrb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nrb"))->offset;
  return *reinterpret_cast<::Fusion::NetworkRigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Fusion.NetworkRigidbody2D _nrb2d
[[deprecated("Use field access instead!")]] ::Fusion::NetworkRigidbody2D*& GlobalNamespace::ControllerPrototype::dyn__nrb2d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::dyn__nrb2d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nrb2d"))->offset;
  return *reinterpret_cast<::Fusion::NetworkRigidbody2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Fusion.NetworkTransform _nt
[[deprecated("Use field access instead!")]] ::Fusion::NetworkTransform*& GlobalNamespace::ControllerPrototype::dyn__nt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::dyn__nt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nt"))->offset;
  return *reinterpret_cast<::Fusion::NetworkTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _MovementDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ControllerPrototype::dyn__MovementDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::dyn__MovementDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MovementDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean TransformLocal
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ControllerPrototype::dyn_TransformLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::dyn_TransformLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TransformLocal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Speed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ControllerPrototype::dyn_Speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::dyn_Speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ControllerPrototype.get_MovementDirection
::UnityEngine::Vector3 GlobalNamespace::ControllerPrototype::get_MovementDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::get_MovementDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MovementDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: ControllerPrototype.set_MovementDirection
void GlobalNamespace::ControllerPrototype::set_MovementDirection(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::set_MovementDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MovementDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ControllerPrototype.get_ShowSpeed
bool GlobalNamespace::ControllerPrototype::get_ShowSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::get_ShowSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShowSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ControllerPrototype.Awake
void GlobalNamespace::ControllerPrototype::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ControllerPrototype.CacheComponents
void GlobalNamespace::ControllerPrototype::CacheComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::CacheComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ControllerPrototype.Spawned
void GlobalNamespace::ControllerPrototype::Spawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::Spawned");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkBehaviour*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ControllerPrototype.FixedUpdateNetwork
void GlobalNamespace::ControllerPrototype::FixedUpdateNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::FixedUpdateNetwork");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkBehaviour*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ControllerPrototype.CopyBackingFieldsToState
void GlobalNamespace::ControllerPrototype::CopyBackingFieldsToState(bool param_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::CopyBackingFieldsToState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkBehaviour*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, param_0);
}
// Autogenerated method: ControllerPrototype.CopyStateToBackingFields
void GlobalNamespace::ControllerPrototype::CopyStateToBackingFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllerPrototype::CopyStateToBackingFields");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkBehaviour*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: InputBehaviourPrototype
#include "GlobalNamespace/InputBehaviourPrototype.hpp"
// Including type: Fusion.NetworkRunner
#include "Fusion/NetworkRunner.hpp"
// Including type: Fusion.NetworkInput
#include "Fusion/NetworkInput.hpp"
// Including type: Fusion.PlayerRef
#include "Fusion/PlayerRef.hpp"
// Including type: Fusion.Sockets.NetAddress
#include "Fusion/Sockets/NetAddress.hpp"
// Including type: Fusion.Sockets.NetConnectFailedReason
#include "Fusion/Sockets/NetConnectFailedReason.hpp"
// Including type: Fusion.SimulationMessagePtr
#include "Fusion/SimulationMessagePtr.hpp"
// Including type: Fusion.ShutdownReason
#include "Fusion/ShutdownReason.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Fusion.SessionInfo
#include "Fusion/SessionInfo.hpp"
// Including type: System.ArraySegment`1
#include "System/ArraySegment_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Fusion.HostMigrationToken
#include "Fusion/HostMigrationToken.hpp"
// Including type: Fusion.NetworkRunnerCallbackArgs/ConnectRequest
#include "Fusion/NetworkRunnerCallbackArgs_ConnectRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: InputBehaviourPrototype.OnInput
void GlobalNamespace::InputBehaviourPrototype::OnInput(::Fusion::NetworkRunner* runner, ::Fusion::NetworkInput input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputBehaviourPrototype::OnInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::InputBehaviourPrototype*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner, input);
}
// Autogenerated method: InputBehaviourPrototype.OnInputMissing
void GlobalNamespace::InputBehaviourPrototype::OnInputMissing(::Fusion::NetworkRunner* runner, ::Fusion::PlayerRef player, ::Fusion::NetworkInput input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputBehaviourPrototype::OnInputMissing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::InputBehaviourPrototype*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner, player, input);
}
// Autogenerated method: InputBehaviourPrototype.OnConnectedToServer
void GlobalNamespace::InputBehaviourPrototype::OnConnectedToServer(::Fusion::NetworkRunner* runner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputBehaviourPrototype::OnConnectedToServer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::InputBehaviourPrototype*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner);
}
// Autogenerated method: InputBehaviourPrototype.OnConnectFailed
void GlobalNamespace::InputBehaviourPrototype::OnConnectFailed(::Fusion::NetworkRunner* runner, ::Fusion::Sockets::NetAddress remoteAddress, ::Fusion::Sockets::NetConnectFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputBehaviourPrototype::OnConnectFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::InputBehaviourPrototype*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner, remoteAddress, reason);
}
// Autogenerated method: InputBehaviourPrototype.OnConnectRequest
void GlobalNamespace::InputBehaviourPrototype::OnConnectRequest(::Fusion::NetworkRunner* runner, ::Fusion::NetworkRunnerCallbackArgs::ConnectRequest* request, ::ArrayW<uint8_t> token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputBehaviourPrototype::OnConnectRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::InputBehaviourPrototype*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner, request, token);
}
// Autogenerated method: InputBehaviourPrototype.OnDisconnectedFromServer
void GlobalNamespace::InputBehaviourPrototype::OnDisconnectedFromServer(::Fusion::NetworkRunner* runner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputBehaviourPrototype::OnDisconnectedFromServer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::InputBehaviourPrototype*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner);
}
// Autogenerated method: InputBehaviourPrototype.OnPlayerJoined
void GlobalNamespace::InputBehaviourPrototype::OnPlayerJoined(::Fusion::NetworkRunner* runner, ::Fusion::PlayerRef player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputBehaviourPrototype::OnPlayerJoined");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::InputBehaviourPrototype*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner, player);
}
// Autogenerated method: InputBehaviourPrototype.OnPlayerLeft
void GlobalNamespace::InputBehaviourPrototype::OnPlayerLeft(::Fusion::NetworkRunner* runner, ::Fusion::PlayerRef player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputBehaviourPrototype::OnPlayerLeft");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::InputBehaviourPrototype*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner, player);
}
// Autogenerated method: InputBehaviourPrototype.OnUserSimulationMessage
void GlobalNamespace::InputBehaviourPrototype::OnUserSimulationMessage(::Fusion::NetworkRunner* runner, ::Fusion::SimulationMessagePtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputBehaviourPrototype::OnUserSimulationMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::InputBehaviourPrototype*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner, message);
}
// Autogenerated method: InputBehaviourPrototype.OnShutdown
void GlobalNamespace::InputBehaviourPrototype::OnShutdown(::Fusion::NetworkRunner* runner, ::Fusion::ShutdownReason shutdownReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputBehaviourPrototype::OnShutdown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::InputBehaviourPrototype*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner, shutdownReason);
}
// Autogenerated method: InputBehaviourPrototype.OnSessionListUpdated
void GlobalNamespace::InputBehaviourPrototype::OnSessionListUpdated(::Fusion::NetworkRunner* runner, ::System::Collections::Generic::List_1<::Fusion::SessionInfo*>* sessionList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputBehaviourPrototype::OnSessionListUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::InputBehaviourPrototype*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner, sessionList);
}
// Autogenerated method: InputBehaviourPrototype.OnReliableDataReceived
void GlobalNamespace::InputBehaviourPrototype::OnReliableDataReceived(::Fusion::NetworkRunner* runner, ::Fusion::PlayerRef player, ::System::ArraySegment_1<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputBehaviourPrototype::OnReliableDataReceived");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::InputBehaviourPrototype*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner, player, data);
}
// Autogenerated method: InputBehaviourPrototype.OnSceneLoadDone
void GlobalNamespace::InputBehaviourPrototype::OnSceneLoadDone(::Fusion::NetworkRunner* runner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputBehaviourPrototype::OnSceneLoadDone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::InputBehaviourPrototype*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner);
}
// Autogenerated method: InputBehaviourPrototype.OnSceneLoadStart
void GlobalNamespace::InputBehaviourPrototype::OnSceneLoadStart(::Fusion::NetworkRunner* runner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputBehaviourPrototype::OnSceneLoadStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::InputBehaviourPrototype*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner);
}
// Autogenerated method: InputBehaviourPrototype.OnCustomAuthenticationResponse
void GlobalNamespace::InputBehaviourPrototype::OnCustomAuthenticationResponse(::Fusion::NetworkRunner* runner, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputBehaviourPrototype::OnCustomAuthenticationResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::InputBehaviourPrototype*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner, data);
}
// Autogenerated method: InputBehaviourPrototype.OnHostMigration
void GlobalNamespace::InputBehaviourPrototype::OnHostMigration(::Fusion::NetworkRunner* runner, ::Fusion::HostMigrationToken* hostMigrationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputBehaviourPrototype::OnHostMigration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::InputBehaviourPrototype*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner, hostMigrationToken);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: NetworkInputPrototype
#include "GlobalNamespace/NetworkInputPrototype.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 BUTTON_USE
int GlobalNamespace::NetworkInputPrototype::_get_BUTTON_USE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_get_BUTTON_USE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NetworkInputPrototype", "BUTTON_USE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUTTON_USE
void GlobalNamespace::NetworkInputPrototype::_set_BUTTON_USE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_set_BUTTON_USE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkInputPrototype", "BUTTON_USE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BUTTON_FIRE
int GlobalNamespace::NetworkInputPrototype::_get_BUTTON_FIRE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_get_BUTTON_FIRE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NetworkInputPrototype", "BUTTON_FIRE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUTTON_FIRE
void GlobalNamespace::NetworkInputPrototype::_set_BUTTON_FIRE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_set_BUTTON_FIRE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkInputPrototype", "BUTTON_FIRE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BUTTON_FIRE_ALT
int GlobalNamespace::NetworkInputPrototype::_get_BUTTON_FIRE_ALT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_get_BUTTON_FIRE_ALT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NetworkInputPrototype", "BUTTON_FIRE_ALT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUTTON_FIRE_ALT
void GlobalNamespace::NetworkInputPrototype::_set_BUTTON_FIRE_ALT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_set_BUTTON_FIRE_ALT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkInputPrototype", "BUTTON_FIRE_ALT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BUTTON_FORWARD
int GlobalNamespace::NetworkInputPrototype::_get_BUTTON_FORWARD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_get_BUTTON_FORWARD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NetworkInputPrototype", "BUTTON_FORWARD"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUTTON_FORWARD
void GlobalNamespace::NetworkInputPrototype::_set_BUTTON_FORWARD(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_set_BUTTON_FORWARD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkInputPrototype", "BUTTON_FORWARD", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BUTTON_BACKWARD
int GlobalNamespace::NetworkInputPrototype::_get_BUTTON_BACKWARD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_get_BUTTON_BACKWARD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NetworkInputPrototype", "BUTTON_BACKWARD"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUTTON_BACKWARD
void GlobalNamespace::NetworkInputPrototype::_set_BUTTON_BACKWARD(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_set_BUTTON_BACKWARD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkInputPrototype", "BUTTON_BACKWARD", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BUTTON_LEFT
int GlobalNamespace::NetworkInputPrototype::_get_BUTTON_LEFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_get_BUTTON_LEFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NetworkInputPrototype", "BUTTON_LEFT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUTTON_LEFT
void GlobalNamespace::NetworkInputPrototype::_set_BUTTON_LEFT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_set_BUTTON_LEFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkInputPrototype", "BUTTON_LEFT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BUTTON_RIGHT
int GlobalNamespace::NetworkInputPrototype::_get_BUTTON_RIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_get_BUTTON_RIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NetworkInputPrototype", "BUTTON_RIGHT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUTTON_RIGHT
void GlobalNamespace::NetworkInputPrototype::_set_BUTTON_RIGHT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_set_BUTTON_RIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkInputPrototype", "BUTTON_RIGHT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BUTTON_JUMP
int GlobalNamespace::NetworkInputPrototype::_get_BUTTON_JUMP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_get_BUTTON_JUMP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NetworkInputPrototype", "BUTTON_JUMP"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUTTON_JUMP
void GlobalNamespace::NetworkInputPrototype::_set_BUTTON_JUMP(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_set_BUTTON_JUMP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkInputPrototype", "BUTTON_JUMP", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BUTTON_CROUCH
int GlobalNamespace::NetworkInputPrototype::_get_BUTTON_CROUCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_get_BUTTON_CROUCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NetworkInputPrototype", "BUTTON_CROUCH"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUTTON_CROUCH
void GlobalNamespace::NetworkInputPrototype::_set_BUTTON_CROUCH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_set_BUTTON_CROUCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkInputPrototype", "BUTTON_CROUCH", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BUTTON_WALK
int GlobalNamespace::NetworkInputPrototype::_get_BUTTON_WALK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_get_BUTTON_WALK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NetworkInputPrototype", "BUTTON_WALK"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUTTON_WALK
void GlobalNamespace::NetworkInputPrototype::_set_BUTTON_WALK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_set_BUTTON_WALK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkInputPrototype", "BUTTON_WALK", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BUTTON_ACTION1
int GlobalNamespace::NetworkInputPrototype::_get_BUTTON_ACTION1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_get_BUTTON_ACTION1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NetworkInputPrototype", "BUTTON_ACTION1"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUTTON_ACTION1
void GlobalNamespace::NetworkInputPrototype::_set_BUTTON_ACTION1(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_set_BUTTON_ACTION1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkInputPrototype", "BUTTON_ACTION1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BUTTON_ACTION2
int GlobalNamespace::NetworkInputPrototype::_get_BUTTON_ACTION2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_get_BUTTON_ACTION2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NetworkInputPrototype", "BUTTON_ACTION2"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUTTON_ACTION2
void GlobalNamespace::NetworkInputPrototype::_set_BUTTON_ACTION2(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_set_BUTTON_ACTION2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkInputPrototype", "BUTTON_ACTION2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BUTTON_ACTION3
int GlobalNamespace::NetworkInputPrototype::_get_BUTTON_ACTION3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_get_BUTTON_ACTION3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NetworkInputPrototype", "BUTTON_ACTION3"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUTTON_ACTION3
void GlobalNamespace::NetworkInputPrototype::_set_BUTTON_ACTION3(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_set_BUTTON_ACTION3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkInputPrototype", "BUTTON_ACTION3", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BUTTON_ACTION4
int GlobalNamespace::NetworkInputPrototype::_get_BUTTON_ACTION4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_get_BUTTON_ACTION4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NetworkInputPrototype", "BUTTON_ACTION4"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUTTON_ACTION4
void GlobalNamespace::NetworkInputPrototype::_set_BUTTON_ACTION4(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_set_BUTTON_ACTION4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkInputPrototype", "BUTTON_ACTION4", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BUTTON_RELOAD
int GlobalNamespace::NetworkInputPrototype::_get_BUTTON_RELOAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_get_BUTTON_RELOAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NetworkInputPrototype", "BUTTON_RELOAD"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUTTON_RELOAD
void GlobalNamespace::NetworkInputPrototype::_set_BUTTON_RELOAD(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::_set_BUTTON_RELOAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkInputPrototype", "BUTTON_RELOAD", value));
}
// Autogenerated instance field getter
// Get instance field: public Fusion.NetworkButtons Buttons
[[deprecated("Use field access instead!")]] ::Fusion::NetworkButtons& GlobalNamespace::NetworkInputPrototype::dyn_Buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::dyn_Buttons");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buttons"))->offset;
  return *reinterpret_cast<::Fusion::NetworkButtons*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Weapon
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::NetworkInputPrototype::dyn_Weapon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::dyn_Weapon");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Weapon"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Angle Yaw
[[deprecated("Use field access instead!")]] ::Fusion::Angle& GlobalNamespace::NetworkInputPrototype::dyn_Yaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::dyn_Yaw");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Yaw"))->offset;
  return *reinterpret_cast<::Fusion::Angle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.Angle Pitch
[[deprecated("Use field access instead!")]] ::Fusion::Angle& GlobalNamespace::NetworkInputPrototype::dyn_Pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::dyn_Pitch");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pitch"))->offset;
  return *reinterpret_cast<::Fusion::Angle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkInputPrototype.IsUp
bool GlobalNamespace::NetworkInputPrototype::IsUp(int button) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::IsUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, button);
}
// Autogenerated method: NetworkInputPrototype.IsDown
bool GlobalNamespace::NetworkInputPrototype::IsDown(int button) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkInputPrototype::IsDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, button);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: NetworkCharacterControllerPrototype
#include "GlobalNamespace/NetworkCharacterControllerPrototype.hpp"
// Including type: UnityEngine.CharacterController
#include "UnityEngine/CharacterController.hpp"
// Including type: Fusion.ChangedDelegate`1
#include "Fusion/ChangedDelegate_1.hpp"
// Including type: Fusion.NetworkBehaviourCallbacks`1
#include "Fusion/NetworkBehaviourCallbacks_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static Fusion.Changed`1<NetworkCharacterControllerPrototype> $IL2CPP_CHANGED
::Fusion::Changed_1<::GlobalNamespace::NetworkCharacterControllerPrototype*> GlobalNamespace::NetworkCharacterControllerPrototype::_get_$IL2CPP_CHANGED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::_get_$IL2CPP_CHANGED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::Changed_1<::GlobalNamespace::NetworkCharacterControllerPrototype*>>("", "NetworkCharacterControllerPrototype", "$IL2CPP_CHANGED"));
}
// Autogenerated static field setter
// Set static field: static Fusion.Changed`1<NetworkCharacterControllerPrototype> $IL2CPP_CHANGED
void GlobalNamespace::NetworkCharacterControllerPrototype::_set_$IL2CPP_CHANGED(::Fusion::Changed_1<::GlobalNamespace::NetworkCharacterControllerPrototype*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::_set_$IL2CPP_CHANGED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkCharacterControllerPrototype", "$IL2CPP_CHANGED", value));
}
// Autogenerated static field getter
// Get static field: static Fusion.ChangedDelegate`1<NetworkCharacterControllerPrototype> $IL2CPP_CHANGED_DELEGATE
::Fusion::ChangedDelegate_1<::GlobalNamespace::NetworkCharacterControllerPrototype*>* GlobalNamespace::NetworkCharacterControllerPrototype::_get_$IL2CPP_CHANGED_DELEGATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::_get_$IL2CPP_CHANGED_DELEGATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::ChangedDelegate_1<::GlobalNamespace::NetworkCharacterControllerPrototype*>*>("", "NetworkCharacterControllerPrototype", "$IL2CPP_CHANGED_DELEGATE"));
}
// Autogenerated static field setter
// Set static field: static Fusion.ChangedDelegate`1<NetworkCharacterControllerPrototype> $IL2CPP_CHANGED_DELEGATE
void GlobalNamespace::NetworkCharacterControllerPrototype::_set_$IL2CPP_CHANGED_DELEGATE(::Fusion::ChangedDelegate_1<::GlobalNamespace::NetworkCharacterControllerPrototype*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::_set_$IL2CPP_CHANGED_DELEGATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkCharacterControllerPrototype", "$IL2CPP_CHANGED_DELEGATE", value));
}
// Autogenerated static field getter
// Get static field: static Fusion.NetworkBehaviourCallbacks`1<NetworkCharacterControllerPrototype> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS
::Fusion::NetworkBehaviourCallbacks_1<::GlobalNamespace::NetworkCharacterControllerPrototype*>* GlobalNamespace::NetworkCharacterControllerPrototype::_get_$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::_get_$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Fusion::NetworkBehaviourCallbacks_1<::GlobalNamespace::NetworkCharacterControllerPrototype*>*>("", "NetworkCharacterControllerPrototype", "$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS"));
}
// Autogenerated static field setter
// Set static field: static Fusion.NetworkBehaviourCallbacks`1<NetworkCharacterControllerPrototype> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS
void GlobalNamespace::NetworkCharacterControllerPrototype::_set_$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS(::Fusion::NetworkBehaviourCallbacks_1<::GlobalNamespace::NetworkCharacterControllerPrototype*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::_set_$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkCharacterControllerPrototype", "$IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single gravity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NetworkCharacterControllerPrototype::dyn_gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::dyn_gravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gravity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single jumpImpulse
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NetworkCharacterControllerPrototype::dyn_jumpImpulse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::dyn_jumpImpulse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpImpulse"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single acceleration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NetworkCharacterControllerPrototype::dyn_acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::dyn_acceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "acceleration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single braking
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NetworkCharacterControllerPrototype::dyn_braking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::dyn_braking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "braking"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NetworkCharacterControllerPrototype::dyn_maxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::dyn_maxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NetworkCharacterControllerPrototype::dyn_rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::dyn_rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _IsGrounded
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NetworkCharacterControllerPrototype::dyn__IsGrounded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::dyn__IsGrounded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_IsGrounded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _Velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::NetworkCharacterControllerPrototype::dyn__Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::dyn__Velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CharacterController <Controller>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::CharacterController*& GlobalNamespace::NetworkCharacterControllerPrototype::dyn_$Controller$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::dyn_$Controller$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Controller>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::CharacterController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkCharacterControllerPrototype.get_IsGrounded
bool GlobalNamespace::NetworkCharacterControllerPrototype::get_IsGrounded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::get_IsGrounded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGrounded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetworkCharacterControllerPrototype.set_IsGrounded
void GlobalNamespace::NetworkCharacterControllerPrototype::set_IsGrounded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::set_IsGrounded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsGrounded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkCharacterControllerPrototype.get_Velocity
::UnityEngine::Vector3 GlobalNamespace::NetworkCharacterControllerPrototype::get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::get_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NetworkCharacterControllerPrototype.set_Velocity
void GlobalNamespace::NetworkCharacterControllerPrototype::set_Velocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::set_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkCharacterControllerPrototype.get_Controller
::UnityEngine::CharacterController* GlobalNamespace::NetworkCharacterControllerPrototype::get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::get_Controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CharacterController*, false>(this, ___internal__method);
}
// Autogenerated method: NetworkCharacterControllerPrototype.set_Controller
void GlobalNamespace::NetworkCharacterControllerPrototype::set_Controller(::UnityEngine::CharacterController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::set_Controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkCharacterControllerPrototype.CacheController
void GlobalNamespace::NetworkCharacterControllerPrototype::CacheController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::CacheController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkCharacterControllerPrototype.Jump
void GlobalNamespace::NetworkCharacterControllerPrototype::Jump(bool ignoreGrounded, ::System::Nullable_1<float> overrideImpulse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::Jump");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkCharacterControllerPrototype*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ignoreGrounded, overrideImpulse);
}
// Autogenerated method: NetworkCharacterControllerPrototype.Move
void GlobalNamespace::NetworkCharacterControllerPrototype::Move(::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::Move");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkCharacterControllerPrototype*), 58));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, direction);
}
// Autogenerated method: NetworkCharacterControllerPrototype.get_DefaultTeleportInterpolationVelocity
::UnityEngine::Vector3 GlobalNamespace::NetworkCharacterControllerPrototype::get_DefaultTeleportInterpolationVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::get_DefaultTeleportInterpolationVelocity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkTransform*), 50));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NetworkCharacterControllerPrototype.get_DefaultTeleportInterpolationAngularVelocity
::UnityEngine::Vector3 GlobalNamespace::NetworkCharacterControllerPrototype::get_DefaultTeleportInterpolationAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::get_DefaultTeleportInterpolationAngularVelocity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkTransform*), 51));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NetworkCharacterControllerPrototype.Awake
void GlobalNamespace::NetworkCharacterControllerPrototype::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkPosition*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkCharacterControllerPrototype.Spawned
void GlobalNamespace::NetworkCharacterControllerPrototype::Spawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::Spawned");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkTransform*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkCharacterControllerPrototype.CopyFromBufferToEngine
void GlobalNamespace::NetworkCharacterControllerPrototype::CopyFromBufferToEngine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::CopyFromBufferToEngine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkPositionRotation*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkCharacterControllerPrototype.CopyBackingFieldsToState
void GlobalNamespace::NetworkCharacterControllerPrototype::CopyBackingFieldsToState(bool param_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::CopyBackingFieldsToState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkTransform*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, param_0);
}
// Autogenerated method: NetworkCharacterControllerPrototype.CopyStateToBackingFields
void GlobalNamespace::NetworkCharacterControllerPrototype::CopyStateToBackingFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkCharacterControllerPrototype::CopyStateToBackingFields");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Fusion::NetworkBehaviour*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: NetworkDebugStart
#include "GlobalNamespace/NetworkDebugStart.hpp"
// Including type: Fusion.SceneRef
#include "Fusion/SceneRef.hpp"
// Including type: NetworkDebugStart/<>c
#include "GlobalNamespace/NetworkDebugStart_--c.hpp"
// Including type: NetworkDebugStart/<StartClients>d__58
#include "GlobalNamespace/NetworkDebugStart_-StartClients-d__58.hpp"
// Including type: NetworkDebugStart/<StartWithClients>d__54
#include "GlobalNamespace/NetworkDebugStart_-StartWithClients-d__54.hpp"
// Including type: Fusion.NetworkRunner
#include "Fusion/NetworkRunner.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: Fusion.Sockets.NetAddress
#include "Fusion/Sockets/NetAddress.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String _initialScenePath
::StringW GlobalNamespace::NetworkDebugStart::_get__initialScenePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::_get__initialScenePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "NetworkDebugStart", "_initialScenePath"));
}
// Autogenerated static field setter
// Set static field: static private System.String _initialScenePath
void GlobalNamespace::NetworkDebugStart::_set__initialScenePath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::_set__initialScenePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkDebugStart", "_initialScenePath", value));
}
// Autogenerated instance field getter
// Get instance field: public Fusion.NetworkRunner RunnerPrefab
[[deprecated("Use field access instead!")]] ::Fusion::NetworkRunner*& GlobalNamespace::NetworkDebugStart::dyn_RunnerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::dyn_RunnerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RunnerPrefab"))->offset;
  return *reinterpret_cast<::Fusion::NetworkRunner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NetworkDebugStart/StartModes StartMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkDebugStart::StartModes& GlobalNamespace::NetworkDebugStart::dyn_StartMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::dyn_StartMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkDebugStart::StartModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.GameMode AutoStartAs
[[deprecated("Use field access instead!")]] ::Fusion::GameMode& GlobalNamespace::NetworkDebugStart::dyn_AutoStartAs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::dyn_AutoStartAs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoStartAs"))->offset;
  return *reinterpret_cast<::Fusion::GameMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutoHideGUI
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NetworkDebugStart::dyn_AutoHideGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::dyn_AutoHideGUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoHideGUI"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 AutoClients
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkDebugStart::dyn_AutoClients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::dyn_AutoClients");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoClients"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 ServerPort
[[deprecated("Use field access instead!")]] uint16_t& GlobalNamespace::NetworkDebugStart::dyn_ServerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::dyn_ServerPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerPort"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DefaultRoomName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkDebugStart::dyn_DefaultRoomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::dyn_DefaultRoomName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DefaultRoomName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AlwaysShowStats
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NetworkDebugStart::dyn_AlwaysShowStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::dyn_AlwaysShowStats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AlwaysShowStats"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.NetworkRunner _server
[[deprecated("Use field access instead!")]] ::Fusion::NetworkRunner*& GlobalNamespace::NetworkDebugStart::dyn__server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::dyn__server");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_server"))->offset;
  return *reinterpret_cast<::Fusion::NetworkRunner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String InitialScenePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkDebugStart::dyn_InitialScenePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::dyn_InitialScenePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitialScenePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected NetworkDebugStart/Stage _currentStage
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkDebugStart::Stage& GlobalNamespace::NetworkDebugStart::dyn__currentStage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::dyn__currentStage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentStage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkDebugStart::Stage*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <LastCreatedClientIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkDebugStart::dyn_$LastCreatedClientIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::dyn_$LastCreatedClientIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LastCreatedClientIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Fusion.GameMode <CurrentServerMode>k__BackingField
[[deprecated("Use field access instead!")]] ::Fusion::GameMode& GlobalNamespace::NetworkDebugStart::dyn_$CurrentServerMode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::dyn_$CurrentServerMode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentServerMode>k__BackingField"))->offset;
  return *reinterpret_cast<::Fusion::GameMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkDebugStart.get_CurrentStage
::GlobalNamespace::NetworkDebugStart::Stage GlobalNamespace::NetworkDebugStart::get_CurrentStage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::get_CurrentStage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentStage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NetworkDebugStart::Stage, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.set_CurrentStage
void GlobalNamespace::NetworkDebugStart::set_CurrentStage(::GlobalNamespace::NetworkDebugStart::Stage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::set_CurrentStage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentStage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkDebugStart.get_LastCreatedClientIndex
int GlobalNamespace::NetworkDebugStart::get_LastCreatedClientIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::get_LastCreatedClientIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastCreatedClientIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.set_LastCreatedClientIndex
void GlobalNamespace::NetworkDebugStart::set_LastCreatedClientIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::set_LastCreatedClientIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastCreatedClientIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkDebugStart.get_CurrentServerMode
::Fusion::GameMode GlobalNamespace::NetworkDebugStart::get_CurrentServerMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::get_CurrentServerMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentServerMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Fusion::GameMode, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.set_CurrentServerMode
void GlobalNamespace::NetworkDebugStart::set_CurrentServerMode(::Fusion::GameMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::set_CurrentServerMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentServerMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkDebugStart.get_CanAddClients
bool GlobalNamespace::NetworkDebugStart::get_CanAddClients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::get_CanAddClients");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanAddClients", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.get_CanAddSharedClients
bool GlobalNamespace::NetworkDebugStart::get_CanAddSharedClients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::get_CanAddSharedClients");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanAddSharedClients", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.get_IsShutdown
bool GlobalNamespace::NetworkDebugStart::get_IsShutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::get_IsShutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsShutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.get_IsShutdownAndMultiPeer
bool GlobalNamespace::NetworkDebugStart::get_IsShutdownAndMultiPeer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::get_IsShutdownAndMultiPeer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsShutdownAndMultiPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.get_UsingMultiPeerMode
bool GlobalNamespace::NetworkDebugStart::get_UsingMultiPeerMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::get_UsingMultiPeerMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UsingMultiPeerMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.get_ShowAutoClients
bool GlobalNamespace::NetworkDebugStart::get_ShowAutoClients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::get_ShowAutoClients");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShowAutoClients", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.Start
void GlobalNamespace::NetworkDebugStart::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.TryGetSceneRef
bool GlobalNamespace::NetworkDebugStart::TryGetSceneRef(ByRef<::Fusion::SceneRef> sceneRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::TryGetSceneRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetSceneRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Fusion::SceneRef&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(sceneRef));
}
// Autogenerated method: NetworkDebugStart.StartSinglePlayer
void GlobalNamespace::NetworkDebugStart::StartSinglePlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartSinglePlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.StartServer
void GlobalNamespace::NetworkDebugStart::StartServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartServer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.StartHost
void GlobalNamespace::NetworkDebugStart::StartHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartHost");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.StartClient
void GlobalNamespace::NetworkDebugStart::StartClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartClient");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.StartSharedClient
void GlobalNamespace::NetworkDebugStart::StartSharedClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartSharedClient");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.StartAutoClient
void GlobalNamespace::NetworkDebugStart::StartAutoClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartAutoClient");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.StartServerPlusClients
void GlobalNamespace::NetworkDebugStart::StartServerPlusClients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartServerPlusClients");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.StartHostPlusClients
void GlobalNamespace::NetworkDebugStart::StartHostPlusClients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartHostPlusClients");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartHostPlusClients", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.Shutdown
void GlobalNamespace::NetworkDebugStart::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.StartServerPlusClients
void GlobalNamespace::NetworkDebugStart::StartServerPlusClients(int clientCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartServerPlusClients");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clientCount);
}
// Autogenerated method: NetworkDebugStart.StartHostPlusClients
void GlobalNamespace::NetworkDebugStart::StartHostPlusClients(int clientCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartHostPlusClients");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartHostPlusClients", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clientCount);
}
// Autogenerated method: NetworkDebugStart.StartMultipleClients
void GlobalNamespace::NetworkDebugStart::StartMultipleClients(int clientCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartMultipleClients");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMultipleClients", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clientCount);
}
// Autogenerated method: NetworkDebugStart.StartMultipleSharedClients
void GlobalNamespace::NetworkDebugStart::StartMultipleSharedClients(int clientCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartMultipleSharedClients");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMultipleSharedClients", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clientCount);
}
// Autogenerated method: NetworkDebugStart.StartMultipleAutoClients
void GlobalNamespace::NetworkDebugStart::StartMultipleAutoClients(int clientCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartMultipleAutoClients");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMultipleAutoClients", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clientCount);
}
// Autogenerated method: NetworkDebugStart.ShutdownAll
void GlobalNamespace::NetworkDebugStart::ShutdownAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::ShutdownAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShutdownAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.StartWithClients
::System::Collections::IEnumerator* GlobalNamespace::NetworkDebugStart::StartWithClients(::Fusion::GameMode serverMode, ::Fusion::SceneRef sceneRef, int clientCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartWithClients");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartWithClients", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverMode), ::il2cpp_utils::ExtractType(sceneRef), ::il2cpp_utils::ExtractType(clientCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, serverMode, sceneRef, clientCount);
}
// Autogenerated method: NetworkDebugStart.AddClient
void GlobalNamespace::NetworkDebugStart::AddClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::AddClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.AddSharedClient
void GlobalNamespace::NetworkDebugStart::AddSharedClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::AddSharedClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSharedClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart.AddClient
::System::Threading::Tasks::Task* GlobalNamespace::NetworkDebugStart::AddClient(::Fusion::GameMode serverMode, ::Fusion::SceneRef sceneRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::AddClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverMode), ::il2cpp_utils::ExtractType(sceneRef)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, serverMode, sceneRef);
}
// Autogenerated method: NetworkDebugStart.StartClients
::System::Collections::IEnumerator* GlobalNamespace::NetworkDebugStart::StartClients(int clientCount, ::Fusion::GameMode serverMode, ::Fusion::SceneRef sceneRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartClients");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartClients", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientCount), ::il2cpp_utils::ExtractType(serverMode), ::il2cpp_utils::ExtractType(sceneRef)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, clientCount, serverMode, sceneRef);
}
// Autogenerated method: NetworkDebugStart.InitializeNetworkRunner
::System::Threading::Tasks::Task* GlobalNamespace::NetworkDebugStart::InitializeNetworkRunner(::Fusion::NetworkRunner* runner, ::Fusion::GameMode gameMode, ::Fusion::Sockets::NetAddress address, ::Fusion::SceneRef scene, ::System::Action_1<::Fusion::NetworkRunner*>* initialized) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::InitializeNetworkRunner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, runner, gameMode, address, scene, initialized);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: NetworkDebugStart/StartModes
#include "GlobalNamespace/NetworkDebugStart.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NetworkDebugStart/StartModes UserInterface
::GlobalNamespace::NetworkDebugStart::StartModes GlobalNamespace::NetworkDebugStart::StartModes::_get_UserInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartModes::_get_UserInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NetworkDebugStart::StartModes>("", "NetworkDebugStart/StartModes", "UserInterface"));
}
// Autogenerated static field setter
// Set static field: static public NetworkDebugStart/StartModes UserInterface
void GlobalNamespace::NetworkDebugStart::StartModes::_set_UserInterface(::GlobalNamespace::NetworkDebugStart::StartModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartModes::_set_UserInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkDebugStart/StartModes", "UserInterface", value));
}
// Autogenerated static field getter
// Get static field: static public NetworkDebugStart/StartModes Automatic
::GlobalNamespace::NetworkDebugStart::StartModes GlobalNamespace::NetworkDebugStart::StartModes::_get_Automatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartModes::_get_Automatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NetworkDebugStart::StartModes>("", "NetworkDebugStart/StartModes", "Automatic"));
}
// Autogenerated static field setter
// Set static field: static public NetworkDebugStart/StartModes Automatic
void GlobalNamespace::NetworkDebugStart::StartModes::_set_Automatic(::GlobalNamespace::NetworkDebugStart::StartModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartModes::_set_Automatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkDebugStart/StartModes", "Automatic", value));
}
// Autogenerated static field getter
// Get static field: static public NetworkDebugStart/StartModes Manual
::GlobalNamespace::NetworkDebugStart::StartModes GlobalNamespace::NetworkDebugStart::StartModes::_get_Manual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartModes::_get_Manual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NetworkDebugStart::StartModes>("", "NetworkDebugStart/StartModes", "Manual"));
}
// Autogenerated static field setter
// Set static field: static public NetworkDebugStart/StartModes Manual
void GlobalNamespace::NetworkDebugStart::StartModes::_set_Manual(::GlobalNamespace::NetworkDebugStart::StartModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartModes::_set_Manual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkDebugStart/StartModes", "Manual", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkDebugStart::StartModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::StartModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: NetworkDebugStart/Stage
#include "GlobalNamespace/NetworkDebugStart.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NetworkDebugStart/Stage Disconnected
::GlobalNamespace::NetworkDebugStart::Stage GlobalNamespace::NetworkDebugStart::Stage::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::Stage::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NetworkDebugStart::Stage>("", "NetworkDebugStart/Stage", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public NetworkDebugStart/Stage Disconnected
void GlobalNamespace::NetworkDebugStart::Stage::_set_Disconnected(::GlobalNamespace::NetworkDebugStart::Stage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::Stage::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkDebugStart/Stage", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public NetworkDebugStart/Stage StartingUp
::GlobalNamespace::NetworkDebugStart::Stage GlobalNamespace::NetworkDebugStart::Stage::_get_StartingUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::Stage::_get_StartingUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NetworkDebugStart::Stage>("", "NetworkDebugStart/Stage", "StartingUp"));
}
// Autogenerated static field setter
// Set static field: static public NetworkDebugStart/Stage StartingUp
void GlobalNamespace::NetworkDebugStart::Stage::_set_StartingUp(::GlobalNamespace::NetworkDebugStart::Stage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::Stage::_set_StartingUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkDebugStart/Stage", "StartingUp", value));
}
// Autogenerated static field getter
// Get static field: static public NetworkDebugStart/Stage UnloadOriginalScene
::GlobalNamespace::NetworkDebugStart::Stage GlobalNamespace::NetworkDebugStart::Stage::_get_UnloadOriginalScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::Stage::_get_UnloadOriginalScene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NetworkDebugStart::Stage>("", "NetworkDebugStart/Stage", "UnloadOriginalScene"));
}
// Autogenerated static field setter
// Set static field: static public NetworkDebugStart/Stage UnloadOriginalScene
void GlobalNamespace::NetworkDebugStart::Stage::_set_UnloadOriginalScene(::GlobalNamespace::NetworkDebugStart::Stage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::Stage::_set_UnloadOriginalScene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkDebugStart/Stage", "UnloadOriginalScene", value));
}
// Autogenerated static field getter
// Get static field: static public NetworkDebugStart/Stage ConnectingServer
::GlobalNamespace::NetworkDebugStart::Stage GlobalNamespace::NetworkDebugStart::Stage::_get_ConnectingServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::Stage::_get_ConnectingServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NetworkDebugStart::Stage>("", "NetworkDebugStart/Stage", "ConnectingServer"));
}
// Autogenerated static field setter
// Set static field: static public NetworkDebugStart/Stage ConnectingServer
void GlobalNamespace::NetworkDebugStart::Stage::_set_ConnectingServer(::GlobalNamespace::NetworkDebugStart::Stage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::Stage::_set_ConnectingServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkDebugStart/Stage", "ConnectingServer", value));
}
// Autogenerated static field getter
// Get static field: static public NetworkDebugStart/Stage ConnectingClients
::GlobalNamespace::NetworkDebugStart::Stage GlobalNamespace::NetworkDebugStart::Stage::_get_ConnectingClients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::Stage::_get_ConnectingClients");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NetworkDebugStart::Stage>("", "NetworkDebugStart/Stage", "ConnectingClients"));
}
// Autogenerated static field setter
// Set static field: static public NetworkDebugStart/Stage ConnectingClients
void GlobalNamespace::NetworkDebugStart::Stage::_set_ConnectingClients(::GlobalNamespace::NetworkDebugStart::Stage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::Stage::_set_ConnectingClients");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkDebugStart/Stage", "ConnectingClients", value));
}
// Autogenerated static field getter
// Get static field: static public NetworkDebugStart/Stage AllConnected
::GlobalNamespace::NetworkDebugStart::Stage GlobalNamespace::NetworkDebugStart::Stage::_get_AllConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::Stage::_get_AllConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NetworkDebugStart::Stage>("", "NetworkDebugStart/Stage", "AllConnected"));
}
// Autogenerated static field setter
// Set static field: static public NetworkDebugStart/Stage AllConnected
void GlobalNamespace::NetworkDebugStart::Stage::_set_AllConnected(::GlobalNamespace::NetworkDebugStart::Stage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::Stage::_set_AllConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkDebugStart/Stage", "AllConnected", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkDebugStart::Stage::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::Stage::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: NetworkDebugStart/<>c
#include "GlobalNamespace/NetworkDebugStart_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Fusion.NetworkRunner
#include "Fusion/NetworkRunner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly NetworkDebugStart/<>c <>9
::GlobalNamespace::NetworkDebugStart::$$c* GlobalNamespace::NetworkDebugStart::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::NetworkDebugStart::$$c*>("", "NetworkDebugStart/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly NetworkDebugStart/<>c <>9
void GlobalNamespace::NetworkDebugStart::$$c::_set_$$9(::GlobalNamespace::NetworkDebugStart::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "NetworkDebugStart/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Fusion.NetworkRunner> <>9__54_0
::System::Action_1<::Fusion::NetworkRunner*>* GlobalNamespace::NetworkDebugStart::$$c::_get_$$9__54_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$$c::_get_$$9__54_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Fusion::NetworkRunner*>*>("", "NetworkDebugStart/<>c", "<>9__54_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Fusion.NetworkRunner> <>9__54_0
void GlobalNamespace::NetworkDebugStart::$$c::_set_$$9__54_0(::System::Action_1<::Fusion::NetworkRunner*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$$c::_set_$$9__54_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "NetworkDebugStart/<>c", "<>9__54_0", value)));
}
// Autogenerated method: NetworkDebugStart/<>c..cctor
void GlobalNamespace::NetworkDebugStart::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkDebugStart/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NetworkDebugStart/<>c.<StartWithClients>b__54_0
void GlobalNamespace::NetworkDebugStart::$$c::$StartWithClients$b__54_0(::Fusion::NetworkRunner* runner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$$c::<StartWithClients>b__54_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartWithClients>b__54_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runner);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkDebugStart/<StartClients>d__58
#include "GlobalNamespace/NetworkDebugStart_-StartClients-d__58.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NetworkDebugStart <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkDebugStart*& GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkDebugStart**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.GameMode serverMode
[[deprecated("Use field access instead!")]] ::Fusion::GameMode& GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_serverMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_serverMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverMode"))->offset;
  return *reinterpret_cast<::Fusion::GameMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.SceneRef sceneRef
[[deprecated("Use field access instead!")]] ::Fusion::SceneRef& GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_sceneRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_sceneRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneRef"))->offset;
  return *reinterpret_cast<::Fusion::SceneRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 clientCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_clientCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_clientCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Threading.Tasks.Task> <clientTasks>5__2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Threading::Tasks::Task*>*& GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_$clientTasks$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_$clientTasks$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clientTasks>5__2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task <clientsStartTask>5__3
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_$clientsStartTask$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_$clientsStartTask$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clientsStartTask>5__3"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__4
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_$i$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartClients$d__58::dyn_$i$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkDebugStart/<StartClients>d__58.System.IDisposable.Dispose
void GlobalNamespace::NetworkDebugStart::$StartClients$d__58::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartClients$d__58::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart::$StartClients$d__58*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart/<StartClients>d__58.MoveNext
bool GlobalNamespace::NetworkDebugStart::$StartClients$d__58::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartClients$d__58::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart::$StartClients$d__58*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart/<StartClients>d__58.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::NetworkDebugStart::$StartClients$d__58::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartClients$d__58::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart::$StartClients$d__58*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart/<StartClients>d__58.System.Collections.IEnumerator.Reset
void GlobalNamespace::NetworkDebugStart::$StartClients$d__58::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartClients$d__58::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart::$StartClients$d__58*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart/<StartClients>d__58.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::NetworkDebugStart::$StartClients$d__58::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartClients$d__58::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart::$StartClients$d__58*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkDebugStart/<StartWithClients>d__54
#include "GlobalNamespace/NetworkDebugStart_-StartWithClients-d__54.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NetworkDebugStart <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkDebugStart*& GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkDebugStart**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.GameMode serverMode
[[deprecated("Use field access instead!")]] ::Fusion::GameMode& GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::dyn_serverMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::dyn_serverMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverMode"))->offset;
  return *reinterpret_cast<::Fusion::GameMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 clientCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::dyn_clientCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::dyn_clientCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Fusion.SceneRef sceneRef
[[deprecated("Use field access instead!")]] ::Fusion::SceneRef& GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::dyn_sceneRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::dyn_sceneRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneRef"))->offset;
  return *reinterpret_cast<::Fusion::SceneRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <includesServerStart>5__2
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::dyn_$includesServerStart$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::dyn_$includesServerStart$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<includesServerStart>5__2"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task <serverTask>5__3
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::dyn_$serverTask$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::dyn_$serverTask$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<serverTask>5__3"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkDebugStart/<StartWithClients>d__54.System.IDisposable.Dispose
void GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart/<StartWithClients>d__54.MoveNext
bool GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart/<StartWithClients>d__54.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart/<StartWithClients>d__54.System.Collections.IEnumerator.Reset
void GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStart/<StartWithClients>d__54.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStart::$StartWithClients$d__54*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: NetworkDebugStartGUI
#include "GlobalNamespace/NetworkDebugStartGUI.hpp"
// Including type: UnityEngine.GUISkin
#include "UnityEngine/GUISkin.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableHotkeys
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NetworkDebugStartGUI::dyn_EnableHotkeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::dyn_EnableHotkeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableHotkeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GUISkin BaseSkin
[[deprecated("Use field access instead!")]] ::UnityEngine::GUISkin*& GlobalNamespace::NetworkDebugStartGUI::dyn_BaseSkin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::dyn_BaseSkin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BaseSkin"))->offset;
  return *reinterpret_cast<::UnityEngine::GUISkin**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NetworkDebugStart _networkDebugStart
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkDebugStart*& GlobalNamespace::NetworkDebugStartGUI::dyn__networkDebugStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::dyn__networkDebugStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkDebugStart"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkDebugStart**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _clientCount
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkDebugStartGUI::dyn__clientCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::dyn__clientCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clientCount"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isMultiplePeerMode
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NetworkDebugStartGUI::dyn__isMultiplePeerMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::dyn__isMultiplePeerMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isMultiplePeerMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<NetworkDebugStart/Stage,System.String> _nicifiedStageNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::NetworkDebugStart::Stage, ::StringW>*& GlobalNamespace::NetworkDebugStartGUI::dyn__nicifiedStageNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::dyn__nicifiedStageNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nicifiedStageNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::NetworkDebugStart::Stage, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkDebugStartGUI.OnValidate
void GlobalNamespace::NetworkDebugStartGUI::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::OnValidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStartGUI*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStartGUI.ValidateClientCount
void GlobalNamespace::NetworkDebugStartGUI::ValidateClientCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::ValidateClientCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateClientCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStartGUI.GetClientCount
int GlobalNamespace::NetworkDebugStartGUI::GetClientCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::GetClientCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClientCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStartGUI.Awake
void GlobalNamespace::NetworkDebugStartGUI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStartGUI*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStartGUI.Start
void GlobalNamespace::NetworkDebugStartGUI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStartGUI*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStartGUI.EnsureNetworkDebugStartExists
::GlobalNamespace::NetworkDebugStart* GlobalNamespace::NetworkDebugStartGUI::EnsureNetworkDebugStartExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::EnsureNetworkDebugStartExists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureNetworkDebugStartExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NetworkDebugStart*, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStartGUI.Update
void GlobalNamespace::NetworkDebugStartGUI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStartGUI.OnGUI
void GlobalNamespace::NetworkDebugStartGUI::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::OnGUI");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::NetworkDebugStartGUI*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkDebugStartGUI.StartHostWithClients
void GlobalNamespace::NetworkDebugStartGUI::StartHostWithClients(::GlobalNamespace::NetworkDebugStart* nds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::StartHostWithClients");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartHostWithClients", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nds);
}
// Autogenerated method: NetworkDebugStartGUI.StartServerWithClients
void GlobalNamespace::NetworkDebugStartGUI::StartServerWithClients(::GlobalNamespace::NetworkDebugStart* nds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::StartServerWithClients");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartServerWithClients", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nds);
}
// Autogenerated method: NetworkDebugStartGUI.StartMultipleClients
void GlobalNamespace::NetworkDebugStartGUI::StartMultipleClients(::GlobalNamespace::NetworkDebugStart* nds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::StartMultipleClients");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMultipleClients", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nds);
}
// Autogenerated method: NetworkDebugStartGUI.StartMultipleAutoClients
void GlobalNamespace::NetworkDebugStartGUI::StartMultipleAutoClients(::GlobalNamespace::NetworkDebugStart* nds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::StartMultipleAutoClients");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMultipleAutoClients", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nds);
}
// Autogenerated method: NetworkDebugStartGUI.StartMultipleSharedClients
void GlobalNamespace::NetworkDebugStartGUI::StartMultipleSharedClients(::GlobalNamespace::NetworkDebugStart* nds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkDebugStartGUI::StartMultipleSharedClients");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMultipleSharedClients", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nds);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayerSpawnerPrototype
#include "GlobalNamespace/PlayerSpawnerPrototype.hpp"
// Including type: PlayerSpawnPointPrototype
#include "GlobalNamespace/PlayerSpawnPointPrototype.hpp"
// Including type: Fusion.NetworkObject
#include "Fusion/NetworkObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayerSpawnerPrototype.RegisterPlayerAndObject
void GlobalNamespace::PlayerSpawnerPrototype::RegisterPlayerAndObject(::Fusion::PlayerRef player, ::Fusion::NetworkObject* playerObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpawnerPrototype::RegisterPlayerAndObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SpawnerPrototype_1<T>*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, playerObject);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayerSpawnPointManagerPrototype
#include "GlobalNamespace/PlayerSpawnPointManagerPrototype.hpp"
// Including type: PlayerSpawnPointPrototype
#include "GlobalNamespace/PlayerSpawnPointPrototype.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayerSpawnPointPrototype
#include "GlobalNamespace/PlayerSpawnPointPrototype.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ToggleRunnerProvideInput
#include "GlobalNamespace/ToggleRunnerProvideInput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private ToggleRunnerProvideInput _instance
::GlobalNamespace::ToggleRunnerProvideInput* GlobalNamespace::ToggleRunnerProvideInput::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ToggleRunnerProvideInput::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ToggleRunnerProvideInput*>("", "ToggleRunnerProvideInput", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private ToggleRunnerProvideInput _instance
void GlobalNamespace::ToggleRunnerProvideInput::_set__instance(::GlobalNamespace::ToggleRunnerProvideInput* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ToggleRunnerProvideInput::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ToggleRunnerProvideInput", "_instance", value));
}
// Autogenerated method: ToggleRunnerProvideInput.Awake
void GlobalNamespace::ToggleRunnerProvideInput::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ToggleRunnerProvideInput::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ToggleRunnerProvideInput.Update
void GlobalNamespace::ToggleRunnerProvideInput::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ToggleRunnerProvideInput::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ToggleRunnerProvideInput.ToggleAll
void GlobalNamespace::ToggleRunnerProvideInput::ToggleAll(int runnerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ToggleRunnerProvideInput::ToggleAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runnerIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runnerIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ToggleRunnerVisibility
#include "GlobalNamespace/ToggleRunnerVisibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private ToggleRunnerVisibility _instance
::GlobalNamespace::ToggleRunnerVisibility* GlobalNamespace::ToggleRunnerVisibility::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ToggleRunnerVisibility::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ToggleRunnerVisibility*>("", "ToggleRunnerVisibility", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private ToggleRunnerVisibility _instance
void GlobalNamespace::ToggleRunnerVisibility::_set__instance(::GlobalNamespace::ToggleRunnerVisibility* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ToggleRunnerVisibility::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ToggleRunnerVisibility", "_instance", value));
}
// Autogenerated method: ToggleRunnerVisibility.Awake
void GlobalNamespace::ToggleRunnerVisibility::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ToggleRunnerVisibility::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ToggleRunnerVisibility.Update
void GlobalNamespace::ToggleRunnerVisibility::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ToggleRunnerVisibility::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ToggleRunnerVisibility.ToggleAll
void GlobalNamespace::ToggleRunnerVisibility::ToggleAll(int runnerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ToggleRunnerVisibility::ToggleAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runnerIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runnerIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: FusionScalableIMGUI
#include "GlobalNamespace/FusionScalableIMGUI.hpp"
// Including type: UnityEngine.GUISkin
#include "UnityEngine/GUISkin.hpp"
// Including type: System.ValueTuple`5
#include "System/ValueTuple_5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.GUISkin _scalableSkin
::UnityEngine::GUISkin* GlobalNamespace::FusionScalableIMGUI::_get__scalableSkin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionScalableIMGUI::_get__scalableSkin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GUISkin*>("", "FusionScalableIMGUI", "_scalableSkin"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.GUISkin _scalableSkin
void GlobalNamespace::FusionScalableIMGUI::_set__scalableSkin(::UnityEngine::GUISkin* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionScalableIMGUI::_set__scalableSkin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FusionScalableIMGUI", "_scalableSkin", value));
}
// Autogenerated method: FusionScalableIMGUI.InitializedGUIStyles
void GlobalNamespace::FusionScalableIMGUI::InitializedGUIStyles(::UnityEngine::GUISkin* baseSkin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionScalableIMGUI::InitializedGUIStyles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FusionScalableIMGUI", "InitializedGUIStyles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseSkin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseSkin);
}
// Autogenerated method: FusionScalableIMGUI.GetScaledSkin
::UnityEngine::GUISkin* GlobalNamespace::FusionScalableIMGUI::GetScaledSkin(::UnityEngine::GUISkin* baseSkin, ByRef<float> height, ByRef<float> width, ByRef<int> padding, ByRef<int> margin, ByRef<float> boxLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionScalableIMGUI::GetScaledSkin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FusionScalableIMGUI", "GetScaledSkin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseSkin), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GUISkin*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseSkin, byref(height), byref(width), byref(padding), byref(margin), byref(boxLeft));
}
// Autogenerated method: FusionScalableIMGUI.ScaleGuiSkinToScreenHeight
::System::ValueTuple_5<float, float, int, int, float> GlobalNamespace::FusionScalableIMGUI::ScaleGuiSkinToScreenHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FusionScalableIMGUI::ScaleGuiSkinToScreenHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FusionScalableIMGUI", "ScaleGuiSkinToScreenHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_5<float, float, int, int, float>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayerCollection
#include "GlobalNamespace/PlayerCollection.hpp"
// Including type: PlayerCollection/<>c__DisplayClass5_0
#include "GlobalNamespace/PlayerCollection_--c__DisplayClass5_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<VRRig> containedRigs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::VRRig*>*& GlobalNamespace::PlayerCollection::dyn_containedRigs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerCollection::dyn_containedRigs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "containedRigs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::VRRig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerCollection.Start
void GlobalNamespace::PlayerCollection::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerCollection::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerCollection.OnDestroy
void GlobalNamespace::PlayerCollection::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerCollection::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerCollection.OnTriggerEnter
void GlobalNamespace::PlayerCollection::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerCollection::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: PlayerCollection.OnTriggerExit
void GlobalNamespace::PlayerCollection::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerCollection::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: PlayerCollection.OnPlayerLeftRoom
void GlobalNamespace::PlayerCollection::OnPlayerLeftRoom(int otherPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerCollection::OnPlayerLeftRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayerLeftRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherPlayerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayerId);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayerCollection/<>c__DisplayClass5_0
#include "GlobalNamespace/PlayerCollection_--c__DisplayClass5_0.hpp"
// Including type: NetPlayer
#include "GlobalNamespace/NetPlayer.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public NetPlayer otherPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetPlayer*& GlobalNamespace::PlayerCollection::$$c__DisplayClass5_0::dyn_otherPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerCollection::$$c__DisplayClass5_0::dyn_otherPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "otherPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerCollection/<>c__DisplayClass5_0.<OnPlayerLeftRoom>b__0
bool GlobalNamespace::PlayerCollection::$$c__DisplayClass5_0::$OnPlayerLeftRoom$b__0(::GlobalNamespace::VRRig* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerCollection::$$c__DisplayClass5_0::<OnPlayerLeftRoom>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnPlayerLeftRoom>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, r);
}
