// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Samples.TTSVoices.TTSFileToggle
#include "Meta/Voice/Samples/TTSVoices/TTSFileToggle.hpp"
// Including type: Meta.WitAi.TTS.Integrations.TTSWit
#include "Meta/WitAi/TTS/Integrations/TTSWit.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.TTS.Integrations.TTSWit _service
[[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Integrations::TTSWit*& Meta::Voice::Samples::TTSVoices::TTSFileToggle::dyn__service() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSFileToggle::dyn__service");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_service"))->offset;
  return *reinterpret_cast<::Meta::WitAi::TTS::Integrations::TTSWit**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& Meta::Voice::Samples::TTSVoices::TTSFileToggle::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSFileToggle::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _label
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Meta::Voice::Samples::TTSVoices::TTSFileToggle::dyn__label() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSFileToggle::dyn__label");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_label"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _labelFormat
[[deprecated("Use field access instead!")]] ::StringW& Meta::Voice::Samples::TTSVoices::TTSFileToggle::dyn__labelFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSFileToggle::dyn__labelFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_labelFormat"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Requests.TTSWitAudioType _fileType
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::TTSWitAudioType& Meta::Voice::Samples::TTSVoices::TTSFileToggle::dyn__fileType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSFileToggle::dyn__fileType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileType"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::TTSWitAudioType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Meta.WitAi.Requests.TTSWitAudioType> _fileTypes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Meta::WitAi::Requests::TTSWitAudioType>*& Meta::Voice::Samples::TTSVoices::TTSFileToggle::dyn__fileTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSFileToggle::dyn__fileTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileTypes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Meta::WitAi::Requests::TTSWitAudioType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSFileToggle.OnEnable
void Meta::Voice::Samples::TTSVoices::TTSFileToggle::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSFileToggle::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSFileToggle.Update
void Meta::Voice::Samples::TTSVoices::TTSFileToggle::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSFileToggle::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSFileToggle.OnDisable
void Meta::Voice::Samples::TTSVoices::TTSFileToggle::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSFileToggle::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSFileToggle.Toggle
void Meta::Voice::Samples::TTSVoices::TTSFileToggle::Toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSFileToggle::Toggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Toggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSFileToggle.Refresh
void Meta::Voice::Samples::TTSVoices::TTSFileToggle::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSFileToggle::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Samples.TTSVoices.TTSSpeakerEffectSelect
#include "Meta/Voice/Samples/TTSVoices/TTSSpeakerEffectSelect.hpp"
// Including type: Meta.Voice.Samples.TTSVoices.SimpleDropdownList
#include "Meta/Voice/Samples/TTSVoices/SimpleDropdownList.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String NONE_ID
::StringW Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::_get_NONE_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::_get_NONE_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.Voice.Samples.TTSVoices", "TTSSpeakerEffectSelect", "NONE_ID"));
}
// Autogenerated static field setter
// Set static field: static private System.String NONE_ID
void Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::_set_NONE_ID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::_set_NONE_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice.Samples.TTSVoices", "TTSSpeakerEffectSelect", "NONE_ID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] CHARACTER_IDS
::ArrayW<::StringW> Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::_get_CHARACTER_IDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::_get_CHARACTER_IDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("Meta.Voice.Samples.TTSVoices", "TTSSpeakerEffectSelect", "CHARACTER_IDS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] CHARACTER_IDS
void Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::_set_CHARACTER_IDS(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::_set_CHARACTER_IDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice.Samples.TTSVoices", "TTSSpeakerEffectSelect", "CHARACTER_IDS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] ENVIRONMENT_IDS
::ArrayW<::StringW> Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::_get_ENVIRONMENT_IDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::_get_ENVIRONMENT_IDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("Meta.Voice.Samples.TTSVoices", "TTSSpeakerEffectSelect", "ENVIRONMENT_IDS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] ENVIRONMENT_IDS
void Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::_set_ENVIRONMENT_IDS(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::_set_ENVIRONMENT_IDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Voice.Samples.TTSVoices", "TTSSpeakerEffectSelect", "ENVIRONMENT_IDS", value));
}
// Autogenerated instance field getter
// Get instance field: private Meta.Voice.Samples.TTSVoices.SimpleDropdownList _characterDropdown
[[deprecated("Use field access instead!")]] ::Meta::Voice::Samples::TTSVoices::SimpleDropdownList*& Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::dyn__characterDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::dyn__characterDropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characterDropdown"))->offset;
  return *reinterpret_cast<::Meta::Voice::Samples::TTSVoices::SimpleDropdownList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.Voice.Samples.TTSVoices.SimpleDropdownList _environmentDropdown
[[deprecated("Use field access instead!")]] ::Meta::Voice::Samples::TTSVoices::SimpleDropdownList*& Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::dyn__environmentDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::dyn__environmentDropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentDropdown"))->offset;
  return *reinterpret_cast<::Meta::Voice::Samples::TTSVoices::SimpleDropdownList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerEffectSelect.RefreshDropdowns
void Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::RefreshDropdowns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::RefreshDropdowns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshDropdowns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerEffectSelect.RefreshDropdown
void Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::RefreshDropdown(::StringW id, ::Meta::Voice::Samples::TTSVoices::SimpleDropdownList* dropdown, ::ArrayW<::StringW> options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::RefreshDropdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshDropdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(dropdown), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, dropdown, options);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerEffectSelect.OnCharacterSelected
void Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::OnCharacterSelected(int newIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::OnCharacterSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCharacterSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newIndex);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerEffectSelect.OnEnvironmentSelected
void Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::OnEnvironmentSelected(int newIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::OnEnvironmentSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnvironmentSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newIndex);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerEffectSelect.RefreshSsml
void Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::RefreshSsml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::RefreshSsml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSsml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerEffectSelect..cctor
void Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Voice.Samples.TTSVoices", "TTSSpeakerEffectSelect", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerEffectSelect.OnEnable
void Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerEffectSelect.OnDisable
void Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerEffectSelect::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput
#include "Meta/Voice/Samples/TTSVoices/TTSSpeakerInput.hpp"
// Including type: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput/<SpeakAsync>d__18
#include "Meta/Voice/Samples/TTSVoices/TTSSpeakerInput_-SpeakAsync-d__18.hpp"
// Including type: Meta.WitAi.TTS.Utilities.TTSSpeaker
#include "Meta/WitAi/TTS/Utilities/TTSSpeaker.hpp"
// Including type: UnityEngine.UI.InputField
#include "UnityEngine/UI/InputField.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.TTS.Utilities.TTSSpeaker _speaker
[[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Utilities::TTSSpeaker*& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__speaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__speaker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speaker"))->offset;
  return *reinterpret_cast<::Meta::WitAi::TTS::Utilities::TTSSpeaker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.InputField _input
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::InputField*& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_input"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::InputField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _stopButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__stopButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__stopButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stopButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _pauseButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__pauseButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__pauseButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _speakButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__speakButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__speakButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speakButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _queueButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__queueButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__queueButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_queueButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _asyncToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__asyncToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__asyncToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _asyncClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__asyncClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__asyncClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _dateId
[[deprecated("Use field access instead!")]] ::StringW& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__dateId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__dateId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _queuedText
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__queuedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__queuedText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_queuedText"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _voice
[[deprecated("Use field access instead!")]] ::StringW& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__voice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__voice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_voice"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _loading
[[deprecated("Use field access instead!")]] bool& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__loading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__loading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _speaking
[[deprecated("Use field access instead!")]] bool& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__speaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__speaking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speaking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _paused
[[deprecated("Use field access instead!")]] bool& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::dyn__paused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_paused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput.OnEnable
void Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput.StopClick
void Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::StopClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::StopClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput.PauseClick
void Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::PauseClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::PauseClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput.SpeakClick
void Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::SpeakClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::SpeakClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpeakClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput.SpeakAsync
::System::Collections::IEnumerator* Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::SpeakAsync(::StringW phrase, bool queued) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::SpeakAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpeakAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(phrase), ::il2cpp_utils::ExtractType(queued)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, phrase, queued);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput.FormatText
::StringW Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::FormatText(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::FormatText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, text);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput.OnDisable
void Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput.Update
void Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput.RefreshStopButton
void Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::RefreshStopButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::RefreshStopButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshStopButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput.RefreshPauseButton
void Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::RefreshPauseButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::RefreshPauseButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshPauseButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput/<SpeakAsync>d__18
#include "Meta/Voice/Samples/TTSVoices/TTSSpeakerInput_-SpeakAsync-d__18.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean queued
[[deprecated("Use field access instead!")]] bool& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::dyn_queued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::dyn_queued");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queued"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.Voice.Samples.TTSVoices.TTSSpeakerInput <>4__this
[[deprecated("Use field access instead!")]] ::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput*& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String phrase
[[deprecated("Use field access instead!")]] ::StringW& Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::dyn_phrase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::dyn_phrase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "phrase"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput/<SpeakAsync>d__18.System.IDisposable.Dispose
void Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput/<SpeakAsync>d__18.MoveNext
bool Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput/<SpeakAsync>d__18.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput/<SpeakAsync>d__18.System.Collections.IEnumerator.Reset
void Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerInput/<SpeakAsync>d__18.System.Collections.IEnumerator.get_Current
::Il2CppObject* Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerInput::$SpeakAsync$d__18*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver
#include "Meta/Voice/Samples/TTSVoices/TTSSpeakerObserver.hpp"
// Including type: Meta.WitAi.TTS.Utilities.TTSSpeaker
#include "Meta/WitAi/TTS/Utilities/TTSSpeaker.hpp"
// Including type: Meta.WitAi.TTS.Data.TTSClipData
#include "Meta/WitAi/TTS/Data/TTSClipData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.TTS.Utilities.TTSSpeaker _speaker
[[deprecated("Use field access instead!")]] ::Meta::WitAi::TTS::Utilities::TTSSpeaker*& Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::dyn__speaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::dyn__speaker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speaker"))->offset;
  return *reinterpret_cast<::Meta::WitAi::TTS::Utilities::TTSSpeaker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver.get_Speaker
::Meta::WitAi::TTS::Utilities::TTSSpeaker* Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::get_Speaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::get_Speaker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Speaker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::TTS::Utilities::TTSSpeaker*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver.Awake
void Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver.OnEnable
void Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver.OnDisable
void Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver.OnPlaybackQueueBegin
void Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackQueueBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackQueueBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver.OnPlaybackQueueComplete
void Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackQueueComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackQueueComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver.OnLoadBegin
void Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnLoadBegin(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnLoadBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, clipData);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver.OnLoadAbort
void Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnLoadAbort(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnLoadAbort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, clipData);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver.OnLoadFailed
void Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnLoadFailed(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnLoadFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, clipData, error);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver.OnLoadSuccess
void Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnLoadSuccess(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnLoadSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, clipData);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver.OnPlaybackReady
void Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackReady(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, clipData);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver.OnPlaybackStart
void Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackStart(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, clipData);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver.OnPlaybackCancelled
void Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackCancelled(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackCancelled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, clipData, reason);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerObserver.OnPlaybackComplete
void Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackComplete(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver::OnPlaybackComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, clipData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Samples.TTSVoices.TTSSpeakerStatusLabel
#include "Meta/Voice/Samples/TTSVoices/TTSSpeakerStatusLabel.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Meta.WitAi.TTS.Utilities.TTSSpeaker
#include "Meta/WitAi/TTS/Utilities/TTSSpeaker.hpp"
// Including type: Meta.WitAi.TTS.Data.TTSClipData
#include "Meta/WitAi/TTS/Data/TTSClipData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _label
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::dyn__label() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::dyn__label");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_label"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerStatusLabel.RefreshLabel
void Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::RefreshLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::RefreshLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerStatusLabel.OnEnable
void Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerStatusLabel.OnLoadBegin
void Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnLoadBegin(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnLoadBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, clipData);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerStatusLabel.OnLoadAbort
void Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnLoadAbort(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnLoadAbort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, clipData);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerStatusLabel.OnLoadFailed
void Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnLoadFailed(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnLoadFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, clipData, error);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerStatusLabel.OnLoadSuccess
void Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnLoadSuccess(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnLoadSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, clipData);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerStatusLabel.OnPlaybackReady
void Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnPlaybackReady(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnPlaybackReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, clipData);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerStatusLabel.OnPlaybackStart
void Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnPlaybackStart(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnPlaybackStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, clipData);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerStatusLabel.OnPlaybackCancelled
void Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnPlaybackCancelled(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData, ::StringW reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnPlaybackCancelled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, clipData, reason);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerStatusLabel.OnPlaybackComplete
void Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnPlaybackComplete(::Meta::WitAi::TTS::Utilities::TTSSpeaker* speaker, ::Meta::WitAi::TTS::Data::TTSClipData* clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerStatusLabel::OnPlaybackComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, clipData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Samples.TTSVoices.TTSSpeakerVoiceSelect
#include "Meta/Voice/Samples/TTSVoices/TTSSpeakerVoiceSelect.hpp"
// Including type: Meta.Voice.Samples.TTSVoices.TTSSpeakerVoiceSelect/<>c
#include "Meta/Voice/Samples/TTSVoices/TTSSpeakerVoiceSelect_--c.hpp"
// Including type: Meta.Voice.Samples.TTSVoices.SimpleDropdownList
#include "Meta/Voice/Samples/TTSVoices/SimpleDropdownList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.Voice.Samples.TTSVoices.SimpleDropdownList _dropdown
[[deprecated("Use field access instead!")]] ::Meta::Voice::Samples::TTSVoices::SimpleDropdownList*& Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::dyn__dropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::dyn__dropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dropdown"))->offset;
  return *reinterpret_cast<::Meta::Voice::Samples::TTSVoices::SimpleDropdownList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerVoiceSelect.Update
void Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerVoiceSelect.RefreshDropdown
void Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::RefreshDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::RefreshDropdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshDropdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerVoiceSelect.OnOptionSelected
void Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::OnOptionSelected(::StringW newOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::OnOptionSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnOptionSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newOption)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newOption);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerVoiceSelect.Awake
void Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerVoiceSelect.OnEnable
void Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerVoiceSelect.OnDisable
void Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::Samples::TTSVoices::TTSSpeakerObserver*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Voice.Samples.TTSVoices.TTSSpeakerVoiceSelect/<>c
#include "Meta/Voice/Samples/TTSVoices/TTSSpeakerVoiceSelect_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Meta.WitAi.TTS.Data.TTSVoiceSettings
#include "Meta/WitAi/TTS/Data/TTSVoiceSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Meta.Voice.Samples.TTSVoices.TTSSpeakerVoiceSelect/<>c <>9
::Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::$$c* Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::$$c*>("Meta.Voice.Samples.TTSVoices", "TTSSpeakerVoiceSelect/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Meta.Voice.Samples.TTSVoices.TTSSpeakerVoiceSelect/<>c <>9
void Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::$$c::_set_$$9(::Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.Voice.Samples.TTSVoices", "TTSSpeakerVoiceSelect/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Meta.WitAi.TTS.Data.TTSVoiceSettings,System.String> <>9__5_0
::System::Func_2<::Meta::WitAi::TTS::Data::TTSVoiceSettings*, ::StringW>* Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Meta::WitAi::TTS::Data::TTSVoiceSettings*, ::StringW>*>("Meta.Voice.Samples.TTSVoices", "TTSSpeakerVoiceSelect/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Meta.WitAi.TTS.Data.TTSVoiceSettings,System.String> <>9__5_0
void Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::$$c::_set_$$9__5_0(::System::Func_2<::Meta::WitAi::TTS::Data::TTSVoiceSettings*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.Voice.Samples.TTSVoices", "TTSSpeakerVoiceSelect/<>c", "<>9__5_0", value)));
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerVoiceSelect/<>c..cctor
void Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Voice.Samples.TTSVoices", "TTSSpeakerVoiceSelect/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.Voice.Samples.TTSVoices.TTSSpeakerVoiceSelect/<>c.<RefreshDropdown>b__5_0
::StringW Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::$$c::$RefreshDropdown$b__5_0(::Meta::WitAi::TTS::Data::TTSVoiceSettings* voiceSetting) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Voice::Samples::TTSVoices::TTSSpeakerVoiceSelect::$$c::<RefreshDropdown>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RefreshDropdown>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voiceSetting)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, voiceSetting);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1____________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1____________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1____________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1____________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1____________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Lib.MicBase
#include "Meta/WitAi/Lib/MicBase.hpp"
// Including type: Meta.WitAi.Lib.MicBase/<ReadRawAudio>d__33
#include "Meta/WitAi/Lib/MicBase_-ReadRawAudio-d__33.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: Meta.WitAi.Data.AudioEncoding
#include "Meta/WitAi/Data/AudioEncoding.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action OnStartRecording
[[deprecated("Use field access instead!")]] ::System::Action*& Meta::WitAi::Lib::MicBase::dyn_OnStartRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::dyn_OnStartRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStartRecording"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action OnStartRecordingFailed
[[deprecated("Use field access instead!")]] ::System::Action*& Meta::WitAi::Lib::MicBase::dyn_OnStartRecordingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::dyn_OnStartRecordingFailed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStartRecordingFailed"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action OnStopRecording
[[deprecated("Use field access instead!")]] ::System::Action*& Meta::WitAi::Lib::MicBase::dyn_OnStopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::dyn_OnStopRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStopRecording"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<System.Int32,System.Single[],System.Single> OnSampleReady
[[deprecated("Use field access instead!")]] ::System::Action_3<int, ::ArrayW<float>, float>*& Meta::WitAi::Lib::MicBase::dyn_OnSampleReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::dyn_OnSampleReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnSampleReady"))->offset;
  return *reinterpret_cast<::System::Action_3<int, ::ArrayW<float>, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsRecording>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Lib::MicBase::dyn_$IsRecording$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::dyn_$IsRecording$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsRecording>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Data.AudioEncoding <AudioEncoding>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::AudioEncoding*& Meta::WitAi::Lib::MicBase::dyn_$AudioEncoding$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::dyn_$AudioEncoding$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AudioEncoding>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::AudioEncoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _sampleCount
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::MicBase::dyn__sampleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::dyn__sampleCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sampleCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _reader
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& Meta::WitAi::Lib::MicBase::dyn__reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::dyn__reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reader"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.GetMicName
::StringW Meta::WitAi::Lib::MicBase::GetMicName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::GetMicName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.GetMicSampleRate
int Meta::WitAi::Lib::MicBase::GetMicSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::GetMicSampleRate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.GetMicClip
::UnityEngine::AudioClip* Meta::WitAi::Lib::MicBase::GetMicClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::GetMicClip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.get_MicPosition
int Meta::WitAi::Lib::MicBase::get_MicPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::get_MicPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.add_OnStartRecording
void Meta::WitAi::Lib::MicBase::add_OnStartRecording(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::add_OnStartRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.remove_OnStartRecording
void Meta::WitAi::Lib::MicBase::remove_OnStartRecording(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::remove_OnStartRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.add_OnStartRecordingFailed
void Meta::WitAi::Lib::MicBase::add_OnStartRecordingFailed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::add_OnStartRecordingFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.remove_OnStartRecordingFailed
void Meta::WitAi::Lib::MicBase::remove_OnStartRecordingFailed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::remove_OnStartRecordingFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.add_OnStopRecording
void Meta::WitAi::Lib::MicBase::add_OnStopRecording(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::add_OnStopRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.remove_OnStopRecording
void Meta::WitAi::Lib::MicBase::remove_OnStopRecording(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::remove_OnStopRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.add_OnSampleReady
void Meta::WitAi::Lib::MicBase::add_OnSampleReady(::System::Action_3<int, ::ArrayW<float>, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::add_OnSampleReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.remove_OnSampleReady
void Meta::WitAi::Lib::MicBase::remove_OnSampleReady(::System::Action_3<int, ::ArrayW<float>, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::remove_OnSampleReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.get_IsRecording
bool Meta::WitAi::Lib::MicBase::get_IsRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::get_IsRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.set_IsRecording
void Meta::WitAi::Lib::MicBase::set_IsRecording(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::set_IsRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.get_IsMicListening
bool Meta::WitAi::Lib::MicBase::get_IsMicListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::get_IsMicListening");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.get_IsInputAvailable
bool Meta::WitAi::Lib::MicBase::get_IsInputAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::get_IsInputAvailable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.get_AudioEncoding
::Meta::WitAi::Data::AudioEncoding* Meta::WitAi::Lib::MicBase::get_AudioEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::get_AudioEncoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::AudioEncoding*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.set_AudioEncoding
void Meta::WitAi::Lib::MicBase::set_AudioEncoding(::Meta::WitAi::Data::AudioEncoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::set_AudioEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.CheckForInput
void Meta::WitAi::Lib::MicBase::CheckForInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::CheckForInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.StartRecording
void Meta::WitAi::Lib::MicBase::StartRecording(int sampleDurationMS) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::StartRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampleDurationMS);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.ReadRawAudio
::System::Collections::IEnumerator* Meta::WitAi::Lib::MicBase::ReadRawAudio(int sampleDurationMS) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::ReadRawAudio");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, sampleDurationMS);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase.StopRecording
void Meta::WitAi::Lib::MicBase::StopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::StopRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Lib.MicBase/<ReadRawAudio>d__33
#include "Meta/WitAi/Lib/MicBase_-ReadRawAudio-d__33.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Lib.MicBase <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Lib::MicBase*& Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Lib::MicBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sampleDurationMS
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_sampleDurationMS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_sampleDurationMS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sampleDurationMS"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip <micClip>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$micClip$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$micClip$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<micClip>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] <sample>5__3
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$sample$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$sample$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sample>5__3"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <loops>5__4
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$loops$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$loops$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<loops>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <readAbsPos>5__5
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$readAbsPos$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$readAbsPos$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<readAbsPos>5__5"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <prevPos>5__6
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$prevPos$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$prevPos$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<prevPos>5__6"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <micTempTotal>5__7
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$micTempTotal$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$micTempTotal$5__7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<micTempTotal>5__7"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <micDif>5__8
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$micDif$5__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$micDif$5__8");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<micDif>5__8"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] <temp>5__9
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$temp$5__9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::dyn_$temp$5__9");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<temp>5__9"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase/<ReadRawAudio>d__33.System.IDisposable.Dispose
void Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase/<ReadRawAudio>d__33.MoveNext
bool Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase/<ReadRawAudio>d__33.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase/<ReadRawAudio>d__33.System.Collections.IEnumerator.Reset
void Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicBase/<ReadRawAudio>d__33.System.Collections.IEnumerator.get_Current
::Il2CppObject* Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::MicBase::$ReadRawAudio$d__33*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Lib.MicDebug
#include "Meta/WitAi/Lib/MicDebug.hpp"
// Including type: Meta.WitAi.Interfaces.IAudioInputSource
#include "Meta/WitAi/Interfaces/IAudioInputSource.hpp"
// Including type: System.IO.FileStream
#include "System/IO/FileStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 FLOAT_TO_SHORT
int Meta::WitAi::Lib::MicDebug::_get_FLOAT_TO_SHORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicDebug::_get_FLOAT_TO_SHORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi.Lib", "MicDebug", "FLOAT_TO_SHORT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 FLOAT_TO_SHORT
void Meta::WitAi::Lib::MicDebug::_set_FLOAT_TO_SHORT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicDebug::_set_FLOAT_TO_SHORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Lib", "MicDebug", "FLOAT_TO_SHORT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 BYTES_PER_SHORT
int Meta::WitAi::Lib::MicDebug::_get_BYTES_PER_SHORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicDebug::_get_BYTES_PER_SHORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi.Lib", "MicDebug", "BYTES_PER_SHORT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BYTES_PER_SHORT
void Meta::WitAi::Lib::MicDebug::_set_BYTES_PER_SHORT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicDebug::_set_BYTES_PER_SHORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Lib", "MicDebug", "BYTES_PER_SHORT", value));
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Interfaces.IAudioInputSource _micSource
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Interfaces::IAudioInputSource*& Meta::WitAi::Lib::MicDebug::dyn__micSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicDebug::dyn__micSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_micSource"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Interfaces::IAudioInputSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String fileDirectory
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Lib::MicDebug::dyn_fileDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicDebug::dyn_fileDirectory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileDirectory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String fileName
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Lib::MicDebug::dyn_fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicDebug::dyn_fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileStream _fileStream
[[deprecated("Use field access instead!")]] ::System::IO::FileStream*& Meta::WitAi::Lib::MicDebug::dyn__fileStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicDebug::dyn__fileStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileStream"))->offset;
  return *reinterpret_cast<::System::IO::FileStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Meta::WitAi::Lib::MicDebug::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicDebug::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Lib.MicDebug.OnEnable
void Meta::WitAi::Lib::MicDebug::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicDebug::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicDebug.OnDisable
void Meta::WitAi::Lib::MicDebug::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicDebug::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicDebug.OnDestroy
void Meta::WitAi::Lib::MicDebug::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicDebug::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicDebug.OnStartRecording
void Meta::WitAi::Lib::MicDebug::OnStartRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicDebug::OnStartRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStartRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicDebug.OnSampleReady
void Meta::WitAi::Lib::MicDebug::OnSampleReady(int sampleCount, ::ArrayW<float> sample, float levelMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicDebug::OnSampleReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSampleReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleCount), ::il2cpp_utils::ExtractType(sample), ::il2cpp_utils::ExtractType(levelMax)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampleCount, sample, levelMax);
}
// Autogenerated method: Meta.WitAi.Lib.MicDebug.OnStopRecording
void Meta::WitAi::Lib::MicDebug::OnStopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicDebug::OnStopRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStopRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.MicDebug.UnloadStream
void Meta::WitAi::Lib::MicDebug::UnloadStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::MicDebug::UnloadStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnloadStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Interfaces.IAudioInputSource
#include "Meta/WitAi/Interfaces/IAudioInputSource.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: Meta.WitAi.Data.AudioEncoding
#include "Meta/WitAi/Data/AudioEncoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputSource.add_OnStartRecording
void Meta::WitAi::Interfaces::IAudioInputSource::add_OnStartRecording(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputSource::add_OnStartRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputSource.remove_OnStartRecording
void Meta::WitAi::Interfaces::IAudioInputSource::remove_OnStartRecording(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputSource::remove_OnStartRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputSource.add_OnStartRecordingFailed
void Meta::WitAi::Interfaces::IAudioInputSource::add_OnStartRecordingFailed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputSource::add_OnStartRecordingFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputSource.remove_OnStartRecordingFailed
void Meta::WitAi::Interfaces::IAudioInputSource::remove_OnStartRecordingFailed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputSource::remove_OnStartRecordingFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputSource.add_OnSampleReady
void Meta::WitAi::Interfaces::IAudioInputSource::add_OnSampleReady(::System::Action_3<int, ::ArrayW<float>, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputSource::add_OnSampleReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputSource.remove_OnSampleReady
void Meta::WitAi::Interfaces::IAudioInputSource::remove_OnSampleReady(::System::Action_3<int, ::ArrayW<float>, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputSource::remove_OnSampleReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputSource.add_OnStopRecording
void Meta::WitAi::Interfaces::IAudioInputSource::add_OnStopRecording(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputSource::add_OnStopRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputSource.remove_OnStopRecording
void Meta::WitAi::Interfaces::IAudioInputSource::remove_OnStopRecording(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputSource::remove_OnStopRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputSource.StartRecording
void Meta::WitAi::Interfaces::IAudioInputSource::StartRecording(int sampleLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputSource::StartRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampleLen);
}
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputSource.StopRecording
void Meta::WitAi::Interfaces::IAudioInputSource::StopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputSource::StopRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputSource.get_IsRecording
bool Meta::WitAi::Interfaces::IAudioInputSource::get_IsRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputSource::get_IsRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputSource*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputSource.get_AudioEncoding
::Meta::WitAi::Data::AudioEncoding* Meta::WitAi::Interfaces::IAudioInputSource::get_AudioEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputSource::get_AudioEncoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputSource*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::AudioEncoding*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputSource.get_IsInputAvailable
bool Meta::WitAi::Interfaces::IAudioInputSource::get_IsInputAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputSource::get_IsInputAvailable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputSource*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Interfaces.IAudioInputSource.CheckForInput
void Meta::WitAi::Interfaces::IAudioInputSource::CheckForInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Interfaces::IAudioInputSource::CheckForInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Interfaces::IAudioInputSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Data.AudioEncoding
#include "Meta/WitAi/Data/AudioEncoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String encoding
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Data::AudioEncoding::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioEncoding::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 bits
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Data::AudioEncoding::dyn_bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioEncoding::dyn_bits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 samplerate
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Data::AudioEncoding::dyn_samplerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioEncoding::dyn_samplerate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "samplerate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Data.AudioEncoding/Endian endian
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::AudioEncoding::Endian& Meta::WitAi::Data::AudioEncoding::dyn_endian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioEncoding::dyn_endian");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endian"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::AudioEncoding::Endian*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 numChannels
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Data::AudioEncoding::dyn_numChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioEncoding::dyn_numChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numChannels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Data.AudioEncoding.ToString
::StringW Meta::WitAi::Data::AudioEncoding::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioEncoding::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Data.AudioEncoding/Endian
#include "Meta/WitAi/Data/AudioEncoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.Data.AudioEncoding/Endian Big
::Meta::WitAi::Data::AudioEncoding::Endian Meta::WitAi::Data::AudioEncoding::Endian::_get_Big() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioEncoding::Endian::_get_Big");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Data::AudioEncoding::Endian>("Meta.WitAi.Data", "AudioEncoding/Endian", "Big"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.Data.AudioEncoding/Endian Big
void Meta::WitAi::Data::AudioEncoding::Endian::_set_Big(::Meta::WitAi::Data::AudioEncoding::Endian value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioEncoding::Endian::_set_Big");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Data", "AudioEncoding/Endian", "Big", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.Data.AudioEncoding/Endian Little
::Meta::WitAi::Data::AudioEncoding::Endian Meta::WitAi::Data::AudioEncoding::Endian::_get_Little() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioEncoding::Endian::_get_Little");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Data::AudioEncoding::Endian>("Meta.WitAi.Data", "AudioEncoding/Endian", "Little"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.Data.AudioEncoding/Endian Little
void Meta::WitAi::Data::AudioEncoding::Endian::_set_Little(::Meta::WitAi::Data::AudioEncoding::Endian value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioEncoding::Endian::_set_Little");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Data", "AudioEncoding/Endian", "Little", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Data::AudioEncoding::Endian::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Data::AudioEncoding::Endian::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_____________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Lib.Mic
#include "Meta/WitAi/Lib/Mic.hpp"
// Including type: Meta.WitAi.Lib.Mic/<ReadRawAudio>d__70
#include "Meta/WitAi/Lib/Mic_-ReadRawAudio-d__70.hpp"
// Including type: Meta.WitAi.Data.AudioEncoding
#include "Meta/WitAi/Data/AudioEncoding.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean MIC_CLIP_LOOP
bool Meta::WitAi::Lib::Mic::_get_MIC_CLIP_LOOP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::_get_MIC_CLIP_LOOP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Meta.WitAi.Lib", "Mic", "MIC_CLIP_LOOP"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean MIC_CLIP_LOOP
void Meta::WitAi::Lib::Mic::_set_MIC_CLIP_LOOP(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::_set_MIC_CLIP_LOOP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Lib", "Mic", "MIC_CLIP_LOOP", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MIC_CLIP_CHANNELS
int Meta::WitAi::Lib::Mic::_get_MIC_CLIP_CHANNELS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::_get_MIC_CLIP_CHANNELS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi.Lib", "Mic", "MIC_CLIP_CHANNELS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MIC_CLIP_CHANNELS
void Meta::WitAi::Lib::Mic::_set_MIC_CLIP_CHANNELS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::_set_MIC_CLIP_CHANNELS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Lib", "Mic", "MIC_CLIP_CHANNELS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MS_TO_SECONDS
int Meta::WitAi::Lib::Mic::_get_MS_TO_SECONDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::_get_MS_TO_SECONDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Meta.WitAi.Lib", "Mic", "MS_TO_SECONDS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MS_TO_SECONDS
void Meta::WitAi::Lib::Mic::_set_MS_TO_SECONDS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::_set_MS_TO_SECONDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Lib", "Mic", "MS_TO_SECONDS", value));
}
// Autogenerated static field getter
// Get static field: static private Meta.WitAi.Lib.Mic m_Instance
::Meta::WitAi::Lib::Mic* Meta::WitAi::Lib::Mic::_get_m_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::_get_m_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::Lib::Mic*>("Meta.WitAi.Lib", "Mic", "m_Instance"));
}
// Autogenerated static field setter
// Set static field: static private Meta.WitAi.Lib.Mic m_Instance
void Meta::WitAi::Lib::Mic::_set_m_Instance(::Meta::WitAi::Lib::Mic* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::_set_m_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi.Lib", "Mic", "m_Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsRecording>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::Lib::Mic::dyn_$IsRecording$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::dyn_$IsRecording$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsRecording>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Meta.WitAi.Data.AudioEncoding <AudioEncoding>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::AudioEncoding*& Meta::WitAi::Lib::Mic::dyn_$AudioEncoding$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::dyn_$AudioEncoding$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AudioEncoding>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::AudioEncoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] <Sample>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Meta::WitAi::Lib::Mic::dyn_$Sample$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::dyn_$Sample$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Sample>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <SampleDurationMS>k__BackingField
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::Mic::dyn_$SampleDurationMS$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::dyn_$SampleDurationMS$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SampleDurationMS>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip <AudioClip>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& Meta::WitAi::Lib::Mic::dyn_$AudioClip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::dyn_$AudioClip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AudioClip>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _audioClipSampleRate
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::Mic::dyn__audioClipSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::dyn__audioClipSampleRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClipSampleRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _devices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Meta::WitAi::Lib::Mic::dyn__devices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::dyn__devices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_devices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <CurrentDeviceIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::Mic::dyn_$CurrentDeviceIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::dyn_$CurrentDeviceIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentDeviceIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_SampleCount
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::Mic::dyn_m_SampleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::dyn_m_SampleCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SampleCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action OnStartRecording
[[deprecated("Use field access instead!")]] ::System::Action*& Meta::WitAi::Lib::Mic::dyn_OnStartRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::dyn_OnStartRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStartRecording"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action OnStartRecordingFailed
[[deprecated("Use field access instead!")]] ::System::Action*& Meta::WitAi::Lib::Mic::dyn_OnStartRecordingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::dyn_OnStartRecordingFailed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStartRecordingFailed"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<System.Int32,System.Single[],System.Single> OnSampleReady
[[deprecated("Use field access instead!")]] ::System::Action_3<int, ::ArrayW<float>, float>*& Meta::WitAi::Lib::Mic::dyn_OnSampleReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::dyn_OnSampleReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnSampleReady"))->offset;
  return *reinterpret_cast<::System::Action_3<int, ::ArrayW<float>, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action OnStopRecording
[[deprecated("Use field access instead!")]] ::System::Action*& Meta::WitAi::Lib::Mic::dyn_OnStopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::dyn_OnStopRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStopRecording"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.get_IsRecording
bool Meta::WitAi::Lib::Mic::get_IsRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::get_IsRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.set_IsRecording
void Meta::WitAi::Lib::Mic::set_IsRecording(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::set_IsRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.get_AudioEncoding
::Meta::WitAi::Data::AudioEncoding* Meta::WitAi::Lib::Mic::get_AudioEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::get_AudioEncoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::AudioEncoding*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.get_Sample
::ArrayW<float> Meta::WitAi::Lib::Mic::get_Sample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::get_Sample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Sample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.set_Sample
void Meta::WitAi::Lib::Mic::set_Sample(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::set_Sample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Sample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.get_SampleDurationMS
int Meta::WitAi::Lib::Mic::get_SampleDurationMS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::get_SampleDurationMS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SampleDurationMS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.set_SampleDurationMS
void Meta::WitAi::Lib::Mic::set_SampleDurationMS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::set_SampleDurationMS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SampleDurationMS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.get_IsInputAvailable
bool Meta::WitAi::Lib::Mic::get_IsInputAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::get_IsInputAvailable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.CheckForInput
void Meta::WitAi::Lib::Mic::CheckForInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::CheckForInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.get_SampleLength
int Meta::WitAi::Lib::Mic::get_SampleLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::get_SampleLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SampleLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.get_AudioClip
::UnityEngine::AudioClip* Meta::WitAi::Lib::Mic::get_AudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::get_AudioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.set_AudioClip
void Meta::WitAi::Lib::Mic::set_AudioClip(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::set_AudioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.get_AudioClipSampleRate
int Meta::WitAi::Lib::Mic::get_AudioClipSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::get_AudioClipSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.set_AudioClipSampleRate
void Meta::WitAi::Lib::Mic::set_AudioClipSampleRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::set_AudioClipSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.get_Devices
::System::Collections::Generic::List_1<::StringW>* Meta::WitAi::Lib::Mic::get_Devices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::get_Devices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Devices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.get_CurrentDeviceIndex
int Meta::WitAi::Lib::Mic::get_CurrentDeviceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::get_CurrentDeviceIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentDeviceIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.set_CurrentDeviceIndex
void Meta::WitAi::Lib::Mic::set_CurrentDeviceIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::set_CurrentDeviceIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentDeviceIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.get_CurrentDeviceName
::StringW Meta::WitAi::Lib::Mic::get_CurrentDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::get_CurrentDeviceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentDeviceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.get_MicPosition
int Meta::WitAi::Lib::Mic::get_MicPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::get_MicPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.add_OnStartRecording
void Meta::WitAi::Lib::Mic::add_OnStartRecording(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::add_OnStartRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.remove_OnStartRecording
void Meta::WitAi::Lib::Mic::remove_OnStartRecording(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::remove_OnStartRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.add_OnStartRecordingFailed
void Meta::WitAi::Lib::Mic::add_OnStartRecordingFailed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::add_OnStartRecordingFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.remove_OnStartRecordingFailed
void Meta::WitAi::Lib::Mic::remove_OnStartRecordingFailed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::remove_OnStartRecordingFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.add_OnSampleReady
void Meta::WitAi::Lib::Mic::add_OnSampleReady(::System::Action_3<int, ::ArrayW<float>, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::add_OnSampleReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.remove_OnSampleReady
void Meta::WitAi::Lib::Mic::remove_OnSampleReady(::System::Action_3<int, ::ArrayW<float>, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::remove_OnSampleReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.add_OnStopRecording
void Meta::WitAi::Lib::Mic::add_OnStopRecording(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::add_OnStopRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.remove_OnStopRecording
void Meta::WitAi::Lib::Mic::remove_OnStopRecording(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::remove_OnStopRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.get_Instance
::Meta::WitAi::Lib::Mic* Meta::WitAi::Lib::Mic::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Lib", "Mic", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Lib::Mic*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.OnEnable
void Meta::WitAi::Lib::Mic::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.OnDisable
void Meta::WitAi::Lib::Mic::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.OnApplicationFocus
void Meta::WitAi::Lib::Mic::OnApplicationFocus(bool hasFocus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasFocus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hasFocus);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.OnApplicationPause
void Meta::WitAi::Lib::Mic::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pauseStatus);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.OnDestroy
void Meta::WitAi::Lib::Mic::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.SafeStartMicrophone
void Meta::WitAi::Lib::Mic::SafeStartMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::SafeStartMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeStartMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.RefreshMicDevices
void Meta::WitAi::Lib::Mic::RefreshMicDevices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::RefreshMicDevices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshMicDevices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.ChangeDevice
void Meta::WitAi::Lib::Mic::ChangeDevice(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::ChangeDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.StartMicrophone
void Meta::WitAi::Lib::Mic::StartMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::StartMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.StopMicrophone
void Meta::WitAi::Lib::Mic::StopMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::StopMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.StartRecording
void Meta::WitAi::Lib::Mic::StartRecording(int sampleLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::StartRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampleLen);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.StopRecording
void Meta::WitAi::Lib::Mic::StopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::StopRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.ReadRawAudio
::System::Collections::IEnumerator* Meta::WitAi::Lib::Mic::ReadRawAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::ReadRawAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRawAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.MicrophoneIsRecording
bool Meta::WitAi::Lib::Mic::MicrophoneIsRecording(::StringW device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::MicrophoneIsRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MicrophoneIsRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, device);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.MicrophoneGetDevices
::ArrayW<::StringW> Meta::WitAi::Lib::Mic::MicrophoneGetDevices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::MicrophoneGetDevices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MicrophoneGetDevices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic.MicrophoneGetPosition
int Meta::WitAi::Lib::Mic::MicrophoneGetPosition(::StringW device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::MicrophoneGetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MicrophoneGetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, device);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.Lib.Mic/<ReadRawAudio>d__70
#include "Meta/WitAi/Lib/Mic_-ReadRawAudio-d__70.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Lib.Mic <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Lib::Mic*& Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Lib::Mic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <loops>5__2
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::dyn_$loops$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::dyn_$loops$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<loops>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <readAbsPos>5__3
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::dyn_$readAbsPos$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::dyn_$readAbsPos$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<readAbsPos>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <prevPos>5__4
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::dyn_$prevPos$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::dyn_$prevPos$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<prevPos>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] <temp>5__5
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::dyn_$temp$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::dyn_$temp$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<temp>5__5"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Lib.Mic/<ReadRawAudio>d__70.System.IDisposable.Dispose
void Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic/<ReadRawAudio>d__70.MoveNext
bool Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic/<ReadRawAudio>d__70.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic/<ReadRawAudio>d__70.System.Collections.IEnumerator.Reset
void Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.Mic/<ReadRawAudio>d__70.System.Collections.IEnumerator.get_Current
::Il2CppObject* Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Lib::Mic::$ReadRawAudio$d__70*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1______________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.ConduitActionAttribute
#include "Meta/Conduit/ConduitActionAttribute.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Single DEFAULT_MIN_CONFIDENCE
float Meta::Conduit::ConduitActionAttribute::_get_DEFAULT_MIN_CONFIDENCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::_get_DEFAULT_MIN_CONFIDENCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Meta.Conduit", "ConduitActionAttribute", "DEFAULT_MIN_CONFIDENCE"));
}
// Autogenerated static field setter
// Set static field: static protected System.Single DEFAULT_MIN_CONFIDENCE
void Meta::Conduit::ConduitActionAttribute::_set_DEFAULT_MIN_CONFIDENCE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::_set_DEFAULT_MIN_CONFIDENCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Conduit", "ConduitActionAttribute", "DEFAULT_MIN_CONFIDENCE", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Single DEFAULT_MAX_CONFIDENCE
float Meta::Conduit::ConduitActionAttribute::_get_DEFAULT_MAX_CONFIDENCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::_get_DEFAULT_MAX_CONFIDENCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Meta.Conduit", "ConduitActionAttribute", "DEFAULT_MAX_CONFIDENCE"));
}
// Autogenerated static field setter
// Set static field: static protected System.Single DEFAULT_MAX_CONFIDENCE
void Meta::Conduit::ConduitActionAttribute::_set_DEFAULT_MAX_CONFIDENCE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::_set_DEFAULT_MAX_CONFIDENCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Conduit", "ConduitActionAttribute", "DEFAULT_MAX_CONFIDENCE", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <Intent>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ConduitActionAttribute::dyn_$Intent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::dyn_$Intent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Intent>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <MinConfidence>k__BackingField
[[deprecated("Use field access instead!")]] float& Meta::Conduit::ConduitActionAttribute::dyn_$MinConfidence$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::dyn_$MinConfidence$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MinConfidence>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <MaxConfidence>k__BackingField
[[deprecated("Use field access instead!")]] float& Meta::Conduit::ConduitActionAttribute::dyn_$MaxConfidence$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::dyn_$MaxConfidence$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxConfidence>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> <Aliases>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Meta::Conduit::ConduitActionAttribute::dyn_$Aliases$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::dyn_$Aliases$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Aliases>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ValidatePartial>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::Conduit::ConduitActionAttribute::dyn_$ValidatePartial$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::dyn_$ValidatePartial$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ValidatePartial>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.ConduitActionAttribute.get_Intent
::StringW Meta::Conduit::ConduitActionAttribute::get_Intent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::get_Intent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Intent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ConduitActionAttribute.set_Intent
void Meta::Conduit::ConduitActionAttribute::set_Intent(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::set_Intent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Intent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ConduitActionAttribute.get_MinConfidence
float Meta::Conduit::ConduitActionAttribute::get_MinConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::get_MinConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ConduitActionAttribute.set_MinConfidence
void Meta::Conduit::ConduitActionAttribute::set_MinConfidence(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::set_MinConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ConduitActionAttribute.get_MaxConfidence
float Meta::Conduit::ConduitActionAttribute::get_MaxConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::get_MaxConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ConduitActionAttribute.set_MaxConfidence
void Meta::Conduit::ConduitActionAttribute::set_MaxConfidence(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::set_MaxConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ConduitActionAttribute.get_Aliases
::System::Collections::Generic::List_1<::StringW>* Meta::Conduit::ConduitActionAttribute::get_Aliases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::get_Aliases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Aliases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ConduitActionAttribute.set_Aliases
void Meta::Conduit::ConduitActionAttribute::set_Aliases(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::set_Aliases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Aliases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ConduitActionAttribute.get_ValidatePartial
bool Meta::Conduit::ConduitActionAttribute::get_ValidatePartial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::get_ValidatePartial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidatePartial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ConduitActionAttribute.set_ValidatePartial
void Meta::Conduit::ConduitActionAttribute::set_ValidatePartial(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitActionAttribute::set_ValidatePartial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ValidatePartial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.ConduitAssemblyAttribute
#include "Meta/Conduit/ConduitAssemblyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.ConduitEntityAttribute
#include "Meta/Conduit/ConduitEntityAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ConduitEntityAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitEntityAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <ID>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ConduitEntityAttribute::dyn_$ID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitEntityAttribute::dyn_$ID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ID>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.ConduitEntityAttribute.get_Name
::StringW Meta::Conduit::ConduitEntityAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitEntityAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ConduitEntityAttribute.get_ID
::StringW Meta::Conduit::ConduitEntityAttribute::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitEntityAttribute::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.ConduitParameterAttribute
#include "Meta/Conduit/ConduitParameterAttribute.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.String> <Examples>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Meta::Conduit::ConduitParameterAttribute::dyn_$Examples$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitParameterAttribute::dyn_$Examples$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Examples>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.String> <Aliases>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Meta::Conduit::ConduitParameterAttribute::dyn_$Aliases$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitParameterAttribute::dyn_$Aliases$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Aliases>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.ConduitParameterAttribute.get_Examples
::System::Collections::Generic::List_1<::StringW>* Meta::Conduit::ConduitParameterAttribute::get_Examples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitParameterAttribute::get_Examples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Examples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ConduitParameterAttribute.get_Aliases
::System::Collections::Generic::List_1<::StringW>* Meta::Conduit::ConduitParameterAttribute::get_Aliases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitParameterAttribute::get_Aliases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Aliases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.ConduitValueAttribute
#include "Meta/Conduit/ConduitValueAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String[] <Aliases>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Meta::Conduit::ConduitValueAttribute::dyn_$Aliases$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitValueAttribute::dyn_$Aliases$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Aliases>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.ConduitValueAttribute.get_Aliases
::ArrayW<::StringW> Meta::Conduit::ConduitValueAttribute::get_Aliases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitValueAttribute::get_Aliases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Aliases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.HandleEntityResolutionFailure
#include "Meta/Conduit/HandleEntityResolutionFailure.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.ConduitDispatcher
#include "Meta/Conduit/ConduitDispatcher.hpp"
// Including type: Meta.Conduit.ConduitDispatcher/InvocationContextFilter
#include "Meta/Conduit/ConduitDispatcher_InvocationContextFilter.hpp"
// Including type: Meta.Conduit.Manifest
#include "Meta/Conduit/Manifest.hpp"
// Including type: Meta.Conduit.IManifestLoader
#include "Meta/Conduit/IManifestLoader.hpp"
// Including type: Meta.Conduit.IInstanceResolver
#include "Meta/Conduit/IInstanceResolver.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Meta.Conduit.IParameterProvider
#include "Meta/Conduit/IParameterProvider.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Meta.Conduit.InvocationContext
#include "Meta/Conduit/InvocationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.Conduit.Manifest <Manifest>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::Conduit::Manifest*& Meta::Conduit::ConduitDispatcher::dyn_$Manifest$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::dyn_$Manifest$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Manifest>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::Conduit::Manifest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Meta.Conduit.IManifestLoader _manifestLoader
[[deprecated("Use field access instead!")]] ::Meta::Conduit::IManifestLoader*& Meta::Conduit::ConduitDispatcher::dyn__manifestLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::dyn__manifestLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_manifestLoader"))->offset;
  return *reinterpret_cast<::Meta::Conduit::IManifestLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Meta.Conduit.IInstanceResolver _instanceResolver
[[deprecated("Use field access instead!")]] ::Meta::Conduit::IInstanceResolver*& Meta::Conduit::ConduitDispatcher::dyn__instanceResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::dyn__instanceResolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instanceResolver"))->offset;
  return *reinterpret_cast<::Meta::Conduit::IInstanceResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> _parameterToRoleMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Meta::Conduit::ConduitDispatcher::dyn__parameterToRoleMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::dyn__parameterToRoleMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parameterToRoleMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _ignoredActionIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& Meta::Conduit::ConduitDispatcher::dyn__ignoredActionIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::dyn__ignoredActionIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoredActionIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.ConduitDispatcher.get_Manifest
::Meta::Conduit::Manifest* Meta::Conduit::ConduitDispatcher::get_Manifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::get_Manifest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ConduitDispatcher*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Conduit::Manifest*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ConduitDispatcher.set_Manifest
void Meta::Conduit::ConduitDispatcher::set_Manifest(::Meta::Conduit::Manifest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::set_Manifest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Manifest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ConduitDispatcher.Initialize
void Meta::Conduit::ConduitDispatcher::Initialize(::StringW manifestFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ConduitDispatcher*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, manifestFilePath);
}
// Autogenerated method: Meta.Conduit.ConduitDispatcher.InvokeAction
bool Meta::Conduit::ConduitDispatcher::InvokeAction(::Meta::Conduit::IParameterProvider* parameterProvider, ::StringW actionId, bool relaxed, float confidence, bool partial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::InvokeAction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ConduitDispatcher*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, parameterProvider, actionId, relaxed, confidence, partial);
}
// Autogenerated method: Meta.Conduit.ConduitDispatcher.InvokeError
bool Meta::Conduit::ConduitDispatcher::InvokeError(::StringW actionId, ::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::InvokeError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ConduitDispatcher*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, actionId, exception);
}
// Autogenerated method: Meta.Conduit.ConduitDispatcher.InvokeMethod
bool Meta::Conduit::ConduitDispatcher::InvokeMethod(::Meta::Conduit::InvocationContext* invocationContext, ::Meta::Conduit::IParameterProvider* parameterProvider, bool relaxed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::InvokeMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invocationContext), ::il2cpp_utils::ExtractType(parameterProvider), ::il2cpp_utils::ExtractType(relaxed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, invocationContext, parameterProvider, relaxed);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.ConduitDispatcher/InvocationContextFilter
#include "Meta/Conduit/ConduitDispatcher_InvocationContextFilter.hpp"
// Including type: Meta.Conduit.ConduitDispatcher/InvocationContextFilter/<>c__DisplayClass4_0
#include "Meta/Conduit/ConduitDispatcher_InvocationContextFilter_--c__DisplayClass4_0.hpp"
// Including type: Meta.Conduit.ConduitDispatcher/InvocationContextFilter/<>c__DisplayClass5_0
#include "Meta/Conduit/ConduitDispatcher_InvocationContextFilter_--c__DisplayClass5_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Meta.Conduit.InvocationContext
#include "Meta/Conduit/InvocationContext.hpp"
// Including type: Meta.Conduit.IParameterProvider
#include "Meta/Conduit/IParameterProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Meta.Conduit.InvocationContext> _actionContexts
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>*& Meta::Conduit::ConduitDispatcher::InvocationContextFilter::dyn__actionContexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::InvocationContextFilter::dyn__actionContexts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionContexts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Meta.Conduit.IParameterProvider _parameterProvider
[[deprecated("Use field access instead!")]] ::Meta::Conduit::IParameterProvider*& Meta::Conduit::ConduitDispatcher::InvocationContextFilter::dyn__parameterProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::InvocationContextFilter::dyn__parameterProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parameterProvider"))->offset;
  return *reinterpret_cast<::Meta::Conduit::IParameterProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _relaxed
[[deprecated("Use field access instead!")]] bool& Meta::Conduit::ConduitDispatcher::InvocationContextFilter::dyn__relaxed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::InvocationContextFilter::dyn__relaxed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relaxed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.ConduitDispatcher/InvocationContextFilter.ResolveInvocationContexts
::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>* Meta::Conduit::ConduitDispatcher::InvocationContextFilter::ResolveInvocationContexts(::StringW actionId, float confidence, bool partial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::InvocationContextFilter::ResolveInvocationContexts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveInvocationContexts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actionId), ::il2cpp_utils::ExtractType(confidence), ::il2cpp_utils::ExtractType(partial)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>*, false>(this, ___internal__method, actionId, confidence, partial);
}
// Autogenerated method: Meta.Conduit.ConduitDispatcher/InvocationContextFilter.CompatibleInvocationContext
bool Meta::Conduit::ConduitDispatcher::InvocationContextFilter::CompatibleInvocationContext(::Meta::Conduit::InvocationContext* invocationContext, float confidence, bool partial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::InvocationContextFilter::CompatibleInvocationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompatibleInvocationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invocationContext), ::il2cpp_utils::ExtractType(confidence), ::il2cpp_utils::ExtractType(partial)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, invocationContext, confidence, partial);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.ConduitDispatcher/InvocationContextFilter/<>c__DisplayClass4_0
#include "Meta/Conduit/ConduitDispatcher_InvocationContextFilter_--c__DisplayClass4_0.hpp"
// Including type: Meta.Conduit.InvocationContext
#include "Meta/Conduit/InvocationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.Conduit.ConduitDispatcher/InvocationContextFilter <>4__this
[[deprecated("Use field access instead!")]] ::Meta::Conduit::ConduitDispatcher::InvocationContextFilter*& Meta::Conduit::ConduitDispatcher::InvocationContextFilter::$$c__DisplayClass4_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::InvocationContextFilter::$$c__DisplayClass4_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::Conduit::ConduitDispatcher::InvocationContextFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single confidence
[[deprecated("Use field access instead!")]] float& Meta::Conduit::ConduitDispatcher::InvocationContextFilter::$$c__DisplayClass4_0::dyn_confidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::InvocationContextFilter::$$c__DisplayClass4_0::dyn_confidence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "confidence"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean partial
[[deprecated("Use field access instead!")]] bool& Meta::Conduit::ConduitDispatcher::InvocationContextFilter::$$c__DisplayClass4_0::dyn_partial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::InvocationContextFilter::$$c__DisplayClass4_0::dyn_partial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.ConduitDispatcher/InvocationContextFilter/<>c__DisplayClass4_0.<ResolveInvocationContexts>b__0
bool Meta::Conduit::ConduitDispatcher::InvocationContextFilter::$$c__DisplayClass4_0::$ResolveInvocationContexts$b__0(::Meta::Conduit::InvocationContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::InvocationContextFilter::$$c__DisplayClass4_0::<ResolveInvocationContexts>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ResolveInvocationContexts>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.ConduitDispatcher/InvocationContextFilter/<>c__DisplayClass5_0
#include "Meta/Conduit/ConduitDispatcher_InvocationContextFilter_--c__DisplayClass5_0.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.HashSet`1<System.String> exactMatches
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& Meta::Conduit::ConduitDispatcher::InvocationContextFilter::$$c__DisplayClass5_0::dyn_exactMatches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::InvocationContextFilter::$$c__DisplayClass5_0::dyn_exactMatches");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exactMatches"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<System.String,System.Boolean> <>9__0
[[deprecated("Use field access instead!")]] ::System::Func_2<::StringW, bool>*& Meta::Conduit::ConduitDispatcher::InvocationContextFilter::$$c__DisplayClass5_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::InvocationContextFilter::$$c__DisplayClass5_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::System::Func_2<::StringW, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.ConduitDispatcher/InvocationContextFilter/<>c__DisplayClass5_0.<CompatibleInvocationContext>b__0
bool Meta::Conduit::ConduitDispatcher::InvocationContextFilter::$$c__DisplayClass5_0::$CompatibleInvocationContext$b__0(::StringW parameterName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcher::InvocationContextFilter::$$c__DisplayClass5_0::<CompatibleInvocationContext>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CompatibleInvocationContext>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameterName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, parameterName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.ConduitDispatcherFactory
#include "Meta/Conduit/ConduitDispatcherFactory.hpp"
// Including type: Meta.Conduit.IInstanceResolver
#include "Meta/Conduit/IInstanceResolver.hpp"
// Including type: Meta.Conduit.IParameterProvider
#include "Meta/Conduit/IParameterProvider.hpp"
// Including type: Meta.Conduit.IConduitDispatcher
#include "Meta/Conduit/IConduitDispatcher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Meta.Conduit.IConduitDispatcher Instance
::Meta::Conduit::IConduitDispatcher* Meta::Conduit::ConduitDispatcherFactory::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcherFactory::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::Conduit::IConduitDispatcher*>("Meta.Conduit", "ConduitDispatcherFactory", "Instance"));
}
// Autogenerated static field setter
// Set static field: static private Meta.Conduit.IConduitDispatcher Instance
void Meta::Conduit::ConduitDispatcherFactory::_set_Instance(::Meta::Conduit::IConduitDispatcher* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcherFactory::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Conduit", "ConduitDispatcherFactory", "Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly Meta.Conduit.IInstanceResolver _instanceResolver
[[deprecated("Use field access instead!")]] ::Meta::Conduit::IInstanceResolver*& Meta::Conduit::ConduitDispatcherFactory::dyn__instanceResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcherFactory::dyn__instanceResolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instanceResolver"))->offset;
  return *reinterpret_cast<::Meta::Conduit::IInstanceResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Meta.Conduit.IParameterProvider _parameterProvider
[[deprecated("Use field access instead!")]] ::Meta::Conduit::IParameterProvider*& Meta::Conduit::ConduitDispatcherFactory::dyn__parameterProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcherFactory::dyn__parameterProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parameterProvider"))->offset;
  return *reinterpret_cast<::Meta::Conduit::IParameterProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.ConduitDispatcherFactory.GetDispatcher
::Meta::Conduit::IConduitDispatcher* Meta::Conduit::ConduitDispatcherFactory::GetDispatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitDispatcherFactory::GetDispatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDispatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Conduit::IConduitDispatcher*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.ConduitUtilities
#include "Meta/Conduit/ConduitUtilities.hpp"
// Including type: Meta.Conduit.ConduitUtilities/ProgressDelegate
#include "Meta/Conduit/ConduitUtilities_ProgressDelegate.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Text.RegularExpressions.Regex UnderscoreSplitter
::System::Text::RegularExpressions::Regex* Meta::Conduit::ConduitUtilities::_get_UnderscoreSplitter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitUtilities::_get_UnderscoreSplitter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Regex*>("Meta.Conduit", "ConduitUtilities", "UnderscoreSplitter"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Text.RegularExpressions.Regex UnderscoreSplitter
void Meta::Conduit::ConduitUtilities::_set_UnderscoreSplitter(::System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitUtilities::_set_UnderscoreSplitter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Conduit", "ConduitUtilities", "UnderscoreSplitter", value));
}
// Autogenerated method: Meta.Conduit.ConduitUtilities.DelimitWithUnderscores
::StringW Meta::Conduit::ConduitUtilities::DelimitWithUnderscores(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitUtilities::DelimitWithUnderscores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Conduit", "ConduitUtilities", "DelimitWithUnderscores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: Meta.Conduit.ConduitUtilities.ContainsIgnoringWhitespace
bool Meta::Conduit::ConduitUtilities::ContainsIgnoringWhitespace(::StringW stringToSearch, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitUtilities::ContainsIgnoringWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Conduit", "ConduitUtilities", "ContainsIgnoringWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringToSearch), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringToSearch, value);
}
// Autogenerated method: Meta.Conduit.ConduitUtilities.StripWhiteSpace
::StringW Meta::Conduit::ConduitUtilities::StripWhiteSpace(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitUtilities::StripWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Conduit", "ConduitUtilities", "StripWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: Meta.Conduit.ConduitUtilities.GetEntityEnumName
::StringW Meta::Conduit::ConduitUtilities::GetEntityEnumName(::StringW entityRole) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitUtilities::GetEntityEnumName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Conduit", "ConduitUtilities", "GetEntityEnumName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entityRole)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, entityRole);
}
// Autogenerated method: Meta.Conduit.ConduitUtilities.GetEntityEnumValue
::StringW Meta::Conduit::ConduitUtilities::GetEntityEnumValue(::StringW entityValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitUtilities::GetEntityEnumValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Conduit", "ConduitUtilities", "GetEntityEnumValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entityValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, entityValue);
}
// Autogenerated method: Meta.Conduit.ConduitUtilities.SanitizeName
::StringW Meta::Conduit::ConduitUtilities::SanitizeName(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitUtilities::SanitizeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Conduit", "ConduitUtilities", "SanitizeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: Meta.Conduit.ConduitUtilities.SanitizeString
::StringW Meta::Conduit::ConduitUtilities::SanitizeString(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitUtilities::SanitizeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Conduit", "ConduitUtilities", "SanitizeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: Meta.Conduit.ConduitUtilities..cctor
void Meta::Conduit::ConduitUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Conduit", "ConduitUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.Conduit.ConduitUtilities/ProgressDelegate
#include "Meta/Conduit/ConduitUtilities_ProgressDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Conduit.ConduitUtilities/ProgressDelegate.Invoke
void Meta::Conduit::ConduitUtilities::ProgressDelegate::Invoke(::StringW status, float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitUtilities::ProgressDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ConduitUtilities::ProgressDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, status, progress);
}
// Autogenerated method: Meta.Conduit.ConduitUtilities/ProgressDelegate.BeginInvoke
::System::IAsyncResult* Meta::Conduit::ConduitUtilities::ProgressDelegate::BeginInvoke(::StringW status, float progress, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitUtilities::ProgressDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ConduitUtilities::ProgressDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, status, progress, callback, object);
}
// Autogenerated method: Meta.Conduit.ConduitUtilities/ProgressDelegate.EndInvoke
void Meta::Conduit::ConduitUtilities::ProgressDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitUtilities::ProgressDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ConduitUtilities::ProgressDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.Conduit.ConduitParameterValue
#include "Meta/Conduit/ConduitParameterValue.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Object Value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Meta::Conduit::ConduitParameterValue::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitParameterValue::dyn_Value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type DataType
[[deprecated("Use field access instead!")]] ::System::Type*& Meta::Conduit::ConduitParameterValue::dyn_DataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitParameterValue::dyn_DataType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DataType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.ConduitParameterValue..ctor
Meta::Conduit::ConduitParameterValue::ConduitParameterValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ConduitParameterValue::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ConduitParameterValue..ctor
// ABORTED elsewhere.  Meta::Conduit::ConduitParameterValue::ConduitParameterValue(::Il2CppObject* value, ::System::Type* dataType)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.IManifestLoader
#include "Meta/Conduit/IManifestLoader.hpp"
// Including type: Meta.Conduit.Manifest
#include "Meta/Conduit/Manifest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Conduit.IManifestLoader.LoadManifest
::Meta::Conduit::Manifest* Meta::Conduit::IManifestLoader::LoadManifest(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IManifestLoader::LoadManifest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IManifestLoader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Conduit::Manifest*, false>(this, ___internal__method, filePath);
}
// Autogenerated method: Meta.Conduit.IManifestLoader.LoadManifestFromString
::Meta::Conduit::Manifest* Meta::Conduit::IManifestLoader::LoadManifestFromString(::StringW manifestText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IManifestLoader::LoadManifestFromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IManifestLoader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Conduit::Manifest*, false>(this, ___internal__method, manifestText);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.IManifestMethod
#include "Meta/Conduit/IManifestMethod.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Meta.Conduit.ManifestParameter
#include "Meta/Conduit/ManifestParameter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Conduit.IManifestMethod.get_ID
::StringW Meta::Conduit::IManifestMethod::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IManifestMethod::get_ID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IManifestMethod*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.IManifestMethod.set_ID
void Meta::Conduit::IManifestMethod::set_ID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IManifestMethod::set_ID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IManifestMethod*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.IManifestMethod.get_Parameters
::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>* Meta::Conduit::IManifestMethod::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IManifestMethod::get_Parameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IManifestMethod*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.IManifestMethod.set_Parameters
void Meta::Conduit::IManifestMethod::set_Parameters(::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IManifestMethod::set_Parameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IManifestMethod*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.IManifestMethod.get_Assembly
::StringW Meta::Conduit::IManifestMethod::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IManifestMethod::get_Assembly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IManifestMethod*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.IManifestMethod.set_Assembly
void Meta::Conduit::IManifestMethod::set_Assembly(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IManifestMethod::set_Assembly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IManifestMethod*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.InvocationContext
#include "Meta/Conduit/InvocationContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type <Type>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Meta::Conduit::InvocationContext::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodInfo <MethodInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& Meta::Conduit::InvocationContext::dyn_$MethodInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::dyn_$MethodInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MethodInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <MinConfidence>k__BackingField
[[deprecated("Use field access instead!")]] float& Meta::Conduit::InvocationContext::dyn_$MinConfidence$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::dyn_$MinConfidence$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MinConfidence>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <MaxConfidence>k__BackingField
[[deprecated("Use field access instead!")]] float& Meta::Conduit::InvocationContext::dyn_$MaxConfidence$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::dyn_$MaxConfidence$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxConfidence>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ValidatePartial>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::Conduit::InvocationContext::dyn_$ValidatePartial$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::dyn_$ValidatePartial$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ValidatePartial>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.String> <ParameterMap>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Meta::Conduit::InvocationContext::dyn_$ParameterMap$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::dyn_$ParameterMap$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ParameterMap>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type <CustomAttributeType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Meta::Conduit::InvocationContext::dyn_$CustomAttributeType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::dyn_$CustomAttributeType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CustomAttributeType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.InvocationContext.get_Type
::System::Type* Meta::Conduit::InvocationContext::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.InvocationContext.set_Type
void Meta::Conduit::InvocationContext::set_Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::set_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.InvocationContext.get_MethodInfo
::System::Reflection::MethodInfo* Meta::Conduit::InvocationContext::get_MethodInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::get_MethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.InvocationContext.set_MethodInfo
void Meta::Conduit::InvocationContext::set_MethodInfo(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::set_MethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.InvocationContext.get_MinConfidence
float Meta::Conduit::InvocationContext::get_MinConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::get_MinConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.InvocationContext.set_MinConfidence
void Meta::Conduit::InvocationContext::set_MinConfidence(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::set_MinConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.InvocationContext.get_MaxConfidence
float Meta::Conduit::InvocationContext::get_MaxConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::get_MaxConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.InvocationContext.set_MaxConfidence
void Meta::Conduit::InvocationContext::set_MaxConfidence(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::set_MaxConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.InvocationContext.get_ValidatePartial
bool Meta::Conduit::InvocationContext::get_ValidatePartial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::get_ValidatePartial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidatePartial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.InvocationContext.set_ValidatePartial
void Meta::Conduit::InvocationContext::set_ValidatePartial(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::set_ValidatePartial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ValidatePartial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.InvocationContext.get_ParameterMap
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Meta::Conduit::InvocationContext::get_ParameterMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::get_ParameterMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.InvocationContext.set_ParameterMap
void Meta::Conduit::InvocationContext::set_ParameterMap(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::set_ParameterMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParameterMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.InvocationContext.get_CustomAttributeType
::System::Type* Meta::Conduit::InvocationContext::get_CustomAttributeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::get_CustomAttributeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomAttributeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.InvocationContext.set_CustomAttributeType
void Meta::Conduit::InvocationContext::set_CustomAttributeType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::InvocationContext::set_CustomAttributeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CustomAttributeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.Conduit.Manifest
#include "Meta/Conduit/Manifest.hpp"
// Including type: Meta.Conduit.Manifest/<>c
#include "Meta/Conduit/Manifest_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Meta.Conduit.ManifestEntity
#include "Meta/Conduit/ManifestEntity.hpp"
// Including type: Meta.Conduit.ManifestAction
#include "Meta/Conduit/ManifestAction.hpp"
// Including type: Meta.Conduit.ManifestErrorHandler
#include "Meta/Conduit/ManifestErrorHandler.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Meta.Conduit.InvocationContext
#include "Meta/Conduit/InvocationContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: Meta.Conduit.IManifestMethod
#include "Meta/Conduit/IManifestMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<System.String> WitResponseMatcherIntents
::System::Collections::Generic::List_1<::StringW>* Meta::Conduit::Manifest::_get_WitResponseMatcherIntents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::_get_WitResponseMatcherIntents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::StringW>*>("Meta.Conduit", "Manifest", "WitResponseMatcherIntents"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<System.String> WitResponseMatcherIntents
void Meta::Conduit::Manifest::_set_WitResponseMatcherIntents(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::_set_WitResponseMatcherIntents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Conduit", "Manifest", "WitResponseMatcherIntents", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <ID>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::Manifest::dyn_$ID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::dyn_$ID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ID>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Version>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::Manifest::dyn_$Version$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::dyn_$Version$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Version>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Domain>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::Manifest::dyn_$Domain$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::dyn_$Domain$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Domain>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Meta.Conduit.ManifestEntity> <Entities>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Meta::Conduit::ManifestEntity*>*& Meta::Conduit::Manifest::dyn_$Entities$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::dyn_$Entities$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Entities>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Meta::Conduit::ManifestEntity*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Meta.Conduit.ManifestAction> <Actions>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Meta::Conduit::ManifestAction*>*& Meta::Conduit::Manifest::dyn_$Actions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::dyn_$Actions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Actions>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Meta::Conduit::ManifestAction*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Meta.Conduit.ManifestErrorHandler> ErrorHandlers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Meta::Conduit::ManifestErrorHandler*>*& Meta::Conduit::Manifest::dyn_ErrorHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::dyn_ErrorHandlers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ErrorHandlers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Meta::Conduit::ManifestErrorHandler*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<Meta.Conduit.InvocationContext>> _methodLookup
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>*>*& Meta::Conduit::Manifest::dyn__methodLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::dyn__methodLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_methodLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Type> <CustomEntityTypes>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Type*>*& Meta::Conduit::Manifest::dyn_$CustomEntityTypes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::dyn_$CustomEntityTypes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CustomEntityTypes>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Type*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.Manifest.get_ID
::StringW Meta::Conduit::Manifest::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.Manifest.set_ID
void Meta::Conduit::Manifest::set_ID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::set_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.Manifest.get_Version
::StringW Meta::Conduit::Manifest::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.Manifest.set_Version
void Meta::Conduit::Manifest::set_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::set_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.Manifest.get_Domain
::StringW Meta::Conduit::Manifest::get_Domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::get_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.Manifest.set_Domain
void Meta::Conduit::Manifest::set_Domain(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::set_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.Manifest.get_Entities
::System::Collections::Generic::List_1<::Meta::Conduit::ManifestEntity*>* Meta::Conduit::Manifest::get_Entities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::get_Entities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Meta::Conduit::ManifestEntity*>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.Manifest.set_Entities
void Meta::Conduit::Manifest::set_Entities(::System::Collections::Generic::List_1<::Meta::Conduit::ManifestEntity*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::set_Entities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Entities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.Manifest.get_Actions
::System::Collections::Generic::List_1<::Meta::Conduit::ManifestAction*>* Meta::Conduit::Manifest::get_Actions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::get_Actions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Actions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Meta::Conduit::ManifestAction*>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.Manifest.set_Actions
void Meta::Conduit::Manifest::set_Actions(::System::Collections::Generic::List_1<::Meta::Conduit::ManifestAction*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::set_Actions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Actions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.Manifest.get_CustomEntityTypes
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Type*>* Meta::Conduit::Manifest::get_CustomEntityTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::get_CustomEntityTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomEntityTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.Manifest.ResolveEntities
bool Meta::Conduit::Manifest::ResolveEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::ResolveEntities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveEntities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.Manifest.GetMethodInfo
::System::Tuple_2<::System::Reflection::MethodInfo*, ::System::Type*>* Meta::Conduit::Manifest::GetMethodInfo(::Meta::Conduit::IManifestMethod* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::GetMethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Tuple_2<::System::Reflection::MethodInfo*, ::System::Type*>*, false>(this, ___internal__method, action);
}
// Autogenerated method: Meta.Conduit.Manifest.ResolveAllActions
bool Meta::Conduit::Manifest::ResolveAllActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::ResolveAllActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveAllActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.Manifest.ResolveErrorHandlers
bool Meta::Conduit::Manifest::ResolveErrorHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::ResolveErrorHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveErrorHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.Manifest.ResolveActions
bool Meta::Conduit::Manifest::ResolveActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::ResolveActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.Manifest.GetBestMethodMatch
::System::Reflection::MethodInfo* Meta::Conduit::Manifest::GetBestMethodMatch(::System::Type* targetType, ::StringW method, ::ArrayW<::System::Type*> parameterTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::GetBestMethodMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBestMethodMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(parameterTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, targetType, method, parameterTypes);
}
// Autogenerated method: Meta.Conduit.Manifest.ContainsAction
bool Meta::Conduit::Manifest::ContainsAction(::StringW action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::ContainsAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, action);
}
// Autogenerated method: Meta.Conduit.Manifest.GetInvocationContexts
::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>* Meta::Conduit::Manifest::GetInvocationContexts(::StringW actionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::GetInvocationContexts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInvocationContexts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actionId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>*, false>(this, ___internal__method, actionId);
}
// Autogenerated method: Meta.Conduit.Manifest.GetErrorHandlerContexts
::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>* Meta::Conduit::Manifest::GetErrorHandlerContexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::GetErrorHandlerContexts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetErrorHandlerContexts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.Manifest..cctor
void Meta::Conduit::Manifest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Conduit", "Manifest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.Conduit.Manifest.ToString
::StringW Meta::Conduit::Manifest::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.Manifest/<>c
#include "Meta/Conduit/Manifest_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Meta.Conduit.InvocationContext
#include "Meta/Conduit/InvocationContext.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Meta.Conduit.Manifest/<>c <>9
::Meta::Conduit::Manifest::$$c* Meta::Conduit::Manifest::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Meta::Conduit::Manifest::$$c*>("Meta.Conduit", "Manifest/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Meta.Conduit.Manifest/<>c <>9
void Meta::Conduit::Manifest::$$c::_set_$$9(::Meta::Conduit::Manifest::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.Conduit", "Manifest/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.List`1<Meta.Conduit.InvocationContext>,System.Boolean> <>9__29_0
::System::Func_2<::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>*, bool>* Meta::Conduit::Manifest::$$c::_get_$$9__29_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::$$c::_get_$$9__29_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>*, bool>*>("Meta.Conduit", "Manifest/<>c", "<>9__29_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.List`1<Meta.Conduit.InvocationContext>,System.Boolean> <>9__29_0
void Meta::Conduit::Manifest::$$c::_set_$$9__29_0(::System::Func_2<::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::$$c::_set_$$9__29_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.Conduit", "Manifest/<>c", "<>9__29_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<Meta.Conduit.InvocationContext> <>9__29_1
::System::Comparison_1<::Meta::Conduit::InvocationContext*>* Meta::Conduit::Manifest::$$c::_get_$$9__29_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::$$c::_get_$$9__29_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::Meta::Conduit::InvocationContext*>*>("Meta.Conduit", "Manifest/<>c", "<>9__29_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<Meta.Conduit.InvocationContext> <>9__29_1
void Meta::Conduit::Manifest::$$c::_set_$$9__29_1(::System::Comparison_1<::Meta::Conduit::InvocationContext*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::$$c::_set_$$9__29_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.Conduit", "Manifest/<>c", "<>9__29_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.List`1<Meta.Conduit.InvocationContext>,System.Boolean> <>9__30_0
::System::Func_2<::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>*, bool>* Meta::Conduit::Manifest::$$c::_get_$$9__30_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::$$c::_get_$$9__30_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>*, bool>*>("Meta.Conduit", "Manifest/<>c", "<>9__30_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.List`1<Meta.Conduit.InvocationContext>,System.Boolean> <>9__30_0
void Meta::Conduit::Manifest::$$c::_set_$$9__30_0(::System::Func_2<::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::$$c::_set_$$9__30_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.Conduit", "Manifest/<>c", "<>9__30_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<Meta.Conduit.InvocationContext> <>9__30_1
::System::Comparison_1<::Meta::Conduit::InvocationContext*>* Meta::Conduit::Manifest::$$c::_get_$$9__30_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::$$c::_get_$$9__30_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::Meta::Conduit::InvocationContext*>*>("Meta.Conduit", "Manifest/<>c", "<>9__30_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<Meta.Conduit.InvocationContext> <>9__30_1
void Meta::Conduit::Manifest::$$c::_set_$$9__30_1(::System::Comparison_1<::Meta::Conduit::InvocationContext*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::$$c::_set_$$9__30_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.Conduit", "Manifest/<>c", "<>9__30_1", value)));
}
// Autogenerated method: Meta.Conduit.Manifest/<>c..cctor
void Meta::Conduit::Manifest::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Conduit", "Manifest/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.Conduit.Manifest/<>c.<ResolveAllActions>b__29_0
bool Meta::Conduit::Manifest::$$c::$ResolveAllActions$b__29_0(::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>* invocationContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::$$c::<ResolveAllActions>b__29_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ResolveAllActions>b__29_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invocationContext)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, invocationContext);
}
// Autogenerated method: Meta.Conduit.Manifest/<>c.<ResolveAllActions>b__29_1
int Meta::Conduit::Manifest::$$c::$ResolveAllActions$b__29_1(::Meta::Conduit::InvocationContext* one, ::Meta::Conduit::InvocationContext* two) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::$$c::<ResolveAllActions>b__29_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ResolveAllActions>b__29_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(one), ::il2cpp_utils::ExtractType(two)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, one, two);
}
// Autogenerated method: Meta.Conduit.Manifest/<>c.<ResolveErrorHandlers>b__30_0
bool Meta::Conduit::Manifest::$$c::$ResolveErrorHandlers$b__30_0(::System::Collections::Generic::List_1<::Meta::Conduit::InvocationContext*>* invocationContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::$$c::<ResolveErrorHandlers>b__30_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ResolveErrorHandlers>b__30_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invocationContext)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, invocationContext);
}
// Autogenerated method: Meta.Conduit.Manifest/<>c.<ResolveErrorHandlers>b__30_1
int Meta::Conduit::Manifest::$$c::$ResolveErrorHandlers$b__30_1(::Meta::Conduit::InvocationContext* one, ::Meta::Conduit::InvocationContext* two) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::Manifest::$$c::<ResolveErrorHandlers>b__30_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ResolveErrorHandlers>b__30_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(one), ::il2cpp_utils::ExtractType(two)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, one, two);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.Conduit.ManifestAction
#include "Meta/Conduit/ManifestAction.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Meta.Conduit.ManifestParameter
#include "Meta/Conduit/ManifestParameter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <ID>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ManifestAction::dyn_$ID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::dyn_$ID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ID>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Assembly>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ManifestAction::dyn_$Assembly$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::dyn_$Assembly$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Assembly>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ManifestAction::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Meta.Conduit.ManifestParameter> <Parameters>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>*& Meta::Conduit::ManifestAction::dyn_$Parameters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::dyn_$Parameters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parameters>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> <Aliases>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Meta::Conduit::ManifestAction::dyn_$Aliases$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::dyn_$Aliases$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Aliases>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.ManifestAction.get_ID
::StringW Meta::Conduit::ManifestAction::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::get_ID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ManifestAction*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestAction.set_ID
void Meta::Conduit::ManifestAction::set_ID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::set_ID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ManifestAction*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestAction.get_Assembly
::StringW Meta::Conduit::ManifestAction::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::get_Assembly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ManifestAction*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestAction.set_Assembly
void Meta::Conduit::ManifestAction::set_Assembly(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::set_Assembly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ManifestAction*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestAction.get_Name
::StringW Meta::Conduit::ManifestAction::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestAction.set_Name
void Meta::Conduit::ManifestAction::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestAction.get_Parameters
::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>* Meta::Conduit::ManifestAction::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::get_Parameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ManifestAction*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestAction.set_Parameters
void Meta::Conduit::ManifestAction::set_Parameters(::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::set_Parameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ManifestAction*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestAction.get_DeclaringTypeName
::StringW Meta::Conduit::ManifestAction::get_DeclaringTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::get_DeclaringTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestAction.get_Aliases
::System::Collections::Generic::List_1<::StringW>* Meta::Conduit::ManifestAction::get_Aliases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::get_Aliases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Aliases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestAction.set_Aliases
void Meta::Conduit::ManifestAction::set_Aliases(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::set_Aliases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Aliases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestAction.Equals
bool Meta::Conduit::ManifestAction::Equals(::Meta::Conduit::ManifestAction* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Meta.Conduit.ManifestAction.Equals
bool Meta::Conduit::ManifestAction::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Meta.Conduit.ManifestAction.GetHashCode
int Meta::Conduit::ManifestAction::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestAction::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.Conduit.ManifestEntity
#include "Meta/Conduit/ManifestEntity.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Meta.Conduit.WitKeyword
#include "Meta/Conduit/WitKeyword.hpp"
// Including type: Meta.WitAi.Data.Info.WitEntityInfo
#include "Meta/WitAi/Data/Info/WitEntityInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <ID>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ManifestEntity::dyn_$ID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::dyn_$ID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ID>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Namespace>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ManifestEntity::dyn_$Namespace$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::dyn_$Namespace$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Namespace>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Type>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ManifestEntity::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ManifestEntity::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Meta.Conduit.WitKeyword> <Values>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Meta::Conduit::WitKeyword*>*& Meta::Conduit::ManifestEntity::dyn_$Values$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::dyn_$Values$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Values>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Meta::Conduit::WitKeyword*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Assembly>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ManifestEntity::dyn_$Assembly$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::dyn_$Assembly$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Assembly>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.get_ID
::StringW Meta::Conduit::ManifestEntity::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.set_ID
void Meta::Conduit::ManifestEntity::set_ID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::set_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.get_Namespace
::StringW Meta::Conduit::ManifestEntity::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.set_Namespace
void Meta::Conduit::ManifestEntity::set_Namespace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::set_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.get_Type
::StringW Meta::Conduit::ManifestEntity::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.set_Type
void Meta::Conduit::ManifestEntity::set_Type(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::set_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.get_Name
::StringW Meta::Conduit::ManifestEntity::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.set_Name
void Meta::Conduit::ManifestEntity::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.get_Values
::System::Collections::Generic::List_1<::Meta::Conduit::WitKeyword*>* Meta::Conduit::ManifestEntity::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Meta::Conduit::WitKeyword*>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.set_Values
void Meta::Conduit::ManifestEntity::set_Values(::System::Collections::Generic::List_1<::Meta::Conduit::WitKeyword*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::set_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.get_Assembly
::StringW Meta::Conduit::ManifestEntity::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::get_Assembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.set_Assembly
void Meta::Conduit::ManifestEntity::set_Assembly(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::set_Assembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.GetAsInfo
::Meta::WitAi::Data::Info::WitEntityInfo Meta::Conduit::ManifestEntity::GetAsInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::GetAsInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAsInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Info::WitEntityInfo, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.GetQualifiedTypeName
::StringW Meta::Conduit::ManifestEntity::GetQualifiedTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::GetQualifiedTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQualifiedTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.Equals
bool Meta::Conduit::ManifestEntity::Equals(::Meta::Conduit::ManifestEntity* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.Equals
bool Meta::Conduit::ManifestEntity::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Meta.Conduit.ManifestEntity.GetHashCode
int Meta::Conduit::ManifestEntity::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestEntity::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.Conduit.ManifestErrorHandler
#include "Meta/Conduit/ManifestErrorHandler.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Meta.Conduit.ManifestParameter
#include "Meta/Conduit/ManifestParameter.hpp"
// Including type: Meta.Conduit.ManifestAction
#include "Meta/Conduit/ManifestAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <ID>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ManifestErrorHandler::dyn_$ID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestErrorHandler::dyn_$ID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ID>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Assembly>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ManifestErrorHandler::dyn_$Assembly$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestErrorHandler::dyn_$Assembly$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Assembly>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ManifestErrorHandler::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestErrorHandler::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Meta.Conduit.ManifestParameter> <Parameters>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>*& Meta::Conduit::ManifestErrorHandler::dyn_$Parameters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestErrorHandler::dyn_$Parameters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parameters>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.ManifestErrorHandler.get_ID
::StringW Meta::Conduit::ManifestErrorHandler::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestErrorHandler::get_ID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ManifestErrorHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestErrorHandler.set_ID
void Meta::Conduit::ManifestErrorHandler::set_ID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestErrorHandler::set_ID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ManifestErrorHandler*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestErrorHandler.get_Assembly
::StringW Meta::Conduit::ManifestErrorHandler::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestErrorHandler::get_Assembly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ManifestErrorHandler*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestErrorHandler.set_Assembly
void Meta::Conduit::ManifestErrorHandler::set_Assembly(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestErrorHandler::set_Assembly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ManifestErrorHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestErrorHandler.get_Name
::StringW Meta::Conduit::ManifestErrorHandler::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestErrorHandler::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestErrorHandler.set_Name
void Meta::Conduit::ManifestErrorHandler::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestErrorHandler::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestErrorHandler.get_Parameters
::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>* Meta::Conduit::ManifestErrorHandler::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestErrorHandler::get_Parameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ManifestErrorHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestErrorHandler.set_Parameters
void Meta::Conduit::ManifestErrorHandler::set_Parameters(::System::Collections::Generic::List_1<::Meta::Conduit::ManifestParameter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestErrorHandler::set_Parameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ManifestErrorHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestErrorHandler.get_DeclaringTypeName
::StringW Meta::Conduit::ManifestErrorHandler::get_DeclaringTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestErrorHandler::get_DeclaringTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestErrorHandler.Equals
bool Meta::Conduit::ManifestErrorHandler::Equals(::Meta::Conduit::ManifestAction* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestErrorHandler::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Meta.Conduit.ManifestErrorHandler.Equals
bool Meta::Conduit::ManifestErrorHandler::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestErrorHandler::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Meta.Conduit.ManifestErrorHandler.GetHashCode
int Meta::Conduit::ManifestErrorHandler::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestErrorHandler::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.ManifestLoader
#include "Meta/Conduit/ManifestLoader.hpp"
// Including type: Meta.Conduit.Manifest
#include "Meta/Conduit/Manifest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Conduit.ManifestLoader.LoadManifest
::Meta::Conduit::Manifest* Meta::Conduit::ManifestLoader::LoadManifest(::StringW manifestLocalPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestLoader::LoadManifest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ManifestLoader*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Conduit::Manifest*, false>(this, ___internal__method, manifestLocalPath);
}
// Autogenerated method: Meta.Conduit.ManifestLoader.LoadManifestFromString
::Meta::Conduit::Manifest* Meta::Conduit::ManifestLoader::LoadManifestFromString(::StringW manifestText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestLoader::LoadManifestFromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ManifestLoader*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Conduit::Manifest*, false>(this, ___internal__method, manifestText);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.Conduit.ManifestParameter
#include "Meta/Conduit/ManifestParameter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ManifestParameter::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <InternalName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ManifestParameter::dyn_$InternalName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::dyn_$InternalName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InternalName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <QualifiedName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ManifestParameter::dyn_$QualifiedName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::dyn_$QualifiedName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<QualifiedName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <TypeAssembly>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ManifestParameter::dyn_$TypeAssembly$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::dyn_$TypeAssembly$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeAssembly>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <QualifiedTypeName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ManifestParameter::dyn_$QualifiedTypeName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::dyn_$QualifiedTypeName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<QualifiedTypeName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> <Aliases>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Meta::Conduit::ManifestParameter::dyn_$Aliases$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::dyn_$Aliases$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Aliases>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> <Examples>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Meta::Conduit::ManifestParameter::dyn_$Examples$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::dyn_$Examples$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Examples>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.get_Name
::StringW Meta::Conduit::ManifestParameter::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.set_Name
void Meta::Conduit::ManifestParameter::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.get_InternalName
::StringW Meta::Conduit::ManifestParameter::get_InternalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::get_InternalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.set_InternalName
void Meta::Conduit::ManifestParameter::set_InternalName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::set_InternalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InternalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.get_QualifiedName
::StringW Meta::Conduit::ManifestParameter::get_QualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::get_QualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.set_QualifiedName
void Meta::Conduit::ManifestParameter::set_QualifiedName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::set_QualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_QualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.get_EntityType
::StringW Meta::Conduit::ManifestParameter::get_EntityType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::get_EntityType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EntityType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.get_TypeAssembly
::StringW Meta::Conduit::ManifestParameter::get_TypeAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::get_TypeAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.set_TypeAssembly
void Meta::Conduit::ManifestParameter::set_TypeAssembly(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::set_TypeAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.get_QualifiedTypeName
::StringW Meta::Conduit::ManifestParameter::get_QualifiedTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::get_QualifiedTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QualifiedTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.set_QualifiedTypeName
void Meta::Conduit::ManifestParameter::set_QualifiedTypeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::set_QualifiedTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_QualifiedTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.get_Aliases
::System::Collections::Generic::List_1<::StringW>* Meta::Conduit::ManifestParameter::get_Aliases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::get_Aliases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Aliases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.set_Aliases
void Meta::Conduit::ManifestParameter::set_Aliases(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::set_Aliases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Aliases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.get_Examples
::System::Collections::Generic::List_1<::StringW>* Meta::Conduit::ManifestParameter::get_Examples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::get_Examples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Examples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.set_Examples
void Meta::Conduit::ManifestParameter::set_Examples(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::set_Examples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Examples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.Equals
bool Meta::Conduit::ManifestParameter::Equals(::Meta::Conduit::ManifestParameter* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.Equals
bool Meta::Conduit::ManifestParameter::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Meta.Conduit.ManifestParameter.GetHashCode
int Meta::Conduit::ManifestParameter::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ManifestParameter::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.Conduit.WitKeyword
#include "Meta/Conduit/WitKeyword.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String keyword
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::WitKeyword::dyn_keyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::WitKeyword::dyn_keyword");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyword"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.HashSet`1<System.String> synonyms
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& Meta::Conduit::WitKeyword::dyn_synonyms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::WitKeyword::dyn_synonyms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synonyms"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.WitKeyword.GetAsInfo
::Meta::WitAi::Data::Info::WitEntityKeywordInfo Meta::Conduit::WitKeyword::GetAsInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::WitKeyword::GetAsInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAsInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Info::WitEntityKeywordInfo, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.WitKeyword.Equals
bool Meta::Conduit::WitKeyword::Equals(::Meta::Conduit::WitKeyword* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::WitKeyword::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Meta.Conduit.WitKeyword.Equals
bool Meta::Conduit::WitKeyword::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::WitKeyword::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Meta.Conduit.WitKeyword.GetHashCode
int Meta::Conduit::WitKeyword::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::WitKeyword::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.IConduitDispatcher
#include "Meta/Conduit/IConduitDispatcher.hpp"
// Including type: Meta.Conduit.Manifest
#include "Meta/Conduit/Manifest.hpp"
// Including type: Meta.Conduit.IParameterProvider
#include "Meta/Conduit/IParameterProvider.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Conduit.IConduitDispatcher.get_Manifest
::Meta::Conduit::Manifest* Meta::Conduit::IConduitDispatcher::get_Manifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IConduitDispatcher::get_Manifest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IConduitDispatcher*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Conduit::Manifest*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.IConduitDispatcher.Initialize
void Meta::Conduit::IConduitDispatcher::Initialize(::StringW manifestFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IConduitDispatcher::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IConduitDispatcher*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, manifestFilePath);
}
// Autogenerated method: Meta.Conduit.IConduitDispatcher.InvokeAction
bool Meta::Conduit::IConduitDispatcher::InvokeAction(::Meta::Conduit::IParameterProvider* parameterProvider, ::StringW actionId, bool relaxed, float confidence, bool partial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IConduitDispatcher::InvokeAction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IConduitDispatcher*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, parameterProvider, actionId, relaxed, confidence, partial);
}
// Autogenerated method: Meta.Conduit.IConduitDispatcher.InvokeError
bool Meta::Conduit::IConduitDispatcher::InvokeError(::StringW actionId, ::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IConduitDispatcher::InvokeError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IConduitDispatcher*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, actionId, exception);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.Conduit.IInstanceResolver
#include "Meta/Conduit/IInstanceResolver.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Conduit.IInstanceResolver.GetObjectsOfType
::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* Meta::Conduit::IInstanceResolver::GetObjectsOfType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IInstanceResolver::GetObjectsOfType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IInstanceResolver*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.Conduit.IParameterProvider
#include "Meta/Conduit/IParameterProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.Conduit.IParameterProvider.get_AllParameterNames
::System::Collections::Generic::List_1<::StringW>* Meta::Conduit::IParameterProvider::get_AllParameterNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IParameterProvider::get_AllParameterNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IParameterProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.IParameterProvider.PopulateParametersFromNode
void Meta::Conduit::IParameterProvider::PopulateParametersFromNode(::Meta::WitAi::Json::WitResponseNode* responseNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IParameterProvider::PopulateParametersFromNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IParameterProvider*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, responseNode);
}
// Autogenerated method: Meta.Conduit.IParameterProvider.PopulateRoles
void Meta::Conduit::IParameterProvider::PopulateRoles(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* parameterToRoleMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IParameterProvider::PopulateRoles");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IParameterProvider*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameterToRoleMap);
}
// Autogenerated method: Meta.Conduit.IParameterProvider.AddParameter
void Meta::Conduit::IParameterProvider::AddParameter(::StringW parameterName, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IParameterProvider::AddParameter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IParameterProvider*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameterName, value);
}
// Autogenerated method: Meta.Conduit.IParameterProvider.ContainsParameter
bool Meta::Conduit::IParameterProvider::ContainsParameter(::System::Reflection::ParameterInfo* parameter, ::System::Text::StringBuilder* log) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IParameterProvider::ContainsParameter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IParameterProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, parameter, log);
}
// Autogenerated method: Meta.Conduit.IParameterProvider.AddCustomType
void Meta::Conduit::IParameterProvider::AddCustomType(::StringW name, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IParameterProvider::AddCustomType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IParameterProvider*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, type);
}
// Autogenerated method: Meta.Conduit.IParameterProvider.GetParameterValue
::Il2CppObject* Meta::Conduit::IParameterProvider::GetParameterValue(::System::Reflection::ParameterInfo* formalParameter, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* parameterMap, bool relaxed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IParameterProvider::GetParameterValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IParameterProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, formalParameter, parameterMap, relaxed);
}
// Autogenerated method: Meta.Conduit.IParameterProvider.GetParameterNamesOfType
::System::Collections::Generic::List_1<::StringW>* Meta::Conduit::IParameterProvider::GetParameterNamesOfType(::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IParameterProvider::GetParameterNamesOfType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IParameterProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method, targetType);
}
// Autogenerated method: Meta.Conduit.IParameterProvider.SetSpecializedParameter
void Meta::Conduit::IParameterProvider::SetSpecializedParameter(::StringW reservedParameterName, ::System::Type* parameterType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::IParameterProvider::SetSpecializedParameter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::IParameterProvider*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reservedParameterName, parameterType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.Conduit.ParameterProvider
#include "Meta/Conduit/ParameterProvider.hpp"
// Including type: Meta.Conduit.ParameterProvider/<>c__DisplayClass21_0
#include "Meta/Conduit/ParameterProvider_--c__DisplayClass21_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String WitResponseNodeReservedName
::StringW Meta::Conduit::ParameterProvider::_get_WitResponseNodeReservedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::_get_WitResponseNodeReservedName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.Conduit", "ParameterProvider", "WitResponseNodeReservedName"));
}
// Autogenerated static field setter
// Set static field: static public System.String WitResponseNodeReservedName
void Meta::Conduit::ParameterProvider::_set_WitResponseNodeReservedName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::_set_WitResponseNodeReservedName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Conduit", "ParameterProvider", "WitResponseNodeReservedName", value));
}
// Autogenerated static field getter
// Get static field: static public System.String VoiceSessionReservedName
::StringW Meta::Conduit::ParameterProvider::_get_VoiceSessionReservedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::_get_VoiceSessionReservedName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.Conduit", "ParameterProvider", "VoiceSessionReservedName"));
}
// Autogenerated static field setter
// Set static field: static public System.String VoiceSessionReservedName
void Meta::Conduit::ParameterProvider::_set_VoiceSessionReservedName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::_set_VoiceSessionReservedName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Conduit", "ParameterProvider", "VoiceSessionReservedName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<System.Type>> BuiltInTypes
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::System::Type*>*>* Meta::Conduit::ParameterProvider::_get_BuiltInTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::_get_BuiltInTypes");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::System::Type*>*>*>("Meta.Conduit", "ParameterProvider", "BuiltInTypes")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<System.Type>> BuiltInTypes
void Meta::Conduit::ParameterProvider::_set_BuiltInTypes(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::System::Type*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::_set_BuiltInTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.Conduit", "ParameterProvider", "BuiltInTypes", value));
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.Collections.Generic.Dictionary`2<System.String,System.Object> ActualParameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*& Meta::Conduit::ParameterProvider::dyn_ActualParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::dyn_ActualParameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActualParameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> _parameterToRoleMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Meta::Conduit::ParameterProvider::dyn__parameterToRoleMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::dyn__parameterToRoleMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parameterToRoleMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<System.String>> _parametersOfType
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::StringW>*>*& Meta::Conduit::ParameterProvider::dyn__parametersOfType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::dyn__parametersOfType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parametersOfType"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::StringW>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Type,System.String> _specializedParameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Type*, ::StringW>*& Meta::Conduit::ParameterProvider::dyn__specializedParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::dyn__specializedParameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_specializedParameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Type*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Type> _customTypes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Type*>*& Meta::Conduit::ParameterProvider::dyn__customTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::dyn__customTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customTypes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Type*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.ParameterProvider.get_AllParameterNames
::System::Collections::Generic::List_1<::StringW>* Meta::Conduit::ParameterProvider::get_AllParameterNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::get_AllParameterNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ParameterProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.Conduit.ParameterProvider.AddCustomType
void Meta::Conduit::ParameterProvider::AddCustomType(::StringW name, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::AddCustomType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ParameterProvider*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, type);
}
// Autogenerated method: Meta.Conduit.ParameterProvider.AddParameter
void Meta::Conduit::ParameterProvider::AddParameter(::StringW parameterName, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::AddParameter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ParameterProvider*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameterName, value);
}
// Autogenerated method: Meta.Conduit.ParameterProvider.PopulateParametersFromNode
void Meta::Conduit::ParameterProvider::PopulateParametersFromNode(::Meta::WitAi::Json::WitResponseNode* responseNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::PopulateParametersFromNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ParameterProvider*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, responseNode);
}
// Autogenerated method: Meta.Conduit.ParameterProvider.SetSpecializedParameter
void Meta::Conduit::ParameterProvider::SetSpecializedParameter(::StringW reservedParameterName, ::System::Type* parameterType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::SetSpecializedParameter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ParameterProvider*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reservedParameterName, parameterType);
}
// Autogenerated method: Meta.Conduit.ParameterProvider.PopulateParameters
void Meta::Conduit::ParameterProvider::PopulateParameters(::System::Collections::Generic::Dictionary_2<::StringW, ::Meta::Conduit::ConduitParameterValue>* actualParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::PopulateParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actualParameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, actualParameters);
}
// Autogenerated method: Meta.Conduit.ParameterProvider.PopulateRoles
void Meta::Conduit::ParameterProvider::PopulateRoles(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* parameterToRoleMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::PopulateRoles");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ParameterProvider*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameterToRoleMap);
}
// Autogenerated method: Meta.Conduit.ParameterProvider.ContainsParameter
bool Meta::Conduit::ParameterProvider::ContainsParameter(::System::Reflection::ParameterInfo* parameter, ::System::Text::StringBuilder* log) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::ContainsParameter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ParameterProvider*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, parameter, log);
}
// Autogenerated method: Meta.Conduit.ParameterProvider.GetParameterValue
::Il2CppObject* Meta::Conduit::ParameterProvider::GetParameterValue(::System::Reflection::ParameterInfo* formalParameter, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* parameterMap, bool relaxed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::GetParameterValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ParameterProvider*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, formalParameter, parameterMap, relaxed);
}
// Autogenerated method: Meta.Conduit.ParameterProvider.GetParameterNamesOfType
::System::Collections::Generic::List_1<::StringW>* Meta::Conduit::ParameterProvider::GetParameterNamesOfType(::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::GetParameterNamesOfType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ParameterProvider*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method, targetType);
}
// Autogenerated method: Meta.Conduit.ParameterProvider.SupportedSpecializedParameter
bool Meta::Conduit::ParameterProvider::SupportedSpecializedParameter(::System::Reflection::ParameterInfo* formalParameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::SupportedSpecializedParameter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ParameterProvider*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, formalParameter);
}
// Autogenerated method: Meta.Conduit.ParameterProvider.GetSpecializedParameter
::Il2CppObject* Meta::Conduit::ParameterProvider::GetSpecializedParameter(::System::Reflection::ParameterInfo* formalParameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::GetSpecializedParameter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ParameterProvider*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, formalParameter);
}
// Autogenerated method: Meta.Conduit.ParameterProvider.GetParameterTypes
::System::Collections::Generic::IEnumerable_1<::System::Type*>* Meta::Conduit::ParameterProvider::GetParameterTypes(::StringW typeString, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::GetParameterTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameterTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeString), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Type*>*, false>(this, ___internal__method, typeString, value);
}
// Autogenerated method: Meta.Conduit.ParameterProvider.PerfectTypeMatch
bool Meta::Conduit::ParameterProvider::PerfectTypeMatch(::System::Type* targetType, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::PerfectTypeMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerfectTypeMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetType, value);
}
// Autogenerated method: Meta.Conduit.ParameterProvider.GetActualParameterName
::StringW Meta::Conduit::ParameterProvider::GetActualParameterName(::System::Reflection::ParameterInfo* formalParameter, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* parameterMap, bool relaxed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::GetActualParameterName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActualParameterName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formalParameter), ::il2cpp_utils::ExtractType(parameterMap), ::il2cpp_utils::ExtractType(relaxed)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, formalParameter, parameterMap, relaxed);
}
// Autogenerated method: Meta.Conduit.ParameterProvider..cctor
void Meta::Conduit::ParameterProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.Conduit", "ParameterProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.Conduit.ParameterProvider.ToString
::StringW Meta::Conduit::ParameterProvider::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.Conduit.ParameterProvider/<>c__DisplayClass21_0
#include "Meta/Conduit/ParameterProvider_--c__DisplayClass21_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.Conduit.ParameterProvider <>4__this
[[deprecated("Use field access instead!")]] ::Meta::Conduit::ParameterProvider*& Meta::Conduit::ParameterProvider::$$c__DisplayClass21_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::$$c__DisplayClass21_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::Conduit::ParameterProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String value
[[deprecated("Use field access instead!")]] ::StringW& Meta::Conduit::ParameterProvider::$$c__DisplayClass21_0::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::$$c__DisplayClass21_0::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.Conduit.ParameterProvider/<>c__DisplayClass21_0.<GetParameterTypes>b__0
bool Meta::Conduit::ParameterProvider::$$c__DisplayClass21_0::$GetParameterTypes$b__0(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::Conduit::ParameterProvider::$$c__DisplayClass21_0::<GetParameterTypes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParameterTypes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AudioClipAudioSource
#include "GlobalNamespace/AudioClipAudioSource.hpp"
// Including type: AudioClipAudioSource/<>c__DisplayClass34_0
#include "GlobalNamespace/AudioClipAudioSource_--c__DisplayClass34_0.hpp"
// Including type: AudioClipAudioSource/<ProcessClip>d__25
#include "GlobalNamespace/AudioClipAudioSource_-ProcessClip-d__25.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Meta.WitAi.Data.AudioEncoding
#include "Meta/WitAi/Data/AudioEncoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::AudioClipAudioSource::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.AudioClip> _audioClips
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::AudioClip*>*& GlobalNamespace::AudioClipAudioSource::dyn__audioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::dyn__audioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClips"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _loopRequests
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AudioClipAudioSource::dyn__loopRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::dyn__loopRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopRequests"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isRecording
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AudioClipAudioSource::dyn__isRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::dyn__isRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRecording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Int32> _audioQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<int>*& GlobalNamespace::AudioClipAudioSource::dyn__audioQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::dyn__audioQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 clipIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AudioClipAudioSource::dyn_clipIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::dyn_clipIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] activeClip
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::AudioClipAudioSource::dyn_activeClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::dyn_activeClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeClip"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 activeClipIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AudioClipAudioSource::dyn_activeClipIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::dyn_activeClipIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeClipIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] activeClipBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::AudioClipAudioSource::dyn_activeClipBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::dyn_activeClipBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeClipBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single[]> clipData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::ArrayW<float>>*& GlobalNamespace::AudioClipAudioSource::dyn_clipData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::dyn_clipData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::ArrayW<float>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action OnStartRecording
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AudioClipAudioSource::dyn_OnStartRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::dyn_OnStartRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStartRecording"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action OnStartRecordingFailed
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AudioClipAudioSource::dyn_OnStartRecordingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::dyn_OnStartRecordingFailed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStartRecordingFailed"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<System.Int32,System.Single[],System.Single> OnSampleReady
[[deprecated("Use field access instead!")]] ::System::Action_3<int, ::ArrayW<float>, float>*& GlobalNamespace::AudioClipAudioSource::dyn_OnSampleReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::dyn_OnSampleReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnSampleReady"))->offset;
  return *reinterpret_cast<::System::Action_3<int, ::ArrayW<float>, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action OnStopRecording
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AudioClipAudioSource::dyn_OnStopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::dyn_OnStopRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStopRecording"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioClipAudioSource.Start
void GlobalNamespace::AudioClipAudioSource::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipAudioSource.SendSample
void GlobalNamespace::AudioClipAudioSource::SendSample(::ArrayW<float> sample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::SendSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sample)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sample);
}
// Autogenerated method: AudioClipAudioSource.add_OnStartRecording
void GlobalNamespace::AudioClipAudioSource::add_OnStartRecording(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::add_OnStartRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioClipAudioSource.remove_OnStartRecording
void GlobalNamespace::AudioClipAudioSource::remove_OnStartRecording(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::remove_OnStartRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioClipAudioSource.add_OnStartRecordingFailed
void GlobalNamespace::AudioClipAudioSource::add_OnStartRecordingFailed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::add_OnStartRecordingFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioClipAudioSource.remove_OnStartRecordingFailed
void GlobalNamespace::AudioClipAudioSource::remove_OnStartRecordingFailed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::remove_OnStartRecordingFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioClipAudioSource.add_OnSampleReady
void GlobalNamespace::AudioClipAudioSource::add_OnSampleReady(::System::Action_3<int, ::ArrayW<float>, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::add_OnSampleReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioClipAudioSource.remove_OnSampleReady
void GlobalNamespace::AudioClipAudioSource::remove_OnSampleReady(::System::Action_3<int, ::ArrayW<float>, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::remove_OnSampleReady");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioClipAudioSource.add_OnStopRecording
void GlobalNamespace::AudioClipAudioSource::add_OnStopRecording(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::add_OnStopRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioClipAudioSource.remove_OnStopRecording
void GlobalNamespace::AudioClipAudioSource::remove_OnStopRecording(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::remove_OnStopRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioClipAudioSource.StartRecording
void GlobalNamespace::AudioClipAudioSource::StartRecording(int sampleLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::StartRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampleLen);
}
// Autogenerated method: AudioClipAudioSource.ProcessClip
::System::Collections::IEnumerator* GlobalNamespace::AudioClipAudioSource::ProcessClip(::UnityEngine::AudioClip* clip, ::ArrayW<float> clipData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::ProcessClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(clipData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, clip, clipData);
}
// Autogenerated method: AudioClipAudioSource.StopRecording
void GlobalNamespace::AudioClipAudioSource::StopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::StopRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipAudioSource.get_IsRecording
bool GlobalNamespace::AudioClipAudioSource::get_IsRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::get_IsRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipAudioSource.get_AudioEncoding
::Meta::WitAi::Data::AudioEncoding* GlobalNamespace::AudioClipAudioSource::get_AudioEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::get_AudioEncoding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::AudioEncoding*, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipAudioSource.get_IsInputAvailable
bool GlobalNamespace::AudioClipAudioSource::get_IsInputAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::get_IsInputAvailable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipAudioSource.CheckForInput
void GlobalNamespace::AudioClipAudioSource::CheckForInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::CheckForInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipAudioSource.SetActiveClip
bool GlobalNamespace::AudioClipAudioSource::SetActiveClip(::StringW clipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::SetActiveClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clipName);
}
// Autogenerated method: AudioClipAudioSource.AddClip
void GlobalNamespace::AudioClipAudioSource::AddClip(::UnityEngine::AudioClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::AddClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: AudioClipAudioSource.AddClipData
void GlobalNamespace::AudioClipAudioSource::AddClipData(::UnityEngine::AudioClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::AddClipData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClipData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: AudioClipAudioSource/<>c__DisplayClass34_0
#include "GlobalNamespace/AudioClipAudioSource_--c__DisplayClass34_0.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String clipName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AudioClipAudioSource::$$c__DisplayClass34_0::dyn_clipName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::$$c__DisplayClass34_0::dyn_clipName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioClipAudioSource/<>c__DisplayClass34_0.<SetActiveClip>b__0
bool GlobalNamespace::AudioClipAudioSource::$$c__DisplayClass34_0::$SetActiveClip$b__0(::UnityEngine::AudioClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::$$c__DisplayClass34_0::<SetActiveClip>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetActiveClip>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clip);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AudioClipAudioSource/<ProcessClip>d__25
#include "GlobalNamespace/AudioClipAudioSource_-ProcessClip-d__25.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] clipData
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::dyn_clipData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::dyn_clipData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipData"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioClipAudioSource <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioClipAudioSource*& GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioClipAudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <chunkSize>5__2
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::dyn_$chunkSize$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::dyn_$chunkSize$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<chunkSize>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <index>5__3
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::dyn_$index$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::dyn_$index$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<index>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioClipAudioSource/<ProcessClip>d__25.System.IDisposable.Dispose
void GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipAudioSource/<ProcessClip>d__25.MoveNext
bool GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipAudioSource/<ProcessClip>d__25.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipAudioSource/<ProcessClip>d__25.System.Collections.IEnumerator.Reset
void GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipAudioSource/<ProcessClip>d__25.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AudioClipAudioSource::$ProcessClip$d__25*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Utilities.WitRuntimeStyles
#include "Utilities/WitRuntimeStyles.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single HeaderPaddingTop
float Utilities::WitRuntimeStyles::_get_HeaderPaddingTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Utilities::WitRuntimeStyles::_get_HeaderPaddingTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Utilities", "WitRuntimeStyles", "HeaderPaddingTop"));
}
// Autogenerated static field setter
// Set static field: static public System.Single HeaderPaddingTop
void Utilities::WitRuntimeStyles::_set_HeaderPaddingTop(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Utilities::WitRuntimeStyles::_set_HeaderPaddingTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Utilities", "WitRuntimeStyles", "HeaderPaddingTop", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.AudioDurationTracker
#include "Meta/WitAi/AudioDurationTracker.hpp"
// Including type: Meta.WitAi.Data.AudioEncoding
#include "Meta/WitAi/Data/AudioEncoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _requestId
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::AudioDurationTracker::dyn__requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::AudioDurationTracker::dyn__requestId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _bytesCaptured
[[deprecated("Use field access instead!")]] double& Meta::WitAi::AudioDurationTracker::dyn__bytesCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::AudioDurationTracker::dyn__bytesCaptured");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytesCaptured"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _bytesPerSample
[[deprecated("Use field access instead!")]] int& Meta::WitAi::AudioDurationTracker::dyn__bytesPerSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::AudioDurationTracker::dyn__bytesPerSample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytesPerSample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Meta.WitAi.Data.AudioEncoding _audioEncoding
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::AudioEncoding*& Meta::WitAi::AudioDurationTracker::dyn__audioEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::AudioDurationTracker::dyn__audioEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioEncoding"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::AudioEncoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _finalizeTimeStamp
[[deprecated("Use field access instead!")]] int64_t& Meta::WitAi::AudioDurationTracker::dyn__finalizeTimeStamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::AudioDurationTracker::dyn__finalizeTimeStamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalizeTimeStamp"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _audioDurationMs
[[deprecated("Use field access instead!")]] double& Meta::WitAi::AudioDurationTracker::dyn__audioDurationMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::AudioDurationTracker::dyn__audioDurationMs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioDurationMs"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.AudioDurationTracker.AddBytes
void Meta::WitAi::AudioDurationTracker::AddBytes(int64_t bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::AudioDurationTracker::AddBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes);
}
// Autogenerated method: Meta.WitAi.AudioDurationTracker.FinalizeAudio
void Meta::WitAi::AudioDurationTracker::FinalizeAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::AudioDurationTracker::FinalizeAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.AudioDurationTracker.GetFinalizeTimeStamp
int64_t Meta::WitAi::AudioDurationTracker::GetFinalizeTimeStamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::AudioDurationTracker::GetFinalizeTimeStamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFinalizeTimeStamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.AudioDurationTracker.GetAudioDuration
double Meta::WitAi::AudioDurationTracker::GetAudioDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::AudioDurationTracker::GetAudioDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAudioDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.AudioDurationTracker.GetRequestId
::StringW Meta::WitAi::AudioDurationTracker::GetRequestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::AudioDurationTracker::GetRequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.IRequest
#include "Meta/WitAi/IRequest.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.IRequest.get_Headers
::System::Net::WebHeaderCollection* Meta::WitAi::IRequest::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::get_Headers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IRequest.set_Headers
void Meta::WitAi::IRequest::set_Headers(::System::Net::WebHeaderCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::set_Headers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.IRequest.get_Method
::StringW Meta::WitAi::IRequest::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::get_Method");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IRequest.set_Method
void Meta::WitAi::IRequest::set_Method(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::set_Method");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.IRequest.get_ContentType
::StringW Meta::WitAi::IRequest::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::get_ContentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IRequest.set_ContentType
void Meta::WitAi::IRequest::set_ContentType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::set_ContentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.IRequest.get_ContentLength
int64_t Meta::WitAi::IRequest::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::get_ContentLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IRequest.set_ContentLength
void Meta::WitAi::IRequest::set_ContentLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::set_ContentLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.IRequest.get_SendChunked
bool Meta::WitAi::IRequest::get_SendChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::get_SendChunked");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IRequest.set_SendChunked
void Meta::WitAi::IRequest::set_SendChunked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::set_SendChunked");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.IRequest.get_UserAgent
::StringW Meta::WitAi::IRequest::get_UserAgent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::get_UserAgent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IRequest.set_UserAgent
void Meta::WitAi::IRequest::set_UserAgent(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::set_UserAgent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.IRequest.get_Timeout
int Meta::WitAi::IRequest::get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::get_Timeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IRequest.set_Timeout
void Meta::WitAi::IRequest::set_Timeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::set_Timeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.IRequest.BeginGetRequestStream
::System::IAsyncResult* Meta::WitAi::IRequest::BeginGetRequestStream(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::BeginGetRequestStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: Meta.WitAi.IRequest.BeginGetResponse
::System::IAsyncResult* Meta::WitAi::IRequest::BeginGetResponse(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::BeginGetResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: Meta.WitAi.IRequest.EndGetRequestStream
::System::IO::Stream* Meta::WitAi::IRequest::EndGetRequestStream(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::EndGetRequestStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Meta.WitAi.IRequest.EndGetResponse
::System::Net::WebResponse* Meta::WitAi::IRequest::EndGetResponse(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::EndGetResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebResponse*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Meta.WitAi.IRequest.Abort
void Meta::WitAi::IRequest::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::Abort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IRequest.Dispose
void Meta::WitAi::IRequest::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IRequest::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IRequest*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.MatchIntent
#include "Meta/WitAi/MatchIntent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.RegisteredMatchIntent
#include "Meta/WitAi/RegisteredMatchIntent.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: Meta.WitAi.MatchIntent
#include "Meta/WitAi/MatchIntent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& Meta::WitAi::RegisteredMatchIntent::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::RegisteredMatchIntent::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodInfo method
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& Meta::WitAi::RegisteredMatchIntent::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::RegisteredMatchIntent::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.MatchIntent matchIntent
[[deprecated("Use field access instead!")]] ::Meta::WitAi::MatchIntent*& Meta::WitAi::RegisteredMatchIntent::dyn_matchIntent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::RegisteredMatchIntent::dyn_matchIntent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matchIntent"))->offset;
  return *reinterpret_cast<::Meta::WitAi::MatchIntent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.MatchIntentRegistry
#include "Meta/WitAi/MatchIntentRegistry.hpp"
// Including type: Meta.WitAi.Utilities.DictionaryList`2
#include "Meta/WitAi/Utilities/DictionaryList_2.hpp"
// Including type: Meta.WitAi.RegisteredMatchIntent
#include "Meta/WitAi/RegisteredMatchIntent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Meta.WitAi.Utilities.DictionaryList`2<System.String,Meta.WitAi.RegisteredMatchIntent> registeredMethods
::Meta::WitAi::Utilities::DictionaryList_2<::StringW, ::Meta::WitAi::RegisteredMatchIntent*>* Meta::WitAi::MatchIntentRegistry::_get_registeredMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::MatchIntentRegistry::_get_registeredMethods");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Meta::WitAi::Utilities::DictionaryList_2<::StringW, ::Meta::WitAi::RegisteredMatchIntent*>*>("Meta.WitAi", "MatchIntentRegistry", "registeredMethods")));
}
// Autogenerated static field setter
// Set static field: static private Meta.WitAi.Utilities.DictionaryList`2<System.String,Meta.WitAi.RegisteredMatchIntent> registeredMethods
void Meta::WitAi::MatchIntentRegistry::_set_registeredMethods(::Meta::WitAi::Utilities::DictionaryList_2<::StringW, ::Meta::WitAi::RegisteredMatchIntent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::MatchIntentRegistry::_set_registeredMethods");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "MatchIntentRegistry", "registeredMethods", value));
}
// Autogenerated method: Meta.WitAi.MatchIntentRegistry.get_RegisteredMethods
::Meta::WitAi::Utilities::DictionaryList_2<::StringW, ::Meta::WitAi::RegisteredMatchIntent*>* Meta::WitAi::MatchIntentRegistry::get_RegisteredMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::MatchIntentRegistry::get_RegisteredMethods");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "MatchIntentRegistry", "get_RegisteredMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Utilities::DictionaryList_2<::StringW, ::Meta::WitAi::RegisteredMatchIntent*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.WitAi.MatchIntentRegistry.Initialize
void Meta::WitAi::MatchIntentRegistry::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::MatchIntentRegistry::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "MatchIntentRegistry", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.WitAi.MatchIntentRegistry.RefreshAssemblies
void Meta::WitAi::MatchIntentRegistry::RefreshAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::MatchIntentRegistry::RefreshAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "MatchIntentRegistry", "RefreshAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.ValidatePartialIntent
#include "Meta/WitAi/ValidatePartialIntent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.VoiceService
#include "Meta/WitAi/VoiceService.hpp"
// Including type: Meta.WitAi.VoiceService/<>c__DisplayClass58_0
#include "Meta/WitAi/VoiceService_--c__DisplayClass58_0.hpp"
// Including type: Meta.WitAi.Data.Configuration.WitConfiguration
#include "Meta/WitAi/Data/Configuration/WitConfiguration.hpp"
// Including type: Meta.Conduit.IParameterProvider
#include "Meta/Conduit/IParameterProvider.hpp"
// Including type: Meta.WitAi.Events.VoiceEvents
#include "Meta/WitAi/Events/VoiceEvents.hpp"
// Including type: Meta.WitAi.Events.TelemetryEvents
#include "Meta/WitAi/Events/TelemetryEvents.hpp"
// Including type: Meta.Conduit.IConduitDispatcher
#include "Meta/Conduit/IConduitDispatcher.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Interfaces.ITranscriptionProvider
#include "Meta/WitAi/Interfaces/ITranscriptionProvider.hpp"
// Including type: Meta.WitAi.Interfaces.IAudioInputEvents
#include "Meta/WitAi/Interfaces/IAudioInputEvents.hpp"
// Including type: Meta.WitAi.Interfaces.ITranscriptionEvent
#include "Meta/WitAi/Interfaces/ITranscriptionEvent.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Meta.WitAi.Data.VoiceSession
#include "Meta/WitAi/Data/VoiceSession.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
// Including type: Meta.WitAi.Data.Intents.WitIntentData
#include "Meta/WitAi/Data/Intents/WitIntentData.hpp"
// Including type: Meta.WitAi.RegisteredMatchIntent
#include "Meta/WitAi/RegisteredMatchIntent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Data.Configuration.WitConfiguration _witConfiguration
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::Configuration::WitConfiguration*& Meta::WitAi::VoiceService::dyn__witConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::dyn__witConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_witConfiguration"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::Configuration::WitConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Meta.Conduit.IParameterProvider _conduitParameterProvider
[[deprecated("Use field access instead!")]] ::Meta::Conduit::IParameterProvider*& Meta::WitAi::VoiceService::dyn__conduitParameterProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::dyn__conduitParameterProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_conduitParameterProvider"))->offset;
  return *reinterpret_cast<::Meta::Conduit::IParameterProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Meta.WitAi.Events.VoiceEvents events
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::VoiceEvents*& Meta::WitAi::VoiceService::dyn_events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::dyn_events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "events"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::VoiceEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Meta.WitAi.Events.TelemetryEvents telemetryEvents
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Events::TelemetryEvents*& Meta::WitAi::VoiceService::dyn_telemetryEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::dyn_telemetryEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "telemetryEvents"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Events::TelemetryEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.Conduit.IConduitDispatcher <ConduitDispatcher>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::Conduit::IConduitDispatcher*& Meta::WitAi::VoiceService::dyn_$ConduitDispatcher$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::dyn_$ConduitDispatcher$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ConduitDispatcher>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::Conduit::IConduitDispatcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<Meta.WitAi.Requests.VoiceServiceRequest> <Requests>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*& Meta::WitAi::VoiceService::dyn_$Requests$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::dyn_$Requests$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Requests>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Meta::WitAi::Requests::VoiceServiceRequest*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.VoiceService.get_UseConduit
bool Meta::WitAi::VoiceService::get_UseConduit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::get_UseConduit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseConduit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.get_UsePlatformIntegrations
bool Meta::WitAi::VoiceService::get_UsePlatformIntegrations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::get_UsePlatformIntegrations");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.set_UsePlatformIntegrations
void Meta::WitAi::VoiceService::set_UsePlatformIntegrations(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::set_UsePlatformIntegrations");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.VoiceService.get_WitConfiguration
::Meta::WitAi::Data::Configuration::WitConfiguration* Meta::WitAi::VoiceService::get_WitConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::get_WitConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WitConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Configuration::WitConfiguration*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.get_Active
bool Meta::WitAi::VoiceService::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.get_ConduitDispatcher
::Meta::Conduit::IConduitDispatcher* Meta::WitAi::VoiceService::get_ConduitDispatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::get_ConduitDispatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConduitDispatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::Conduit::IConduitDispatcher*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.set_ConduitDispatcher
void Meta::WitAi::VoiceService::set_ConduitDispatcher(::Meta::Conduit::IConduitDispatcher* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::set_ConduitDispatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConduitDispatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.VoiceService.get_IsRequestActive
bool Meta::WitAi::VoiceService::get_IsRequestActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::get_IsRequestActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.get_TranscriptionProvider
::Meta::WitAi::Interfaces::ITranscriptionProvider* Meta::WitAi::VoiceService::get_TranscriptionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::get_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::ITranscriptionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.set_TranscriptionProvider
void Meta::WitAi::VoiceService::set_TranscriptionProvider(::Meta::WitAi::Interfaces::ITranscriptionProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::set_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.VoiceService.get_MicActive
bool Meta::WitAi::VoiceService::get_MicActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::get_MicActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.get_VoiceEvents
::Meta::WitAi::Events::VoiceEvents* Meta::WitAi::VoiceService::get_VoiceEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::get_VoiceEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::VoiceEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.set_VoiceEvents
void Meta::WitAi::VoiceService::set_VoiceEvents(::Meta::WitAi::Events::VoiceEvents* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::set_VoiceEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.VoiceService.get_TelemetryEvents
::Meta::WitAi::Events::TelemetryEvents* Meta::WitAi::VoiceService::get_TelemetryEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::get_TelemetryEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::TelemetryEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.set_TelemetryEvents
void Meta::WitAi::VoiceService::set_TelemetryEvents(::Meta::WitAi::Events::TelemetryEvents* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::set_TelemetryEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.VoiceService.get_AudioEvents
::Meta::WitAi::Interfaces::IAudioInputEvents* Meta::WitAi::VoiceService::get_AudioEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::get_AudioEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::IAudioInputEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.get_TranscriptionEvents
::Meta::WitAi::Interfaces::ITranscriptionEvent* Meta::WitAi::VoiceService::get_TranscriptionEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::get_TranscriptionEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TranscriptionEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::ITranscriptionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.get_ShouldSendMicData
bool Meta::WitAi::VoiceService::get_ShouldSendMicData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::get_ShouldSendMicData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.get_Requests
::System::Collections::Generic::HashSet_1<::Meta::WitAi::Requests::VoiceServiceRequest*>* Meta::WitAi::VoiceService::get_Requests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::get_Requests");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.Activate
void Meta::WitAi::VoiceService::Activate(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Meta.WitAi.VoiceService.Activate
void Meta::WitAi::VoiceService::Activate(::StringW text, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(requestOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, requestOptions);
}
// Autogenerated method: Meta.WitAi.VoiceService.Activate
::Meta::WitAi::Requests::VoiceServiceRequest* Meta::WitAi::VoiceService::Activate(::StringW text, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(requestEvents)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, text, requestEvents);
}
// Autogenerated method: Meta.WitAi.VoiceService.Activate
::Meta::WitAi::Requests::VoiceServiceRequest* Meta::WitAi::VoiceService::Activate(::StringW text, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, text, requestOptions, requestEvents);
}
// Autogenerated method: Meta.WitAi.VoiceService.OnTextRequestCreated
void Meta::WitAi::VoiceService::OnTextRequestCreated(::Meta::WitAi::Requests::VoiceServiceRequest* textRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::OnTextRequestCreated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textRequest);
}
// Autogenerated method: Meta.WitAi.VoiceService.CanSend
bool Meta::WitAi::VoiceService::CanSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::CanSend");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 42));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.GetSendError
::StringW Meta::WitAi::VoiceService::GetSendError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::GetSendError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 43));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.HandleRequestResults
void Meta::WitAi::VoiceService::HandleRequestResults(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::HandleRequestResults");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.VoiceService.CanActivateAudio
bool Meta::WitAi::VoiceService::CanActivateAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::CanActivateAudio");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 45));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.GetActivateAudioError
::StringW Meta::WitAi::VoiceService::GetActivateAudioError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::GetActivateAudioError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.Activate
void Meta::WitAi::VoiceService::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.Activate
void Meta::WitAi::VoiceService::Activate(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestOptions);
}
// Autogenerated method: Meta.WitAi.VoiceService.Activate
::Meta::WitAi::Requests::VoiceServiceRequest* Meta::WitAi::VoiceService::Activate(::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestEvents)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestEvents);
}
// Autogenerated method: Meta.WitAi.VoiceService.Activate
::Meta::WitAi::Requests::VoiceServiceRequest* Meta::WitAi::VoiceService::Activate(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents);
}
// Autogenerated method: Meta.WitAi.VoiceService.ActivateImmediately
void Meta::WitAi::VoiceService::ActivateImmediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::ActivateImmediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateImmediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.ActivateImmediately
void Meta::WitAi::VoiceService::ActivateImmediately(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::ActivateImmediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateImmediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestOptions);
}
// Autogenerated method: Meta.WitAi.VoiceService.ActivateImmediately
::Meta::WitAi::Requests::VoiceServiceRequest* Meta::WitAi::VoiceService::ActivateImmediately(::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::ActivateImmediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateImmediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestEvents)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestEvents);
}
// Autogenerated method: Meta.WitAi.VoiceService.ActivateImmediately
::Meta::WitAi::Requests::VoiceServiceRequest* Meta::WitAi::VoiceService::ActivateImmediately(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::ActivateImmediately");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents);
}
// Autogenerated method: Meta.WitAi.VoiceService.OnAudioRequestCreated
void Meta::WitAi::VoiceService::OnAudioRequestCreated(::Meta::WitAi::Requests::VoiceServiceRequest* audioRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::OnAudioRequestCreated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioRequest);
}
// Autogenerated method: Meta.WitAi.VoiceService.OnAudioPartialResponse
void Meta::WitAi::VoiceService::OnAudioPartialResponse(::Meta::WitAi::Requests::VoiceServiceRequest* audioRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::OnAudioPartialResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioRequest);
}
// Autogenerated method: Meta.WitAi.VoiceService.Deactivate
void Meta::WitAi::VoiceService::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::Deactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.DeactivateAndAbortRequest
void Meta::WitAi::VoiceService::DeactivateAndAbortRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::DeactivateAndAbortRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.DeactivateAndAbortRequest
void Meta::WitAi::VoiceService::DeactivateAndAbortRequest(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::DeactivateAndAbortRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.VoiceService.GetObjectsOfType
::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* Meta::WitAi::VoiceService::GetObjectsOfType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::GetObjectsOfType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*, false>(this, ___internal__method, type);
}
// Autogenerated method: Meta.WitAi.VoiceService.Awake
void Meta::WitAi::VoiceService::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.InitializeEventListeners
void Meta::WitAi::VoiceService::InitializeEventListeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::InitializeEventListeners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeEventListeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.OnEnable
void Meta::WitAi::VoiceService::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.OnDisable
void Meta::WitAi::VoiceService::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.VoiceService.OnFinalTranscription
void Meta::WitAi::VoiceService::OnFinalTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::OnFinalTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Meta.WitAi.VoiceService.GetVoiceSession
::Meta::WitAi::Data::VoiceSession* Meta::WitAi::VoiceService::GetVoiceSession(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::GetVoiceSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVoiceSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::VoiceSession*, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.VoiceService.HandleResponse
void Meta::WitAi::VoiceService::HandleResponse(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::HandleResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 58));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.VoiceService.HandleIntents
void Meta::WitAi::VoiceService::HandleIntents(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::HandleIntents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleIntents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.VoiceService.HandleIntent
void Meta::WitAi::VoiceService::HandleIntent(::Meta::WitAi::Data::Intents::WitIntentData* intent, ::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::HandleIntent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleIntent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(intent), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, intent, response);
}
// Autogenerated method: Meta.WitAi.VoiceService.ExecuteRegisteredMatch
void Meta::WitAi::VoiceService::ExecuteRegisteredMatch(::Meta::WitAi::RegisteredMatchIntent* registeredMethod, ::Meta::WitAi::Data::Intents::WitIntentData* intent, ::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::ExecuteRegisteredMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteRegisteredMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(registeredMethod), ::il2cpp_utils::ExtractType(intent), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, registeredMethod, intent, response);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.VoiceService/<>c__DisplayClass58_0
#include "Meta/WitAi/VoiceService_--c__DisplayClass58_0.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.VoiceService <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::VoiceService*& Meta::WitAi::VoiceService::$$c__DisplayClass58_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::$$c__DisplayClass58_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::VoiceService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Requests.VoiceServiceRequest audioRequest
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Requests::VoiceServiceRequest*& Meta::WitAi::VoiceService::$$c__DisplayClass58_0::dyn_audioRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::$$c__DisplayClass58_0::dyn_audioRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioRequest"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Requests::VoiceServiceRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.VoiceService/<>c__DisplayClass58_0.<OnAudioRequestCreated>b__0
void Meta::WitAi::VoiceService::$$c__DisplayClass58_0::$OnAudioRequestCreated$b__0(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::VoiceService::$$c__DisplayClass58_0::<OnAudioRequestCreated>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnAudioRequestCreated>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.IVoiceService
#include "Meta/WitAi/IVoiceService.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Events.VoiceEvents
#include "Meta/WitAi/Events/VoiceEvents.hpp"
// Including type: Meta.WitAi.Events.TelemetryEvents
#include "Meta/WitAi/Events/TelemetryEvents.hpp"
// Including type: Meta.WitAi.Interfaces.ITranscriptionProvider
#include "Meta/WitAi/Interfaces/ITranscriptionProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.IVoiceService.get_IsRequestActive
bool Meta::WitAi::IVoiceService::get_IsRequestActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceService::get_IsRequestActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IVoiceService.get_UsePlatformIntegrations
bool Meta::WitAi::IVoiceService::get_UsePlatformIntegrations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceService::get_UsePlatformIntegrations");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IVoiceService.set_UsePlatformIntegrations
void Meta::WitAi::IVoiceService::set_UsePlatformIntegrations(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceService::set_UsePlatformIntegrations");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceService*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.IVoiceService.get_Requests
::System::Collections::Generic::HashSet_1<::Meta::WitAi::Requests::VoiceServiceRequest*>* Meta::WitAi::IVoiceService::get_Requests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceService::get_Requests");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IVoiceService.get_MicActive
bool Meta::WitAi::IVoiceService::get_MicActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceService::get_MicActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IVoiceService.get_VoiceEvents
::Meta::WitAi::Events::VoiceEvents* Meta::WitAi::IVoiceService::get_VoiceEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceService::get_VoiceEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::VoiceEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IVoiceService.set_VoiceEvents
void Meta::WitAi::IVoiceService::set_VoiceEvents(::Meta::WitAi::Events::VoiceEvents* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceService::set_VoiceEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceService*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.IVoiceService.get_TelemetryEvents
::Meta::WitAi::Events::TelemetryEvents* Meta::WitAi::IVoiceService::get_TelemetryEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceService::get_TelemetryEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::TelemetryEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IVoiceService.set_TelemetryEvents
void Meta::WitAi::IVoiceService::set_TelemetryEvents(::Meta::WitAi::Events::TelemetryEvents* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceService::set_TelemetryEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceService*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.IVoiceService.get_TranscriptionProvider
::Meta::WitAi::Interfaces::ITranscriptionProvider* Meta::WitAi::IVoiceService::get_TranscriptionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceService::get_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::ITranscriptionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IVoiceService.set_TranscriptionProvider
void Meta::WitAi::IVoiceService::set_TranscriptionProvider(::Meta::WitAi::Interfaces::ITranscriptionProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceService::set_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceService*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.IVoiceService.CanActivateAudio
bool Meta::WitAi::IVoiceService::CanActivateAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceService::CanActivateAudio");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IVoiceService.CanSend
bool Meta::WitAi::IVoiceService::CanSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceService::CanSend");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.IVoiceActivationHandler
#include "Meta/WitAi/IVoiceActivationHandler.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.IVoiceActivationHandler.get_Active
bool Meta::WitAi::IVoiceActivationHandler::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceActivationHandler::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceActivationHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IVoiceActivationHandler.Activate
::Meta::WitAi::Requests::VoiceServiceRequest* Meta::WitAi::IVoiceActivationHandler::Activate(::StringW text, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceActivationHandler::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceActivationHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, text, requestOptions, requestEvents);
}
// Autogenerated method: Meta.WitAi.IVoiceActivationHandler.Activate
::Meta::WitAi::Requests::VoiceServiceRequest* Meta::WitAi::IVoiceActivationHandler::Activate(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceActivationHandler::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceActivationHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents);
}
// Autogenerated method: Meta.WitAi.IVoiceActivationHandler.ActivateImmediately
::Meta::WitAi::Requests::VoiceServiceRequest* Meta::WitAi::IVoiceActivationHandler::ActivateImmediately(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceActivationHandler::ActivateImmediately");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceActivationHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents);
}
// Autogenerated method: Meta.WitAi.IVoiceActivationHandler.Deactivate
void Meta::WitAi::IVoiceActivationHandler::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceActivationHandler::Deactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceActivationHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IVoiceActivationHandler.DeactivateAndAbortRequest
void Meta::WitAi::IVoiceActivationHandler::DeactivateAndAbortRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceActivationHandler::DeactivateAndAbortRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceActivationHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.IVoiceActivationHandler.DeactivateAndAbortRequest
void Meta::WitAi::IVoiceActivationHandler::DeactivateAndAbortRequest(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceActivationHandler::DeactivateAndAbortRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceActivationHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Wit
#include "Meta/WitAi/Wit.hpp"
// Including type: Meta.WitAi.Configuration.WitRuntimeConfiguration
#include "Meta/WitAi/Configuration/WitRuntimeConfiguration.hpp"
// Including type: Meta.WitAi.WitService
#include "Meta/WitAi/WitService.hpp"
// Including type: Meta.WitAi.Interfaces.ITranscriptionProvider
#include "Meta/WitAi/Interfaces/ITranscriptionProvider.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Configuration.WitRuntimeConfiguration witRuntimeConfiguration
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Configuration::WitRuntimeConfiguration*& Meta::WitAi::Wit::dyn_witRuntimeConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::dyn_witRuntimeConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "witRuntimeConfiguration"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Configuration::WitRuntimeConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.WitService witService
[[deprecated("Use field access instead!")]] ::Meta::WitAi::WitService*& Meta::WitAi::Wit::dyn_witService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::dyn_witService");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "witService"))->offset;
  return *reinterpret_cast<::Meta::WitAi::WitService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Wit.get_RuntimeConfiguration
::Meta::WitAi::Configuration::WitRuntimeConfiguration* Meta::WitAi::Wit::get_RuntimeConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::get_RuntimeConfiguration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::Wit*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Configuration::WitRuntimeConfiguration*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Wit.set_RuntimeConfiguration
void Meta::WitAi::Wit::set_RuntimeConfiguration(::Meta::WitAi::Configuration::WitRuntimeConfiguration* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::set_RuntimeConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RuntimeConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Wit.get_Active
bool Meta::WitAi::Wit::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Wit.get_IsRequestActive
bool Meta::WitAi::Wit::get_IsRequestActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::get_IsRequestActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Wit.get_TranscriptionProvider
::Meta::WitAi::Interfaces::ITranscriptionProvider* Meta::WitAi::Wit::get_TranscriptionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::get_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::ITranscriptionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Wit.set_TranscriptionProvider
void Meta::WitAi::Wit::set_TranscriptionProvider(::Meta::WitAi::Interfaces::ITranscriptionProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::set_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Wit.get_MicActive
bool Meta::WitAi::Wit::get_MicActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::get_MicActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 34));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Wit.get_ShouldSendMicData
bool Meta::WitAi::Wit::get_ShouldSendMicData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::get_ShouldSendMicData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 39));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Wit.GetSendError
::StringW Meta::WitAi::Wit::GetSendError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::GetSendError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 43));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Wit.GetActivateAudioError
::StringW Meta::WitAi::Wit::GetActivateAudioError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::GetActivateAudioError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Wit.Activate
::Meta::WitAi::Requests::VoiceServiceRequest* Meta::WitAi::Wit::Activate(::StringW text, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, text, requestOptions, requestEvents);
}
// Autogenerated method: Meta.WitAi.Wit.Activate
::Meta::WitAi::Requests::VoiceServiceRequest* Meta::WitAi::Wit::Activate(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents);
}
// Autogenerated method: Meta.WitAi.Wit.ActivateImmediately
::Meta::WitAi::Requests::VoiceServiceRequest* Meta::WitAi::Wit::ActivateImmediately(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::ActivateImmediately");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents);
}
// Autogenerated method: Meta.WitAi.Wit.Deactivate
void Meta::WitAi::Wit::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::Deactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Wit.DeactivateAndAbortRequest
void Meta::WitAi::Wit::DeactivateAndAbortRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::DeactivateAndAbortRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Wit.Awake
void Meta::WitAi::Wit::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Wit::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::VoiceService*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.WitAuthUtility
#include "Meta/WitAi/WitAuthUtility.hpp"
// Including type: Meta.WitAi.WitAuthUtility/DefaultTokenValidatorProvider
#include "Meta/WitAi/WitAuthUtility_DefaultTokenValidatorProvider.hpp"
// Including type: Meta.WitAi.WitAuthUtility/ITokenValidationProvider
#include "Meta/WitAi/WitAuthUtility_ITokenValidationProvider.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Meta.WitAi.Data.Configuration.WitConfiguration
#include "Meta/WitAi/Data/Configuration/WitConfiguration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String serverToken
::StringW Meta::WitAi::WitAuthUtility::_get_serverToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::_get_serverToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitAuthUtility", "serverToken"));
}
// Autogenerated static field setter
// Set static field: static private System.String serverToken
void Meta::WitAi::WitAuthUtility::_set_serverToken(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::_set_serverToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitAuthUtility", "serverToken", value));
}
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.WitAuthUtility/ITokenValidationProvider tokenValidator
::Meta::WitAi::WitAuthUtility::ITokenValidationProvider* Meta::WitAi::WitAuthUtility::_get_tokenValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::_get_tokenValidator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::WitAuthUtility::ITokenValidationProvider*>("Meta.WitAi", "WitAuthUtility", "tokenValidator"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.WitAuthUtility/ITokenValidationProvider tokenValidator
void Meta::WitAi::WitAuthUtility::_set_tokenValidator(::Meta::WitAi::WitAuthUtility::ITokenValidationProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::_set_tokenValidator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitAuthUtility", "tokenValidator", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SERVER_TOKEN_ID
::StringW Meta::WitAi::WitAuthUtility::_get_SERVER_TOKEN_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::_get_SERVER_TOKEN_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitAuthUtility", "SERVER_TOKEN_ID"));
}
// Autogenerated static field setter
// Set static field: static public System.String SERVER_TOKEN_ID
void Meta::WitAi::WitAuthUtility::_set_SERVER_TOKEN_ID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::_set_SERVER_TOKEN_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitAuthUtility", "SERVER_TOKEN_ID", value));
}
// Autogenerated method: Meta.WitAi.WitAuthUtility.IsServerTokenValid
bool Meta::WitAi::WitAuthUtility::IsServerTokenValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::IsServerTokenValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitAuthUtility", "IsServerTokenValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitAuthUtility.IsServerTokenValid
bool Meta::WitAi::WitAuthUtility::IsServerTokenValid(::StringW token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::IsServerTokenValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitAuthUtility", "IsServerTokenValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: Meta.WitAi.WitAuthUtility.GetAppServerToken
::StringW Meta::WitAi::WitAuthUtility::GetAppServerToken(::Meta::WitAi::Data::Configuration::WitConfiguration* configuration, ::StringW defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::GetAppServerToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitAuthUtility", "GetAppServerToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, configuration, defaultValue);
}
// Autogenerated method: Meta.WitAi.WitAuthUtility.GetAppServerToken
::StringW Meta::WitAi::WitAuthUtility::GetAppServerToken(::StringW appId, ::StringW defaultServerToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::GetAppServerToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitAuthUtility", "GetAppServerToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(defaultServerToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId, defaultServerToken);
}
// Autogenerated method: Meta.WitAi.WitAuthUtility.GetAppId
::StringW Meta::WitAi::WitAuthUtility::GetAppId(::StringW serverToken, ::StringW defaultAppID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::GetAppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitAuthUtility", "GetAppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverToken), ::il2cpp_utils::ExtractType(defaultAppID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, serverToken, defaultAppID);
}
// Autogenerated method: Meta.WitAi.WitAuthUtility.SetAppServerToken
void Meta::WitAi::WitAuthUtility::SetAppServerToken(::StringW appId, ::StringW token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::SetAppServerToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitAuthUtility", "SetAppServerToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId, token);
}
// Autogenerated method: Meta.WitAi.WitAuthUtility.get_ServerToken
::StringW Meta::WitAi::WitAuthUtility::get_ServerToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::get_ServerToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitAuthUtility", "get_ServerToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitAuthUtility..cctor
void Meta::WitAi::WitAuthUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitAuthUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.WitAuthUtility/DefaultTokenValidatorProvider
#include "Meta/WitAi/WitAuthUtility_DefaultTokenValidatorProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.WitAuthUtility/DefaultTokenValidatorProvider.IsTokenValid
bool Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider::IsTokenValid(::StringW appId, ::StringW token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider::IsTokenValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId, token);
}
// Autogenerated method: Meta.WitAi.WitAuthUtility/DefaultTokenValidatorProvider.IsServerTokenValid
bool Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider::IsServerTokenValid(::StringW serverToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider::IsServerTokenValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitAuthUtility::DefaultTokenValidatorProvider*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, serverToken);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.WitAuthUtility/ITokenValidationProvider
#include "Meta/WitAi/WitAuthUtility_ITokenValidationProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.WitAuthUtility/ITokenValidationProvider.IsTokenValid
bool Meta::WitAi::WitAuthUtility::ITokenValidationProvider::IsTokenValid(::StringW appId, ::StringW token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::ITokenValidationProvider::IsTokenValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitAuthUtility::ITokenValidationProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId, token);
}
// Autogenerated method: Meta.WitAi.WitAuthUtility/ITokenValidationProvider.IsServerTokenValid
bool Meta::WitAi::WitAuthUtility::ITokenValidationProvider::IsServerTokenValid(::StringW serverToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitAuthUtility::ITokenValidationProvider::IsServerTokenValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitAuthUtility::ITokenValidationProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, serverToken);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.WitConduitParameterProvider
#include "Meta/WitAi/WitConduitParameterProvider.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.WitConduitParameterProvider.GetSpecializedParameter
::Il2CppObject* Meta::WitAi::WitConduitParameterProvider::GetSpecializedParameter(::System::Reflection::ParameterInfo* formalParameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConduitParameterProvider::GetSpecializedParameter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ParameterProvider*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, formalParameter);
}
// Autogenerated method: Meta.WitAi.WitConduitParameterProvider.SupportedSpecializedParameter
bool Meta::WitAi::WitConduitParameterProvider::SupportedSpecializedParameter(::System::Reflection::ParameterInfo* formalParameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitConduitParameterProvider::SupportedSpecializedParameter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Conduit::ParameterProvider*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, formalParameter);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.WitRequest
#include "Meta/WitAi/WitRequest.hpp"
// Including type: Meta.WitAi.WitRequest/OnProvideCustomHeadersEvent
#include "Meta/WitAi/WitRequest_OnProvideCustomHeadersEvent.hpp"
// Including type: Meta.WitAi.WitRequest/OnCustomizeUriEvent
#include "Meta/WitAi/WitRequest_OnCustomizeUriEvent.hpp"
// Including type: Meta.WitAi.WitRequest/PreSendRequestDelegate
#include "Meta/WitAi/WitRequest_PreSendRequestDelegate.hpp"
// Including type: Meta.WitAi.WitRequest/<>c__DisplayClass99_0
#include "Meta/WitAi/WitRequest_--c__DisplayClass99_0.hpp"
// Including type: Meta.WitAi.Data.Configuration.WitConfiguration
#include "Meta/WitAi/Data/Configuration/WitConfiguration.hpp"
// Including type: Meta.WitAi.Data.AudioEncoding
#include "Meta/WitAi/Data/AudioEncoding.hpp"
// Including type: Meta.WitAi.AudioDurationTracker
#include "Meta/WitAi/AudioDurationTracker.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Collections.Concurrent.ConcurrentQueue`1
#include "System/Collections/Concurrent/ConcurrentQueue_1.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
// Including type: Meta.Voice.VoiceRequestState
#include "Meta/Voice/VoiceRequestState.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestOptions/QueryParam
#include "Meta/WitAi/Requests/VoiceServiceRequestOptions_QueryParam.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Meta.WitAi.WitRequest/PreSendRequestDelegate onPreSendRequest
::Meta::WitAi::WitRequest::PreSendRequestDelegate* Meta::WitAi::WitRequest::_get_onPreSendRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::_get_onPreSendRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Meta::WitAi::WitRequest::PreSendRequestDelegate*>("Meta.WitAi", "WitRequest", "onPreSendRequest"));
}
// Autogenerated static field setter
// Set static field: static public Meta.WitAi.WitRequest/PreSendRequestDelegate onPreSendRequest
void Meta::WitAi::WitRequest::_set_onPreSendRequest(::Meta::WitAi::WitRequest::PreSendRequestDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::_set_onPreSendRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitRequest", "onPreSendRequest", value));
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Data.Configuration.WitConfiguration <Configuration>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::Configuration::WitConfiguration*& Meta::WitAi::WitRequest::dyn_$Configuration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_$Configuration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Configuration>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::Configuration::WitConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <TimeoutMs>k__BackingField
[[deprecated("Use field access instead!")]] int& Meta::WitAi::WitRequest::dyn_$TimeoutMs$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_$TimeoutMs$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TimeoutMs>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Data.AudioEncoding <AudioEncoding>k__BackingField
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::AudioEncoding*& Meta::WitAi::WitRequest::dyn_$AudioEncoding$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_$AudioEncoding$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AudioEncoding>k__BackingField"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::AudioEncoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Path>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::WitRequest::dyn_$Path$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_$Path$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Path>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Command>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::WitRequest::dyn_$Command$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_$Command$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Command>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsPost>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::WitRequest::dyn_$IsPost$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_$IsPost$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsPost>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] postData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Meta::WitAi::WitRequest::dyn_postData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_postData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "postData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String postContentType
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::WitRequest::dyn_postContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_postContentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "postContentType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String forcedHttpMethodType
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::WitRequest::dyn_forcedHttpMethodType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_forcedHttpMethodType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forcedHttpMethodType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <HasResponseStarted>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::WitRequest::dyn_$HasResponseStarted$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_$HasResponseStarted$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HasResponseStarted>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsInputStreamReady>k__BackingField
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::WitRequest::dyn_$IsInputStreamReady$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_$IsInputStreamReady$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsInputStreamReady>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.AudioDurationTracker audioDurationTracker
[[deprecated("Use field access instead!")]] ::Meta::WitAi::AudioDurationTracker*& Meta::WitAi::WitRequest::dyn_audioDurationTracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_audioDurationTracker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioDurationTracker"))->offset;
  return *reinterpret_cast<::Meta::WitAi::AudioDurationTracker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpWebRequest _request
[[deprecated("Use field access instead!")]] ::System::Net::HttpWebRequest*& Meta::WitAi::WitRequest::dyn__request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn__request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_request"))->offset;
  return *reinterpret_cast<::System::Net::HttpWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _writeStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& Meta::WitAi::WitRequest::dyn__writeStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn__writeStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _streamLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Meta::WitAi::WitRequest::dyn__streamLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn__streamLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_streamLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bytesWritten
[[deprecated("Use field access instead!")]] int& Meta::WitAi::WitRequest::dyn__bytesWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn__bytesWritten");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytesWritten"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _stackTrace
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::WitRequest::dyn__stackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn__stackTrace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stackTrace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime _requestStartTime
[[deprecated("Use field access instead!")]] ::System::DateTime& Meta::WitAi::WitRequest::dyn__requestStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn__requestStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestStartTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Concurrent.ConcurrentQueue`1<System.Byte[]> _writeBuffer
[[deprecated("Use field access instead!")]] ::System::Collections::Concurrent::ConcurrentQueue_1<::ArrayW<uint8_t>>*& Meta::WitAi::WitRequest::dyn__writeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn__writeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeBuffer"))->offset;
  return *reinterpret_cast<::System::Collections::Concurrent::ConcurrentQueue_1<::ArrayW<uint8_t>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <StatusDescription>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::WitRequest::dyn_$StatusDescription$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_$StatusDescription$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StatusDescription>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Json.WitResponseNode _lastResponseData
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Json::WitResponseNode*& Meta::WitAi::WitRequest::dyn__lastResponseData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn__lastResponseData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastResponseData"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Json::WitResponseNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.WitRequest/OnProvideCustomHeadersEvent onProvideCustomHeaders
[[deprecated("Use field access instead!")]] ::Meta::WitAi::WitRequest::OnProvideCustomHeadersEvent*& Meta::WitAi::WitRequest::dyn_onProvideCustomHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_onProvideCustomHeaders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onProvideCustomHeaders"))->offset;
  return *reinterpret_cast<::Meta::WitAi::WitRequest::OnProvideCustomHeadersEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Meta.WitAi.WitRequest> onInputStreamReady
[[deprecated("Use field access instead!")]] ::System::Action_1<::Meta::WitAi::WitRequest*>*& Meta::WitAi::WitRequest::dyn_onInputStreamReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_onInputStreamReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onInputStreamReady"))->offset;
  return *reinterpret_cast<::System::Action_1<::Meta::WitAi::WitRequest*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> onRawResponse
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& Meta::WitAi::WitRequest::dyn_onRawResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_onRawResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onRawResponse"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.WitRequest/OnCustomizeUriEvent onCustomizeUri
[[deprecated("Use field access instead!")]] ::Meta::WitAi::WitRequest::OnCustomizeUriEvent*& Meta::WitAi::WitRequest::dyn_onCustomizeUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_onCustomizeUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onCustomizeUri"))->offset;
  return *reinterpret_cast<::Meta::WitAi::WitRequest::OnCustomizeUriEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> onPartialTranscription
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& Meta::WitAi::WitRequest::dyn_onPartialTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_onPartialTranscription");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPartialTranscription"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> onFullTranscription
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& Meta::WitAi::WitRequest::dyn_onFullTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_onFullTranscription");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFullTranscription"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Meta.WitAi.WitRequest> onPartialResponse
[[deprecated("Use field access instead!")]] ::System::Action_1<::Meta::WitAi::WitRequest*>*& Meta::WitAi::WitRequest::dyn_onPartialResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_onPartialResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPartialResponse"))->offset;
  return *reinterpret_cast<::System::Action_1<::Meta::WitAi::WitRequest*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Meta.WitAi.WitRequest> onResponse
[[deprecated("Use field access instead!")]] ::System::Action_1<::Meta::WitAi::WitRequest*>*& Meta::WitAi::WitRequest::dyn_onResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn_onResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onResponse"))->offset;
  return *reinterpret_cast<::System::Action_1<::Meta::WitAi::WitRequest*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::WitRequest::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.WitRequest.get_Configuration
::Meta::WitAi::Data::Configuration::WitConfiguration* Meta::WitAi::WitRequest::get_Configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::get_Configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Configuration::WitConfiguration*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.set_Configuration
void Meta::WitAi::WitRequest::set_Configuration(::Meta::WitAi::Data::Configuration::WitConfiguration* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::set_Configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.get_TimeoutMs
int Meta::WitAi::WitRequest::get_TimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::get_TimeoutMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TimeoutMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.set_TimeoutMs
void Meta::WitAi::WitRequest::set_TimeoutMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::set_TimeoutMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TimeoutMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.get_AudioEncoding
::Meta::WitAi::Data::AudioEncoding* Meta::WitAi::WitRequest::get_AudioEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::get_AudioEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::AudioEncoding*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.set_AudioEncoding
void Meta::WitAi::WitRequest::set_AudioEncoding(::Meta::WitAi::Data::AudioEncoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::set_AudioEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.get_audioEncoding
::Meta::WitAi::Data::AudioEncoding* Meta::WitAi::WitRequest::get_audioEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::get_audioEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::AudioEncoding*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.set_audioEncoding
void Meta::WitAi::WitRequest::set_audioEncoding(::Meta::WitAi::Data::AudioEncoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::set_audioEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_audioEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.get_Path
::StringW Meta::WitAi::WitRequest::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::get_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.set_Path
void Meta::WitAi::WitRequest::set_Path(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::set_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.get_Command
::StringW Meta::WitAi::WitRequest::get_Command() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::get_Command");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Command", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.set_Command
void Meta::WitAi::WitRequest::set_Command(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::set_Command");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Command", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.get_IsPost
bool Meta::WitAi::WitRequest::get_IsPost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::get_IsPost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.set_IsPost
void Meta::WitAi::WitRequest::set_IsPost(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::set_IsPost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.get_queryParams
::ArrayW<::Meta::WitAi::Requests::VoiceServiceRequestOptions::QueryParam*> Meta::WitAi::WitRequest::get_queryParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::get_queryParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_queryParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Meta::WitAi::Requests::VoiceServiceRequestOptions::QueryParam*>, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.get_IsRequestStreamActive
bool Meta::WitAi::WitRequest::get_IsRequestStreamActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::get_IsRequestStreamActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRequestStreamActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.get_HasResponseStarted
bool Meta::WitAi::WitRequest::get_HasResponseStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::get_HasResponseStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasResponseStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.set_HasResponseStarted
void Meta::WitAi::WitRequest::set_HasResponseStarted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::set_HasResponseStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasResponseStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.get_IsInputStreamReady
bool Meta::WitAi::WitRequest::get_IsInputStreamReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::get_IsInputStreamReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInputStreamReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.set_IsInputStreamReady
void Meta::WitAi::WitRequest::set_IsInputStreamReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::set_IsInputStreamReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsInputStreamReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.get_StatusDescription
::StringW Meta::WitAi::WitRequest::get_StatusDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::get_StatusDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.set_StatusDescription
void Meta::WitAi::WitRequest::set_StatusDescription(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::set_StatusDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatusDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.add_onProvideCustomHeaders
void Meta::WitAi::WitRequest::add_onProvideCustomHeaders(::Meta::WitAi::WitRequest::OnProvideCustomHeadersEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::add_onProvideCustomHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onProvideCustomHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.remove_onProvideCustomHeaders
void Meta::WitAi::WitRequest::remove_onProvideCustomHeaders(::Meta::WitAi::WitRequest::OnProvideCustomHeadersEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::remove_onProvideCustomHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onProvideCustomHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.add_onInputStreamReady
void Meta::WitAi::WitRequest::add_onInputStreamReady(::System::Action_1<::Meta::WitAi::WitRequest*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::add_onInputStreamReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onInputStreamReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.remove_onInputStreamReady
void Meta::WitAi::WitRequest::remove_onInputStreamReady(::System::Action_1<::Meta::WitAi::WitRequest*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::remove_onInputStreamReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onInputStreamReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.add_onPartialTranscription
void Meta::WitAi::WitRequest::add_onPartialTranscription(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::add_onPartialTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onPartialTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.remove_onPartialTranscription
void Meta::WitAi::WitRequest::remove_onPartialTranscription(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::remove_onPartialTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onPartialTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.add_onFullTranscription
void Meta::WitAi::WitRequest::add_onFullTranscription(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::add_onFullTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onFullTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.remove_onFullTranscription
void Meta::WitAi::WitRequest::remove_onFullTranscription(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::remove_onFullTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onFullTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.add_onPartialResponse
void Meta::WitAi::WitRequest::add_onPartialResponse(::System::Action_1<::Meta::WitAi::WitRequest*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::add_onPartialResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onPartialResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.remove_onPartialResponse
void Meta::WitAi::WitRequest::remove_onPartialResponse(::System::Action_1<::Meta::WitAi::WitRequest*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::remove_onPartialResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onPartialResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.add_onResponse
void Meta::WitAi::WitRequest::add_onResponse(::System::Action_1<::Meta::WitAi::WitRequest*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::add_onResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.remove_onResponse
void Meta::WitAi::WitRequest::remove_onResponse(::System::Action_1<::Meta::WitAi::WitRequest*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::remove_onResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitRequest.GetUri
::System::Uri* Meta::WitAi::WitRequest::GetUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::GetUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.GetHeaders
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Meta::WitAi::WitRequest::GetHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::GetHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.StartThreadedRequest
void Meta::WitAi::WitRequest::StartThreadedRequest(::System::Uri* uri, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::StartThreadedRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartThreadedRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(headers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri, headers);
}
// Autogenerated method: Meta.WitAi.WitRequest.StartResponse
void Meta::WitAi::WitRequest::StartResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::StartResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.HandleTimeoutMsTimer
void Meta::WitAi::WitRequest::HandleTimeoutMsTimer(::Il2CppObject* state, bool timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::HandleTimeoutMsTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTimeoutMsTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(timeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, timeout);
}
// Autogenerated method: Meta.WitAi.WitRequest.HandleWriteStream
void Meta::WitAi::WitRequest::HandleWriteStream(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::HandleWriteStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleWriteStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated method: Meta.WitAi.WitRequest.Write
void Meta::WitAi::WitRequest::Write(::ArrayW<uint8_t> data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, offset, length);
}
// Autogenerated method: Meta.WitAi.WitRequest.HandleResponse
void Meta::WitAi::WitRequest::HandleResponse(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::HandleResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Meta.WitAi.WitRequest.CheckStatus
void Meta::WitAi::WitRequest::CheckStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::CheckStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.ReadToDelimiter
::StringW Meta::WitAi::WitRequest::ReadToDelimiter(::System::IO::StreamReader* reader, ::StringW delimiter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::ReadToDelimiter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToDelimiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(delimiter)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, reader, delimiter);
}
// Autogenerated method: Meta.WitAi.WitRequest.ProcessStringResponses
void Meta::WitAi::WitRequest::ProcessStringResponses(::StringW stringResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::ProcessStringResponses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessStringResponses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stringResponse);
}
// Autogenerated method: Meta.WitAi.WitRequest.ProcessStringResponse
void Meta::WitAi::WitRequest::ProcessStringResponse(::StringW stringResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::ProcessStringResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessStringResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stringResponse);
}
// Autogenerated method: Meta.WitAi.WitRequest.WaitingForPost
bool Meta::WitAi::WitRequest::WaitingForPost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::WaitingForPost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitingForPost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.CloseRequestStream
void Meta::WitAi::WitRequest::CloseRequestStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::CloseRequestStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.CloseActiveStream
void Meta::WitAi::WitRequest::CloseActiveStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::CloseActiveStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseActiveStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.<HandleTimeoutMsTimer>b__92_0
void Meta::WitAi::WitRequest::$HandleTimeoutMsTimer$b__92_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::<HandleTimeoutMsTimer>b__92_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleTimeoutMsTimer>b__92_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.<HandleWriteStream>b__93_0
void Meta::WitAi::WitRequest::$HandleWriteStream$b__93_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::<HandleWriteStream>b__93_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleWriteStream>b__93_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.<HandleWriteStream>b__93_1
void Meta::WitAi::WitRequest::$HandleWriteStream$b__93_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::<HandleWriteStream>b__93_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleWriteStream>b__93_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.<HandleWriteStream>b__93_2
void Meta::WitAi::WitRequest::$HandleWriteStream$b__93_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::<HandleWriteStream>b__93_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleWriteStream>b__93_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.<Write>b__94_0
void Meta::WitAi::WitRequest::$Write$b__94_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::<Write>b__94_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Write>b__94_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.<HandleResponse>b__95_0
void Meta::WitAi::WitRequest::$HandleResponse$b__95_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::<HandleResponse>b__95_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleResponse>b__95_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.ToString
::StringW Meta::WitAi::WitRequest::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.SetState
void Meta::WitAi::WitRequest::SetState(::Meta::Voice::VoiceRequestState newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::SetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::NLPRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 14)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState);
}
// Autogenerated method: Meta.WitAi.WitRequest.OnInit
void Meta::WitAi::WitRequest::OnInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::OnInit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::NLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 13)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.HandleAudioActivation
void Meta::WitAi::WitRequest::HandleAudioActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::HandleAudioActivation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 45)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.HandleAudioDeactivation
void Meta::WitAi::WitRequest::HandleAudioDeactivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::HandleAudioDeactivation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 49)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.GetSendError
::StringW Meta::WitAi::WitRequest::GetSendError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::GetSendError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::NLPRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 17)));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.HandleSend
void Meta::WitAi::WitRequest::HandleSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::HandleSend");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::VoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 20)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.OnTranscriptionChanged
void Meta::WitAi::WitRequest::OnTranscriptionChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::OnTranscriptionChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::TranscriptionRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 41)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.OnPartialResponse
void Meta::WitAi::WitRequest::OnPartialResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::OnPartialResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::NLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 53)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.OnFullResponse
void Meta::WitAi::WitRequest::OnFullResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::OnFullResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::NLPAudioRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 55)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.HandleCancel
void Meta::WitAi::WitRequest::HandleCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::HandleCancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::VoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 29)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest.OnComplete
void Meta::WitAi::WitRequest::OnComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::OnComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::Voice::VoiceRequest_4<TUnityEvent, TOptions, TEvents, TResults>*), 31)));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.WitRequest/OnProvideCustomHeadersEvent
#include "Meta/WitAi/WitRequest_OnProvideCustomHeadersEvent.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.WitRequest/OnProvideCustomHeadersEvent.Invoke
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Meta::WitAi::WitRequest::OnProvideCustomHeadersEvent::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::OnProvideCustomHeadersEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitRequest::OnProvideCustomHeadersEvent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest/OnProvideCustomHeadersEvent.BeginInvoke
::System::IAsyncResult* Meta::WitAi::WitRequest::OnProvideCustomHeadersEvent::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::OnProvideCustomHeadersEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitRequest::OnProvideCustomHeadersEvent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Meta.WitAi.WitRequest/OnProvideCustomHeadersEvent.EndInvoke
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Meta::WitAi::WitRequest::OnProvideCustomHeadersEvent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::OnProvideCustomHeadersEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitRequest::OnProvideCustomHeadersEvent*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.WitRequest/OnCustomizeUriEvent
#include "Meta/WitAi/WitRequest_OnCustomizeUriEvent.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.UriBuilder
#include "System/UriBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.WitRequest/OnCustomizeUriEvent.Invoke
::System::Uri* Meta::WitAi::WitRequest::OnCustomizeUriEvent::Invoke(::System::UriBuilder* uriBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::OnCustomizeUriEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitRequest::OnCustomizeUriEvent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, uriBuilder);
}
// Autogenerated method: Meta.WitAi.WitRequest/OnCustomizeUriEvent.BeginInvoke
::System::IAsyncResult* Meta::WitAi::WitRequest::OnCustomizeUriEvent::BeginInvoke(::System::UriBuilder* uriBuilder, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::OnCustomizeUriEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitRequest::OnCustomizeUriEvent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, uriBuilder, callback, object);
}
// Autogenerated method: Meta.WitAi.WitRequest/OnCustomizeUriEvent.EndInvoke
::System::Uri* Meta::WitAi::WitRequest::OnCustomizeUriEvent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::OnCustomizeUriEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitRequest::OnCustomizeUriEvent*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.WitRequest/PreSendRequestDelegate
#include "Meta/WitAi/WitRequest_PreSendRequestDelegate.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.WitRequest/PreSendRequestDelegate.Invoke
void Meta::WitAi::WitRequest::PreSendRequestDelegate::Invoke(ByRef<::System::Uri*> src_uri, ByRef<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*> headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::PreSendRequestDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitRequest::PreSendRequestDelegate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(src_uri), byref(headers));
}
// Autogenerated method: Meta.WitAi.WitRequest/PreSendRequestDelegate.BeginInvoke
::System::IAsyncResult* Meta::WitAi::WitRequest::PreSendRequestDelegate::BeginInvoke(ByRef<::System::Uri*> src_uri, ByRef<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*> headers, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::PreSendRequestDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitRequest::PreSendRequestDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(src_uri), byref(headers), callback, object);
}
// Autogenerated method: Meta.WitAi.WitRequest/PreSendRequestDelegate.EndInvoke
void Meta::WitAi::WitRequest::PreSendRequestDelegate::EndInvoke(ByRef<::System::Uri*> src_uri, ByRef<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*> headers, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::PreSendRequestDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitRequest::PreSendRequestDelegate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(src_uri), byref(headers), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.WitRequest/<>c__DisplayClass99_0
#include "Meta/WitAi/WitRequest_--c__DisplayClass99_0.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.WitRequest <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::WitRequest*& Meta::WitAi::WitRequest::$$c__DisplayClass99_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::$$c__DisplayClass99_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::WitRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String stringResponse
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::WitRequest::$$c__DisplayClass99_0::dyn_stringResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::$$c__DisplayClass99_0::dyn_stringResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringResponse"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String transcription
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::WitRequest::$$c__DisplayClass99_0::dyn_transcription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::$$c__DisplayClass99_0::dyn_transcription");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transcription"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hasResponse
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::WitRequest::$$c__DisplayClass99_0::dyn_hasResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::$$c__DisplayClass99_0::dyn_hasResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasResponse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isFinal
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::WitRequest::$$c__DisplayClass99_0::dyn_isFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::$$c__DisplayClass99_0::dyn_isFinal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isFinal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Json.WitResponseNode responseNode
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Json::WitResponseNode*& Meta::WitAi::WitRequest::$$c__DisplayClass99_0::dyn_responseNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::$$c__DisplayClass99_0::dyn_responseNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "responseNode"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Json::WitResponseNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.WitRequest/<>c__DisplayClass99_0.<ProcessStringResponse>b__0
void Meta::WitAi::WitRequest::$$c__DisplayClass99_0::$ProcessStringResponse$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::$$c__DisplayClass99_0::<ProcessStringResponse>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ProcessStringResponse>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitRequest/<>c__DisplayClass99_0.<ProcessStringResponse>b__1
void Meta::WitAi::WitRequest::$$c__DisplayClass99_0::$ProcessStringResponse$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequest::$$c__DisplayClass99_0::<ProcessStringResponse>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ProcessStringResponse>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.WitRequestFactory
#include "Meta/WitAi/WitRequestFactory.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Meta.WitAi.Interfaces.IDynamicEntitiesProvider
#include "Meta/WitAi/Interfaces/IDynamicEntitiesProvider.hpp"
// Including type: Meta.WitAi.Json.WitResponseClass
#include "Meta/WitAi/Json/WitResponseClass.hpp"
// Including type: Meta.WitAi.Data.Entities.WitDynamicEntity
#include "Meta/WitAi/Data/Entities/WitDynamicEntity.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Data.Configuration.WitConfiguration
#include "Meta/WitAi/Data/Configuration/WitConfiguration.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
// Including type: Meta.WitAi.WitRequest
#include "Meta/WitAi/WitRequest.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestOptions/QueryParam
#include "Meta/WitAi/Requests/VoiceServiceRequestOptions_QueryParam.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.WitRequestFactory.QueryParam
::Meta::WitAi::Requests::VoiceServiceRequestOptions::QueryParam* Meta::WitAi::WitRequestFactory::QueryParam(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequestFactory::QueryParam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitRequestFactory", "QueryParam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequestOptions::QueryParam*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: Meta.WitAi.WitRequestFactory.HandleWitRequestOptions
void Meta::WitAi::WitRequestFactory::HandleWitRequestOptions(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*> additionalEntityProviders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequestFactory::HandleWitRequestOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitRequestFactory", "HandleWitRequestOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestOptions), ::il2cpp_utils::ExtractType(additionalEntityProviders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestOptions, additionalEntityProviders);
}
// Autogenerated method: Meta.WitAi.WitRequestFactory.MergeEntities
void Meta::WitAi::WitRequestFactory::MergeEntities(::Meta::WitAi::Json::WitResponseClass* entities, ::Meta::WitAi::Data::Entities::WitDynamicEntity* providerEntity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequestFactory::MergeEntities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitRequestFactory", "MergeEntities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entities), ::il2cpp_utils::ExtractType(providerEntity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, entities, providerEntity);
}
// Autogenerated method: Meta.WitAi.WitRequestFactory.GetSetupOptions
::Meta::WitAi::Configuration::WitRequestOptions* Meta::WitAi::WitRequestFactory::GetSetupOptions(::Meta::WitAi::Configuration::WitRequestOptions* newOptions, ::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*> additionalDynamicEntities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequestFactory::GetSetupOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitRequestFactory", "GetSetupOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newOptions), ::il2cpp_utils::ExtractType(additionalDynamicEntities)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Configuration::WitRequestOptions*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newOptions, additionalDynamicEntities);
}
// Autogenerated method: Meta.WitAi.WitRequestFactory.CreateMessageRequest
::Meta::WitAi::Requests::VoiceServiceRequest* Meta::WitAi::WitRequestFactory::CreateMessageRequest(::Meta::WitAi::Data::Configuration::WitConfiguration* config, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents, ::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*> additionalEntityProviders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequestFactory::CreateMessageRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitRequestFactory", "CreateMessageRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(config), ::il2cpp_utils::ExtractType(requestOptions), ::il2cpp_utils::ExtractType(requestEvents), ::il2cpp_utils::ExtractType(additionalEntityProviders)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, config, requestOptions, requestEvents, additionalEntityProviders);
}
// Autogenerated method: Meta.WitAi.WitRequestFactory.CreateSpeechRequest
::Meta::WitAi::WitRequest* Meta::WitAi::WitRequestFactory::CreateSpeechRequest(::Meta::WitAi::Data::Configuration::WitConfiguration* config, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents, ::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*> additionalEntityProviders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequestFactory::CreateSpeechRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitRequestFactory", "CreateSpeechRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(config), ::il2cpp_utils::ExtractType(requestOptions), ::il2cpp_utils::ExtractType(requestEvents), ::il2cpp_utils::ExtractType(additionalEntityProviders)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::WitRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, config, requestOptions, requestEvents, additionalEntityProviders);
}
// Autogenerated method: Meta.WitAi.WitRequestFactory.CreateDictationRequest
::Meta::WitAi::WitRequest* Meta::WitAi::WitRequestFactory::CreateDictationRequest(::Meta::WitAi::Data::Configuration::WitConfiguration* config, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitRequestFactory::CreateDictationRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitRequestFactory", "CreateDictationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(config), ::il2cpp_utils::ExtractType(requestOptions), ::il2cpp_utils::ExtractType(requestEvents)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::WitRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, config, requestOptions, requestEvents);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.WitResultUtilities
#include "Meta/WitAi/WitResultUtilities.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
// Including type: Meta.WitAi.Json.WitResponseClass
#include "Meta/WitAi/Json/WitResponseClass.hpp"
// Including type: Meta.WitAi.Data.Entities.WitEntityData
#include "Meta/WitAi/Data/Entities/WitEntityData.hpp"
// Including type: Meta.WitAi.Data.Entities.WitEntityFloatData
#include "Meta/WitAi/Data/Entities/WitEntityFloatData.hpp"
// Including type: Meta.WitAi.Data.Entities.WitEntityIntData
#include "Meta/WitAi/Data/Entities/WitEntityIntData.hpp"
// Including type: Meta.WitAi.Data.Intents.WitIntentData
#include "Meta/WitAi/Data/Intents/WitIntentData.hpp"
// Including type: Meta.WitAi.WitResponseReference
#include "Meta/WitAi/WitResponseReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String WIT_KEY_TRANSCRIPTION
::StringW Meta::WitAi::WitResultUtilities::_get_WIT_KEY_TRANSCRIPTION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::_get_WIT_KEY_TRANSCRIPTION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitResultUtilities", "WIT_KEY_TRANSCRIPTION"));
}
// Autogenerated static field setter
// Set static field: static public System.String WIT_KEY_TRANSCRIPTION
void Meta::WitAi::WitResultUtilities::_set_WIT_KEY_TRANSCRIPTION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::_set_WIT_KEY_TRANSCRIPTION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitResultUtilities", "WIT_KEY_TRANSCRIPTION", value));
}
// Autogenerated static field getter
// Get static field: static public System.String WIT_KEY_INTENTS
::StringW Meta::WitAi::WitResultUtilities::_get_WIT_KEY_INTENTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::_get_WIT_KEY_INTENTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitResultUtilities", "WIT_KEY_INTENTS"));
}
// Autogenerated static field setter
// Set static field: static public System.String WIT_KEY_INTENTS
void Meta::WitAi::WitResultUtilities::_set_WIT_KEY_INTENTS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::_set_WIT_KEY_INTENTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitResultUtilities", "WIT_KEY_INTENTS", value));
}
// Autogenerated static field getter
// Get static field: static public System.String WIT_KEY_ENTITIES
::StringW Meta::WitAi::WitResultUtilities::_get_WIT_KEY_ENTITIES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::_get_WIT_KEY_ENTITIES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitResultUtilities", "WIT_KEY_ENTITIES"));
}
// Autogenerated static field setter
// Set static field: static public System.String WIT_KEY_ENTITIES
void Meta::WitAi::WitResultUtilities::_set_WIT_KEY_ENTITIES(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::_set_WIT_KEY_ENTITIES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitResultUtilities", "WIT_KEY_ENTITIES", value));
}
// Autogenerated static field getter
// Get static field: static public System.String WIT_KEY_TRAITS
::StringW Meta::WitAi::WitResultUtilities::_get_WIT_KEY_TRAITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::_get_WIT_KEY_TRAITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitResultUtilities", "WIT_KEY_TRAITS"));
}
// Autogenerated static field setter
// Set static field: static public System.String WIT_KEY_TRAITS
void Meta::WitAi::WitResultUtilities::_set_WIT_KEY_TRAITS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::_set_WIT_KEY_TRAITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitResultUtilities", "WIT_KEY_TRAITS", value));
}
// Autogenerated static field getter
// Get static field: static public System.String WIT_KEY_FINAL
::StringW Meta::WitAi::WitResultUtilities::_get_WIT_KEY_FINAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::_get_WIT_KEY_FINAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitResultUtilities", "WIT_KEY_FINAL"));
}
// Autogenerated static field setter
// Set static field: static public System.String WIT_KEY_FINAL
void Meta::WitAi::WitResultUtilities::_set_WIT_KEY_FINAL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::_set_WIT_KEY_FINAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitResultUtilities", "WIT_KEY_FINAL", value));
}
// Autogenerated static field getter
// Get static field: static public System.String WIT_PARTIAL_RESPONSE
::StringW Meta::WitAi::WitResultUtilities::_get_WIT_PARTIAL_RESPONSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::_get_WIT_PARTIAL_RESPONSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitResultUtilities", "WIT_PARTIAL_RESPONSE"));
}
// Autogenerated static field setter
// Set static field: static public System.String WIT_PARTIAL_RESPONSE
void Meta::WitAi::WitResultUtilities::_set_WIT_PARTIAL_RESPONSE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::_set_WIT_PARTIAL_RESPONSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitResultUtilities", "WIT_PARTIAL_RESPONSE", value));
}
// Autogenerated static field getter
// Get static field: static public System.String WIT_RESPONSE
::StringW Meta::WitAi::WitResultUtilities::_get_WIT_RESPONSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::_get_WIT_RESPONSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Meta.WitAi", "WitResultUtilities", "WIT_RESPONSE"));
}
// Autogenerated static field setter
// Set static field: static public System.String WIT_RESPONSE
void Meta::WitAi::WitResultUtilities::_set_WIT_RESPONSE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::_set_WIT_RESPONSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Meta.WitAi", "WitResultUtilities", "WIT_RESPONSE", value));
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetTranscription
::StringW Meta::WitAi::WitResultUtilities::GetTranscription(::Meta::WitAi::Json::WitResponseNode* witResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.HasResponse
bool Meta::WitAi::WitResultUtilities::HasResponse(::Meta::WitAi::Json::WitResponseNode* witResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::HasResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "HasResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetResponse
::Meta::WitAi::Json::WitResponseClass* Meta::WitAi::WitResultUtilities::GetResponse(::Meta::WitAi::Json::WitResponseNode* witResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Json::WitResponseClass*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetFinalResponse
::Meta::WitAi::Json::WitResponseClass* Meta::WitAi::WitResultUtilities::GetFinalResponse(::Meta::WitAi::Json::WitResponseNode* witResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetFinalResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetFinalResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Json::WitResponseClass*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetPartialResponse
::Meta::WitAi::Json::WitResponseClass* Meta::WitAi::WitResultUtilities::GetPartialResponse(::Meta::WitAi::Json::WitResponseNode* witResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetPartialResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetPartialResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Json::WitResponseClass*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetIsFinal
bool Meta::WitAi::WitResultUtilities::GetIsFinal(::Meta::WitAi::Json::WitResponseNode* witResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetIsFinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetIsFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.AsWitEntity
::Meta::WitAi::Data::Entities::WitEntityData* Meta::WitAi::WitResultUtilities::AsWitEntity(::Meta::WitAi::Json::WitResponseNode* witResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::AsWitEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "AsWitEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Entities::WitEntityData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.AsWitFloatEntity
::Meta::WitAi::Data::Entities::WitEntityFloatData* Meta::WitAi::WitResultUtilities::AsWitFloatEntity(::Meta::WitAi::Json::WitResponseNode* witResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::AsWitFloatEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "AsWitFloatEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Entities::WitEntityFloatData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.AsWitIntEntity
::Meta::WitAi::Data::Entities::WitEntityIntData* Meta::WitAi::WitResultUtilities::AsWitIntEntity(::Meta::WitAi::Json::WitResponseNode* witResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::AsWitIntEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "AsWitIntEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Entities::WitEntityIntData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetFirstEntityValue
::StringW Meta::WitAi::WitResultUtilities::GetFirstEntityValue(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetFirstEntityValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetFirstEntityValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse, name);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetAllEntityValues
::ArrayW<::StringW> Meta::WitAi::WitResultUtilities::GetAllEntityValues(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetAllEntityValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetAllEntityValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse, name);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetFirstEntity
::Meta::WitAi::Json::WitResponseNode* Meta::WitAi::WitResultUtilities::GetFirstEntity(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetFirstEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetFirstEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Json::WitResponseNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse, name);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetFirstWitEntity
::Meta::WitAi::Data::Entities::WitEntityData* Meta::WitAi::WitResultUtilities::GetFirstWitEntity(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetFirstWitEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetFirstWitEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Entities::WitEntityData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse, name);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetFirstWitIntEntity
::Meta::WitAi::Data::Entities::WitEntityIntData* Meta::WitAi::WitResultUtilities::GetFirstWitIntEntity(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetFirstWitIntEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetFirstWitIntEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Entities::WitEntityIntData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse, name);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetFirstWitIntValue
int Meta::WitAi::WitResultUtilities::GetFirstWitIntValue(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name, int defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetFirstWitIntValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetFirstWitIntValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse, name, defaultValue);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetFirstWitFloatEntity
::Meta::WitAi::Data::Entities::WitEntityFloatData* Meta::WitAi::WitResultUtilities::GetFirstWitFloatEntity(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetFirstWitFloatEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetFirstWitFloatEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Entities::WitEntityFloatData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse, name);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetFirstWitFloatValue
float Meta::WitAi::WitResultUtilities::GetFirstWitFloatValue(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name, float defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetFirstWitFloatValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetFirstWitFloatValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse, name, defaultValue);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetEntities
::ArrayW<::Meta::WitAi::Data::Entities::WitEntityData*> Meta::WitAi::WitResultUtilities::GetEntities(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetEntities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetEntities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Meta::WitAi::Data::Entities::WitEntityData*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse, name);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.EntityCount
int Meta::WitAi::WitResultUtilities::EntityCount(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::EntityCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "EntityCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetFloatEntities
::ArrayW<::Meta::WitAi::Data::Entities::WitEntityFloatData*> Meta::WitAi::WitResultUtilities::GetFloatEntities(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetFloatEntities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetFloatEntities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Meta::WitAi::Data::Entities::WitEntityFloatData*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse, name);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetIntEntities
::ArrayW<::Meta::WitAi::Data::Entities::WitEntityIntData*> Meta::WitAi::WitResultUtilities::GetIntEntities(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetIntEntities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetIntEntities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Meta::WitAi::Data::Entities::WitEntityIntData*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse, name);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.AsWitIntent
::Meta::WitAi::Data::Intents::WitIntentData* Meta::WitAi::WitResultUtilities::AsWitIntent(::Meta::WitAi::Json::WitResponseNode* witResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::AsWitIntent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "AsWitIntent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Intents::WitIntentData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetIntentName
::StringW Meta::WitAi::WitResultUtilities::GetIntentName(::Meta::WitAi::Json::WitResponseNode* witResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetIntentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetIntentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetFirstIntent
::Meta::WitAi::Json::WitResponseNode* Meta::WitAi::WitResultUtilities::GetFirstIntent(::Meta::WitAi::Json::WitResponseNode* witResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetFirstIntent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetFirstIntent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Json::WitResponseNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetFirstIntentData
::Meta::WitAi::Data::Intents::WitIntentData* Meta::WitAi::WitResultUtilities::GetFirstIntentData(::Meta::WitAi::Json::WitResponseNode* witResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetFirstIntentData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetFirstIntentData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Intents::WitIntentData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetIntents
::ArrayW<::Meta::WitAi::Data::Intents::WitIntentData*> Meta::WitAi::WitResultUtilities::GetIntents(::Meta::WitAi::Json::WitResponseNode* witResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetIntents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetIntents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Meta::WitAi::Data::Intents::WitIntentData*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetPathValue
::StringW Meta::WitAi::WitResultUtilities::GetPathValue(::Meta::WitAi::Json::WitResponseNode* response, ::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetPathValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetPathValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, response, path);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.SetString
void Meta::WitAi::WitResultUtilities::SetString(::Meta::WitAi::Json::WitResponseNode* response, ::StringW path, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::SetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "SetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, response, path, value);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.RemovePath
void Meta::WitAi::WitResultUtilities::RemovePath(::Meta::WitAi::Json::WitResponseNode* response, ::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::RemovePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "RemovePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, response, path);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetWitResponseReference
::Meta::WitAi::WitResponseReference* Meta::WitAi::WitResultUtilities::GetWitResponseReference(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetWitResponseReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetWitResponseReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::WitResponseReference*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetCodeFromPath
::StringW Meta::WitAi::WitResultUtilities::GetCodeFromPath(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetCodeFromPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetCodeFromPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.SplitArrays
::ArrayW<::StringW> Meta::WitAi::WitResultUtilities::SplitArrays(::StringW nodeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::SplitArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "SplitArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeName);
}
// Autogenerated method: Meta.WitAi.WitResultUtilities.GetTraitValue
::StringW Meta::WitAi::WitResultUtilities::GetTraitValue(::Meta::WitAi::Json::WitResponseNode* witResponse, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResultUtilities::GetTraitValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi", "WitResultUtilities", "GetTraitValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(witResponse), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, witResponse, name);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.WitResponseReference
#include "Meta/WitAi/WitResponseReference.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.WitResponseReference child
[[deprecated("Use field access instead!")]] ::Meta::WitAi::WitResponseReference*& Meta::WitAi::WitResponseReference::dyn_child() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResponseReference::dyn_child");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "child"))->offset;
  return *reinterpret_cast<::Meta::WitAi::WitResponseReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String path
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::WitResponseReference::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResponseReference::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.WitResponseReference.GetStringValue
::StringW Meta::WitAi::WitResponseReference::GetStringValue(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResponseReference::GetStringValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitResponseReference*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.WitResponseReference.GetIntValue
int Meta::WitAi::WitResponseReference::GetIntValue(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResponseReference::GetIntValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitResponseReference*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.WitResponseReference.GetFloatValue
float Meta::WitAi::WitResponseReference::GetFloatValue(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitResponseReference::GetFloatValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitResponseReference*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, response);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.ArrayNodeReference
#include "Meta/WitAi/ArrayNodeReference.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 index
[[deprecated("Use field access instead!")]] int& Meta::WitAi::ArrayNodeReference::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ArrayNodeReference::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.ArrayNodeReference.GetStringValue
::StringW Meta::WitAi::ArrayNodeReference::GetStringValue(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ArrayNodeReference::GetStringValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitResponseReference*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.ArrayNodeReference.GetIntValue
int Meta::WitAi::ArrayNodeReference::GetIntValue(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ArrayNodeReference::GetIntValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitResponseReference*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.ArrayNodeReference.GetFloatValue
float Meta::WitAi::ArrayNodeReference::GetFloatValue(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ArrayNodeReference::GetFloatValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitResponseReference*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, response);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.ObjectNodeReference
#include "Meta/WitAi/ObjectNodeReference.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String key
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::ObjectNodeReference::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ObjectNodeReference::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.ObjectNodeReference.GetStringValue
::StringW Meta::WitAi::ObjectNodeReference::GetStringValue(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ObjectNodeReference::GetStringValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitResponseReference*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.ObjectNodeReference.GetIntValue
int Meta::WitAi::ObjectNodeReference::GetIntValue(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ObjectNodeReference::GetIntValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitResponseReference*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.ObjectNodeReference.GetFloatValue
float Meta::WitAi::ObjectNodeReference::GetFloatValue(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ObjectNodeReference::GetFloatValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitResponseReference*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, response);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.WitService
#include "Meta/WitAi/WitService.hpp"
// Including type: Meta.WitAi.WitService/<DeactivateDueToTimeLimit>d__86
#include "Meta/WitAi/WitService_-DeactivateDueToTimeLimit-d__86.hpp"
// Including type: Meta.WitAi.WitRequest
#include "Meta/WitAi/WitRequest.hpp"
// Including type: Meta.WitAi.Interfaces.ITranscriptionProvider
#include "Meta/WitAi/Interfaces/ITranscriptionProvider.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: Meta.WitAi.Interfaces.IWitRequestProvider
#include "Meta/WitAi/Interfaces/IWitRequestProvider.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequest
#include "Meta/WitAi/Requests/VoiceServiceRequest.hpp"
// Including type: Meta.WitAi.Events.IWitByteDataReadyHandler
#include "Meta/WitAi/Events/IWitByteDataReadyHandler.hpp"
// Including type: Meta.WitAi.Events.IWitByteDataSentHandler
#include "Meta/WitAi/Events/IWitByteDataSentHandler.hpp"
// Including type: Meta.WitAi.Interfaces.IDynamicEntitiesProvider
#include "Meta/WitAi/Interfaces/IDynamicEntitiesProvider.hpp"
// Including type: Meta.WitAi.Data.AudioBuffer
#include "Meta/WitAi/Data/AudioBuffer.hpp"
// Including type: Meta.WitAi.Data.Configuration.WitConfiguration
#include "Meta/WitAi/Data/Configuration/WitConfiguration.hpp"
// Including type: Meta.WitAi.Configuration.WitRuntimeConfiguration
#include "Meta/WitAi/Configuration/WitRuntimeConfiguration.hpp"
// Including type: Meta.WitAi.Events.VoiceEvents
#include "Meta/WitAi/Events/VoiceEvents.hpp"
// Including type: Meta.WitAi.Events.TelemetryEvents
#include "Meta/WitAi/Events/TelemetryEvents.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
// Including type: Meta.WitAi.Configuration.WitRequestOptions
#include "Meta/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Meta.WitAi.Requests.VoiceServiceRequestEvents
#include "Meta/WitAi/Requests/VoiceServiceRequestEvents.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: Meta.WitAi.Json.WitResponseNode
#include "Meta/WitAi/Json/WitResponseNode.hpp"
// Including type: Meta.WitAi.Data.RingBuffer`1/Marker
#include "Meta/WitAi/Data/RingBuffer_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _lastMinVolumeLevelTime
[[deprecated("Use field access instead!")]] float& Meta::WitAi::WitService::dyn__lastMinVolumeLevelTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__lastMinVolumeLevelTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastMinVolumeLevelTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.WitRequest _recordingRequest
[[deprecated("Use field access instead!")]] ::Meta::WitAi::WitRequest*& Meta::WitAi::WitService::dyn__recordingRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__recordingRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingRequest"))->offset;
  return *reinterpret_cast<::Meta::WitAi::WitRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isSoundWakeActive
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::WitService::dyn__isSoundWakeActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__isSoundWakeActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isSoundWakeActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Data.RingBuffer`1/Marker<System.Byte> _lastSampleMarker
[[deprecated("Use field access instead!")]] typename ::Meta::WitAi::Data::RingBuffer_1<uint8_t>::Marker*& Meta::WitAi::WitService::dyn__lastSampleMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__lastSampleMarker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastSampleMarker"))->offset;
  return *reinterpret_cast<typename ::Meta::WitAi::Data::RingBuffer_1<uint8_t>::Marker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _minKeepAliveWasHit
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::WitService::dyn__minKeepAliveWasHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__minKeepAliveWasHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minKeepAliveWasHit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isActive
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::WitService::dyn__isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _minSampleByteCount
[[deprecated("Use field access instead!")]] int64_t& Meta::WitAi::WitService::dyn__minSampleByteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__minSampleByteCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minSampleByteCount"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.IVoiceEventProvider _voiceEventProvider
[[deprecated("Use field access instead!")]] ::Meta::WitAi::IVoiceEventProvider*& Meta::WitAi::WitService::dyn__voiceEventProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__voiceEventProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_voiceEventProvider"))->offset;
  return *reinterpret_cast<::Meta::WitAi::IVoiceEventProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.ITelemetryEventsProvider _telemetryEventsProvider
[[deprecated("Use field access instead!")]] ::Meta::WitAi::ITelemetryEventsProvider*& Meta::WitAi::WitService::dyn__telemetryEventsProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__telemetryEventsProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_telemetryEventsProvider"))->offset;
  return *reinterpret_cast<::Meta::WitAi::ITelemetryEventsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.IWitRuntimeConfigProvider _runtimeConfigProvider
[[deprecated("Use field access instead!")]] ::Meta::WitAi::IWitRuntimeConfigProvider*& Meta::WitAi::WitService::dyn__runtimeConfigProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__runtimeConfigProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_runtimeConfigProvider"))->offset;
  return *reinterpret_cast<::Meta::WitAi::IWitRuntimeConfigProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Interfaces.ITranscriptionProvider _activeTranscriptionProvider
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Interfaces::ITranscriptionProvider*& Meta::WitAi::WitService::dyn__activeTranscriptionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__activeTranscriptionProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeTranscriptionProvider"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Interfaces::ITranscriptionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _timeLimitCoroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& Meta::WitAi::WitService::dyn__timeLimitCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__timeLimitCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeLimitCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Interfaces.IWitRequestProvider _witRequestProvider
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Interfaces::IWitRequestProvider*& Meta::WitAi::WitService::dyn__witRequestProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__witRequestProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_witRequestProvider"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Interfaces::IWitRequestProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _receivedTranscription
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::WitService::dyn__receivedTranscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__receivedTranscription");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_receivedTranscription"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastWordTime
[[deprecated("Use field access instead!")]] float& Meta::WitAi::WitService::dyn__lastWordTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__lastWordTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastWordTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<Meta.WitAi.Requests.VoiceServiceRequest> _transmitRequests
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::Meta::WitAi::Requests::VoiceServiceRequest*>*& Meta::WitAi::WitService::dyn__transmitRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__transmitRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transmitRequests"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Meta::WitAi::Requests::VoiceServiceRequest*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _queueHandler
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& Meta::WitAi::WitService::dyn__queueHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__queueHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_queueHandler"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.IWitByteDataReadyHandler[] _dataReadyHandlers
[[deprecated("Use field access instead!")]] ::ArrayW<::Meta::WitAi::Events::IWitByteDataReadyHandler*>& Meta::WitAi::WitService::dyn__dataReadyHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__dataReadyHandlers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataReadyHandlers"))->offset;
  return *reinterpret_cast<::ArrayW<::Meta::WitAi::Events::IWitByteDataReadyHandler*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Events.IWitByteDataSentHandler[] _dataSentHandlers
[[deprecated("Use field access instead!")]] ::ArrayW<::Meta::WitAi::Events::IWitByteDataSentHandler*>& Meta::WitAi::WitService::dyn__dataSentHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__dataSentHandlers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSentHandlers"))->offset;
  return *reinterpret_cast<::ArrayW<::Meta::WitAi::Events::IWitByteDataSentHandler*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Interfaces.IDynamicEntitiesProvider[] _dynamicEntityProviders
[[deprecated("Use field access instead!")]] ::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*>& Meta::WitAi::WitService::dyn__dynamicEntityProviders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__dynamicEntityProviders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dynamicEntityProviders"))->offset;
  return *reinterpret_cast<::ArrayW<::Meta::WitAi::Interfaces::IDynamicEntitiesProvider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _time
[[deprecated("Use field access instead!")]] float& Meta::WitAi::WitService::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Data.AudioBuffer _buffer
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Data::AudioBuffer*& Meta::WitAi::WitService::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Data::AudioBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _bufferDelegates
[[deprecated("Use field access instead!")]] bool& Meta::WitAi::WitService::dyn__bufferDelegates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::dyn__bufferDelegates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferDelegates"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.WitService.get_Configuration
::Meta::WitAi::Data::Configuration::WitConfiguration* Meta::WitAi::WitService::get_Configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::get_Configuration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Data::Configuration::WitConfiguration*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.get_Active
bool Meta::WitAi::WitService::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.get_IsRequestActive
bool Meta::WitAi::WitService::get_IsRequestActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::get_IsRequestActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRequestActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.get_VoiceEventProvider
::Meta::WitAi::IVoiceEventProvider* Meta::WitAi::WitService::get_VoiceEventProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::get_VoiceEventProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VoiceEventProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::IVoiceEventProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.set_VoiceEventProvider
void Meta::WitAi::WitService::set_VoiceEventProvider(::Meta::WitAi::IVoiceEventProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::set_VoiceEventProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VoiceEventProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitService.get_TelemetryEventsProvider
::Meta::WitAi::ITelemetryEventsProvider* Meta::WitAi::WitService::get_TelemetryEventsProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::get_TelemetryEventsProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TelemetryEventsProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::ITelemetryEventsProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.set_TelemetryEventsProvider
void Meta::WitAi::WitService::set_TelemetryEventsProvider(::Meta::WitAi::ITelemetryEventsProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::set_TelemetryEventsProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TelemetryEventsProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitService.get_ConfigurationProvider
::Meta::WitAi::IWitRuntimeConfigProvider* Meta::WitAi::WitService::get_ConfigurationProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::get_ConfigurationProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConfigurationProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::IWitRuntimeConfigProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.set_ConfigurationProvider
void Meta::WitAi::WitService::set_ConfigurationProvider(::Meta::WitAi::IWitRuntimeConfigProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::set_ConfigurationProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConfigurationProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitService.get_RuntimeConfiguration
::Meta::WitAi::Configuration::WitRuntimeConfiguration* Meta::WitAi::WitService::get_RuntimeConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::get_RuntimeConfiguration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Configuration::WitRuntimeConfiguration*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.get_VoiceEvents
::Meta::WitAi::Events::VoiceEvents* Meta::WitAi::WitService::get_VoiceEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::get_VoiceEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::VoiceEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.get_TelemetryEvents
::Meta::WitAi::Events::TelemetryEvents* Meta::WitAi::WitService::get_TelemetryEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::get_TelemetryEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::TelemetryEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.get_TranscriptionProvider
::Meta::WitAi::Interfaces::ITranscriptionProvider* Meta::WitAi::WitService::get_TranscriptionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::get_TranscriptionProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TranscriptionProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::ITranscriptionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.set_TranscriptionProvider
void Meta::WitAi::WitService::set_TranscriptionProvider(::Meta::WitAi::Interfaces::ITranscriptionProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::set_TranscriptionProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TranscriptionProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitService.get_WitRequestProvider
::Meta::WitAi::Interfaces::IWitRequestProvider* Meta::WitAi::WitService::get_WitRequestProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::get_WitRequestProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WitRequestProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::IWitRequestProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.set_WitRequestProvider
void Meta::WitAi::WitService::set_WitRequestProvider(::Meta::WitAi::Interfaces::IWitRequestProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::set_WitRequestProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WitRequestProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WitService.get_MicActive
bool Meta::WitAi::WitService::get_MicActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::get_MicActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.get_ShouldSendMicData
bool Meta::WitAi::WitService::get_ShouldSendMicData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::get_ShouldSendMicData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShouldSendMicData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.IsConfigurationValid
bool Meta::WitAi::WitService::IsConfigurationValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::IsConfigurationValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.Awake
void Meta::WitAi::WitService::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.OnEnable
void Meta::WitAi::WitService::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.OnDisable
void Meta::WitAi::WitService::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.OnSceneLoaded
void Meta::WitAi::WitService::OnSceneLoaded(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::OnSceneLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, mode);
}
// Autogenerated method: Meta.WitAi.WitService.SetMicDelegates
void Meta::WitAi::WitService::SetMicDelegates(bool add) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::SetMicDelegates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMicDelegates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(add)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, add);
}
// Autogenerated method: Meta.WitAi.WitService.Activate
void Meta::WitAi::WitService::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.Activate
void Meta::WitAi::WitService::Activate(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestOptions);
}
// Autogenerated method: Meta.WitAi.WitService.Activate
::Meta::WitAi::Requests::VoiceServiceRequest* Meta::WitAi::WitService::Activate(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents);
}
// Autogenerated method: Meta.WitAi.WitService.ActivateImmediately
void Meta::WitAi::WitService::ActivateImmediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::ActivateImmediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateImmediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.ActivateImmediately
void Meta::WitAi::WitService::ActivateImmediately(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::ActivateImmediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateImmediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestOptions);
}
// Autogenerated method: Meta.WitAi.WitService.ActivateImmediately
::Meta::WitAi::Requests::VoiceServiceRequest* Meta::WitAi::WitService::ActivateImmediately(::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::ActivateImmediately");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, requestOptions, requestEvents);
}
// Autogenerated method: Meta.WitAi.WitService.SendRecordingRequest
void Meta::WitAi::WitService::SendRecordingRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::SendRecordingRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.SetupRequest
void Meta::WitAi::WitService::SetupRequest(::Meta::WitAi::WitRequest* newRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::SetupRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newRequest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newRequest);
}
// Autogenerated method: Meta.WitAi.WitService.ExecuteRequest
void Meta::WitAi::WitService::ExecuteRequest(::Meta::WitAi::WitRequest* newRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::ExecuteRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newRequest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newRequest);
}
// Autogenerated method: Meta.WitAi.WitService.Activate
void Meta::WitAi::WitService::Activate(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Meta.WitAi.WitService.Activate
void Meta::WitAi::WitService::Activate(::StringW text, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(requestOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, requestOptions);
}
// Autogenerated method: Meta.WitAi.WitService.Activate
::Meta::WitAi::Requests::VoiceServiceRequest* Meta::WitAi::WitService::Activate(::StringW text, ::Meta::WitAi::Configuration::WitRequestOptions* requestOptions, ::Meta::WitAi::Requests::VoiceServiceRequestEvents* requestEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Requests::VoiceServiceRequest*, false>(this, ___internal__method, text, requestOptions, requestEvents);
}
// Autogenerated method: Meta.WitAi.WitService.StopRecording
void Meta::WitAi::WitService::StopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::StopRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.OnWitReadyForData
void Meta::WitAi::WitService::OnWitReadyForData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::OnWitReadyForData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnWitReadyForData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.StartRecording
void Meta::WitAi::WitService::StartRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::StartRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.OnMicStartListening
void Meta::WitAi::WitService::OnMicStartListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::OnMicStartListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMicStartListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.OnMicStoppedListening
void Meta::WitAi::WitService::OnMicStoppedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::OnMicStoppedListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMicStoppedListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.OnByteDataReady
void Meta::WitAi::WitService::OnByteDataReady(::ArrayW<uint8_t> buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::OnByteDataReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnByteDataReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, length);
}
// Autogenerated method: Meta.WitAi.WitService.OnMicSampleReady
void Meta::WitAi::WitService::OnMicSampleReady(typename ::Meta::WitAi::Data::RingBuffer_1<uint8_t>::Marker* marker, float levelMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::OnMicSampleReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMicSampleReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(marker), ::il2cpp_utils::ExtractType(levelMax)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, marker, levelMax);
}
// Autogenerated method: Meta.WitAi.WitService.Update
void Meta::WitAi::WitService::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.OnMicLevelChanged
void Meta::WitAi::WitService::OnMicLevelChanged(float level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::OnMicLevelChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMicLevelChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: Meta.WitAi.WitService.OnTranscriptionMicLevelChanged
void Meta::WitAi::WitService::OnTranscriptionMicLevelChanged(float level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::OnTranscriptionMicLevelChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTranscriptionMicLevelChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: Meta.WitAi.WitService.FinalizeAudioDurationTracker
void Meta::WitAi::WitService::FinalizeAudioDurationTracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::FinalizeAudioDurationTracker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeAudioDurationTracker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.Deactivate
void Meta::WitAi::WitService::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::Deactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.DeactivateAndAbortRequest
void Meta::WitAi::WitService::DeactivateAndAbortRequest(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::DeactivateAndAbortRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.WitService.DeactivateAndAbortRequest
void Meta::WitAi::WitService::DeactivateAndAbortRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::DeactivateAndAbortRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.DeactivateDueToTimeLimit
::System::Collections::IEnumerator* Meta::WitAi::WitService::DeactivateDueToTimeLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::DeactivateDueToTimeLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateDueToTimeLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService.DeactivateRequest
void Meta::WitAi::WitService::DeactivateRequest(::UnityEngine::Events::UnityEvent* onComplete, bool abort) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::DeactivateRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onComplete), ::il2cpp_utils::ExtractType(abort)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onComplete, abort);
}
// Autogenerated method: Meta.WitAi.WitService.DeactivateWitRequest
void Meta::WitAi::WitService::DeactivateWitRequest(::Meta::WitAi::Requests::VoiceServiceRequest* request, bool abort) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::DeactivateWitRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateWitRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(abort)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, abort);
}
// Autogenerated method: Meta.WitAi.WitService.OnPartialTranscription
void Meta::WitAi::WitService::OnPartialTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::OnPartialTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPartialTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transcription)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Meta.WitAi.WitService.OnFullTranscription
void Meta::WitAi::WitService::OnFullTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::OnFullTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFullTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transcription)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Meta.WitAi.WitService.HandlePartialResult
void Meta::WitAi::WitService::HandlePartialResult(::Meta::WitAi::Json::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::HandlePartialResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePartialResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: Meta.WitAi.WitService.HandleResult
void Meta::WitAi::WitService::HandleResult(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::HandleResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.WitService.HandleComplete
void Meta::WitAi::WitService::HandleComplete(::Meta::WitAi::Requests::VoiceServiceRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::HandleComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: Meta.WitAi.WitService.<SetupRequest>b__67_0
void Meta::WitAi::WitService::$SetupRequest$b__67_0(::Meta::WitAi::WitRequest* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::<SetupRequest>b__67_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetupRequest>b__67_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r);
}
// Autogenerated method: Meta.WitAi.WitService.<OnMicSampleReady>b__78_0
void Meta::WitAi::WitService::$OnMicSampleReady$b__78_0(::ArrayW<uint8_t> buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::<OnMicSampleReady>b__78_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnMicSampleReady>b__78_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, length);
}
// Autogenerated method: Meta.WitAi.WitService.<OnMicSampleReady>b__78_1
void Meta::WitAi::WitService::$OnMicSampleReady$b__78_1(::ArrayW<uint8_t> buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::<OnMicSampleReady>b__78_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnMicSampleReady>b__78_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, length);
}
// Autogenerated method: Meta.WitAi.WitService.<OnMicSampleReady>b__78_2
void Meta::WitAi::WitService::$OnMicSampleReady$b__78_2(::ArrayW<uint8_t> buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::<OnMicSampleReady>b__78_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnMicSampleReady>b__78_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, length);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.WitService/<DeactivateDueToTimeLimit>d__86
#include "Meta/WitAi/WitService_-DeactivateDueToTimeLimit-d__86.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.WitService <>4__this
[[deprecated("Use field access instead!")]] ::Meta::WitAi::WitService*& Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Meta::WitAi::WitService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.WitService/<DeactivateDueToTimeLimit>d__86.System.IDisposable.Dispose
void Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService/<DeactivateDueToTimeLimit>d__86.MoveNext
bool Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService/<DeactivateDueToTimeLimit>d__86.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService/<DeactivateDueToTimeLimit>d__86.System.Collections.IEnumerator.Reset
void Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WitService/<DeactivateDueToTimeLimit>d__86.System.Collections.IEnumerator.get_Current
::Il2CppObject* Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WitService::$DeactivateDueToTimeLimit$d__86*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.IWitRuntimeConfigProvider
#include "Meta/WitAi/IWitRuntimeConfigProvider.hpp"
// Including type: Meta.WitAi.Configuration.WitRuntimeConfiguration
#include "Meta/WitAi/Configuration/WitRuntimeConfiguration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.IWitRuntimeConfigProvider.get_RuntimeConfiguration
::Meta::WitAi::Configuration::WitRuntimeConfiguration* Meta::WitAi::IWitRuntimeConfigProvider::get_RuntimeConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IWitRuntimeConfigProvider::get_RuntimeConfiguration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IWitRuntimeConfigProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Configuration::WitRuntimeConfiguration*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.IVoiceEventProvider
#include "Meta/WitAi/IVoiceEventProvider.hpp"
// Including type: Meta.WitAi.Events.VoiceEvents
#include "Meta/WitAi/Events/VoiceEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.IVoiceEventProvider.get_VoiceEvents
::Meta::WitAi::Events::VoiceEvents* Meta::WitAi::IVoiceEventProvider::get_VoiceEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::IVoiceEventProvider::get_VoiceEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::IVoiceEventProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::VoiceEvents*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.ITelemetryEventsProvider
#include "Meta/WitAi/ITelemetryEventsProvider.hpp"
// Including type: Meta.WitAi.Events.TelemetryEvents
#include "Meta/WitAi/Events/TelemetryEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.ITelemetryEventsProvider.get_TelemetryEvents
::Meta::WitAi::Events::TelemetryEvents* Meta::WitAi::ITelemetryEventsProvider::get_TelemetryEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ITelemetryEventsProvider::get_TelemetryEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::ITelemetryEventsProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Events::TelemetryEvents*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Meta.WitAi.WrapHttpWebRequest
#include "Meta/WitAi/WrapHttpWebRequest.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpWebRequest _httpWebRequest
[[deprecated("Use field access instead!")]] ::System::Net::HttpWebRequest*& Meta::WitAi::WrapHttpWebRequest::dyn__httpWebRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::dyn__httpWebRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_httpWebRequest"))->offset;
  return *reinterpret_cast<::System::Net::HttpWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.get_Headers
::System::Net::WebHeaderCollection* Meta::WitAi::WrapHttpWebRequest::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::get_Headers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.set_Headers
void Meta::WitAi::WrapHttpWebRequest::set_Headers(::System::Net::WebHeaderCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::set_Headers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.get_Method
::StringW Meta::WitAi::WrapHttpWebRequest::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::get_Method");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.set_Method
void Meta::WitAi::WrapHttpWebRequest::set_Method(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::set_Method");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.get_ContentType
::StringW Meta::WitAi::WrapHttpWebRequest::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::get_ContentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.set_ContentType
void Meta::WitAi::WrapHttpWebRequest::set_ContentType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::set_ContentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.get_ContentLength
int64_t Meta::WitAi::WrapHttpWebRequest::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::get_ContentLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.set_ContentLength
void Meta::WitAi::WrapHttpWebRequest::set_ContentLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::set_ContentLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.get_SendChunked
bool Meta::WitAi::WrapHttpWebRequest::get_SendChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::get_SendChunked");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.set_SendChunked
void Meta::WitAi::WrapHttpWebRequest::set_SendChunked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::set_SendChunked");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.get_UserAgent
::StringW Meta::WitAi::WrapHttpWebRequest::get_UserAgent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::get_UserAgent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.set_UserAgent
void Meta::WitAi::WrapHttpWebRequest::set_UserAgent(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::set_UserAgent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.get_Timeout
int Meta::WitAi::WrapHttpWebRequest::get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::get_Timeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.set_Timeout
void Meta::WitAi::WrapHttpWebRequest::set_Timeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::set_Timeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.Abort
void Meta::WitAi::WrapHttpWebRequest::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::Abort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.Dispose
void Meta::WitAi::WrapHttpWebRequest::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.BeginGetRequestStream
::System::IAsyncResult* Meta::WitAi::WrapHttpWebRequest::BeginGetRequestStream(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::BeginGetRequestStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.BeginGetResponse
::System::IAsyncResult* Meta::WitAi::WrapHttpWebRequest::BeginGetResponse(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::BeginGetResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.EndGetRequestStream
::System::IO::Stream* Meta::WitAi::WrapHttpWebRequest::EndGetRequestStream(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::EndGetRequestStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Meta.WitAi.WrapHttpWebRequest.EndGetResponse
::System::Net::WebResponse* Meta::WitAi::WrapHttpWebRequest::EndGetResponse(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::WrapHttpWebRequest::EndGetResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::WrapHttpWebRequest*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebResponse*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Lib.VoiceLipSyncMic
#include "Meta/WitAi/Lib/VoiceLipSyncMic.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 AudioSampleRate
[[deprecated("Use field access instead!")]] int& Meta::WitAi::Lib::VoiceLipSyncMic::dyn_AudioSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::VoiceLipSyncMic::dyn_AudioSampleRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AudioSampleRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource AudioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& Meta::WitAi::Lib::VoiceLipSyncMic::dyn_AudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::VoiceLipSyncMic::dyn_AudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Lib.VoiceLipSyncMic.Awake
void Meta::WitAi::Lib::VoiceLipSyncMic::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::VoiceLipSyncMic::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.VoiceLipSyncMic.OnEnable
void Meta::WitAi::Lib::VoiceLipSyncMic::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::VoiceLipSyncMic::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Lib.VoiceLipSyncMic.OnMicSampleReady
void Meta::WitAi::Lib::VoiceLipSyncMic::OnMicSampleReady(typename ::Meta::WitAi::Data::RingBuffer_1<uint8_t>::Marker* marker, float levelMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::VoiceLipSyncMic::OnMicSampleReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMicSampleReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(marker), ::il2cpp_utils::ExtractType(levelMax)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, marker, levelMax);
}
// Autogenerated method: Meta.WitAi.Lib.VoiceLipSyncMic.OnDisable
void Meta::WitAi::Lib::VoiceLipSyncMic::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Lib::VoiceLipSyncMic::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Utilities.DynamicRangeAttribute
#include "Meta/WitAi/Utilities/DynamicRangeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <RangeProperty>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Utilities::DynamicRangeAttribute::dyn_$RangeProperty$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::DynamicRangeAttribute::dyn_$RangeProperty$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RangeProperty>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <DefaultMin>k__BackingField
[[deprecated("Use field access instead!")]] float& Meta::WitAi::Utilities::DynamicRangeAttribute::dyn_$DefaultMin$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::DynamicRangeAttribute::dyn_$DefaultMin$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DefaultMin>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <DefaultMax>k__BackingField
[[deprecated("Use field access instead!")]] float& Meta::WitAi::Utilities::DynamicRangeAttribute::dyn_$DefaultMax$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::DynamicRangeAttribute::dyn_$DefaultMax$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DefaultMax>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Utilities.DynamicRangeAttribute.get_RangeProperty
::StringW Meta::WitAi::Utilities::DynamicRangeAttribute::get_RangeProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::DynamicRangeAttribute::get_RangeProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RangeProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Utilities.DynamicRangeAttribute.set_RangeProperty
void Meta::WitAi::Utilities::DynamicRangeAttribute::set_RangeProperty(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::DynamicRangeAttribute::set_RangeProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RangeProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Utilities.DynamicRangeAttribute.get_DefaultMin
float Meta::WitAi::Utilities::DynamicRangeAttribute::get_DefaultMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::DynamicRangeAttribute::get_DefaultMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Utilities.DynamicRangeAttribute.set_DefaultMin
void Meta::WitAi::Utilities::DynamicRangeAttribute::set_DefaultMin(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::DynamicRangeAttribute::set_DefaultMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Meta.WitAi.Utilities.DynamicRangeAttribute.get_DefaultMax
float Meta::WitAi::Utilities::DynamicRangeAttribute::get_DefaultMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::DynamicRangeAttribute::get_DefaultMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Meta.WitAi.Utilities.DynamicRangeAttribute.set_DefaultMax
void Meta::WitAi::Utilities::DynamicRangeAttribute::set_DefaultMax(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::DynamicRangeAttribute::set_DefaultMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Utilities.FloatToStringEvent
#include "Meta/WitAi/Utilities/FloatToStringEvent.hpp"
// Including type: Meta.WitAi.Utilities.StringEvent
#include "Meta/WitAi/Utilities/StringEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _floatFormat
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Utilities::FloatToStringEvent::dyn__floatFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::FloatToStringEvent::dyn__floatFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_floatFormat"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _stringFormat
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Utilities::FloatToStringEvent::dyn__stringFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::FloatToStringEvent::dyn__stringFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringFormat"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Meta.WitAi.Utilities.StringEvent onFloatToString
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Utilities::StringEvent*& Meta::WitAi::Utilities::FloatToStringEvent::dyn_onFloatToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::FloatToStringEvent::dyn_onFloatToString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFloatToString"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Utilities::StringEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Utilities.FloatToStringEvent.ConvertFloatToString
void Meta::WitAi::Utilities::FloatToStringEvent::ConvertFloatToString(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::FloatToStringEvent::ConvertFloatToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFloatToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Utilities.StringEvent
#include "Meta/WitAi/Utilities/StringEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Utilities.GameObjectSearchUtility
#include "Meta/WitAi/Utilities/GameObjectSearchUtility.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Utilities.IOUtility
#include "Meta/WitAi/Utilities/IOUtility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.Utilities.IOUtility.LogError
void Meta::WitAi::Utilities::IOUtility::LogError(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::IOUtility::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Utilities", "IOUtility", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: Meta.WitAi.Utilities.IOUtility.CreateDirectory
bool Meta::WitAi::Utilities::IOUtility::CreateDirectory(::StringW directoryPath, bool recursively) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::IOUtility::CreateDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Utilities", "IOUtility", "CreateDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directoryPath), ::il2cpp_utils::ExtractType(recursively)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, directoryPath, recursively);
}
// Autogenerated method: Meta.WitAi.Utilities.IOUtility.DeleteDirectory
bool Meta::WitAi::Utilities::IOUtility::DeleteDirectory(::StringW directoryPath, bool forceIfFilled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::IOUtility::DeleteDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Utilities", "IOUtility", "DeleteDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directoryPath), ::il2cpp_utils::ExtractType(forceIfFilled)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, directoryPath, forceIfFilled);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Utilities.StringToStringEvent
#include "Meta/WitAi/Utilities/StringToStringEvent.hpp"
// Including type: Meta.WitAi.Utilities.StringEvent
#include "Meta/WitAi/Utilities/StringEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _format
[[deprecated("Use field access instead!")]] ::StringW& Meta::WitAi::Utilities::StringToStringEvent::dyn__format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::StringToStringEvent::dyn__format");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_format"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Meta.WitAi.Utilities.StringEvent onStringEvent
[[deprecated("Use field access instead!")]] ::Meta::WitAi::Utilities::StringEvent*& Meta::WitAi::Utilities::StringToStringEvent::dyn_onStringEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::StringToStringEvent::dyn_onStringEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onStringEvent"))->offset;
  return *reinterpret_cast<::Meta::WitAi::Utilities::StringEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Utilities.StringToStringEvent.FormatString
void Meta::WitAi::Utilities::StringToStringEvent::FormatString(::StringW format, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::StringToStringEvent::FormatString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, value);
}
// Autogenerated method: Meta.WitAi.Utilities.StringToStringEvent.FormatString
void Meta::WitAi::Utilities::StringToStringEvent::FormatString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::StringToStringEvent::FormatString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Utilities.VoiceServiceReference
#include "Meta/WitAi/Utilities/VoiceServiceReference.hpp"
// Including type: Meta.WitAi.Utilities.VoiceServiceReference/<>c
#include "Meta/WitAi/Utilities/VoiceServiceReference_--c.hpp"
// Including type: Meta.WitAi.VoiceService
#include "Meta/WitAi/VoiceService.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Meta.WitAi.VoiceService voiceService
[[deprecated("Use field access instead!")]] ::Meta::WitAi::VoiceService*& Meta::WitAi::Utilities::VoiceServiceReference::dyn_voiceService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::VoiceServiceReference::dyn_voiceService");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceService"))->offset;
  return *reinterpret_cast<::Meta::WitAi::VoiceService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Meta.WitAi.Utilities.VoiceServiceReference.get_VoiceService
::Meta::WitAi::VoiceService* Meta::WitAi::Utilities::VoiceServiceReference::get_VoiceService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::VoiceServiceReference::get_VoiceService");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_VoiceService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::VoiceService*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.Utilities.VoiceServiceReference/<>c
#include "Meta/WitAi/Utilities/VoiceServiceReference_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: Meta.WitAi.VoiceService
#include "Meta/WitAi/VoiceService.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Meta.WitAi.Utilities.VoiceServiceReference/<>c <>9
::Meta::WitAi::Utilities::VoiceServiceReference::$$c* Meta::WitAi::Utilities::VoiceServiceReference::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::VoiceServiceReference::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Meta::WitAi::Utilities::VoiceServiceReference::$$c*>("Meta.WitAi.Utilities", "VoiceServiceReference/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Meta.WitAi.Utilities.VoiceServiceReference/<>c <>9
void Meta::WitAi::Utilities::VoiceServiceReference::$$c::_set_$$9(::Meta::WitAi::Utilities::VoiceServiceReference::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::VoiceServiceReference::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Utilities", "VoiceServiceReference/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<Meta.WitAi.VoiceService> <>9__2_0
::System::Predicate_1<::Meta::WitAi::VoiceService*>* Meta::WitAi::Utilities::VoiceServiceReference::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::VoiceServiceReference::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::Meta::WitAi::VoiceService*>*>("Meta.WitAi.Utilities", "VoiceServiceReference/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<Meta.WitAi.VoiceService> <>9__2_0
void Meta::WitAi::Utilities::VoiceServiceReference::$$c::_set_$$9__2_0(::System::Predicate_1<::Meta::WitAi::VoiceService*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::VoiceServiceReference::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Meta.WitAi.Utilities", "VoiceServiceReference/<>c", "<>9__2_0", value)));
}
// Autogenerated method: Meta.WitAi.Utilities.VoiceServiceReference/<>c..cctor
void Meta::WitAi::Utilities::VoiceServiceReference::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::VoiceServiceReference::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Meta.WitAi.Utilities", "VoiceServiceReference/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Meta.WitAi.Utilities.VoiceServiceReference/<>c.<get_VoiceService>b__2_0
bool Meta::WitAi::Utilities::VoiceServiceReference::$$c::$get_VoiceService$b__2_0(::Meta::WitAi::VoiceService* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::Utilities::VoiceServiceReference::$$c::<get_VoiceService>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_VoiceService>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Meta.WitAi.ServiceReferences.AudioInputServiceReference
#include "Meta/WitAi/ServiceReferences/AudioInputServiceReference.hpp"
// Including type: Meta.WitAi.Interfaces.IAudioInputEvents
#include "Meta/WitAi/Interfaces/IAudioInputEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Meta.WitAi.ServiceReferences.AudioInputServiceReference.get_AudioEvents
::Meta::WitAi::Interfaces::IAudioInputEvents* Meta::WitAi::ServiceReferences::AudioInputServiceReference::get_AudioEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Meta::WitAi::ServiceReferences::AudioInputServiceReference::get_AudioEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Meta::WitAi::ServiceReferences::AudioInputServiceReference*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Meta::WitAi::Interfaces::IAudioInputEvents*, false>(this, ___internal__method);
}
