// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/TrackedKeyboardQueryFlags
#include "GlobalNamespace/OVRPlugin_TrackedKeyboardQueryFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TrackedKeyboardQueryFlags Local
::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags>("", "OVRPlugin/TrackedKeyboardQueryFlags", "Local"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TrackedKeyboardQueryFlags Local
void GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags::_set_Local(::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TrackedKeyboardQueryFlags", "Local", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TrackedKeyboardQueryFlags Remote
::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags::_get_Remote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags::_get_Remote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags>("", "OVRPlugin/TrackedKeyboardQueryFlags", "Remote"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TrackedKeyboardQueryFlags Remote
void GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags::_set_Remote(::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags::_set_Remote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TrackedKeyboardQueryFlags", "Remote", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackedKeyboardQueryFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/FaceExpressionStatusInternal
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/FaceExpressionStatus
#include "GlobalNamespace/OVRPlugin_FaceExpressionStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Bool IsValid
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::Bool& GlobalNamespace::OVRPlugin::FaceExpressionStatusInternal::dyn_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpressionStatusInternal::dyn_IsValid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsValid"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Bool IsEyeFollowingBlendshapesValid
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::Bool& GlobalNamespace::OVRPlugin::FaceExpressionStatusInternal::dyn_IsEyeFollowingBlendshapesValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpressionStatusInternal::dyn_IsEyeFollowingBlendshapesValid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsEyeFollowingBlendshapesValid"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlugin/FaceExpressionStatusInternal.ToFaceExpressionStatus
::GlobalNamespace::OVRPlugin::FaceExpressionStatus GlobalNamespace::OVRPlugin::FaceExpressionStatusInternal::ToFaceExpressionStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpressionStatusInternal::ToFaceExpressionStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToFaceExpressionStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::FaceExpressionStatus, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/FaceRegionConfidence
#include "GlobalNamespace/OVRPlugin_FaceRegionConfidence.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceRegionConfidence Lower
::GlobalNamespace::OVRPlugin::FaceRegionConfidence GlobalNamespace::OVRPlugin::FaceRegionConfidence::_get_Lower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceRegionConfidence::_get_Lower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceRegionConfidence>("", "OVRPlugin/FaceRegionConfidence", "Lower"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceRegionConfidence Lower
void GlobalNamespace::OVRPlugin::FaceRegionConfidence::_set_Lower(::GlobalNamespace::OVRPlugin::FaceRegionConfidence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceRegionConfidence::_set_Lower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceRegionConfidence", "Lower", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceRegionConfidence Upper
::GlobalNamespace::OVRPlugin::FaceRegionConfidence GlobalNamespace::OVRPlugin::FaceRegionConfidence::_get_Upper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceRegionConfidence::_get_Upper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceRegionConfidence>("", "OVRPlugin/FaceRegionConfidence", "Upper"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceRegionConfidence Upper
void GlobalNamespace::OVRPlugin::FaceRegionConfidence::_set_Upper(::GlobalNamespace::OVRPlugin::FaceRegionConfidence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceRegionConfidence::_set_Upper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceRegionConfidence", "Upper", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceRegionConfidence Max
::GlobalNamespace::OVRPlugin::FaceRegionConfidence GlobalNamespace::OVRPlugin::FaceRegionConfidence::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceRegionConfidence::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceRegionConfidence>("", "OVRPlugin/FaceRegionConfidence", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceRegionConfidence Max
void GlobalNamespace::OVRPlugin::FaceRegionConfidence::_set_Max(::GlobalNamespace::OVRPlugin::FaceRegionConfidence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceRegionConfidence::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceRegionConfidence", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::FaceRegionConfidence::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceRegionConfidence::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/FaceExpression
#include "GlobalNamespace/OVRPlugin_FaceExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Invalid
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Invalid
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Invalid(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Brow_Lowerer_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Brow_Lowerer_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Brow_Lowerer_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Brow_Lowerer_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Brow_Lowerer_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Brow_Lowerer_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Brow_Lowerer_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Brow_Lowerer_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Brow_Lowerer_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Brow_Lowerer_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Brow_Lowerer_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Brow_Lowerer_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Brow_Lowerer_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Brow_Lowerer_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Brow_Lowerer_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Brow_Lowerer_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Cheek_Puff_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Cheek_Puff_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Cheek_Puff_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Cheek_Puff_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Cheek_Puff_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Cheek_Puff_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Cheek_Puff_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Cheek_Puff_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Cheek_Puff_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Cheek_Puff_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Cheek_Puff_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Cheek_Puff_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Cheek_Puff_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Cheek_Puff_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Cheek_Puff_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Cheek_Puff_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Cheek_Raiser_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Cheek_Raiser_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Cheek_Raiser_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Cheek_Raiser_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Cheek_Raiser_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Cheek_Raiser_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Cheek_Raiser_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Cheek_Raiser_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Cheek_Raiser_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Cheek_Raiser_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Cheek_Raiser_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Cheek_Raiser_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Cheek_Raiser_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Cheek_Raiser_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Cheek_Raiser_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Cheek_Raiser_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Cheek_Suck_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Cheek_Suck_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Cheek_Suck_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Cheek_Suck_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Cheek_Suck_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Cheek_Suck_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Cheek_Suck_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Cheek_Suck_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Cheek_Suck_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Cheek_Suck_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Cheek_Suck_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Cheek_Suck_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Cheek_Suck_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Cheek_Suck_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Cheek_Suck_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Cheek_Suck_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Chin_Raiser_B
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Chin_Raiser_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Chin_Raiser_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Chin_Raiser_B"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Chin_Raiser_B
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Chin_Raiser_B(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Chin_Raiser_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Chin_Raiser_B", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Chin_Raiser_T
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Chin_Raiser_T() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Chin_Raiser_T");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Chin_Raiser_T"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Chin_Raiser_T
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Chin_Raiser_T(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Chin_Raiser_T");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Chin_Raiser_T", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Dimpler_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Dimpler_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Dimpler_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Dimpler_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Dimpler_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Dimpler_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Dimpler_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Dimpler_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Dimpler_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Dimpler_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Dimpler_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Dimpler_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Dimpler_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Dimpler_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Dimpler_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Dimpler_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Eyes_Closed_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Closed_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Closed_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Eyes_Closed_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Eyes_Closed_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Closed_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Closed_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Eyes_Closed_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Eyes_Closed_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Closed_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Closed_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Eyes_Closed_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Eyes_Closed_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Closed_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Closed_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Eyes_Closed_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Eyes_Look_Down_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Look_Down_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Look_Down_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Eyes_Look_Down_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Eyes_Look_Down_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Look_Down_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Look_Down_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Eyes_Look_Down_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Eyes_Look_Down_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Look_Down_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Look_Down_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Eyes_Look_Down_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Eyes_Look_Down_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Look_Down_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Look_Down_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Eyes_Look_Down_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Eyes_Look_Left_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Look_Left_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Look_Left_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Eyes_Look_Left_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Eyes_Look_Left_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Look_Left_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Look_Left_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Eyes_Look_Left_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Eyes_Look_Left_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Look_Left_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Look_Left_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Eyes_Look_Left_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Eyes_Look_Left_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Look_Left_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Look_Left_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Eyes_Look_Left_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Eyes_Look_Right_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Look_Right_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Look_Right_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Eyes_Look_Right_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Eyes_Look_Right_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Look_Right_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Look_Right_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Eyes_Look_Right_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Eyes_Look_Right_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Look_Right_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Look_Right_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Eyes_Look_Right_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Eyes_Look_Right_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Look_Right_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Look_Right_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Eyes_Look_Right_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Eyes_Look_Up_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Look_Up_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Look_Up_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Eyes_Look_Up_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Eyes_Look_Up_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Look_Up_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Look_Up_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Eyes_Look_Up_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Eyes_Look_Up_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Look_Up_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Eyes_Look_Up_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Eyes_Look_Up_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Eyes_Look_Up_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Look_Up_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Eyes_Look_Up_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Eyes_Look_Up_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Inner_Brow_Raiser_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Inner_Brow_Raiser_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Inner_Brow_Raiser_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Inner_Brow_Raiser_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Inner_Brow_Raiser_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Inner_Brow_Raiser_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Inner_Brow_Raiser_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Inner_Brow_Raiser_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Inner_Brow_Raiser_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Inner_Brow_Raiser_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Inner_Brow_Raiser_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Inner_Brow_Raiser_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Inner_Brow_Raiser_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Inner_Brow_Raiser_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Inner_Brow_Raiser_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Inner_Brow_Raiser_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Jaw_Drop
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Jaw_Drop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Jaw_Drop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Jaw_Drop"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Jaw_Drop
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Jaw_Drop(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Jaw_Drop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Jaw_Drop", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Jaw_Sideways_Left
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Jaw_Sideways_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Jaw_Sideways_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Jaw_Sideways_Left"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Jaw_Sideways_Left
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Jaw_Sideways_Left(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Jaw_Sideways_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Jaw_Sideways_Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Jaw_Sideways_Right
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Jaw_Sideways_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Jaw_Sideways_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Jaw_Sideways_Right"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Jaw_Sideways_Right
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Jaw_Sideways_Right(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Jaw_Sideways_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Jaw_Sideways_Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Jaw_Thrust
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Jaw_Thrust() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Jaw_Thrust");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Jaw_Thrust"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Jaw_Thrust
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Jaw_Thrust(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Jaw_Thrust");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Jaw_Thrust", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lid_Tightener_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lid_Tightener_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lid_Tightener_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lid_Tightener_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lid_Tightener_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lid_Tightener_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lid_Tightener_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lid_Tightener_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lid_Tightener_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lid_Tightener_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lid_Tightener_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lid_Tightener_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lid_Tightener_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lid_Tightener_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lid_Tightener_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lid_Tightener_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Corner_Depressor_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Corner_Depressor_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Corner_Depressor_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Corner_Depressor_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Corner_Depressor_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Corner_Depressor_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Corner_Depressor_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Corner_Depressor_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Corner_Depressor_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Corner_Depressor_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Corner_Depressor_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Corner_Depressor_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Corner_Depressor_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Corner_Depressor_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Corner_Depressor_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Corner_Depressor_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Corner_Puller_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Corner_Puller_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Corner_Puller_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Corner_Puller_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Corner_Puller_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Corner_Puller_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Corner_Puller_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Corner_Puller_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Corner_Puller_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Corner_Puller_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Corner_Puller_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Corner_Puller_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Corner_Puller_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Corner_Puller_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Corner_Puller_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Corner_Puller_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Funneler_LB
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Funneler_LB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Funneler_LB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Funneler_LB"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Funneler_LB
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Funneler_LB(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Funneler_LB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Funneler_LB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Funneler_LT
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Funneler_LT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Funneler_LT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Funneler_LT"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Funneler_LT
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Funneler_LT(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Funneler_LT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Funneler_LT", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Funneler_RB
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Funneler_RB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Funneler_RB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Funneler_RB"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Funneler_RB
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Funneler_RB(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Funneler_RB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Funneler_RB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Funneler_RT
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Funneler_RT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Funneler_RT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Funneler_RT"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Funneler_RT
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Funneler_RT(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Funneler_RT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Funneler_RT", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Pressor_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Pressor_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Pressor_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Pressor_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Pressor_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Pressor_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Pressor_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Pressor_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Pressor_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Pressor_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Pressor_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Pressor_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Pressor_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Pressor_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Pressor_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Pressor_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Pucker_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Pucker_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Pucker_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Pucker_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Pucker_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Pucker_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Pucker_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Pucker_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Pucker_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Pucker_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Pucker_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Pucker_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Pucker_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Pucker_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Pucker_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Pucker_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Stretcher_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Stretcher_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Stretcher_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Stretcher_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Stretcher_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Stretcher_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Stretcher_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Stretcher_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Stretcher_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Stretcher_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Stretcher_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Stretcher_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Stretcher_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Stretcher_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Stretcher_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Stretcher_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Suck_LB
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Suck_LB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Suck_LB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Suck_LB"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Suck_LB
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Suck_LB(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Suck_LB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Suck_LB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Suck_LT
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Suck_LT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Suck_LT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Suck_LT"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Suck_LT
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Suck_LT(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Suck_LT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Suck_LT", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Suck_RB
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Suck_RB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Suck_RB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Suck_RB"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Suck_RB
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Suck_RB(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Suck_RB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Suck_RB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Suck_RT
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Suck_RT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Suck_RT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Suck_RT"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Suck_RT
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Suck_RT(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Suck_RT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Suck_RT", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Tightener_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Tightener_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Tightener_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Tightener_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Tightener_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Tightener_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Tightener_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Tightener_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lip_Tightener_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Tightener_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lip_Tightener_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lip_Tightener_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lip_Tightener_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Tightener_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lip_Tightener_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lip_Tightener_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lips_Toward
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lips_Toward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lips_Toward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lips_Toward"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lips_Toward
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lips_Toward(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lips_Toward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lips_Toward", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lower_Lip_Depressor_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lower_Lip_Depressor_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lower_Lip_Depressor_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lower_Lip_Depressor_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lower_Lip_Depressor_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lower_Lip_Depressor_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lower_Lip_Depressor_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lower_Lip_Depressor_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Lower_Lip_Depressor_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Lower_Lip_Depressor_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Lower_Lip_Depressor_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Lower_Lip_Depressor_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Lower_Lip_Depressor_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Lower_Lip_Depressor_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Lower_Lip_Depressor_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Lower_Lip_Depressor_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Mouth_Left
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Mouth_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Mouth_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Mouth_Left"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Mouth_Left
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Mouth_Left(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Mouth_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Mouth_Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Mouth_Right
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Mouth_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Mouth_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Mouth_Right"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Mouth_Right
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Mouth_Right(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Mouth_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Mouth_Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Nose_Wrinkler_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Nose_Wrinkler_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Nose_Wrinkler_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Nose_Wrinkler_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Nose_Wrinkler_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Nose_Wrinkler_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Nose_Wrinkler_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Nose_Wrinkler_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Nose_Wrinkler_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Nose_Wrinkler_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Nose_Wrinkler_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Nose_Wrinkler_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Nose_Wrinkler_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Nose_Wrinkler_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Nose_Wrinkler_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Nose_Wrinkler_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Outer_Brow_Raiser_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Outer_Brow_Raiser_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Outer_Brow_Raiser_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Outer_Brow_Raiser_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Outer_Brow_Raiser_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Outer_Brow_Raiser_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Outer_Brow_Raiser_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Outer_Brow_Raiser_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Outer_Brow_Raiser_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Outer_Brow_Raiser_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Outer_Brow_Raiser_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Outer_Brow_Raiser_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Outer_Brow_Raiser_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Outer_Brow_Raiser_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Outer_Brow_Raiser_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Outer_Brow_Raiser_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Upper_Lid_Raiser_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Upper_Lid_Raiser_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Upper_Lid_Raiser_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Upper_Lid_Raiser_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Upper_Lid_Raiser_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Upper_Lid_Raiser_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Upper_Lid_Raiser_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Upper_Lid_Raiser_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Upper_Lid_Raiser_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Upper_Lid_Raiser_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Upper_Lid_Raiser_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Upper_Lid_Raiser_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Upper_Lid_Raiser_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Upper_Lid_Raiser_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Upper_Lid_Raiser_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Upper_Lid_Raiser_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Upper_Lip_Raiser_L
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Upper_Lip_Raiser_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Upper_Lip_Raiser_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Upper_Lip_Raiser_L"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Upper_Lip_Raiser_L
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Upper_Lip_Raiser_L(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Upper_Lip_Raiser_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Upper_Lip_Raiser_L", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Upper_Lip_Raiser_R
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Upper_Lip_Raiser_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Upper_Lip_Raiser_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Upper_Lip_Raiser_R"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Upper_Lip_Raiser_R
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Upper_Lip_Raiser_R(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Upper_Lip_Raiser_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Upper_Lip_Raiser_R", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceExpression Max
::GlobalNamespace::OVRPlugin::FaceExpression GlobalNamespace::OVRPlugin::FaceExpression::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceExpression>("", "OVRPlugin/FaceExpression", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceExpression Max
void GlobalNamespace::OVRPlugin::FaceExpression::_set_Max(::GlobalNamespace::OVRPlugin::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceExpression", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::FaceExpression::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceExpression::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/FaceConstants
#include "GlobalNamespace/OVRPlugin_FaceConstants.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceConstants MaxFaceExpressions
::GlobalNamespace::OVRPlugin::FaceConstants GlobalNamespace::OVRPlugin::FaceConstants::_get_MaxFaceExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceConstants::_get_MaxFaceExpressions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceConstants>("", "OVRPlugin/FaceConstants", "MaxFaceExpressions"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceConstants MaxFaceExpressions
void GlobalNamespace::OVRPlugin::FaceConstants::_set_MaxFaceExpressions(::GlobalNamespace::OVRPlugin::FaceConstants value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceConstants::_set_MaxFaceExpressions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceConstants", "MaxFaceExpressions", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FaceConstants MaxFaceRegionConfidences
::GlobalNamespace::OVRPlugin::FaceConstants GlobalNamespace::OVRPlugin::FaceConstants::_get_MaxFaceRegionConfidences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceConstants::_get_MaxFaceRegionConfidences");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FaceConstants>("", "OVRPlugin/FaceConstants", "MaxFaceRegionConfidences"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FaceConstants MaxFaceRegionConfidences
void GlobalNamespace::OVRPlugin::FaceConstants::_set_MaxFaceRegionConfidences(::GlobalNamespace::OVRPlugin::FaceConstants value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceConstants::_set_MaxFaceRegionConfidences");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FaceConstants", "MaxFaceRegionConfidences", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::FaceConstants::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FaceConstants::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/EyeGazeState
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Posef Pose
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::Posef& GlobalNamespace::OVRPlugin::EyeGazeState::dyn_Pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeGazeState::dyn_Pose");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pose"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Posef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Confidence
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRPlugin::EyeGazeState::dyn_Confidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeGazeState::dyn_Confidence");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Confidence"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: OVRPlugin/Bool _isValid
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::Bool& GlobalNamespace::OVRPlugin::EyeGazeState::dyn__isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeGazeState::dyn__isValid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isValid"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlugin/EyeGazeState.get_IsValid
bool GlobalNamespace::OVRPlugin::EyeGazeState::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeGazeState::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/ColorSpace
#include "GlobalNamespace/OVRPlugin_ColorSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace Unknown
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace Unknown
void GlobalNamespace::OVRPlugin::ColorSpace::_set_Unknown(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace Unmanaged
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_Unmanaged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_Unmanaged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "Unmanaged"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace Unmanaged
void GlobalNamespace::OVRPlugin::ColorSpace::_set_Unmanaged(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_Unmanaged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "Unmanaged", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace Rec_2020
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_Rec_2020() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_Rec_2020");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "Rec_2020"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace Rec_2020
void GlobalNamespace::OVRPlugin::ColorSpace::_set_Rec_2020(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_Rec_2020");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "Rec_2020", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace Rec_709
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_Rec_709() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_Rec_709");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "Rec_709"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace Rec_709
void GlobalNamespace::OVRPlugin::ColorSpace::_set_Rec_709(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_Rec_709");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "Rec_709", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace Rift_CV1
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_Rift_CV1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_Rift_CV1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "Rift_CV1"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace Rift_CV1
void GlobalNamespace::OVRPlugin::ColorSpace::_set_Rift_CV1(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_Rift_CV1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "Rift_CV1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace Rift_S
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_Rift_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_Rift_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "Rift_S"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace Rift_S
void GlobalNamespace::OVRPlugin::ColorSpace::_set_Rift_S(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_Rift_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "Rift_S", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace Quest
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace Quest
void GlobalNamespace::OVRPlugin::ColorSpace::_set_Quest(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace P3
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_P3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_P3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "P3"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace P3
void GlobalNamespace::OVRPlugin::ColorSpace::_set_P3(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_P3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "P3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace Adobe_RGB
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_Adobe_RGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_Adobe_RGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "Adobe_RGB"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace Adobe_RGB
void GlobalNamespace::OVRPlugin::ColorSpace::_set_Adobe_RGB(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_Adobe_RGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "Adobe_RGB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::ColorSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/EventType
#include "GlobalNamespace/OVRPlugin_EventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType Unknown
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType Unknown
void GlobalNamespace::OVRPlugin::EventType::_set_Unknown(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType DisplayRefreshRateChanged
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_DisplayRefreshRateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_DisplayRefreshRateChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "DisplayRefreshRateChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType DisplayRefreshRateChanged
void GlobalNamespace::OVRPlugin::EventType::_set_DisplayRefreshRateChanged(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_DisplayRefreshRateChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "DisplayRefreshRateChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType SpatialAnchorCreateComplete
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_SpatialAnchorCreateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_SpatialAnchorCreateComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "SpatialAnchorCreateComplete"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType SpatialAnchorCreateComplete
void GlobalNamespace::OVRPlugin::EventType::_set_SpatialAnchorCreateComplete(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_SpatialAnchorCreateComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "SpatialAnchorCreateComplete", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType SpaceSetComponentStatusComplete
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_SpaceSetComponentStatusComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_SpaceSetComponentStatusComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "SpaceSetComponentStatusComplete"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType SpaceSetComponentStatusComplete
void GlobalNamespace::OVRPlugin::EventType::_set_SpaceSetComponentStatusComplete(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_SpaceSetComponentStatusComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "SpaceSetComponentStatusComplete", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType SpaceQueryResults
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_SpaceQueryResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_SpaceQueryResults");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "SpaceQueryResults"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType SpaceQueryResults
void GlobalNamespace::OVRPlugin::EventType::_set_SpaceQueryResults(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_SpaceQueryResults");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "SpaceQueryResults", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType SpaceQueryComplete
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_SpaceQueryComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_SpaceQueryComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "SpaceQueryComplete"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType SpaceQueryComplete
void GlobalNamespace::OVRPlugin::EventType::_set_SpaceQueryComplete(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_SpaceQueryComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "SpaceQueryComplete", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType SpaceSaveComplete
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_SpaceSaveComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_SpaceSaveComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "SpaceSaveComplete"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType SpaceSaveComplete
void GlobalNamespace::OVRPlugin::EventType::_set_SpaceSaveComplete(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_SpaceSaveComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "SpaceSaveComplete", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType SpaceEraseComplete
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_SpaceEraseComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_SpaceEraseComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "SpaceEraseComplete"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType SpaceEraseComplete
void GlobalNamespace::OVRPlugin::EventType::_set_SpaceEraseComplete(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_SpaceEraseComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "SpaceEraseComplete", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType SpaceShareResult
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_SpaceShareResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_SpaceShareResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "SpaceShareResult"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType SpaceShareResult
void GlobalNamespace::OVRPlugin::EventType::_set_SpaceShareResult(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_SpaceShareResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "SpaceShareResult", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType SpaceListSaveResult
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_SpaceListSaveResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_SpaceListSaveResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "SpaceListSaveResult"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType SpaceListSaveResult
void GlobalNamespace::OVRPlugin::EventType::_set_SpaceListSaveResult(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_SpaceListSaveResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "SpaceListSaveResult", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType SceneCaptureComplete
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_SceneCaptureComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_SceneCaptureComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "SceneCaptureComplete"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType SceneCaptureComplete
void GlobalNamespace::OVRPlugin::EventType::_set_SceneCaptureComplete(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_SceneCaptureComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "SceneCaptureComplete", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType VirtualKeyboardCommitText
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_VirtualKeyboardCommitText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_VirtualKeyboardCommitText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "VirtualKeyboardCommitText"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType VirtualKeyboardCommitText
void GlobalNamespace::OVRPlugin::EventType::_set_VirtualKeyboardCommitText(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_VirtualKeyboardCommitText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "VirtualKeyboardCommitText", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType VirtualKeyboardBackspace
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_VirtualKeyboardBackspace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_VirtualKeyboardBackspace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "VirtualKeyboardBackspace"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType VirtualKeyboardBackspace
void GlobalNamespace::OVRPlugin::EventType::_set_VirtualKeyboardBackspace(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_VirtualKeyboardBackspace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "VirtualKeyboardBackspace", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType VirtualKeyboardEnter
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_VirtualKeyboardEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_VirtualKeyboardEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "VirtualKeyboardEnter"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType VirtualKeyboardEnter
void GlobalNamespace::OVRPlugin::EventType::_set_VirtualKeyboardEnter(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_VirtualKeyboardEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "VirtualKeyboardEnter", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType VirtualKeyboardShown
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_VirtualKeyboardShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_VirtualKeyboardShown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "VirtualKeyboardShown"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType VirtualKeyboardShown
void GlobalNamespace::OVRPlugin::EventType::_set_VirtualKeyboardShown(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_VirtualKeyboardShown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "VirtualKeyboardShown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType VirtualKeyboardHidden
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_VirtualKeyboardHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_VirtualKeyboardHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "VirtualKeyboardHidden"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType VirtualKeyboardHidden
void GlobalNamespace::OVRPlugin::EventType::_set_VirtualKeyboardHidden(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_VirtualKeyboardHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "VirtualKeyboardHidden", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::EventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/RenderModelFlags
#include "GlobalNamespace/OVRPlugin_RenderModelFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/RenderModelFlags SupportsGltf20Subset1
::GlobalNamespace::OVRPlugin::RenderModelFlags GlobalNamespace::OVRPlugin::RenderModelFlags::_get_SupportsGltf20Subset1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RenderModelFlags::_get_SupportsGltf20Subset1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::RenderModelFlags>("", "OVRPlugin/RenderModelFlags", "SupportsGltf20Subset1"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/RenderModelFlags SupportsGltf20Subset1
void GlobalNamespace::OVRPlugin::RenderModelFlags::_set_SupportsGltf20Subset1(::GlobalNamespace::OVRPlugin::RenderModelFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RenderModelFlags::_set_SupportsGltf20Subset1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/RenderModelFlags", "SupportsGltf20Subset1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/RenderModelFlags SupportsGltf20Subset2
::GlobalNamespace::OVRPlugin::RenderModelFlags GlobalNamespace::OVRPlugin::RenderModelFlags::_get_SupportsGltf20Subset2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RenderModelFlags::_get_SupportsGltf20Subset2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::RenderModelFlags>("", "OVRPlugin/RenderModelFlags", "SupportsGltf20Subset2"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/RenderModelFlags SupportsGltf20Subset2
void GlobalNamespace::OVRPlugin::RenderModelFlags::_set_SupportsGltf20Subset2(::GlobalNamespace::OVRPlugin::RenderModelFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RenderModelFlags::_set_SupportsGltf20Subset2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/RenderModelFlags", "SupportsGltf20Subset2", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::RenderModelFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RenderModelFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/VirtualKeyboardLocationType
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardLocationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/VirtualKeyboardLocationType Custom
::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType>("", "OVRPlugin/VirtualKeyboardLocationType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/VirtualKeyboardLocationType Custom
void GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType::_set_Custom(::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/VirtualKeyboardLocationType", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/VirtualKeyboardLocationType Far
::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType::_get_Far() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType::_get_Far");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType>("", "OVRPlugin/VirtualKeyboardLocationType", "Far"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/VirtualKeyboardLocationType Far
void GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType::_set_Far(::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType::_set_Far");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/VirtualKeyboardLocationType", "Far", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/VirtualKeyboardLocationType Direct
::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType::_get_Direct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType::_get_Direct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType>("", "OVRPlugin/VirtualKeyboardLocationType", "Direct"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/VirtualKeyboardLocationType Direct
void GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType::_set_Direct(::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType::_set_Direct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/VirtualKeyboardLocationType", "Direct", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardLocationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/VirtualKeyboardInputSource
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardInputSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/VirtualKeyboardInputSource Invalid
::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource>("", "OVRPlugin/VirtualKeyboardInputSource", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/VirtualKeyboardInputSource Invalid
void GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_Invalid(::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/VirtualKeyboardInputSource", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/VirtualKeyboardInputSource ControllerRayLeft
::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_ControllerRayLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_ControllerRayLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource>("", "OVRPlugin/VirtualKeyboardInputSource", "ControllerRayLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/VirtualKeyboardInputSource ControllerRayLeft
void GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_ControllerRayLeft(::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_ControllerRayLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/VirtualKeyboardInputSource", "ControllerRayLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/VirtualKeyboardInputSource ControllerRayRight
::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_ControllerRayRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_ControllerRayRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource>("", "OVRPlugin/VirtualKeyboardInputSource", "ControllerRayRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/VirtualKeyboardInputSource ControllerRayRight
void GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_ControllerRayRight(::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_ControllerRayRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/VirtualKeyboardInputSource", "ControllerRayRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/VirtualKeyboardInputSource HandRayLeft
::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_HandRayLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_HandRayLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource>("", "OVRPlugin/VirtualKeyboardInputSource", "HandRayLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/VirtualKeyboardInputSource HandRayLeft
void GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_HandRayLeft(::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_HandRayLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/VirtualKeyboardInputSource", "HandRayLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/VirtualKeyboardInputSource HandRayRight
::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_HandRayRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_HandRayRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource>("", "OVRPlugin/VirtualKeyboardInputSource", "HandRayRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/VirtualKeyboardInputSource HandRayRight
void GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_HandRayRight(::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_HandRayRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/VirtualKeyboardInputSource", "HandRayRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/VirtualKeyboardInputSource ControllerDirectLeft
::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_ControllerDirectLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_ControllerDirectLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource>("", "OVRPlugin/VirtualKeyboardInputSource", "ControllerDirectLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/VirtualKeyboardInputSource ControllerDirectLeft
void GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_ControllerDirectLeft(::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_ControllerDirectLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/VirtualKeyboardInputSource", "ControllerDirectLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/VirtualKeyboardInputSource ControllerDirectRight
::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_ControllerDirectRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_ControllerDirectRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource>("", "OVRPlugin/VirtualKeyboardInputSource", "ControllerDirectRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/VirtualKeyboardInputSource ControllerDirectRight
void GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_ControllerDirectRight(::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_ControllerDirectRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/VirtualKeyboardInputSource", "ControllerDirectRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/VirtualKeyboardInputSource HandDirectIndexTipLeft
::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_HandDirectIndexTipLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_HandDirectIndexTipLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource>("", "OVRPlugin/VirtualKeyboardInputSource", "HandDirectIndexTipLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/VirtualKeyboardInputSource HandDirectIndexTipLeft
void GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_HandDirectIndexTipLeft(::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_HandDirectIndexTipLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/VirtualKeyboardInputSource", "HandDirectIndexTipLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/VirtualKeyboardInputSource HandDirectIndexTipRight
::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_HandDirectIndexTipRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_HandDirectIndexTipRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource>("", "OVRPlugin/VirtualKeyboardInputSource", "HandDirectIndexTipRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/VirtualKeyboardInputSource HandDirectIndexTipRight
void GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_HandDirectIndexTipRight(::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_HandDirectIndexTipRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/VirtualKeyboardInputSource", "HandDirectIndexTipRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/VirtualKeyboardInputSource EnumSize
::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_get_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource>("", "OVRPlugin/VirtualKeyboardInputSource", "EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/VirtualKeyboardInputSource EnumSize
void GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_EnumSize(::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::_set_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/VirtualKeyboardInputSource", "EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/VirtualKeyboardInputStateFlags
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardInputStateFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/VirtualKeyboardInputStateFlags IsPressed
::GlobalNamespace::OVRPlugin::VirtualKeyboardInputStateFlags GlobalNamespace::OVRPlugin::VirtualKeyboardInputStateFlags::_get_IsPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputStateFlags::_get_IsPressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::VirtualKeyboardInputStateFlags>("", "OVRPlugin/VirtualKeyboardInputStateFlags", "IsPressed"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/VirtualKeyboardInputStateFlags IsPressed
void GlobalNamespace::OVRPlugin::VirtualKeyboardInputStateFlags::_set_IsPressed(::GlobalNamespace::OVRPlugin::VirtualKeyboardInputStateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputStateFlags::_set_IsPressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/VirtualKeyboardInputStateFlags", "IsPressed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 value__
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRPlugin::VirtualKeyboardInputStateFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardInputStateFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/VirtualKeyboardModelVisibility
#include "GlobalNamespace/OVRPlugin_VirtualKeyboardModelVisibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: OVRPlugin/Bool _visible
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::Bool& GlobalNamespace::OVRPlugin::VirtualKeyboardModelVisibility::dyn__visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardModelVisibility::dyn__visible");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_visible"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlugin/VirtualKeyboardModelVisibility.get_Visible
bool GlobalNamespace::OVRPlugin::VirtualKeyboardModelVisibility::get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardModelVisibility::get_Visible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Visible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/VirtualKeyboardModelVisibility.set_Visible
void GlobalNamespace::OVRPlugin::VirtualKeyboardModelVisibility::set_Visible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::VirtualKeyboardModelVisibility::set_Visible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Visible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/InsightPassthroughColorMapType
#include "GlobalNamespace/OVRPlugin_InsightPassthroughColorMapType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/InsightPassthroughColorMapType None
::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType>("", "OVRPlugin/InsightPassthroughColorMapType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/InsightPassthroughColorMapType None
void GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_None(::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/InsightPassthroughColorMapType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/InsightPassthroughColorMapType MonoToRgba
::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_MonoToRgba() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_MonoToRgba");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType>("", "OVRPlugin/InsightPassthroughColorMapType", "MonoToRgba"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/InsightPassthroughColorMapType MonoToRgba
void GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_MonoToRgba(::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_MonoToRgba");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/InsightPassthroughColorMapType", "MonoToRgba", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/InsightPassthroughColorMapType MonoToMono
::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_MonoToMono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_MonoToMono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType>("", "OVRPlugin/InsightPassthroughColorMapType", "MonoToMono"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/InsightPassthroughColorMapType MonoToMono
void GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_MonoToMono(::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_MonoToMono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/InsightPassthroughColorMapType", "MonoToMono", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/InsightPassthroughColorMapType BrightnessContrastSaturation
::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_BrightnessContrastSaturation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_BrightnessContrastSaturation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType>("", "OVRPlugin/InsightPassthroughColorMapType", "BrightnessContrastSaturation"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/InsightPassthroughColorMapType BrightnessContrastSaturation
void GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_BrightnessContrastSaturation(::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_BrightnessContrastSaturation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/InsightPassthroughColorMapType", "BrightnessContrastSaturation", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/InsightPassthroughColorMapType ColorLut
::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_ColorLut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_ColorLut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType>("", "OVRPlugin/InsightPassthroughColorMapType", "ColorLut"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/InsightPassthroughColorMapType ColorLut
void GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_ColorLut(::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_ColorLut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/InsightPassthroughColorMapType", "ColorLut", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/InsightPassthroughColorMapType InterpolatedColorLut
::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_InterpolatedColorLut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_InterpolatedColorLut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType>("", "OVRPlugin/InsightPassthroughColorMapType", "InterpolatedColorLut"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/InsightPassthroughColorMapType InterpolatedColorLut
void GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_InterpolatedColorLut(::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_InterpolatedColorLut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/InsightPassthroughColorMapType", "InterpolatedColorLut", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/InsightPassthroughStyleFlags
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyleFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/InsightPassthroughStyleFlags HasTextureOpacityFactor
::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_get_HasTextureOpacityFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_get_HasTextureOpacityFactor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags>("", "OVRPlugin/InsightPassthroughStyleFlags", "HasTextureOpacityFactor"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/InsightPassthroughStyleFlags HasTextureOpacityFactor
void GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_set_HasTextureOpacityFactor(::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_set_HasTextureOpacityFactor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/InsightPassthroughStyleFlags", "HasTextureOpacityFactor", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/InsightPassthroughStyleFlags HasEdgeColor
::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_get_HasEdgeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_get_HasEdgeColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags>("", "OVRPlugin/InsightPassthroughStyleFlags", "HasEdgeColor"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/InsightPassthroughStyleFlags HasEdgeColor
void GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_set_HasEdgeColor(::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_set_HasEdgeColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/InsightPassthroughStyleFlags", "HasEdgeColor", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/InsightPassthroughStyleFlags HasTextureColorMap
::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_get_HasTextureColorMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_get_HasTextureColorMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags>("", "OVRPlugin/InsightPassthroughStyleFlags", "HasTextureColorMap"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/InsightPassthroughStyleFlags HasTextureColorMap
void GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_set_HasTextureColorMap(::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_set_HasTextureColorMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/InsightPassthroughStyleFlags", "HasTextureColorMap", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/InsightPassthroughStyle2
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyle2.hpp"
// Including type: OVRPlugin/InsightPassthroughStyle
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/InsightPassthroughStyleFlags Flags
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags& GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_Flags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Flags"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TextureOpacityFactor
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_TextureOpacityFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_TextureOpacityFactor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TextureOpacityFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Colorf EdgeColor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::Colorf& GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_EdgeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_EdgeColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EdgeColor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Colorf*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/InsightPassthroughColorMapType TextureColorMapType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType& GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_TextureColorMapType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_TextureColorMapType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TextureColorMapType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 TextureColorMapDataSize
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_TextureColorMapDataSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_TextureColorMapDataSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TextureColorMapDataSize"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr TextureColorMapData
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_TextureColorMapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_TextureColorMapData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TextureColorMapData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 LutSource
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_LutSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_LutSource");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LutSource"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 LutTarget
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_LutTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_LutTarget");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LutTarget"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single LutWeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_LutWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::dyn_LutWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LutWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlugin/InsightPassthroughStyle2.CopyTo
void GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::CopyTo(ByRef<::GlobalNamespace::OVRPlugin::InsightPassthroughStyle> target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyle2::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(target));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/PassthroughColorLutChannels
#include "GlobalNamespace/OVRPlugin_PassthroughColorLutChannels.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PassthroughColorLutChannels Rgb
::GlobalNamespace::OVRPlugin::PassthroughColorLutChannels GlobalNamespace::OVRPlugin::PassthroughColorLutChannels::_get_Rgb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughColorLutChannels::_get_Rgb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PassthroughColorLutChannels>("", "OVRPlugin/PassthroughColorLutChannels", "Rgb"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PassthroughColorLutChannels Rgb
void GlobalNamespace::OVRPlugin::PassthroughColorLutChannels::_set_Rgb(::GlobalNamespace::OVRPlugin::PassthroughColorLutChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughColorLutChannels::_set_Rgb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PassthroughColorLutChannels", "Rgb", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PassthroughColorLutChannels Rgba
::GlobalNamespace::OVRPlugin::PassthroughColorLutChannels GlobalNamespace::OVRPlugin::PassthroughColorLutChannels::_get_Rgba() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughColorLutChannels::_get_Rgba");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PassthroughColorLutChannels>("", "OVRPlugin/PassthroughColorLutChannels", "Rgba"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PassthroughColorLutChannels Rgba
void GlobalNamespace::OVRPlugin::PassthroughColorLutChannels::_set_Rgba(::GlobalNamespace::OVRPlugin::PassthroughColorLutChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughColorLutChannels::_set_Rgba");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PassthroughColorLutChannels", "Rgba", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::PassthroughColorLutChannels::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughColorLutChannels::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/PassthroughCapabilityFlags
#include "GlobalNamespace/OVRPlugin_PassthroughCapabilityFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PassthroughCapabilityFlags Passthrough
::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags::_get_Passthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags::_get_Passthrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags>("", "OVRPlugin/PassthroughCapabilityFlags", "Passthrough"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PassthroughCapabilityFlags Passthrough
void GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags::_set_Passthrough(::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags::_set_Passthrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PassthroughCapabilityFlags", "Passthrough", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PassthroughCapabilityFlags Color
::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags>("", "OVRPlugin/PassthroughCapabilityFlags", "Color"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PassthroughCapabilityFlags Color
void GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags::_set_Color(::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PassthroughCapabilityFlags", "Color", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PassthroughCapabilityFlags Depth
::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags::_get_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags::_get_Depth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags>("", "OVRPlugin/PassthroughCapabilityFlags", "Depth"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PassthroughCapabilityFlags Depth
void GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags::_set_Depth(::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags::_set_Depth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PassthroughCapabilityFlags", "Depth", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughCapabilityFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/PassthroughCapabilityFields
#include "GlobalNamespace/OVRPlugin_PassthroughCapabilityFields.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PassthroughCapabilityFields Flags
::GlobalNamespace::OVRPlugin::PassthroughCapabilityFields GlobalNamespace::OVRPlugin::PassthroughCapabilityFields::_get_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughCapabilityFields::_get_Flags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PassthroughCapabilityFields>("", "OVRPlugin/PassthroughCapabilityFields", "Flags"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PassthroughCapabilityFields Flags
void GlobalNamespace::OVRPlugin::PassthroughCapabilityFields::_set_Flags(::GlobalNamespace::OVRPlugin::PassthroughCapabilityFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughCapabilityFields::_set_Flags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PassthroughCapabilityFields", "Flags", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PassthroughCapabilityFields MaxColorLutResolution
::GlobalNamespace::OVRPlugin::PassthroughCapabilityFields GlobalNamespace::OVRPlugin::PassthroughCapabilityFields::_get_MaxColorLutResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughCapabilityFields::_get_MaxColorLutResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PassthroughCapabilityFields>("", "OVRPlugin/PassthroughCapabilityFields", "MaxColorLutResolution"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PassthroughCapabilityFields MaxColorLutResolution
void GlobalNamespace::OVRPlugin::PassthroughCapabilityFields::_set_MaxColorLutResolution(::GlobalNamespace::OVRPlugin::PassthroughCapabilityFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughCapabilityFields::_set_MaxColorLutResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PassthroughCapabilityFields", "MaxColorLutResolution", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::PassthroughCapabilityFields::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughCapabilityFields::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/SpaceComponentType
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceComponentType Locatable
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRPlugin::SpaceComponentType::_get_Locatable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_get_Locatable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceComponentType>("", "OVRPlugin/SpaceComponentType", "Locatable"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceComponentType Locatable
void GlobalNamespace::OVRPlugin::SpaceComponentType::_set_Locatable(::GlobalNamespace::OVRPlugin::SpaceComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_set_Locatable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceComponentType", "Locatable", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceComponentType Storable
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRPlugin::SpaceComponentType::_get_Storable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_get_Storable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceComponentType>("", "OVRPlugin/SpaceComponentType", "Storable"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceComponentType Storable
void GlobalNamespace::OVRPlugin::SpaceComponentType::_set_Storable(::GlobalNamespace::OVRPlugin::SpaceComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_set_Storable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceComponentType", "Storable", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceComponentType Sharable
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRPlugin::SpaceComponentType::_get_Sharable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_get_Sharable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceComponentType>("", "OVRPlugin/SpaceComponentType", "Sharable"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceComponentType Sharable
void GlobalNamespace::OVRPlugin::SpaceComponentType::_set_Sharable(::GlobalNamespace::OVRPlugin::SpaceComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_set_Sharable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceComponentType", "Sharable", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceComponentType Bounded2D
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRPlugin::SpaceComponentType::_get_Bounded2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_get_Bounded2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceComponentType>("", "OVRPlugin/SpaceComponentType", "Bounded2D"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceComponentType Bounded2D
void GlobalNamespace::OVRPlugin::SpaceComponentType::_set_Bounded2D(::GlobalNamespace::OVRPlugin::SpaceComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_set_Bounded2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceComponentType", "Bounded2D", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceComponentType Bounded3D
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRPlugin::SpaceComponentType::_get_Bounded3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_get_Bounded3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceComponentType>("", "OVRPlugin/SpaceComponentType", "Bounded3D"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceComponentType Bounded3D
void GlobalNamespace::OVRPlugin::SpaceComponentType::_set_Bounded3D(::GlobalNamespace::OVRPlugin::SpaceComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_set_Bounded3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceComponentType", "Bounded3D", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceComponentType SemanticLabels
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRPlugin::SpaceComponentType::_get_SemanticLabels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_get_SemanticLabels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceComponentType>("", "OVRPlugin/SpaceComponentType", "SemanticLabels"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceComponentType SemanticLabels
void GlobalNamespace::OVRPlugin::SpaceComponentType::_set_SemanticLabels(::GlobalNamespace::OVRPlugin::SpaceComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_set_SemanticLabels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceComponentType", "SemanticLabels", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceComponentType RoomLayout
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRPlugin::SpaceComponentType::_get_RoomLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_get_RoomLayout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceComponentType>("", "OVRPlugin/SpaceComponentType", "RoomLayout"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceComponentType RoomLayout
void GlobalNamespace::OVRPlugin::SpaceComponentType::_set_RoomLayout(::GlobalNamespace::OVRPlugin::SpaceComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_set_RoomLayout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceComponentType", "RoomLayout", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceComponentType SpaceContainer
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRPlugin::SpaceComponentType::_get_SpaceContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_get_SpaceContainer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceComponentType>("", "OVRPlugin/SpaceComponentType", "SpaceContainer"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceComponentType SpaceContainer
void GlobalNamespace::OVRPlugin::SpaceComponentType::_set_SpaceContainer(::GlobalNamespace::OVRPlugin::SpaceComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_set_SpaceContainer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceComponentType", "SpaceContainer", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceComponentType TriangleMesh
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRPlugin::SpaceComponentType::_get_TriangleMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_get_TriangleMesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceComponentType>("", "OVRPlugin/SpaceComponentType", "TriangleMesh"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceComponentType TriangleMesh
void GlobalNamespace::OVRPlugin::SpaceComponentType::_set_TriangleMesh(::GlobalNamespace::OVRPlugin::SpaceComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::_set_TriangleMesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceComponentType", "TriangleMesh", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::SpaceComponentType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceComponentType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/SpaceStorageLocation
#include "GlobalNamespace/OVRPlugin_SpaceStorageLocation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceStorageLocation Invalid
::GlobalNamespace::OVRPlugin::SpaceStorageLocation GlobalNamespace::OVRPlugin::SpaceStorageLocation::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceStorageLocation::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceStorageLocation>("", "OVRPlugin/SpaceStorageLocation", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceStorageLocation Invalid
void GlobalNamespace::OVRPlugin::SpaceStorageLocation::_set_Invalid(::GlobalNamespace::OVRPlugin::SpaceStorageLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceStorageLocation::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceStorageLocation", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceStorageLocation Local
::GlobalNamespace::OVRPlugin::SpaceStorageLocation GlobalNamespace::OVRPlugin::SpaceStorageLocation::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceStorageLocation::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceStorageLocation>("", "OVRPlugin/SpaceStorageLocation", "Local"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceStorageLocation Local
void GlobalNamespace::OVRPlugin::SpaceStorageLocation::_set_Local(::GlobalNamespace::OVRPlugin::SpaceStorageLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceStorageLocation::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceStorageLocation", "Local", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceStorageLocation Cloud
::GlobalNamespace::OVRPlugin::SpaceStorageLocation GlobalNamespace::OVRPlugin::SpaceStorageLocation::_get_Cloud() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceStorageLocation::_get_Cloud");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceStorageLocation>("", "OVRPlugin/SpaceStorageLocation", "Cloud"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceStorageLocation Cloud
void GlobalNamespace::OVRPlugin::SpaceStorageLocation::_set_Cloud(::GlobalNamespace::OVRPlugin::SpaceStorageLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceStorageLocation::_set_Cloud");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceStorageLocation", "Cloud", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::SpaceStorageLocation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceStorageLocation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/SpaceStoragePersistenceMode
#include "GlobalNamespace/OVRPlugin_SpaceStoragePersistenceMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceStoragePersistenceMode Invalid
::GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode>("", "OVRPlugin/SpaceStoragePersistenceMode", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceStoragePersistenceMode Invalid
void GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode::_set_Invalid(::GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceStoragePersistenceMode", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceStoragePersistenceMode Indefinite
::GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode::_get_Indefinite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode::_get_Indefinite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode>("", "OVRPlugin/SpaceStoragePersistenceMode", "Indefinite"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceStoragePersistenceMode Indefinite
void GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode::_set_Indefinite(::GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode::_set_Indefinite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceStoragePersistenceMode", "Indefinite", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceStoragePersistenceMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/SpaceQueryActionType
#include "GlobalNamespace/OVRPlugin_SpaceQueryActionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceQueryActionType Load
::GlobalNamespace::OVRPlugin::SpaceQueryActionType GlobalNamespace::OVRPlugin::SpaceQueryActionType::_get_Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceQueryActionType::_get_Load");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceQueryActionType>("", "OVRPlugin/SpaceQueryActionType", "Load"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceQueryActionType Load
void GlobalNamespace::OVRPlugin::SpaceQueryActionType::_set_Load(::GlobalNamespace::OVRPlugin::SpaceQueryActionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceQueryActionType::_set_Load");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceQueryActionType", "Load", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::SpaceQueryActionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceQueryActionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/SpaceQueryType
#include "GlobalNamespace/OVRPlugin_SpaceQueryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceQueryType Action
::GlobalNamespace::OVRPlugin::SpaceQueryType GlobalNamespace::OVRPlugin::SpaceQueryType::_get_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceQueryType::_get_Action");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceQueryType>("", "OVRPlugin/SpaceQueryType", "Action"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceQueryType Action
void GlobalNamespace::OVRPlugin::SpaceQueryType::_set_Action(::GlobalNamespace::OVRPlugin::SpaceQueryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceQueryType::_set_Action");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceQueryType", "Action", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::SpaceQueryType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceQueryType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/SpaceQueryFilterType
#include "GlobalNamespace/OVRPlugin_SpaceQueryFilterType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceQueryFilterType None
::GlobalNamespace::OVRPlugin::SpaceQueryFilterType GlobalNamespace::OVRPlugin::SpaceQueryFilterType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceQueryFilterType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceQueryFilterType>("", "OVRPlugin/SpaceQueryFilterType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceQueryFilterType None
void GlobalNamespace::OVRPlugin::SpaceQueryFilterType::_set_None(::GlobalNamespace::OVRPlugin::SpaceQueryFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceQueryFilterType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceQueryFilterType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceQueryFilterType Ids
::GlobalNamespace::OVRPlugin::SpaceQueryFilterType GlobalNamespace::OVRPlugin::SpaceQueryFilterType::_get_Ids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceQueryFilterType::_get_Ids");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceQueryFilterType>("", "OVRPlugin/SpaceQueryFilterType", "Ids"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceQueryFilterType Ids
void GlobalNamespace::OVRPlugin::SpaceQueryFilterType::_set_Ids(::GlobalNamespace::OVRPlugin::SpaceQueryFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceQueryFilterType::_set_Ids");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceQueryFilterType", "Ids", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SpaceQueryFilterType Components
::GlobalNamespace::OVRPlugin::SpaceQueryFilterType GlobalNamespace::OVRPlugin::SpaceQueryFilterType::_get_Components() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceQueryFilterType::_get_Components");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SpaceQueryFilterType>("", "OVRPlugin/SpaceQueryFilterType", "Components"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SpaceQueryFilterType Components
void GlobalNamespace::OVRPlugin::SpaceQueryFilterType::_set_Components(::GlobalNamespace::OVRPlugin::SpaceQueryFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceQueryFilterType::_set_Components");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SpaceQueryFilterType", "Components", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::SpaceQueryFilterType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SpaceQueryFilterType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Media
#include "GlobalNamespace/OVRPlugin_Media.hpp"
// Including type: OVRPlugin/Media/MrcActivationMode
#include "GlobalNamespace/OVRPlugin_Media_MrcActivationMode.hpp"
// Including type: OVRPlugin/Media/PlatformCameraMode
#include "GlobalNamespace/OVRPlugin_Media_PlatformCameraMode.hpp"
// Including type: OVRPlugin/Media/InputVideoBufferType
#include "GlobalNamespace/OVRPlugin_Media_InputVideoBufferType.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Texture2D cachedTexture
::UnityEngine::Texture2D* GlobalNamespace::OVRPlugin::Media::_get_cachedTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::_get_cachedTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Texture2D*>("", "OVRPlugin/Media", "cachedTexture"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Texture2D cachedTexture
void GlobalNamespace::OVRPlugin::Media::_set_cachedTexture(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::_set_cachedTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media", "cachedTexture", value));
}
// Autogenerated method: OVRPlugin/Media.Initialize
bool GlobalNamespace::OVRPlugin::Media::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.Shutdown
bool GlobalNamespace::OVRPlugin::Media::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.GetInitialized
bool GlobalNamespace::OVRPlugin::Media::GetInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::GetInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.Update
bool GlobalNamespace::OVRPlugin::Media::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.GetMrcActivationMode
::GlobalNamespace::OVRPlugin::Media::MrcActivationMode GlobalNamespace::OVRPlugin::Media::GetMrcActivationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::GetMrcActivationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetMrcActivationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Media::MrcActivationMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.SetMrcActivationMode
bool GlobalNamespace::OVRPlugin::Media::SetMrcActivationMode(::GlobalNamespace::OVRPlugin::Media::MrcActivationMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetMrcActivationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcActivationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: OVRPlugin/Media.SetPlatformInitialized
bool GlobalNamespace::OVRPlugin::Media::SetPlatformInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetPlatformInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetPlatformInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.GetPlatformCameraMode
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::GetPlatformCameraMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::GetPlatformCameraMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetPlatformCameraMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.SetPlatformCameraMode
bool GlobalNamespace::OVRPlugin::Media::SetPlatformCameraMode(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetPlatformCameraMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetPlatformCameraMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: OVRPlugin/Media.IsMrcEnabled
bool GlobalNamespace::OVRPlugin::Media::IsMrcEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::IsMrcEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "IsMrcEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.IsMrcActivated
bool GlobalNamespace::OVRPlugin::Media::IsMrcActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::IsMrcActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "IsMrcActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.UseMrcDebugCamera
bool GlobalNamespace::OVRPlugin::Media::UseMrcDebugCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::UseMrcDebugCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "UseMrcDebugCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.SetMrcInputVideoBufferType
bool GlobalNamespace::OVRPlugin::Media::SetMrcInputVideoBufferType(::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType videoBufferType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetMrcInputVideoBufferType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcInputVideoBufferType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(videoBufferType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, videoBufferType);
}
// Autogenerated method: OVRPlugin/Media.GetMrcInputVideoBufferType
::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType GlobalNamespace::OVRPlugin::Media::GetMrcInputVideoBufferType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::GetMrcInputVideoBufferType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetMrcInputVideoBufferType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.SetMrcFrameSize
bool GlobalNamespace::OVRPlugin::Media::SetMrcFrameSize(int frameWidth, int frameHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetMrcFrameSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcFrameSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameWidth), ::il2cpp_utils::ExtractType(frameHeight)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frameWidth, frameHeight);
}
// Autogenerated method: OVRPlugin/Media.GetMrcFrameSize
void GlobalNamespace::OVRPlugin::Media::GetMrcFrameSize(ByRef<int> frameWidth, ByRef<int> frameHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::GetMrcFrameSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetMrcFrameSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(frameWidth), byref(frameHeight));
}
// Autogenerated method: OVRPlugin/Media.SetMrcAudioSampleRate
bool GlobalNamespace::OVRPlugin::Media::SetMrcAudioSampleRate(int sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetMrcAudioSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcAudioSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleRate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sampleRate);
}
// Autogenerated method: OVRPlugin/Media.GetMrcAudioSampleRate
int GlobalNamespace::OVRPlugin::Media::GetMrcAudioSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::GetMrcAudioSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetMrcAudioSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.SetMrcFrameImageFlipped
bool GlobalNamespace::OVRPlugin::Media::SetMrcFrameImageFlipped(bool imageFlipped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetMrcFrameImageFlipped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcFrameImageFlipped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(imageFlipped)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, imageFlipped);
}
// Autogenerated method: OVRPlugin/Media.GetMrcFrameImageFlipped
bool GlobalNamespace::OVRPlugin::Media::GetMrcFrameImageFlipped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::GetMrcFrameImageFlipped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetMrcFrameImageFlipped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.EncodeMrcFrame
bool GlobalNamespace::OVRPlugin::Media::EncodeMrcFrame(::System::IntPtr textureHandle, ::System::IntPtr fgTextureHandle, ::ArrayW<float> audioData, int audioFrames, int audioChannels, double timestamp, double poseTime, ByRef<int> outSyncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::EncodeMrcFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "EncodeMrcFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureHandle), ::il2cpp_utils::ExtractType(fgTextureHandle), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioFrames), ::il2cpp_utils::ExtractType(audioChannels), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(poseTime), ::il2cpp_utils::ExtractType(outSyncId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textureHandle, fgTextureHandle, audioData, audioFrames, audioChannels, timestamp, poseTime, byref(outSyncId));
}
// Autogenerated method: OVRPlugin/Media.EncodeMrcFrame
bool GlobalNamespace::OVRPlugin::Media::EncodeMrcFrame(::UnityEngine::RenderTexture* frame, ::ArrayW<float> audioData, int audioFrames, int audioChannels, double timestamp, double poseTime, ByRef<int> outSyncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::EncodeMrcFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "EncodeMrcFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioFrames), ::il2cpp_utils::ExtractType(audioChannels), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(poseTime), ::il2cpp_utils::ExtractType(outSyncId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frame, audioData, audioFrames, audioChannels, timestamp, poseTime, byref(outSyncId));
}
// Autogenerated method: OVRPlugin/Media.SyncMrcFrame
bool GlobalNamespace::OVRPlugin::Media::SyncMrcFrame(int syncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SyncMrcFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SyncMrcFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, syncId);
}
// Autogenerated method: OVRPlugin/Media.SetAvailableQueueIndexVulkan
bool GlobalNamespace::OVRPlugin::Media::SetAvailableQueueIndexVulkan(uint queueIndexVk) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetAvailableQueueIndexVulkan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetAvailableQueueIndexVulkan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(queueIndexVk)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, queueIndexVk);
}
// Autogenerated method: OVRPlugin/Media.SetMrcHeadsetControllerPose
bool GlobalNamespace::OVRPlugin::Media::SetMrcHeadsetControllerPose(::GlobalNamespace::OVRPlugin::Posef headsetPose, ::GlobalNamespace::OVRPlugin::Posef leftControllerPose, ::GlobalNamespace::OVRPlugin::Posef rightControllerPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetMrcHeadsetControllerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcHeadsetControllerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headsetPose), ::il2cpp_utils::ExtractType(leftControllerPose), ::il2cpp_utils::ExtractType(rightControllerPose)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, headsetPose, leftControllerPose, rightControllerPose);
}
// Autogenerated method: OVRPlugin/Media.IsCastingToRemoteClient
bool GlobalNamespace::OVRPlugin::Media::IsCastingToRemoteClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::IsCastingToRemoteClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "IsCastingToRemoteClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Media/MrcActivationMode
#include "GlobalNamespace/OVRPlugin_Media_MrcActivationMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/MrcActivationMode Automatic
::GlobalNamespace::OVRPlugin::Media::MrcActivationMode GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_Automatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_Automatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::MrcActivationMode>("", "OVRPlugin/Media/MrcActivationMode", "Automatic"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/MrcActivationMode Automatic
void GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_Automatic(::GlobalNamespace::OVRPlugin::Media::MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_Automatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/MrcActivationMode", "Automatic", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/MrcActivationMode Disabled
::GlobalNamespace::OVRPlugin::Media::MrcActivationMode GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::MrcActivationMode>("", "OVRPlugin/Media/MrcActivationMode", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/MrcActivationMode Disabled
void GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_Disabled(::GlobalNamespace::OVRPlugin::Media::MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/MrcActivationMode", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/MrcActivationMode EnumSize
::GlobalNamespace::OVRPlugin::Media::MrcActivationMode GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::MrcActivationMode>("", "OVRPlugin/Media/MrcActivationMode", "EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/MrcActivationMode EnumSize
void GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_EnumSize(::GlobalNamespace::OVRPlugin::Media::MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/MrcActivationMode", "EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::Media::MrcActivationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::MrcActivationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Media/PlatformCameraMode
#include "GlobalNamespace/OVRPlugin_Media_PlatformCameraMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode Disabled
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode Disabled
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_Disabled(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode Initialized
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_Initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "Initialized"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode Initialized
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_Initialized(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_Initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "Initialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode UserControlled
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_UserControlled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_UserControlled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "UserControlled"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode UserControlled
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_UserControlled(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_UserControlled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "UserControlled", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode SmartNavigated
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_SmartNavigated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_SmartNavigated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "SmartNavigated"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode SmartNavigated
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_SmartNavigated(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_SmartNavigated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "SmartNavigated", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode StabilizedPoV
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_StabilizedPoV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_StabilizedPoV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "StabilizedPoV"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode StabilizedPoV
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_StabilizedPoV(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_StabilizedPoV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "StabilizedPoV", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode RemoteDroneControlled
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_RemoteDroneControlled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_RemoteDroneControlled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "RemoteDroneControlled"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode RemoteDroneControlled
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_RemoteDroneControlled(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_RemoteDroneControlled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "RemoteDroneControlled", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode RemoteSpatialMapped
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_RemoteSpatialMapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_RemoteSpatialMapped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "RemoteSpatialMapped"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode RemoteSpatialMapped
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_RemoteSpatialMapped(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_RemoteSpatialMapped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "RemoteSpatialMapped", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode SpectatorMode
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_SpectatorMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_SpectatorMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "SpectatorMode"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode SpectatorMode
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_SpectatorMode(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_SpectatorMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "SpectatorMode", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode MobileMRC
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_MobileMRC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_MobileMRC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "MobileMRC"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode MobileMRC
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_MobileMRC(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_MobileMRC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "MobileMRC", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode EnumSize
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode EnumSize
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_EnumSize(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Media/InputVideoBufferType
#include "GlobalNamespace/OVRPlugin_Media_InputVideoBufferType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/InputVideoBufferType Memory
::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_Memory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_Memory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType>("", "OVRPlugin/Media/InputVideoBufferType", "Memory"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/InputVideoBufferType Memory
void GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_Memory(::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_Memory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/InputVideoBufferType", "Memory", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/InputVideoBufferType TextureHandle
::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_TextureHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_TextureHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType>("", "OVRPlugin/Media/InputVideoBufferType", "TextureHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/InputVideoBufferType TextureHandle
void GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_TextureHandle(::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_TextureHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/InputVideoBufferType", "TextureHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/InputVideoBufferType EnumSize
::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType>("", "OVRPlugin/Media/InputVideoBufferType", "EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/InputVideoBufferType EnumSize
void GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_EnumSize(::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/InputVideoBufferType", "EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/GetBoneSkeleton2Delegate
#include "GlobalNamespace/OVRPlugin_GetBoneSkeleton2Delegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRPlugin/GetBoneSkeleton2Delegate.Invoke
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::GetBoneSkeleton2Delegate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetBoneSkeleton2Delegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPlugin::GetBoneSkeleton2Delegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method);
}
// Autogenerated method: OVRPlugin/GetBoneSkeleton2Delegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::OVRPlugin::GetBoneSkeleton2Delegate::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetBoneSkeleton2Delegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPlugin::GetBoneSkeleton2Delegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVRPlugin/GetBoneSkeleton2Delegate.EndInvoke
::GlobalNamespace::OVRPlugin::Bone GlobalNamespace::OVRPlugin::GetBoneSkeleton2Delegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetBoneSkeleton2Delegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRPlugin::GetBoneSkeleton2Delegate*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bone, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/PassthroughPreferenceFields
#include "GlobalNamespace/OVRPlugin_PassthroughPreferenceFields.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PassthroughPreferenceFields Flags
::GlobalNamespace::OVRPlugin::PassthroughPreferenceFields GlobalNamespace::OVRPlugin::PassthroughPreferenceFields::_get_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughPreferenceFields::_get_Flags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PassthroughPreferenceFields>("", "OVRPlugin/PassthroughPreferenceFields", "Flags"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PassthroughPreferenceFields Flags
void GlobalNamespace::OVRPlugin::PassthroughPreferenceFields::_set_Flags(::GlobalNamespace::OVRPlugin::PassthroughPreferenceFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughPreferenceFields::_set_Flags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PassthroughPreferenceFields", "Flags", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRPlugin::PassthroughPreferenceFields::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughPreferenceFields::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/PassthroughPreferenceFlags
#include "GlobalNamespace/OVRPlugin_PassthroughPreferenceFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PassthroughPreferenceFlags DefaultToActive
::GlobalNamespace::OVRPlugin::PassthroughPreferenceFlags GlobalNamespace::OVRPlugin::PassthroughPreferenceFlags::_get_DefaultToActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughPreferenceFlags::_get_DefaultToActive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PassthroughPreferenceFlags>("", "OVRPlugin/PassthroughPreferenceFlags", "DefaultToActive"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PassthroughPreferenceFlags DefaultToActive
void GlobalNamespace::OVRPlugin::PassthroughPreferenceFlags::_set_DefaultToActive(::GlobalNamespace::OVRPlugin::PassthroughPreferenceFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughPreferenceFlags::_set_DefaultToActive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PassthroughPreferenceFlags", "DefaultToActive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 value__
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::OVRPlugin::PassthroughPreferenceFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PassthroughPreferenceFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Ktx
#include "GlobalNamespace/OVRPlugin_Ktx.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRPlugin/Ktx.LoadKtxFromMemory
::System::IntPtr GlobalNamespace::OVRPlugin::Ktx::LoadKtxFromMemory(::System::IntPtr dataPtr, uint length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Ktx::LoadKtxFromMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Ktx", "LoadKtxFromMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataPtr), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dataPtr, length);
}
// Autogenerated method: OVRPlugin/Ktx.GetKtxTextureWidth
uint GlobalNamespace::OVRPlugin::Ktx::GetKtxTextureWidth(::System::IntPtr texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Ktx::GetKtxTextureWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Ktx", "GetKtxTextureWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture);
}
// Autogenerated method: OVRPlugin/Ktx.GetKtxTextureHeight
uint GlobalNamespace::OVRPlugin::Ktx::GetKtxTextureHeight(::System::IntPtr texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Ktx::GetKtxTextureHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Ktx", "GetKtxTextureHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture);
}
// Autogenerated method: OVRPlugin/Ktx.TranscodeKtxTexture
bool GlobalNamespace::OVRPlugin::Ktx::TranscodeKtxTexture(::System::IntPtr texture, uint format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Ktx::TranscodeKtxTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Ktx", "TranscodeKtxTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, format);
}
// Autogenerated method: OVRPlugin/Ktx.GetKtxTextureSize
uint GlobalNamespace::OVRPlugin::Ktx::GetKtxTextureSize(::System::IntPtr texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Ktx::GetKtxTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Ktx", "GetKtxTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture);
}
// Autogenerated method: OVRPlugin/Ktx.GetKtxTextureData
bool GlobalNamespace::OVRPlugin::Ktx::GetKtxTextureData(::System::IntPtr texture, ::System::IntPtr textureData, uint bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Ktx::GetKtxTextureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Ktx", "GetKtxTextureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(textureData), ::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, textureData, bufferSize);
}
// Autogenerated method: OVRPlugin/Ktx.DestroyKtxTexture
bool GlobalNamespace::OVRPlugin::Ktx::DestroyKtxTexture(::System::IntPtr texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Ktx::DestroyKtxTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Ktx", "DestroyKtxTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/UnityOpenXR
#include "GlobalNamespace/OVRPlugin_UnityOpenXR.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean Enabled
bool GlobalNamespace::OVRPlugin::UnityOpenXR::_get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UnityOpenXR::_get_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRPlugin/UnityOpenXR", "Enabled"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean Enabled
void GlobalNamespace::OVRPlugin::UnityOpenXR::_set_Enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UnityOpenXR::_set_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/UnityOpenXR", "Enabled", value));
}
// Autogenerated method: OVRPlugin/UnityOpenXR.SetClientVersion
void GlobalNamespace::OVRPlugin::UnityOpenXR::SetClientVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UnityOpenXR::SetClientVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/UnityOpenXR", "SetClientVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/UnityOpenXR.HookGetInstanceProcAddr
::System::IntPtr GlobalNamespace::OVRPlugin::UnityOpenXR::HookGetInstanceProcAddr(::System::IntPtr func) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UnityOpenXR::HookGetInstanceProcAddr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/UnityOpenXR", "HookGetInstanceProcAddr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(func)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, func);
}
// Autogenerated method: OVRPlugin/UnityOpenXR.OnInstanceCreate
bool GlobalNamespace::OVRPlugin::UnityOpenXR::OnInstanceCreate(uint64_t xrInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UnityOpenXR::OnInstanceCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/UnityOpenXR", "OnInstanceCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrInstance);
}
// Autogenerated method: OVRPlugin/UnityOpenXR.OnInstanceDestroy
void GlobalNamespace::OVRPlugin::UnityOpenXR::OnInstanceDestroy(uint64_t xrInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UnityOpenXR::OnInstanceDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/UnityOpenXR", "OnInstanceDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrInstance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrInstance);
}
// Autogenerated method: OVRPlugin/UnityOpenXR.OnSessionCreate
void GlobalNamespace::OVRPlugin::UnityOpenXR::OnSessionCreate(uint64_t xrSession) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UnityOpenXR::OnSessionCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/UnityOpenXR", "OnSessionCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrSession)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrSession);
}
// Autogenerated method: OVRPlugin/UnityOpenXR.OnAppSpaceChange
void GlobalNamespace::OVRPlugin::UnityOpenXR::OnAppSpaceChange(uint64_t xrSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UnityOpenXR::OnAppSpaceChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/UnityOpenXR", "OnAppSpaceChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrSpace);
}
// Autogenerated method: OVRPlugin/UnityOpenXR.OnSessionStateChange
void GlobalNamespace::OVRPlugin::UnityOpenXR::OnSessionStateChange(int oldState, int newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UnityOpenXR::OnSessionStateChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/UnityOpenXR", "OnSessionStateChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldState), ::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oldState, newState);
}
// Autogenerated method: OVRPlugin/UnityOpenXR.OnSessionBegin
void GlobalNamespace::OVRPlugin::UnityOpenXR::OnSessionBegin(uint64_t xrSession) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UnityOpenXR::OnSessionBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/UnityOpenXR", "OnSessionBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrSession)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrSession);
}
// Autogenerated method: OVRPlugin/UnityOpenXR.OnSessionEnd
void GlobalNamespace::OVRPlugin::UnityOpenXR::OnSessionEnd(uint64_t xrSession) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UnityOpenXR::OnSessionEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/UnityOpenXR", "OnSessionEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrSession)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrSession);
}
// Autogenerated method: OVRPlugin/UnityOpenXR.OnSessionExiting
void GlobalNamespace::OVRPlugin::UnityOpenXR::OnSessionExiting(uint64_t xrSession) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UnityOpenXR::OnSessionExiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/UnityOpenXR", "OnSessionExiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrSession)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrSession);
}
// Autogenerated method: OVRPlugin/UnityOpenXR.OnSessionDestroy
void GlobalNamespace::OVRPlugin::UnityOpenXR::OnSessionDestroy(uint64_t xrSession) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UnityOpenXR::OnSessionDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/UnityOpenXR", "OnSessionDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrSession)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrSession);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Qpl
#include "GlobalNamespace/OVRPlugin_Qpl.hpp"
// Including type: OVRPlugin/Qpl/ResultType
#include "GlobalNamespace/OVRPlugin_Qpl_ResultType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultInstanceKey
int GlobalNamespace::OVRPlugin::Qpl::_get_DefaultInstanceKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::_get_DefaultInstanceKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin/Qpl", "DefaultInstanceKey"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultInstanceKey
void GlobalNamespace::OVRPlugin::Qpl::_set_DefaultInstanceKey(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::_set_DefaultInstanceKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Qpl", "DefaultInstanceKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 AutoSetTimestampMs
int64_t GlobalNamespace::OVRPlugin::Qpl::_get_AutoSetTimestampMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::_get_AutoSetTimestampMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "OVRPlugin/Qpl", "AutoSetTimestampMs"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 AutoSetTimestampMs
void GlobalNamespace::OVRPlugin::Qpl::_set_AutoSetTimestampMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::_set_AutoSetTimestampMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Qpl", "AutoSetTimestampMs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 AutoSetTimeoutMs
int GlobalNamespace::OVRPlugin::Qpl::_get_AutoSetTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::_get_AutoSetTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin/Qpl", "AutoSetTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 AutoSetTimeoutMs
void GlobalNamespace::OVRPlugin::Qpl::_set_AutoSetTimeoutMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::_set_AutoSetTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Qpl", "AutoSetTimeoutMs", value));
}
// Autogenerated method: OVRPlugin/Qpl.MarkerStart
void GlobalNamespace::OVRPlugin::Qpl::MarkerStart(int markerId, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::MarkerStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Qpl", "MarkerStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markerId), ::il2cpp_utils::ExtractType(instanceKey), ::il2cpp_utils::ExtractType(timestampMs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, markerId, instanceKey, timestampMs);
}
// Autogenerated method: OVRPlugin/Qpl.MarkerEnd
void GlobalNamespace::OVRPlugin::Qpl::MarkerEnd(int markerId, ::GlobalNamespace::OVRPlugin::Qpl::ResultType resultTypeId, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::MarkerEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Qpl", "MarkerEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markerId), ::il2cpp_utils::ExtractType(resultTypeId), ::il2cpp_utils::ExtractType(instanceKey), ::il2cpp_utils::ExtractType(timestampMs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, markerId, resultTypeId, instanceKey, timestampMs);
}
// Autogenerated method: OVRPlugin/Qpl.MarkerPointCached
void GlobalNamespace::OVRPlugin::Qpl::MarkerPointCached(int markerId, int nameHandle, int instanceKey, int64_t timestampMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::MarkerPointCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Qpl", "MarkerPointCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markerId), ::il2cpp_utils::ExtractType(nameHandle), ::il2cpp_utils::ExtractType(instanceKey), ::il2cpp_utils::ExtractType(timestampMs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, markerId, nameHandle, instanceKey, timestampMs);
}
// Autogenerated method: OVRPlugin/Qpl.MarkerAnnotation
void GlobalNamespace::OVRPlugin::Qpl::MarkerAnnotation(int markerId, ::StringW annotationKey, ::StringW annotationValue, int instanceKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::MarkerAnnotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Qpl", "MarkerAnnotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markerId), ::il2cpp_utils::ExtractType(annotationKey), ::il2cpp_utils::ExtractType(annotationValue), ::il2cpp_utils::ExtractType(instanceKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, markerId, annotationKey, annotationValue, instanceKey);
}
// Autogenerated method: OVRPlugin/Qpl.CreateMarkerHandle
bool GlobalNamespace::OVRPlugin::Qpl::CreateMarkerHandle(::StringW name, ByRef<int> nameHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::CreateMarkerHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Qpl", "CreateMarkerHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, byref(nameHandle));
}
// Autogenerated method: OVRPlugin/Qpl.DestroyMarkerHandle
bool GlobalNamespace::OVRPlugin::Qpl::DestroyMarkerHandle(int nameHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::DestroyMarkerHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Qpl", "DestroyMarkerHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nameHandle);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Qpl/ResultType
#include "GlobalNamespace/OVRPlugin_Qpl_ResultType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Qpl/ResultType Success
::GlobalNamespace::OVRPlugin::Qpl::ResultType GlobalNamespace::OVRPlugin::Qpl::ResultType::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::ResultType::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Qpl::ResultType>("", "OVRPlugin/Qpl/ResultType", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Qpl/ResultType Success
void GlobalNamespace::OVRPlugin::Qpl::ResultType::_set_Success(::GlobalNamespace::OVRPlugin::Qpl::ResultType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::ResultType::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Qpl/ResultType", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Qpl/ResultType Fail
::GlobalNamespace::OVRPlugin::Qpl::ResultType GlobalNamespace::OVRPlugin::Qpl::ResultType::_get_Fail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::ResultType::_get_Fail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Qpl::ResultType>("", "OVRPlugin/Qpl/ResultType", "Fail"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Qpl/ResultType Fail
void GlobalNamespace::OVRPlugin::Qpl::ResultType::_set_Fail(::GlobalNamespace::OVRPlugin::Qpl::ResultType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::ResultType::_set_Fail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Qpl/ResultType", "Fail", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Qpl/ResultType Cancel
::GlobalNamespace::OVRPlugin::Qpl::ResultType GlobalNamespace::OVRPlugin::Qpl::ResultType::_get_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::ResultType::_get_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Qpl::ResultType>("", "OVRPlugin/Qpl/ResultType", "Cancel"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Qpl/ResultType Cancel
void GlobalNamespace::OVRPlugin::Qpl::ResultType::_set_Cancel(::GlobalNamespace::OVRPlugin::Qpl::ResultType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::ResultType::_set_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Qpl/ResultType", "Cancel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 value__
[[deprecated("Use field access instead!")]] int16_t& GlobalNamespace::OVRPlugin::Qpl::ResultType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Qpl::ResultType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_0_1_0
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Sizei
#include "GlobalNamespace/OVRPlugin_Sizei.hpp"
// Including type: OVRPlugin/Eye
#include "GlobalNamespace/OVRPlugin_Eye.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_0_1_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_0_1_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_0_1_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_0_1_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_0_1_0.ovrp_GetEyeTextureSize
::GlobalNamespace::OVRPlugin::Sizei GlobalNamespace::OVRPlugin::OVRP_0_1_0::ovrp_GetEyeTextureSize(::GlobalNamespace::OVRPlugin::Eye eyeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_0::ovrp_GetEyeTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_0", "ovrp_GetEyeTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eyeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Sizei, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eyeId);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_0_1_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_0_1_1
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_1.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Vector3f
// Already included the same include: GlobalNamespace/OVRPlugin.hpp
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_0_1_1::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_1::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_0_1_1", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_0_1_1::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_1::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_0_1_1", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_0_1_1.ovrp_SetOverlayQuad2
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_0_1_1::ovrp_SetOverlayQuad2(::GlobalNamespace::OVRPlugin::Bool onTop, ::GlobalNamespace::OVRPlugin::Bool headLocked, ::System::IntPtr texture, ::System::IntPtr device, ::GlobalNamespace::OVRPlugin::Posef pose, ::GlobalNamespace::OVRPlugin::Vector3f scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_1::ovrp_SetOverlayQuad2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_1", "ovrp_SetOverlayQuad2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onTop), ::il2cpp_utils::ExtractType(headLocked), ::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, onTop, headLocked, texture, device, pose, scale);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_1..cctor
void GlobalNamespace::OVRPlugin::OVRP_0_1_1::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_1::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_1", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_0_1_2
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_2.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_0_1_2::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_2::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_0_1_2", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_0_1_2::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_2::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_0_1_2", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_0_1_2.ovrp_GetNodePose
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_0_1_2::ovrp_GetNodePose(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_2::ovrp_GetNodePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_2", "ovrp_GetNodePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_2.ovrp_SetControllerVibration
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_0_1_2::ovrp_SetControllerVibration(uint controllerMask, float frequency, float amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_2::ovrp_SetControllerVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_2", "ovrp_SetControllerVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(amplitude)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, frequency, amplitude);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_2..cctor
void GlobalNamespace::OVRPlugin::OVRP_0_1_2::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_2::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_2", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_0_1_3
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_3.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_0_1_3::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_3::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_0_1_3", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_0_1_3::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_3::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_0_1_3", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_0_1_3.ovrp_GetNodeVelocity
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_0_1_3::ovrp_GetNodeVelocity(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_3::ovrp_GetNodeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_3", "ovrp_GetNodeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_3.ovrp_GetNodeAcceleration
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_0_1_3::ovrp_GetNodeAcceleration(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_3::ovrp_GetNodeAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_3", "ovrp_GetNodeAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_3..cctor
void GlobalNamespace::OVRPlugin::OVRP_0_1_3::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_3::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_3", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_0_5_0
#include "GlobalNamespace/OVRPlugin_OVRP_0_5_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_0_5_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_5_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_0_5_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_0_5_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_5_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_0_5_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_0_5_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_0_5_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_5_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_5_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_0_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_0_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/TrackingOrigin
#include "GlobalNamespace/OVRPlugin_TrackingOrigin.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_0_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_0_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_0_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_0_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_0_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_0_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_0_0.ovrp_GetTrackingOriginType
::GlobalNamespace::OVRPlugin::TrackingOrigin GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_GetTrackingOriginType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_GetTrackingOriginType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_0_0", "ovrp_GetTrackingOriginType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::TrackingOrigin, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_0_0.ovrp_SetTrackingOriginType
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_SetTrackingOriginType(::GlobalNamespace::OVRPlugin::TrackingOrigin originType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_SetTrackingOriginType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_0_0", "ovrp_SetTrackingOriginType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, originType);
}
// Autogenerated method: OVRPlugin/OVRP_1_0_0.ovrp_GetTrackingCalibratedOrigin
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_GetTrackingCalibratedOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_GetTrackingCalibratedOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_0_0", "ovrp_GetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_0_0.ovrp_RecenterTrackingOrigin
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_RecenterTrackingOrigin(uint flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_RecenterTrackingOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_0_0", "ovrp_RecenterTrackingOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags);
}
// Autogenerated method: OVRPlugin/OVRP_1_0_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_0_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_0_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_0_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_1_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_1_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Frustumf
#include "GlobalNamespace/OVRPlugin_Frustumf.hpp"
// Including type: OVRPlugin/ControllerState
#include "GlobalNamespace/OVRPlugin_ControllerState.hpp"
// Including type: OVRPlugin/BatteryStatus
#include "GlobalNamespace/OVRPlugin_BatteryStatus.hpp"
// Including type: OVRPlugin/PlatformUI
#include "GlobalNamespace/OVRPlugin_PlatformUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_1_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_1_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_1_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_1_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetInitialized
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0._ovrp_GetVersion
::System::IntPtr GlobalNamespace::OVRPlugin::OVRP_1_1_0::_ovrp_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::_ovrp_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "_ovrp_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetVersion
::StringW GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0._ovrp_GetNativeSDKVersion
::System::IntPtr GlobalNamespace::OVRPlugin::OVRP_1_1_0::_ovrp_GetNativeSDKVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::_ovrp_GetNativeSDKVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "_ovrp_GetNativeSDKVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetNativeSDKVersion
::StringW GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNativeSDKVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNativeSDKVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetNativeSDKVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetAudioOutId
::System::IntPtr GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAudioOutId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAudioOutId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetAudioOutId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetAudioInId
::System::IntPtr GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAudioInId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAudioInId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetAudioInId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetEyeTextureScale
float GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetEyeTextureScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetEyeTextureScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetEyeTextureScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetEyeTextureScale
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetEyeTextureScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetEyeTextureScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetEyeTextureScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetTrackingOrientationSupported
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetTrackingOrientationSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetTrackingOrientationSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetTrackingOrientationSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetTrackingOrientationEnabled
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetTrackingOrientationEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetTrackingOrientationEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetTrackingOrientationEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetTrackingOrientationEnabled
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetTrackingOrientationEnabled(::GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetTrackingOrientationEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetTrackingOrientationEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetTrackingPositionSupported
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetTrackingPositionSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetTrackingPositionSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetTrackingPositionSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetTrackingPositionEnabled
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetTrackingPositionEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetTrackingPositionEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetTrackingPositionEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetTrackingPositionEnabled
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetTrackingPositionEnabled(::GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetTrackingPositionEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetTrackingPositionEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetNodePresent
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNodePresent(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNodePresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetNodePresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetNodeOrientationTracked
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNodeOrientationTracked(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNodeOrientationTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetNodeOrientationTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetNodePositionTracked
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNodePositionTracked(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNodePositionTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetNodePositionTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetNodeFrustum
::GlobalNamespace::OVRPlugin::Frustumf GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNodeFrustum(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNodeFrustum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetNodeFrustum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Frustumf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetControllerState
::GlobalNamespace::OVRPlugin::ControllerState GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetControllerState(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetControllerState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetControllerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::ControllerState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemCpuLevel
int GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemCpuLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemCpuLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemCpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetSystemCpuLevel
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetSystemCpuLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetSystemCpuLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetSystemCpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemGpuLevel
int GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemGpuLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemGpuLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemGpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetSystemGpuLevel
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetSystemGpuLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetSystemGpuLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetSystemGpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemPowerSavingMode
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemPowerSavingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemPowerSavingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemPowerSavingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemDisplayFrequency
float GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemDisplayFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemDisplayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemDisplayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemVSyncCount
int GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemVSyncCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemVSyncCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemVSyncCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemVolume
float GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemBatteryStatus
::GlobalNamespace::OVRPlugin::BatteryStatus GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemBatteryStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemBatteryStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemBatteryStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::BatteryStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemBatteryLevel
float GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemBatteryLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemBatteryLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemBatteryLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemBatteryTemperature
float GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemBatteryTemperature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemBatteryTemperature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemBatteryTemperature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0._ovrp_GetSystemProductName
::System::IntPtr GlobalNamespace::OVRPlugin::OVRP_1_1_0::_ovrp_GetSystemProductName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::_ovrp_GetSystemProductName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "_ovrp_GetSystemProductName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemProductName
::StringW GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemProductName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemProductName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemProductName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_ShowSystemUI
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_ShowSystemUI(::GlobalNamespace::OVRPlugin::PlatformUI ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_ShowSystemUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_ShowSystemUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ui);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetAppMonoscopic
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppMonoscopic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppMonoscopic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetAppMonoscopic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetAppMonoscopic
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetAppMonoscopic(::GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetAppMonoscopic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetAppMonoscopic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetAppHasVrFocus
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppHasVrFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppHasVrFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetAppHasVrFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetAppShouldQuit
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppShouldQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppShouldQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetAppShouldQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetAppShouldRecenter
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppShouldRecenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppShouldRecenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetAppShouldRecenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0._ovrp_GetAppLatencyTimings
::System::IntPtr GlobalNamespace::OVRPlugin::OVRP_1_1_0::_ovrp_GetAppLatencyTimings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::_ovrp_GetAppLatencyTimings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "_ovrp_GetAppLatencyTimings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetAppLatencyTimings
::StringW GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppLatencyTimings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppLatencyTimings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetAppLatencyTimings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetUserPresent
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetUserPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetUserPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetUserPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetUserIPD
float GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetUserIPD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetUserIPD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetUserIPD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetUserIPD
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetUserIPD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetUserIPD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetUserIPD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetUserEyeDepth
float GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetUserEyeDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetUserEyeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetUserEyeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetUserEyeDepth
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetUserEyeDepth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetUserEyeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetUserEyeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetUserEyeHeight
float GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetUserEyeHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetUserEyeHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetUserEyeHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetUserEyeHeight
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetUserEyeHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetUserEyeHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetUserEyeHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_1_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_1_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_2_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_2_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_2_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_2_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_2_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_2_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_2_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_2_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_2_0.ovrp_SetSystemVSyncCount
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_2_0::ovrp_SetSystemVSyncCount(int vsyncCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_2_0::ovrp_SetSystemVSyncCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_2_0", "ovrp_SetSystemVSyncCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vsyncCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vsyncCount);
}
// Autogenerated method: OVRPlugin/OVRP_1_2_0.ovrpi_SetTrackingCalibratedOrigin
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_2_0::ovrpi_SetTrackingCalibratedOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_2_0::ovrpi_SetTrackingCalibratedOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_2_0", "ovrpi_SetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_2_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_2_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_2_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_2_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_3_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_3_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_3_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_3_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_3_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_3_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_3_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_3_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_3_0.ovrp_GetEyeOcclusionMeshEnabled
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_3_0::ovrp_GetEyeOcclusionMeshEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_3_0::ovrp_GetEyeOcclusionMeshEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_3_0", "ovrp_GetEyeOcclusionMeshEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_3_0.ovrp_SetEyeOcclusionMeshEnabled
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_3_0::ovrp_SetEyeOcclusionMeshEnabled(::GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_3_0::ovrp_SetEyeOcclusionMeshEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_3_0", "ovrp_SetEyeOcclusionMeshEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_3_0.ovrp_GetSystemHeadphonesPresent
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_3_0::ovrp_GetSystemHeadphonesPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_3_0::ovrp_GetSystemHeadphonesPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_3_0", "ovrp_GetSystemHeadphonesPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_3_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_3_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_3_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_3_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_5_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_5_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/SystemRegion
#include "GlobalNamespace/OVRPlugin_SystemRegion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_5_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_5_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_5_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_5_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_5_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_5_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_5_0.ovrp_GetSystemRegion
::GlobalNamespace::OVRPlugin::SystemRegion GlobalNamespace::OVRPlugin::OVRP_1_5_0::ovrp_GetSystemRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_5_0::ovrp_GetSystemRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_5_0", "ovrp_GetSystemRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SystemRegion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_5_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_5_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_5_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_5_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_6_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_6_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/HapticsDesc
#include "GlobalNamespace/OVRPlugin_HapticsDesc.hpp"
// Including type: OVRPlugin/HapticsState
#include "GlobalNamespace/OVRPlugin_HapticsState.hpp"
// Including type: OVRPlugin/HapticsBuffer
#include "GlobalNamespace/OVRPlugin_HapticsBuffer.hpp"
// Including type: OVRPlugin/Vector3f
// Already included the same include: GlobalNamespace/OVRPlugin.hpp
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_6_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_6_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_6_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_6_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_6_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_6_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_GetTrackingIPDEnabled
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetTrackingIPDEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetTrackingIPDEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_GetTrackingIPDEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_SetTrackingIPDEnabled
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_SetTrackingIPDEnabled(::GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_SetTrackingIPDEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_SetTrackingIPDEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_GetControllerHapticsDesc
::GlobalNamespace::OVRPlugin::HapticsDesc GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetControllerHapticsDesc(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetControllerHapticsDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_GetControllerHapticsDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::HapticsDesc, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_GetControllerHapticsState
::GlobalNamespace::OVRPlugin::HapticsState GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetControllerHapticsState(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetControllerHapticsState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_GetControllerHapticsState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::HapticsState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_SetControllerHaptics
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_SetControllerHaptics(uint controllerMask, ::GlobalNamespace::OVRPlugin::HapticsBuffer hapticsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_SetControllerHaptics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_SetControllerHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractType(hapticsBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, hapticsBuffer);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_SetOverlayQuad3
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_SetOverlayQuad3(uint flags, ::System::IntPtr textureLeft, ::System::IntPtr textureRight, ::System::IntPtr device, ::GlobalNamespace::OVRPlugin::Posef pose, ::GlobalNamespace::OVRPlugin::Vector3f scale, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_SetOverlayQuad3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_SetOverlayQuad3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(textureLeft), ::il2cpp_utils::ExtractType(textureRight), ::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags, textureLeft, textureRight, device, pose, scale, layerIndex);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_GetEyeRecommendedResolutionScale
float GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetEyeRecommendedResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetEyeRecommendedResolutionScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_GetEyeRecommendedResolutionScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_GetAppCpuStartToGpuEndTime
float GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetAppCpuStartToGpuEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetAppCpuStartToGpuEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_GetAppCpuStartToGpuEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_GetSystemRecommendedMSAALevel
int GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetSystemRecommendedMSAALevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetSystemRecommendedMSAALevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_GetSystemRecommendedMSAALevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_6_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_6_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_7_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_7_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_7_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_7_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_7_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_7_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_7_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_7_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_7_0.ovrp_GetAppChromaticCorrection
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_7_0::ovrp_GetAppChromaticCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_7_0::ovrp_GetAppChromaticCorrection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_7_0", "ovrp_GetAppChromaticCorrection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_7_0.ovrp_SetAppChromaticCorrection
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_7_0::ovrp_SetAppChromaticCorrection(::GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_7_0::ovrp_SetAppChromaticCorrection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_7_0", "ovrp_SetAppChromaticCorrection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_7_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_7_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_7_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_7_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_8_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_8_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/BoundaryTestResult
#include "GlobalNamespace/OVRPlugin_BoundaryTestResult.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/BoundaryType
#include "GlobalNamespace/OVRPlugin_BoundaryType.hpp"
// Including type: OVRPlugin/Vector3f
// Already included the same include: GlobalNamespace/OVRPlugin.hpp
// Including type: OVRPlugin/BoundaryGeometry
#include "GlobalNamespace/OVRPlugin_BoundaryGeometry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_8_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_8_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_8_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_8_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_8_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_8_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetBoundaryConfigured
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryConfigured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetBoundaryConfigured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_TestBoundaryNode
::GlobalNamespace::OVRPlugin::BoundaryTestResult GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_TestBoundaryNode(::GlobalNamespace::OVRPlugin::Node nodeId, ::GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_TestBoundaryNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_TestBoundaryNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::BoundaryTestResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, boundaryType);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_TestBoundaryPoint
::GlobalNamespace::OVRPlugin::BoundaryTestResult GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_TestBoundaryPoint(::GlobalNamespace::OVRPlugin::Vector3f point, ::GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_TestBoundaryPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_TestBoundaryPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::BoundaryTestResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, boundaryType);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetBoundaryGeometry
::GlobalNamespace::OVRPlugin::BoundaryGeometry GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryGeometry(::GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetBoundaryGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::BoundaryGeometry, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryType);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetBoundaryDimensions
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryDimensions(::GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetBoundaryDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryType);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetBoundaryVisible
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetBoundaryVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_SetBoundaryVisible
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_SetBoundaryVisible(::GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_SetBoundaryVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_SetBoundaryVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_Update2
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_Update2(int stateId, int frameIndex, double predictionSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_Update2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_Update2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateId), ::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractType(predictionSeconds)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stateId, frameIndex, predictionSeconds);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetNodePose2
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetNodePose2(int stateId, ::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetNodePose2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetNodePose2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateId), ::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stateId, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetNodeVelocity2
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetNodeVelocity2(int stateId, ::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetNodeVelocity2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetNodeVelocity2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateId), ::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stateId, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetNodeAcceleration2
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetNodeAcceleration2(int stateId, ::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetNodeAcceleration2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetNodeAcceleration2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateId), ::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stateId, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_8_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_8_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_9_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_9_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/SystemHeadset
#include "GlobalNamespace/OVRPlugin_SystemHeadset.hpp"
// Including type: OVRPlugin/Controller
#include "GlobalNamespace/OVRPlugin_Controller.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/BoundaryType
#include "GlobalNamespace/OVRPlugin_BoundaryType.hpp"
// Including type: OVRPlugin/AppPerfStats
#include "GlobalNamespace/OVRPlugin_AppPerfStats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_9_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_9_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_9_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_9_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_9_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_9_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_9_0.ovrp_GetSystemHeadsetType
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetSystemHeadsetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetSystemHeadsetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_9_0", "ovrp_GetSystemHeadsetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SystemHeadset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_9_0.ovrp_GetActiveController
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetActiveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_9_0", "ovrp_GetActiveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Controller, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_9_0.ovrp_GetConnectedControllers
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetConnectedControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetConnectedControllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_9_0", "ovrp_GetConnectedControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Controller, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_9_0.ovrp_GetBoundaryGeometry2
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetBoundaryGeometry2(::GlobalNamespace::OVRPlugin::BoundaryType boundaryType, ::System::IntPtr points, ByRef<int> pointsCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetBoundaryGeometry2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_9_0", "ovrp_GetBoundaryGeometry2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType), ::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(pointsCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryType, points, byref(pointsCount));
}
// Autogenerated method: OVRPlugin/OVRP_1_9_0.ovrp_GetAppPerfStats
::GlobalNamespace::OVRPlugin::AppPerfStats GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetAppPerfStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetAppPerfStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_9_0", "ovrp_GetAppPerfStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::AppPerfStats, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_9_0.ovrp_ResetAppPerfStats
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_ResetAppPerfStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_ResetAppPerfStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_9_0", "ovrp_ResetAppPerfStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_9_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_9_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_9_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_9_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_10_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_10_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_10_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_10_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_10_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_10_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_10_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_10_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_10_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_10_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_10_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_10_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_11_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_11_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/EyeTextureFormat
#include "GlobalNamespace/OVRPlugin_EyeTextureFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_11_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_11_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_11_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_11_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_11_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_11_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_11_0.ovrp_SetDesiredEyeTextureFormat
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_11_0::ovrp_SetDesiredEyeTextureFormat(::GlobalNamespace::OVRPlugin::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_11_0::ovrp_SetDesiredEyeTextureFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_11_0", "ovrp_SetDesiredEyeTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_11_0.ovrp_GetDesiredEyeTextureFormat
::GlobalNamespace::OVRPlugin::EyeTextureFormat GlobalNamespace::OVRPlugin::OVRP_1_11_0::ovrp_GetDesiredEyeTextureFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_11_0::ovrp_GetDesiredEyeTextureFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_11_0", "ovrp_GetDesiredEyeTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::EyeTextureFormat, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_11_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_11_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_11_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_11_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_12_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_12_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/PoseStatef
#include "GlobalNamespace/OVRPlugin_PoseStatef.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/ControllerState2
#include "GlobalNamespace/OVRPlugin_ControllerState2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_12_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_12_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_12_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_12_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_12_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_12_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_12_0.ovrp_GetAppFramerate
float GlobalNamespace::OVRPlugin::OVRP_1_12_0::ovrp_GetAppFramerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_12_0::ovrp_GetAppFramerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_12_0", "ovrp_GetAppFramerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_12_0.ovrp_GetNodePoseState
::GlobalNamespace::OVRPlugin::PoseStatef GlobalNamespace::OVRPlugin::OVRP_1_12_0::ovrp_GetNodePoseState(::GlobalNamespace::OVRPlugin::Step stepId, ::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_12_0::ovrp_GetNodePoseState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_12_0", "ovrp_GetNodePoseState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::PoseStatef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_12_0.ovrp_GetControllerState2
::GlobalNamespace::OVRPlugin::ControllerState2 GlobalNamespace::OVRPlugin::OVRP_1_12_0::ovrp_GetControllerState2(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_12_0::ovrp_GetControllerState2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_12_0", "ovrp_GetControllerState2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::ControllerState2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin/OVRP_1_12_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_12_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_12_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_12_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_15_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_15_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/CameraIntrinsics
#include "GlobalNamespace/OVRPlugin_CameraIntrinsics.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace/OVRPlugin_CameraExtrinsics.hpp"
// Including type: OVRPlugin/OverlayShape
#include "GlobalNamespace/OVRPlugin_OverlayShape.hpp"
// Including type: OVRPlugin/LayerLayout
#include "GlobalNamespace/OVRPlugin_LayerLayout.hpp"
// Including type: OVRPlugin/Sizei
#include "GlobalNamespace/OVRPlugin_Sizei.hpp"
// Including type: OVRPlugin/EyeTextureFormat
#include "GlobalNamespace/OVRPlugin_EyeTextureFormat.hpp"
// Including type: OVRPlugin/LayerDesc
#include "GlobalNamespace/OVRPlugin_LayerDesc.hpp"
// Including type: OVRPlugin/Eye
#include "GlobalNamespace/OVRPlugin_Eye.hpp"
// Including type: OVRPlugin/Vector3f
// Already included the same include: GlobalNamespace/OVRPlugin.hpp
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Frustumf2
#include "GlobalNamespace/OVRPlugin_Frustumf2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_15_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_15_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_15_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_15_0", "version", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OVRP_EXTERNAL_CAMERA_NAME_SIZE
int GlobalNamespace::OVRPlugin::OVRP_1_15_0::_get_OVRP_EXTERNAL_CAMERA_NAME_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::_get_OVRP_EXTERNAL_CAMERA_NAME_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin/OVRP_1_15_0", "OVRP_EXTERNAL_CAMERA_NAME_SIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OVRP_EXTERNAL_CAMERA_NAME_SIZE
void GlobalNamespace::OVRPlugin::OVRP_1_15_0::_set_OVRP_EXTERNAL_CAMERA_NAME_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::_set_OVRP_EXTERNAL_CAMERA_NAME_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_15_0", "OVRP_EXTERNAL_CAMERA_NAME_SIZE", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_InitializeMixedReality
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_InitializeMixedReality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_InitializeMixedReality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_InitializeMixedReality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_ShutdownMixedReality
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_ShutdownMixedReality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_ShutdownMixedReality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_ShutdownMixedReality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetMixedRealityInitialized
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetMixedRealityInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetMixedRealityInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetMixedRealityInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_UpdateExternalCamera
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_UpdateExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_UpdateExternalCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_UpdateExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetExternalCameraCount
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraCount(ByRef<int> cameraCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetExternalCameraCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(cameraCount));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetExternalCameraName
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraName(int cameraId, ::ArrayW<::Il2CppChar> cameraName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetExternalCameraName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractType(cameraName)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId, cameraName);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetExternalCameraIntrinsics
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraIntrinsics(int cameraId, ByRef<::GlobalNamespace::OVRPlugin::CameraIntrinsics> cameraIntrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraIntrinsics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetExternalCameraIntrinsics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::CameraIntrinsics&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId, byref(cameraIntrinsics));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetExternalCameraExtrinsics
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraExtrinsics(int cameraId, ByRef<::GlobalNamespace::OVRPlugin::CameraExtrinsics> cameraExtrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraExtrinsics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetExternalCameraExtrinsics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::CameraExtrinsics&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId, byref(cameraExtrinsics));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_CalculateLayerDesc
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_CalculateLayerDesc(::GlobalNamespace::OVRPlugin::OverlayShape shape, ::GlobalNamespace::OVRPlugin::LayerLayout layout, ByRef<::GlobalNamespace::OVRPlugin::Sizei> textureSize, int mipLevels, int sampleCount, ::GlobalNamespace::OVRPlugin::EyeTextureFormat format, int layerFlags, ByRef<::GlobalNamespace::OVRPlugin::LayerDesc> layerDesc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_CalculateLayerDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_CalculateLayerDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shape), ::il2cpp_utils::ExtractType(layout), ::il2cpp_utils::ExtractType(textureSize), ::il2cpp_utils::ExtractType(mipLevels), ::il2cpp_utils::ExtractType(sampleCount), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(layerFlags), ::il2cpp_utils::ExtractType(layerDesc)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, shape, layout, byref(textureSize), mipLevels, sampleCount, format, layerFlags, byref(layerDesc));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_EnqueueSetupLayer
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueSetupLayer(ByRef<::GlobalNamespace::OVRPlugin::LayerDesc> desc, ::System::IntPtr layerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueSetupLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_EnqueueSetupLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desc), ::il2cpp_utils::ExtractType(layerId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(desc), layerId);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_EnqueueDestroyLayer
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueDestroyLayer(::System::IntPtr layerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueDestroyLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_EnqueueDestroyLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetLayerTextureStageCount
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetLayerTextureStageCount(int layerId, ByRef<int> layerTextureStageCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetLayerTextureStageCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetLayerTextureStageCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(layerTextureStageCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, byref(layerTextureStageCount));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetLayerTexturePtr
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetLayerTexturePtr(int layerId, int stage, ::GlobalNamespace::OVRPlugin::Eye eyeId, ByRef<::System::IntPtr> textureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetLayerTexturePtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetLayerTexturePtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(stage), ::il2cpp_utils::ExtractType(eyeId), ::il2cpp_utils::ExtractType(textureHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, stage, eyeId, byref(textureHandle));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_EnqueueSubmitLayer
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueSubmitLayer(uint flags, ::System::IntPtr textureLeft, ::System::IntPtr textureRight, int layerId, int frameIndex, ByRef<::GlobalNamespace::OVRPlugin::Posef> pose, ByRef<::GlobalNamespace::OVRPlugin::Vector3f> scale, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueSubmitLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_EnqueueSubmitLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(textureLeft), ::il2cpp_utils::ExtractType(textureRight), ::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags, textureLeft, textureRight, layerId, frameIndex, byref(pose), byref(scale), layerIndex);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetNodeFrustum2
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetNodeFrustum2(::GlobalNamespace::OVRPlugin::Node nodeId, ByRef<::GlobalNamespace::OVRPlugin::Frustumf2> nodeFrustum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetNodeFrustum2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetNodeFrustum2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Frustumf2&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, byref(nodeFrustum));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetEyeTextureArrayEnabled
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetEyeTextureArrayEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetEyeTextureArrayEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetEyeTextureArrayEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_15_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_15_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_16_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_16_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/CameraDevice
#include "GlobalNamespace/OVRPlugin_CameraDevice.hpp"
// Including type: OVRPlugin/Sizei
#include "GlobalNamespace/OVRPlugin_Sizei.hpp"
// Including type: OVRPlugin/ControllerState4
#include "GlobalNamespace/OVRPlugin_ControllerState4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_16_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_16_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_16_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_16_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_16_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_16_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_UpdateCameraDevices
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_UpdateCameraDevices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_UpdateCameraDevices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_UpdateCameraDevices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_IsCameraDeviceAvailable
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_IsCameraDeviceAvailable(::GlobalNamespace::OVRPlugin::CameraDevice cameraDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_IsCameraDeviceAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_IsCameraDeviceAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraDevice);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_SetCameraDevicePreferredColorFrameSize
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_SetCameraDevicePreferredColorFrameSize(::GlobalNamespace::OVRPlugin::CameraDevice cameraDevice, ::GlobalNamespace::OVRPlugin::Sizei preferredColorFrameSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_SetCameraDevicePreferredColorFrameSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_SetCameraDevicePreferredColorFrameSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraDevice), ::il2cpp_utils::ExtractType(preferredColorFrameSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraDevice, preferredColorFrameSize);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_OpenCameraDevice
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_OpenCameraDevice(::GlobalNamespace::OVRPlugin::CameraDevice cameraDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_OpenCameraDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_OpenCameraDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraDevice);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_CloseCameraDevice
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_CloseCameraDevice(::GlobalNamespace::OVRPlugin::CameraDevice cameraDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_CloseCameraDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_CloseCameraDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraDevice);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_HasCameraDeviceOpened
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_HasCameraDeviceOpened(::GlobalNamespace::OVRPlugin::CameraDevice cameraDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_HasCameraDeviceOpened");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_HasCameraDeviceOpened", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraDevice);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_IsCameraDeviceColorFrameAvailable
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_IsCameraDeviceColorFrameAvailable(::GlobalNamespace::OVRPlugin::CameraDevice cameraDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_IsCameraDeviceColorFrameAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_IsCameraDeviceColorFrameAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraDevice);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_GetCameraDeviceColorFrameSize
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_GetCameraDeviceColorFrameSize(::GlobalNamespace::OVRPlugin::CameraDevice cameraDevice, ByRef<::GlobalNamespace::OVRPlugin::Sizei> colorFrameSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_GetCameraDeviceColorFrameSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_GetCameraDeviceColorFrameSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraDevice), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Sizei&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraDevice, byref(colorFrameSize));
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_GetCameraDeviceColorFrameBgraPixels
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_GetCameraDeviceColorFrameBgraPixels(::GlobalNamespace::OVRPlugin::CameraDevice cameraDevice, ByRef<::System::IntPtr> colorFrameBgraPixels, ByRef<int> colorFrameRowPitch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_GetCameraDeviceColorFrameBgraPixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_GetCameraDeviceColorFrameBgraPixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraDevice), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraDevice, byref(colorFrameBgraPixels), byref(colorFrameRowPitch));
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_GetControllerState4
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_GetControllerState4(uint controllerMask, ByRef<::GlobalNamespace::OVRPlugin::ControllerState4> controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_GetControllerState4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_GetControllerState4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractType(controllerState)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, byref(controllerState));
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_16_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_16_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_17_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_17_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_17_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_17_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_17_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_17_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_17_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_17_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_17_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_17_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_17_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_17_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_18_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_18_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_18_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_18_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_18_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_18_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_18_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_18_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_18_0.ovrp_SetHandNodePoseStateLatency
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_18_0::ovrp_SetHandNodePoseStateLatency(double latencyInSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_18_0::ovrp_SetHandNodePoseStateLatency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_18_0", "ovrp_SetHandNodePoseStateLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(latencyInSeconds)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, latencyInSeconds);
}
// Autogenerated method: OVRPlugin/OVRP_1_18_0.ovrp_GetHandNodePoseStateLatency
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_18_0::ovrp_GetHandNodePoseStateLatency(ByRef<double> latencyInSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_18_0::ovrp_GetHandNodePoseStateLatency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_18_0", "ovrp_GetHandNodePoseStateLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(latencyInSeconds));
}
// Autogenerated method: OVRPlugin/OVRP_1_18_0.ovrp_GetAppHasInputFocus
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_18_0::ovrp_GetAppHasInputFocus(ByRef<::GlobalNamespace::OVRPlugin::Bool> appHasInputFocus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_18_0::ovrp_GetAppHasInputFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_18_0", "ovrp_GetAppHasInputFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(appHasInputFocus));
}
// Autogenerated method: OVRPlugin/OVRP_1_18_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_18_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_18_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_18_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_19_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_19_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_19_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_19_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_19_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_19_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_19_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_19_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_19_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_19_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_19_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_19_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_21_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_21_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/FoveatedRenderingLevel
#include "GlobalNamespace/OVRPlugin_FoveatedRenderingLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_21_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_21_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_21_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_21_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_21_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_21_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetTiledMultiResSupported
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetTiledMultiResSupported(ByRef<::GlobalNamespace::OVRPlugin::Bool> foveationSupported) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetTiledMultiResSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetTiledMultiResSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(foveationSupported));
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetTiledMultiResLevel
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetTiledMultiResLevel(ByRef<::GlobalNamespace::OVRPlugin::FoveatedRenderingLevel> level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetTiledMultiResLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetTiledMultiResLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::FoveatedRenderingLevel&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(level));
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_SetTiledMultiResLevel
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_SetTiledMultiResLevel(::GlobalNamespace::OVRPlugin::FoveatedRenderingLevel level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_SetTiledMultiResLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_SetTiledMultiResLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetGPUUtilSupported
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetGPUUtilSupported(ByRef<::GlobalNamespace::OVRPlugin::Bool> gpuUtilSupported) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetGPUUtilSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetGPUUtilSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(gpuUtilSupported));
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetGPUUtilLevel
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetGPUUtilLevel(ByRef<float> gpuUtil) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetGPUUtilLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetGPUUtilLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(gpuUtil));
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetSystemDisplayFrequency2
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetSystemDisplayFrequency2(ByRef<float> systemDisplayFrequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetSystemDisplayFrequency2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetSystemDisplayFrequency2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(systemDisplayFrequency));
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetSystemDisplayAvailableFrequencies
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetSystemDisplayAvailableFrequencies(::System::IntPtr systemDisplayAvailableFrequencies, ByRef<int> numFrequencies) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetSystemDisplayAvailableFrequencies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetSystemDisplayAvailableFrequencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(systemDisplayAvailableFrequencies), ::il2cpp_utils::ExtractType(numFrequencies)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, systemDisplayAvailableFrequencies, byref(numFrequencies));
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_SetSystemDisplayFrequency
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_SetSystemDisplayFrequency(float requestedFrequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_SetSystemDisplayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_SetSystemDisplayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestedFrequency)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestedFrequency);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetAppAsymmetricFov
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetAppAsymmetricFov(ByRef<::GlobalNamespace::OVRPlugin::Bool> useAsymmetricFov) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetAppAsymmetricFov");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetAppAsymmetricFov", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(useAsymmetricFov));
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_21_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_21_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_28_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_28_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Handedness
#include "GlobalNamespace/OVRPlugin_Handedness.hpp"
// Including type: OVRPlugin/LayerDesc
#include "GlobalNamespace/OVRPlugin_LayerDesc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_28_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_28_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_28_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_28_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_28_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_28_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_28_0.ovrp_GetDominantHand
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_GetDominantHand(ByRef<::GlobalNamespace::OVRPlugin::Handedness> dominantHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_GetDominantHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_28_0", "ovrp_GetDominantHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Handedness&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(dominantHand));
}
// Autogenerated method: OVRPlugin/OVRP_1_28_0.ovrp_SendEvent
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_SendEvent(::StringW name, ::StringW param) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_SendEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_28_0", "ovrp_SendEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(param)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, param);
}
// Autogenerated method: OVRPlugin/OVRP_1_28_0.ovrp_EnqueueSetupLayer2
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_EnqueueSetupLayer2(ByRef<::GlobalNamespace::OVRPlugin::LayerDesc> desc, int compositionDepth, ::System::IntPtr layerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_EnqueueSetupLayer2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_28_0", "ovrp_EnqueueSetupLayer2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desc), ::il2cpp_utils::ExtractType(compositionDepth), ::il2cpp_utils::ExtractType(layerId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(desc), compositionDepth, layerId);
}
// Autogenerated method: OVRPlugin/OVRP_1_28_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_28_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_28_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_28_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_29_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_29_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Vector3f
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/PoseStatef
#include "GlobalNamespace/OVRPlugin_PoseStatef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_29_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_29_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_29_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_29_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_29_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_29_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_29_0.ovrp_GetLayerAndroidSurfaceObject
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetLayerAndroidSurfaceObject(int layerId, ByRef<::System::IntPtr> surfaceObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetLayerAndroidSurfaceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_29_0", "ovrp_GetLayerAndroidSurfaceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(surfaceObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, byref(surfaceObject));
}
// Autogenerated method: OVRPlugin/OVRP_1_29_0.ovrp_SetHeadPoseModifier
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_SetHeadPoseModifier(ByRef<::GlobalNamespace::OVRPlugin::Quatf> relativeRotation, ByRef<::GlobalNamespace::OVRPlugin::Vector3f> relativeTranslation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_SetHeadPoseModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_29_0", "ovrp_SetHeadPoseModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativeRotation), ::il2cpp_utils::ExtractType(relativeTranslation)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(relativeRotation), byref(relativeTranslation));
}
// Autogenerated method: OVRPlugin/OVRP_1_29_0.ovrp_GetHeadPoseModifier
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetHeadPoseModifier(ByRef<::GlobalNamespace::OVRPlugin::Quatf> relativeRotation, ByRef<::GlobalNamespace::OVRPlugin::Vector3f> relativeTranslation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetHeadPoseModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_29_0", "ovrp_GetHeadPoseModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Quatf&>(), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Vector3f&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(relativeRotation), byref(relativeTranslation));
}
// Autogenerated method: OVRPlugin/OVRP_1_29_0.ovrp_GetNodePoseStateRaw
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetNodePoseStateRaw(::GlobalNamespace::OVRPlugin::Step stepId, int frameIndex, ::GlobalNamespace::OVRPlugin::Node nodeId, ByRef<::GlobalNamespace::OVRPlugin::PoseStatef> nodePoseState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetNodePoseStateRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_29_0", "ovrp_GetNodePoseStateRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::PoseStatef&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, frameIndex, nodeId, byref(nodePoseState));
}
// Autogenerated method: OVRPlugin/OVRP_1_29_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_29_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_29_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_29_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_30_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_30_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/PerfMetrics
#include "GlobalNamespace/OVRPlugin_PerfMetrics.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_30_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_30_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_30_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_30_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_30_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_30_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_GetCurrentTrackingTransformPose
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetCurrentTrackingTransformPose(ByRef<::GlobalNamespace::OVRPlugin::Posef> trackingTransformPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetCurrentTrackingTransformPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_GetCurrentTrackingTransformPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Posef&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(trackingTransformPose));
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_GetTrackingTransformRawPose
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetTrackingTransformRawPose(ByRef<::GlobalNamespace::OVRPlugin::Posef> trackingTransformRawPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetTrackingTransformRawPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_GetTrackingTransformRawPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Posef&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(trackingTransformRawPose));
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_SendEvent2
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_SendEvent2(::StringW name, ::StringW param, ::StringW source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_SendEvent2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_SendEvent2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(param), ::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, param, source);
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_IsPerfMetricsSupported
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_IsPerfMetricsSupported(::GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics, ByRef<::GlobalNamespace::OVRPlugin::Bool> isSupported) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_IsPerfMetricsSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_IsPerfMetricsSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perfMetrics), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, perfMetrics, byref(isSupported));
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_GetPerfMetricsFloat
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetPerfMetricsFloat(::GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetPerfMetricsFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_GetPerfMetricsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perfMetrics), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, perfMetrics, byref(value));
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_GetPerfMetricsInt
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetPerfMetricsInt(::GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetPerfMetricsInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_GetPerfMetricsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perfMetrics), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, perfMetrics, byref(value));
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_30_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_30_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
