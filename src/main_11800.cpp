// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.SwitchLevelAttribute
#include "System/Diagnostics/SwitchLevelAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Diagnostics::SwitchLevelAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::SwitchLevelAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.SwitchLevelAttribute.set_SwitchLevelType
void System::Diagnostics::SwitchLevelAttribute::set_SwitchLevelType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::SwitchLevelAttribute::set_SwitchLevelType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SwitchLevelType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Trace
#include "System/Diagnostics/Trace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Trace.WriteLine
void System::Diagnostics::Trace::WriteLine(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Trace::WriteLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Trace", "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.Trace.WriteLine
void System::Diagnostics::Trace::WriteLine(::StringW message, ::StringW category) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Trace::WriteLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Trace", "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(category)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, category);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.TraceEventType
#include "System/Diagnostics/TraceEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Critical
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Critical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Critical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Critical"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Critical
void System::Diagnostics::TraceEventType::_set_Critical(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Critical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Critical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Error
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Error
void System::Diagnostics::TraceEventType::_set_Error(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Warning
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Warning
void System::Diagnostics::TraceEventType::_set_Warning(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Information
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Information() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Information");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Information"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Information
void System::Diagnostics::TraceEventType::_set_Information(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Information");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Information", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Verbose
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Verbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Verbose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Verbose"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Verbose
void System::Diagnostics::TraceEventType::_set_Verbose(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Verbose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Verbose", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Start
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Start"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Start
void System::Diagnostics::TraceEventType::_set_Start(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Stop
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Stop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Stop"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Stop
void System::Diagnostics::TraceEventType::_set_Stop(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Stop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Stop", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Suspend
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Suspend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Suspend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Suspend"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Suspend
void System::Diagnostics::TraceEventType::_set_Suspend(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Suspend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Suspend", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Resume
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Resume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Resume"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Resume
void System::Diagnostics::TraceEventType::_set_Resume(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Resume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Resume", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Transfer
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Transfer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Transfer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Transfer"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Transfer
void System::Diagnostics::TraceEventType::_set_Transfer(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Transfer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Transfer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::TraceEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.TraceFilter
#include "System/Diagnostics/TraceFilter.hpp"
// Including type: System.Diagnostics.TraceEventCache
#include "System/Diagnostics/TraceEventCache.hpp"
// Including type: System.Diagnostics.TraceEventType
#include "System/Diagnostics/TraceEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.TraceFilter.ShouldTrace
bool System::Diagnostics::TraceFilter::ShouldTrace(::System::Diagnostics::TraceEventCache* cache, ::StringW source, ::System::Diagnostics::TraceEventType eventType, int id, ::StringW formatOrMessage, ::ArrayW<::Il2CppObject*> args, ::Il2CppObject* data1, ::ArrayW<::Il2CppObject*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceFilter::ShouldTrace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceFilter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cache, source, eventType, id, formatOrMessage, args, data1, data);
}
// Autogenerated method: System.Diagnostics.TraceFilter.ShouldTrace
bool System::Diagnostics::TraceFilter::ShouldTrace(::System::Diagnostics::TraceEventCache* cache, ::StringW source, ::System::Diagnostics::TraceEventType eventType, int id, ::StringW formatOrMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceFilter::ShouldTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cache), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(formatOrMessage)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cache, source, eventType, id, formatOrMessage);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.TraceInternal
#include "System/Diagnostics/TraceInternal.hpp"
// Including type: System.Diagnostics.TraceListenerCollection
#include "System/Diagnostics/TraceListenerCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String appName
::StringW System::Diagnostics::TraceInternal::_get_appName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_appName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "TraceInternal", "appName"));
}
// Autogenerated static field setter
// Set static field: static private System.String appName
void System::Diagnostics::TraceInternal::_set_appName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_appName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "appName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Diagnostics.TraceListenerCollection listeners
::System::Diagnostics::TraceListenerCollection* System::Diagnostics::TraceInternal::_get_listeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_listeners");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceListenerCollection*>("System.Diagnostics", "TraceInternal", "listeners"));
}
// Autogenerated static field setter
// Set static field: static private System.Diagnostics.TraceListenerCollection listeners
void System::Diagnostics::TraceInternal::_set_listeners(::System::Diagnostics::TraceListenerCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_listeners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "listeners", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean autoFlush
bool System::Diagnostics::TraceInternal::_get_autoFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_autoFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "TraceInternal", "autoFlush"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean autoFlush
void System::Diagnostics::TraceInternal::_set_autoFlush(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_autoFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "autoFlush", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean useGlobalLock
bool System::Diagnostics::TraceInternal::_get_useGlobalLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_useGlobalLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "TraceInternal", "useGlobalLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean useGlobalLock
void System::Diagnostics::TraceInternal::_set_useGlobalLock(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_useGlobalLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "useGlobalLock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 indentLevel
int System::Diagnostics::TraceInternal::_get_indentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_indentLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "TraceInternal", "indentLevel"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 indentLevel
void System::Diagnostics::TraceInternal::_set_indentLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_indentLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "indentLevel", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 indentSize
int System::Diagnostics::TraceInternal::_get_indentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_indentSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "TraceInternal", "indentSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 indentSize
void System::Diagnostics::TraceInternal::_set_indentSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_indentSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "indentSize", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Object critSec
::Il2CppObject* System::Diagnostics::TraceInternal::_get_critSec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_critSec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Diagnostics", "TraceInternal", "critSec"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Object critSec
void System::Diagnostics::TraceInternal::_set_critSec(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_critSec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "critSec", value));
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_Listeners
::System::Diagnostics::TraceListenerCollection* System::Diagnostics::TraceInternal::get_Listeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::get_Listeners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_Listeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::TraceListenerCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_AutoFlush
bool System::Diagnostics::TraceInternal::get_AutoFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::get_AutoFlush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_AutoFlush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_UseGlobalLock
bool System::Diagnostics::TraceInternal::get_UseGlobalLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::get_UseGlobalLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_UseGlobalLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_IndentLevel
int System::Diagnostics::TraceInternal::get_IndentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::get_IndentLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_IndentLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_IndentSize
int System::Diagnostics::TraceInternal::get_IndentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::get_IndentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_IndentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.InitializeSettings
void System::Diagnostics::TraceInternal::InitializeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::InitializeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "InitializeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.WriteLine
void System::Diagnostics::TraceInternal::WriteLine(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::WriteLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.TraceInternal.WriteLine
void System::Diagnostics::TraceInternal::WriteLine(::StringW message, ::StringW category) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::WriteLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(category)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, category);
}
// Autogenerated method: System.Diagnostics.TraceInternal..cctor
void System::Diagnostics::TraceInternal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.TraceLevel
#include "System/Diagnostics/TraceLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceLevel Off
::System::Diagnostics::TraceLevel System::Diagnostics::TraceLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceLevel>("System.Diagnostics", "TraceLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceLevel Off
void System::Diagnostics::TraceLevel::_set_Off(::System::Diagnostics::TraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceLevel Error
::System::Diagnostics::TraceLevel System::Diagnostics::TraceLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceLevel>("System.Diagnostics", "TraceLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceLevel Error
void System::Diagnostics::TraceLevel::_set_Error(::System::Diagnostics::TraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceLevel", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceLevel Warning
::System::Diagnostics::TraceLevel System::Diagnostics::TraceLevel::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceLevel>("System.Diagnostics", "TraceLevel", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceLevel Warning
void System::Diagnostics::TraceLevel::_set_Warning(::System::Diagnostics::TraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceLevel", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceLevel Info
::System::Diagnostics::TraceLevel System::Diagnostics::TraceLevel::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceLevel>("System.Diagnostics", "TraceLevel", "Info"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceLevel Info
void System::Diagnostics::TraceLevel::_set_Info(::System::Diagnostics::TraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceLevel", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceLevel Verbose
::System::Diagnostics::TraceLevel System::Diagnostics::TraceLevel::_get_Verbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_get_Verbose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceLevel>("System.Diagnostics", "TraceLevel", "Verbose"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceLevel Verbose
void System::Diagnostics::TraceLevel::_set_Verbose(::System::Diagnostics::TraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_set_Verbose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceLevel", "Verbose", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::TraceLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.TraceListener
#include "System/Diagnostics/TraceListener.hpp"
// Including type: System.Diagnostics.TraceFilter
#include "System/Diagnostics/TraceFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 indentLevel
[[deprecated("Use field access instead!")]] int& System::Diagnostics::TraceListener::dyn_indentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_indentLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 indentSize
[[deprecated("Use field access instead!")]] int& System::Diagnostics::TraceListener::dyn_indentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_indentSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean needIndent
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::TraceListener::dyn_needIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_needIndent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "needIndent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String listenerName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::TraceListener::dyn_listenerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_listenerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listenerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.TraceFilter filter
[[deprecated("Use field access instead!")]] ::System::Diagnostics::TraceFilter*& System::Diagnostics::TraceListener::dyn_filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_filter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filter"))->offset;
  return *reinterpret_cast<::System::Diagnostics::TraceFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.TraceListener.get_IsThreadSafe
bool System::Diagnostics::TraceListener::get_IsThreadSafe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::get_IsThreadSafe");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListener*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.Dispose
void System::Diagnostics::TraceListener::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListener*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.Dispose
void System::Diagnostics::TraceListener::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListener*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.TraceListener.Flush
void System::Diagnostics::TraceListener::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListener*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.set_IndentLevel
void System::Diagnostics::TraceListener::set_IndentLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::set_IndentLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IndentLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListener.set_IndentSize
void System::Diagnostics::TraceListener::set_IndentSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::set_IndentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IndentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListener.get_Filter
::System::Diagnostics::TraceFilter* System::Diagnostics::TraceListener::get_Filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::get_Filter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Filter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::TraceFilter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.get_NeedIndent
bool System::Diagnostics::TraceListener::get_NeedIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::get_NeedIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NeedIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.set_NeedIndent
void System::Diagnostics::TraceListener::set_NeedIndent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::set_NeedIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NeedIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListener.Write
void System::Diagnostics::TraceListener::Write(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.TraceListener.WriteIndent
void System::Diagnostics::TraceListener::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::WriteIndent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListener*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.WriteLine
void System::Diagnostics::TraceListener::WriteLine(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.TraceListener.WriteLine
void System::Diagnostics::TraceListener::WriteLine(::StringW message, ::StringW category) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListener*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, category);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.TraceListenerCollection
#include "System/Diagnostics/TraceListenerCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Diagnostics.TraceListener
#include "System/Diagnostics/TraceListener.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Diagnostics::TraceListenerCollection::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.get_Count
int System::Diagnostics::TraceListenerCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListenerCollection*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.Add
int System::Diagnostics::TraceListenerCollection::Add(::System::Diagnostics::TraceListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, listener);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.Clear
void System::Diagnostics::TraceListenerCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListenerCollection*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.GetEnumerator
::System::Collections::IEnumerator* System::Diagnostics::TraceListenerCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListenerCollection*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.InitializeListener
void System::Diagnostics::TraceListenerCollection::InitializeListener(::System::Diagnostics::TraceListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::InitializeListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.RemoveAt
void System::Diagnostics::TraceListenerCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListenerCollection*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.get_Item
::Il2CppObject* System::Diagnostics::TraceListenerCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListenerCollection*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.set_Item
void System::Diagnostics::TraceListenerCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListenerCollection*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.get_IsReadOnly
bool System::Diagnostics::TraceListenerCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListenerCollection*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.get_IsFixedSize
bool System::Diagnostics::TraceListenerCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListenerCollection*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Add
int System::Diagnostics::TraceListenerCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListenerCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Contains
bool System::Diagnostics::TraceListenerCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListenerCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IndexOf
int System::Diagnostics::TraceListenerCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListenerCollection*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Insert
void System::Diagnostics::TraceListenerCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListenerCollection*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Remove
void System::Diagnostics::TraceListenerCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListenerCollection*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Diagnostics::TraceListenerCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListenerCollection*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.get_IsSynchronized
bool System::Diagnostics::TraceListenerCollection::System_Collections_ICollection_get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.ICollection.get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListenerCollection*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.CopyTo
void System::Diagnostics::TraceListenerCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListenerCollection*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.TraceSwitch
#include "System/Diagnostics/TraceSwitch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.AsyncStreamReader
#include "System/Diagnostics/AsyncStreamReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Diagnostics::AsyncStreamReader::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Diagnostics::AsyncStreamReader::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Decoder decoder
[[deprecated("Use field access instead!")]] ::System::Text::Decoder*& System::Diagnostics::AsyncStreamReader::dyn_decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_decoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decoder"))->offset;
  return *reinterpret_cast<::System::Text::Decoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] byteBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Diagnostics::AsyncStreamReader::dyn_byteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_byteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] charBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Diagnostics::AsyncStreamReader::dyn_charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_charBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean cancelOperation
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::AsyncStreamReader::dyn_cancelOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_cancelOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelOperation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent eofEvent
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& System::Diagnostics::AsyncStreamReader::dyn_eofEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_eofEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eofEvent"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object syncObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Diagnostics::AsyncStreamReader::dyn_syncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_syncObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IAsyncResult asyncReadResult
[[deprecated("Use field access instead!")]] ::System::IAsyncResult*& System::Diagnostics::AsyncStreamReader::dyn_asyncReadResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_asyncReadResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncReadResult"))->offset;
  return *reinterpret_cast<::System::IAsyncResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.AsyncStreamReader.Close
void System::Diagnostics::AsyncStreamReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::AsyncStreamReader*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.AsyncStreamReader.Dispose
void System::Diagnostics::AsyncStreamReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::AsyncStreamReader*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.AsyncStreamReader.CancelOperation
void System::Diagnostics::AsyncStreamReader::CancelOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::CancelOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Process
#include "System/Diagnostics/Process.hpp"
// Including type: System.Diagnostics.AsyncStreamReader
#include "System/Diagnostics/AsyncStreamReader.hpp"
// Including type: System.Diagnostics.Process/State
#include "System/Diagnostics/Process_State.hpp"
// Including type: System.Diagnostics.Process/ProcInfo
#include "System/Diagnostics/Process_ProcInfo.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
// Including type: System.Diagnostics.ProcessThreadCollection
#include "System/Diagnostics/ProcessThreadCollection.hpp"
// Including type: System.Diagnostics.ProcessModuleCollection
#include "System/Diagnostics/ProcessModuleCollection.hpp"
// Including type: System.Diagnostics.ProcessStartInfo
#include "System/Diagnostics/ProcessStartInfo.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.Threading.RegisteredWaitHandle
#include "System/Threading/RegisteredWaitHandle.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.ComponentModel.ISynchronizeInvoke
#include "System/ComponentModel/ISynchronizeInvoke.hpp"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
// Including type: System.IO.StreamWriter
#include "System/IO/StreamWriter.hpp"
// Including type: System.Diagnostics.ProcessInfo
#include "System/Diagnostics/ProcessInfo.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean haveProcessId
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_haveProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_haveProcessId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveProcessId"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 processId
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Process::dyn_processId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_processId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "processId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean haveProcessHandle
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_haveProcessHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_haveProcessHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveProcessHandle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Microsoft.Win32.SafeHandles.SafeProcessHandle m_processHandle
[[deprecated("Use field access instead!")]] ::Microsoft::Win32::SafeHandles::SafeProcessHandle*& System::Diagnostics::Process::dyn_m_processHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_m_processHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_processHandle"))->offset;
  return *reinterpret_cast<::Microsoft::Win32::SafeHandles::SafeProcessHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRemoteMachine
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_isRemoteMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_isRemoteMachine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRemoteMachine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String machineName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Process::dyn_machineName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_machineName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "machineName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_processAccess
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Process::dyn_m_processAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_m_processAccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_processAccess"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.ProcessThreadCollection threads
[[deprecated("Use field access instead!")]] ::System::Diagnostics::ProcessThreadCollection*& System::Diagnostics::Process::dyn_threads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_threads");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threads"))->offset;
  return *reinterpret_cast<::System::Diagnostics::ProcessThreadCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.ProcessModuleCollection modules
[[deprecated("Use field access instead!")]] ::System::Diagnostics::ProcessModuleCollection*& System::Diagnostics::Process::dyn_modules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_modules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modules"))->offset;
  return *reinterpret_cast<::System::Diagnostics::ProcessModuleCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean haveWorkingSetLimits
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_haveWorkingSetLimits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_haveWorkingSetLimits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveWorkingSetLimits"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean havePriorityClass
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_havePriorityClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_havePriorityClass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "havePriorityClass"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.ProcessStartInfo startInfo
[[deprecated("Use field access instead!")]] ::System::Diagnostics::ProcessStartInfo*& System::Diagnostics::Process::dyn_startInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_startInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startInfo"))->offset;
  return *reinterpret_cast<::System::Diagnostics::ProcessStartInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean watchForExit
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_watchForExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_watchForExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "watchForExit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean watchingForExit
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_watchingForExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_watchingForExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "watchingForExit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler onExited
[[deprecated("Use field access instead!")]] ::System::EventHandler*& System::Diagnostics::Process::dyn_onExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_onExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onExited"))->offset;
  return *reinterpret_cast<::System::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean exited
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_exited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_exited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 exitCode
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Process::dyn_exitCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_exitCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exitCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean signaled
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_signaled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_signaled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signaled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean haveExitTime
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_haveExitTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_haveExitTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveExitTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean raisedOnExited
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_raisedOnExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_raisedOnExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raisedOnExited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.RegisteredWaitHandle registeredWaitHandle
[[deprecated("Use field access instead!")]] ::System::Threading::RegisteredWaitHandle*& System::Diagnostics::Process::dyn_registeredWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_registeredWaitHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "registeredWaitHandle"))->offset;
  return *reinterpret_cast<::System::Threading::RegisteredWaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.WaitHandle waitHandle
[[deprecated("Use field access instead!")]] ::System::Threading::WaitHandle*& System::Diagnostics::Process::dyn_waitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_waitHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitHandle"))->offset;
  return *reinterpret_cast<::System::Threading::WaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ISynchronizeInvoke synchronizingObject
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ISynchronizeInvoke*& System::Diagnostics::Process::dyn_synchronizingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_synchronizingObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synchronizingObject"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ISynchronizeInvoke**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.StreamReader standardOutput
[[deprecated("Use field access instead!")]] ::System::IO::StreamReader*& System::Diagnostics::Process::dyn_standardOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_standardOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardOutput"))->offset;
  return *reinterpret_cast<::System::IO::StreamReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.StreamWriter standardInput
[[deprecated("Use field access instead!")]] ::System::IO::StreamWriter*& System::Diagnostics::Process::dyn_standardInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_standardInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardInput"))->offset;
  return *reinterpret_cast<::System::IO::StreamWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.StreamReader standardError
[[deprecated("Use field access instead!")]] ::System::IO::StreamReader*& System::Diagnostics::Process::dyn_standardError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_standardError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardError"))->offset;
  return *reinterpret_cast<::System::IO::StreamReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Process/StreamReadMode outputStreamReadMode
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Process::StreamReadMode& System::Diagnostics::Process::dyn_outputStreamReadMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_outputStreamReadMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outputStreamReadMode"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Process::StreamReadMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Process/StreamReadMode errorStreamReadMode
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Process::StreamReadMode& System::Diagnostics::Process::dyn_errorStreamReadMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_errorStreamReadMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorStreamReadMode"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Process::StreamReadMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Process/StreamReadMode inputStreamReadMode
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Process::StreamReadMode& System::Diagnostics::Process::dyn_inputStreamReadMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_inputStreamReadMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputStreamReadMode"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Process::StreamReadMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.AsyncStreamReader output
[[deprecated("Use field access instead!")]] ::System::Diagnostics::AsyncStreamReader*& System::Diagnostics::Process::dyn_output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "output"))->offset;
  return *reinterpret_cast<::System::Diagnostics::AsyncStreamReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.AsyncStreamReader error
[[deprecated("Use field access instead!")]] ::System::Diagnostics::AsyncStreamReader*& System::Diagnostics::Process::dyn_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "error"))->offset;
  return *reinterpret_cast<::System::Diagnostics::AsyncStreamReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String process_name
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Process::dyn_process_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_process_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "process_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Process.get_Associated
bool System::Diagnostics::Process::get_Associated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_Associated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Associated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_ExitCode
int System::Diagnostics::Process::get_ExitCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_ExitCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExitCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_HasExited
bool System::Diagnostics::Process::get_HasExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_HasExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_Handle
::System::IntPtr System::Diagnostics::Process::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_Id
int System::Diagnostics::Process::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_StartInfo
::System::Diagnostics::ProcessStartInfo* System::Diagnostics::Process::get_StartInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_StartInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::ProcessStartInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.set_StartInfo
void System::Diagnostics::Process::set_StartInfo(::System::Diagnostics::ProcessStartInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::set_StartInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Process.get_SynchronizingObject
::System::ComponentModel::ISynchronizeInvoke* System::Diagnostics::Process::get_SynchronizingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_SynchronizingObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SynchronizingObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISynchronizeInvoke*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_StandardOutput
::System::IO::StreamReader* System::Diagnostics::Process::get_StandardOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_StandardOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StandardOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::StreamReader*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_StandardError
::System::IO::StreamReader* System::Diagnostics::Process::get_StandardError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_StandardError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StandardError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::StreamReader*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.ReleaseProcessHandle
void System::Diagnostics::Process::ReleaseProcessHandle(::Microsoft::Win32::SafeHandles::SafeProcessHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::ReleaseProcessHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseProcessHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: System.Diagnostics.Process.CompletionCallback
void System::Diagnostics::Process::CompletionCallback(::Il2CppObject* context, bool wasSignaled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::CompletionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompletionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(wasSignaled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, wasSignaled);
}
// Autogenerated method: System.Diagnostics.Process.Close
void System::Diagnostics::Process::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.EnsureState
void System::Diagnostics::Process::EnsureState(::System::Diagnostics::Process::State state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::EnsureState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Diagnostics.Process.EnsureWatchingForExit
void System::Diagnostics::Process::EnsureWatchingForExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::EnsureWatchingForExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureWatchingForExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessById
::System::Diagnostics::Process* System::Diagnostics::Process::GetProcessById(int processId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcessById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "GetProcessById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Process*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, processId);
}
// Autogenerated method: System.Diagnostics.Process.GetCurrentProcess
::System::Diagnostics::Process* System::Diagnostics::Process::GetCurrentProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetCurrentProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "GetCurrentProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Process*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.OnExited
void System::Diagnostics::Process::OnExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::OnExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessHandle
::Microsoft::Win32::SafeHandles::SafeProcessHandle* System::Diagnostics::Process::GetProcessHandle(int access, bool throwIfExited) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcessHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProcessHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(throwIfExited)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeProcessHandle*, false>(this, ___internal__method, access, throwIfExited);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessHandle
::Microsoft::Win32::SafeHandles::SafeProcessHandle* System::Diagnostics::Process::GetProcessHandle(int access) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcessHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProcessHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(access)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeProcessHandle*, false>(this, ___internal__method, access);
}
// Autogenerated method: System.Diagnostics.Process.OpenProcessHandle
::Microsoft::Win32::SafeHandles::SafeProcessHandle* System::Diagnostics::Process::OpenProcessHandle(int access) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::OpenProcessHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenProcessHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(access)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeProcessHandle*, false>(this, ___internal__method, access);
}
// Autogenerated method: System.Diagnostics.Process.Refresh
void System::Diagnostics::Process::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.SetProcessHandle
void System::Diagnostics::Process::SetProcessHandle(::Microsoft::Win32::SafeHandles::SafeProcessHandle* processHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::SetProcessHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetProcessHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processHandle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, processHandle);
}
// Autogenerated method: System.Diagnostics.Process.SetProcessId
void System::Diagnostics::Process::SetProcessId(int processId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::SetProcessId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetProcessId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, processId);
}
// Autogenerated method: System.Diagnostics.Process.Start
bool System::Diagnostics::Process::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.Kill
void System::Diagnostics::Process::Kill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::Kill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Kill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.StopWatchingForExit
void System::Diagnostics::Process::StopWatchingForExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StopWatchingForExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopWatchingForExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.ProcessName_icall
::StringW System::Diagnostics::Process::ProcessName_icall(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::ProcessName_icall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "ProcessName_icall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Diagnostics.Process.ProcessName_internal
::StringW System::Diagnostics::Process::ProcessName_internal(::Microsoft::Win32::SafeHandles::SafeProcessHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::ProcessName_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "ProcessName_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Diagnostics.Process.get_ProcessName
::StringW System::Diagnostics::Process::get_ProcessName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_ProcessName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.GetProcess_internal
::System::IntPtr System::Diagnostics::Process::GetProcess_internal(int pid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcess_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "GetProcess_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pid)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pid);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessById
::System::Diagnostics::Process* System::Diagnostics::Process::GetProcessById(int processId, ::StringW machineName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcessById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "GetProcessById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processId), ::il2cpp_utils::ExtractType(machineName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Process*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, processId, machineName);
}
// Autogenerated method: System.Diagnostics.Process.IsLocalMachine
bool System::Diagnostics::Process::IsLocalMachine(::StringW machineName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::IsLocalMachine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "IsLocalMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(machineName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, machineName);
}
// Autogenerated method: System.Diagnostics.Process.ShellExecuteEx_internal
bool System::Diagnostics::Process::ShellExecuteEx_internal(::System::Diagnostics::ProcessStartInfo* startInfo, ByRef<::System::Diagnostics::Process::ProcInfo> procInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::ShellExecuteEx_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "ShellExecuteEx_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startInfo), ::il2cpp_utils::ExtractType(procInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startInfo, byref(procInfo));
}
// Autogenerated method: System.Diagnostics.Process.CreateProcess_internal
bool System::Diagnostics::Process::CreateProcess_internal(::System::Diagnostics::ProcessStartInfo* startInfo, ::System::IntPtr stdin, ::System::IntPtr stdout, ::System::IntPtr stderr, ByRef<::System::Diagnostics::Process::ProcInfo> procInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::CreateProcess_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "CreateProcess_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startInfo), ::il2cpp_utils::ExtractType(stdin), ::il2cpp_utils::ExtractType(stdout), ::il2cpp_utils::ExtractType(stderr), ::il2cpp_utils::ExtractType(procInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startInfo, stdin, stdout, stderr, byref(procInfo));
}
// Autogenerated method: System.Diagnostics.Process.StartWithShellExecuteEx
bool System::Diagnostics::Process::StartWithShellExecuteEx(::System::Diagnostics::ProcessStartInfo* startInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StartWithShellExecuteEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartWithShellExecuteEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, startInfo);
}
// Autogenerated method: System.Diagnostics.Process.CreatePipe
void System::Diagnostics::Process::CreatePipe(ByRef<::System::IntPtr> read, ByRef<::System::IntPtr> write, bool writeDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::CreatePipe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "CreatePipe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(writeDirection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(read), byref(write), writeDirection);
}
// Autogenerated method: System.Diagnostics.Process.get_IsWindows
bool System::Diagnostics::Process::get_IsWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_IsWindows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "get_IsWindows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.StartWithCreateProcess
bool System::Diagnostics::Process::StartWithCreateProcess(::System::Diagnostics::ProcessStartInfo* startInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StartWithCreateProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartWithCreateProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, startInfo);
}
// Autogenerated method: System.Diagnostics.Process.FillUserInfo
void System::Diagnostics::Process::FillUserInfo(::System::Diagnostics::ProcessStartInfo* startInfo, ByRef<::System::Diagnostics::Process::ProcInfo> procInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::FillUserInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "FillUserInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startInfo), ::il2cpp_utils::ExtractType(procInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startInfo, byref(procInfo));
}
// Autogenerated method: System.Diagnostics.Process.RaiseOnExited
void System::Diagnostics::Process::RaiseOnExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::RaiseOnExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseOnExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.Dispose
void System::Diagnostics::Process::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::Component*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.Process.ToString
::StringW System::Diagnostics::Process::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::Component*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Process/StreamReadMode
#include "System/Diagnostics/Process.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/StreamReadMode undefined
::System::Diagnostics::Process::StreamReadMode System::Diagnostics::Process::StreamReadMode::_get_undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_get_undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::StreamReadMode>("System.Diagnostics", "Process/StreamReadMode", "undefined"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/StreamReadMode undefined
void System::Diagnostics::Process::StreamReadMode::_set_undefined(::System::Diagnostics::Process::StreamReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_set_undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/StreamReadMode", "undefined", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/StreamReadMode syncMode
::System::Diagnostics::Process::StreamReadMode System::Diagnostics::Process::StreamReadMode::_get_syncMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_get_syncMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::StreamReadMode>("System.Diagnostics", "Process/StreamReadMode", "syncMode"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/StreamReadMode syncMode
void System::Diagnostics::Process::StreamReadMode::_set_syncMode(::System::Diagnostics::Process::StreamReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_set_syncMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/StreamReadMode", "syncMode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/StreamReadMode asyncMode
::System::Diagnostics::Process::StreamReadMode System::Diagnostics::Process::StreamReadMode::_get_asyncMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_get_asyncMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::StreamReadMode>("System.Diagnostics", "Process/StreamReadMode", "asyncMode"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/StreamReadMode asyncMode
void System::Diagnostics::Process::StreamReadMode::_set_asyncMode(::System::Diagnostics::Process::StreamReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_set_asyncMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/StreamReadMode", "asyncMode", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Process::StreamReadMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Process/State
#include "System/Diagnostics/Process_State.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/State HaveId
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_HaveId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_HaveId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "HaveId"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/State HaveId
void System::Diagnostics::Process::State::_set_HaveId(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_HaveId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "HaveId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/State IsLocal
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_IsLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_IsLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "IsLocal"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/State IsLocal
void System::Diagnostics::Process::State::_set_IsLocal(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_IsLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "IsLocal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/State IsNt
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_IsNt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_IsNt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "IsNt"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/State IsNt
void System::Diagnostics::Process::State::_set_IsNt(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_IsNt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "IsNt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/State HaveProcessInfo
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_HaveProcessInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_HaveProcessInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "HaveProcessInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/State HaveProcessInfo
void System::Diagnostics::Process::State::_set_HaveProcessInfo(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_HaveProcessInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "HaveProcessInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/State Exited
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_Exited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_Exited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "Exited"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/State Exited
void System::Diagnostics::Process::State::_set_Exited(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_Exited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "Exited", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/State Associated
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_Associated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_Associated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "Associated"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/State Associated
void System::Diagnostics::Process::State::_set_Associated(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_Associated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "Associated", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/State IsWin2k
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_IsWin2k() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_IsWin2k");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "IsWin2k"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/State IsWin2k
void System::Diagnostics::Process::State::_set_IsWin2k(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_IsWin2k");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "IsWin2k", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/State HaveNtProcessInfo
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_HaveNtProcessInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_HaveNtProcessInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "HaveNtProcessInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/State HaveNtProcessInfo
void System::Diagnostics::Process::State::_set_HaveNtProcessInfo(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_HaveNtProcessInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "HaveNtProcessInfo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Process::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ProcessStartInfo
#include "System/Diagnostics/ProcessStartInfo.hpp"
// Including type: System.Security.SecureString
#include "System/Security/SecureString.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
// Including type: System.Collections.Specialized.StringDictionary
#include "System/Collections/Specialized/StringDictionary.hpp"
// Including type: System.Collections.ObjectModel.Collection`1
#include "System/Collections/ObjectModel/Collection_1.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Diagnostics.Process
#include "System/Diagnostics/Process.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String[] empty
::ArrayW<::StringW> System::Diagnostics::ProcessStartInfo::_get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::_get_empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Diagnostics", "ProcessStartInfo", "empty"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] empty
void System::Diagnostics::ProcessStartInfo::_set_empty(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::_set_empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "ProcessStartInfo", "empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String fileName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String arguments
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arguments"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String directory
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_directory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "directory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String verb
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_verb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_verb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verb"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.ProcessWindowStyle windowStyle
[[deprecated("Use field access instead!")]] ::System::Diagnostics::ProcessWindowStyle& System::Diagnostics::ProcessStartInfo::dyn_windowStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_windowStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowStyle"))->offset;
  return *reinterpret_cast<::System::Diagnostics::ProcessWindowStyle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean errorDialog
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_errorDialog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_errorDialog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorDialog"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr errorDialogParentHandle
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Diagnostics::ProcessStartInfo::dyn_errorDialogParentHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_errorDialogParentHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorDialogParentHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useShellExecute
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_useShellExecute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_useShellExecute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useShellExecute"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String userName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String domain
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_domain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "domain"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.SecureString password
[[deprecated("Use field access instead!")]] ::System::Security::SecureString*& System::Diagnostics::ProcessStartInfo::dyn_password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "password"))->offset;
  return *reinterpret_cast<::System::Security::SecureString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String passwordInClearText
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_passwordInClearText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_passwordInClearText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passwordInClearText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean loadUserProfile
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_loadUserProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_loadUserProfile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadUserProfile"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean redirectStandardInput
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_redirectStandardInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_redirectStandardInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redirectStandardInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean redirectStandardOutput
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_redirectStandardOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_redirectStandardOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redirectStandardOutput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean redirectStandardError
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_redirectStandardError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_redirectStandardError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redirectStandardError"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding standardOutputEncoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Diagnostics::ProcessStartInfo::dyn_standardOutputEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_standardOutputEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardOutputEncoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding standardErrorEncoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Diagnostics::ProcessStartInfo::dyn_standardErrorEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_standardErrorEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardErrorEncoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean createNoWindow
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_createNoWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_createNoWindow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createNoWindow"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.WeakReference weakParentProcess
[[deprecated("Use field access instead!")]] ::System::WeakReference*& System::Diagnostics::ProcessStartInfo::dyn_weakParentProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_weakParentProcess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weakParentProcess"))->offset;
  return *reinterpret_cast<::System::WeakReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Specialized.StringDictionary environmentVariables
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::StringDictionary*& System::Diagnostics::ProcessStartInfo::dyn_environmentVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_environmentVariables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentVariables"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::StringDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ObjectModel.Collection`1<System.String> _argumentList
[[deprecated("Use field access instead!")]] ::System::Collections::ObjectModel::Collection_1<::StringW>*& System::Diagnostics::ProcessStartInfo::dyn__argumentList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn__argumentList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_argumentList"))->offset;
  return *reinterpret_cast<::System::Collections::ObjectModel::Collection_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IDictionary`2<System.String,System.String> environment
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*& System::Diagnostics::ProcessStartInfo::dyn_environment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_environment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environment"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding <StandardInputEncoding>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Diagnostics::ProcessStartInfo::dyn_$StandardInputEncoding$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_$StandardInputEncoding$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StandardInputEncoding>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_ArgumentList
::System::Collections::ObjectModel::Collection_1<::StringW>* System::Diagnostics::ProcessStartInfo::get_ArgumentList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_ArgumentList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::Collection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_Arguments
::StringW System::Diagnostics::ProcessStartInfo::get_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.set_Arguments
void System::Diagnostics::ProcessStartInfo::set_Arguments(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::set_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_EnvironmentVariables
::System::Collections::Specialized::StringDictionary* System::Diagnostics::ProcessStartInfo::get_EnvironmentVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_EnvironmentVariables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnvironmentVariables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Specialized::StringDictionary*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_RedirectStandardInput
bool System::Diagnostics::ProcessStartInfo::get_RedirectStandardInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_RedirectStandardInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RedirectStandardInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.set_RedirectStandardInput
void System::Diagnostics::ProcessStartInfo::set_RedirectStandardInput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::set_RedirectStandardInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RedirectStandardInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_RedirectStandardOutput
bool System::Diagnostics::ProcessStartInfo::get_RedirectStandardOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_RedirectStandardOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RedirectStandardOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.set_RedirectStandardOutput
void System::Diagnostics::ProcessStartInfo::set_RedirectStandardOutput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::set_RedirectStandardOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RedirectStandardOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_RedirectStandardError
bool System::Diagnostics::ProcessStartInfo::get_RedirectStandardError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_RedirectStandardError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RedirectStandardError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.set_RedirectStandardError
void System::Diagnostics::ProcessStartInfo::set_RedirectStandardError(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::set_RedirectStandardError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RedirectStandardError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_StandardErrorEncoding
::System::Text::Encoding* System::Diagnostics::ProcessStartInfo::get_StandardErrorEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_StandardErrorEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StandardErrorEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_StandardOutputEncoding
::System::Text::Encoding* System::Diagnostics::ProcessStartInfo::get_StandardOutputEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_StandardOutputEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StandardOutputEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_UseShellExecute
bool System::Diagnostics::ProcessStartInfo::get_UseShellExecute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_UseShellExecute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseShellExecute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.set_UseShellExecute
void System::Diagnostics::ProcessStartInfo::set_UseShellExecute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::set_UseShellExecute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseShellExecute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_UserName
::StringW System::Diagnostics::ProcessStartInfo::get_UserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_UserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_Password
::System::Security::SecureString* System::Diagnostics::ProcessStartInfo::get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecureString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_Domain
::StringW System::Diagnostics::ProcessStartInfo::get_Domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_LoadUserProfile
bool System::Diagnostics::ProcessStartInfo::get_LoadUserProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_LoadUserProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoadUserProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_FileName
::StringW System::Diagnostics::ProcessStartInfo::get_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_FileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.set_FileName
void System::Diagnostics::ProcessStartInfo::set_FileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::set_FileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_WorkingDirectory
::StringW System::Diagnostics::ProcessStartInfo::get_WorkingDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_WorkingDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WorkingDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.set_WindowStyle
void System::Diagnostics::ProcessStartInfo::set_WindowStyle(::System::Diagnostics::ProcessWindowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::set_WindowStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WindowStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_HaveEnvVars
bool System::Diagnostics::ProcessStartInfo::get_HaveEnvVars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_HaveEnvVars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HaveEnvVars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_StandardInputEncoding
::System::Text::Encoding* System::Diagnostics::ProcessStartInfo::get_StandardInputEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_StandardInputEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StandardInputEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo..cctor
void System::Diagnostics::ProcessStartInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "ProcessStartInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ProcessWaitHandle
#include "System/Diagnostics/ProcessWaitHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DefaultTraceListener
#include "System/Diagnostics/DefaultTraceListener.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean OnWin32
bool System::Diagnostics::DefaultTraceListener::_get_OnWin32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_get_OnWin32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "DefaultTraceListener", "OnWin32"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean OnWin32
void System::Diagnostics::DefaultTraceListener::_set_OnWin32(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_set_OnWin32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DefaultTraceListener", "OnWin32", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String MonoTracePrefix
::StringW System::Diagnostics::DefaultTraceListener::_get_MonoTracePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_get_MonoTracePrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "DefaultTraceListener", "MonoTracePrefix"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String MonoTracePrefix
void System::Diagnostics::DefaultTraceListener::_set_MonoTracePrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_set_MonoTracePrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DefaultTraceListener", "MonoTracePrefix", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String MonoTraceFile
::StringW System::Diagnostics::DefaultTraceListener::_get_MonoTraceFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_get_MonoTraceFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "DefaultTraceListener", "MonoTraceFile"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String MonoTraceFile
void System::Diagnostics::DefaultTraceListener::_set_MonoTraceFile(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_set_MonoTraceFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DefaultTraceListener", "MonoTraceFile", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String logFileName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::DefaultTraceListener::dyn_logFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::dyn_logFileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logFileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener..cctor
void System::Diagnostics::DefaultTraceListener::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "DefaultTraceListener", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.GetPrefix
::StringW System::Diagnostics::DefaultTraceListener::GetPrefix(::StringW var, ::StringW target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::GetPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "DefaultTraceListener", "GetPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(var), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, var, target);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.get_LogFileName
::StringW System::Diagnostics::DefaultTraceListener::get_LogFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::get_LogFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteWindowsDebugString
void System::Diagnostics::DefaultTraceListener::WriteWindowsDebugString(::Il2CppChar* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteWindowsDebugString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "DefaultTraceListener", "WriteWindowsDebugString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteDebugString
void System::Diagnostics::DefaultTraceListener::WriteDebugString(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteDebugString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDebugString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteMonoTrace
void System::Diagnostics::DefaultTraceListener::WriteMonoTrace(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteMonoTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMonoTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WritePrefix
void System::Diagnostics::DefaultTraceListener::WritePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WritePrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteImpl
void System::Diagnostics::DefaultTraceListener::WriteImpl(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteLogFile
void System::Diagnostics::DefaultTraceListener::WriteLogFile(::StringW message, ::StringW logFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteLogFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLogFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(logFile)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, logFile);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.Write
void System::Diagnostics::DefaultTraceListener::Write(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListener*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteLine
void System::Diagnostics::DefaultTraceListener::WriteLine(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::TraceListener*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.FileVersionInfo
#include "System/Diagnostics/FileVersionInfo.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String comments
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::FileVersionInfo::dyn_comments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_comments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comments"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String companyname
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::FileVersionInfo::dyn_companyname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_companyname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "companyname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String filedescription
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::FileVersionInfo::dyn_filedescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_filedescription");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filedescription"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String filename
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::FileVersionInfo::dyn_filename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_filename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String fileversion
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::FileVersionInfo::dyn_fileversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_fileversion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileversion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String internalname
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::FileVersionInfo::dyn_internalname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_internalname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String language
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::FileVersionInfo::dyn_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String legalcopyright
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::FileVersionInfo::dyn_legalcopyright() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_legalcopyright");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "legalcopyright"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String legaltrademarks
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::FileVersionInfo::dyn_legaltrademarks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_legaltrademarks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "legaltrademarks"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String originalfilename
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::FileVersionInfo::dyn_originalfilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_originalfilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalfilename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String privatebuild
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::FileVersionInfo::dyn_privatebuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_privatebuild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "privatebuild"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String productname
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::FileVersionInfo::dyn_productname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_productname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "productname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String productversion
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::FileVersionInfo::dyn_productversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_productversion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "productversion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String specialbuild
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::FileVersionInfo::dyn_specialbuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_specialbuild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "specialbuild"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isdebug
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::FileVersionInfo::dyn_isdebug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_isdebug");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isdebug"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ispatched
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::FileVersionInfo::dyn_ispatched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_ispatched");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ispatched"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isprerelease
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::FileVersionInfo::dyn_isprerelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_isprerelease");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isprerelease"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isprivatebuild
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::FileVersionInfo::dyn_isprivatebuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_isprivatebuild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isprivatebuild"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isspecialbuild
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::FileVersionInfo::dyn_isspecialbuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_isspecialbuild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isspecialbuild"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 filemajorpart
[[deprecated("Use field access instead!")]] int& System::Diagnostics::FileVersionInfo::dyn_filemajorpart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_filemajorpart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filemajorpart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 fileminorpart
[[deprecated("Use field access instead!")]] int& System::Diagnostics::FileVersionInfo::dyn_fileminorpart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_fileminorpart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileminorpart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 filebuildpart
[[deprecated("Use field access instead!")]] int& System::Diagnostics::FileVersionInfo::dyn_filebuildpart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_filebuildpart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filebuildpart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 fileprivatepart
[[deprecated("Use field access instead!")]] int& System::Diagnostics::FileVersionInfo::dyn_fileprivatepart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_fileprivatepart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileprivatepart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 productmajorpart
[[deprecated("Use field access instead!")]] int& System::Diagnostics::FileVersionInfo::dyn_productmajorpart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_productmajorpart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "productmajorpart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 productminorpart
[[deprecated("Use field access instead!")]] int& System::Diagnostics::FileVersionInfo::dyn_productminorpart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_productminorpart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "productminorpart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 productbuildpart
[[deprecated("Use field access instead!")]] int& System::Diagnostics::FileVersionInfo::dyn_productbuildpart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_productbuildpart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "productbuildpart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 productprivatepart
[[deprecated("Use field access instead!")]] int& System::Diagnostics::FileVersionInfo::dyn_productprivatepart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::dyn_productprivatepart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "productprivatepart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.FileVersionInfo.get_FileName
::StringW System::Diagnostics::FileVersionInfo::get_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::get_FileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.FileVersionInfo.GetVersionInfo_icall
void System::Diagnostics::FileVersionInfo::GetVersionInfo_icall(::Il2CppChar* fileName, int fileName_length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::GetVersionInfo_icall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVersionInfo_icall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fileName), ::il2cpp_utils::ExtractType(fileName_length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fileName, fileName_length);
}
// Autogenerated method: System.Diagnostics.FileVersionInfo.GetVersionInfo_internal
void System::Diagnostics::FileVersionInfo::GetVersionInfo_internal(::StringW fileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::GetVersionInfo_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVersionInfo_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fileName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fileName);
}
// Autogenerated method: System.Diagnostics.FileVersionInfo.GetVersionInfo
::System::Diagnostics::FileVersionInfo* System::Diagnostics::FileVersionInfo::GetVersionInfo(::StringW fileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::GetVersionInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "FileVersionInfo", "GetVersionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fileName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::FileVersionInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fileName);
}
// Autogenerated method: System.Diagnostics.FileVersionInfo.AppendFormat
void System::Diagnostics::FileVersionInfo::AppendFormat(::System::Text::StringBuilder* sb, ::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::AppendFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "FileVersionInfo", "AppendFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, format, args);
}
// Autogenerated method: System.Diagnostics.FileVersionInfo.ToString
::StringW System::Diagnostics::FileVersionInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::FileVersionInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.MonitoringDescriptionAttribute
#include "System/Diagnostics/MonitoringDescriptionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.MonitoringDescriptionAttribute.get_Description
::StringW System::Diagnostics::MonitoringDescriptionAttribute::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::MonitoringDescriptionAttribute::get_Description");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::DescriptionAttribute*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ProcessWindowStyle
#include "System/Diagnostics/ProcessWindowStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.ProcessWindowStyle Hidden
::System::Diagnostics::ProcessWindowStyle System::Diagnostics::ProcessWindowStyle::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::ProcessWindowStyle>("System.Diagnostics", "ProcessWindowStyle", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.ProcessWindowStyle Hidden
void System::Diagnostics::ProcessWindowStyle::_set_Hidden(::System::Diagnostics::ProcessWindowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "ProcessWindowStyle", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.ProcessWindowStyle Maximized
::System::Diagnostics::ProcessWindowStyle System::Diagnostics::ProcessWindowStyle::_get_Maximized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_get_Maximized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::ProcessWindowStyle>("System.Diagnostics", "ProcessWindowStyle", "Maximized"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.ProcessWindowStyle Maximized
void System::Diagnostics::ProcessWindowStyle::_set_Maximized(::System::Diagnostics::ProcessWindowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_set_Maximized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "ProcessWindowStyle", "Maximized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.ProcessWindowStyle Minimized
::System::Diagnostics::ProcessWindowStyle System::Diagnostics::ProcessWindowStyle::_get_Minimized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_get_Minimized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::ProcessWindowStyle>("System.Diagnostics", "ProcessWindowStyle", "Minimized"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.ProcessWindowStyle Minimized
void System::Diagnostics::ProcessWindowStyle::_set_Minimized(::System::Diagnostics::ProcessWindowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_set_Minimized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "ProcessWindowStyle", "Minimized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.ProcessWindowStyle Normal
::System::Diagnostics::ProcessWindowStyle System::Diagnostics::ProcessWindowStyle::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::ProcessWindowStyle>("System.Diagnostics", "ProcessWindowStyle", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.ProcessWindowStyle Normal
void System::Diagnostics::ProcessWindowStyle::_set_Normal(::System::Diagnostics::ProcessWindowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "ProcessWindowStyle", "Normal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::ProcessWindowStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int64 Frequency
int64_t System::Diagnostics::Stopwatch::_get_Frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::_get_Frequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Diagnostics", "Stopwatch", "Frequency"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int64 Frequency
void System::Diagnostics::Stopwatch::_set_Frequency(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::_set_Frequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Stopwatch", "Frequency", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean IsHighResolution
bool System::Diagnostics::Stopwatch::_get_IsHighResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::_get_IsHighResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "Stopwatch", "IsHighResolution"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean IsHighResolution
void System::Diagnostics::Stopwatch::_set_IsHighResolution(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::_set_IsHighResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Stopwatch", "IsHighResolution", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 elapsed
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::Stopwatch::dyn_elapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::dyn_elapsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elapsed"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 started
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::Stopwatch::dyn_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::dyn_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "started"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_running
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Stopwatch::dyn_is_running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::dyn_is_running");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_running"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Stopwatch.GetTimestamp
int64_t System::Diagnostics::Stopwatch::GetTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Stopwatch", "GetTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.StartNew
::System::Diagnostics::Stopwatch* System::Diagnostics::Stopwatch::StartNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::StartNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Stopwatch", "StartNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Stopwatch*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_Elapsed
::System::TimeSpan System::Diagnostics::Stopwatch::get_Elapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::get_Elapsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Elapsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_ElapsedMilliseconds
int64_t System::Diagnostics::Stopwatch::get_ElapsedMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::get_ElapsedMilliseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElapsedMilliseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_ElapsedTicks
int64_t System::Diagnostics::Stopwatch::get_ElapsedTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::get_ElapsedTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElapsedTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_IsRunning
bool System::Diagnostics::Stopwatch::get_IsRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::get_IsRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.Reset
void System::Diagnostics::Stopwatch::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.Start
void System::Diagnostics::Stopwatch::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.Stop
void System::Diagnostics::Stopwatch::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.Restart
void System::Diagnostics::Stopwatch::Restart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::Restart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Restart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch..cctor
void System::Diagnostics::Stopwatch::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Stopwatch", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute
#include "System/Diagnostics/CodeAnalysis/ExcludeFromCodeCoverageAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Authentication.AuthenticationException
#include "System/Security/Authentication/AuthenticationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.SslProtocols None
::System::Security::Authentication::SslProtocols System::Security::Authentication::SslProtocols::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::SslProtocols>("System.Security.Authentication", "SslProtocols", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.SslProtocols None
void System::Security::Authentication::SslProtocols::_set_None(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication", "SslProtocols", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.SslProtocols Ssl2
::System::Security::Authentication::SslProtocols System::Security::Authentication::SslProtocols::_get_Ssl2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_get_Ssl2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::SslProtocols>("System.Security.Authentication", "SslProtocols", "Ssl2"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.SslProtocols Ssl2
void System::Security::Authentication::SslProtocols::_set_Ssl2(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_set_Ssl2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication", "SslProtocols", "Ssl2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.SslProtocols Ssl3
::System::Security::Authentication::SslProtocols System::Security::Authentication::SslProtocols::_get_Ssl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_get_Ssl3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::SslProtocols>("System.Security.Authentication", "SslProtocols", "Ssl3"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.SslProtocols Ssl3
void System::Security::Authentication::SslProtocols::_set_Ssl3(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_set_Ssl3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication", "SslProtocols", "Ssl3", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.SslProtocols Tls
::System::Security::Authentication::SslProtocols System::Security::Authentication::SslProtocols::_get_Tls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_get_Tls");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::SslProtocols>("System.Security.Authentication", "SslProtocols", "Tls"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.SslProtocols Tls
void System::Security::Authentication::SslProtocols::_set_Tls(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_set_Tls");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication", "SslProtocols", "Tls", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.SslProtocols Tls11
::System::Security::Authentication::SslProtocols System::Security::Authentication::SslProtocols::_get_Tls11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_get_Tls11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::SslProtocols>("System.Security.Authentication", "SslProtocols", "Tls11"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.SslProtocols Tls11
void System::Security::Authentication::SslProtocols::_set_Tls11(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_set_Tls11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication", "SslProtocols", "Tls11", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.SslProtocols Tls12
::System::Security::Authentication::SslProtocols System::Security::Authentication::SslProtocols::_get_Tls12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_get_Tls12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::SslProtocols>("System.Security.Authentication", "SslProtocols", "Tls12"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.SslProtocols Tls12
void System::Security::Authentication::SslProtocols::_set_Tls12(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_set_Tls12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication", "SslProtocols", "Tls12", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.SslProtocols Tls13
::System::Security::Authentication::SslProtocols System::Security::Authentication::SslProtocols::_get_Tls13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_get_Tls13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::SslProtocols>("System.Security.Authentication", "SslProtocols", "Tls13"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.SslProtocols Tls13
void System::Security::Authentication::SslProtocols::_set_Tls13(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_set_Tls13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication", "SslProtocols", "Tls13", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.SslProtocols Default
::System::Security::Authentication::SslProtocols System::Security::Authentication::SslProtocols::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::SslProtocols>("System.Security.Authentication", "SslProtocols", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.SslProtocols Default
void System::Security::Authentication::SslProtocols::_set_Default(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication", "SslProtocols", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Authentication::SslProtocols::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Authentication.ExtendedProtection.ServiceNameCollection
#include "System/Security/Authentication/ExtendedProtection/ServiceNameCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Authentication.ExtendedProtection.ServiceNameCollection.AddIfNew
void System::Security::Authentication::ExtendedProtection::ServiceNameCollection::AddIfNew(::System::Collections::ArrayList* newServiceNames, ::StringW serviceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ServiceNameCollection::AddIfNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Authentication.ExtendedProtection", "ServiceNameCollection", "AddIfNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newServiceNames), ::il2cpp_utils::ExtractType(serviceName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newServiceNames, serviceName);
}
// Autogenerated method: System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Contains
bool System::Security::Authentication::ExtendedProtection::ServiceNameCollection::Contains(::StringW searchServiceName, ::System::Collections::ICollection* serviceNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ServiceNameCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Authentication.ExtendedProtection", "ServiceNameCollection", "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchServiceName), ::il2cpp_utils::ExtractType(serviceNames)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, searchServiceName, serviceNames);
}
// Autogenerated method: System.Security.Authentication.ExtendedProtection.ServiceNameCollection.NormalizeServiceName
::StringW System::Security::Authentication::ExtendedProtection::ServiceNameCollection::NormalizeServiceName(::StringW inputServiceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ServiceNameCollection::NormalizeServiceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Authentication.ExtendedProtection", "ServiceNameCollection", "NormalizeServiceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputServiceName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inputServiceName);
}
// Autogenerated method: System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Match
bool System::Security::Authentication::ExtendedProtection::ServiceNameCollection::Match(::StringW serviceName1, ::StringW serviceName2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ServiceNameCollection::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Authentication.ExtendedProtection", "ServiceNameCollection", "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serviceName1), ::il2cpp_utils::ExtractType(serviceName2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, serviceName1, serviceName2);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Authentication.ExtendedProtection.ChannelBinding
#include "System/Security/Authentication/ExtendedProtection/ChannelBinding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Authentication.ExtendedProtection.ChannelBinding.get_Size
int System::Security::Authentication::ExtendedProtection::ChannelBinding::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ChannelBinding::get_Size");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Authentication::ExtendedProtection::ChannelBinding*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Authentication.ExtendedProtection.ChannelBindingKind
#include "System/Security/Authentication/ExtendedProtection/ChannelBindingKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.ExtendedProtection.ChannelBindingKind Unknown
::System::Security::Authentication::ExtendedProtection::ChannelBindingKind System::Security::Authentication::ExtendedProtection::ChannelBindingKind::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ChannelBindingKind::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::ExtendedProtection::ChannelBindingKind>("System.Security.Authentication.ExtendedProtection", "ChannelBindingKind", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.ExtendedProtection.ChannelBindingKind Unknown
void System::Security::Authentication::ExtendedProtection::ChannelBindingKind::_set_Unknown(::System::Security::Authentication::ExtendedProtection::ChannelBindingKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ChannelBindingKind::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication.ExtendedProtection", "ChannelBindingKind", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.ExtendedProtection.ChannelBindingKind Unique
::System::Security::Authentication::ExtendedProtection::ChannelBindingKind System::Security::Authentication::ExtendedProtection::ChannelBindingKind::_get_Unique() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ChannelBindingKind::_get_Unique");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::ExtendedProtection::ChannelBindingKind>("System.Security.Authentication.ExtendedProtection", "ChannelBindingKind", "Unique"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.ExtendedProtection.ChannelBindingKind Unique
void System::Security::Authentication::ExtendedProtection::ChannelBindingKind::_set_Unique(::System::Security::Authentication::ExtendedProtection::ChannelBindingKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ChannelBindingKind::_set_Unique");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication.ExtendedProtection", "ChannelBindingKind", "Unique", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.ExtendedProtection.ChannelBindingKind Endpoint
::System::Security::Authentication::ExtendedProtection::ChannelBindingKind System::Security::Authentication::ExtendedProtection::ChannelBindingKind::_get_Endpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ChannelBindingKind::_get_Endpoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::ExtendedProtection::ChannelBindingKind>("System.Security.Authentication.ExtendedProtection", "ChannelBindingKind", "Endpoint"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.ExtendedProtection.ChannelBindingKind Endpoint
void System::Security::Authentication::ExtendedProtection::ChannelBindingKind::_set_Endpoint(::System::Security::Authentication::ExtendedProtection::ChannelBindingKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ChannelBindingKind::_set_Endpoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication.ExtendedProtection", "ChannelBindingKind", "Endpoint", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Authentication::ExtendedProtection::ChannelBindingKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ChannelBindingKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
#include "System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Security.Authentication.ExtendedProtection.ChannelBinding
#include "System/Security/Authentication/ExtendedProtection/ChannelBinding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.get_CustomChannelBinding
::System::Security::Authentication::ExtendedProtection::ChannelBinding* System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy::get_CustomChannelBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy::get_CustomChannelBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomChannelBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Authentication::ExtendedProtection::ChannelBinding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.get_PolicyEnforcement
::System::Security::Authentication::ExtendedProtection::PolicyEnforcement System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy::get_PolicyEnforcement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy::get_PolicyEnforcement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PolicyEnforcement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Authentication::ExtendedProtection::PolicyEnforcement, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString
::StringW System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter
#include "System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicyTypeConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter.CanConvertTo
bool System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicyTypeConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicyTypeConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter.ConvertTo
::Il2CppObject* System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicyTypeConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicyTypeConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Authentication.ExtendedProtection.PolicyEnforcement
#include "System/Security/Authentication/ExtendedProtection/PolicyEnforcement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.ExtendedProtection.PolicyEnforcement Never
::System::Security::Authentication::ExtendedProtection::PolicyEnforcement System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_get_Never() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_get_Never");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::ExtendedProtection::PolicyEnforcement>("System.Security.Authentication.ExtendedProtection", "PolicyEnforcement", "Never"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.ExtendedProtection.PolicyEnforcement Never
void System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_set_Never(::System::Security::Authentication::ExtendedProtection::PolicyEnforcement value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_set_Never");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication.ExtendedProtection", "PolicyEnforcement", "Never", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.ExtendedProtection.PolicyEnforcement WhenSupported
::System::Security::Authentication::ExtendedProtection::PolicyEnforcement System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_get_WhenSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_get_WhenSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::ExtendedProtection::PolicyEnforcement>("System.Security.Authentication.ExtendedProtection", "PolicyEnforcement", "WhenSupported"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.ExtendedProtection.PolicyEnforcement WhenSupported
void System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_set_WhenSupported(::System::Security::Authentication::ExtendedProtection::PolicyEnforcement value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_set_WhenSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication.ExtendedProtection", "PolicyEnforcement", "WhenSupported", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.ExtendedProtection.PolicyEnforcement Always
::System::Security::Authentication::ExtendedProtection::PolicyEnforcement System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_get_Always() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_get_Always");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::ExtendedProtection::PolicyEnforcement>("System.Security.Authentication.ExtendedProtection", "PolicyEnforcement", "Always"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.ExtendedProtection.PolicyEnforcement Always
void System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_set_Always(::System::Security::Authentication::ExtendedProtection::PolicyEnforcement value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_set_Always");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication.ExtendedProtection", "PolicyEnforcement", "Always", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Authentication::ExtendedProtection::PolicyEnforcement::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::PolicyEnforcement::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.DerSequenceReader
#include "System/Security/Cryptography/DerSequenceReader.hpp"
// Including type: System.Security.Cryptography.DerSequenceReader/<>c
#include "System/Security/Cryptography/DerSequenceReader_--c.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Globalization.DateTimeFormatInfo s_validityDateTimeFormatInfo
::System::Globalization::DateTimeFormatInfo* System::Security::Cryptography::DerSequenceReader::_get_s_validityDateTimeFormatInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::_get_s_validityDateTimeFormatInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::DateTimeFormatInfo*>("System.Security.Cryptography", "DerSequenceReader", "s_validityDateTimeFormatInfo"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.DateTimeFormatInfo s_validityDateTimeFormatInfo
void System::Security::Cryptography::DerSequenceReader::_set_s_validityDateTimeFormatInfo(::System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::_set_s_validityDateTimeFormatInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader", "s_validityDateTimeFormatInfo", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding s_utf8EncodingWithExceptionFallback
::System::Text::Encoding* System::Security::Cryptography::DerSequenceReader::_get_s_utf8EncodingWithExceptionFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::_get_s_utf8EncodingWithExceptionFallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("System.Security.Cryptography", "DerSequenceReader", "s_utf8EncodingWithExceptionFallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding s_utf8EncodingWithExceptionFallback
void System::Security::Cryptography::DerSequenceReader::_set_s_utf8EncodingWithExceptionFallback(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::_set_s_utf8EncodingWithExceptionFallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader", "s_utf8EncodingWithExceptionFallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding s_latin1Encoding
::System::Text::Encoding* System::Security::Cryptography::DerSequenceReader::_get_s_latin1Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::_get_s_latin1Encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("System.Security.Cryptography", "DerSequenceReader", "s_latin1Encoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding s_latin1Encoding
void System::Security::Cryptography::DerSequenceReader::_set_s_latin1Encoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::_set_s_latin1Encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader", "s_latin1Encoding", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::DerSequenceReader::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _end
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::DerSequenceReader::dyn__end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::dyn__end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_end"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _position
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::DerSequenceReader::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <ContentLength>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::DerSequenceReader::dyn_$ContentLength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::dyn_$ContentLength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ContentLength>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.set_ContentLength
void System::Security::Cryptography::DerSequenceReader::set_ContentLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::set_ContentLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.get_HasData
bool System::Security::Cryptography::DerSequenceReader::get_HasData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::get_HasData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.PeekTag
uint8_t System::Security::Cryptography::DerSequenceReader::PeekTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::PeekTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.SkipValue
void System::Security::Cryptography::DerSequenceReader::SkipValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::SkipValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadNextEncodedValue
::ArrayW<uint8_t> System::Security::Cryptography::DerSequenceReader::ReadNextEncodedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadNextEncodedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNextEncodedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadBoolean
bool System::Security::Cryptography::DerSequenceReader::ReadBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadInteger
int System::Security::Cryptography::DerSequenceReader::ReadInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadIntegerBytes
::ArrayW<uint8_t> System::Security::Cryptography::DerSequenceReader::ReadIntegerBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadIntegerBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadIntegerBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadBitString
::ArrayW<uint8_t> System::Security::Cryptography::DerSequenceReader::ReadBitString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadBitString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBitString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadOctetString
::ArrayW<uint8_t> System::Security::Cryptography::DerSequenceReader::ReadOctetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadOctetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadOctetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadOidAsString
::StringW System::Security::Cryptography::DerSequenceReader::ReadOidAsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadOidAsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadOidAsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadUtf8String
::StringW System::Security::Cryptography::DerSequenceReader::ReadUtf8String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadUtf8String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUtf8String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadCollectionWithTag
::System::Security::Cryptography::DerSequenceReader* System::Security::Cryptography::DerSequenceReader::ReadCollectionWithTag(::System::Security::Cryptography::DerSequenceReader::DerTag expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadCollectionWithTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCollectionWithTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DerSequenceReader*, false>(this, ___internal__method, expected);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadSequence
::System::Security::Cryptography::DerSequenceReader* System::Security::Cryptography::DerSequenceReader::ReadSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DerSequenceReader*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadSet
::System::Security::Cryptography::DerSequenceReader* System::Security::Cryptography::DerSequenceReader::ReadSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DerSequenceReader*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadPrintableString
::StringW System::Security::Cryptography::DerSequenceReader::ReadPrintableString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadPrintableString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPrintableString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadIA5String
::StringW System::Security::Cryptography::DerSequenceReader::ReadIA5String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadIA5String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadIA5String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadT61String
::StringW System::Security::Cryptography::DerSequenceReader::ReadT61String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadT61String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadT61String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadX509Date
::System::DateTime System::Security::Cryptography::DerSequenceReader::ReadX509Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadX509Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadX509Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadUtcTime
::System::DateTime System::Security::Cryptography::DerSequenceReader::ReadUtcTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadUtcTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUtcTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadGeneralizedTime
::System::DateTime System::Security::Cryptography::DerSequenceReader::ReadGeneralizedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadGeneralizedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadGeneralizedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadBMPString
::StringW System::Security::Cryptography::DerSequenceReader::ReadBMPString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadBMPString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBMPString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.TrimTrailingNulls
::StringW System::Security::Cryptography::DerSequenceReader::TrimTrailingNulls(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::TrimTrailingNulls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DerSequenceReader", "TrimTrailingNulls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadTime
::System::DateTime System::Security::Cryptography::DerSequenceReader::ReadTime(::System::Security::Cryptography::DerSequenceReader::DerTag timeTag, ::StringW formatString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeTag), ::il2cpp_utils::ExtractType(formatString)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, timeTag, formatString);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ReadContentAsBytes
::ArrayW<uint8_t> System::Security::Cryptography::DerSequenceReader::ReadContentAsBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ReadContentAsBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadContentAsBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.EatTag
void System::Security::Cryptography::DerSequenceReader::EatTag(::System::Security::Cryptography::DerSequenceReader::DerTag expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::EatTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expected);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.CheckTag
void System::Security::Cryptography::DerSequenceReader::CheckTag(::System::Security::Cryptography::DerSequenceReader::DerTag expected, ::ArrayW<uint8_t> data, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::CheckTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DerSequenceReader", "CheckTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expected, data, position);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.EatLength
int System::Security::Cryptography::DerSequenceReader::EatLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::EatLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader.ScanContentLength
int System::Security::Cryptography::DerSequenceReader::ScanContentLength(::ArrayW<uint8_t> data, int offset, int end, ByRef<int> bytesConsumed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::ScanContentLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DerSequenceReader", "ScanContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset, end, byref(bytesConsumed));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.DerSequenceReader/DerTag
#include "System/Security/Cryptography/DerSequenceReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Boolean
::System::Security::Cryptography::DerSequenceReader::DerTag System::Security::Cryptography::DerSequenceReader::DerTag::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::DerSequenceReader::DerTag>("System.Security.Cryptography", "DerSequenceReader/DerTag", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Boolean
void System::Security::Cryptography::DerSequenceReader::DerTag::_set_Boolean(::System::Security::Cryptography::DerSequenceReader::DerTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/DerTag", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Integer
::System::Security::Cryptography::DerSequenceReader::DerTag System::Security::Cryptography::DerSequenceReader::DerTag::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::DerSequenceReader::DerTag>("System.Security.Cryptography", "DerSequenceReader/DerTag", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Integer
void System::Security::Cryptography::DerSequenceReader::DerTag::_set_Integer(::System::Security::Cryptography::DerSequenceReader::DerTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/DerTag", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag BitString
::System::Security::Cryptography::DerSequenceReader::DerTag System::Security::Cryptography::DerSequenceReader::DerTag::_get_BitString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_get_BitString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::DerSequenceReader::DerTag>("System.Security.Cryptography", "DerSequenceReader/DerTag", "BitString"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag BitString
void System::Security::Cryptography::DerSequenceReader::DerTag::_set_BitString(::System::Security::Cryptography::DerSequenceReader::DerTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_set_BitString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/DerTag", "BitString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag OctetString
::System::Security::Cryptography::DerSequenceReader::DerTag System::Security::Cryptography::DerSequenceReader::DerTag::_get_OctetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_get_OctetString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::DerSequenceReader::DerTag>("System.Security.Cryptography", "DerSequenceReader/DerTag", "OctetString"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag OctetString
void System::Security::Cryptography::DerSequenceReader::DerTag::_set_OctetString(::System::Security::Cryptography::DerSequenceReader::DerTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_set_OctetString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/DerTag", "OctetString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Null
::System::Security::Cryptography::DerSequenceReader::DerTag System::Security::Cryptography::DerSequenceReader::DerTag::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::DerSequenceReader::DerTag>("System.Security.Cryptography", "DerSequenceReader/DerTag", "Null"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Null
void System::Security::Cryptography::DerSequenceReader::DerTag::_set_Null(::System::Security::Cryptography::DerSequenceReader::DerTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/DerTag", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag ObjectIdentifier
::System::Security::Cryptography::DerSequenceReader::DerTag System::Security::Cryptography::DerSequenceReader::DerTag::_get_ObjectIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_get_ObjectIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::DerSequenceReader::DerTag>("System.Security.Cryptography", "DerSequenceReader/DerTag", "ObjectIdentifier"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag ObjectIdentifier
void System::Security::Cryptography::DerSequenceReader::DerTag::_set_ObjectIdentifier(::System::Security::Cryptography::DerSequenceReader::DerTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_set_ObjectIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/DerTag", "ObjectIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag UTF8String
::System::Security::Cryptography::DerSequenceReader::DerTag System::Security::Cryptography::DerSequenceReader::DerTag::_get_UTF8String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_get_UTF8String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::DerSequenceReader::DerTag>("System.Security.Cryptography", "DerSequenceReader/DerTag", "UTF8String"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag UTF8String
void System::Security::Cryptography::DerSequenceReader::DerTag::_set_UTF8String(::System::Security::Cryptography::DerSequenceReader::DerTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_set_UTF8String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/DerTag", "UTF8String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Sequence
::System::Security::Cryptography::DerSequenceReader::DerTag System::Security::Cryptography::DerSequenceReader::DerTag::_get_Sequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_get_Sequence");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::DerSequenceReader::DerTag>("System.Security.Cryptography", "DerSequenceReader/DerTag", "Sequence"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Sequence
void System::Security::Cryptography::DerSequenceReader::DerTag::_set_Sequence(::System::Security::Cryptography::DerSequenceReader::DerTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_set_Sequence");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/DerTag", "Sequence", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Set
::System::Security::Cryptography::DerSequenceReader::DerTag System::Security::Cryptography::DerSequenceReader::DerTag::_get_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_get_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::DerSequenceReader::DerTag>("System.Security.Cryptography", "DerSequenceReader/DerTag", "Set"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag Set
void System::Security::Cryptography::DerSequenceReader::DerTag::_set_Set(::System::Security::Cryptography::DerSequenceReader::DerTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_set_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/DerTag", "Set", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag PrintableString
::System::Security::Cryptography::DerSequenceReader::DerTag System::Security::Cryptography::DerSequenceReader::DerTag::_get_PrintableString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_get_PrintableString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::DerSequenceReader::DerTag>("System.Security.Cryptography", "DerSequenceReader/DerTag", "PrintableString"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag PrintableString
void System::Security::Cryptography::DerSequenceReader::DerTag::_set_PrintableString(::System::Security::Cryptography::DerSequenceReader::DerTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_set_PrintableString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/DerTag", "PrintableString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag T61String
::System::Security::Cryptography::DerSequenceReader::DerTag System::Security::Cryptography::DerSequenceReader::DerTag::_get_T61String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_get_T61String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::DerSequenceReader::DerTag>("System.Security.Cryptography", "DerSequenceReader/DerTag", "T61String"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag T61String
void System::Security::Cryptography::DerSequenceReader::DerTag::_set_T61String(::System::Security::Cryptography::DerSequenceReader::DerTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_set_T61String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/DerTag", "T61String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag IA5String
::System::Security::Cryptography::DerSequenceReader::DerTag System::Security::Cryptography::DerSequenceReader::DerTag::_get_IA5String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_get_IA5String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::DerSequenceReader::DerTag>("System.Security.Cryptography", "DerSequenceReader/DerTag", "IA5String"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag IA5String
void System::Security::Cryptography::DerSequenceReader::DerTag::_set_IA5String(::System::Security::Cryptography::DerSequenceReader::DerTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_set_IA5String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/DerTag", "IA5String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag UTCTime
::System::Security::Cryptography::DerSequenceReader::DerTag System::Security::Cryptography::DerSequenceReader::DerTag::_get_UTCTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_get_UTCTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::DerSequenceReader::DerTag>("System.Security.Cryptography", "DerSequenceReader/DerTag", "UTCTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag UTCTime
void System::Security::Cryptography::DerSequenceReader::DerTag::_set_UTCTime(::System::Security::Cryptography::DerSequenceReader::DerTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_set_UTCTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/DerTag", "UTCTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag GeneralizedTime
::System::Security::Cryptography::DerSequenceReader::DerTag System::Security::Cryptography::DerSequenceReader::DerTag::_get_GeneralizedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_get_GeneralizedTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::DerSequenceReader::DerTag>("System.Security.Cryptography", "DerSequenceReader/DerTag", "GeneralizedTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag GeneralizedTime
void System::Security::Cryptography::DerSequenceReader::DerTag::_set_GeneralizedTime(::System::Security::Cryptography::DerSequenceReader::DerTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_set_GeneralizedTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/DerTag", "GeneralizedTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.DerSequenceReader/DerTag BMPString
::System::Security::Cryptography::DerSequenceReader::DerTag System::Security::Cryptography::DerSequenceReader::DerTag::_get_BMPString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_get_BMPString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::DerSequenceReader::DerTag>("System.Security.Cryptography", "DerSequenceReader/DerTag", "BMPString"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.DerSequenceReader/DerTag BMPString
void System::Security::Cryptography::DerSequenceReader::DerTag::_set_BMPString(::System::Security::Cryptography::DerSequenceReader::DerTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::_set_BMPString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/DerTag", "BMPString", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Security::Cryptography::DerSequenceReader::DerTag::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::DerTag::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.DerSequenceReader/<>c
#include "System/Security/Cryptography/DerSequenceReader_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Security.Cryptography.DerSequenceReader/<>c <>9
::System::Security::Cryptography::DerSequenceReader::$$c* System::Security::Cryptography::DerSequenceReader::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Security::Cryptography::DerSequenceReader::$$c*>("System.Security.Cryptography", "DerSequenceReader/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Security.Cryptography.DerSequenceReader/<>c <>9
void System::Security::Cryptography::DerSequenceReader::$$c::_set_$$9(::System::Security::Cryptography::DerSequenceReader::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Text.Encoding> <>9__45_0
::System::Func_1<::System::Text::Encoding*>* System::Security::Cryptography::DerSequenceReader::$$c::_get_$$9__45_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::$$c::_get_$$9__45_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::System::Text::Encoding*>*>("System.Security.Cryptography", "DerSequenceReader/<>c", "<>9__45_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Text.Encoding> <>9__45_0
void System::Security::Cryptography::DerSequenceReader::$$c::_set_$$9__45_0(::System::Func_1<::System::Text::Encoding*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::$$c::_set_$$9__45_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/<>c", "<>9__45_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Text.Encoding> <>9__45_1
::System::Func_1<::System::Text::Encoding*>* System::Security::Cryptography::DerSequenceReader::$$c::_get_$$9__45_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::$$c::_get_$$9__45_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::System::Text::Encoding*>*>("System.Security.Cryptography", "DerSequenceReader/<>c", "<>9__45_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Text.Encoding> <>9__45_1
void System::Security::Cryptography::DerSequenceReader::$$c::_set_$$9__45_1(::System::Func_1<::System::Text::Encoding*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::$$c::_set_$$9__45_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/<>c", "<>9__45_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Globalization.DateTimeFormatInfo> <>9__51_0
::System::Func_1<::System::Globalization::DateTimeFormatInfo*>* System::Security::Cryptography::DerSequenceReader::$$c::_get_$$9__51_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::$$c::_get_$$9__51_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::System::Globalization::DateTimeFormatInfo*>*>("System.Security.Cryptography", "DerSequenceReader/<>c", "<>9__51_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Globalization.DateTimeFormatInfo> <>9__51_0
void System::Security::Cryptography::DerSequenceReader::$$c::_set_$$9__51_0(::System::Func_1<::System::Globalization::DateTimeFormatInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::$$c::_set_$$9__51_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DerSequenceReader/<>c", "<>9__51_0", value)));
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader/<>c..cctor
void System::Security::Cryptography::DerSequenceReader::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DerSequenceReader/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader/<>c.<ReadT61String>b__45_0
::System::Text::Encoding* System::Security::Cryptography::DerSequenceReader::$$c::$ReadT61String$b__45_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::$$c::<ReadT61String>b__45_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ReadT61String>b__45_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader/<>c.<ReadT61String>b__45_1
::System::Text::Encoding* System::Security::Cryptography::DerSequenceReader::$$c::$ReadT61String$b__45_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::$$c::<ReadT61String>b__45_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ReadT61String>b__45_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DerSequenceReader/<>c.<ReadTime>b__51_0
::System::Globalization::DateTimeFormatInfo* System::Security::Cryptography::DerSequenceReader::$$c::$ReadTime$b__51_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::DerSequenceReader::$$c::<ReadTime>b__51_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ReadTime>b__51_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::DateTimeFormatInfo*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.Oid
#include "System/Security/Cryptography/Oid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _value
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::Oid::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Oid::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _friendlyName
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::Oid::dyn__friendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Oid::dyn__friendlyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_friendlyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.OidGroup _group
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::OidGroup& System::Security::Cryptography::Oid::dyn__group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Oid::dyn__group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_group"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::OidGroup*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.Oid.FromOidValue
::System::Security::Cryptography::Oid* System::Security::Cryptography::Oid::FromOidValue(::StringW oidValue, ::System::Security::Cryptography::OidGroup group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Oid::FromOidValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Oid", "FromOidValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oidValue), ::il2cpp_utils::ExtractType(group)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::Oid*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oidValue, group);
}
// Autogenerated method: System.Security.Cryptography.Oid.get_Value
::StringW System::Security::Cryptography::Oid::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Oid::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.Oid.set_Value
void System::Security::Cryptography::Oid::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Oid::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.Oid.get_FriendlyName
::StringW System::Security::Cryptography::Oid::get_FriendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Oid::get_FriendlyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FriendlyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.OidCollection
#include "System/Security/Cryptography/OidCollection.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Security.Cryptography.Oid
#include "System/Security/Cryptography/Oid.hpp"
// Including type: System.Security.Cryptography.OidEnumerator
#include "System/Security/Cryptography/OidEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Security.Cryptography.Oid> _list
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Security::Cryptography::Oid*>*& System::Security::Cryptography::OidCollection::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidCollection::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Security::Cryptography::Oid*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.OidCollection.Add
int System::Security::Cryptography::OidCollection::Add(::System::Security::Cryptography::Oid* oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, oid);
}
// Autogenerated method: System.Security.Cryptography.OidCollection.get_Item
::System::Security::Cryptography::Oid* System::Security::Cryptography::OidCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::Oid*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Security.Cryptography.OidCollection.get_Count
int System::Security::Cryptography::OidCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::OidCollection*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.OidCollection.GetEnumerator
::System::Security::Cryptography::OidEnumerator* System::Security::Cryptography::OidCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::OidEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.OidCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Security::Cryptography::OidCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::OidCollection*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.OidCollection.System.Collections.ICollection.CopyTo
void System::Security::Cryptography::OidCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::OidCollection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Security.Cryptography.OidCollection.get_IsSynchronized
bool System::Security::Cryptography::OidCollection::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidCollection::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::OidCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.OidCollection.get_SyncRoot
::Il2CppObject* System::Security::Cryptography::OidCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::OidCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.OidEnumerator
#include "System/Security/Cryptography/OidEnumerator.hpp"
// Including type: System.Security.Cryptography.OidCollection
#include "System/Security/Cryptography/OidCollection.hpp"
// Including type: System.Security.Cryptography.Oid
#include "System/Security/Cryptography/Oid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Security.Cryptography.OidCollection _oids
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::OidCollection*& System::Security::Cryptography::OidEnumerator::dyn__oids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidEnumerator::dyn__oids");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oids"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::OidCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _current
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::OidEnumerator::dyn__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidEnumerator::dyn__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_current"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.OidEnumerator.get_Current
::System::Security::Cryptography::Oid* System::Security::Cryptography::OidEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::Oid*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.OidEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Security::Cryptography::OidEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::OidEnumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.OidEnumerator.MoveNext
bool System::Security::Cryptography::OidEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::OidEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.OidEnumerator.Reset
void System::Security::Cryptography::OidEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::OidEnumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.OidGroup
#include "System/Security/Cryptography/OidGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup All
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup All
void System::Security::Cryptography::OidGroup::_set_All(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup HashAlgorithm
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_HashAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_HashAlgorithm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "HashAlgorithm"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup HashAlgorithm
void System::Security::Cryptography::OidGroup::_set_HashAlgorithm(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_HashAlgorithm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "HashAlgorithm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup EncryptionAlgorithm
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_EncryptionAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_EncryptionAlgorithm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "EncryptionAlgorithm"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup EncryptionAlgorithm
void System::Security::Cryptography::OidGroup::_set_EncryptionAlgorithm(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_EncryptionAlgorithm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "EncryptionAlgorithm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup PublicKeyAlgorithm
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_PublicKeyAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_PublicKeyAlgorithm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "PublicKeyAlgorithm"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup PublicKeyAlgorithm
void System::Security::Cryptography::OidGroup::_set_PublicKeyAlgorithm(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_PublicKeyAlgorithm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "PublicKeyAlgorithm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup SignatureAlgorithm
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_SignatureAlgorithm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "SignatureAlgorithm"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup SignatureAlgorithm
void System::Security::Cryptography::OidGroup::_set_SignatureAlgorithm(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_SignatureAlgorithm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "SignatureAlgorithm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup Attribute
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup Attribute
void System::Security::Cryptography::OidGroup::_set_Attribute(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup ExtensionOrAttribute
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_ExtensionOrAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_ExtensionOrAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "ExtensionOrAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup ExtensionOrAttribute
void System::Security::Cryptography::OidGroup::_set_ExtensionOrAttribute(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_ExtensionOrAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "ExtensionOrAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup EnhancedKeyUsage
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_EnhancedKeyUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_EnhancedKeyUsage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "EnhancedKeyUsage"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup EnhancedKeyUsage
void System::Security::Cryptography::OidGroup::_set_EnhancedKeyUsage(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_EnhancedKeyUsage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "EnhancedKeyUsage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup Policy
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_Policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_Policy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "Policy"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup Policy
void System::Security::Cryptography::OidGroup::_set_Policy(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_Policy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "Policy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup Template
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_Template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_Template");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "Template"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup Template
void System::Security::Cryptography::OidGroup::_set_Template(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_Template");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "Template", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup KeyDerivationFunction
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_KeyDerivationFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_KeyDerivationFunction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "KeyDerivationFunction"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup KeyDerivationFunction
void System::Security::Cryptography::OidGroup::_set_KeyDerivationFunction(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_KeyDerivationFunction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "KeyDerivationFunction", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::OidGroup::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AsnDecodeStatus
#include "System/Security/Cryptography/AsnDecodeStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.AsnDecodeStatus NotDecoded
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::AsnDecodeStatus::_get_NotDecoded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_get_NotDecoded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::AsnDecodeStatus>("System.Security.Cryptography", "AsnDecodeStatus", "NotDecoded"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.AsnDecodeStatus NotDecoded
void System::Security::Cryptography::AsnDecodeStatus::_set_NotDecoded(::System::Security::Cryptography::AsnDecodeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_set_NotDecoded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AsnDecodeStatus", "NotDecoded", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.AsnDecodeStatus Ok
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::AsnDecodeStatus::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::AsnDecodeStatus>("System.Security.Cryptography", "AsnDecodeStatus", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.AsnDecodeStatus Ok
void System::Security::Cryptography::AsnDecodeStatus::_set_Ok(::System::Security::Cryptography::AsnDecodeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AsnDecodeStatus", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.AsnDecodeStatus BadAsn
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::AsnDecodeStatus::_get_BadAsn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_get_BadAsn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::AsnDecodeStatus>("System.Security.Cryptography", "AsnDecodeStatus", "BadAsn"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.AsnDecodeStatus BadAsn
void System::Security::Cryptography::AsnDecodeStatus::_set_BadAsn(::System::Security::Cryptography::AsnDecodeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_set_BadAsn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AsnDecodeStatus", "BadAsn", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.AsnDecodeStatus BadTag
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::AsnDecodeStatus::_get_BadTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_get_BadTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::AsnDecodeStatus>("System.Security.Cryptography", "AsnDecodeStatus", "BadTag"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.AsnDecodeStatus BadTag
void System::Security::Cryptography::AsnDecodeStatus::_set_BadTag(::System::Security::Cryptography::AsnDecodeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_set_BadTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AsnDecodeStatus", "BadTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.AsnDecodeStatus BadLength
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::AsnDecodeStatus::_get_BadLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_get_BadLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::AsnDecodeStatus>("System.Security.Cryptography", "AsnDecodeStatus", "BadLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.AsnDecodeStatus BadLength
void System::Security::Cryptography::AsnDecodeStatus::_set_BadLength(::System::Security::Cryptography::AsnDecodeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_set_BadLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AsnDecodeStatus", "BadLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.AsnDecodeStatus InformationNotAvailable
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::AsnDecodeStatus::_get_InformationNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_get_InformationNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::AsnDecodeStatus>("System.Security.Cryptography", "AsnDecodeStatus", "InformationNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.AsnDecodeStatus InformationNotAvailable
void System::Security::Cryptography::AsnDecodeStatus::_set_InformationNotAvailable(::System::Security::Cryptography::AsnDecodeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_set_InformationNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AsnDecodeStatus", "InformationNotAvailable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::AsnDecodeStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AsnEncodedData
#include "System/Security/Cryptography/AsnEncodedData.hpp"
// Including type: System.Security.Cryptography.Oid
#include "System/Security/Cryptography/Oid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Security.Cryptography.Oid _oid
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::Oid*& System::Security::Cryptography::AsnEncodedData::dyn__oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::dyn__oid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oid"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::Oid**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] _raw
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::AsnEncodedData::dyn__raw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::dyn__raw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_raw"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.get_Oid
::System::Security::Cryptography::Oid* System::Security::Cryptography::AsnEncodedData::get_Oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::get_Oid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Oid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::Oid*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.set_Oid
void System::Security::Cryptography::AsnEncodedData::set_Oid(::System::Security::Cryptography::Oid* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::set_Oid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Oid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.get_RawData
::ArrayW<uint8_t> System::Security::Cryptography::AsnEncodedData::get_RawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::get_RawData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RawData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.set_RawData
void System::Security::Cryptography::AsnEncodedData::set_RawData(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::set_RawData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RawData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.CopyFrom
void System::Security::Cryptography::AsnEncodedData::CopyFrom(::System::Security::Cryptography::AsnEncodedData* asnEncodedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::CopyFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsnEncodedData*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asnEncodedData);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.Format
::StringW System::Security::Cryptography::AsnEncodedData::Format(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::Format");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsnEncodedData*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.ToString
::StringW System::Security::Cryptography::AsnEncodedData::ToString(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsnEncodedData*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.Default
::StringW System::Security::Cryptography::AsnEncodedData::Default(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.BasicConstraintsExtension
::StringW System::Security::Cryptography::AsnEncodedData::BasicConstraintsExtension(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::BasicConstraintsExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BasicConstraintsExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.EnhancedKeyUsageExtension
::StringW System::Security::Cryptography::AsnEncodedData::EnhancedKeyUsageExtension(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::EnhancedKeyUsageExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnhancedKeyUsageExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.KeyUsageExtension
::StringW System::Security::Cryptography::AsnEncodedData::KeyUsageExtension(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::KeyUsageExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyUsageExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.SubjectKeyIdentifierExtension
::StringW System::Security::Cryptography::AsnEncodedData::SubjectKeyIdentifierExtension(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::SubjectKeyIdentifierExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubjectKeyIdentifierExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.SubjectAltName
::StringW System::Security::Cryptography::AsnEncodedData::SubjectAltName(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::SubjectAltName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubjectAltName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.NetscapeCertType
::StringW System::Security::Cryptography::AsnEncodedData::NetscapeCertType(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::NetscapeCertType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NetscapeCertType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.OpenFlags
#include "System/Security/Cryptography/X509Certificates/OpenFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OpenFlags ReadOnly
::System::Security::Cryptography::X509Certificates::OpenFlags System::Security::Cryptography::X509Certificates::OpenFlags::_get_ReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_get_ReadOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::OpenFlags>("System.Security.Cryptography.X509Certificates", "OpenFlags", "ReadOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OpenFlags ReadOnly
void System::Security::Cryptography::X509Certificates::OpenFlags::_set_ReadOnly(::System::Security::Cryptography::X509Certificates::OpenFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_set_ReadOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OpenFlags", "ReadOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OpenFlags ReadWrite
::System::Security::Cryptography::X509Certificates::OpenFlags System::Security::Cryptography::X509Certificates::OpenFlags::_get_ReadWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_get_ReadWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::OpenFlags>("System.Security.Cryptography.X509Certificates", "OpenFlags", "ReadWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OpenFlags ReadWrite
void System::Security::Cryptography::X509Certificates::OpenFlags::_set_ReadWrite(::System::Security::Cryptography::X509Certificates::OpenFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_set_ReadWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OpenFlags", "ReadWrite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OpenFlags MaxAllowed
::System::Security::Cryptography::X509Certificates::OpenFlags System::Security::Cryptography::X509Certificates::OpenFlags::_get_MaxAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_get_MaxAllowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::OpenFlags>("System.Security.Cryptography.X509Certificates", "OpenFlags", "MaxAllowed"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OpenFlags MaxAllowed
void System::Security::Cryptography::X509Certificates::OpenFlags::_set_MaxAllowed(::System::Security::Cryptography::X509Certificates::OpenFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_set_MaxAllowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OpenFlags", "MaxAllowed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OpenFlags OpenExistingOnly
::System::Security::Cryptography::X509Certificates::OpenFlags System::Security::Cryptography::X509Certificates::OpenFlags::_get_OpenExistingOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_get_OpenExistingOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::OpenFlags>("System.Security.Cryptography.X509Certificates", "OpenFlags", "OpenExistingOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OpenFlags OpenExistingOnly
void System::Security::Cryptography::X509Certificates::OpenFlags::_set_OpenExistingOnly(::System::Security::Cryptography::X509Certificates::OpenFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_set_OpenExistingOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OpenFlags", "OpenExistingOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OpenFlags IncludeArchived
::System::Security::Cryptography::X509Certificates::OpenFlags System::Security::Cryptography::X509Certificates::OpenFlags::_get_IncludeArchived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_get_IncludeArchived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::OpenFlags>("System.Security.Cryptography.X509Certificates", "OpenFlags", "IncludeArchived"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OpenFlags IncludeArchived
void System::Security::Cryptography::X509Certificates::OpenFlags::_set_IncludeArchived(::System::Security::Cryptography::X509Certificates::OpenFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_set_IncludeArchived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OpenFlags", "IncludeArchived", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::OpenFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.StoreLocation
#include "System/Security/Cryptography/X509Certificates/StoreLocation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreLocation CurrentUser
::System::Security::Cryptography::X509Certificates::StoreLocation System::Security::Cryptography::X509Certificates::StoreLocation::_get_CurrentUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreLocation::_get_CurrentUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreLocation>("System.Security.Cryptography.X509Certificates", "StoreLocation", "CurrentUser"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreLocation CurrentUser
void System::Security::Cryptography::X509Certificates::StoreLocation::_set_CurrentUser(::System::Security::Cryptography::X509Certificates::StoreLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreLocation::_set_CurrentUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreLocation", "CurrentUser", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreLocation LocalMachine
::System::Security::Cryptography::X509Certificates::StoreLocation System::Security::Cryptography::X509Certificates::StoreLocation::_get_LocalMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreLocation::_get_LocalMachine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreLocation>("System.Security.Cryptography.X509Certificates", "StoreLocation", "LocalMachine"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreLocation LocalMachine
void System::Security::Cryptography::X509Certificates::StoreLocation::_set_LocalMachine(::System::Security::Cryptography::X509Certificates::StoreLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreLocation::_set_LocalMachine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreLocation", "LocalMachine", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::StoreLocation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreLocation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.StoreName
#include "System/Security/Cryptography/X509Certificates/StoreName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreName AddressBook
::System::Security::Cryptography::X509Certificates::StoreName System::Security::Cryptography::X509Certificates::StoreName::_get_AddressBook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_get_AddressBook");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreName>("System.Security.Cryptography.X509Certificates", "StoreName", "AddressBook"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreName AddressBook
void System::Security::Cryptography::X509Certificates::StoreName::_set_AddressBook(::System::Security::Cryptography::X509Certificates::StoreName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_set_AddressBook");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreName", "AddressBook", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreName AuthRoot
::System::Security::Cryptography::X509Certificates::StoreName System::Security::Cryptography::X509Certificates::StoreName::_get_AuthRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_get_AuthRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreName>("System.Security.Cryptography.X509Certificates", "StoreName", "AuthRoot"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreName AuthRoot
void System::Security::Cryptography::X509Certificates::StoreName::_set_AuthRoot(::System::Security::Cryptography::X509Certificates::StoreName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_set_AuthRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreName", "AuthRoot", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreName CertificateAuthority
::System::Security::Cryptography::X509Certificates::StoreName System::Security::Cryptography::X509Certificates::StoreName::_get_CertificateAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_get_CertificateAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreName>("System.Security.Cryptography.X509Certificates", "StoreName", "CertificateAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreName CertificateAuthority
void System::Security::Cryptography::X509Certificates::StoreName::_set_CertificateAuthority(::System::Security::Cryptography::X509Certificates::StoreName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_set_CertificateAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreName", "CertificateAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreName Disallowed
::System::Security::Cryptography::X509Certificates::StoreName System::Security::Cryptography::X509Certificates::StoreName::_get_Disallowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_get_Disallowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreName>("System.Security.Cryptography.X509Certificates", "StoreName", "Disallowed"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreName Disallowed
void System::Security::Cryptography::X509Certificates::StoreName::_set_Disallowed(::System::Security::Cryptography::X509Certificates::StoreName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_set_Disallowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreName", "Disallowed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreName My
::System::Security::Cryptography::X509Certificates::StoreName System::Security::Cryptography::X509Certificates::StoreName::_get_My() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_get_My");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreName>("System.Security.Cryptography.X509Certificates", "StoreName", "My"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreName My
void System::Security::Cryptography::X509Certificates::StoreName::_set_My(::System::Security::Cryptography::X509Certificates::StoreName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_set_My");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreName", "My", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreName Root
::System::Security::Cryptography::X509Certificates::StoreName System::Security::Cryptography::X509Certificates::StoreName::_get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_get_Root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreName>("System.Security.Cryptography.X509Certificates", "StoreName", "Root"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreName Root
void System::Security::Cryptography::X509Certificates::StoreName::_set_Root(::System::Security::Cryptography::X509Certificates::StoreName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_set_Root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreName", "Root", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreName TrustedPeople
::System::Security::Cryptography::X509Certificates::StoreName System::Security::Cryptography::X509Certificates::StoreName::_get_TrustedPeople() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_get_TrustedPeople");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreName>("System.Security.Cryptography.X509Certificates", "StoreName", "TrustedPeople"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreName TrustedPeople
void System::Security::Cryptography::X509Certificates::StoreName::_set_TrustedPeople(::System::Security::Cryptography::X509Certificates::StoreName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_set_TrustedPeople");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreName", "TrustedPeople", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreName TrustedPublisher
::System::Security::Cryptography::X509Certificates::StoreName System::Security::Cryptography::X509Certificates::StoreName::_get_TrustedPublisher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_get_TrustedPublisher");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreName>("System.Security.Cryptography.X509Certificates", "StoreName", "TrustedPublisher"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreName TrustedPublisher
void System::Security::Cryptography::X509Certificates::StoreName::_set_TrustedPublisher(::System::Security::Cryptography::X509Certificates::StoreName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_set_TrustedPublisher");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreName", "TrustedPublisher", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::StoreName::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedNameFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags None
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags None
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_None(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags Reversed
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_Reversed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_Reversed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "Reversed"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags Reversed
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_Reversed(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_Reversed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "Reversed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseSemicolons
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseSemicolons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseSemicolons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseSemicolons"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseSemicolons
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseSemicolons(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseSemicolons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseSemicolons", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags DoNotUsePlusSign
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_DoNotUsePlusSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_DoNotUsePlusSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "DoNotUsePlusSign"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags DoNotUsePlusSign
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_DoNotUsePlusSign(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_DoNotUsePlusSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "DoNotUsePlusSign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags DoNotUseQuotes
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_DoNotUseQuotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_DoNotUseQuotes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "DoNotUseQuotes"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags DoNotUseQuotes
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_DoNotUseQuotes(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_DoNotUseQuotes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "DoNotUseQuotes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseCommas
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseCommas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseCommas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseCommas"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseCommas
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseCommas(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseCommas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseCommas", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseNewLines
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseNewLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseNewLines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseNewLines"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseNewLines
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseNewLines(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseNewLines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseNewLines", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseUTF8Encoding
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseUTF8Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseUTF8Encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseUTF8Encoding"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseUTF8Encoding
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseUTF8Encoding(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseUTF8Encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseUTF8Encoding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseT61Encoding
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseT61Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseT61Encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseT61Encoding"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseT61Encoding
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseT61Encoding(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseT61Encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseT61Encoding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags ForceUTF8Encoding
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_ForceUTF8Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_ForceUTF8Encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "ForceUTF8Encoding"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags ForceUTF8Encoding
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_ForceUTF8Encoding(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_ForceUTF8Encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "ForceUTF8Encoding", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
#include "System/Security/Cryptography/X509Certificates/X509ChainStatusFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NoError
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NoError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NoError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NoError"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NoError
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NoError(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NoError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NoError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NotTimeValid
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NotTimeValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NotTimeValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NotTimeValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NotTimeValid
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NotTimeValid(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NotTimeValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NotTimeValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NotTimeNested
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NotTimeNested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NotTimeNested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NotTimeNested"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NotTimeNested
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NotTimeNested(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NotTimeNested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NotTimeNested", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags Revoked
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_Revoked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_Revoked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "Revoked"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags Revoked
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_Revoked(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_Revoked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "Revoked", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NotSignatureValid
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NotSignatureValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NotSignatureValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NotSignatureValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NotSignatureValid
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NotSignatureValid(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NotSignatureValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NotSignatureValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NotValidForUsage
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NotValidForUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NotValidForUsage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NotValidForUsage"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NotValidForUsage
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NotValidForUsage(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NotValidForUsage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NotValidForUsage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags UntrustedRoot
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_UntrustedRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_UntrustedRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "UntrustedRoot"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags UntrustedRoot
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_UntrustedRoot(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_UntrustedRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "UntrustedRoot", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags RevocationStatusUnknown
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_RevocationStatusUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_RevocationStatusUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "RevocationStatusUnknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags RevocationStatusUnknown
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_RevocationStatusUnknown(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_RevocationStatusUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "RevocationStatusUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags Cyclic
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_Cyclic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_Cyclic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "Cyclic"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags Cyclic
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_Cyclic(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_Cyclic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "Cyclic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags InvalidExtension
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_InvalidExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_InvalidExtension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "InvalidExtension"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags InvalidExtension
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_InvalidExtension(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_InvalidExtension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "InvalidExtension", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags InvalidPolicyConstraints
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_InvalidPolicyConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_InvalidPolicyConstraints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "InvalidPolicyConstraints"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags InvalidPolicyConstraints
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_InvalidPolicyConstraints(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_InvalidPolicyConstraints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "InvalidPolicyConstraints", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags InvalidBasicConstraints
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_InvalidBasicConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_InvalidBasicConstraints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "InvalidBasicConstraints"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags InvalidBasicConstraints
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_InvalidBasicConstraints(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_InvalidBasicConstraints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "InvalidBasicConstraints", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags InvalidNameConstraints
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_InvalidNameConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_InvalidNameConstraints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "InvalidNameConstraints"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags InvalidNameConstraints
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_InvalidNameConstraints(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_InvalidNameConstraints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "InvalidNameConstraints", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasNotSupportedNameConstraint
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasNotSupportedNameConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasNotSupportedNameConstraint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasNotSupportedNameConstraint"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasNotSupportedNameConstraint
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasNotSupportedNameConstraint(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasNotSupportedNameConstraint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasNotSupportedNameConstraint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasNotDefinedNameConstraint
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasNotDefinedNameConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasNotDefinedNameConstraint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasNotDefinedNameConstraint"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasNotDefinedNameConstraint
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasNotDefinedNameConstraint(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasNotDefinedNameConstraint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasNotDefinedNameConstraint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasNotPermittedNameConstraint
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasNotPermittedNameConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasNotPermittedNameConstraint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasNotPermittedNameConstraint"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasNotPermittedNameConstraint
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasNotPermittedNameConstraint(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasNotPermittedNameConstraint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasNotPermittedNameConstraint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasExcludedNameConstraint
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasExcludedNameConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasExcludedNameConstraint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasExcludedNameConstraint"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasExcludedNameConstraint
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasExcludedNameConstraint(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasExcludedNameConstraint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasExcludedNameConstraint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags PartialChain
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_PartialChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_PartialChain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "PartialChain"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags PartialChain
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_PartialChain(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_PartialChain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "PartialChain", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags CtlNotTimeValid
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_CtlNotTimeValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_CtlNotTimeValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "CtlNotTimeValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags CtlNotTimeValid
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_CtlNotTimeValid(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_CtlNotTimeValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "CtlNotTimeValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags CtlNotSignatureValid
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_CtlNotSignatureValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_CtlNotSignatureValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "CtlNotSignatureValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags CtlNotSignatureValid
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_CtlNotSignatureValid(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_CtlNotSignatureValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "CtlNotSignatureValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags CtlNotValidForUsage
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_CtlNotValidForUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_CtlNotValidForUsage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "CtlNotValidForUsage"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags CtlNotValidForUsage
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_CtlNotValidForUsage(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_CtlNotValidForUsage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "CtlNotValidForUsage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags OfflineRevocation
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_OfflineRevocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_OfflineRevocation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "OfflineRevocation"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags OfflineRevocation
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_OfflineRevocation(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_OfflineRevocation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "OfflineRevocation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NoIssuanceChainPolicy
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NoIssuanceChainPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NoIssuanceChainPolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NoIssuanceChainPolicy"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NoIssuanceChainPolicy
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NoIssuanceChainPolicy(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NoIssuanceChainPolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NoIssuanceChainPolicy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags ExplicitDistrust
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_ExplicitDistrust() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_ExplicitDistrust");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "ExplicitDistrust"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags ExplicitDistrust
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_ExplicitDistrust(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_ExplicitDistrust");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "ExplicitDistrust", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasNotSupportedCriticalExtension
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasNotSupportedCriticalExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasNotSupportedCriticalExtension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasNotSupportedCriticalExtension"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasNotSupportedCriticalExtension
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasNotSupportedCriticalExtension(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasNotSupportedCriticalExtension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasNotSupportedCriticalExtension", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasWeakSignature
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasWeakSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasWeakSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasWeakSignature"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasWeakSignature
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasWeakSignature(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasWeakSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasWeakSignature", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509FindType
#include "System/Security/Cryptography/X509Certificates/X509FindType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByThumbprint
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByThumbprint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByThumbprint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByThumbprint"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByThumbprint
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByThumbprint(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByThumbprint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByThumbprint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindBySubjectName
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindBySubjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindBySubjectName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindBySubjectName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindBySubjectName
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindBySubjectName(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindBySubjectName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindBySubjectName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindBySubjectDistinguishedName
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindBySubjectDistinguishedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindBySubjectDistinguishedName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindBySubjectDistinguishedName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindBySubjectDistinguishedName
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindBySubjectDistinguishedName(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindBySubjectDistinguishedName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindBySubjectDistinguishedName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByIssuerName
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByIssuerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByIssuerName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByIssuerName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByIssuerName
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByIssuerName(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByIssuerName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByIssuerName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByIssuerDistinguishedName
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByIssuerDistinguishedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByIssuerDistinguishedName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByIssuerDistinguishedName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByIssuerDistinguishedName
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByIssuerDistinguishedName(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByIssuerDistinguishedName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByIssuerDistinguishedName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindBySerialNumber
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindBySerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindBySerialNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindBySerialNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindBySerialNumber
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindBySerialNumber(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindBySerialNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindBySerialNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByTimeValid
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByTimeValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByTimeValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByTimeValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByTimeValid
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByTimeValid(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByTimeValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByTimeValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByTimeNotYetValid
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByTimeNotYetValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByTimeNotYetValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByTimeNotYetValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByTimeNotYetValid
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByTimeNotYetValid(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByTimeNotYetValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByTimeNotYetValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByTimeExpired
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByTimeExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByTimeExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByTimeExpired"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByTimeExpired
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByTimeExpired(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByTimeExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByTimeExpired", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByTemplateName
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByTemplateName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByTemplateName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByTemplateName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByTemplateName
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByTemplateName(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByTemplateName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByTemplateName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByApplicationPolicy
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByApplicationPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByApplicationPolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByApplicationPolicy"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByApplicationPolicy
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByApplicationPolicy(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByApplicationPolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByApplicationPolicy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByCertificatePolicy
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByCertificatePolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByCertificatePolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByCertificatePolicy"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByCertificatePolicy
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByCertificatePolicy(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByCertificatePolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByCertificatePolicy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByExtension
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByExtension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByExtension"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByExtension
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByExtension(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByExtension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByExtension", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByKeyUsage
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByKeyUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByKeyUsage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByKeyUsage"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByKeyUsage
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByKeyUsage(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByKeyUsage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByKeyUsage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindBySubjectKeyIdentifier
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindBySubjectKeyIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindBySubjectKeyIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindBySubjectKeyIdentifier"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindBySubjectKeyIdentifier
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindBySubjectKeyIdentifier(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindBySubjectKeyIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindBySubjectKeyIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509FindType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509KeyUsageFlags
#include "System/Security/Cryptography/X509Certificates/X509KeyUsageFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags None
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags None
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_None(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags EncipherOnly
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_EncipherOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_EncipherOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "EncipherOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags EncipherOnly
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_EncipherOnly(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_EncipherOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "EncipherOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags CrlSign
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_CrlSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_CrlSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "CrlSign"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags CrlSign
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_CrlSign(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_CrlSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "CrlSign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags KeyCertSign
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_KeyCertSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_KeyCertSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "KeyCertSign"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags KeyCertSign
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_KeyCertSign(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_KeyCertSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "KeyCertSign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags KeyAgreement
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_KeyAgreement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_KeyAgreement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "KeyAgreement"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags KeyAgreement
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_KeyAgreement(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_KeyAgreement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "KeyAgreement", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags DataEncipherment
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_DataEncipherment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_DataEncipherment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "DataEncipherment"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags DataEncipherment
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_DataEncipherment(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_DataEncipherment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "DataEncipherment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags KeyEncipherment
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_KeyEncipherment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_KeyEncipherment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "KeyEncipherment"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags KeyEncipherment
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_KeyEncipherment(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_KeyEncipherment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "KeyEncipherment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags NonRepudiation
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_NonRepudiation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_NonRepudiation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "NonRepudiation"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags NonRepudiation
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_NonRepudiation(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_NonRepudiation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "NonRepudiation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags DigitalSignature
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_DigitalSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_DigitalSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "DigitalSignature"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags DigitalSignature
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_DigitalSignature(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_DigitalSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "DigitalSignature", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags DecipherOnly
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_DecipherOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_DecipherOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "DecipherOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags DecipherOnly
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_DecipherOnly(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_DecipherOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "DecipherOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509NameType
#include "System/Security/Cryptography/X509Certificates/X509NameType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509NameType SimpleName
::System::Security::Cryptography::X509Certificates::X509NameType System::Security::Cryptography::X509Certificates::X509NameType::_get_SimpleName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_get_SimpleName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509NameType>("System.Security.Cryptography.X509Certificates", "X509NameType", "SimpleName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509NameType SimpleName
void System::Security::Cryptography::X509Certificates::X509NameType::_set_SimpleName(::System::Security::Cryptography::X509Certificates::X509NameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_set_SimpleName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509NameType", "SimpleName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509NameType EmailName
::System::Security::Cryptography::X509Certificates::X509NameType System::Security::Cryptography::X509Certificates::X509NameType::_get_EmailName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_get_EmailName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509NameType>("System.Security.Cryptography.X509Certificates", "X509NameType", "EmailName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509NameType EmailName
void System::Security::Cryptography::X509Certificates::X509NameType::_set_EmailName(::System::Security::Cryptography::X509Certificates::X509NameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_set_EmailName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509NameType", "EmailName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509NameType UpnName
::System::Security::Cryptography::X509Certificates::X509NameType System::Security::Cryptography::X509Certificates::X509NameType::_get_UpnName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_get_UpnName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509NameType>("System.Security.Cryptography.X509Certificates", "X509NameType", "UpnName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509NameType UpnName
void System::Security::Cryptography::X509Certificates::X509NameType::_set_UpnName(::System::Security::Cryptography::X509Certificates::X509NameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_set_UpnName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509NameType", "UpnName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509NameType DnsName
::System::Security::Cryptography::X509Certificates::X509NameType System::Security::Cryptography::X509Certificates::X509NameType::_get_DnsName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_get_DnsName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509NameType>("System.Security.Cryptography.X509Certificates", "X509NameType", "DnsName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509NameType DnsName
void System::Security::Cryptography::X509Certificates::X509NameType::_set_DnsName(::System::Security::Cryptography::X509Certificates::X509NameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_set_DnsName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509NameType", "DnsName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509NameType DnsFromAlternativeName
::System::Security::Cryptography::X509Certificates::X509NameType System::Security::Cryptography::X509Certificates::X509NameType::_get_DnsFromAlternativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_get_DnsFromAlternativeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509NameType>("System.Security.Cryptography.X509Certificates", "X509NameType", "DnsFromAlternativeName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509NameType DnsFromAlternativeName
void System::Security::Cryptography::X509Certificates::X509NameType::_set_DnsFromAlternativeName(::System::Security::Cryptography::X509Certificates::X509NameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_set_DnsFromAlternativeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509NameType", "DnsFromAlternativeName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509NameType UrlName
::System::Security::Cryptography::X509Certificates::X509NameType System::Security::Cryptography::X509Certificates::X509NameType::_get_UrlName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_get_UrlName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509NameType>("System.Security.Cryptography.X509Certificates", "X509NameType", "UrlName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509NameType UrlName
void System::Security::Cryptography::X509Certificates::X509NameType::_set_UrlName(::System::Security::Cryptography::X509Certificates::X509NameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_set_UrlName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509NameType", "UrlName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509NameType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509RevocationFlag
#include "System/Security/Cryptography/X509Certificates/X509RevocationFlag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509RevocationFlag EndCertificateOnly
::System::Security::Cryptography::X509Certificates::X509RevocationFlag System::Security::Cryptography::X509Certificates::X509RevocationFlag::_get_EndCertificateOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationFlag::_get_EndCertificateOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509RevocationFlag>("System.Security.Cryptography.X509Certificates", "X509RevocationFlag", "EndCertificateOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509RevocationFlag EndCertificateOnly
void System::Security::Cryptography::X509Certificates::X509RevocationFlag::_set_EndCertificateOnly(::System::Security::Cryptography::X509Certificates::X509RevocationFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationFlag::_set_EndCertificateOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509RevocationFlag", "EndCertificateOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509RevocationFlag EntireChain
::System::Security::Cryptography::X509Certificates::X509RevocationFlag System::Security::Cryptography::X509Certificates::X509RevocationFlag::_get_EntireChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationFlag::_get_EntireChain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509RevocationFlag>("System.Security.Cryptography.X509Certificates", "X509RevocationFlag", "EntireChain"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509RevocationFlag EntireChain
void System::Security::Cryptography::X509Certificates::X509RevocationFlag::_set_EntireChain(::System::Security::Cryptography::X509Certificates::X509RevocationFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationFlag::_set_EntireChain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509RevocationFlag", "EntireChain", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509RevocationFlag ExcludeRoot
::System::Security::Cryptography::X509Certificates::X509RevocationFlag System::Security::Cryptography::X509Certificates::X509RevocationFlag::_get_ExcludeRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationFlag::_get_ExcludeRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509RevocationFlag>("System.Security.Cryptography.X509Certificates", "X509RevocationFlag", "ExcludeRoot"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509RevocationFlag ExcludeRoot
void System::Security::Cryptography::X509Certificates::X509RevocationFlag::_set_ExcludeRoot(::System::Security::Cryptography::X509Certificates::X509RevocationFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationFlag::_set_ExcludeRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509RevocationFlag", "ExcludeRoot", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509RevocationFlag::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationFlag::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509RevocationMode
#include "System/Security/Cryptography/X509Certificates/X509RevocationMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509RevocationMode NoCheck
::System::Security::Cryptography::X509Certificates::X509RevocationMode System::Security::Cryptography::X509Certificates::X509RevocationMode::_get_NoCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationMode::_get_NoCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509RevocationMode>("System.Security.Cryptography.X509Certificates", "X509RevocationMode", "NoCheck"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509RevocationMode NoCheck
void System::Security::Cryptography::X509Certificates::X509RevocationMode::_set_NoCheck(::System::Security::Cryptography::X509Certificates::X509RevocationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationMode::_set_NoCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509RevocationMode", "NoCheck", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509RevocationMode Online
::System::Security::Cryptography::X509Certificates::X509RevocationMode System::Security::Cryptography::X509Certificates::X509RevocationMode::_get_Online() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationMode::_get_Online");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509RevocationMode>("System.Security.Cryptography.X509Certificates", "X509RevocationMode", "Online"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509RevocationMode Online
void System::Security::Cryptography::X509Certificates::X509RevocationMode::_set_Online(::System::Security::Cryptography::X509Certificates::X509RevocationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationMode::_set_Online");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509RevocationMode", "Online", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509RevocationMode Offline
::System::Security::Cryptography::X509Certificates::X509RevocationMode System::Security::Cryptography::X509Certificates::X509RevocationMode::_get_Offline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationMode::_get_Offline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509RevocationMode>("System.Security.Cryptography.X509Certificates", "X509RevocationMode", "Offline"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509RevocationMode Offline
void System::Security::Cryptography::X509Certificates::X509RevocationMode::_set_Offline(::System::Security::Cryptography::X509Certificates::X509RevocationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationMode::_set_Offline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509RevocationMode", "Offline", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509RevocationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm
#include "System/Security/Cryptography/X509Certificates/X509SubjectKeyIdentifierHashAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm Sha1
::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_get_Sha1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_get_Sha1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm>("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierHashAlgorithm", "Sha1"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm Sha1
void System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_set_Sha1(::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_set_Sha1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierHashAlgorithm", "Sha1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm ShortSha1
::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_get_ShortSha1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_get_ShortSha1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm>("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierHashAlgorithm", "ShortSha1"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm ShortSha1
void System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_set_ShortSha1(::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_set_ShortSha1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierHashAlgorithm", "ShortSha1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm CapiSha1
::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_get_CapiSha1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_get_CapiSha1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm>("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierHashAlgorithm", "CapiSha1"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm CapiSha1
void System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_set_CapiSha1(::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_set_CapiSha1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierHashAlgorithm", "CapiSha1", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509VerificationFlags
#include "System/Security/Cryptography/X509Certificates/X509VerificationFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags NoFlag
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_NoFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_NoFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "NoFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags NoFlag
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_NoFlag(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_NoFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "NoFlag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreNotTimeValid
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreNotTimeValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreNotTimeValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreNotTimeValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreNotTimeValid
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreNotTimeValid(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreNotTimeValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreNotTimeValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreCtlNotTimeValid
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreCtlNotTimeValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreCtlNotTimeValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreCtlNotTimeValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreCtlNotTimeValid
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreCtlNotTimeValid(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreCtlNotTimeValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreCtlNotTimeValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreNotTimeNested
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreNotTimeNested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreNotTimeNested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreNotTimeNested"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreNotTimeNested
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreNotTimeNested(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreNotTimeNested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreNotTimeNested", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreInvalidBasicConstraints
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreInvalidBasicConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreInvalidBasicConstraints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreInvalidBasicConstraints"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreInvalidBasicConstraints
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreInvalidBasicConstraints(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreInvalidBasicConstraints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreInvalidBasicConstraints", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags AllowUnknownCertificateAuthority
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_AllowUnknownCertificateAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_AllowUnknownCertificateAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "AllowUnknownCertificateAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags AllowUnknownCertificateAuthority
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_AllowUnknownCertificateAuthority(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_AllowUnknownCertificateAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "AllowUnknownCertificateAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreWrongUsage
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreWrongUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreWrongUsage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreWrongUsage"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreWrongUsage
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreWrongUsage(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreWrongUsage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreWrongUsage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreInvalidName
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreInvalidName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreInvalidName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreInvalidName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreInvalidName
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreInvalidName(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreInvalidName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreInvalidName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreInvalidPolicy
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreInvalidPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreInvalidPolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreInvalidPolicy"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreInvalidPolicy
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreInvalidPolicy(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreInvalidPolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreInvalidPolicy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreEndRevocationUnknown
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreEndRevocationUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreEndRevocationUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreEndRevocationUnknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreEndRevocationUnknown
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreEndRevocationUnknown(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreEndRevocationUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreEndRevocationUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreCtlSignerRevocationUnknown
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreCtlSignerRevocationUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreCtlSignerRevocationUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreCtlSignerRevocationUnknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreCtlSignerRevocationUnknown
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreCtlSignerRevocationUnknown(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreCtlSignerRevocationUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreCtlSignerRevocationUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreCertificateAuthorityRevocationUnknown
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreCertificateAuthorityRevocationUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreCertificateAuthorityRevocationUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreCertificateAuthorityRevocationUnknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreCertificateAuthorityRevocationUnknown
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreCertificateAuthorityRevocationUnknown(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreCertificateAuthorityRevocationUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreCertificateAuthorityRevocationUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreRootRevocationUnknown
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreRootRevocationUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreRootRevocationUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreRootRevocationUnknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreRootRevocationUnknown
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreRootRevocationUnknown(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreRootRevocationUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreRootRevocationUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags AllFlags
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_AllFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_AllFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "AllFlags"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags AllFlags
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_AllFlags(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_AllFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "AllFlags", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509VerificationFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.PublicKey
#include "System/Security/Cryptography/X509Certificates/PublicKey.hpp"
// Including type: System.Security.Cryptography.AsnEncodedData
#include "System/Security/Cryptography/AsnEncodedData.hpp"
// Including type: System.Security.Cryptography.Oid
#include "System/Security/Cryptography/Oid.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] Empty
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::PublicKey::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography.X509Certificates", "PublicKey", "Empty"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] Empty
void System::Security::Cryptography::X509Certificates::PublicKey::_set_Empty(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "PublicKey", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.AsnEncodedData _keyValue
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::AsnEncodedData*& System::Security::Cryptography::X509Certificates::PublicKey::dyn__keyValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::dyn__keyValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyValue"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::AsnEncodedData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.AsnEncodedData _params
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::AsnEncodedData*& System::Security::Cryptography::X509Certificates::PublicKey::dyn__params() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::dyn__params");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_params"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::AsnEncodedData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.Oid _oid
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::Oid*& System::Security::Cryptography::X509Certificates::PublicKey::dyn__oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::dyn__oid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oid"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::Oid**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.get_EncodedKeyValue
::System::Security::Cryptography::AsnEncodedData* System::Security::Cryptography::X509Certificates::PublicKey::get_EncodedKeyValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::get_EncodedKeyValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncodedKeyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsnEncodedData*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.get_EncodedParameters
::System::Security::Cryptography::AsnEncodedData* System::Security::Cryptography::X509Certificates::PublicKey::get_EncodedParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::get_EncodedParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncodedParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsnEncodedData*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.get_Key
::System::Security::Cryptography::AsymmetricAlgorithm* System::Security::Cryptography::X509Certificates::PublicKey::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::get_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.get_Oid
::System::Security::Cryptography::Oid* System::Security::Cryptography::X509Certificates::PublicKey::get_Oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::get_Oid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Oid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::Oid*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.GetUnsignedBigInteger
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::PublicKey::GetUnsignedBigInteger(::ArrayW<uint8_t> integer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::GetUnsignedBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "PublicKey", "GetUnsignedBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(integer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, integer);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.DecodeDSA
::System::Security::Cryptography::DSA* System::Security::Cryptography::X509Certificates::PublicKey::DecodeDSA(::ArrayW<uint8_t> rawPublicKey, ::ArrayW<uint8_t> rawParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::DecodeDSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "PublicKey", "DecodeDSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawPublicKey), ::il2cpp_utils::ExtractType(rawParameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawPublicKey, rawParameters);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.DecodeRSA
::System::Security::Cryptography::RSA* System::Security::Cryptography::X509Certificates::PublicKey::DecodeRSA(::ArrayW<uint8_t> rawPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::DecodeRSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "PublicKey", "DecodeRSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawPublicKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawPublicKey);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey..cctor
void System::Security::Cryptography::X509Certificates::PublicKey::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "PublicKey", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedName.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedNameFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::X509Certificates::X500DistinguishedName::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] canonEncoding
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::X509Certificates::X500DistinguishedName::dyn_canonEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::dyn_canonEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canonEncoding"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X500DistinguishedName.get_Name
::StringW System::Security::Cryptography::X509Certificates::X500DistinguishedName::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X500DistinguishedName.Decode
::StringW System::Security::Cryptography::X509Certificates::X500DistinguishedName::Decode(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, flag);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X500DistinguishedName.GetSeparator
::StringW System::Security::Cryptography::X509Certificates::X500DistinguishedName::GetSeparator(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::GetSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X500DistinguishedName", "GetSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flag);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X500DistinguishedName.DecodeRawData
void System::Security::Cryptography::X509Certificates::X500DistinguishedName::DecodeRawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::DecodeRawData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeRawData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X500DistinguishedName.Canonize
::StringW System::Security::Cryptography::X509Certificates::X500DistinguishedName::Canonize(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::Canonize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X500DistinguishedName", "Canonize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X500DistinguishedName.AreEqual
bool System::Security::Cryptography::X509Certificates::X500DistinguishedName::AreEqual(::System::Security::Cryptography::X509Certificates::X500DistinguishedName* name1, ::System::Security::Cryptography::X509Certificates::X500DistinguishedName* name2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X500DistinguishedName", "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name1), ::il2cpp_utils::ExtractType(name2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name1, name2);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X500DistinguishedName.Format
::StringW System::Security::Cryptography::X509Certificates::X500DistinguishedName::Format(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::Format");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsnEncodedData*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
#include "System/Security/Cryptography/X509Certificates/X509BasicConstraintsExtension.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String oid
::StringW System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::_get_oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::_get_oid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography.X509Certificates", "X509BasicConstraintsExtension", "oid"));
}
// Autogenerated static field setter
// Set static field: static System.String oid
void System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::_set_oid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::_set_oid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509BasicConstraintsExtension", "oid", value));
}
// Autogenerated static field getter
// Get static field: static System.String friendlyName
::StringW System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::_get_friendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::_get_friendlyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography.X509Certificates", "X509BasicConstraintsExtension", "friendlyName"));
}
// Autogenerated static field setter
// Set static field: static System.String friendlyName
void System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::_set_friendlyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::_set_friendlyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509BasicConstraintsExtension", "friendlyName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _certificateAuthority
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::dyn__certificateAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::dyn__certificateAuthority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certificateAuthority"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasPathLengthConstraint
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::dyn__hasPathLengthConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::dyn__hasPathLengthConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasPathLengthConstraint"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pathLengthConstraint
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::dyn__pathLengthConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::dyn__pathLengthConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pathLengthConstraint"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.AsnDecodeStatus _status
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::AsnDecodeStatus& System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::dyn__status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::dyn__status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_status"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::AsnDecodeStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.get_CertificateAuthority
bool System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::get_CertificateAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::get_CertificateAuthority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateAuthority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.get_HasPathLengthConstraint
bool System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::get_HasPathLengthConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::get_HasPathLengthConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasPathLengthConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.get_PathLengthConstraint
int System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::get_PathLengthConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::get_PathLengthConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PathLengthConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.Decode
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::Decode(::ArrayW<uint8_t> extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extension)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsnDecodeStatus, false>(this, ___internal__method, extension);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.Encode
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::Encode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom
void System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::CopyFrom(::System::Security::Cryptography::AsnEncodedData* asnEncodedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::CopyFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Extension*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asnEncodedData);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.ToString
::StringW System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::ToString(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsnEncodedData*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: System.Security.Cryptography.Oid
#include "System/Security/Cryptography/Oid.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedName.hpp"
// Including type: System.Security.Cryptography.X509Certificates.PublicKey
#include "System/Security/Cryptography/X509Certificates/PublicKey.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
#include "System/Security/Cryptography/X509Certificates/X509ExtensionCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Impl
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Impl.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ContentType
#include "System/Security/Cryptography/X509Certificates/X509ContentType.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509NameType
#include "System/Security/Cryptography/X509Certificates/X509NameType.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Extension
#include "System/Security/Cryptography/X509Certificates/X509Extension.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] lazyRawData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_lazyRawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_lazyRawData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazyRawData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.Oid lazySignatureAlgorithm
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::Oid*& System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_lazySignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_lazySignatureAlgorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazySignatureAlgorithm"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::Oid**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lazyVersion
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_lazyVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_lazyVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazyVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X500DistinguishedName lazySubjectName
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X500DistinguishedName*& System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_lazySubjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_lazySubjectName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazySubjectName"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X500DistinguishedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X500DistinguishedName lazyIssuerName
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X500DistinguishedName*& System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_lazyIssuerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_lazyIssuerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazyIssuerName"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X500DistinguishedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.PublicKey lazyPublicKey
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::PublicKey*& System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_lazyPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_lazyPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazyPublicKey"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::PublicKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.AsymmetricAlgorithm lazyPrivateKey
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::AsymmetricAlgorithm*& System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_lazyPrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_lazyPrivateKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazyPrivateKey"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::AsymmetricAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ExtensionCollection lazyExtensions
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509ExtensionCollection*& System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_lazyExtensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_lazyExtensions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lazyExtensions"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509ExtensionCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_Extensions
::System::Security::Cryptography::X509Certificates::X509ExtensionCollection* System::Security::Cryptography::X509Certificates::X509Certificate2::get_Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_Extensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Extensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ExtensionCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_HasPrivateKey
bool System::Security::Cryptography::X509Certificates::X509Certificate2::get_HasPrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_HasPrivateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasPrivateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_PrivateKey
::System::Security::Cryptography::AsymmetricAlgorithm* System::Security::Cryptography::X509Certificates::X509Certificate2::get_PrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_PrivateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_IssuerName
::System::Security::Cryptography::X509Certificates::X500DistinguishedName* System::Security::Cryptography::X509Certificates::X509Certificate2::get_IssuerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_IssuerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IssuerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X500DistinguishedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_NotAfter
::System::DateTime System::Security::Cryptography::X509Certificates::X509Certificate2::get_NotAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_NotAfter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NotAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_NotBefore
::System::DateTime System::Security::Cryptography::X509Certificates::X509Certificate2::get_NotBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_NotBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NotBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_PublicKey
::System::Security::Cryptography::X509Certificates::PublicKey* System::Security::Cryptography::X509Certificates::X509Certificate2::get_PublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_PublicKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::PublicKey*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_RawData
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2::get_RawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_RawData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RawData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_SerialNumber
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2::get_SerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_SerialNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SerialNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_SignatureAlgorithm
::System::Security::Cryptography::Oid* System::Security::Cryptography::X509Certificates::X509Certificate2::get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_SignatureAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SignatureAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::Oid*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_SubjectName
::System::Security::Cryptography::X509Certificates::X500DistinguishedName* System::Security::Cryptography::X509Certificates::X509Certificate2::get_SubjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_SubjectName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X500DistinguishedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_Thumbprint
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2::get_Thumbprint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_Thumbprint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Thumbprint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_Version
int System::Security::Cryptography::X509Certificates::X509Certificate2::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType
::System::Security::Cryptography::X509Certificates::X509ContentType System::Security::Cryptography::X509Certificates::X509Certificate2::GetCertContentType(::ArrayW<uint8_t> rawData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::GetCertContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Certificate2", "GetCertContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ContentType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawData);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2::GetNameInfo(::System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::GetNameInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNameInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameType), ::il2cpp_utils::ExtractType(forIssuer)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, nameType, forIssuer);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
bool System::Security::Cryptography::X509Certificates::X509Certificate2::Verify() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::Verify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Verify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.CreateCustomExtensionIfAny
::System::Security::Cryptography::X509Certificates::X509Extension* System::Security::Cryptography::X509Certificates::X509Certificate2::CreateCustomExtensionIfAny(::System::Security::Cryptography::Oid* oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::CreateCustomExtensionIfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Certificate2", "CreateCustomExtensionIfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Extension*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oid);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_Impl
::System::Security::Cryptography::X509Certificates::X509Certificate2Impl* System::Security::Cryptography::X509Certificates::X509Certificate2::get_Impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_Impl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
void System::Security::Cryptography::X509Certificates::X509Certificate2::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2::ToString(bool verbose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, verbose);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Collection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509FindType
#include "System/Security/Cryptography/X509Certificates/X509FindType.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] newline_split
::ArrayW<::StringW> System::Security::Cryptography::X509Certificates::X509Certificate2Collection::_get_newline_split() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::_get_newline_split");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Security.Cryptography.X509Certificates", "X509Certificate2Collection", "newline_split"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] newline_split
void System::Security::Cryptography::X509Certificates::X509Certificate2Collection::_set_newline_split(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::_set_newline_split");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509Certificate2Collection", "newline_split", value));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.get_Item
::System::Security::Cryptography::X509Certificates::X509Certificate2* System::Security::Cryptography::X509Certificates::X509Certificate2Collection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Add
int System::Security::Cryptography::X509Certificates::X509Certificate2Collection::Add(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange
void System::Security::Cryptography::X509Certificates::X509Certificate2Collection::AddRange(::System::Security::Cryptography::X509Certificates::X509Certificate2Collection* certificates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::AddRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, certificates);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Contains
bool System::Security::Cryptography::X509Certificates::X509Certificate2Collection::Contains(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.GetKeyIdentifier
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2Collection::GetKeyIdentifier(::System::Security::Cryptography::X509Certificates::X509Certificate2* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::GetKeyIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeyIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find
::System::Security::Cryptography::X509Certificates::X509Certificate2Collection* System::Security::Cryptography::X509Certificates::X509Certificate2Collection::Find(::System::Security::Cryptography::X509Certificates::X509FindType findType, ::Il2CppObject* findValue, bool validOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(findType), ::il2cpp_utils::ExtractType(findValue), ::il2cpp_utils::ExtractType(validOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*, false>(this, ___internal__method, findType, findValue, validOnly);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.GetEnumerator
::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator* System::Security::Cryptography::X509Certificates::X509Certificate2Collection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Collection..cctor
void System::Security::Cryptography::X509Certificates::X509Certificate2Collection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Certificate2Collection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Enumerator.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Collection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator enumerator
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::dyn_enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::dyn_enumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enumerator"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.get_Current
::System::Security::Cryptography::X509Certificates::X509Certificate2* System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.MoveNext
bool System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.System.Collections.IEnumerator.MoveNext
bool System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::System_Collections_IEnumerator_MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::System.Collections.IEnumerator.MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.System.Collections.IEnumerator.Reset
void System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Impl
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Impl.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Extension
#include "System/Security/Cryptography/X509Certificates/X509Extension.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedName.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateImplCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509NameType
#include "System/Security/Cryptography/X509Certificates/X509NameType.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.get_Extensions
::System::Collections::Generic::IEnumerable_1<::System::Security::Cryptography::X509Certificates::X509Extension*>* System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_Extensions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Security::Cryptography::X509Certificates::X509Extension*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.get_IssuerName
::System::Security::Cryptography::X509Certificates::X500DistinguishedName* System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_IssuerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_IssuerName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X500DistinguishedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.get_PrivateKey
::System::Security::Cryptography::AsymmetricAlgorithm* System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_PrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_PrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.set_PrivateKey
void System::Security::Cryptography::X509Certificates::X509Certificate2Impl::set_PrivateKey(::System::Security::Cryptography::AsymmetricAlgorithm* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::set_PrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.get_SignatureAlgorithm
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_SignatureAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.get_SubjectName
::System::Security::Cryptography::X509Certificates::X500DistinguishedName* System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_SubjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_SubjectName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X500DistinguishedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.get_Version
int System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_Version");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.get_IntermediateCertificates
::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection* System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_IntermediateCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_IntermediateCertificates");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.GetNameInfo
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2Impl::GetNameInfo(::System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::GetNameInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, nameType, forIssuer);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.Verify
bool System::Security::Cryptography::X509Certificates::X509Certificate2Impl::Verify(::System::Security::Cryptography::X509Certificates::X509Certificate2* thisCertificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::Verify");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, thisCertificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.AppendPrivateKeyInfo
void System::Security::Cryptography::X509Certificates::X509Certificate2Impl::AppendPrivateKeyInfo(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::AppendPrivateKeyInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.CopyWithPrivateKey
::System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509Certificate2Impl::CopyWithPrivateKey(::System::Security::Cryptography::RSA* privateKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::CopyWithPrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(this, ___internal__method, privateKey);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono
#include "System/Security/Cryptography/X509Certificates/X509Certificate2ImplMono.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateImplCollection.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafePasswordHandle
#include "Microsoft/Win32/SafeHandles/SafePasswordHandle.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String empty_error
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_get_empty_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_get_empty_error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "empty_error"));
}
// Autogenerated static field setter
// Set static field: static private System.String empty_error
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_set_empty_error(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_set_empty_error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "empty_error", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] signedData
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_get_signedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_get_signedData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "signedData"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] signedData
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_set_signedData(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_set_signedData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "signedData", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509CertificateImplCollection intermediateCerts
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection*& System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn_intermediateCerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn_intermediateCerts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intermediateCerts"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.X509.X509Certificate _cert
[[deprecated("Use field access instead!")]] ::Mono::Security::X509::X509Certificate*& System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn__cert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn__cert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cert"))->offset;
  return *reinterpret_cast<::Mono::Security::X509::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_Cert
::Mono::Security::X509::X509Certificate* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_Cert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_Cert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.ImportPkcs12
::Mono::Security::X509::X509Certificate* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::ImportPkcs12(::ArrayW<uint8_t> rawData, ::Microsoft::Win32::SafeHandles::SafePasswordHandle* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::ImportPkcs12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportPkcs12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Certificate*, false>(this, ___internal__method, rawData, password);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.ImportPkcs12
::Mono::Security::X509::X509Certificate* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::ImportPkcs12(::ArrayW<uint8_t> rawData, ::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::ImportPkcs12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportPkcs12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Certificate*, false>(this, ___internal__method, rawData, password);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_MonoCertificate
::Mono::Security::X509::X509Certificate* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_MonoCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_MonoCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MonoCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono..cctor
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_IsValid
bool System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.Clone
::System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetRawCertData
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetRawCertData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetRawCertData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_HasPrivateKey
bool System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_HasPrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_HasPrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_PrivateKey
::System::Security::Cryptography::AsymmetricAlgorithm* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_PrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_PrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.set_PrivateKey
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::set_PrivateKey(::System::Security::Cryptography::AsymmetricAlgorithm* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::set_PrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetRSAPrivateKey
::System::Security::Cryptography::RSA* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetRSAPrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetRSAPrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetDSAPrivateKey
::System::Security::Cryptography::DSA* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetDSAPrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetDSAPrivateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.Verify
bool System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Verify(::System::Security::Cryptography::X509Certificates::X509Certificate2* thisCertificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Verify");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, thisCertificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_IntermediateCertificates
::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_IntermediateCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_IntermediateCertificates");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix
#include "System/Security/Cryptography/X509Certificates/X509Certificate2ImplUnix.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedName.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509NameType
#include "System/Security/Cryptography/X509Certificates/X509NameType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Extension
#include "System/Security/Cryptography/X509Certificates/X509Extension.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean readCertData
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::dyn_readCertData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::dyn_readCertData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readCertData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Internal.Cryptography.Pal.CertificateData certData
[[deprecated("Use field access instead!")]] ::Internal::Cryptography::Pal::CertificateData& System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::dyn_certData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::dyn_certData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certData"))->offset;
  return *reinterpret_cast<::Internal::Cryptography::Pal::CertificateData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.EnsureCertData
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::EnsureCertData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::EnsureCertData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCertData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.GetRawCertData
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::GetRawCertData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::GetRawCertData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.get_KeyAlgorithm
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_KeyAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_KeyAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.get_KeyAlgorithmParameters
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_KeyAlgorithmParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_KeyAlgorithmParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.get_PublicKeyValue
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_PublicKeyValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_PublicKeyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.get_SerialNumber
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_SerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_SerialNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.get_SignatureAlgorithm
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_SignatureAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.get_Version
int System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_Version");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.get_SubjectName
::System::Security::Cryptography::X509Certificates::X500DistinguishedName* System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_SubjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_SubjectName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X500DistinguishedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.get_IssuerName
::System::Security::Cryptography::X509Certificates::X500DistinguishedName* System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_IssuerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_IssuerName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X500DistinguishedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.get_Subject
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_Subject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_Subject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.get_Issuer
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_Issuer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_Issuer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.get_RawData
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_RawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_RawData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.get_Thumbprint
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_Thumbprint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_Thumbprint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.GetNameInfo
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::GetNameInfo(::System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::GetNameInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, nameType, forIssuer);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.get_Extensions
::System::Collections::Generic::IEnumerable_1<::System::Security::Cryptography::X509Certificates::X509Extension*>* System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_Extensions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Security::Cryptography::X509Certificates::X509Extension*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.get_NotAfter
::System::DateTime System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_NotAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_NotAfter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.get_NotBefore
::System::DateTime System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_NotBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::get_NotBefore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImpl*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix.AppendPrivateKeyInfo
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::AppendPrivateKeyInfo(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplUnix::AppendPrivateKeyInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection/X509CertificateEnumerator
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection_X509CertificateEnumerator.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection.get_Item
::System::Security::Cryptography::X509Certificates::X509Certificate* System::Security::Cryptography::X509Certificates::X509CertificateCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange
void System::Security::Cryptography::X509Certificates::X509CertificateCollection::AddRange(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::AddRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetEnumerator
::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator* System::Security::Cryptography::X509Certificates::X509CertificateCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode
int System::Security::Cryptography::X509Certificates::X509CertificateCollection::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection/X509CertificateEnumerator
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection_X509CertificateEnumerator.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator enumerator
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::dyn_enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::dyn_enumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enumerator"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection/X509CertificateEnumerator.get_Current
::System::Security::Cryptography::X509Certificates::X509Certificate* System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection/X509CertificateEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection/X509CertificateEnumerator.System.Collections.IEnumerator.MoveNext
bool System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::System.Collections.IEnumerator.MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection/X509CertificateEnumerator.System.Collections.IEnumerator.Reset
void System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection/X509CertificateEnumerator.MoveNext
bool System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateImplCollection.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImpl
#include "System/Security/Cryptography/X509Certificates/X509CertificateImpl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Security.Cryptography.X509Certificates.X509CertificateImpl> list
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*>*& System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection.get_Count
int System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection.get_Item
::System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection.Add
void System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Add(::System::Security::Cryptography::X509Certificates::X509CertificateImpl* impl, bool takeOwnership) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impl), ::il2cpp_utils::ExtractType(takeOwnership)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, impl, takeOwnership);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection.Clone
::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection* System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection.Dispose
void System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection.Dispose
void System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection.Finalize
void System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainImpl
#include "System/Security/Cryptography/X509Certificates/X509ChainImpl.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
#include "System/Security/Cryptography/X509Certificates/X509ChainElementCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
#include "System/Security/Cryptography/X509Certificates/X509ChainPolicy.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainImpl impl
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509ChainImpl*& System::Security::Cryptography::X509Certificates::X509Chain::dyn_impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::dyn_impl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "impl"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509ChainImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.get_Impl
::System::Security::Cryptography::X509Certificates::X509ChainImpl* System::Security::Cryptography::X509Certificates::X509Chain::get_Impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::get_Impl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainImpl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.get_ChainElements
::System::Security::Cryptography::X509Certificates::X509ChainElementCollection* System::Security::Cryptography::X509Certificates::X509Chain::get_ChainElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::get_ChainElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChainElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainElementCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.get_ChainPolicy
::System::Security::Cryptography::X509Certificates::X509ChainPolicy* System::Security::Cryptography::X509Certificates::X509Chain::get_ChainPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::get_ChainPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChainPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainPolicy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.Build
bool System::Security::Cryptography::X509Certificates::X509Chain::Build(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::Build");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.Reset
void System::Security::Cryptography::X509Certificates::X509Chain::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.Create
::System::Security::Cryptography::X509Certificates::X509Chain* System::Security::Cryptography::X509Certificates::X509Chain::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Chain", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Chain*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.Dispose
void System::Security::Cryptography::X509Certificates::X509Chain::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Chain*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.Dispose
void System::Security::Cryptography::X509Certificates::X509Chain::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Chain*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.Finalize
void System::Security::Cryptography::X509Certificates::X509Chain::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElement
#include "System/Security/Cryptography/X509Certificates/X509ChainElement.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate2 certificate
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate2*& System::Security::Cryptography::X509Certificates::X509ChainElement::dyn_certificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::dyn_certificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificate"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainStatus[] status
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus>& System::Security::Cryptography::X509Certificates::X509ChainElement::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::dyn_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String info
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::X509Certificates::X509ChainElement::dyn_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::dyn_info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "info"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainStatusFlags compressed_status_flags
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags& System::Security::Cryptography::X509Certificates::X509ChainElement::dyn_compressed_status_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::dyn_compressed_status_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compressed_status_flags"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElement.get_Certificate
::System::Security::Cryptography::X509Certificates::X509Certificate2* System::Security::Cryptography::X509Certificates::X509ChainElement::get_Certificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::get_Certificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Certificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElement.get_ChainElementStatus
::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus> System::Security::Cryptography::X509Certificates::X509ChainElement::get_ChainElementStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::get_ChainElementStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChainElementStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElement.get_StatusFlags
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainElement::get_StatusFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::get_StatusFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElement.set_StatusFlags
void System::Security::Cryptography::X509Certificates::X509ChainElement::set_StatusFlags(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::set_StatusFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatusFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElement.Count
int System::Security::Cryptography::X509Certificates::X509ChainElement::Count(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElement.Set
void System::Security::Cryptography::X509Certificates::X509ChainElement::Set(::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus> status, ByRef<int> position, ::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags flags, ::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(mask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, status, byref(position), flags, mask);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElement.UncompressFlags
void System::Security::Cryptography::X509Certificates::X509ChainElement::UncompressFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::UncompressFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UncompressFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
#include "System/Security/Cryptography/X509Certificates/X509ChainElementCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElement
#include "System/Security/Cryptography/X509Certificates/X509ChainElement.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator
#include "System/Security/Cryptography/X509Certificates/X509ChainElementEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::Cryptography::X509Certificates::X509ChainElementCollection::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.get_Count
int System::Security::Cryptography::X509Certificates::X509ChainElementCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainElementCollection*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.get_IsSynchronized
bool System::Security::Cryptography::X509Certificates::X509ChainElementCollection::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainElementCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.get_Item
::System::Security::Cryptography::X509Certificates::X509ChainElement* System::Security::Cryptography::X509Certificates::X509ChainElementCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainElement*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.get_SyncRoot
::Il2CppObject* System::Security::Cryptography::X509Certificates::X509ChainElementCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainElementCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.System.Collections.ICollection.CopyTo
void System::Security::Cryptography::X509Certificates::X509ChainElementCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainElementCollection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.GetEnumerator
::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator* System::Security::Cryptography::X509Certificates::X509ChainElementCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Security::Cryptography::X509Certificates::X509ChainElementCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainElementCollection*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.Add
void System::Security::Cryptography::X509Certificates::X509ChainElementCollection::Add(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.Clear
void System::Security::Cryptography::X509Certificates::X509ChainElementCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.Contains
bool System::Security::Cryptography::X509Certificates::X509ChainElementCollection::Contains(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator
#include "System/Security/Cryptography/X509Certificates/X509ChainElementEnumerator.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElement
#include "System/Security/Cryptography/X509Certificates/X509ChainElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator enumerator
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::dyn_enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::dyn_enumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enumerator"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.get_Current
::System::Security::Cryptography::X509Certificates::X509ChainElement* System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.MoveNext
bool System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.Reset
void System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainImpl
#include "System/Security/Cryptography/X509Certificates/X509ChainImpl.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
#include "System/Security/Cryptography/X509Certificates/X509ChainElementCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
#include "System/Security/Cryptography/X509Certificates/X509ChainPolicy.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
#include "System/Security/Cryptography/X509Certificates/X509ChainStatusFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.get_IsValid
bool System::Security::Cryptography::X509Certificates::X509ChainImpl::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::get_IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.ThrowIfContextInvalid
void System::Security::Cryptography::X509Certificates::X509ChainImpl::ThrowIfContextInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::ThrowIfContextInvalid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfContextInvalid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.get_ChainElements
::System::Security::Cryptography::X509Certificates::X509ChainElementCollection* System::Security::Cryptography::X509Certificates::X509ChainImpl::get_ChainElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::get_ChainElements");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainElementCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.get_ChainPolicy
::System::Security::Cryptography::X509Certificates::X509ChainPolicy* System::Security::Cryptography::X509Certificates::X509ChainImpl::get_ChainPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::get_ChainPolicy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainPolicy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.Build
bool System::Security::Cryptography::X509Certificates::X509ChainImpl::Build(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::Build");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.AddStatus
void System::Security::Cryptography::X509Certificates::X509ChainImpl::AddStatus(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::AddStatus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorCode);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.Reset
void System::Security::Cryptography::X509Certificates::X509ChainImpl::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.Dispose
void System::Security::Cryptography::X509Certificates::X509ChainImpl::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.Dispose
void System::Security::Cryptography::X509Certificates::X509ChainImpl::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.Finalize
void System::Security::Cryptography::X509Certificates::X509ChainImpl::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509ChainImplMono
#include "System/Security/Cryptography/X509Certificates/X509ChainImplMono.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
#include "System/Security/Cryptography/X509Certificates/X509ChainElementCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
#include "System/Security/Cryptography/X509Certificates/X509ChainPolicy.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedName.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElement
#include "System/Security/Cryptography/X509Certificates/X509ChainElement.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Collection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Store
#include "System/Security/Cryptography/X509Certificates/X509Store.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: Mono.Security.X509.X509Crl/X509CrlEntry
#include "Mono/Security/X509/X509Crl_X509CrlEntry.hpp"
// Including type: Mono.Security.X509.X509Extension
#include "Mono/Security/X509/X509Extension.hpp"
// Including type: Mono.Security.X509.X509Store
#include "Mono/Security/X509/X509Store.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.X509Certificates.X509ChainStatus[] Empty
::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus> System::Security::Cryptography::X509Certificates::X509ChainImplMono::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus>>("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "Empty"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.X509Certificates.X509ChainStatus[] Empty
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::_set_Empty(::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.StoreLocation location
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::StoreLocation& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_location");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "location"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::StoreLocation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainElementCollection elements
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509ChainElementCollection*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elements"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509ChainElementCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainPolicy policy
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509ChainPolicy*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_policy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "policy"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509ChainPolicy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainStatus[] status
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus>& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 max_path_length
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_max_path_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_max_path_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max_path_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X500DistinguishedName working_issuer_name
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X500DistinguishedName*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_working_issuer_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_working_issuer_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "working_issuer_name"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X500DistinguishedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.AsymmetricAlgorithm working_public_key
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::AsymmetricAlgorithm*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_working_public_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_working_public_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "working_public_key"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::AsymmetricAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainElement bce_restriction
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509ChainElement*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_bce_restriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_bce_restriction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bce_restriction"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509ChainElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate2Collection roots
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_roots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_roots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roots"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate2Collection cas
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_cas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_cas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cas"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Store root_store
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Store*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_root_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_root_store");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root_store"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Store**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Store ca_store
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Store*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_ca_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_ca_store");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ca_store"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Store**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Store user_root_store
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Store*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_user_root_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_user_root_store");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "user_root_store"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Store**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Store user_ca_store
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Store*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_user_ca_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_user_ca_store");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "user_ca_store"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Store**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate2Collection collection
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_collection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_collection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collection"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_Roots
::System::Security::Cryptography::X509Certificates::X509Certificate2Collection* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_Roots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_Roots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Roots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_CertificateAuthorities
::System::Security::Cryptography::X509Certificates::X509Certificate2Collection* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_CertificateAuthorities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_CertificateAuthorities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateAuthorities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_LMRootStore
::System::Security::Cryptography::X509Certificates::X509Store* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_LMRootStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_LMRootStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LMRootStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Store*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_UserRootStore
::System::Security::Cryptography::X509Certificates::X509Store* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_UserRootStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_UserRootStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserRootStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Store*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_LMCAStore
::System::Security::Cryptography::X509Certificates::X509Store* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_LMCAStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_LMCAStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LMCAStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Store*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_UserCAStore
::System::Security::Cryptography::X509Certificates::X509Store* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_UserCAStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_UserCAStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserCAStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Store*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_CertificateCollection
::System::Security::Cryptography::X509Certificates::X509Certificate2Collection* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_CertificateCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_CertificateCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.BuildChainFrom
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainImplMono::BuildChainFrom(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::BuildChainFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildChainFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.SelectBestFromCollection
::System::Security::Cryptography::X509Certificates::X509Certificate2* System::Security::Cryptography::X509Certificates::X509ChainImplMono::SelectBestFromCollection(::System::Security::Cryptography::X509Certificates::X509Certificate2* child, ::System::Security::Cryptography::X509Certificates::X509Certificate2Collection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::SelectBestFromCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectBestFromCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2*, false>(this, ___internal__method, child, c);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.FindParent
::System::Security::Cryptography::X509Certificates::X509Certificate2* System::Security::Cryptography::X509Certificates::X509ChainImplMono::FindParent(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::FindParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2*, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.IsChainComplete
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::IsChainComplete(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::IsChainComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsChainComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.IsSelfIssued
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::IsSelfIssued(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::IsSelfIssued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSelfIssued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.ValidateChain
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::ValidateChain(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::ValidateChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flag);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.Process
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::Process(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.PrepareForNextCertificate
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::PrepareForNextCertificate(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::PrepareForNextCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareForNextCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.WrapUp
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::WrapUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::WrapUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WrapUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.ProcessCertificateExtensions
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::ProcessCertificateExtensions(::System::Security::Cryptography::X509Certificates::X509ChainElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::ProcessCertificateExtensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessCertificateExtensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.IsSignedWith
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::IsSignedWith(::System::Security::Cryptography::X509Certificates::X509Certificate2* _signed, ::System::Security::Cryptography::AsymmetricAlgorithm* pubkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::IsSignedWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSignedWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_signed), ::il2cpp_utils::ExtractType(pubkey)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, _signed, pubkey);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.GetSubjectKeyIdentifier
::StringW System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetSubjectKeyIdentifier(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetSubjectKeyIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubjectKeyIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.GetAuthorityKeyIdentifier
::StringW System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetAuthorityKeyIdentifier(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetAuthorityKeyIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "GetAuthorityKeyIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.GetAuthorityKeyIdentifier
::StringW System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetAuthorityKeyIdentifier(::Mono::Security::X509::X509Crl* crl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetAuthorityKeyIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "GetAuthorityKeyIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(crl)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, crl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.GetAuthorityKeyIdentifier
::StringW System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetAuthorityKeyIdentifier(::Mono::Security::X509::X509Extension* ext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetAuthorityKeyIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "GetAuthorityKeyIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ext)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ext);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.CheckRevocationOnChain
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckRevocationOnChain(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckRevocationOnChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRevocationOnChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flag);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.CheckRevocation
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckRevocation(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, int ca, bool online) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckRevocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRevocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(ca), ::il2cpp_utils::ExtractType(online)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags, false>(this, ___internal__method, certificate, ca, online);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.CheckRevocation
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckRevocation(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::System::Security::Cryptography::X509Certificates::X509Certificate2* ca_cert, bool online) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckRevocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRevocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(ca_cert), ::il2cpp_utils::ExtractType(online)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags, false>(this, ___internal__method, certificate, ca_cert, online);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.CheckCrls
::Mono::Security::X509::X509Crl* System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckCrls(::StringW subject, ::StringW ski, ::Mono::Security::X509::X509Store* store) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckCrls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "CheckCrls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subject), ::il2cpp_utils::ExtractType(ski), ::il2cpp_utils::ExtractType(store)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Crl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, subject, ski, store);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.FindCrl
::Mono::Security::X509::X509Crl* System::Security::Cryptography::X509Certificates::X509ChainImplMono::FindCrl(::System::Security::Cryptography::X509Certificates::X509Certificate2* caCertificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::FindCrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caCertificate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Crl*, false>(this, ___internal__method, caCertificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.ProcessCrlExtensions
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::ProcessCrlExtensions(::Mono::Security::X509::X509Crl* crl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::ProcessCrlExtensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessCrlExtensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(crl)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, crl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.ProcessCrlEntryExtensions
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::ProcessCrlEntryExtensions(::Mono::Security::X509::X509Crl::X509CrlEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::ProcessCrlEntryExtensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessCrlEntryExtensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entry);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono..cctor
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_IsValid
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_ChainElements
::System::Security::Cryptography::X509Certificates::X509ChainElementCollection* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_ChainElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_ChainElements");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainElementCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_ChainPolicy
::System::Security::Cryptography::X509Certificates::X509ChainPolicy* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_ChainPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_ChainPolicy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainPolicy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.AddStatus
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::AddStatus(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::AddStatus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.Build
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::Build(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::Build");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.Reset
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
#include "System/Security/Cryptography/X509Certificates/X509ChainPolicy.hpp"
// Including type: System.Security.Cryptography.OidCollection
#include "System/Security/Cryptography/OidCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Collection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.OidCollection apps
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::OidCollection*& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_apps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_apps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "apps"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::OidCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.OidCollection cert
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::OidCollection*& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_cert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_cert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cert"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::OidCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509CertificateCollection store
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509CertificateCollection*& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_store");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "store"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate2Collection store2
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_store2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_store2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "store2"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509RevocationFlag rflag
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509RevocationFlag& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_rflag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_rflag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rflag"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509RevocationFlag*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509RevocationMode mode
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509RevocationMode& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509RevocationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TimeSpan timeout
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeout"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509VerificationFlags vflags
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509VerificationFlags& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_vflags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_vflags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vflags"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509VerificationFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime vtime
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_vtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_vtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vtime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.get_ExtraStore
::System::Security::Cryptography::X509Certificates::X509Certificate2Collection* System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_ExtraStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_ExtraStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExtraStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.get_RevocationFlag
::System::Security::Cryptography::X509Certificates::X509RevocationFlag System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_RevocationFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_RevocationFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RevocationFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509RevocationFlag, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.get_RevocationMode
::System::Security::Cryptography::X509Certificates::X509RevocationMode System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_RevocationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_RevocationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RevocationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509RevocationMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.set_RevocationMode
void System::Security::Cryptography::X509Certificates::X509ChainPolicy::set_RevocationMode(::System::Security::Cryptography::X509Certificates::X509RevocationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::set_RevocationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RevocationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.get_VerificationFlags
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_VerificationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_VerificationFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VerificationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509VerificationFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.set_VerificationFlags
void System::Security::Cryptography::X509Certificates::X509ChainPolicy::set_VerificationFlags(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::set_VerificationFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VerificationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.get_VerificationTime
::System::DateTime System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_VerificationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_VerificationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VerificationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.Reset
void System::Security::Cryptography::X509Certificates::X509ChainPolicy::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509ChainStatus
#include "System/Security/Cryptography/X509Certificates/X509ChainStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainStatusFlags status
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags& System::Security::Cryptography::X509Certificates::X509ChainStatus::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatus::dyn_status");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String info
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::X509Certificates::X509ChainStatus::dyn_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatus::dyn_info");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "info"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainStatus..ctor
System::Security::Cryptography::X509Certificates::X509ChainStatus::X509ChainStatus(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatus::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flag);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainStatus.get_Status
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatus::get_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatus::get_Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainStatus.set_Status
void System::Security::Cryptography::X509Certificates::X509ChainStatus::set_Status(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatus::set_Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainStatus.set_StatusInformation
void System::Security::Cryptography::X509Certificates::X509ChainStatus::set_StatusInformation(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatus::set_StatusInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_StatusInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainStatus.GetInformation
::StringW System::Security::Cryptography::X509Certificates::X509ChainStatus::GetInformation(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatus::GetInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509ChainStatus", "GetInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension
#include "System/Security/Cryptography/X509Certificates/X509EnhancedKeyUsageExtension.hpp"
// Including type: System.Security.Cryptography.OidCollection
#include "System/Security/Cryptography/OidCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.OidCollection _enhKeyUsage
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::OidCollection*& System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::dyn__enhKeyUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::dyn__enhKeyUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enhKeyUsage"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::OidCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.AsnDecodeStatus _status
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::AsnDecodeStatus& System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::dyn__status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::dyn__status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_status"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::AsnDecodeStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.Decode
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::Decode(::ArrayW<uint8_t> extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extension)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsnDecodeStatus, false>(this, ___internal__method, extension);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.Encode
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::Encode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.CopyFrom
void System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::CopyFrom(::System::Security::Cryptography::AsnEncodedData* asnEncodedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::CopyFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Extension*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asnEncodedData);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.ToString
::StringW System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::ToString(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsnEncodedData*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Extension
#include "System/Security/Cryptography/X509Certificates/X509Extension.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _critical
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::X509Certificates::X509Extension::dyn__critical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Extension::dyn__critical");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_critical"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Extension.get_Critical
bool System::Security::Cryptography::X509Certificates::X509Extension::get_Critical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Extension::get_Critical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Critical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Extension.set_Critical
void System::Security::Cryptography::X509Certificates::X509Extension::set_Critical(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Extension::set_Critical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Critical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Extension.FormatUnkownData
::StringW System::Security::Cryptography::X509Certificates::X509Extension::FormatUnkownData(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Extension::FormatUnkownData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatUnkownData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom
void System::Security::Cryptography::X509Certificates::X509Extension::CopyFrom(::System::Security::Cryptography::AsnEncodedData* asnEncodedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Extension::CopyFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsnEncodedData*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asnEncodedData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
#include "System/Security/Cryptography/X509Certificates/X509ExtensionCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Extension
#include "System/Security/Cryptography/X509Certificates/X509Extension.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator
#include "System/Security/Cryptography/X509Certificates/X509ExtensionEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] Empty
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509ExtensionCollection::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography.X509Certificates", "X509ExtensionCollection", "Empty"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] Empty
void System::Security::Cryptography::X509Certificates::X509ExtensionCollection::_set_Empty(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ExtensionCollection", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::Cryptography::X509Certificates::X509ExtensionCollection::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection.get_Count
int System::Security::Cryptography::X509Certificates::X509ExtensionCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ExtensionCollection*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection.get_IsSynchronized
bool System::Security::Cryptography::X509Certificates::X509ExtensionCollection::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ExtensionCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection.get_SyncRoot
::Il2CppObject* System::Security::Cryptography::X509Certificates::X509ExtensionCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ExtensionCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection.get_Item
::System::Security::Cryptography::X509Certificates::X509Extension* System::Security::Cryptography::X509Certificates::X509ExtensionCollection::get_Item(::StringW oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Extension*, false>(this, ___internal__method, oid);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection.Add
int System::Security::Cryptography::X509Certificates::X509ExtensionCollection::Add(::System::Security::Cryptography::X509Certificates::X509Extension* extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extension)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, extension);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection.System.Collections.ICollection.CopyTo
void System::Security::Cryptography::X509Certificates::X509ExtensionCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ExtensionCollection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection.GetEnumerator
::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator* System::Security::Cryptography::X509Certificates::X509ExtensionCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Security::Cryptography::X509Certificates::X509ExtensionCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ExtensionCollection*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection..cctor
void System::Security::Cryptography::X509Certificates::X509ExtensionCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509ExtensionCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator
#include "System/Security/Cryptography/X509Certificates/X509ExtensionEnumerator.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Extension
#include "System/Security/Cryptography/X509Certificates/X509Extension.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator enumerator
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::dyn_enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::dyn_enumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enumerator"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.get_Current
::System::Security::Cryptography::X509Certificates::X509Extension* System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Extension*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.MoveNext
bool System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.Reset
void System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Helper2
#include "System/Security/Cryptography/X509Certificates/X509Helper2.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainImpl
#include "System/Security/Cryptography/X509Certificates/X509ChainImpl.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2.GetMonoCertificate
::Mono::Security::X509::X509Certificate* System::Security::Cryptography::X509Certificates::X509Helper2::GetMonoCertificate(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::GetMonoCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper2", "GetMonoCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Certificate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2.CreateChainImpl
::System::Security::Cryptography::X509Certificates::X509ChainImpl* System::Security::Cryptography::X509Certificates::X509Helper2::CreateChainImpl(bool useMachineContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::CreateChainImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper2", "CreateChainImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useMachineContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainImpl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, useMachineContext);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2.IsValid
bool System::Security::Cryptography::X509Certificates::X509Helper2::IsValid(::System::Security::Cryptography::X509Certificates::X509ChainImpl* impl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper2", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impl)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, impl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2.ThrowIfContextInvalid
void System::Security::Cryptography::X509Certificates::X509Helper2::ThrowIfContextInvalid(::System::Security::Cryptography::X509Certificates::X509ChainImpl* impl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::ThrowIfContextInvalid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper2", "ThrowIfContextInvalid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, impl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2.GetInvalidChainContextException
::System::Exception* System::Security::Cryptography::X509Certificates::X509Helper2::GetInvalidChainContextException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::GetInvalidChainContextException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper2", "GetInvalidChainContextException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2.GetSubjectNameHash
int64_t System::Security::Cryptography::X509Certificates::X509Helper2::GetSubjectNameHash(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::GetSubjectNameHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper2", "GetSubjectNameHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2.ExportAsPEM
void System::Security::Cryptography::X509Certificates::X509Helper2::ExportAsPEM(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::System::IO::Stream* stream, bool includeHumanReadableForm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::ExportAsPEM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper2", "ExportAsPEM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(includeHumanReadableForm)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, certificate, stream, includeHumanReadableForm);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension
#include "System/Security/Cryptography/X509Certificates/X509KeyUsageExtension.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String oid
::StringW System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_get_oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_get_oid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography.X509Certificates", "X509KeyUsageExtension", "oid"));
}
// Autogenerated static field setter
// Set static field: static System.String oid
void System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_set_oid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_set_oid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageExtension", "oid", value));
}
// Autogenerated static field getter
// Get static field: static System.String friendlyName
::StringW System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_get_friendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_get_friendlyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography.X509Certificates", "X509KeyUsageExtension", "friendlyName"));
}
// Autogenerated static field setter
// Set static field: static System.String friendlyName
void System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_set_friendlyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_set_friendlyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageExtension", "friendlyName", value));
}
// Autogenerated static field getter
// Get static field: static System.Security.Cryptography.X509Certificates.X509KeyUsageFlags all
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_get_all() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_get_all");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageExtension", "all"));
}
// Autogenerated static field setter
// Set static field: static System.Security.Cryptography.X509Certificates.X509KeyUsageFlags all
void System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_set_all(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_set_all");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageExtension", "all", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509KeyUsageFlags _keyUsages
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags& System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::dyn__keyUsages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::dyn__keyUsages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyUsages"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.AsnDecodeStatus _status
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::AsnDecodeStatus& System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::dyn__status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::dyn__status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_status"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::AsnDecodeStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.get_KeyUsages
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::get_KeyUsages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::get_KeyUsages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyUsages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.GetValidFlags
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::GetValidFlags(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::GetValidFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.Decode
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::Decode(::ArrayW<uint8_t> extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extension)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsnDecodeStatus, false>(this, ___internal__method, extension);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.Encode
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::Encode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.CopyFrom
void System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::CopyFrom(::System::Security::Cryptography::AsnEncodedData* asnEncodedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::CopyFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Extension*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asnEncodedData);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.ToString
::StringW System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::ToString(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsnEncodedData*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Store
#include "System/Security/Cryptography/X509Certificates/X509Store.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Collection.hpp"
// Including type: Mono.Security.X509.X509Store
#include "Mono/Security/X509/X509Store.hpp"
// Including type: Mono.Security.X509.X509Stores
#include "Mono/Security/X509/X509Stores.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::X509Certificates::X509Store::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.StoreLocation _location
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::StoreLocation& System::Security::Cryptography::X509Certificates::X509Store::dyn__location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::dyn__location");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_location"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::StoreLocation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate2Collection list
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*& System::Security::Cryptography::X509Certificates::X509Store::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.OpenFlags _flags
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::OpenFlags& System::Security::Cryptography::X509Certificates::X509Store::dyn__flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::dyn__flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flags"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::OpenFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.X509.X509Store store
[[deprecated("Use field access instead!")]] ::Mono::Security::X509::X509Store*& System::Security::Cryptography::X509Certificates::X509Store::dyn_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::dyn_store");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "store"))->offset;
  return *reinterpret_cast<::Mono::Security::X509::X509Store**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Store.get_Certificates
::System::Security::Cryptography::X509Certificates::X509Certificate2Collection* System::Security::Cryptography::X509Certificates::X509Store::get_Certificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::get_Certificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Certificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Store.get_Factory
::Mono::Security::X509::X509Stores* System::Security::Cryptography::X509Certificates::X509Store::get_Factory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::get_Factory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Factory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Stores*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Store.get_Store
::Mono::Security::X509::X509Store* System::Security::Cryptography::X509Certificates::X509Store::get_Store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::get_Store");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Store", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Store*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Store.Close
void System::Security::Cryptography::X509Certificates::X509Store::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Store.Dispose
void System::Security::Cryptography::X509Certificates::X509Store::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Store*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Store.Open
void System::Security::Cryptography::X509Certificates::X509Store::Open(::System::Security::Cryptography::X509Certificates::OpenFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flags);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension
#include "System/Security/Cryptography/X509Certificates/X509SubjectKeyIdentifierExtension.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Security.Cryptography.X509Certificates.PublicKey
#include "System/Security/Cryptography/X509Certificates/PublicKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String oid
::StringW System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::_get_oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::_get_oid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierExtension", "oid"));
}
// Autogenerated static field setter
// Set static field: static System.String oid
void System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::_set_oid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::_set_oid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierExtension", "oid", value));
}
// Autogenerated static field getter
// Get static field: static System.String friendlyName
::StringW System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::_get_friendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::_get_friendlyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierExtension", "friendlyName"));
}
// Autogenerated static field setter
// Set static field: static System.String friendlyName
void System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::_set_friendlyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::_set_friendlyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierExtension", "friendlyName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _subjectKeyIdentifier
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::dyn__subjectKeyIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::dyn__subjectKeyIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subjectKeyIdentifier"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _ski
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::dyn__ski() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::dyn__ski");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ski"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.AsnDecodeStatus _status
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::AsnDecodeStatus& System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::dyn__status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::dyn__status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_status"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::AsnDecodeStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.get_SubjectKeyIdentifier
::StringW System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::get_SubjectKeyIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::get_SubjectKeyIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubjectKeyIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.FromHexChar
uint8_t System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::FromHexChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::FromHexChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierExtension", "FromHexChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.FromHexChars
uint8_t System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::FromHexChars(::Il2CppChar c1, ::Il2CppChar c2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::FromHexChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierExtension", "FromHexChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(c2)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c1, c2);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.FromHex
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::FromHex(::StringW hex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::FromHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierExtension", "FromHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hex)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hex);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.Decode
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::Decode(::ArrayW<uint8_t> extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extension)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsnDecodeStatus, false>(this, ___internal__method, extension);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.Encode
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::Encode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.CopyFrom
void System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::CopyFrom(::System::Security::Cryptography::AsnEncodedData* asnEncodedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::CopyFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509Extension*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asnEncodedData);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.ToString
::StringW System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::ToString(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsnEncodedData*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ContextAwareResult
#include "System/Net/ContextAwareResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.ContextAwareResult/<>c
#include "System/Net/ContextAwareResult_--c.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Net.CallbackClosure
#include "System/Net/CallbackClosure.hpp"
// Including type: System.Net.EndPoint
#include "System/Net/EndPoint.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.ExecutionContext _context
[[deprecated("Use field access instead!")]] ::System::Threading::ExecutionContext*& System::Net::ContextAwareResult::dyn__context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::dyn__context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_context"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _lock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::ContextAwareResult::dyn__lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::dyn__lock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ContextAwareResult/StateFlags _flags
[[deprecated("Use field access instead!")]] ::System::Net::ContextAwareResult::StateFlags& System::Net::ContextAwareResult::dyn__flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::dyn__flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flags"))->offset;
  return *reinterpret_cast<::System::Net::ContextAwareResult::StateFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.ContextAwareResult.SafeCaptureIdentity
void System::Net::ContextAwareResult::SafeCaptureIdentity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::SafeCaptureIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeCaptureIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ContextAwareResult.CleanupInternal
void System::Net::ContextAwareResult::CleanupInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::CleanupInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ContextAwareResult.get_ContextCopy
::System::Threading::ExecutionContext* System::Net::ContextAwareResult::get_ContextCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::get_ContextCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContextCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ContextAwareResult.StartPostingAsyncOp
::Il2CppObject* System::Net::ContextAwareResult::StartPostingAsyncOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::StartPostingAsyncOp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPostingAsyncOp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ContextAwareResult.StartPostingAsyncOp
::Il2CppObject* System::Net::ContextAwareResult::StartPostingAsyncOp(bool lockCapture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::StartPostingAsyncOp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPostingAsyncOp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lockCapture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, lockCapture);
}
// Autogenerated method: System.Net.ContextAwareResult.FinishPostingAsyncOp
bool System::Net::ContextAwareResult::FinishPostingAsyncOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::FinishPostingAsyncOp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishPostingAsyncOp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ContextAwareResult.FinishPostingAsyncOp
bool System::Net::ContextAwareResult::FinishPostingAsyncOp(ByRef<::System::Net::CallbackClosure*> closure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::FinishPostingAsyncOp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishPostingAsyncOp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(closure)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(closure));
}
// Autogenerated method: System.Net.ContextAwareResult.CaptureOrComplete
bool System::Net::ContextAwareResult::CaptureOrComplete(ByRef<::System::Threading::ExecutionContext*> cachedContext, bool returnContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::CaptureOrComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CaptureOrComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cachedContext), ::il2cpp_utils::ExtractType(returnContext)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(cachedContext), returnContext);
}
// Autogenerated method: System.Net.ContextAwareResult.CompleteCallback
void System::Net::ContextAwareResult::CompleteCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::CompleteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ContextAwareResult.get_RemoteEndPoint
::System::Net::EndPoint* System::Net::ContextAwareResult::get_RemoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::get_RemoteEndPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::ContextAwareResult*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::EndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ContextAwareResult.Cleanup
void System::Net::ContextAwareResult::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::LazyAsyncResult*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.ContextAwareResult.Complete
void System::Net::ContextAwareResult::Complete(::System::IntPtr userToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::Complete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::LazyAsyncResult*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userToken);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.ContextAwareResult/StateFlags
#include "System/Net/ContextAwareResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.ContextAwareResult/StateFlags None
::System::Net::ContextAwareResult::StateFlags System::Net::ContextAwareResult::StateFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::StateFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextAwareResult::StateFlags>("System.Net", "ContextAwareResult/StateFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextAwareResult/StateFlags None
void System::Net::ContextAwareResult::StateFlags::_set_None(::System::Net::ContextAwareResult::StateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::StateFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextAwareResult/StateFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextAwareResult/StateFlags CaptureIdentity
::System::Net::ContextAwareResult::StateFlags System::Net::ContextAwareResult::StateFlags::_get_CaptureIdentity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::StateFlags::_get_CaptureIdentity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextAwareResult::StateFlags>("System.Net", "ContextAwareResult/StateFlags", "CaptureIdentity"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextAwareResult/StateFlags CaptureIdentity
void System::Net::ContextAwareResult::StateFlags::_set_CaptureIdentity(::System::Net::ContextAwareResult::StateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::StateFlags::_set_CaptureIdentity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextAwareResult/StateFlags", "CaptureIdentity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextAwareResult/StateFlags CaptureContext
::System::Net::ContextAwareResult::StateFlags System::Net::ContextAwareResult::StateFlags::_get_CaptureContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::StateFlags::_get_CaptureContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextAwareResult::StateFlags>("System.Net", "ContextAwareResult/StateFlags", "CaptureContext"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextAwareResult/StateFlags CaptureContext
void System::Net::ContextAwareResult::StateFlags::_set_CaptureContext(::System::Net::ContextAwareResult::StateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::StateFlags::_set_CaptureContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextAwareResult/StateFlags", "CaptureContext", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextAwareResult/StateFlags ThreadSafeContextCopy
::System::Net::ContextAwareResult::StateFlags System::Net::ContextAwareResult::StateFlags::_get_ThreadSafeContextCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::StateFlags::_get_ThreadSafeContextCopy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextAwareResult::StateFlags>("System.Net", "ContextAwareResult/StateFlags", "ThreadSafeContextCopy"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextAwareResult/StateFlags ThreadSafeContextCopy
void System::Net::ContextAwareResult::StateFlags::_set_ThreadSafeContextCopy(::System::Net::ContextAwareResult::StateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::StateFlags::_set_ThreadSafeContextCopy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextAwareResult/StateFlags", "ThreadSafeContextCopy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextAwareResult/StateFlags PostBlockStarted
::System::Net::ContextAwareResult::StateFlags System::Net::ContextAwareResult::StateFlags::_get_PostBlockStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::StateFlags::_get_PostBlockStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextAwareResult::StateFlags>("System.Net", "ContextAwareResult/StateFlags", "PostBlockStarted"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextAwareResult/StateFlags PostBlockStarted
void System::Net::ContextAwareResult::StateFlags::_set_PostBlockStarted(::System::Net::ContextAwareResult::StateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::StateFlags::_set_PostBlockStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextAwareResult/StateFlags", "PostBlockStarted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextAwareResult/StateFlags PostBlockFinished
::System::Net::ContextAwareResult::StateFlags System::Net::ContextAwareResult::StateFlags::_get_PostBlockFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::StateFlags::_get_PostBlockFinished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextAwareResult::StateFlags>("System.Net", "ContextAwareResult/StateFlags", "PostBlockFinished"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextAwareResult/StateFlags PostBlockFinished
void System::Net::ContextAwareResult::StateFlags::_set_PostBlockFinished(::System::Net::ContextAwareResult::StateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::StateFlags::_set_PostBlockFinished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextAwareResult/StateFlags", "PostBlockFinished", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Net::ContextAwareResult::StateFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::StateFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ContextAwareResult/<>c
#include "System/Net/ContextAwareResult_--c.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.ContextAwareResult/<>c <>9
::System::Net::ContextAwareResult::$$c* System::Net::ContextAwareResult::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::ContextAwareResult::$$c*>("System.Net", "ContextAwareResult/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.ContextAwareResult/<>c <>9
void System::Net::ContextAwareResult::$$c::_set_$$9(::System::Net::ContextAwareResult::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net", "ContextAwareResult/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ContextCallback <>9__17_0
::System::Threading::ContextCallback* System::Net::ContextAwareResult::$$c::_get_$$9__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::$$c::_get_$$9__17_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Threading::ContextCallback*>("System.Net", "ContextAwareResult/<>c", "<>9__17_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ContextCallback <>9__17_0
void System::Net::ContextAwareResult::$$c::_set_$$9__17_0(::System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::$$c::_set_$$9__17_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net", "ContextAwareResult/<>c", "<>9__17_0", value)));
}
// Autogenerated method: System.Net.ContextAwareResult/<>c..cctor
void System::Net::ContextAwareResult::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ContextAwareResult/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.ContextAwareResult/<>c.<Complete>b__17_0
void System::Net::ContextAwareResult::$$c::$Complete$b__17_0(::Il2CppObject* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextAwareResult::$$c::<Complete>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Complete>b__17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.CallbackClosure
#include "System/Net/CallbackClosure.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback _savedCallback
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& System::Net::CallbackClosure::dyn__savedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CallbackClosure::dyn__savedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_savedCallback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ExecutionContext _savedContext
[[deprecated("Use field access instead!")]] ::System::Threading::ExecutionContext*& System::Net::CallbackClosure::dyn__savedContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CallbackClosure::dyn__savedContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_savedContext"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.CallbackClosure.IsCompatible
bool System::Net::CallbackClosure::IsCompatible(::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CallbackClosure::IsCompatible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCompatible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, callback);
}
// Autogenerated method: System.Net.CallbackClosure.get_AsyncCallback
::System::AsyncCallback* System::Net::CallbackClosure::get_AsyncCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CallbackClosure::get_AsyncCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::AsyncCallback*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CallbackClosure.get_Context
::System::Threading::ExecutionContext* System::Net::CallbackClosure::get_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CallbackClosure::get_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ExecutionContext*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.ContextFlagsAdapterPal
#include "System/Net/ContextFlagsAdapterPal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.ContextFlagsAdapterPal/ContextFlagMapping[] s_contextFlagMapping
::ArrayW<::System::Net::ContextFlagsAdapterPal::ContextFlagMapping> System::Net::ContextFlagsAdapterPal::_get_s_contextFlagMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsAdapterPal::_get_s_contextFlagMapping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Net::ContextFlagsAdapterPal::ContextFlagMapping>>("System.Net", "ContextFlagsAdapterPal", "s_contextFlagMapping"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.ContextFlagsAdapterPal/ContextFlagMapping[] s_contextFlagMapping
void System::Net::ContextFlagsAdapterPal::_set_s_contextFlagMapping(::ArrayW<::System::Net::ContextFlagsAdapterPal::ContextFlagMapping> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsAdapterPal::_set_s_contextFlagMapping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsAdapterPal", "s_contextFlagMapping", value));
}
// Autogenerated method: System.Net.ContextFlagsAdapterPal.GetContextFlagsPalFromInterop
::System::Net::ContextFlagsPal System::Net::ContextFlagsAdapterPal::GetContextFlagsPalFromInterop(::GlobalNamespace::Interop_::NetSecurityNative::GssFlags gssFlags, bool isServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsAdapterPal::GetContextFlagsPalFromInterop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ContextFlagsAdapterPal", "GetContextFlagsPalFromInterop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gssFlags), ::il2cpp_utils::ExtractType(isServer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ContextFlagsPal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gssFlags, isServer);
}
// Autogenerated method: System.Net.ContextFlagsAdapterPal.GetInteropFromContextFlagsPal
::GlobalNamespace::Interop_::NetSecurityNative::GssFlags System::Net::ContextFlagsAdapterPal::GetInteropFromContextFlagsPal(::System::Net::ContextFlagsPal flags, bool isServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsAdapterPal::GetInteropFromContextFlagsPal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ContextFlagsAdapterPal", "GetInteropFromContextFlagsPal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(isServer)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::Interop_::NetSecurityNative::GssFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags, isServer);
}
// Autogenerated method: System.Net.ContextFlagsAdapterPal..cctor
void System::Net::ContextFlagsAdapterPal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsAdapterPal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ContextFlagsAdapterPal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.ContextFlagsAdapterPal/ContextFlagMapping
#include "System/Net/ContextFlagsAdapterPal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Interop/NetSecurityNative/GssFlags GssFlags
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Interop_::NetSecurityNative::GssFlags& System::Net::ContextFlagsAdapterPal::ContextFlagMapping::dyn_GssFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsAdapterPal::ContextFlagMapping::dyn_GssFlags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GssFlags"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Interop_::NetSecurityNative::GssFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Net.ContextFlagsPal ContextFlag
[[deprecated("Use field access instead!")]] ::System::Net::ContextFlagsPal& System::Net::ContextFlagsAdapterPal::ContextFlagMapping::dyn_ContextFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsAdapterPal::ContextFlagMapping::dyn_ContextFlag");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContextFlag"))->offset;
  return *reinterpret_cast<::System::Net::ContextFlagsPal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.ContextFlagsAdapterPal/ContextFlagMapping..ctor
// ABORTED elsewhere.  System::Net::ContextFlagsAdapterPal::ContextFlagMapping::ContextFlagMapping(::GlobalNamespace::Interop_::NetSecurityNative::GssFlags gssFlag, ::System::Net::ContextFlagsPal contextFlag)
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.ContextFlagsPal
#include "System/Net/ContextFlagsPal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal None
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal None
void System::Net::ContextFlagsPal::_set_None(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal Delegate
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_Delegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_Delegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "Delegate"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal Delegate
void System::Net::ContextFlagsPal::_set_Delegate(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_Delegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "Delegate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal MutualAuth
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_MutualAuth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_MutualAuth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "MutualAuth"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal MutualAuth
void System::Net::ContextFlagsPal::_set_MutualAuth(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_MutualAuth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "MutualAuth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal ReplayDetect
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_ReplayDetect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_ReplayDetect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "ReplayDetect"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal ReplayDetect
void System::Net::ContextFlagsPal::_set_ReplayDetect(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_ReplayDetect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "ReplayDetect", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal SequenceDetect
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_SequenceDetect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_SequenceDetect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "SequenceDetect"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal SequenceDetect
void System::Net::ContextFlagsPal::_set_SequenceDetect(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_SequenceDetect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "SequenceDetect", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal Confidentiality
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_Confidentiality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_Confidentiality");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "Confidentiality"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal Confidentiality
void System::Net::ContextFlagsPal::_set_Confidentiality(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_Confidentiality");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "Confidentiality", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal UseSessionKey
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_UseSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_UseSessionKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "UseSessionKey"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal UseSessionKey
void System::Net::ContextFlagsPal::_set_UseSessionKey(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_UseSessionKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "UseSessionKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal AllocateMemory
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_AllocateMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_AllocateMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "AllocateMemory"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal AllocateMemory
void System::Net::ContextFlagsPal::_set_AllocateMemory(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_AllocateMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "AllocateMemory", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal Connection
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_Connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_Connection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "Connection"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal Connection
void System::Net::ContextFlagsPal::_set_Connection(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_Connection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "Connection", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal InitExtendedError
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_InitExtendedError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_InitExtendedError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "InitExtendedError"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal InitExtendedError
void System::Net::ContextFlagsPal::_set_InitExtendedError(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_InitExtendedError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "InitExtendedError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal AcceptExtendedError
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_AcceptExtendedError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_AcceptExtendedError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "AcceptExtendedError"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal AcceptExtendedError
void System::Net::ContextFlagsPal::_set_AcceptExtendedError(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_AcceptExtendedError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "AcceptExtendedError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal InitStream
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_InitStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_InitStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "InitStream"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal InitStream
void System::Net::ContextFlagsPal::_set_InitStream(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_InitStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "InitStream", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal AcceptStream
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_AcceptStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_AcceptStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "AcceptStream"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal AcceptStream
void System::Net::ContextFlagsPal::_set_AcceptStream(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_AcceptStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "AcceptStream", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal InitIntegrity
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_InitIntegrity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_InitIntegrity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "InitIntegrity"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal InitIntegrity
void System::Net::ContextFlagsPal::_set_InitIntegrity(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_InitIntegrity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "InitIntegrity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal AcceptIntegrity
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_AcceptIntegrity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_AcceptIntegrity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "AcceptIntegrity"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal AcceptIntegrity
void System::Net::ContextFlagsPal::_set_AcceptIntegrity(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_AcceptIntegrity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "AcceptIntegrity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal InitManualCredValidation
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_InitManualCredValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_InitManualCredValidation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "InitManualCredValidation"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal InitManualCredValidation
void System::Net::ContextFlagsPal::_set_InitManualCredValidation(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_InitManualCredValidation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "InitManualCredValidation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal InitUseSuppliedCreds
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_InitUseSuppliedCreds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_InitUseSuppliedCreds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "InitUseSuppliedCreds"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal InitUseSuppliedCreds
void System::Net::ContextFlagsPal::_set_InitUseSuppliedCreds(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_InitUseSuppliedCreds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "InitUseSuppliedCreds", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal InitIdentify
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_InitIdentify() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_InitIdentify");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "InitIdentify"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal InitIdentify
void System::Net::ContextFlagsPal::_set_InitIdentify(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_InitIdentify");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "InitIdentify", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal AcceptIdentify
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_AcceptIdentify() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_AcceptIdentify");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "AcceptIdentify"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal AcceptIdentify
void System::Net::ContextFlagsPal::_set_AcceptIdentify(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_AcceptIdentify");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "AcceptIdentify", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal ProxyBindings
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_ProxyBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_ProxyBindings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "ProxyBindings"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal ProxyBindings
void System::Net::ContextFlagsPal::_set_ProxyBindings(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_ProxyBindings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "ProxyBindings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal AllowMissingBindings
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_AllowMissingBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_AllowMissingBindings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "AllowMissingBindings"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal AllowMissingBindings
void System::Net::ContextFlagsPal::_set_AllowMissingBindings(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_AllowMissingBindings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "AllowMissingBindings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.ContextFlagsPal UnverifiedTargetName
::System::Net::ContextFlagsPal System::Net::ContextFlagsPal::_get_UnverifiedTargetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_get_UnverifiedTargetName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ContextFlagsPal>("System.Net", "ContextFlagsPal", "UnverifiedTargetName"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.ContextFlagsPal UnverifiedTargetName
void System::Net::ContextFlagsPal::_set_UnverifiedTargetName(::System::Net::ContextFlagsPal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::_set_UnverifiedTargetName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ContextFlagsPal", "UnverifiedTargetName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::ContextFlagsPal::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ContextFlagsPal::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.ExceptionCheck
#include "System/Net/ExceptionCheck.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.ExceptionCheck.IsFatal
bool System::Net::ExceptionCheck::IsFatal(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ExceptionCheck::IsFatal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ExceptionCheck", "IsFatal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.HttpStatusDescription
#include "System/Net/HttpStatusDescription.hpp"
// Including type: System.Net.HttpStatusCode
#include "System/Net/HttpStatusCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HttpStatusDescription.Get
::StringW System::Net::HttpStatusDescription::Get(::System::Net::HttpStatusCode code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStatusDescription::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpStatusDescription", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: System.Net.HttpStatusDescription.Get
::StringW System::Net::HttpStatusDescription::Get(int code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStatusDescription::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpStatusDescription", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.HttpValidationHelpers
#include "System/Net/HttpValidationHelpers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] s_httpTrimCharacters
::ArrayW<::Il2CppChar> System::Net::HttpValidationHelpers::_get_s_httpTrimCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpValidationHelpers::_get_s_httpTrimCharacters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net", "HttpValidationHelpers", "s_httpTrimCharacters"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] s_httpTrimCharacters
void System::Net::HttpValidationHelpers::_set_s_httpTrimCharacters(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpValidationHelpers::_set_s_httpTrimCharacters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HttpValidationHelpers", "s_httpTrimCharacters", value));
}
// Autogenerated method: System.Net.HttpValidationHelpers.CheckBadHeaderNameChars
::StringW System::Net::HttpValidationHelpers::CheckBadHeaderNameChars(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpValidationHelpers::CheckBadHeaderNameChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpValidationHelpers", "CheckBadHeaderNameChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Net.HttpValidationHelpers.ContainsNonAsciiChars
bool System::Net::HttpValidationHelpers::ContainsNonAsciiChars(::StringW token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpValidationHelpers::ContainsNonAsciiChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpValidationHelpers", "ContainsNonAsciiChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Net.HttpValidationHelpers.IsValidToken
bool System::Net::HttpValidationHelpers::IsValidToken(::StringW token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpValidationHelpers::IsValidToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpValidationHelpers", "IsValidToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Net.HttpValidationHelpers.CheckBadHeaderValueChars
::StringW System::Net::HttpValidationHelpers::CheckBadHeaderValueChars(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpValidationHelpers::CheckBadHeaderValueChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpValidationHelpers", "CheckBadHeaderValueChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Net.HttpValidationHelpers.IsInvalidMethodOrHeaderString
bool System::Net::HttpValidationHelpers::IsInvalidMethodOrHeaderString(::StringW stringValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpValidationHelpers::IsInvalidMethodOrHeaderString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpValidationHelpers", "IsInvalidMethodOrHeaderString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringValue)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringValue);
}
// Autogenerated method: System.Net.HttpValidationHelpers..cctor
void System::Net::HttpValidationHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpValidationHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpValidationHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.IPAddressParserStatics
#include "System/Net/IPAddressParserStatics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 IPv4AddressBytes
int System::Net::IPAddressParserStatics::_get_IPv4AddressBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPAddressParserStatics::_get_IPv4AddressBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "IPAddressParserStatics", "IPv4AddressBytes"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 IPv4AddressBytes
void System::Net::IPAddressParserStatics::_set_IPv4AddressBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPAddressParserStatics::_set_IPv4AddressBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "IPAddressParserStatics", "IPv4AddressBytes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 IPv6AddressBytes
int System::Net::IPAddressParserStatics::_get_IPv6AddressBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPAddressParserStatics::_get_IPv6AddressBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "IPAddressParserStatics", "IPv6AddressBytes"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 IPv6AddressBytes
void System::Net::IPAddressParserStatics::_set_IPv6AddressBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPAddressParserStatics::_set_IPv6AddressBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "IPAddressParserStatics", "IPv6AddressBytes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 IPv6AddressShorts
int System::Net::IPAddressParserStatics::_get_IPv6AddressShorts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPAddressParserStatics::_get_IPv6AddressShorts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "IPAddressParserStatics", "IPv6AddressShorts"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 IPv6AddressShorts
void System::Net::IPAddressParserStatics::_set_IPv6AddressShorts(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPAddressParserStatics::_set_IPv6AddressShorts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "IPAddressParserStatics", "IPv6AddressShorts", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetEventSource
#include "System/Net/NetEventSource.hpp"
// Including type: System.Net.NetEventSource/Keywords
#include "System/Net/NetEventSource_Keywords.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.FormattableString
#include "System/FormattableString.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.NetEventSource Log
::System::Net::NetEventSource* System::Net::NetEventSource::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetEventSource*>("System.Net", "NetEventSource", "Log"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.NetEventSource Log
void System::Net::NetEventSource::_set_Log(::System::Net::NetEventSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "Log", value));
}
// Autogenerated static field getter
// Get static field: static private System.String MissingMember
::StringW System::Net::NetEventSource::_get_MissingMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_MissingMember");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "NetEventSource", "MissingMember"));
}
// Autogenerated static field setter
// Set static field: static private System.String MissingMember
void System::Net::NetEventSource::_set_MissingMember(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_MissingMember");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "MissingMember", value));
}
// Autogenerated static field getter
// Get static field: static private System.String NullInstance
::StringW System::Net::NetEventSource::_get_NullInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_NullInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "NetEventSource", "NullInstance"));
}
// Autogenerated static field setter
// Set static field: static private System.String NullInstance
void System::Net::NetEventSource::_set_NullInstance(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_NullInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "NullInstance", value));
}
// Autogenerated static field getter
// Get static field: static private System.String StaticMethodObject
::StringW System::Net::NetEventSource::_get_StaticMethodObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_StaticMethodObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "NetEventSource", "StaticMethodObject"));
}
// Autogenerated static field setter
// Set static field: static private System.String StaticMethodObject
void System::Net::NetEventSource::_set_StaticMethodObject(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_StaticMethodObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "StaticMethodObject", value));
}
// Autogenerated static field getter
// Get static field: static private System.String NoParameters
::StringW System::Net::NetEventSource::_get_NoParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_NoParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "NetEventSource", "NoParameters"));
}
// Autogenerated static field setter
// Set static field: static private System.String NoParameters
void System::Net::NetEventSource::_set_NoParameters(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_NoParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "NoParameters", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxDumpSize
int System::Net::NetEventSource::_get_MaxDumpSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_MaxDumpSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "MaxDumpSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxDumpSize
void System::Net::NetEventSource::_set_MaxDumpSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_MaxDumpSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "MaxDumpSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 EnterEventId
int System::Net::NetEventSource::_get_EnterEventId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_EnterEventId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "EnterEventId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 EnterEventId
void System::Net::NetEventSource::_set_EnterEventId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_EnterEventId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "EnterEventId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ExitEventId
int System::Net::NetEventSource::_get_ExitEventId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_ExitEventId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "ExitEventId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ExitEventId
void System::Net::NetEventSource::_set_ExitEventId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_ExitEventId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "ExitEventId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 AssociateEventId
int System::Net::NetEventSource::_get_AssociateEventId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_AssociateEventId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "AssociateEventId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 AssociateEventId
void System::Net::NetEventSource::_set_AssociateEventId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_AssociateEventId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "AssociateEventId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 InfoEventId
int System::Net::NetEventSource::_get_InfoEventId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_InfoEventId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "InfoEventId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 InfoEventId
void System::Net::NetEventSource::_set_InfoEventId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_InfoEventId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "InfoEventId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ErrorEventId
int System::Net::NetEventSource::_get_ErrorEventId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_ErrorEventId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "ErrorEventId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ErrorEventId
void System::Net::NetEventSource::_set_ErrorEventId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_ErrorEventId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "ErrorEventId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CriticalFailureEventId
int System::Net::NetEventSource::_get_CriticalFailureEventId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_CriticalFailureEventId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "CriticalFailureEventId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CriticalFailureEventId
void System::Net::NetEventSource::_set_CriticalFailureEventId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_CriticalFailureEventId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "CriticalFailureEventId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DumpArrayEventId
int System::Net::NetEventSource::_get_DumpArrayEventId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_DumpArrayEventId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "DumpArrayEventId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DumpArrayEventId
void System::Net::NetEventSource::_set_DumpArrayEventId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_DumpArrayEventId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "DumpArrayEventId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 EnumerateSecurityPackagesId
int System::Net::NetEventSource::_get_EnumerateSecurityPackagesId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_EnumerateSecurityPackagesId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "EnumerateSecurityPackagesId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 EnumerateSecurityPackagesId
void System::Net::NetEventSource::_set_EnumerateSecurityPackagesId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_EnumerateSecurityPackagesId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "EnumerateSecurityPackagesId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SspiPackageNotFoundId
int System::Net::NetEventSource::_get_SspiPackageNotFoundId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_SspiPackageNotFoundId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "SspiPackageNotFoundId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SspiPackageNotFoundId
void System::Net::NetEventSource::_set_SspiPackageNotFoundId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_SspiPackageNotFoundId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "SspiPackageNotFoundId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 AcquireDefaultCredentialId
int System::Net::NetEventSource::_get_AcquireDefaultCredentialId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_AcquireDefaultCredentialId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "AcquireDefaultCredentialId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 AcquireDefaultCredentialId
void System::Net::NetEventSource::_set_AcquireDefaultCredentialId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_AcquireDefaultCredentialId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "AcquireDefaultCredentialId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 AcquireCredentialsHandleId
int System::Net::NetEventSource::_get_AcquireCredentialsHandleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_AcquireCredentialsHandleId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "AcquireCredentialsHandleId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 AcquireCredentialsHandleId
void System::Net::NetEventSource::_set_AcquireCredentialsHandleId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_AcquireCredentialsHandleId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "AcquireCredentialsHandleId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 InitializeSecurityContextId
int System::Net::NetEventSource::_get_InitializeSecurityContextId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_InitializeSecurityContextId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "InitializeSecurityContextId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 InitializeSecurityContextId
void System::Net::NetEventSource::_set_InitializeSecurityContextId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_InitializeSecurityContextId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "InitializeSecurityContextId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SecurityContextInputBufferId
int System::Net::NetEventSource::_get_SecurityContextInputBufferId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_SecurityContextInputBufferId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "SecurityContextInputBufferId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SecurityContextInputBufferId
void System::Net::NetEventSource::_set_SecurityContextInputBufferId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_SecurityContextInputBufferId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "SecurityContextInputBufferId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SecurityContextInputBuffersId
int System::Net::NetEventSource::_get_SecurityContextInputBuffersId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_SecurityContextInputBuffersId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "SecurityContextInputBuffersId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SecurityContextInputBuffersId
void System::Net::NetEventSource::_set_SecurityContextInputBuffersId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_SecurityContextInputBuffersId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "SecurityContextInputBuffersId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 AcceptSecuritContextId
int System::Net::NetEventSource::_get_AcceptSecuritContextId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_AcceptSecuritContextId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "AcceptSecuritContextId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 AcceptSecuritContextId
void System::Net::NetEventSource::_set_AcceptSecuritContextId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_AcceptSecuritContextId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "AcceptSecuritContextId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 OperationReturnedSomethingId
int System::Net::NetEventSource::_get_OperationReturnedSomethingId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_OperationReturnedSomethingId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "OperationReturnedSomethingId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 OperationReturnedSomethingId
void System::Net::NetEventSource::_set_OperationReturnedSomethingId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_OperationReturnedSomethingId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "OperationReturnedSomethingId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NextAvailableEventId
int System::Net::NetEventSource::_get_NextAvailableEventId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_get_NextAvailableEventId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "NetEventSource", "NextAvailableEventId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NextAvailableEventId
void System::Net::NetEventSource::_set_NextAvailableEventId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::_set_NextAvailableEventId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource", "NextAvailableEventId", value));
}
// Autogenerated method: System.Net.NetEventSource.Enter
void System::Net::NetEventSource::Enter(::Il2CppObject* thisOrContextObject, ::System::FormattableString* formattableString, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Enter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Enter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(formattableString), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, formattableString, memberName);
}
// Autogenerated method: System.Net.NetEventSource.Enter
void System::Net::NetEventSource::Enter(::Il2CppObject* thisOrContextObject, ::Il2CppObject* arg0, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Enter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Enter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, arg0, memberName);
}
// Autogenerated method: System.Net.NetEventSource.Enter
void System::Net::NetEventSource::Enter(::Il2CppObject* thisOrContextObject, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Enter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Enter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, arg0, arg1, memberName);
}
// Autogenerated method: System.Net.NetEventSource.Enter
void System::Net::NetEventSource::Enter(::Il2CppObject* thisOrContextObject, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Enter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Enter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, arg0, arg1, arg2, memberName);
}
// Autogenerated method: System.Net.NetEventSource.Enter
void System::Net::NetEventSource::Enter(::StringW thisOrContextObject, ::StringW memberName, ::StringW parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Enter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(memberName), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thisOrContextObject, memberName, parameters);
}
// Autogenerated method: System.Net.NetEventSource.Exit
void System::Net::NetEventSource::Exit(::Il2CppObject* thisOrContextObject, ::System::FormattableString* formattableString, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Exit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Exit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(formattableString), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, formattableString, memberName);
}
// Autogenerated method: System.Net.NetEventSource.Exit
void System::Net::NetEventSource::Exit(::Il2CppObject* thisOrContextObject, ::Il2CppObject* arg0, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Exit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Exit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, arg0, memberName);
}
// Autogenerated method: System.Net.NetEventSource.Exit
void System::Net::NetEventSource::Exit(::Il2CppObject* thisOrContextObject, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Exit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Exit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, arg0, arg1, memberName);
}
// Autogenerated method: System.Net.NetEventSource.Exit
void System::Net::NetEventSource::Exit(::StringW thisOrContextObject, ::StringW memberName, ::StringW result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Exit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Exit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(memberName), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thisOrContextObject, memberName, result);
}
// Autogenerated method: System.Net.NetEventSource.Info
void System::Net::NetEventSource::Info(::Il2CppObject* thisOrContextObject, ::System::FormattableString* formattableString, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(formattableString), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, formattableString, memberName);
}
// Autogenerated method: System.Net.NetEventSource.Info
void System::Net::NetEventSource::Info(::Il2CppObject* thisOrContextObject, ::Il2CppObject* message, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, message, memberName);
}
// Autogenerated method: System.Net.NetEventSource.Info
void System::Net::NetEventSource::Info(::StringW thisOrContextObject, ::StringW memberName, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(memberName), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thisOrContextObject, memberName, message);
}
// Autogenerated method: System.Net.NetEventSource.Error
void System::Net::NetEventSource::Error(::Il2CppObject* thisOrContextObject, ::System::FormattableString* formattableString, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(formattableString), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, formattableString, memberName);
}
// Autogenerated method: System.Net.NetEventSource.Error
void System::Net::NetEventSource::Error(::Il2CppObject* thisOrContextObject, ::Il2CppObject* message, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, message, memberName);
}
// Autogenerated method: System.Net.NetEventSource.ErrorMessage
void System::Net::NetEventSource::ErrorMessage(::StringW thisOrContextObject, ::StringW memberName, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::ErrorMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ErrorMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(memberName), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thisOrContextObject, memberName, message);
}
// Autogenerated method: System.Net.NetEventSource.Fail
void System::Net::NetEventSource::Fail(::Il2CppObject* thisOrContextObject, ::System::FormattableString* formattableString, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Fail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Fail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(formattableString), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, formattableString, memberName);
}
// Autogenerated method: System.Net.NetEventSource.Fail
void System::Net::NetEventSource::Fail(::Il2CppObject* thisOrContextObject, ::Il2CppObject* message, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Fail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Fail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, message, memberName);
}
// Autogenerated method: System.Net.NetEventSource.CriticalFailure
void System::Net::NetEventSource::CriticalFailure(::StringW thisOrContextObject, ::StringW memberName, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::CriticalFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CriticalFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(memberName), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thisOrContextObject, memberName, message);
}
// Autogenerated method: System.Net.NetEventSource.DumpBuffer
void System::Net::NetEventSource::DumpBuffer(::Il2CppObject* thisOrContextObject, ::ArrayW<uint8_t> buffer, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::DumpBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "DumpBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, buffer, memberName);
}
// Autogenerated method: System.Net.NetEventSource.DumpBuffer
void System::Net::NetEventSource::DumpBuffer(::Il2CppObject* thisOrContextObject, ::ArrayW<uint8_t> buffer, int offset, int count, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::DumpBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "DumpBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, buffer, offset, count, memberName);
}
// Autogenerated method: System.Net.NetEventSource.DumpBuffer
void System::Net::NetEventSource::DumpBuffer(::Il2CppObject* thisOrContextObject, ::System::IntPtr bufferPtr, int count, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::DumpBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "DumpBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(bufferPtr), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, bufferPtr, count, memberName);
}
// Autogenerated method: System.Net.NetEventSource.DumpBuffer
void System::Net::NetEventSource::DumpBuffer(::StringW thisOrContextObject, ::StringW memberName, ::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::DumpBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DumpBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(memberName), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thisOrContextObject, memberName, buffer);
}
// Autogenerated method: System.Net.NetEventSource.Associate
void System::Net::NetEventSource::Associate(::Il2CppObject* first, ::Il2CppObject* second, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Associate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Associate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, first, second, memberName);
}
// Autogenerated method: System.Net.NetEventSource.Associate
void System::Net::NetEventSource::Associate(::Il2CppObject* thisOrContextObject, ::Il2CppObject* first, ::Il2CppObject* second, ::StringW memberName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Associate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Associate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(memberName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisOrContextObject, first, second, memberName);
}
// Autogenerated method: System.Net.NetEventSource.Associate
void System::Net::NetEventSource::Associate(::StringW thisOrContextObject, ::StringW memberName, ::StringW first, ::StringW second) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Associate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Associate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisOrContextObject), ::il2cpp_utils::ExtractType(memberName), ::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(second)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thisOrContextObject, memberName, first, second);
}
// Autogenerated method: System.Net.NetEventSource.DebugValidateArg
void System::Net::NetEventSource::DebugValidateArg(::Il2CppObject* arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::DebugValidateArg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "DebugValidateArg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg);
}
// Autogenerated method: System.Net.NetEventSource.DebugValidateArg
void System::Net::NetEventSource::DebugValidateArg(::System::FormattableString* arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::DebugValidateArg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "DebugValidateArg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg);
}
// Autogenerated method: System.Net.NetEventSource.get_IsEnabled
bool System::Net::NetEventSource::get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::get_IsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "get_IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetEventSource.IdOf
::StringW System::Net::NetEventSource::IdOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::IdOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "IdOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Net.NetEventSource.GetHashCode
int System::Net::NetEventSource::GetHashCode(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Net.NetEventSource.Format
::Il2CppObject* System::Net::NetEventSource::Format(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Net.NetEventSource.Format
::StringW System::Net::NetEventSource::Format(::System::FormattableString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Net.NetEventSource.WriteEvent
void System::Net::NetEventSource::WriteEvent(int eventId, ::StringW arg1, ::StringW arg2, ::StringW arg3, ::StringW arg4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3), ::il2cpp_utils::ExtractType(arg4)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, arg1, arg2, arg3, arg4);
}
// Autogenerated method: System.Net.NetEventSource.WriteEvent
void System::Net::NetEventSource::WriteEvent(int eventId, ::StringW arg1, ::StringW arg2, ::ArrayW<uint8_t> arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, arg1, arg2, arg3);
}
// Autogenerated method: System.Net.NetEventSource.WriteEvent
void System::Net::NetEventSource::WriteEvent(int eventId, ::StringW arg1, int arg2, int arg3, int arg4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3), ::il2cpp_utils::ExtractType(arg4)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, arg1, arg2, arg3, arg4);
}
// Autogenerated method: System.Net.NetEventSource.WriteEvent
void System::Net::NetEventSource::WriteEvent(int eventId, ::StringW arg1, int arg2, ::StringW arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, arg1, arg2, arg3);
}
// Autogenerated method: System.Net.NetEventSource.WriteEvent
void System::Net::NetEventSource::WriteEvent(int eventId, ::StringW arg1, ::StringW arg2, int arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, arg1, arg2, arg3);
}
// Autogenerated method: System.Net.NetEventSource.WriteEvent
void System::Net::NetEventSource::WriteEvent(int eventId, ::StringW arg1, ::StringW arg2, ::StringW arg3, int arg4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventId), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3), ::il2cpp_utils::ExtractType(arg4)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventId, arg1, arg2, arg3, arg4);
}
// Autogenerated method: System.Net.NetEventSource..cctor
void System::Net::NetEventSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetEventSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.NetEventSource/Keywords
#include "System/Net/NetEventSource_Keywords.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords Default
::System::Diagnostics::Tracing::EventKeywords System::Net::NetEventSource::Keywords::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Keywords::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Net", "NetEventSource/Keywords", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords Default
void System::Net::NetEventSource::Keywords::_set_Default(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Keywords::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource/Keywords", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords Debug
::System::Diagnostics::Tracing::EventKeywords System::Net::NetEventSource::Keywords::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Keywords::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Net", "NetEventSource/Keywords", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords Debug
void System::Net::NetEventSource::Keywords::_set_Debug(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Keywords::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource/Keywords", "Debug", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventKeywords EnterExit
::System::Diagnostics::Tracing::EventKeywords System::Net::NetEventSource::Keywords::_get_EnterExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Keywords::_get_EnterExit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Tracing::EventKeywords>("System.Net", "NetEventSource/Keywords", "EnterExit"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventKeywords EnterExit
void System::Net::NetEventSource::Keywords::_set_EnterExit(::System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::Keywords::_set_EnterExit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NetEventSource/Keywords", "EnterExit", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.NTAuthentication
#include "System/Net/NTAuthentication.hpp"
// Including type: System.Net.Security.SafeFreeCredentials
#include "System/Net/Security/SafeFreeCredentials.hpp"
// Including type: System.Net.Security.SafeDeleteContext
#include "System/Net/Security/SafeDeleteContext.hpp"
// Including type: System.Security.Authentication.ExtendedProtection.ChannelBinding
#include "System/Security/Authentication/ExtendedProtection/ChannelBinding.hpp"
// Including type: System.Net.NetworkCredential
#include "System/Net/NetworkCredential.hpp"
// Including type: System.Net.SecurityStatusPal
#include "System/Net/SecurityStatusPal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isServer
[[deprecated("Use field access instead!")]] bool& System::Net::NTAuthentication::dyn__isServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::dyn__isServer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isServer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Security.SafeFreeCredentials _credentialsHandle
[[deprecated("Use field access instead!")]] ::System::Net::Security::SafeFreeCredentials*& System::Net::NTAuthentication::dyn__credentialsHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::dyn__credentialsHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_credentialsHandle"))->offset;
  return *reinterpret_cast<::System::Net::Security::SafeFreeCredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Security.SafeDeleteContext _securityContext
[[deprecated("Use field access instead!")]] ::System::Net::Security::SafeDeleteContext*& System::Net::NTAuthentication::dyn__securityContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::dyn__securityContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_securityContext"))->offset;
  return *reinterpret_cast<::System::Net::Security::SafeDeleteContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _spn
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NTAuthentication::dyn__spn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::dyn__spn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spn"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _tokenSize
[[deprecated("Use field access instead!")]] int& System::Net::NTAuthentication::dyn__tokenSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::dyn__tokenSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tokenSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ContextFlagsPal _requestedContextFlags
[[deprecated("Use field access instead!")]] ::System::Net::ContextFlagsPal& System::Net::NTAuthentication::dyn__requestedContextFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::dyn__requestedContextFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestedContextFlags"))->offset;
  return *reinterpret_cast<::System::Net::ContextFlagsPal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ContextFlagsPal _contextFlags
[[deprecated("Use field access instead!")]] ::System::Net::ContextFlagsPal& System::Net::NTAuthentication::dyn__contextFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::dyn__contextFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contextFlags"))->offset;
  return *reinterpret_cast<::System::Net::ContextFlagsPal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isCompleted
[[deprecated("Use field access instead!")]] bool& System::Net::NTAuthentication::dyn__isCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::dyn__isCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isCompleted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _package
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NTAuthentication::dyn__package() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::dyn__package");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_package"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _lastProtocolName
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NTAuthentication::dyn__lastProtocolName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::dyn__lastProtocolName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastProtocolName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _protocolName
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NTAuthentication::dyn__protocolName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::dyn__protocolName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_protocolName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _clientSpecifiedSpn
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NTAuthentication::dyn__clientSpecifiedSpn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::dyn__clientSpecifiedSpn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clientSpecifiedSpn"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Authentication.ExtendedProtection.ChannelBinding _channelBinding
[[deprecated("Use field access instead!")]] ::System::Security::Authentication::ExtendedProtection::ChannelBinding*& System::Net::NTAuthentication::dyn__channelBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::dyn__channelBinding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_channelBinding"))->offset;
  return *reinterpret_cast<::System::Security::Authentication::ExtendedProtection::ChannelBinding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NTAuthentication.get_IsCompleted
bool System::Net::NTAuthentication::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::get_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NTAuthentication.get_IsValidContext
bool System::Net::NTAuthentication::get_IsValidContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::get_IsValidContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValidContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NTAuthentication.get_Package
::StringW System::Net::NTAuthentication::get_Package() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::get_Package");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Package", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NTAuthentication.get_IsServer
bool System::Net::NTAuthentication::get_IsServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::get_IsServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NTAuthentication.get_ClientSpecifiedSpn
::StringW System::Net::NTAuthentication::get_ClientSpecifiedSpn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::get_ClientSpecifiedSpn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientSpecifiedSpn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NTAuthentication.get_ProtocolName
::StringW System::Net::NTAuthentication::get_ProtocolName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::get_ProtocolName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NTAuthentication.get_IsKerberos
bool System::Net::NTAuthentication::get_IsKerberos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::get_IsKerberos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsKerberos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NTAuthentication.Initialize
void System::Net::NTAuthentication::Initialize(bool isServer, ::StringW package, ::System::Net::NetworkCredential* credential, ::StringW spn, ::System::Net::ContextFlagsPal requestedContextFlags, ::System::Security::Authentication::ExtendedProtection::ChannelBinding* channelBinding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isServer), ::il2cpp_utils::ExtractType(package), ::il2cpp_utils::ExtractType(credential), ::il2cpp_utils::ExtractType(spn), ::il2cpp_utils::ExtractType(requestedContextFlags), ::il2cpp_utils::ExtractType(channelBinding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isServer, package, credential, spn, requestedContextFlags, channelBinding);
}
// Autogenerated method: System.Net.NTAuthentication.GetContext
::System::Net::Security::SafeDeleteContext* System::Net::NTAuthentication::GetContext(ByRef<::System::Net::SecurityStatusPal> status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::GetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Net::SecurityStatusPal&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::SafeDeleteContext*, false>(this, ___internal__method, byref(status));
}
// Autogenerated method: System.Net.NTAuthentication.CloseContext
void System::Net::NTAuthentication::CloseContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::CloseContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NTAuthentication.VerifySignature
int System::Net::NTAuthentication::VerifySignature(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::VerifySignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.NTAuthentication.MakeSignature
int System::Net::NTAuthentication::MakeSignature(::ArrayW<uint8_t> buffer, int offset, int count, ByRef<::ArrayW<uint8_t>> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::MakeSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(output)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count, byref(output));
}
// Autogenerated method: System.Net.NTAuthentication.GetOutgoingBlob
::StringW System::Net::NTAuthentication::GetOutgoingBlob(::StringW incomingBlob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::GetOutgoingBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutgoingBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(incomingBlob)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, incomingBlob);
}
// Autogenerated method: System.Net.NTAuthentication.GetOutgoingBlob
::ArrayW<uint8_t> System::Net::NTAuthentication::GetOutgoingBlob(::ArrayW<uint8_t> incomingBlob, bool thrownOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::GetOutgoingBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutgoingBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(incomingBlob), ::il2cpp_utils::ExtractType(thrownOnError)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, incomingBlob, thrownOnError);
}
// Autogenerated method: System.Net.NTAuthentication.GetOutgoingBlob
::ArrayW<uint8_t> System::Net::NTAuthentication::GetOutgoingBlob(::ArrayW<uint8_t> incomingBlob, bool throwOnError, ByRef<::System::Net::SecurityStatusPal> statusCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::GetOutgoingBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutgoingBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(incomingBlob), ::il2cpp_utils::ExtractType(throwOnError), ::il2cpp_utils::ExtractIndependentType<::System::Net::SecurityStatusPal&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, incomingBlob, throwOnError, byref(statusCode));
}
// Autogenerated method: System.Net.NTAuthentication.GetClientSpecifiedSpn
::StringW System::Net::NTAuthentication::GetClientSpecifiedSpn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NTAuthentication::GetClientSpecifiedSpn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClientSpecifiedSpn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.NegotiationInfoClass
#include "System/Net/NegotiationInfoClass.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String NTLM
::StringW System::Net::NegotiationInfoClass::_get_NTLM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NegotiationInfoClass::_get_NTLM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "NegotiationInfoClass", "NTLM"));
}
// Autogenerated static field setter
// Set static field: static System.String NTLM
void System::Net::NegotiationInfoClass::_set_NTLM(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NegotiationInfoClass::_set_NTLM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NegotiationInfoClass", "NTLM", value));
}
// Autogenerated static field getter
// Get static field: static System.String Kerberos
::StringW System::Net::NegotiationInfoClass::_get_Kerberos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NegotiationInfoClass::_get_Kerberos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "NegotiationInfoClass", "Kerberos"));
}
// Autogenerated static field setter
// Set static field: static System.String Kerberos
void System::Net::NegotiationInfoClass::_set_Kerberos(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NegotiationInfoClass::_set_Kerberos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NegotiationInfoClass", "Kerberos", value));
}
// Autogenerated static field getter
// Get static field: static System.String Negotiate
::StringW System::Net::NegotiationInfoClass::_get_Negotiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NegotiationInfoClass::_get_Negotiate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "NegotiationInfoClass", "Negotiate"));
}
// Autogenerated static field setter
// Set static field: static System.String Negotiate
void System::Net::NegotiationInfoClass::_set_Negotiate(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NegotiationInfoClass::_set_Negotiate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NegotiationInfoClass", "Negotiate", value));
}
// Autogenerated static field getter
// Get static field: static System.String Basic
::StringW System::Net::NegotiationInfoClass::_get_Basic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NegotiationInfoClass::_get_Basic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "NegotiationInfoClass", "Basic"));
}
// Autogenerated static field setter
// Set static field: static System.String Basic
void System::Net::NegotiationInfoClass::_set_Basic(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NegotiationInfoClass::_set_Basic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NegotiationInfoClass", "Basic", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Net.RangeValidationHelpers
#include "System/Net/RangeValidationHelpers.hpp"
// Including type: System.ArraySegment`1
#include "System/ArraySegment_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.RangeValidationHelpers.ValidateRange
bool System::Net::RangeValidationHelpers::ValidateRange(int actual, int fromAllowed, int toAllowed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::RangeValidationHelpers::ValidateRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "RangeValidationHelpers", "ValidateRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actual), ::il2cpp_utils::ExtractType(fromAllowed), ::il2cpp_utils::ExtractType(toAllowed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, actual, fromAllowed, toAllowed);
}
// Autogenerated method: System.Net.RangeValidationHelpers.ValidateSegment
void System::Net::RangeValidationHelpers::ValidateSegment(::System::ArraySegment_1<uint8_t> segment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::RangeValidationHelpers::ValidateSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "RangeValidationHelpers", "ValidateSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, segment);
}
