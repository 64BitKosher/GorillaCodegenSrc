// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.UploadCertificateRequest
#include "PlayFab/MultiplayerModels/UploadCertificateRequest.hpp"
// Including type: PlayFab.MultiplayerModels.Certificate
#include "PlayFab/MultiplayerModels/Certificate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.Certificate GameCertificate
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::Certificate*& PlayFab::MultiplayerModels::UploadCertificateRequest::dyn_GameCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::UploadCertificateRequest::dyn_GameCertificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameCertificate"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.VirtualMachineSummary
#include "PlayFab/MultiplayerModels/VirtualMachineSummary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String HealthStatus
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::VirtualMachineSummary::dyn_HealthStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::VirtualMachineSummary::dyn_HealthStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HealthStatus"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String State
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::VirtualMachineSummary::dyn_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::VirtualMachineSummary::dyn_State");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "State"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String VmId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::VirtualMachineSummary::dyn_VmId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::VirtualMachineSummary::dyn_VmId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VmId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.LocalizationModels.GetLanguageListRequest
#include "PlayFab/LocalizationModels/GetLanguageListRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.LocalizationModels.GetLanguageListResponse
#include "PlayFab/LocalizationModels/GetLanguageListResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> LanguageList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::LocalizationModels::GetLanguageListResponse::dyn_LanguageList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::LocalizationModels::GetLanguageListResponse::dyn_LanguageList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LanguageList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.InsightsModels.InsightsEmptyRequest
#include "PlayFab/InsightsModels/InsightsEmptyRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.InsightsModels.InsightsGetDetailsResponse
#include "PlayFab/InsightsModels/InsightsGetDetailsResponse.hpp"
// Including type: PlayFab.InsightsModels.InsightsGetLimitsResponse
#include "PlayFab/InsightsModels/InsightsGetLimitsResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.InsightsModels.InsightsGetOperationStatusResponse
#include "PlayFab/InsightsModels/InsightsGetOperationStatusResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 DataUsageMb
[[deprecated("Use field access instead!")]] uint& PlayFab::InsightsModels::InsightsGetDetailsResponse::dyn_DataUsageMb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetDetailsResponse::dyn_DataUsageMb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DataUsageMb"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ErrorMessage
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::InsightsModels::InsightsGetDetailsResponse::dyn_ErrorMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetDetailsResponse::dyn_ErrorMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ErrorMessage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.InsightsModels.InsightsGetLimitsResponse Limits
[[deprecated("Use field access instead!")]] ::PlayFab::InsightsModels::InsightsGetLimitsResponse*& PlayFab::InsightsModels::InsightsGetDetailsResponse::dyn_Limits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetDetailsResponse::dyn_Limits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Limits"))->offset;
  return *reinterpret_cast<::PlayFab::InsightsModels::InsightsGetLimitsResponse**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.InsightsModels.InsightsGetOperationStatusResponse> PendingOperations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::InsightsModels::InsightsGetOperationStatusResponse*>*& PlayFab::InsightsModels::InsightsGetDetailsResponse::dyn_PendingOperations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetDetailsResponse::dyn_PendingOperations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PendingOperations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::InsightsModels::InsightsGetOperationStatusResponse*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PerformanceLevel
[[deprecated("Use field access instead!")]] int& PlayFab::InsightsModels::InsightsGetDetailsResponse::dyn_PerformanceLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetDetailsResponse::dyn_PerformanceLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PerformanceLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 RetentionDays
[[deprecated("Use field access instead!")]] int& PlayFab::InsightsModels::InsightsGetDetailsResponse::dyn_RetentionDays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetDetailsResponse::dyn_RetentionDays");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RetentionDays"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.InsightsModels.InsightsGetLimitsResponse
#include "PlayFab/InsightsModels/InsightsGetLimitsResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.InsightsModels.InsightsPerformanceLevel
#include "PlayFab/InsightsModels/InsightsPerformanceLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 DefaultPerformanceLevel
[[deprecated("Use field access instead!")]] int& PlayFab::InsightsModels::InsightsGetLimitsResponse::dyn_DefaultPerformanceLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetLimitsResponse::dyn_DefaultPerformanceLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DefaultPerformanceLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 DefaultStorageRetentionDays
[[deprecated("Use field access instead!")]] int& PlayFab::InsightsModels::InsightsGetLimitsResponse::dyn_DefaultStorageRetentionDays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetLimitsResponse::dyn_DefaultStorageRetentionDays");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DefaultStorageRetentionDays"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 StorageMaxRetentionDays
[[deprecated("Use field access instead!")]] int& PlayFab::InsightsModels::InsightsGetLimitsResponse::dyn_StorageMaxRetentionDays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetLimitsResponse::dyn_StorageMaxRetentionDays");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StorageMaxRetentionDays"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 StorageMinRetentionDays
[[deprecated("Use field access instead!")]] int& PlayFab::InsightsModels::InsightsGetLimitsResponse::dyn_StorageMinRetentionDays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetLimitsResponse::dyn_StorageMinRetentionDays");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StorageMinRetentionDays"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.InsightsModels.InsightsPerformanceLevel> SubMeters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::InsightsModels::InsightsPerformanceLevel*>*& PlayFab::InsightsModels::InsightsGetLimitsResponse::dyn_SubMeters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetLimitsResponse::dyn_SubMeters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SubMeters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::InsightsModels::InsightsPerformanceLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.InsightsModels.InsightsGetOperationStatusRequest
#include "PlayFab/InsightsModels/InsightsGetOperationStatusRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String OperationId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::InsightsModels::InsightsGetOperationStatusRequest::dyn_OperationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetOperationStatusRequest::dyn_OperationId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OperationId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.InsightsModels.InsightsGetOperationStatusResponse
#include "PlayFab/InsightsModels/InsightsGetOperationStatusResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Message
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::InsightsModels::InsightsGetOperationStatusResponse::dyn_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetOperationStatusResponse::dyn_Message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime OperationCompletedTime
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::InsightsModels::InsightsGetOperationStatusResponse::dyn_OperationCompletedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetOperationStatusResponse::dyn_OperationCompletedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OperationCompletedTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String OperationId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::InsightsModels::InsightsGetOperationStatusResponse::dyn_OperationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetOperationStatusResponse::dyn_OperationId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OperationId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime OperationLastUpdated
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::InsightsModels::InsightsGetOperationStatusResponse::dyn_OperationLastUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetOperationStatusResponse::dyn_OperationLastUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OperationLastUpdated"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime OperationStartedTime
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::InsightsModels::InsightsGetOperationStatusResponse::dyn_OperationStartedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetOperationStatusResponse::dyn_OperationStartedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OperationStartedTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String OperationType
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::InsightsModels::InsightsGetOperationStatusResponse::dyn_OperationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetOperationStatusResponse::dyn_OperationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OperationType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 OperationValue
[[deprecated("Use field access instead!")]] int& PlayFab::InsightsModels::InsightsGetOperationStatusResponse::dyn_OperationValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetOperationStatusResponse::dyn_OperationValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OperationValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Status
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::InsightsModels::InsightsGetOperationStatusResponse::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetOperationStatusResponse::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.InsightsModels.InsightsGetPendingOperationsRequest
#include "PlayFab/InsightsModels/InsightsGetPendingOperationsRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String OperationType
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::InsightsModels::InsightsGetPendingOperationsRequest::dyn_OperationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetPendingOperationsRequest::dyn_OperationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OperationType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.InsightsModels.InsightsGetPendingOperationsResponse
#include "PlayFab/InsightsModels/InsightsGetPendingOperationsResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.InsightsModels.InsightsGetOperationStatusResponse
#include "PlayFab/InsightsModels/InsightsGetOperationStatusResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.InsightsModels.InsightsGetOperationStatusResponse> PendingOperations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::InsightsModels::InsightsGetOperationStatusResponse*>*& PlayFab::InsightsModels::InsightsGetPendingOperationsResponse::dyn_PendingOperations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetPendingOperationsResponse::dyn_PendingOperations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PendingOperations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::InsightsModels::InsightsGetOperationStatusResponse*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.InsightsModels.InsightsOperationResponse
#include "PlayFab/InsightsModels/InsightsOperationResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Message
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::InsightsModels::InsightsOperationResponse::dyn_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsOperationResponse::dyn_Message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String OperationId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::InsightsModels::InsightsOperationResponse::dyn_OperationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsOperationResponse::dyn_OperationId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OperationId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String OperationType
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::InsightsModels::InsightsOperationResponse::dyn_OperationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsOperationResponse::dyn_OperationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OperationType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.InsightsModels.InsightsPerformanceLevel
#include "PlayFab/InsightsModels/InsightsPerformanceLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 ActiveEventExports
[[deprecated("Use field access instead!")]] int& PlayFab::InsightsModels::InsightsPerformanceLevel::dyn_ActiveEventExports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsPerformanceLevel::dyn_ActiveEventExports");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveEventExports"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CacheSizeMB
[[deprecated("Use field access instead!")]] int& PlayFab::InsightsModels::InsightsPerformanceLevel::dyn_CacheSizeMB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsPerformanceLevel::dyn_CacheSizeMB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CacheSizeMB"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Concurrency
[[deprecated("Use field access instead!")]] int& PlayFab::InsightsModels::InsightsPerformanceLevel::dyn_Concurrency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsPerformanceLevel::dyn_Concurrency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Concurrency"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double CreditsPerMinute
[[deprecated("Use field access instead!")]] double& PlayFab::InsightsModels::InsightsPerformanceLevel::dyn_CreditsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsPerformanceLevel::dyn_CreditsPerMinute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CreditsPerMinute"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 EventsPerSecond
[[deprecated("Use field access instead!")]] int& PlayFab::InsightsModels::InsightsPerformanceLevel::dyn_EventsPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsPerformanceLevel::dyn_EventsPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EventsPerSecond"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Level
[[deprecated("Use field access instead!")]] int& PlayFab::InsightsModels::InsightsPerformanceLevel::dyn_Level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsPerformanceLevel::dyn_Level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Level"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxMemoryPerQueryMB
[[deprecated("Use field access instead!")]] int& PlayFab::InsightsModels::InsightsPerformanceLevel::dyn_MaxMemoryPerQueryMB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsPerformanceLevel::dyn_MaxMemoryPerQueryMB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxMemoryPerQueryMB"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 VirtualCpuCores
[[deprecated("Use field access instead!")]] int& PlayFab::InsightsModels::InsightsPerformanceLevel::dyn_VirtualCpuCores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsPerformanceLevel::dyn_VirtualCpuCores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VirtualCpuCores"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.InsightsModels.InsightsSetPerformanceRequest
#include "PlayFab/InsightsModels/InsightsSetPerformanceRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 PerformanceLevel
[[deprecated("Use field access instead!")]] int& PlayFab::InsightsModels::InsightsSetPerformanceRequest::dyn_PerformanceLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsSetPerformanceRequest::dyn_PerformanceLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PerformanceLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.InsightsModels.InsightsSetStorageRetentionRequest
#include "PlayFab/InsightsModels/InsightsSetStorageRetentionRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 RetentionDays
[[deprecated("Use field access instead!")]] int& PlayFab::InsightsModels::InsightsSetStorageRetentionRequest::dyn_RetentionDays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsSetStorageRetentionRequest::dyn_RetentionDays");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RetentionDays"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.AcceptGroupApplicationRequest
#include "PlayFab/GroupsModels/AcceptGroupApplicationRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::AcceptGroupApplicationRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::AcceptGroupApplicationRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::AcceptGroupApplicationRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::AcceptGroupApplicationRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.AcceptGroupInvitationRequest
#include "PlayFab/GroupsModels/AcceptGroupInvitationRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::AcceptGroupInvitationRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::AcceptGroupInvitationRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::AcceptGroupInvitationRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::AcceptGroupInvitationRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.AddMembersRequest
#include "PlayFab/GroupsModels/AddMembersRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::AddMembersRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::AddMembersRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.GroupsModels.EntityKey> Members
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::GroupsModels::EntityKey*>*& PlayFab::GroupsModels::AddMembersRequest::dyn_Members() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::AddMembersRequest::dyn_Members");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Members"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::GroupsModels::EntityKey*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::AddMembersRequest::dyn_RoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::AddMembersRequest::dyn_RoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.ApplyToGroupRequest
#include "PlayFab/GroupsModels/ApplyToGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Boolean> AutoAcceptOutstandingInvite
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& PlayFab::GroupsModels::ApplyToGroupRequest::dyn_AutoAcceptOutstandingInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ApplyToGroupRequest::dyn_AutoAcceptOutstandingInvite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoAcceptOutstandingInvite"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::ApplyToGroupRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ApplyToGroupRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::ApplyToGroupRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ApplyToGroupRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.ApplyToGroupResponse
#include "PlayFab/GroupsModels/ApplyToGroupResponse.hpp"
// Including type: PlayFab.GroupsModels.EntityWithLineage
#include "PlayFab/GroupsModels/EntityWithLineage.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityWithLineage Entity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityWithLineage*& PlayFab::GroupsModels::ApplyToGroupResponse::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ApplyToGroupResponse::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityWithLineage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime Expires
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::GroupsModels::ApplyToGroupResponse::dyn_Expires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ApplyToGroupResponse::dyn_Expires");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Expires"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::ApplyToGroupResponse::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ApplyToGroupResponse::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.BlockEntityRequest
#include "PlayFab/GroupsModels/BlockEntityRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::BlockEntityRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::BlockEntityRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::BlockEntityRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::BlockEntityRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.ChangeMemberRoleRequest
#include "PlayFab/GroupsModels/ChangeMemberRoleRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String DestinationRoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::ChangeMemberRoleRequest::dyn_DestinationRoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ChangeMemberRoleRequest::dyn_DestinationRoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationRoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::ChangeMemberRoleRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ChangeMemberRoleRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.GroupsModels.EntityKey> Members
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::GroupsModels::EntityKey*>*& PlayFab::GroupsModels::ChangeMemberRoleRequest::dyn_Members() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ChangeMemberRoleRequest::dyn_Members");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Members"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::GroupsModels::EntityKey*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String OriginRoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::ChangeMemberRoleRequest::dyn_OriginRoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ChangeMemberRoleRequest::dyn_OriginRoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OriginRoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.CreateGroupRequest
#include "PlayFab/GroupsModels/CreateGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::CreateGroupRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::CreateGroupRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String GroupName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::CreateGroupRequest::dyn_GroupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::CreateGroupRequest::dyn_GroupName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GroupName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.CreateGroupResponse
#include "PlayFab/GroupsModels/CreateGroupResponse.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String AdminRoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::CreateGroupResponse::dyn_AdminRoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::CreateGroupResponse::dyn_AdminRoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AdminRoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime Created
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::GroupsModels::CreateGroupResponse::dyn_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::CreateGroupResponse::dyn_Created");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Created"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::CreateGroupResponse::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::CreateGroupResponse::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String GroupName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::CreateGroupResponse::dyn_GroupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::CreateGroupResponse::dyn_GroupName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GroupName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MemberRoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::CreateGroupResponse::dyn_MemberRoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::CreateGroupResponse::dyn_MemberRoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MemberRoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ProfileVersion
[[deprecated("Use field access instead!")]] int& PlayFab::GroupsModels::CreateGroupResponse::dyn_ProfileVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::CreateGroupResponse::dyn_ProfileVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProfileVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.String> Roles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& PlayFab::GroupsModels::CreateGroupResponse::dyn_Roles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::CreateGroupResponse::dyn_Roles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Roles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.CreateGroupRoleRequest
#include "PlayFab/GroupsModels/CreateGroupRoleRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::CreateGroupRoleRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::CreateGroupRoleRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::CreateGroupRoleRequest::dyn_RoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::CreateGroupRoleRequest::dyn_RoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoleName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::CreateGroupRoleRequest::dyn_RoleName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::CreateGroupRoleRequest::dyn_RoleName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.CreateGroupRoleResponse
#include "PlayFab/GroupsModels/CreateGroupRoleResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 ProfileVersion
[[deprecated("Use field access instead!")]] int& PlayFab::GroupsModels::CreateGroupRoleResponse::dyn_ProfileVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::CreateGroupRoleResponse::dyn_ProfileVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProfileVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::CreateGroupRoleResponse::dyn_RoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::CreateGroupRoleResponse::dyn_RoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoleName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::CreateGroupRoleResponse::dyn_RoleName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::CreateGroupRoleResponse::dyn_RoleName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.DeleteGroupRequest
#include "PlayFab/GroupsModels/DeleteGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::DeleteGroupRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::DeleteGroupRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.DeleteRoleRequest
#include "PlayFab/GroupsModels/DeleteRoleRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::DeleteRoleRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::DeleteRoleRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::DeleteRoleRequest::dyn_RoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::DeleteRoleRequest::dyn_RoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.EmptyResponse
#include "PlayFab/GroupsModels/EmptyResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Id
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::EntityKey::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::EntityKey::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Type
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::EntityKey::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::EntityKey::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.EntityMemberRole
#include "PlayFab/GroupsModels/EntityMemberRole.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.GroupsModels.EntityWithLineage
#include "PlayFab/GroupsModels/EntityWithLineage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.GroupsModels.EntityWithLineage> Members
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::GroupsModels::EntityWithLineage*>*& PlayFab::GroupsModels::EntityMemberRole::dyn_Members() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::EntityMemberRole::dyn_Members");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Members"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::GroupsModels::EntityWithLineage*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::EntityMemberRole::dyn_RoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::EntityMemberRole::dyn_RoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoleName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::EntityMemberRole::dyn_RoleName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::EntityMemberRole::dyn_RoleName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.EntityWithLineage
#include "PlayFab/GroupsModels/EntityWithLineage.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Key
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::EntityWithLineage::dyn_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::EntityWithLineage::dyn_Key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Key"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,PlayFab.GroupsModels.EntityKey> Lineage
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::GroupsModels::EntityKey*>*& PlayFab::GroupsModels::EntityWithLineage::dyn_Lineage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::EntityWithLineage::dyn_Lineage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Lineage"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::GroupsModels::EntityKey*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.GetGroupRequest
#include "PlayFab/GroupsModels/GetGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::GetGroupRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GetGroupRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String GroupName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::GetGroupRequest::dyn_GroupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GetGroupRequest::dyn_GroupName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GroupName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.GetGroupResponse
#include "PlayFab/GroupsModels/GetGroupResponse.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String AdminRoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::GetGroupResponse::dyn_AdminRoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GetGroupResponse::dyn_AdminRoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AdminRoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime Created
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::GroupsModels::GetGroupResponse::dyn_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GetGroupResponse::dyn_Created");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Created"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::GetGroupResponse::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GetGroupResponse::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String GroupName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::GetGroupResponse::dyn_GroupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GetGroupResponse::dyn_GroupName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GroupName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MemberRoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::GetGroupResponse::dyn_MemberRoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GetGroupResponse::dyn_MemberRoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MemberRoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ProfileVersion
[[deprecated("Use field access instead!")]] int& PlayFab::GroupsModels::GetGroupResponse::dyn_ProfileVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GetGroupResponse::dyn_ProfileVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProfileVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.String> Roles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& PlayFab::GroupsModels::GetGroupResponse::dyn_Roles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GetGroupResponse::dyn_Roles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Roles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.GroupApplication
#include "PlayFab/GroupsModels/GroupApplication.hpp"
// Including type: PlayFab.GroupsModels.EntityWithLineage
#include "PlayFab/GroupsModels/EntityWithLineage.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityWithLineage Entity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityWithLineage*& PlayFab::GroupsModels::GroupApplication::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GroupApplication::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityWithLineage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime Expires
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::GroupsModels::GroupApplication::dyn_Expires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GroupApplication::dyn_Expires");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Expires"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::GroupApplication::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GroupApplication::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.GroupBlock
#include "PlayFab/GroupsModels/GroupBlock.hpp"
// Including type: PlayFab.GroupsModels.EntityWithLineage
#include "PlayFab/GroupsModels/EntityWithLineage.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityWithLineage Entity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityWithLineage*& PlayFab::GroupsModels::GroupBlock::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GroupBlock::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityWithLineage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::GroupBlock::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GroupBlock::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.GroupInvitation
#include "PlayFab/GroupsModels/GroupInvitation.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
// Including type: PlayFab.GroupsModels.EntityWithLineage
#include "PlayFab/GroupsModels/EntityWithLineage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.DateTime Expires
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::GroupsModels::GroupInvitation::dyn_Expires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GroupInvitation::dyn_Expires");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Expires"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::GroupInvitation::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GroupInvitation::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityWithLineage InvitedByEntity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityWithLineage*& PlayFab::GroupsModels::GroupInvitation::dyn_InvitedByEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GroupInvitation::dyn_InvitedByEntity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedByEntity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityWithLineage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityWithLineage InvitedEntity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityWithLineage*& PlayFab::GroupsModels::GroupInvitation::dyn_InvitedEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GroupInvitation::dyn_InvitedEntity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedEntity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityWithLineage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::GroupInvitation::dyn_RoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GroupInvitation::dyn_RoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.GroupRole
#include "PlayFab/GroupsModels/GroupRole.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String RoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::GroupRole::dyn_RoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GroupRole::dyn_RoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoleName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::GroupRole::dyn_RoleName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GroupRole::dyn_RoleName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.GroupWithRoles
#include "PlayFab/GroupsModels/GroupWithRoles.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.GroupsModels.GroupRole
#include "PlayFab/GroupsModels/GroupRole.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::GroupWithRoles::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GroupWithRoles::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String GroupName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::GroupWithRoles::dyn_GroupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GroupWithRoles::dyn_GroupName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GroupName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ProfileVersion
[[deprecated("Use field access instead!")]] int& PlayFab::GroupsModels::GroupWithRoles::dyn_ProfileVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GroupWithRoles::dyn_ProfileVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProfileVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.GroupsModels.GroupRole> Roles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::GroupsModels::GroupRole*>*& PlayFab::GroupsModels::GroupWithRoles::dyn_Roles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::GroupWithRoles::dyn_Roles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Roles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::GroupsModels::GroupRole*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.InviteToGroupRequest
#include "PlayFab/GroupsModels/InviteToGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Boolean> AutoAcceptOutstandingApplication
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& PlayFab::GroupsModels::InviteToGroupRequest::dyn_AutoAcceptOutstandingApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::InviteToGroupRequest::dyn_AutoAcceptOutstandingApplication");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoAcceptOutstandingApplication"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::InviteToGroupRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::InviteToGroupRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::InviteToGroupRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::InviteToGroupRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::InviteToGroupRequest::dyn_RoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::InviteToGroupRequest::dyn_RoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.InviteToGroupResponse
#include "PlayFab/GroupsModels/InviteToGroupResponse.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
// Including type: PlayFab.GroupsModels.EntityWithLineage
#include "PlayFab/GroupsModels/EntityWithLineage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.DateTime Expires
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::GroupsModels::InviteToGroupResponse::dyn_Expires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::InviteToGroupResponse::dyn_Expires");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Expires"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::InviteToGroupResponse::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::InviteToGroupResponse::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityWithLineage InvitedByEntity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityWithLineage*& PlayFab::GroupsModels::InviteToGroupResponse::dyn_InvitedByEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::InviteToGroupResponse::dyn_InvitedByEntity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedByEntity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityWithLineage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityWithLineage InvitedEntity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityWithLineage*& PlayFab::GroupsModels::InviteToGroupResponse::dyn_InvitedEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::InviteToGroupResponse::dyn_InvitedEntity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedEntity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityWithLineage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::InviteToGroupResponse::dyn_RoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::InviteToGroupResponse::dyn_RoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.IsMemberRequest
#include "PlayFab/GroupsModels/IsMemberRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::IsMemberRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::IsMemberRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::IsMemberRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::IsMemberRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::IsMemberRequest::dyn_RoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::IsMemberRequest::dyn_RoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.IsMemberResponse
#include "PlayFab/GroupsModels/IsMemberResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsMember
[[deprecated("Use field access instead!")]] bool& PlayFab::GroupsModels::IsMemberResponse::dyn_IsMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::IsMemberResponse::dyn_IsMember");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsMember"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.ListGroupApplicationsRequest
#include "PlayFab/GroupsModels/ListGroupApplicationsRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::ListGroupApplicationsRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ListGroupApplicationsRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.ListGroupApplicationsResponse
#include "PlayFab/GroupsModels/ListGroupApplicationsResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.GroupsModels.GroupApplication
#include "PlayFab/GroupsModels/GroupApplication.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.GroupsModels.GroupApplication> Applications
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::GroupsModels::GroupApplication*>*& PlayFab::GroupsModels::ListGroupApplicationsResponse::dyn_Applications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ListGroupApplicationsResponse::dyn_Applications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Applications"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::GroupsModels::GroupApplication*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.ListGroupBlocksRequest
#include "PlayFab/GroupsModels/ListGroupBlocksRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::ListGroupBlocksRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ListGroupBlocksRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.ListGroupBlocksResponse
#include "PlayFab/GroupsModels/ListGroupBlocksResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.GroupsModels.GroupBlock
#include "PlayFab/GroupsModels/GroupBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.GroupsModels.GroupBlock> BlockedEntities
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::GroupsModels::GroupBlock*>*& PlayFab::GroupsModels::ListGroupBlocksResponse::dyn_BlockedEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ListGroupBlocksResponse::dyn_BlockedEntities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlockedEntities"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::GroupsModels::GroupBlock*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.ListGroupInvitationsRequest
#include "PlayFab/GroupsModels/ListGroupInvitationsRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::ListGroupInvitationsRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ListGroupInvitationsRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.ListGroupInvitationsResponse
#include "PlayFab/GroupsModels/ListGroupInvitationsResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.GroupsModels.GroupInvitation
#include "PlayFab/GroupsModels/GroupInvitation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.GroupsModels.GroupInvitation> Invitations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::GroupsModels::GroupInvitation*>*& PlayFab::GroupsModels::ListGroupInvitationsResponse::dyn_Invitations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ListGroupInvitationsResponse::dyn_Invitations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Invitations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::GroupsModels::GroupInvitation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.ListGroupMembersRequest
#include "PlayFab/GroupsModels/ListGroupMembersRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::ListGroupMembersRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ListGroupMembersRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.ListGroupMembersResponse
#include "PlayFab/GroupsModels/ListGroupMembersResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.GroupsModels.EntityMemberRole
#include "PlayFab/GroupsModels/EntityMemberRole.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.GroupsModels.EntityMemberRole> Members
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::GroupsModels::EntityMemberRole*>*& PlayFab::GroupsModels::ListGroupMembersResponse::dyn_Members() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ListGroupMembersResponse::dyn_Members");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Members"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::GroupsModels::EntityMemberRole*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.ListMembershipOpportunitiesRequest
#include "PlayFab/GroupsModels/ListMembershipOpportunitiesRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::ListMembershipOpportunitiesRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ListMembershipOpportunitiesRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.ListMembershipOpportunitiesResponse
#include "PlayFab/GroupsModels/ListMembershipOpportunitiesResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.GroupsModels.GroupApplication
#include "PlayFab/GroupsModels/GroupApplication.hpp"
// Including type: PlayFab.GroupsModels.GroupInvitation
#include "PlayFab/GroupsModels/GroupInvitation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.GroupsModels.GroupApplication> Applications
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::GroupsModels::GroupApplication*>*& PlayFab::GroupsModels::ListMembershipOpportunitiesResponse::dyn_Applications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ListMembershipOpportunitiesResponse::dyn_Applications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Applications"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::GroupsModels::GroupApplication*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.GroupsModels.GroupInvitation> Invitations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::GroupsModels::GroupInvitation*>*& PlayFab::GroupsModels::ListMembershipOpportunitiesResponse::dyn_Invitations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ListMembershipOpportunitiesResponse::dyn_Invitations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Invitations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::GroupsModels::GroupInvitation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.ListMembershipRequest
#include "PlayFab/GroupsModels/ListMembershipRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::ListMembershipRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ListMembershipRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.ListMembershipResponse
#include "PlayFab/GroupsModels/ListMembershipResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.GroupsModels.GroupWithRoles
#include "PlayFab/GroupsModels/GroupWithRoles.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.GroupsModels.GroupWithRoles> Groups
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::GroupsModels::GroupWithRoles*>*& PlayFab::GroupsModels::ListMembershipResponse::dyn_Groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ListMembershipResponse::dyn_Groups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Groups"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::GroupsModels::GroupWithRoles*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.OperationTypes
#include "PlayFab/GroupsModels/OperationTypes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.GroupsModels.OperationTypes Created
::PlayFab::GroupsModels::OperationTypes PlayFab::GroupsModels::OperationTypes::_get_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::OperationTypes::_get_Created");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::GroupsModels::OperationTypes>("PlayFab.GroupsModels", "OperationTypes", "Created"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.GroupsModels.OperationTypes Created
void PlayFab::GroupsModels::OperationTypes::_set_Created(::PlayFab::GroupsModels::OperationTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::OperationTypes::_set_Created");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.GroupsModels", "OperationTypes", "Created", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.GroupsModels.OperationTypes Updated
::PlayFab::GroupsModels::OperationTypes PlayFab::GroupsModels::OperationTypes::_get_Updated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::OperationTypes::_get_Updated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::GroupsModels::OperationTypes>("PlayFab.GroupsModels", "OperationTypes", "Updated"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.GroupsModels.OperationTypes Updated
void PlayFab::GroupsModels::OperationTypes::_set_Updated(::PlayFab::GroupsModels::OperationTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::OperationTypes::_set_Updated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.GroupsModels", "OperationTypes", "Updated", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.GroupsModels.OperationTypes Deleted
::PlayFab::GroupsModels::OperationTypes PlayFab::GroupsModels::OperationTypes::_get_Deleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::OperationTypes::_get_Deleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::GroupsModels::OperationTypes>("PlayFab.GroupsModels", "OperationTypes", "Deleted"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.GroupsModels.OperationTypes Deleted
void PlayFab::GroupsModels::OperationTypes::_set_Deleted(::PlayFab::GroupsModels::OperationTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::OperationTypes::_set_Deleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.GroupsModels", "OperationTypes", "Deleted", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.GroupsModels.OperationTypes None
::PlayFab::GroupsModels::OperationTypes PlayFab::GroupsModels::OperationTypes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::OperationTypes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::GroupsModels::OperationTypes>("PlayFab.GroupsModels", "OperationTypes", "None"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.GroupsModels.OperationTypes None
void PlayFab::GroupsModels::OperationTypes::_set_None(::PlayFab::GroupsModels::OperationTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::OperationTypes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.GroupsModels", "OperationTypes", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::GroupsModels::OperationTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::OperationTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.RemoveGroupApplicationRequest
#include "PlayFab/GroupsModels/RemoveGroupApplicationRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::RemoveGroupApplicationRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::RemoveGroupApplicationRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::RemoveGroupApplicationRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::RemoveGroupApplicationRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.RemoveGroupInvitationRequest
#include "PlayFab/GroupsModels/RemoveGroupInvitationRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::RemoveGroupInvitationRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::RemoveGroupInvitationRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::RemoveGroupInvitationRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::RemoveGroupInvitationRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.RemoveMembersRequest
#include "PlayFab/GroupsModels/RemoveMembersRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::RemoveMembersRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::RemoveMembersRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.GroupsModels.EntityKey> Members
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::GroupsModels::EntityKey*>*& PlayFab::GroupsModels::RemoveMembersRequest::dyn_Members() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::RemoveMembersRequest::dyn_Members");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Members"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::GroupsModels::EntityKey*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::RemoveMembersRequest::dyn_RoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::RemoveMembersRequest::dyn_RoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.UnblockEntityRequest
#include "PlayFab/GroupsModels/UnblockEntityRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::UnblockEntityRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UnblockEntityRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::UnblockEntityRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UnblockEntityRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.UpdateGroupRequest
#include "PlayFab/GroupsModels/UpdateGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String AdminRoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::UpdateGroupRequest::dyn_AdminRoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UpdateGroupRequest::dyn_AdminRoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AdminRoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Int32> ExpectedProfileVersion
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& PlayFab::GroupsModels::UpdateGroupRequest::dyn_ExpectedProfileVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UpdateGroupRequest::dyn_ExpectedProfileVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpectedProfileVersion"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::UpdateGroupRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UpdateGroupRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String GroupName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::UpdateGroupRequest::dyn_GroupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UpdateGroupRequest::dyn_GroupName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GroupName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MemberRoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::UpdateGroupRequest::dyn_MemberRoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UpdateGroupRequest::dyn_MemberRoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MemberRoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.UpdateGroupResponse
#include "PlayFab/GroupsModels/UpdateGroupResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String OperationReason
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::UpdateGroupResponse::dyn_OperationReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UpdateGroupResponse::dyn_OperationReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OperationReason"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ProfileVersion
[[deprecated("Use field access instead!")]] int& PlayFab::GroupsModels::UpdateGroupResponse::dyn_ProfileVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UpdateGroupResponse::dyn_ProfileVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProfileVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.GroupsModels.OperationTypes> SetResult
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::GroupsModels::OperationTypes>& PlayFab::GroupsModels::UpdateGroupResponse::dyn_SetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UpdateGroupResponse::dyn_SetResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SetResult"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::GroupsModels::OperationTypes>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.UpdateGroupRoleRequest
#include "PlayFab/GroupsModels/UpdateGroupRoleRequest.hpp"
// Including type: PlayFab.GroupsModels.EntityKey
#include "PlayFab/GroupsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Int32> ExpectedProfileVersion
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& PlayFab::GroupsModels::UpdateGroupRoleRequest::dyn_ExpectedProfileVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UpdateGroupRoleRequest::dyn_ExpectedProfileVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpectedProfileVersion"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.GroupsModels.EntityKey Group
[[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& PlayFab::GroupsModels::UpdateGroupRoleRequest::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UpdateGroupRoleRequest::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<::PlayFab::GroupsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::UpdateGroupRoleRequest::dyn_RoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UpdateGroupRoleRequest::dyn_RoleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoleName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::UpdateGroupRoleRequest::dyn_RoleName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UpdateGroupRoleRequest::dyn_RoleName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoleName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.GroupsModels.UpdateGroupRoleResponse
#include "PlayFab/GroupsModels/UpdateGroupRoleResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String OperationReason
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::GroupsModels::UpdateGroupRoleResponse::dyn_OperationReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UpdateGroupRoleResponse::dyn_OperationReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OperationReason"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ProfileVersion
[[deprecated("Use field access instead!")]] int& PlayFab::GroupsModels::UpdateGroupRoleResponse::dyn_ProfileVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UpdateGroupRoleResponse::dyn_ProfileVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProfileVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.GroupsModels.OperationTypes> SetResult
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::GroupsModels::OperationTypes>& PlayFab::GroupsModels::UpdateGroupRoleResponse::dyn_SetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::UpdateGroupRoleResponse::dyn_SetResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SetResult"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::GroupsModels::OperationTypes>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.AnalysisTaskState
#include "PlayFab/ExperimentationModels/AnalysisTaskState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.ExperimentationModels.AnalysisTaskState Waiting
::PlayFab::ExperimentationModels::AnalysisTaskState PlayFab::ExperimentationModels::AnalysisTaskState::_get_Waiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::AnalysisTaskState::_get_Waiting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ExperimentationModels::AnalysisTaskState>("PlayFab.ExperimentationModels", "AnalysisTaskState", "Waiting"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ExperimentationModels.AnalysisTaskState Waiting
void PlayFab::ExperimentationModels::AnalysisTaskState::_set_Waiting(::PlayFab::ExperimentationModels::AnalysisTaskState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::AnalysisTaskState::_set_Waiting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ExperimentationModels", "AnalysisTaskState", "Waiting", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.ExperimentationModels.AnalysisTaskState ReadyForSubmission
::PlayFab::ExperimentationModels::AnalysisTaskState PlayFab::ExperimentationModels::AnalysisTaskState::_get_ReadyForSubmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::AnalysisTaskState::_get_ReadyForSubmission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ExperimentationModels::AnalysisTaskState>("PlayFab.ExperimentationModels", "AnalysisTaskState", "ReadyForSubmission"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ExperimentationModels.AnalysisTaskState ReadyForSubmission
void PlayFab::ExperimentationModels::AnalysisTaskState::_set_ReadyForSubmission(::PlayFab::ExperimentationModels::AnalysisTaskState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::AnalysisTaskState::_set_ReadyForSubmission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ExperimentationModels", "AnalysisTaskState", "ReadyForSubmission", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.ExperimentationModels.AnalysisTaskState SubmittingToPipeline
::PlayFab::ExperimentationModels::AnalysisTaskState PlayFab::ExperimentationModels::AnalysisTaskState::_get_SubmittingToPipeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::AnalysisTaskState::_get_SubmittingToPipeline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ExperimentationModels::AnalysisTaskState>("PlayFab.ExperimentationModels", "AnalysisTaskState", "SubmittingToPipeline"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ExperimentationModels.AnalysisTaskState SubmittingToPipeline
void PlayFab::ExperimentationModels::AnalysisTaskState::_set_SubmittingToPipeline(::PlayFab::ExperimentationModels::AnalysisTaskState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::AnalysisTaskState::_set_SubmittingToPipeline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ExperimentationModels", "AnalysisTaskState", "SubmittingToPipeline", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.ExperimentationModels.AnalysisTaskState Running
::PlayFab::ExperimentationModels::AnalysisTaskState PlayFab::ExperimentationModels::AnalysisTaskState::_get_Running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::AnalysisTaskState::_get_Running");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ExperimentationModels::AnalysisTaskState>("PlayFab.ExperimentationModels", "AnalysisTaskState", "Running"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ExperimentationModels.AnalysisTaskState Running
void PlayFab::ExperimentationModels::AnalysisTaskState::_set_Running(::PlayFab::ExperimentationModels::AnalysisTaskState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::AnalysisTaskState::_set_Running");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ExperimentationModels", "AnalysisTaskState", "Running", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.ExperimentationModels.AnalysisTaskState Completed
::PlayFab::ExperimentationModels::AnalysisTaskState PlayFab::ExperimentationModels::AnalysisTaskState::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::AnalysisTaskState::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ExperimentationModels::AnalysisTaskState>("PlayFab.ExperimentationModels", "AnalysisTaskState", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ExperimentationModels.AnalysisTaskState Completed
void PlayFab::ExperimentationModels::AnalysisTaskState::_set_Completed(::PlayFab::ExperimentationModels::AnalysisTaskState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::AnalysisTaskState::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ExperimentationModels", "AnalysisTaskState", "Completed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.ExperimentationModels.AnalysisTaskState Failed
::PlayFab::ExperimentationModels::AnalysisTaskState PlayFab::ExperimentationModels::AnalysisTaskState::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::AnalysisTaskState::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ExperimentationModels::AnalysisTaskState>("PlayFab.ExperimentationModels", "AnalysisTaskState", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ExperimentationModels.AnalysisTaskState Failed
void PlayFab::ExperimentationModels::AnalysisTaskState::_set_Failed(::PlayFab::ExperimentationModels::AnalysisTaskState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::AnalysisTaskState::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ExperimentationModels", "AnalysisTaskState", "Failed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.ExperimentationModels.AnalysisTaskState Canceled
::PlayFab::ExperimentationModels::AnalysisTaskState PlayFab::ExperimentationModels::AnalysisTaskState::_get_Canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::AnalysisTaskState::_get_Canceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ExperimentationModels::AnalysisTaskState>("PlayFab.ExperimentationModels", "AnalysisTaskState", "Canceled"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ExperimentationModels.AnalysisTaskState Canceled
void PlayFab::ExperimentationModels::AnalysisTaskState::_set_Canceled(::PlayFab::ExperimentationModels::AnalysisTaskState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::AnalysisTaskState::_set_Canceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ExperimentationModels", "AnalysisTaskState", "Canceled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::ExperimentationModels::AnalysisTaskState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::AnalysisTaskState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.CreateExperimentRequest
#include "PlayFab/ExperimentationModels/CreateExperimentRequest.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.ExperimentationModels.Variant
#include "PlayFab/ExperimentationModels/Variant.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Description
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::CreateExperimentRequest::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::CreateExperimentRequest::dyn_Description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Duration
[[deprecated("Use field access instead!")]] uint& PlayFab::ExperimentationModels::CreateExperimentRequest::dyn_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::CreateExperimentRequest::dyn_Duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Duration"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.ExperimentationModels.ExperimentType> ExperimentType
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::ExperimentationModels::ExperimentType>& PlayFab::ExperimentationModels::CreateExperimentRequest::dyn_ExperimentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::CreateExperimentRequest::dyn_ExperimentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExperimentType"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::ExperimentationModels::ExperimentType>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::CreateExperimentRequest::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::CreateExperimentRequest::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SegmentId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::CreateExperimentRequest::dyn_SegmentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::CreateExperimentRequest::dyn_SegmentId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SegmentId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime StartDate
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::ExperimentationModels::CreateExperimentRequest::dyn_StartDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::CreateExperimentRequest::dyn_StartDate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartDate"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> TitlePlayerAccountTestIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::ExperimentationModels::CreateExperimentRequest::dyn_TitlePlayerAccountTestIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::CreateExperimentRequest::dyn_TitlePlayerAccountTestIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TitlePlayerAccountTestIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.ExperimentationModels.Variant> Variants
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ExperimentationModels::Variant*>*& PlayFab::ExperimentationModels::CreateExperimentRequest::dyn_Variants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::CreateExperimentRequest::dyn_Variants");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Variants"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::ExperimentationModels::Variant*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.CreateExperimentResult
#include "PlayFab/ExperimentationModels/CreateExperimentResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ExperimentId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::CreateExperimentResult::dyn_ExperimentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::CreateExperimentResult::dyn_ExperimentId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExperimentId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.DeleteExperimentRequest
#include "PlayFab/ExperimentationModels/DeleteExperimentRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ExperimentId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::DeleteExperimentRequest::dyn_ExperimentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::DeleteExperimentRequest::dyn_ExperimentId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExperimentId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.EmptyResponse
#include "PlayFab/ExperimentationModels/EmptyResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.EntityKey
#include "PlayFab/ExperimentationModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Id
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::EntityKey::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::EntityKey::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Type
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::EntityKey::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::EntityKey::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.Experiment
#include "PlayFab/ExperimentationModels/Experiment.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.ExperimentationModels.Variant
#include "PlayFab/ExperimentationModels/Variant.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Description
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::Experiment::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Experiment::dyn_Description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Duration
[[deprecated("Use field access instead!")]] uint& PlayFab::ExperimentationModels::Experiment::dyn_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Experiment::dyn_Duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Duration"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.ExperimentationModels.ExperimentType> ExperimentType
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::ExperimentationModels::ExperimentType>& PlayFab::ExperimentationModels::Experiment::dyn_ExperimentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Experiment::dyn_ExperimentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExperimentType"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::ExperimentationModels::ExperimentType>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Id
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::Experiment::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Experiment::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::Experiment::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Experiment::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SegmentId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::Experiment::dyn_SegmentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Experiment::dyn_SegmentId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SegmentId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime StartDate
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::ExperimentationModels::Experiment::dyn_StartDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Experiment::dyn_StartDate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartDate"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.ExperimentationModels.ExperimentState> State
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::ExperimentationModels::ExperimentState>& PlayFab::ExperimentationModels::Experiment::dyn_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Experiment::dyn_State");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "State"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::ExperimentationModels::ExperimentState>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> TitlePlayerAccountTestIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::ExperimentationModels::Experiment::dyn_TitlePlayerAccountTestIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Experiment::dyn_TitlePlayerAccountTestIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TitlePlayerAccountTestIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.ExperimentationModels.Variant> Variants
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ExperimentationModels::Variant*>*& PlayFab::ExperimentationModels::Experiment::dyn_Variants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Experiment::dyn_Variants");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Variants"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::ExperimentationModels::Variant*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.ExperimentState
#include "PlayFab/ExperimentationModels/ExperimentState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.ExperimentationModels.ExperimentState New
::PlayFab::ExperimentationModels::ExperimentState PlayFab::ExperimentationModels::ExperimentState::_get_New() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ExperimentState::_get_New");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ExperimentationModels::ExperimentState>("PlayFab.ExperimentationModels", "ExperimentState", "New"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ExperimentationModels.ExperimentState New
void PlayFab::ExperimentationModels::ExperimentState::_set_New(::PlayFab::ExperimentationModels::ExperimentState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ExperimentState::_set_New");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ExperimentationModels", "ExperimentState", "New", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.ExperimentationModels.ExperimentState Started
::PlayFab::ExperimentationModels::ExperimentState PlayFab::ExperimentationModels::ExperimentState::_get_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ExperimentState::_get_Started");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ExperimentationModels::ExperimentState>("PlayFab.ExperimentationModels", "ExperimentState", "Started"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ExperimentationModels.ExperimentState Started
void PlayFab::ExperimentationModels::ExperimentState::_set_Started(::PlayFab::ExperimentationModels::ExperimentState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ExperimentState::_set_Started");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ExperimentationModels", "ExperimentState", "Started", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.ExperimentationModels.ExperimentState Stopped
::PlayFab::ExperimentationModels::ExperimentState PlayFab::ExperimentationModels::ExperimentState::_get_Stopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ExperimentState::_get_Stopped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ExperimentationModels::ExperimentState>("PlayFab.ExperimentationModels", "ExperimentState", "Stopped"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ExperimentationModels.ExperimentState Stopped
void PlayFab::ExperimentationModels::ExperimentState::_set_Stopped(::PlayFab::ExperimentationModels::ExperimentState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ExperimentState::_set_Stopped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ExperimentationModels", "ExperimentState", "Stopped", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.ExperimentationModels.ExperimentState Deleted
::PlayFab::ExperimentationModels::ExperimentState PlayFab::ExperimentationModels::ExperimentState::_get_Deleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ExperimentState::_get_Deleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ExperimentationModels::ExperimentState>("PlayFab.ExperimentationModels", "ExperimentState", "Deleted"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ExperimentationModels.ExperimentState Deleted
void PlayFab::ExperimentationModels::ExperimentState::_set_Deleted(::PlayFab::ExperimentationModels::ExperimentState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ExperimentState::_set_Deleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ExperimentationModels", "ExperimentState", "Deleted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::ExperimentationModels::ExperimentState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ExperimentState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.ExperimentType
#include "PlayFab/ExperimentationModels/ExperimentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.ExperimentationModels.ExperimentType Active
::PlayFab::ExperimentationModels::ExperimentType PlayFab::ExperimentationModels::ExperimentType::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ExperimentType::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ExperimentationModels::ExperimentType>("PlayFab.ExperimentationModels", "ExperimentType", "Active"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ExperimentationModels.ExperimentType Active
void PlayFab::ExperimentationModels::ExperimentType::_set_Active(::PlayFab::ExperimentationModels::ExperimentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ExperimentType::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ExperimentationModels", "ExperimentType", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.ExperimentationModels.ExperimentType Snapshot
::PlayFab::ExperimentationModels::ExperimentType PlayFab::ExperimentationModels::ExperimentType::_get_Snapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ExperimentType::_get_Snapshot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ExperimentationModels::ExperimentType>("PlayFab.ExperimentationModels", "ExperimentType", "Snapshot"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ExperimentationModels.ExperimentType Snapshot
void PlayFab::ExperimentationModels::ExperimentType::_set_Snapshot(::PlayFab::ExperimentationModels::ExperimentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ExperimentType::_set_Snapshot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ExperimentationModels", "ExperimentType", "Snapshot", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::ExperimentationModels::ExperimentType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ExperimentType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.GetExperimentsRequest
#include "PlayFab/ExperimentationModels/GetExperimentsRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.GetExperimentsResult
#include "PlayFab/ExperimentationModels/GetExperimentsResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.ExperimentationModels.Experiment
#include "PlayFab/ExperimentationModels/Experiment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.ExperimentationModels.Experiment> Experiments
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ExperimentationModels::Experiment*>*& PlayFab::ExperimentationModels::GetExperimentsResult::dyn_Experiments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::GetExperimentsResult::dyn_Experiments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Experiments"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::ExperimentationModels::Experiment*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.GetLatestScorecardRequest
#include "PlayFab/ExperimentationModels/GetLatestScorecardRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ExperimentId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::GetLatestScorecardRequest::dyn_ExperimentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::GetLatestScorecardRequest::dyn_ExperimentId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExperimentId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.GetLatestScorecardResult
#include "PlayFab/ExperimentationModels/GetLatestScorecardResult.hpp"
// Including type: PlayFab.ExperimentationModels.Scorecard
#include "PlayFab/ExperimentationModels/Scorecard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.ExperimentationModels.Scorecard Scorecard
[[deprecated("Use field access instead!")]] ::PlayFab::ExperimentationModels::Scorecard*& PlayFab::ExperimentationModels::GetLatestScorecardResult::dyn_Scorecard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::GetLatestScorecardResult::dyn_Scorecard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Scorecard"))->offset;
  return *reinterpret_cast<::PlayFab::ExperimentationModels::Scorecard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.GetTreatmentAssignmentRequest
#include "PlayFab/ExperimentationModels/GetTreatmentAssignmentRequest.hpp"
// Including type: PlayFab.ExperimentationModels.EntityKey
#include "PlayFab/ExperimentationModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.ExperimentationModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::ExperimentationModels::EntityKey*& PlayFab::ExperimentationModels::GetTreatmentAssignmentRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::GetTreatmentAssignmentRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::ExperimentationModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.GetTreatmentAssignmentResult
#include "PlayFab/ExperimentationModels/GetTreatmentAssignmentResult.hpp"
// Including type: PlayFab.ExperimentationModels.TreatmentAssignment
#include "PlayFab/ExperimentationModels/TreatmentAssignment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.ExperimentationModels.TreatmentAssignment TreatmentAssignment
[[deprecated("Use field access instead!")]] ::PlayFab::ExperimentationModels::TreatmentAssignment*& PlayFab::ExperimentationModels::GetTreatmentAssignmentResult::dyn_TreatmentAssignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::GetTreatmentAssignmentResult::dyn_TreatmentAssignment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TreatmentAssignment"))->offset;
  return *reinterpret_cast<::PlayFab::ExperimentationModels::TreatmentAssignment**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.MetricData
#include "PlayFab/ExperimentationModels/MetricData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double ConfidenceIntervalEnd
[[deprecated("Use field access instead!")]] double& PlayFab::ExperimentationModels::MetricData::dyn_ConfidenceIntervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::MetricData::dyn_ConfidenceIntervalEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConfidenceIntervalEnd"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double ConfidenceIntervalStart
[[deprecated("Use field access instead!")]] double& PlayFab::ExperimentationModels::MetricData::dyn_ConfidenceIntervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::MetricData::dyn_ConfidenceIntervalStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConfidenceIntervalStart"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single DeltaAbsoluteChange
[[deprecated("Use field access instead!")]] float& PlayFab::ExperimentationModels::MetricData::dyn_DeltaAbsoluteChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::MetricData::dyn_DeltaAbsoluteChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeltaAbsoluteChange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single DeltaRelativeChange
[[deprecated("Use field access instead!")]] float& PlayFab::ExperimentationModels::MetricData::dyn_DeltaRelativeChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::MetricData::dyn_DeltaRelativeChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeltaRelativeChange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String InternalName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::MetricData::dyn_InternalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::MetricData::dyn_InternalName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InternalName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Movement
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::MetricData::dyn_Movement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::MetricData::dyn_Movement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Movement"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::MetricData::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::MetricData::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PMove
[[deprecated("Use field access instead!")]] float& PlayFab::ExperimentationModels::MetricData::dyn_PMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::MetricData::dyn_PMove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PMove"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PValue
[[deprecated("Use field access instead!")]] float& PlayFab::ExperimentationModels::MetricData::dyn_PValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::MetricData::dyn_PValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PValueThreshold
[[deprecated("Use field access instead!")]] float& PlayFab::ExperimentationModels::MetricData::dyn_PValueThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::MetricData::dyn_PValueThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PValueThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String StatSigLevel
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::MetricData::dyn_StatSigLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::MetricData::dyn_StatSigLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StatSigLevel"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single StdDev
[[deprecated("Use field access instead!")]] float& PlayFab::ExperimentationModels::MetricData::dyn_StdDev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::MetricData::dyn_StdDev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StdDev"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Value
[[deprecated("Use field access instead!")]] float& PlayFab::ExperimentationModels::MetricData::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::MetricData::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.Scorecard
#include "PlayFab/ExperimentationModels/Scorecard.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.ExperimentationModels.ScorecardDataRow
#include "PlayFab/ExperimentationModels/ScorecardDataRow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String DateGenerated
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::Scorecard::dyn_DateGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Scorecard::dyn_DateGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DateGenerated"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Duration
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::Scorecard::dyn_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Scorecard::dyn_Duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Duration"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double EventsProcessed
[[deprecated("Use field access instead!")]] double& PlayFab::ExperimentationModels::Scorecard::dyn_EventsProcessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Scorecard::dyn_EventsProcessed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EventsProcessed"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ExperimentId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::Scorecard::dyn_ExperimentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Scorecard::dyn_ExperimentId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExperimentId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ExperimentName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::Scorecard::dyn_ExperimentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Scorecard::dyn_ExperimentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExperimentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.ExperimentationModels.AnalysisTaskState> LatestJobStatus
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::ExperimentationModels::AnalysisTaskState>& PlayFab::ExperimentationModels::Scorecard::dyn_LatestJobStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Scorecard::dyn_LatestJobStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LatestJobStatus"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::ExperimentationModels::AnalysisTaskState>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean SampleRatioMismatch
[[deprecated("Use field access instead!")]] bool& PlayFab::ExperimentationModels::Scorecard::dyn_SampleRatioMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Scorecard::dyn_SampleRatioMismatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SampleRatioMismatch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.ExperimentationModels.ScorecardDataRow> ScorecardDataRows
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ExperimentationModels::ScorecardDataRow*>*& PlayFab::ExperimentationModels::Scorecard::dyn_ScorecardDataRows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Scorecard::dyn_ScorecardDataRows");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScorecardDataRows"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::ExperimentationModels::ScorecardDataRow*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.ScorecardDataRow
#include "PlayFab/ExperimentationModels/ScorecardDataRow.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.ExperimentationModels.MetricData
#include "PlayFab/ExperimentationModels/MetricData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsControl
[[deprecated("Use field access instead!")]] bool& PlayFab::ExperimentationModels::ScorecardDataRow::dyn_IsControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ScorecardDataRow::dyn_IsControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsControl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,PlayFab.ExperimentationModels.MetricData> MetricDataRows
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::ExperimentationModels::MetricData*>*& PlayFab::ExperimentationModels::ScorecardDataRow::dyn_MetricDataRows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ScorecardDataRow::dyn_MetricDataRows");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MetricDataRows"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::ExperimentationModels::MetricData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 PlayerCount
[[deprecated("Use field access instead!")]] uint& PlayFab::ExperimentationModels::ScorecardDataRow::dyn_PlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ScorecardDataRow::dyn_PlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String VariantName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::ScorecardDataRow::dyn_VariantName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::ScorecardDataRow::dyn_VariantName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VariantName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.StartExperimentRequest
#include "PlayFab/ExperimentationModels/StartExperimentRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ExperimentId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::StartExperimentRequest::dyn_ExperimentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::StartExperimentRequest::dyn_ExperimentId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExperimentId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.StopExperimentRequest
#include "PlayFab/ExperimentationModels/StopExperimentRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ExperimentId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::StopExperimentRequest::dyn_ExperimentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::StopExperimentRequest::dyn_ExperimentId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExperimentId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.TreatmentAssignment
#include "PlayFab/ExperimentationModels/TreatmentAssignment.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.ExperimentationModels.Variable
#include "PlayFab/ExperimentationModels/Variable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.ExperimentationModels.Variable> Variables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ExperimentationModels::Variable*>*& PlayFab::ExperimentationModels::TreatmentAssignment::dyn_Variables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::TreatmentAssignment::dyn_Variables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Variables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::ExperimentationModels::Variable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> Variants
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::ExperimentationModels::TreatmentAssignment::dyn_Variants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::TreatmentAssignment::dyn_Variants");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Variants"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.UpdateExperimentRequest
#include "PlayFab/ExperimentationModels/UpdateExperimentRequest.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.ExperimentationModels.Variant
#include "PlayFab/ExperimentationModels/Variant.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Description
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_Description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Duration
[[deprecated("Use field access instead!")]] uint& PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_Duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Duration"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.ExperimentationModels.ExperimentType> ExperimentType
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::ExperimentationModels::ExperimentType>& PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_ExperimentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_ExperimentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExperimentType"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::ExperimentationModels::ExperimentType>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Id
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SegmentId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_SegmentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_SegmentId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SegmentId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime StartDate
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_StartDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_StartDate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartDate"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> TitlePlayerAccountTestIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_TitlePlayerAccountTestIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_TitlePlayerAccountTestIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TitlePlayerAccountTestIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.ExperimentationModels.Variant> Variants
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ExperimentationModels::Variant*>*& PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_Variants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::UpdateExperimentRequest::dyn_Variants");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Variants"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::ExperimentationModels::Variant*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.Variable
#include "PlayFab/ExperimentationModels/Variable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::Variable::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Variable::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Value
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::Variable::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Variable::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.ExperimentationModels.Variant
#include "PlayFab/ExperimentationModels/Variant.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.ExperimentationModels.Variable
#include "PlayFab/ExperimentationModels/Variable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Description
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::Variant::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Variant::dyn_Description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Id
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::Variant::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Variant::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsControl
[[deprecated("Use field access instead!")]] bool& PlayFab::ExperimentationModels::Variant::dyn_IsControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Variant::dyn_IsControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsControl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::Variant::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Variant::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TitleDataOverrideId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ExperimentationModels::Variant::dyn_TitleDataOverrideId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Variant::dyn_TitleDataOverrideId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TitleDataOverrideId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 TrafficPercentage
[[deprecated("Use field access instead!")]] uint& PlayFab::ExperimentationModels::Variant::dyn_TrafficPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Variant::dyn_TrafficPercentage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrafficPercentage"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.ExperimentationModels.Variable> Variables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ExperimentationModels::Variable*>*& PlayFab::ExperimentationModels::Variant::dyn_Variables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ExperimentationModels::Variant::dyn_Variables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Variables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::ExperimentationModels::Variable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.EventsModels.EntityKey
#include "PlayFab/EventsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Id
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::EventsModels::EntityKey::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::EventsModels::EntityKey::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Type
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::EventsModels::EntityKey::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::EventsModels::EntityKey::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.EventsModels.EventContents
#include "PlayFab/EventsModels/EventContents.hpp"
// Including type: PlayFab.EventsModels.EntityKey
#include "PlayFab/EventsModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.EventsModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::EventsModels::EntityKey*& PlayFab::EventsModels::EventContents::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::EventsModels::EventContents::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::EventsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String EventNamespace
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::EventsModels::EventContents::dyn_EventNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::EventsModels::EventContents::dyn_EventNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EventNamespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::EventsModels::EventContents::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::EventsModels::EventContents::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String OriginalId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::EventsModels::EventContents::dyn_OriginalId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::EventsModels::EventContents::dyn_OriginalId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OriginalId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.DateTime> OriginalTimestamp
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& PlayFab::EventsModels::EventContents::dyn_OriginalTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::EventsModels::EventContents::dyn_OriginalTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OriginalTimestamp"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTime>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object Payload
[[deprecated("Use field access instead!")]] ::Il2CppObject*& PlayFab::EventsModels::EventContents::dyn_Payload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::EventsModels::EventContents::dyn_Payload");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Payload"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String PayloadJSON
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::EventsModels::EventContents::dyn_PayloadJSON() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::EventsModels::EventContents::dyn_PayloadJSON");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PayloadJSON"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.EventsModels.WriteEventsRequest
#include "PlayFab/EventsModels/WriteEventsRequest.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.EventsModels.EventContents
#include "PlayFab/EventsModels/EventContents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.EventsModels.EventContents> Events
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::EventsModels::EventContents*>*& PlayFab::EventsModels::WriteEventsRequest::dyn_Events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::EventsModels::WriteEventsRequest::dyn_Events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Events"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::EventsModels::EventContents*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.EventsModels.WriteEventsResponse
#include "PlayFab/EventsModels/WriteEventsResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> AssignedEventIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::EventsModels::WriteEventsResponse::dyn_AssignedEventIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::EventsModels::WriteEventsResponse::dyn_AssignedEventIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssignedEventIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.Public.IScreenTimeTracker
#include "PlayFab/Public/IScreenTimeTracker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.Public.IScreenTimeTracker.OnEnable
void PlayFab::Public::IScreenTimeTracker::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::IScreenTimeTracker::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::IScreenTimeTracker*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.IScreenTimeTracker.OnDisable
void PlayFab::Public::IScreenTimeTracker::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::IScreenTimeTracker::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::IScreenTimeTracker*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.IScreenTimeTracker.OnDestroy
void PlayFab::Public::IScreenTimeTracker::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::IScreenTimeTracker::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::IScreenTimeTracker*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.IScreenTimeTracker.OnApplicationQuit
void PlayFab::Public::IScreenTimeTracker::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::IScreenTimeTracker::OnApplicationQuit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::IScreenTimeTracker*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.IScreenTimeTracker.OnApplicationFocus
void PlayFab::Public::IScreenTimeTracker::OnApplicationFocus(bool isFocused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::IScreenTimeTracker::OnApplicationFocus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::IScreenTimeTracker*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isFocused);
}
// Autogenerated method: PlayFab.Public.IScreenTimeTracker.ClientSessionStart
void PlayFab::Public::IScreenTimeTracker::ClientSessionStart(::StringW entityId, ::StringW entityType, ::StringW playFabUserId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::IScreenTimeTracker::ClientSessionStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::IScreenTimeTracker*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entityId, entityType, playFabUserId);
}
// Autogenerated method: PlayFab.Public.IScreenTimeTracker.Send
void PlayFab::Public::IScreenTimeTracker::Send() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::IScreenTimeTracker::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::IScreenTimeTracker*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.Public.ScreenTimeTracker
#include "PlayFab/Public/ScreenTimeTracker.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: PlayFab.EventsModels.EventContents
#include "PlayFab/EventsModels/EventContents.hpp"
// Including type: PlayFab.EventsModels.EntityKey
#include "PlayFab/EventsModels/EntityKey.hpp"
// Including type: PlayFab.PlayFabEventsInstanceAPI
#include "PlayFab/PlayFabEventsInstanceAPI.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: PlayFab.EventsModels.WriteEventsResponse
#include "PlayFab/EventsModels/WriteEventsResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String eventNamespace
::StringW PlayFab::Public::ScreenTimeTracker::_get_eventNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::_get_eventNamespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("PlayFab.Public", "ScreenTimeTracker", "eventNamespace"));
}
// Autogenerated static field setter
// Set static field: static private System.String eventNamespace
void PlayFab::Public::ScreenTimeTracker::_set_eventNamespace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::_set_eventNamespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Public", "ScreenTimeTracker", "eventNamespace", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 maxBatchSizeInEvents
int PlayFab::Public::ScreenTimeTracker::_get_maxBatchSizeInEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::_get_maxBatchSizeInEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PlayFab.Public", "ScreenTimeTracker", "maxBatchSizeInEvents"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 maxBatchSizeInEvents
void PlayFab::Public::ScreenTimeTracker::_set_maxBatchSizeInEvents(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::_set_maxBatchSizeInEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Public", "ScreenTimeTracker", "maxBatchSizeInEvents", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Guid focusId
[[deprecated("Use field access instead!")]] ::System::Guid& PlayFab::Public::ScreenTimeTracker::dyn_focusId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::dyn_focusId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "focusId"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Guid gameSessionID
[[deprecated("Use field access instead!")]] ::System::Guid& PlayFab::Public::ScreenTimeTracker::dyn_gameSessionID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::dyn_gameSessionID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameSessionID"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialFocus
[[deprecated("Use field access instead!")]] bool& PlayFab::Public::ScreenTimeTracker::dyn_initialFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::dyn_initialFocus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialFocus"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isSending
[[deprecated("Use field access instead!")]] bool& PlayFab::Public::ScreenTimeTracker::dyn_isSending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::dyn_isSending");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isSending"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime focusOffDateTime
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::Public::ScreenTimeTracker::dyn_focusOffDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::dyn_focusOffDateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "focusOffDateTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime focusOnDateTime
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::Public::ScreenTimeTracker::dyn_focusOnDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::dyn_focusOnDateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "focusOnDateTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<PlayFab.EventsModels.EventContents> eventsRequests
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::PlayFab::EventsModels::EventContents*>*& PlayFab::Public::ScreenTimeTracker::dyn_eventsRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::dyn_eventsRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventsRequests"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::PlayFab::EventsModels::EventContents*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayFab.EventsModels.EntityKey entityKey
[[deprecated("Use field access instead!")]] ::PlayFab::EventsModels::EntityKey*& PlayFab::Public::ScreenTimeTracker::dyn_entityKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::dyn_entityKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entityKey"))->offset;
  return *reinterpret_cast<::PlayFab::EventsModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayFab.PlayFabEventsInstanceAPI eventApi
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabEventsInstanceAPI*& PlayFab::Public::ScreenTimeTracker::dyn_eventApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::dyn_eventApi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventApi"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabEventsInstanceAPI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.Public.ScreenTimeTracker.ClientSessionStart
void PlayFab::Public::ScreenTimeTracker::ClientSessionStart(::StringW entityId, ::StringW entityType, ::StringW playFabUserId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::ClientSessionStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::ScreenTimeTracker*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entityId, entityType, playFabUserId);
}
// Autogenerated method: PlayFab.Public.ScreenTimeTracker.OnApplicationFocus
void PlayFab::Public::ScreenTimeTracker::OnApplicationFocus(bool isFocused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::OnApplicationFocus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::ScreenTimeTracker*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isFocused);
}
// Autogenerated method: PlayFab.Public.ScreenTimeTracker.Send
void PlayFab::Public::ScreenTimeTracker::Send() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::ScreenTimeTracker*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.ScreenTimeTracker.EventSentSuccessfulCallback
void PlayFab::Public::ScreenTimeTracker::EventSentSuccessfulCallback(::PlayFab::EventsModels::WriteEventsResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::EventSentSuccessfulCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EventSentSuccessfulCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: PlayFab.Public.ScreenTimeTracker.EventSentErrorCallback
void PlayFab::Public::ScreenTimeTracker::EventSentErrorCallback(::PlayFab::PlayFabError* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::EventSentErrorCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EventSentErrorCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: PlayFab.Public.ScreenTimeTracker.OnEnable
void PlayFab::Public::ScreenTimeTracker::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::ScreenTimeTracker*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.ScreenTimeTracker.OnDisable
void PlayFab::Public::ScreenTimeTracker::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::ScreenTimeTracker*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.ScreenTimeTracker.OnDestroy
void PlayFab::Public::ScreenTimeTracker::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::ScreenTimeTracker*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.ScreenTimeTracker.OnApplicationQuit
void PlayFab::Public::ScreenTimeTracker::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::ScreenTimeTracker::OnApplicationQuit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::ScreenTimeTracker*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.Public.IPlayFabLogger
#include "PlayFab/Public/IPlayFabLogger.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.Public.IPlayFabLogger.get_ip
::System::Net::IPAddress* PlayFab::Public::IPlayFabLogger::get_ip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::IPlayFabLogger::get_ip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::IPlayFabLogger*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPAddress*, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.IPlayFabLogger.set_ip
void PlayFab::Public::IPlayFabLogger::set_ip(::System::Net::IPAddress* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::IPlayFabLogger::set_ip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::IPlayFabLogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.Public.IPlayFabLogger.get_port
int PlayFab::Public::IPlayFabLogger::get_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::IPlayFabLogger::get_port");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::IPlayFabLogger*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.IPlayFabLogger.set_port
void PlayFab::Public::IPlayFabLogger::set_port(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::IPlayFabLogger::set_port");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::IPlayFabLogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.Public.IPlayFabLogger.get_url
::StringW PlayFab::Public::IPlayFabLogger::get_url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::IPlayFabLogger::get_url");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::IPlayFabLogger*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.IPlayFabLogger.set_url
void PlayFab::Public::IPlayFabLogger::set_url(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::IPlayFabLogger::set_url");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::IPlayFabLogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.Public.IPlayFabLogger.OnEnable
void PlayFab::Public::IPlayFabLogger::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::IPlayFabLogger::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::IPlayFabLogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.IPlayFabLogger.OnDisable
void PlayFab::Public::IPlayFabLogger::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::IPlayFabLogger::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::IPlayFabLogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.IPlayFabLogger.OnDestroy
void PlayFab::Public::IPlayFabLogger::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::IPlayFabLogger::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::IPlayFabLogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Public.PlayFabLoggerBase
#include "PlayFab/Public/PlayFabLoggerBase.hpp"
// Including type: PlayFab.Public.PlayFabLoggerBase/<RegisterLogger>d__23
#include "PlayFab/Public/PlayFabLoggerBase_-RegisterLogger-d__23.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Text.StringBuilder Sb
::System::Text::StringBuilder* PlayFab::Public::PlayFabLoggerBase::_get_Sb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::_get_Sb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::StringBuilder*>("PlayFab.Public", "PlayFabLoggerBase", "Sb"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Text.StringBuilder Sb
void PlayFab::Public::PlayFabLoggerBase::_set_Sb(::System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::_set_Sb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Public", "PlayFabLoggerBase", "Sb", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LOG_CACHE_INTERVAL_MS
int PlayFab::Public::PlayFabLoggerBase::_get_LOG_CACHE_INTERVAL_MS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::_get_LOG_CACHE_INTERVAL_MS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PlayFab.Public", "PlayFabLoggerBase", "LOG_CACHE_INTERVAL_MS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LOG_CACHE_INTERVAL_MS
void PlayFab::Public::PlayFabLoggerBase::_set_LOG_CACHE_INTERVAL_MS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::_set_LOG_CACHE_INTERVAL_MS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Public", "PlayFabLoggerBase", "LOG_CACHE_INTERVAL_MS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.TimeSpan _threadKillTimeout
::System::TimeSpan PlayFab::Public::PlayFabLoggerBase::_get__threadKillTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::_get__threadKillTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("PlayFab.Public", "PlayFabLoggerBase", "_threadKillTimeout"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.TimeSpan _threadKillTimeout
void PlayFab::Public::PlayFabLoggerBase::_set__threadKillTimeout(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::_set__threadKillTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Public", "PlayFabLoggerBase", "_threadKillTimeout", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<System.String> LogMessageQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::StringW>*& PlayFab::Public::PlayFabLoggerBase::dyn_LogMessageQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::dyn_LogMessageQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LogMessageQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Thread _writeLogThread
[[deprecated("Use field access instead!")]] ::System::Threading::Thread*& PlayFab::Public::PlayFabLoggerBase::dyn__writeLogThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::dyn__writeLogThread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeLogThread"))->offset;
  return *reinterpret_cast<::System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _threadLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& PlayFab::Public::PlayFabLoggerBase::dyn__threadLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::dyn__threadLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_threadLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime _threadKillTime
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::Public::PlayFabLoggerBase::dyn__threadKillTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::dyn__threadKillTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_threadKillTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isApplicationPlaying
[[deprecated("Use field access instead!")]] bool& PlayFab::Public::PlayFabLoggerBase::dyn__isApplicationPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::dyn__isApplicationPlaying");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isApplicationPlaying"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pendingLogsCount
[[deprecated("Use field access instead!")]] int& PlayFab::Public::PlayFabLoggerBase::dyn__pendingLogsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::dyn__pendingLogsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingLogsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IPAddress <ip>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::IPAddress*& PlayFab::Public::PlayFabLoggerBase::dyn_$ip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::dyn_$ip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ip>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::IPAddress**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <port>k__BackingField
[[deprecated("Use field access instead!")]] int& PlayFab::Public::PlayFabLoggerBase::dyn_$port$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::dyn_$port$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<port>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <url>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::Public::PlayFabLoggerBase::dyn_$url$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::dyn_$url$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<url>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase.get_ip
::System::Net::IPAddress* PlayFab::Public::PlayFabLoggerBase::get_ip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::get_ip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPAddress*, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase.set_ip
void PlayFab::Public::PlayFabLoggerBase::set_ip(::System::Net::IPAddress* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::set_ip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase.get_port
int PlayFab::Public::PlayFabLoggerBase::get_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::get_port");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase.set_port
void PlayFab::Public::PlayFabLoggerBase::set_port(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::set_port");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase.get_url
::StringW PlayFab::Public::PlayFabLoggerBase::get_url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::get_url");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase.set_url
void PlayFab::Public::PlayFabLoggerBase::set_url(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::set_url");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase.OnEnable
void PlayFab::Public::PlayFabLoggerBase::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase.RegisterLogger
::System::Collections::IEnumerator* PlayFab::Public::PlayFabLoggerBase::RegisterLogger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::RegisterLogger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterLogger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase.OnDisable
void PlayFab::Public::PlayFabLoggerBase::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase.OnDestroy
void PlayFab::Public::PlayFabLoggerBase::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase.BeginUploadLog
void PlayFab::Public::PlayFabLoggerBase::BeginUploadLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::BeginUploadLog");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase.UploadLog
void PlayFab::Public::PlayFabLoggerBase::UploadLog(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::UploadLog");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase.EndUploadLog
void PlayFab::Public::PlayFabLoggerBase::EndUploadLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::EndUploadLog");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase.HandleUnityLog
void PlayFab::Public::PlayFabLoggerBase::HandleUnityLog(::StringW message, ::StringW stacktrace, ::UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::HandleUnityLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUnityLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(stacktrace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, stacktrace, type);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase.ActivateThreadWorker
void PlayFab::Public::PlayFabLoggerBase::ActivateThreadWorker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::ActivateThreadWorker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateThreadWorker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase.WriteLogThreadWorker
void PlayFab::Public::PlayFabLoggerBase::WriteLogThreadWorker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::WriteLogThreadWorker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLogThreadWorker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase..cctor
void PlayFab::Public::PlayFabLoggerBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Public", "PlayFabLoggerBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Public.PlayFabLoggerBase/<RegisterLogger>d__23
#include "PlayFab/Public/PlayFabLoggerBase_-RegisterLogger-d__23.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.Public.PlayFabLoggerBase <>4__this
[[deprecated("Use field access instead!")]] ::PlayFab::Public::PlayFabLoggerBase*& PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::PlayFab::Public::PlayFabLoggerBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase/<RegisterLogger>d__23.System.IDisposable.Dispose
void PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase/<RegisterLogger>d__23.MoveNext
bool PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase/<RegisterLogger>d__23.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase/<RegisterLogger>d__23.System.Collections.IEnumerator.Reset
void PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.PlayFabLoggerBase/<RegisterLogger>d__23.System.Collections.IEnumerator.get_Current
::Il2CppObject* PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase::$RegisterLogger$d__23*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.Public.PlayFabLogger
#include "PlayFab/Public/PlayFabLogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.Public.PlayFabLogger.BeginUploadLog
void PlayFab::Public::PlayFabLogger::BeginUploadLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLogger::BeginUploadLog");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Public.PlayFabLogger.UploadLog
void PlayFab::Public::PlayFabLogger::UploadLog(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLogger::UploadLog");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: PlayFab.Public.PlayFabLogger.EndUploadLog
void PlayFab::Public::PlayFabLogger::EndUploadLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Public::PlayFabLogger::EndUploadLog");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Public::PlayFabLoggerBase*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.DataModels.AbortFileUploadsRequest
#include "PlayFab/DataModels/AbortFileUploadsRequest.hpp"
// Including type: PlayFab.DataModels.EntityKey
#include "PlayFab/DataModels/EntityKey.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.DataModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::DataModels::EntityKey*& PlayFab::DataModels::AbortFileUploadsRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::DataModels::AbortFileUploadsRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::DataModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> FileNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::DataModels::AbortFileUploadsRequest::dyn_FileNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::DataModels::AbortFileUploadsRequest::dyn_FileNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Int32> ProfileVersion
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& PlayFab::DataModels::AbortFileUploadsRequest::dyn_ProfileVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::DataModels::AbortFileUploadsRequest::dyn_ProfileVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProfileVersion"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: PlayFab.DataModels.AbortFileUploadsResponse
#include "PlayFab/DataModels/AbortFileUploadsResponse.hpp"
// Including type: PlayFab.DataModels.EntityKey
#include "PlayFab/DataModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.DataModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::DataModels::EntityKey*& PlayFab::DataModels::AbortFileUploadsResponse::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::DataModels::AbortFileUploadsResponse::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::DataModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ProfileVersion
[[deprecated("Use field access instead!")]] int& PlayFab::DataModels::AbortFileUploadsResponse::dyn_ProfileVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::DataModels::AbortFileUploadsResponse::dyn_ProfileVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProfileVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
