// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.KeyBuilder
#include "Mono/Security/Cryptography/KeyBuilder.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator rng
::System::Security::Cryptography::RandomNumberGenerator* Mono::Security::Cryptography::KeyBuilder::_get_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder::_get_rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RandomNumberGenerator*>("Mono.Security.Cryptography", "KeyBuilder", "rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator rng
void Mono::Security::Cryptography::KeyBuilder::_set_rng(::System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder::_set_rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyBuilder", "rng", value));
}
// Autogenerated method: Mono.Security.Cryptography.KeyBuilder.get_Rng
::System::Security::Cryptography::RandomNumberGenerator* Mono::Security::Cryptography::KeyBuilder::get_Rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder::get_Rng");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyBuilder", "get_Rng", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyBuilder.Key
::ArrayW<uint8_t> Mono::Security::Cryptography::KeyBuilder::Key(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder::Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyBuilder", "Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD2
#include "Mono/Security/Cryptography/MD2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.MD2.Create
::Mono::Security::Cryptography::MD2* Mono::Security::Cryptography::MD2::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "MD2", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Cryptography::MD2*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD2Managed
#include "Mono/Security/Cryptography/MD2Managed.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] PI_SUBST
::ArrayW<uint8_t> Mono::Security::Cryptography::MD2Managed::_get_PI_SUBST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::_get_PI_SUBST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "MD2Managed", "PI_SUBST"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] PI_SUBST
void Mono::Security::Cryptography::MD2Managed::_set_PI_SUBST(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::_set_PI_SUBST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "MD2Managed", "PI_SUBST", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] state
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD2Managed::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] checksum
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD2Managed::dyn_checksum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::dyn_checksum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checksum"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD2Managed::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& Mono::Security::Cryptography::MD2Managed::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] x
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD2Managed::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.Padding
::ArrayW<uint8_t> Mono::Security::Cryptography::MD2Managed::Padding(int nLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::Padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, nLength);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.MD2Transform
void Mono::Security::Cryptography::MD2Managed::MD2Transform(::ArrayW<uint8_t> state, ::ArrayW<uint8_t> checksum, ::ArrayW<uint8_t> block, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::MD2Transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MD2Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(checksum), ::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, checksum, block, index);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed..cctor
void Mono::Security::Cryptography::MD2Managed::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "MD2Managed", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.Initialize
void Mono::Security::Cryptography::MD2Managed::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.HashCore
void Mono::Security::Cryptography::MD2Managed::HashCore(::ArrayW<uint8_t> array, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::HashCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, ibStart, cbSize);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.HashFinal
::ArrayW<uint8_t> Mono::Security::Cryptography::MD2Managed::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::HashFinal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD4
#include "Mono/Security/Cryptography/MD4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.MD4.Create
::Mono::Security::Cryptography::MD4* Mono::Security::Cryptography::MD4::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "MD4", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Cryptography::MD4*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD4Managed
#include "Mono/Security/Cryptography/MD4Managed.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] state
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Mono::Security::Cryptography::MD4Managed::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD4Managed::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] count
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Mono::Security::Cryptography::MD4Managed::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] x
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Mono::Security::Cryptography::MD4Managed::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] digest
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD4Managed::dyn_digest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::dyn_digest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "digest"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Padding
::ArrayW<uint8_t> Mono::Security::Cryptography::MD4Managed::Padding(int nLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::Padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, nLength);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.F
uint Mono::Security::Cryptography::MD4Managed::F(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::F");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.G
uint Mono::Security::Cryptography::MD4Managed::G(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.H
uint Mono::Security::Cryptography::MD4Managed::H(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::H");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "H", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.ROL
uint Mono::Security::Cryptography::MD4Managed::ROL(uint x, uint8_t n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::ROL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ROL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, x, n);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.FF
void Mono::Security::Cryptography::MD4Managed::FF(ByRef<uint> a, uint b, uint c, uint d, uint x, uint8_t s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::FF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(a), b, c, d, x, s);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.GG
void Mono::Security::Cryptography::MD4Managed::GG(ByRef<uint> a, uint b, uint c, uint d, uint x, uint8_t s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::GG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(a), b, c, d, x, s);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.HH
void Mono::Security::Cryptography::MD4Managed::HH(ByRef<uint> a, uint b, uint c, uint d, uint x, uint8_t s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::HH");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HH", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(a), b, c, d, x, s);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Encode
void Mono::Security::Cryptography::MD4Managed::Encode(::ArrayW<uint8_t> output, ::ArrayW<uint> input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output, input);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Decode
void Mono::Security::Cryptography::MD4Managed::Decode(::ArrayW<uint> output, ::ArrayW<uint8_t> input, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output, input, index);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.MD4Transform
void Mono::Security::Cryptography::MD4Managed::MD4Transform(::ArrayW<uint> state, ::ArrayW<uint8_t> block, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::MD4Transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MD4Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, block, index);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Initialize
void Mono::Security::Cryptography::MD4Managed::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.HashCore
void Mono::Security::Cryptography::MD4Managed::HashCore(::ArrayW<uint8_t> array, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::HashCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, ibStart, cbSize);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.HashFinal
::ArrayW<uint8_t> Mono::Security::Cryptography::MD4Managed::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::HashFinal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.PKCS1
#include "Mono/Security/Cryptography/PKCS1.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA1
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1::_get_emptySHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::_get_emptySHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "PKCS1", "emptySHA1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA1
void Mono::Security::Cryptography::PKCS1::_set_emptySHA1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::_set_emptySHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA256
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1::_get_emptySHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::_get_emptySHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "PKCS1", "emptySHA256"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA256
void Mono::Security::Cryptography::PKCS1::_set_emptySHA256(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::_set_emptySHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA256", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA384
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1::_get_emptySHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::_get_emptySHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "PKCS1", "emptySHA384"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA384
void Mono::Security::Cryptography::PKCS1::_set_emptySHA384(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::_set_emptySHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA384", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA512
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1::_get_emptySHA512() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::_get_emptySHA512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "PKCS1", "emptySHA512"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA512
void Mono::Security::Cryptography::PKCS1::_set_emptySHA512(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::_set_emptySHA512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA512", value));
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Compare
bool Mono::Security::Cryptography::PKCS1::Compare(::ArrayW<uint8_t> array1, ::ArrayW<uint8_t> array2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array1), ::il2cpp_utils::ExtractType(array2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array1, array2);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.I2OSP
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1::I2OSP(::ArrayW<uint8_t> x, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::I2OSP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "I2OSP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, size);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.OS2IP
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1::OS2IP(::ArrayW<uint8_t> x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::OS2IP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "OS2IP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.RSAVP1
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1::RSAVP1(::System::Security::Cryptography::RSA* rsa, ::ArrayW<uint8_t> s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::RSAVP1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "RSAVP1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, s);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Verify_v15
bool Mono::Security::Cryptography::PKCS1::Verify_v15(::System::Security::Cryptography::RSA* rsa, ::System::Security::Cryptography::HashAlgorithm* hash, ::ArrayW<uint8_t> hashValue, ::ArrayW<uint8_t> signature, bool tryNonStandardEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::Verify_v15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Verify_v15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(hashValue), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(tryNonStandardEncoding)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, hash, hashValue, signature, tryNonStandardEncoding);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Encode_v15
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1::Encode_v15(::System::Security::Cryptography::HashAlgorithm* hash, ::ArrayW<uint8_t> hashValue, int emLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::Encode_v15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Encode_v15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(hashValue), ::il2cpp_utils::ExtractType(emLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, hashValue, emLength);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.HashNameFromOid
::StringW Mono::Security::Cryptography::PKCS1::HashNameFromOid(::StringW oid, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::HashNameFromOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "HashNameFromOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid), ::il2cpp_utils::ExtractType(throwOnError)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oid, throwOnError);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.CreateFromOid
::System::Security::Cryptography::HashAlgorithm* Mono::Security::Cryptography::PKCS1::CreateFromOid(::StringW oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::CreateFromOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "CreateFromOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oid);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.CreateFromName
::System::Security::Cryptography::HashAlgorithm* Mono::Security::Cryptography::PKCS1::CreateFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::CreateFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "CreateFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1..cctor
void Mono::Security::Cryptography::PKCS1::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo
#include "Mono/Security/Cryptography/PKCS8_PrivateKeyInfo.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: System.Security.Cryptography.DSAParameters
#include "System/Security/Cryptography/DSAParameters.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
[[deprecated("Use field access instead!")]] int& Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _algorithm
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::dyn__algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::dyn__algorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_algorithm"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _key
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::dyn__key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::dyn__key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_key"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.get_Algorithm
::StringW Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::get_Algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::get_Algorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Algorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.set_Algorithm
void Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::set_Algorithm(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::set_Algorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Algorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.get_PrivateKey
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::get_PrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::get_PrivateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.set_PrivateKey
void Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::set_PrivateKey(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::set_PrivateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PrivateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.Decode
void Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Decode(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.GetBytes
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.RemoveLeadingZero
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::RemoveLeadingZero(::ArrayW<uint8_t> bigInt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::RemoveLeadingZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "RemoveLeadingZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bigInt)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bigInt);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.Normalize
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Normalize(::ArrayW<uint8_t> bigInt, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bigInt), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bigInt, length);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.DecodeRSA
::System::Security::Cryptography::RSA* Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::DecodeRSA(::ArrayW<uint8_t> keypair) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::DecodeRSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "DecodeRSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keypair)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keypair);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.Encode
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode(::System::Security::Cryptography::RSA* rsa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.DecodeDSA
::System::Security::Cryptography::DSA* Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::DecodeDSA(::ArrayW<uint8_t> privateKey, ::System::Security::Cryptography::DSAParameters dsaParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::DecodeDSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "DecodeDSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(privateKey), ::il2cpp_utils::ExtractType(dsaParameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, privateKey, dsaParameters);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.Encode
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode(::System::Security::Cryptography::DSA* dsa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dsa)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dsa);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.Encode
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode(::System::Security::Cryptography::AsymmetricAlgorithm* aa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aa)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aa);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.PKCS8/EncryptedPrivateKeyInfo
#include "Mono/Security/Cryptography/PKCS8_EncryptedPrivateKeyInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _algorithm
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::dyn__algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::dyn__algorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_algorithm"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _salt
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::dyn__salt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::dyn__salt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_salt"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _iterations
[[deprecated("Use field access instead!")]] int& Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::dyn__iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::dyn__iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/EncryptedPrivateKeyInfo.get_Algorithm
::StringW Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_Algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_Algorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Algorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/EncryptedPrivateKeyInfo.set_Algorithm
void Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::set_Algorithm(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::set_Algorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Algorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/EncryptedPrivateKeyInfo.get_EncryptedData
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_EncryptedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_EncryptedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncryptedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/EncryptedPrivateKeyInfo.set_EncryptedData
void Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::set_EncryptedData(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::set_EncryptedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EncryptedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/EncryptedPrivateKeyInfo.get_Salt
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_Salt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_Salt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Salt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/EncryptedPrivateKeyInfo.get_IterationCount
int Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_IterationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/EncryptedPrivateKeyInfo.set_IterationCount
void Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::set_IterationCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::set_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/EncryptedPrivateKeyInfo.Decode
void Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::Decode(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/EncryptedPrivateKeyInfo.GetBytes
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.RC4
#include "Mono/Security/Cryptography/RC4.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
::ArrayW<::System::Security::Cryptography::KeySizes*> Mono::Security::Cryptography::RC4::_get_s_legalBlockSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4::_get_s_legalBlockSizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("Mono.Security.Cryptography", "RC4", "s_legalBlockSizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
void Mono::Security::Cryptography::RC4::_set_s_legalBlockSizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4::_set_s_legalBlockSizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "RC4", "s_legalBlockSizes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
::ArrayW<::System::Security::Cryptography::KeySizes*> Mono::Security::Cryptography::RC4::_get_s_legalKeySizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4::_get_s_legalKeySizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("Mono.Security.Cryptography", "RC4", "s_legalKeySizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
void Mono::Security::Cryptography::RC4::_set_s_legalKeySizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4::_set_s_legalKeySizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "RC4", "s_legalKeySizes", value));
}
// Autogenerated method: Mono.Security.Cryptography.RC4.Create
::Mono::Security::Cryptography::RC4* Mono::Security::Cryptography::RC4::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "RC4", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Cryptography::RC4*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RC4..cctor
void Mono::Security::Cryptography::RC4::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "RC4", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RC4.get_IV
::ArrayW<uint8_t> Mono::Security::Cryptography::RC4::get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4::get_IV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RC4.set_IV
void Mono::Security::Cryptography::RC4::set_IV(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4::set_IV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.RSAManaged
#include "Mono/Security/Cryptography/RSAManaged.hpp"
// Including type: Mono.Security.Cryptography.RSAManaged/KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/RSAManaged_KeyGeneratedEventHandler.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: System.Security.Cryptography.RSAParameters
#include "System/Security/Cryptography/RSAParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isCRTpossible
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::RSAManaged::dyn_isCRTpossible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_isCRTpossible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isCRTpossible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean keyBlinding
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::RSAManaged::dyn_keyBlinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_keyBlinding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyBlinding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean keypairGenerated
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::RSAManaged::dyn_keypairGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_keypairGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keypairGenerated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::RSAManaged::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger d
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Security::Cryptography::RSAManaged::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger p
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Security::Cryptography::RSAManaged::dyn_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_p");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger q
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Security::Cryptography::RSAManaged::dyn_q() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_q");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "q"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger dp
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Security::Cryptography::RSAManaged::dyn_dp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_dp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dp"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger dq
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Security::Cryptography::RSAManaged::dyn_dq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_dq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dq"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger qInv
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Security::Cryptography::RSAManaged::dyn_qInv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_qInv");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qInv"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger n
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Security::Cryptography::RSAManaged::dyn_n() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_n");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "n"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger e
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Security::Cryptography::RSAManaged::dyn_e() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_e");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "e"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Cryptography.RSAManaged/KeyGeneratedEventHandler KeyGenerated
[[deprecated("Use field access instead!")]] ::Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler*& Mono::Security::Cryptography::RSAManaged::dyn_KeyGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_KeyGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyGenerated"))->offset;
  return *reinterpret_cast<::Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.GenerateKeyPair
void Mono::Security::Cryptography::RSAManaged::GenerateKeyPair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::GenerateKeyPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKeyPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.get_PublicOnly
bool Mono::Security::Cryptography::RSAManaged::get_PublicOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::get_PublicOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.GetPaddedValue
::ArrayW<uint8_t> Mono::Security::Cryptography::RSAManaged::GetPaddedValue(::Mono::Math::BigInteger* value, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::GetPaddedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, value, length);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.Finalize
void Mono::Security::Cryptography::RSAManaged::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.get_KeySize
int Mono::Security::Cryptography::RSAManaged::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::get_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.get_KeyExchangeAlgorithm
::StringW Mono::Security::Cryptography::RSAManaged::get_KeyExchangeAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::get_KeyExchangeAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.get_SignatureAlgorithm
::StringW Mono::Security::Cryptography::RSAManaged::get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::get_SignatureAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.DecryptValue
::ArrayW<uint8_t> Mono::Security::Cryptography::RSAManaged::DecryptValue(::ArrayW<uint8_t> rgb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::DecryptValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgb);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.EncryptValue
::ArrayW<uint8_t> Mono::Security::Cryptography::RSAManaged::EncryptValue(::ArrayW<uint8_t> rgb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::EncryptValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgb);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.ExportParameters
::System::Security::Cryptography::RSAParameters Mono::Security::Cryptography::RSAManaged::ExportParameters(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::ExportParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSAParameters, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.ImportParameters
void Mono::Security::Cryptography::RSAManaged::ImportParameters(::System::Security::Cryptography::RSAParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::ImportParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.Dispose
void Mono::Security::Cryptography::RSAManaged::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.ToXmlString
::StringW Mono::Security::Cryptography::RSAManaged::ToXmlString(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::ToXmlString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.RSAManaged/KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/RSAManaged_KeyGeneratedEventHandler.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.RSAManaged/KeyGeneratedEventHandler.Invoke
void Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler::Invoke(::Il2CppObject* sender, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Authenticode.AuthenticodeBase
#include "Mono/Security/Authenticode/AuthenticodeBase.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] fileblock
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Authenticode::AuthenticodeBase::dyn_fileblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::dyn_fileblock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileblock"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream fs
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& Mono::Security::Authenticode::AuthenticodeBase::dyn_fs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::dyn_fs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fs"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 blockNo
[[deprecated("Use field access instead!")]] int& Mono::Security::Authenticode::AuthenticodeBase::dyn_blockNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::dyn_blockNo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blockNo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 blockLength
[[deprecated("Use field access instead!")]] int& Mono::Security::Authenticode::AuthenticodeBase::dyn_blockLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::dyn_blockLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blockLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 peOffset
[[deprecated("Use field access instead!")]] int& Mono::Security::Authenticode::AuthenticodeBase::dyn_peOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::dyn_peOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "peOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 dirSecurityOffset
[[deprecated("Use field access instead!")]] int& Mono::Security::Authenticode::AuthenticodeBase::dyn_dirSecurityOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::dyn_dirSecurityOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dirSecurityOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 dirSecuritySize
[[deprecated("Use field access instead!")]] int& Mono::Security::Authenticode::AuthenticodeBase::dyn_dirSecuritySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::dyn_dirSecuritySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dirSecuritySize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 coffSymbolTableOffset
[[deprecated("Use field access instead!")]] int& Mono::Security::Authenticode::AuthenticodeBase::dyn_coffSymbolTableOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::dyn_coffSymbolTableOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coffSymbolTableOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean pe64
[[deprecated("Use field access instead!")]] bool& Mono::Security::Authenticode::AuthenticodeBase::dyn_pe64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::dyn_pe64");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pe64"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Authenticode.AuthenticodeBase.get_PEOffset
int Mono::Security::Authenticode::AuthenticodeBase::get_PEOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::get_PEOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PEOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Authenticode.AuthenticodeBase.Open
void Mono::Security::Authenticode::AuthenticodeBase::Open(::StringW filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, filename);
}
// Autogenerated method: Mono.Security.Authenticode.AuthenticodeBase.Open
void Mono::Security::Authenticode::AuthenticodeBase::Open(::ArrayW<uint8_t> rawdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawdata)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rawdata);
}
// Autogenerated method: Mono.Security.Authenticode.AuthenticodeBase.Close
void Mono::Security::Authenticode::AuthenticodeBase::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Authenticode.AuthenticodeBase.ReadFirstBlock
void Mono::Security::Authenticode::AuthenticodeBase::ReadFirstBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::ReadFirstBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFirstBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Authenticode.AuthenticodeBase.ProcessFirstBlock
int Mono::Security::Authenticode::AuthenticodeBase::ProcessFirstBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::ProcessFirstBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFirstBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Authenticode.AuthenticodeBase.GetSecurityEntry
::ArrayW<uint8_t> Mono::Security::Authenticode::AuthenticodeBase::GetSecurityEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::GetSecurityEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSecurityEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Authenticode.AuthenticodeBase.GetHash
::ArrayW<uint8_t> Mono::Security::Authenticode::AuthenticodeBase::GetHash(::System::Security::Cryptography::HashAlgorithm* hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeBase::GetHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, hash);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Authenticode.AuthenticodeDeformatter
#include "Mono/Security/Authenticode/AuthenticodeDeformatter.hpp"
// Including type: Mono.Security.X509.X509CertificateCollection
#include "Mono/Security/X509/X509CertificateCollection.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: Mono.Security.X509.X509Chain
#include "Mono/Security/X509/X509Chain.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
// Including type: Mono.Security.PKCS7/SignedData
#include "Mono/Security/PKCS7_SignedData.hpp"
// Including type: Mono.Security.PKCS7/SignerInfo
#include "Mono/Security/PKCS7_SignerInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String filename
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_filename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_filename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] rawdata
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_rawdata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_rawdata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rawdata"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] hash
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.X509.X509CertificateCollection coll
[[deprecated("Use field access instead!")]] ::Mono::Security::X509::X509CertificateCollection*& Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_coll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_coll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coll"))->offset;
  return *reinterpret_cast<::Mono::Security::X509::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.ASN1 signedHash
[[deprecated("Use field access instead!")]] ::Mono::Security::ASN1*& Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_signedHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_signedHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signedHash"))->offset;
  return *reinterpret_cast<::Mono::Security::ASN1**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime timestamp
[[deprecated("Use field access instead!")]] ::System::DateTime& Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timestamp"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.X509.X509Certificate signingCertificate
[[deprecated("Use field access instead!")]] ::Mono::Security::X509::X509Certificate*& Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_signingCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_signingCertificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signingCertificate"))->offset;
  return *reinterpret_cast<::Mono::Security::X509::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 reason
[[deprecated("Use field access instead!")]] int& Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_reason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_reason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reason"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean trustedRoot
[[deprecated("Use field access instead!")]] bool& Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_trustedRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_trustedRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trustedRoot"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean trustedTimestampRoot
[[deprecated("Use field access instead!")]] bool& Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_trustedTimestampRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_trustedTimestampRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trustedTimestampRoot"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] entry
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_entry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entry"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.X509.X509Chain signerChain
[[deprecated("Use field access instead!")]] ::Mono::Security::X509::X509Chain*& Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_signerChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_signerChain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signerChain"))->offset;
  return *reinterpret_cast<::Mono::Security::X509::X509Chain**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.X509.X509Chain timestampChain
[[deprecated("Use field access instead!")]] ::Mono::Security::X509::X509Chain*& Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_timestampChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::dyn_timestampChain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timestampChain"))->offset;
  return *reinterpret_cast<::Mono::Security::X509::X509Chain**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Authenticode.AuthenticodeDeformatter.set_RawData
void Mono::Security::Authenticode::AuthenticodeDeformatter::set_RawData(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::set_RawData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RawData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Authenticode.AuthenticodeDeformatter.get_SigningCertificate
::Mono::Security::X509::X509Certificate* Mono::Security::Authenticode::AuthenticodeDeformatter::get_SigningCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::get_SigningCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SigningCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Authenticode.AuthenticodeDeformatter.CheckSignature
bool Mono::Security::Authenticode::AuthenticodeDeformatter::CheckSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::CheckSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Authenticode.AuthenticodeDeformatter.CompareIssuerSerial
bool Mono::Security::Authenticode::AuthenticodeDeformatter::CompareIssuerSerial(::StringW issuer, ::ArrayW<uint8_t> serial, ::Mono::Security::X509::X509Certificate* x509) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::CompareIssuerSerial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareIssuerSerial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(issuer), ::il2cpp_utils::ExtractType(serial), ::il2cpp_utils::ExtractType(x509)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, issuer, serial, x509);
}
// Autogenerated method: Mono.Security.Authenticode.AuthenticodeDeformatter.VerifySignature
bool Mono::Security::Authenticode::AuthenticodeDeformatter::VerifySignature(::Mono::Security::PKCS7::SignedData* sd, ::ArrayW<uint8_t> calculatedMessageDigest, ::System::Security::Cryptography::HashAlgorithm* ha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::VerifySignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sd), ::il2cpp_utils::ExtractType(calculatedMessageDigest), ::il2cpp_utils::ExtractType(ha)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sd, calculatedMessageDigest, ha);
}
// Autogenerated method: Mono.Security.Authenticode.AuthenticodeDeformatter.VerifyCounterSignature
bool Mono::Security::Authenticode::AuthenticodeDeformatter::VerifyCounterSignature(::Mono::Security::PKCS7::SignerInfo* cs, ::ArrayW<uint8_t> signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::VerifyCounterSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyCounterSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cs), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cs, signature);
}
// Autogenerated method: Mono.Security.Authenticode.AuthenticodeDeformatter.Reset
void Mono::Security::Authenticode::AuthenticodeDeformatter::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::AuthenticodeDeformatter::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Authenticode.PrivateKey
#include "Mono/Security/Authenticode/PrivateKey.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean encrypted
[[deprecated("Use field access instead!")]] bool& Mono::Security::Authenticode::PrivateKey::dyn_encrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::dyn_encrypted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encrypted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RSA rsa
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSA*& Mono::Security::Authenticode::PrivateKey::dyn_rsa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::dyn_rsa");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rsa"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean weak
[[deprecated("Use field access instead!")]] bool& Mono::Security::Authenticode::PrivateKey::dyn_weak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::dyn_weak");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weak"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 keyType
[[deprecated("Use field access instead!")]] int& Mono::Security::Authenticode::PrivateKey::dyn_keyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::dyn_keyType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.get_RSA
::System::Security::Cryptography::RSA* Mono::Security::Authenticode::PrivateKey::get_RSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::get_RSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.DeriveKey
::ArrayW<uint8_t> Mono::Security::Authenticode::PrivateKey::DeriveKey(::ArrayW<uint8_t> salt, ::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::DeriveKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, salt, password);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.Decode
bool Mono::Security::Authenticode::PrivateKey::Decode(::ArrayW<uint8_t> pvk, ::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pvk), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pvk, password);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.CreateFromFile
::Mono::Security::Authenticode::PrivateKey* Mono::Security::Authenticode::PrivateKey::CreateFromFile(::StringW filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::CreateFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Authenticode", "PrivateKey", "CreateFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Authenticode::PrivateKey*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.CreateFromFile
::Mono::Security::Authenticode::PrivateKey* Mono::Security::Authenticode::PrivateKey::CreateFromFile(::StringW filename, ::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::CreateFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Authenticode", "PrivateKey", "CreateFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Authenticode::PrivateKey*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename, password);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: Mono.Math.BigInteger/ModulusRing
#include "Mono/Math/BigInteger_ModulusRing.hpp"
// Including type: Mono.Math.BigInteger/Kernel
#include "Mono/Math/BigInteger_Kernel.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] smallPrimes
::ArrayW<uint> Mono::Math::BigInteger::_get_smallPrimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::_get_smallPrimes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("Mono.Math", "BigInteger", "smallPrimes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] smallPrimes
void Mono::Math::BigInteger::_set_smallPrimes(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::_set_smallPrimes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger", "smallPrimes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator rng
::System::Security::Cryptography::RandomNumberGenerator* Mono::Math::BigInteger::_get_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::_get_rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RandomNumberGenerator*>("Mono.Math", "BigInteger", "rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator rng
void Mono::Math::BigInteger::_set_rng(::System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::_set_rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger", "rng", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 length
[[deprecated("Use field access instead!")]] uint& Mono::Math::BigInteger::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] data
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Mono::Math::BigInteger::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Math.BigInteger.get_Rng
::System::Security::Cryptography::RandomNumberGenerator* Mono::Math::BigInteger::get_Rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::get_Rng");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "get_Rng", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GenerateRandom
::Mono::Math::BigInteger* Mono::Math::BigInteger::GenerateRandom(int bits, ::System::Security::Cryptography::RandomNumberGenerator* rng) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GenerateRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(rng)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bits, rng);
}
// Autogenerated method: Mono.Math.BigInteger.GenerateRandom
::Mono::Math::BigInteger* Mono::Math::BigInteger::GenerateRandom(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GenerateRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bits);
}
// Autogenerated method: Mono.Math.BigInteger.BitCount
int Mono::Math::BigInteger::BitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::BitCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BitCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.TestBit
bool Mono::Math::BigInteger::TestBit(int bitNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::TestBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bitNum);
}
// Autogenerated method: Mono.Math.BigInteger.SetBit
void Mono::Math::BigInteger::SetBit(uint bitNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::SetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bitNum);
}
// Autogenerated method: Mono.Math.BigInteger.SetBit
void Mono::Math::BigInteger::SetBit(uint bitNum, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::SetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bitNum, value);
}
// Autogenerated method: Mono.Math.BigInteger.LowestSetBit
int Mono::Math::BigInteger::LowestSetBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::LowestSetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LowestSetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GetBytes
::ArrayW<uint8_t> Mono::Math::BigInteger::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::StringW Mono::Math::BigInteger::ToString(uint radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, radix);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::StringW Mono::Math::BigInteger::ToString(uint radix, ::StringW characterSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radix), ::il2cpp_utils::ExtractType(characterSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, radix, characterSet);
}
// Autogenerated method: Mono.Math.BigInteger.Normalize
void Mono::Math::BigInteger::Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.Clear
void Mono::Math::BigInteger::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ModInverse
::Mono::Math::BigInteger* Mono::Math::BigInteger::ModInverse(::Mono::Math::BigInteger* modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modulus)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, modulus);
}
// Autogenerated method: Mono.Math.BigInteger.ModPow
::Mono::Math::BigInteger* Mono::Math::BigInteger::ModPow(::Mono::Math::BigInteger* exp, ::Mono::Math::BigInteger* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModPow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModPow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exp), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, exp, n);
}
// Autogenerated method: Mono.Math.BigInteger.GeneratePseudoPrime
::Mono::Math::BigInteger* Mono::Math::BigInteger::GeneratePseudoPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::GeneratePseudoPrime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GeneratePseudoPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bits);
}
// Autogenerated method: Mono.Math.BigInteger.Incr2
void Mono::Math::BigInteger::Incr2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Incr2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Incr2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger..cctor
void Mono::Math::BigInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GetHashCode
int Mono::Math::BigInteger::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::StringW Mono::Math::BigInteger::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.Equals
bool Mono::Math::BigInteger::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: Mono.Math.BigInteger.op_Addition
::Mono::Math::BigInteger* Mono::Math::operator+(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Subtraction
::Mono::Math::BigInteger* Mono::Math::operator-(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Modulus
uint Mono::Math::operator%(::Mono::Math::BigInteger& bi, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Modulus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Modulus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi), ::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Modulus
::Mono::Math::BigInteger* Mono::Math::operator%(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Modulus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Modulus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Division
::Mono::Math::BigInteger* Mono::Math::operator/(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Multiply
::Mono::Math::BigInteger* Mono::Math::operator*(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LeftShift
::Mono::Math::BigInteger* Mono::Math::operator<<(::Mono::Math::BigInteger& bi1, const int& shiftVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_LeftShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LeftShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(shiftVal)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi1, shiftVal);
}
// Autogenerated method: Mono.Math.BigInteger.op_RightShift
::Mono::Math::BigInteger* Mono::Math::operator>>(::Mono::Math::BigInteger& bi1, const int& shiftVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_RightShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_RightShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(shiftVal)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi1, shiftVal);
}
// Autogenerated method: Mono.Math.BigInteger.op_Equality
bool Mono::Math::operator ==(::Mono::Math::BigInteger& bi1, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi1, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Inequality
bool Mono::Math::operator !=(::Mono::Math::BigInteger& bi1, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi1, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Equality
bool Mono::Math::operator ==(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Inequality
bool Mono::Math::operator !=(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_GreaterThan
bool Mono::Math::operator >(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LessThan
bool Mono::Math::operator <(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_GreaterThanOrEqual
bool Mono::Math::operator >=(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LessThanOrEqual
bool Mono::Math::operator <=(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/Sign
#include "Mono/Math/BigInteger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Sign Negative
::Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Sign::_get_Negative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Sign::_get_Negative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::BigInteger::Sign>("Mono.Math", "BigInteger/Sign", "Negative"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Sign Negative
void Mono::Math::BigInteger::Sign::_set_Negative(::Mono::Math::BigInteger::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Sign::_set_Negative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Negative", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Sign Zero
::Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Sign::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Sign::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::BigInteger::Sign>("Mono.Math", "BigInteger/Sign", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Sign Zero
void Mono::Math::BigInteger::Sign::_set_Zero(::Mono::Math::BigInteger::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Sign::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Sign Positive
::Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Sign::_get_Positive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Sign::_get_Positive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::BigInteger::Sign>("Mono.Math", "BigInteger/Sign", "Positive"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Sign Positive
void Mono::Math::BigInteger::Sign::_set_Positive(::Mono::Math::BigInteger::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Sign::_set_Positive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Positive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Math::BigInteger::Sign::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Sign::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/ModulusRing
#include "Mono/Math/BigInteger_ModulusRing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger mod
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Math::BigInteger::ModulusRing::dyn_mod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModulusRing::dyn_mod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mod"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger constant
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Math::BigInteger::ModulusRing::dyn_constant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModulusRing::dyn_constant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constant"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.BarrettReduction
void Mono::Math::BigInteger::ModulusRing::BarrettReduction(::Mono::Math::BigInteger* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModulusRing::BarrettReduction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BarrettReduction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Multiply
::Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Multiply(::Mono::Math::BigInteger* a, ::Mono::Math::BigInteger* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModulusRing::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Difference
::Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Difference(::Mono::Math::BigInteger* a, ::Mono::Math::BigInteger* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModulusRing::Difference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Difference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Pow
::Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Pow(::Mono::Math::BigInteger* a, ::Mono::Math::BigInteger* k) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModulusRing::Pow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(k)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, a, k);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Pow
::Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Pow(uint b, ::Mono::Math::BigInteger* exp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModulusRing::Pow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(exp)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, b, exp);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/Kernel
#include "Mono/Math/BigInteger_Kernel.hpp"
// Including type: Mono.Math.BigInteger/Sign
#include "Mono/Math/BigInteger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.BigInteger/Kernel.AddSameSign
::Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::AddSameSign(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::AddSameSign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "AddSameSign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.Subtract
::Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::Subtract(::Mono::Math::BigInteger* big, ::Mono::Math::BigInteger* small) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(big), ::il2cpp_utils::ExtractType(small)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, big, small);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.MinusEq
void Mono::Math::BigInteger::Kernel::MinusEq(::Mono::Math::BigInteger* big, ::Mono::Math::BigInteger* small) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::MinusEq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "MinusEq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(big), ::il2cpp_utils::ExtractType(small)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, big, small);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.PlusEq
void Mono::Math::BigInteger::Kernel::PlusEq(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::PlusEq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "PlusEq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.Compare
::Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Kernel::Compare(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger::Sign, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.SingleByteDivideInPlace
uint Mono::Math::BigInteger::Kernel::SingleByteDivideInPlace(::Mono::Math::BigInteger* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::SingleByteDivideInPlace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "SingleByteDivideInPlace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.DwordMod
uint Mono::Math::BigInteger::Kernel::DwordMod(::Mono::Math::BigInteger* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::DwordMod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "DwordMod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.DwordDivMod
::ArrayW<::Mono::Math::BigInteger*> Mono::Math::BigInteger::Kernel::DwordDivMod(::Mono::Math::BigInteger* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::DwordDivMod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "DwordDivMod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Math::BigInteger*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.multiByteDivide
::ArrayW<::Mono::Math::BigInteger*> Mono::Math::BigInteger::Kernel::multiByteDivide(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::multiByteDivide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "multiByteDivide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Math::BigInteger*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.LeftShift
::Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::LeftShift(::Mono::Math::BigInteger* bi, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::LeftShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "LeftShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, n);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.RightShift
::Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::RightShift(::Mono::Math::BigInteger* bi, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::RightShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "RightShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, n);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.Multiply
void Mono::Math::BigInteger::Kernel::Multiply(::ArrayW<uint> x, uint xOffset, uint xLen, ::ArrayW<uint> y, uint yOffset, uint yLen, ::ArrayW<uint> d, uint dOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(xOffset), ::il2cpp_utils::ExtractType(xLen), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(yOffset), ::il2cpp_utils::ExtractType(yLen), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(dOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, xOffset, xLen, y, yOffset, yLen, d, dOffset);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.MultiplyMod2p32pmod
void Mono::Math::BigInteger::Kernel::MultiplyMod2p32pmod(::ArrayW<uint> x, int xOffset, int xLen, ::ArrayW<uint> y, int yOffest, int yLen, ::ArrayW<uint> d, int dOffset, int mod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::MultiplyMod2p32pmod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "MultiplyMod2p32pmod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(xOffset), ::il2cpp_utils::ExtractType(xLen), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(yOffest), ::il2cpp_utils::ExtractType(yLen), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(dOffset), ::il2cpp_utils::ExtractType(mod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, xOffset, xLen, y, yOffest, yLen, d, dOffset, mod);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.modInverse
uint Mono::Math::BigInteger::Kernel::modInverse(::Mono::Math::BigInteger* bi, uint modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::modInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "modInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(modulus)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, modulus);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.modInverse
::Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::modInverse(::Mono::Math::BigInteger* bi, ::Mono::Math::BigInteger* modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::modInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "modInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(modulus)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, modulus);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor ExtraLow
::Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_ExtraLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_get_ExtraLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "ExtraLow"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor ExtraLow
void Mono::Math::Prime::ConfidenceFactor::_set_ExtraLow(::Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_set_ExtraLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "ExtraLow", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Low
::Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "Low"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Low
void Mono::Math::Prime::ConfidenceFactor::_set_Low(::Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Medium
::Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Medium
void Mono::Math::Prime::ConfidenceFactor::_set_Medium(::Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor High
::Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "High"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor High
void Mono::Math::Prime::ConfidenceFactor::_set_High(::Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "High", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor ExtraHigh
::Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_ExtraHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_get_ExtraHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "ExtraHigh"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor ExtraHigh
void Mono::Math::Prime::ConfidenceFactor::_set_ExtraHigh(::Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_set_ExtraHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "ExtraHigh", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Provable
::Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_Provable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_get_Provable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "Provable"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Provable
void Mono::Math::Prime::ConfidenceFactor::_set_Provable(::Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_set_Provable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Provable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Math::Prime::ConfidenceFactor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.Prime.PrimalityTest
#include "Mono/Math/Prime/PrimalityTest.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.PrimalityTest.Invoke
bool Mono::Math::Prime::PrimalityTest::Invoke(::Mono::Math::BigInteger* bi, ::Mono::Math::Prime::ConfidenceFactor confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTest::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::PrimalityTest*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bi, confidence);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.PrimalityTests
#include "Mono/Math/Prime/PrimalityTests.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.PrimalityTests.GetSPPRounds
int Mono::Math::Prime::PrimalityTests::GetSPPRounds(::Mono::Math::BigInteger* bi, ::Mono::Math::Prime::ConfidenceFactor confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTests::GetSPPRounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", "GetSPPRounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, confidence);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTests.RabinMillerTest
bool Mono::Math::Prime::PrimalityTests::RabinMillerTest(::Mono::Math::BigInteger* n, ::Mono::Math::Prime::ConfidenceFactor confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTests::RabinMillerTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", "RabinMillerTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, confidence);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.Generator.PrimeGeneratorBase
#include "Mono/Math/Prime/Generator/PrimeGeneratorBase.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
// Including type: Mono.Math.Prime.PrimalityTest
#include "Mono/Math/Prime/PrimalityTest.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_Confidence
::Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::Generator::PrimeGeneratorBase::get_Confidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::PrimeGeneratorBase::get_Confidence");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::Generator::PrimeGeneratorBase*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::Prime::ConfidenceFactor, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_PrimalityTest
::Mono::Math::Prime::PrimalityTest* Mono::Math::Prime::Generator::PrimeGeneratorBase::get_PrimalityTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::PrimeGeneratorBase::get_PrimalityTest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::Generator::PrimeGeneratorBase*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::Prime::PrimalityTest*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_TrialDivisionBounds
int Mono::Math::Prime::Generator::PrimeGeneratorBase::get_TrialDivisionBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::PrimeGeneratorBase::get_TrialDivisionBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::Generator::PrimeGeneratorBase*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.GenerateNewPrime
::Mono::Math::BigInteger* Mono::Math::Prime::Generator::PrimeGeneratorBase::GenerateNewPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::PrimeGeneratorBase::GenerateNewPrime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::Generator::PrimeGeneratorBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, bits);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase
#include "Mono/Math/Prime/Generator/SequentialSearchPrimeGeneratorBase.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateSearchBase
::Mono::Math::BigInteger* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateSearchBase(int bits, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateSearchBase");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, bits, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateNewPrime
::Mono::Math::BigInteger* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime(int bits, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, bits, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.IsPrimeAcceptable
bool Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::IsPrimeAcceptable(::Mono::Math::BigInteger* bi, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::IsPrimeAcceptable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bi, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateNewPrime
::Mono::Math::BigInteger* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Math::Prime::Generator::PrimeGeneratorBase*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, bits);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.CodeAnalysis.EmbeddedAttribute
#include "Microsoft/CodeAnalysis/EmbeddedAttribute____.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.IsUnmanagedAttribute
#include "System/Runtime/CompilerServices/IsUnmanagedAttribute___.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Interop
#include "GlobalNamespace/Interop.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Interop/Sys
#include "GlobalNamespace/Interop_Sys.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Interop.ThrowExceptionForIoErrno
void GlobalNamespace::Interop::ThrowExceptionForIoErrno(::GlobalNamespace::Interop::ErrorInfo errorInfo, ::StringW path, bool isDirectory, ::System::Func_2<::GlobalNamespace::Interop::ErrorInfo, ::GlobalNamespace::Interop::ErrorInfo>* errorRewriter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::ThrowExceptionForIoErrno");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop", "ThrowExceptionForIoErrno", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorInfo), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(isDirectory), ::il2cpp_utils::ExtractType(errorRewriter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorInfo, path, isDirectory, errorRewriter);
}
// Autogenerated method: Interop.CheckIo
int64_t GlobalNamespace::Interop::CheckIo(int64_t result, ::StringW path, bool isDirectory, ::System::Func_2<::GlobalNamespace::Interop::ErrorInfo, ::GlobalNamespace::Interop::ErrorInfo>* errorRewriter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::CheckIo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop", "CheckIo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(isDirectory), ::il2cpp_utils::ExtractType(errorRewriter)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, result, path, isDirectory, errorRewriter);
}
// Autogenerated method: Interop.CheckIo
int GlobalNamespace::Interop::CheckIo(int result, ::StringW path, bool isDirectory, ::System::Func_2<::GlobalNamespace::Interop::ErrorInfo, ::GlobalNamespace::Interop::ErrorInfo>* errorRewriter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::CheckIo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop", "CheckIo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(isDirectory), ::il2cpp_utils::ExtractType(errorRewriter)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, result, path, isDirectory, errorRewriter);
}
// Autogenerated method: Interop.GetExceptionForIoErrno
::System::Exception* GlobalNamespace::Interop::GetExceptionForIoErrno(::GlobalNamespace::Interop::ErrorInfo errorInfo, ::StringW path, bool isDirectory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::GetExceptionForIoErrno");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop", "GetExceptionForIoErrno", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorInfo), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(isDirectory)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorInfo, path, isDirectory);
}
// Autogenerated method: Interop.GetIOException
::System::Exception* GlobalNamespace::Interop::GetIOException(::GlobalNamespace::Interop::ErrorInfo errorInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::GetIOException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop", "GetIOException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorInfo);
}
// Autogenerated method: Interop.GetRandomBytes
void GlobalNamespace::Interop::GetRandomBytes(uint8_t* buffer, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::GetRandomBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop", "GetRandomBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, length);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Interop/Error
#include "GlobalNamespace/Interop.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Interop/Error SUCCESS
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_SUCCESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_SUCCESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "SUCCESS"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error SUCCESS
void GlobalNamespace::Interop::Error::_set_SUCCESS(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_SUCCESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "SUCCESS", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error E2BIG
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_E2BIG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_E2BIG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "E2BIG"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error E2BIG
void GlobalNamespace::Interop::Error::_set_E2BIG(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_E2BIG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "E2BIG", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EACCES
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EACCES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EACCES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EACCES"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EACCES
void GlobalNamespace::Interop::Error::_set_EACCES(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EACCES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EACCES", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EADDRINUSE
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EADDRINUSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EADDRINUSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EADDRINUSE"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EADDRINUSE
void GlobalNamespace::Interop::Error::_set_EADDRINUSE(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EADDRINUSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EADDRINUSE", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EADDRNOTAVAIL
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EADDRNOTAVAIL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EADDRNOTAVAIL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EADDRNOTAVAIL"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EADDRNOTAVAIL
void GlobalNamespace::Interop::Error::_set_EADDRNOTAVAIL(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EADDRNOTAVAIL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EADDRNOTAVAIL", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EAFNOSUPPORT
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EAFNOSUPPORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EAFNOSUPPORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EAFNOSUPPORT"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EAFNOSUPPORT
void GlobalNamespace::Interop::Error::_set_EAFNOSUPPORT(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EAFNOSUPPORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EAFNOSUPPORT", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EAGAIN
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EAGAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EAGAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EAGAIN"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EAGAIN
void GlobalNamespace::Interop::Error::_set_EAGAIN(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EAGAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EAGAIN", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EALREADY
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EALREADY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EALREADY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EALREADY"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EALREADY
void GlobalNamespace::Interop::Error::_set_EALREADY(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EALREADY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EALREADY", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EBADF
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EBADF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EBADF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EBADF"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EBADF
void GlobalNamespace::Interop::Error::_set_EBADF(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EBADF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EBADF", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EBADMSG
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EBADMSG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EBADMSG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EBADMSG"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EBADMSG
void GlobalNamespace::Interop::Error::_set_EBADMSG(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EBADMSG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EBADMSG", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EBUSY
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EBUSY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EBUSY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EBUSY"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EBUSY
void GlobalNamespace::Interop::Error::_set_EBUSY(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EBUSY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EBUSY", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ECANCELED
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ECANCELED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ECANCELED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ECANCELED"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ECANCELED
void GlobalNamespace::Interop::Error::_set_ECANCELED(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ECANCELED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ECANCELED", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ECHILD
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ECHILD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ECHILD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ECHILD"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ECHILD
void GlobalNamespace::Interop::Error::_set_ECHILD(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ECHILD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ECHILD", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ECONNABORTED
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ECONNABORTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ECONNABORTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ECONNABORTED"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ECONNABORTED
void GlobalNamespace::Interop::Error::_set_ECONNABORTED(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ECONNABORTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ECONNABORTED", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ECONNREFUSED
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ECONNREFUSED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ECONNREFUSED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ECONNREFUSED"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ECONNREFUSED
void GlobalNamespace::Interop::Error::_set_ECONNREFUSED(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ECONNREFUSED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ECONNREFUSED", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ECONNRESET
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ECONNRESET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ECONNRESET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ECONNRESET"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ECONNRESET
void GlobalNamespace::Interop::Error::_set_ECONNRESET(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ECONNRESET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ECONNRESET", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EDEADLK
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EDEADLK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EDEADLK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EDEADLK"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EDEADLK
void GlobalNamespace::Interop::Error::_set_EDEADLK(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EDEADLK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EDEADLK", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EDESTADDRREQ
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EDESTADDRREQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EDESTADDRREQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EDESTADDRREQ"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EDESTADDRREQ
void GlobalNamespace::Interop::Error::_set_EDESTADDRREQ(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EDESTADDRREQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EDESTADDRREQ", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EDOM
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EDOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EDOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EDOM"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EDOM
void GlobalNamespace::Interop::Error::_set_EDOM(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EDOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EDOM", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EDQUOT
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EDQUOT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EDQUOT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EDQUOT"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EDQUOT
void GlobalNamespace::Interop::Error::_set_EDQUOT(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EDQUOT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EDQUOT", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EEXIST
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EEXIST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EEXIST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EEXIST"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EEXIST
void GlobalNamespace::Interop::Error::_set_EEXIST(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EEXIST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EEXIST", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EFAULT
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EFAULT"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EFAULT
void GlobalNamespace::Interop::Error::_set_EFAULT(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EFAULT", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EFBIG
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EFBIG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EFBIG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EFBIG"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EFBIG
void GlobalNamespace::Interop::Error::_set_EFBIG(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EFBIG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EFBIG", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EHOSTUNREACH
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EHOSTUNREACH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EHOSTUNREACH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EHOSTUNREACH"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EHOSTUNREACH
void GlobalNamespace::Interop::Error::_set_EHOSTUNREACH(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EHOSTUNREACH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EHOSTUNREACH", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EIDRM
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EIDRM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EIDRM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EIDRM"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EIDRM
void GlobalNamespace::Interop::Error::_set_EIDRM(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EIDRM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EIDRM", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EILSEQ
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EILSEQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EILSEQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EILSEQ"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EILSEQ
void GlobalNamespace::Interop::Error::_set_EILSEQ(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EILSEQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EILSEQ", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EINPROGRESS
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EINPROGRESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EINPROGRESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EINPROGRESS"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EINPROGRESS
void GlobalNamespace::Interop::Error::_set_EINPROGRESS(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EINPROGRESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EINPROGRESS", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EINTR
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EINTR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EINTR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EINTR"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EINTR
void GlobalNamespace::Interop::Error::_set_EINTR(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EINTR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EINTR", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EINVAL
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EINVAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EINVAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EINVAL"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EINVAL
void GlobalNamespace::Interop::Error::_set_EINVAL(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EINVAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EINVAL", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EIO
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EIO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EIO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EIO"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EIO
void GlobalNamespace::Interop::Error::_set_EIO(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EIO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EIO", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EISCONN
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EISCONN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EISCONN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EISCONN"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EISCONN
void GlobalNamespace::Interop::Error::_set_EISCONN(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EISCONN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EISCONN", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EISDIR
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EISDIR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EISDIR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EISDIR"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EISDIR
void GlobalNamespace::Interop::Error::_set_EISDIR(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EISDIR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EISDIR", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ELOOP
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ELOOP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ELOOP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ELOOP"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ELOOP
void GlobalNamespace::Interop::Error::_set_ELOOP(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ELOOP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ELOOP", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EMFILE
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EMFILE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EMFILE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EMFILE"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EMFILE
void GlobalNamespace::Interop::Error::_set_EMFILE(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EMFILE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EMFILE", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EMLINK
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EMLINK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EMLINK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EMLINK"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EMLINK
void GlobalNamespace::Interop::Error::_set_EMLINK(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EMLINK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EMLINK", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EMSGSIZE
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EMSGSIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EMSGSIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EMSGSIZE"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EMSGSIZE
void GlobalNamespace::Interop::Error::_set_EMSGSIZE(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EMSGSIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EMSGSIZE", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EMULTIHOP
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EMULTIHOP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EMULTIHOP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EMULTIHOP"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EMULTIHOP
void GlobalNamespace::Interop::Error::_set_EMULTIHOP(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EMULTIHOP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EMULTIHOP", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENAMETOOLONG
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENAMETOOLONG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENAMETOOLONG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENAMETOOLONG"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENAMETOOLONG
void GlobalNamespace::Interop::Error::_set_ENAMETOOLONG(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENAMETOOLONG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENAMETOOLONG", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENETDOWN
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENETDOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENETDOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENETDOWN"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENETDOWN
void GlobalNamespace::Interop::Error::_set_ENETDOWN(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENETDOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENETDOWN", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENETRESET
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENETRESET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENETRESET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENETRESET"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENETRESET
void GlobalNamespace::Interop::Error::_set_ENETRESET(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENETRESET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENETRESET", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENETUNREACH
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENETUNREACH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENETUNREACH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENETUNREACH"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENETUNREACH
void GlobalNamespace::Interop::Error::_set_ENETUNREACH(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENETUNREACH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENETUNREACH", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENFILE
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENFILE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENFILE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENFILE"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENFILE
void GlobalNamespace::Interop::Error::_set_ENFILE(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENFILE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENFILE", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENOBUFS
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENOBUFS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENOBUFS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENOBUFS"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENOBUFS
void GlobalNamespace::Interop::Error::_set_ENOBUFS(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENOBUFS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENOBUFS", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENODEV
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENODEV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENODEV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENODEV"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENODEV
void GlobalNamespace::Interop::Error::_set_ENODEV(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENODEV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENODEV", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENOENT
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENOENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENOENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENOENT"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENOENT
void GlobalNamespace::Interop::Error::_set_ENOENT(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENOENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENOENT", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENOEXEC
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENOEXEC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENOEXEC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENOEXEC"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENOEXEC
void GlobalNamespace::Interop::Error::_set_ENOEXEC(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENOEXEC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENOEXEC", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENOLCK
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENOLCK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENOLCK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENOLCK"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENOLCK
void GlobalNamespace::Interop::Error::_set_ENOLCK(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENOLCK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENOLCK", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENOLINK
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENOLINK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENOLINK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENOLINK"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENOLINK
void GlobalNamespace::Interop::Error::_set_ENOLINK(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENOLINK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENOLINK", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENOMEM
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENOMEM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENOMEM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENOMEM"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENOMEM
void GlobalNamespace::Interop::Error::_set_ENOMEM(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENOMEM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENOMEM", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENOMSG
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENOMSG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENOMSG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENOMSG"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENOMSG
void GlobalNamespace::Interop::Error::_set_ENOMSG(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENOMSG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENOMSG", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENOPROTOOPT
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENOPROTOOPT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENOPROTOOPT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENOPROTOOPT"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENOPROTOOPT
void GlobalNamespace::Interop::Error::_set_ENOPROTOOPT(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENOPROTOOPT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENOPROTOOPT", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENOSPC
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENOSPC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENOSPC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENOSPC"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENOSPC
void GlobalNamespace::Interop::Error::_set_ENOSPC(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENOSPC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENOSPC", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENOSYS
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENOSYS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENOSYS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENOSYS"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENOSYS
void GlobalNamespace::Interop::Error::_set_ENOSYS(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENOSYS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENOSYS", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENOTCONN
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENOTCONN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENOTCONN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENOTCONN"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENOTCONN
void GlobalNamespace::Interop::Error::_set_ENOTCONN(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENOTCONN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENOTCONN", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENOTDIR
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENOTDIR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENOTDIR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENOTDIR"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENOTDIR
void GlobalNamespace::Interop::Error::_set_ENOTDIR(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENOTDIR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENOTDIR", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENOTEMPTY
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENOTEMPTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENOTEMPTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENOTEMPTY"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENOTEMPTY
void GlobalNamespace::Interop::Error::_set_ENOTEMPTY(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENOTEMPTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENOTEMPTY", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENOTSOCK
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENOTSOCK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENOTSOCK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENOTSOCK"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENOTSOCK
void GlobalNamespace::Interop::Error::_set_ENOTSOCK(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENOTSOCK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENOTSOCK", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENOTSUP
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENOTSUP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENOTSUP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENOTSUP"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENOTSUP
void GlobalNamespace::Interop::Error::_set_ENOTSUP(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENOTSUP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENOTSUP", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENOTTY
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENOTTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENOTTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENOTTY"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENOTTY
void GlobalNamespace::Interop::Error::_set_ENOTTY(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENOTTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENOTTY", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENXIO
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENXIO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENXIO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENXIO"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENXIO
void GlobalNamespace::Interop::Error::_set_ENXIO(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENXIO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENXIO", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EOVERFLOW
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EOVERFLOW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EOVERFLOW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EOVERFLOW"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EOVERFLOW
void GlobalNamespace::Interop::Error::_set_EOVERFLOW(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EOVERFLOW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EOVERFLOW", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EPERM
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EPERM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EPERM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EPERM"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EPERM
void GlobalNamespace::Interop::Error::_set_EPERM(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EPERM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EPERM", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EPIPE
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EPIPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EPIPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EPIPE"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EPIPE
void GlobalNamespace::Interop::Error::_set_EPIPE(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EPIPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EPIPE", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EPROTO
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EPROTO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EPROTO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EPROTO"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EPROTO
void GlobalNamespace::Interop::Error::_set_EPROTO(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EPROTO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EPROTO", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EPROTONOSUPPORT
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EPROTONOSUPPORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EPROTONOSUPPORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EPROTONOSUPPORT"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EPROTONOSUPPORT
void GlobalNamespace::Interop::Error::_set_EPROTONOSUPPORT(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EPROTONOSUPPORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EPROTONOSUPPORT", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EPROTOTYPE
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EPROTOTYPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EPROTOTYPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EPROTOTYPE"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EPROTOTYPE
void GlobalNamespace::Interop::Error::_set_EPROTOTYPE(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EPROTOTYPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EPROTOTYPE", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ERANGE
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ERANGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ERANGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ERANGE"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ERANGE
void GlobalNamespace::Interop::Error::_set_ERANGE(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ERANGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ERANGE", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EROFS
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EROFS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EROFS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EROFS"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EROFS
void GlobalNamespace::Interop::Error::_set_EROFS(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EROFS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EROFS", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ESPIPE
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ESPIPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ESPIPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ESPIPE"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ESPIPE
void GlobalNamespace::Interop::Error::_set_ESPIPE(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ESPIPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ESPIPE", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ESRCH
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ESRCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ESRCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ESRCH"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ESRCH
void GlobalNamespace::Interop::Error::_set_ESRCH(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ESRCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ESRCH", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ESTALE
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ESTALE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ESTALE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ESTALE"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ESTALE
void GlobalNamespace::Interop::Error::_set_ESTALE(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ESTALE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ESTALE", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ETIMEDOUT
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ETIMEDOUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ETIMEDOUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ETIMEDOUT"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ETIMEDOUT
void GlobalNamespace::Interop::Error::_set_ETIMEDOUT(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ETIMEDOUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ETIMEDOUT", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ETXTBSY
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ETXTBSY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ETXTBSY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ETXTBSY"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ETXTBSY
void GlobalNamespace::Interop::Error::_set_ETXTBSY(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ETXTBSY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ETXTBSY", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EXDEV
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EXDEV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EXDEV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EXDEV"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EXDEV
void GlobalNamespace::Interop::Error::_set_EXDEV(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EXDEV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EXDEV", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ESOCKTNOSUPPORT
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ESOCKTNOSUPPORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ESOCKTNOSUPPORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ESOCKTNOSUPPORT"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ESOCKTNOSUPPORT
void GlobalNamespace::Interop::Error::_set_ESOCKTNOSUPPORT(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ESOCKTNOSUPPORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ESOCKTNOSUPPORT", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EPFNOSUPPORT
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EPFNOSUPPORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EPFNOSUPPORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EPFNOSUPPORT"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EPFNOSUPPORT
void GlobalNamespace::Interop::Error::_set_EPFNOSUPPORT(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EPFNOSUPPORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EPFNOSUPPORT", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ESHUTDOWN
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ESHUTDOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ESHUTDOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ESHUTDOWN"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ESHUTDOWN
void GlobalNamespace::Interop::Error::_set_ESHUTDOWN(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ESHUTDOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ESHUTDOWN", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EHOSTDOWN
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EHOSTDOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EHOSTDOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EHOSTDOWN"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EHOSTDOWN
void GlobalNamespace::Interop::Error::_set_EHOSTDOWN(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EHOSTDOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EHOSTDOWN", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error ENODATA
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_ENODATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_ENODATA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "ENODATA"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error ENODATA
void GlobalNamespace::Interop::Error::_set_ENODATA(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_ENODATA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "ENODATA", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EOPNOTSUPP
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EOPNOTSUPP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EOPNOTSUPP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EOPNOTSUPP"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EOPNOTSUPP
void GlobalNamespace::Interop::Error::_set_EOPNOTSUPP(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EOPNOTSUPP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EOPNOTSUPP", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Error EWOULDBLOCK
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Error::_get_EWOULDBLOCK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_get_EWOULDBLOCK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Error>("", "Interop/Error", "EWOULDBLOCK"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Error EWOULDBLOCK
void GlobalNamespace::Interop::Error::_set_EWOULDBLOCK(::GlobalNamespace::Interop::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::_set_EWOULDBLOCK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Error", "EWOULDBLOCK", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Interop::Error::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Error::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Interop/ErrorInfo
#include "GlobalNamespace/Interop.hpp"
// Including type: Interop/Error
// Already included the same include: GlobalNamespace/Interop.hpp
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Interop/Error _error
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Interop::Error& GlobalNamespace::Interop::ErrorInfo::dyn__error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::ErrorInfo::dyn__error");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_error"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Interop::Error*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _rawErrno
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Interop::ErrorInfo::dyn__rawErrno() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::ErrorInfo::dyn__rawErrno");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rawErrno"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Interop/ErrorInfo..ctor
GlobalNamespace::Interop::ErrorInfo::ErrorInfo(int errno) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::ErrorInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errno)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errno);
}
// Autogenerated method: Interop/ErrorInfo..ctor
GlobalNamespace::Interop::ErrorInfo::ErrorInfo(::GlobalNamespace::Interop::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::ErrorInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: Interop/ErrorInfo.get_Error
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::ErrorInfo::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::ErrorInfo::get_Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::Interop::Error, false>(this, ___internal__method);
}
// Autogenerated method: Interop/ErrorInfo.get_RawErrno
int GlobalNamespace::Interop::ErrorInfo::get_RawErrno() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::ErrorInfo::get_RawErrno");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_RawErrno", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Interop/ErrorInfo.GetErrorMessage
::StringW GlobalNamespace::Interop::ErrorInfo::GetErrorMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::ErrorInfo::GetErrorMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetErrorMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Interop/ErrorInfo.ToString
::StringW GlobalNamespace::Interop::ErrorInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::ErrorInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Interop/Sys
#include "GlobalNamespace/Interop_Sys.hpp"
// Including type: Interop/Sys/NodeType
#include "GlobalNamespace/Interop_Sys_NodeType.hpp"
// Including type: Interop/Sys/DirectoryEntry
#include "GlobalNamespace/Interop_Sys_DirectoryEntry.hpp"
// Including type: Interop/Sys/FileStatus
#include "GlobalNamespace/Interop_Sys_FileStatus.hpp"
// Including type: Interop/Sys/FileStatusFlags
#include "GlobalNamespace/Interop_Sys_FileStatusFlags.hpp"
// Including type: Interop/Sys/Permissions
#include "GlobalNamespace/Interop_Sys_Permissions.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeFileHandle
#include "Microsoft/Win32/SafeHandles/SafeFileHandle.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Boolean CanSetHiddenFlag
bool GlobalNamespace::Interop::Sys::_get_CanSetHiddenFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::_get_CanSetHiddenFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "Interop/Sys", "CanSetHiddenFlag"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean CanSetHiddenFlag
void GlobalNamespace::Interop::Sys::_set_CanSetHiddenFlag(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::_set_CanSetHiddenFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys", "CanSetHiddenFlag", value));
}
// Autogenerated method: Interop/Sys.GetLastErrorInfo
::GlobalNamespace::Interop::ErrorInfo GlobalNamespace::Interop::Sys::GetLastErrorInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::GetLastErrorInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "GetLastErrorInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::Interop::ErrorInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Interop/Sys.StrError
::StringW GlobalNamespace::Interop::Sys::StrError(int platformErrno) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::StrError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "StrError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platformErrno)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, platformErrno);
}
// Autogenerated method: Interop/Sys.ConvertErrorPlatformToPal
::GlobalNamespace::Interop::Error GlobalNamespace::Interop::Sys::ConvertErrorPlatformToPal(int platformErrno) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::ConvertErrorPlatformToPal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "ConvertErrorPlatformToPal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platformErrno)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::Interop::Error, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, platformErrno);
}
// Autogenerated method: Interop/Sys.ConvertErrorPalToPlatform
int GlobalNamespace::Interop::Sys::ConvertErrorPalToPlatform(::GlobalNamespace::Interop::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::ConvertErrorPalToPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "ConvertErrorPalToPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: Interop/Sys.StrErrorR
uint8_t* GlobalNamespace::Interop::Sys::StrErrorR(int platformErrno, uint8_t* buffer, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::StrErrorR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "StrErrorR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platformErrno), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, platformErrno, buffer, bufferSize);
}
// Autogenerated method: Interop/Sys.GetNonCryptographicallySecureRandomBytes
void GlobalNamespace::Interop::Sys::GetNonCryptographicallySecureRandomBytes(uint8_t* buffer, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::GetNonCryptographicallySecureRandomBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "GetNonCryptographicallySecureRandomBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, length);
}
// Autogenerated method: Interop/Sys.OpenDir
::System::IntPtr GlobalNamespace::Interop::Sys::OpenDir(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::OpenDir");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "OpenDir", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Interop/Sys.GetReadDirRBufferSize
int GlobalNamespace::Interop::Sys::GetReadDirRBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::GetReadDirRBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "GetReadDirRBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Interop/Sys.ReadDirR
int GlobalNamespace::Interop::Sys::ReadDirR(::System::IntPtr dir, uint8_t* buffer, int bufferSize, ByRef<::GlobalNamespace::Interop::Sys::DirectoryEntry> outputEntry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::ReadDirR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "ReadDirR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::Interop::Sys::DirectoryEntry&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dir, buffer, bufferSize, byref(outputEntry));
}
// Autogenerated method: Interop/Sys.CloseDir
int GlobalNamespace::Interop::Sys::CloseDir(::System::IntPtr dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::CloseDir");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "CloseDir", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dir);
}
// Autogenerated method: Interop/Sys.ReadLink
int GlobalNamespace::Interop::Sys::ReadLink(::StringW path, ::ArrayW<uint8_t> buffer, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::ReadLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "ReadLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, buffer, bufferSize);
}
// Autogenerated method: Interop/Sys.ReadLink
::StringW GlobalNamespace::Interop::Sys::ReadLink(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::ReadLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "ReadLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Interop/Sys.Stat
int GlobalNamespace::Interop::Sys::Stat(::StringW path, ByRef<::GlobalNamespace::Interop::Sys::FileStatus> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Stat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "Stat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::Interop::Sys::FileStatus&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(output));
}
// Autogenerated method: Interop/Sys.LStat
int GlobalNamespace::Interop::Sys::LStat(::StringW path, ByRef<::GlobalNamespace::Interop::Sys::FileStatus> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::LStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "LStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::Interop::Sys::FileStatus&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(output));
}
// Autogenerated method: Interop/Sys.Symlink
int GlobalNamespace::Interop::Sys::Symlink(::StringW target, ::StringW linkPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Symlink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "Symlink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(linkPath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, linkPath);
}
// Autogenerated method: Interop/Sys.ChMod
int GlobalNamespace::Interop::Sys::ChMod(::StringW path, int mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::ChMod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "ChMod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, mode);
}
// Autogenerated method: Interop/Sys.CopyFile
int GlobalNamespace::Interop::Sys::CopyFile(::Microsoft::Win32::SafeHandles::SafeFileHandle* source, ::Microsoft::Win32::SafeHandles::SafeFileHandle* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::CopyFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "CopyFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destination)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, destination);
}
// Autogenerated method: Interop/Sys.GetEGid
uint GlobalNamespace::Interop::Sys::GetEGid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::GetEGid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "GetEGid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Interop/Sys.GetEUid
uint GlobalNamespace::Interop::Sys::GetEUid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::GetEUid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "GetEUid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Interop/Sys.LChflags
int GlobalNamespace::Interop::Sys::LChflags(::StringW path, uint flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::LChflags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "LChflags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, flags);
}
// Autogenerated method: Interop/Sys.LChflagsCanSetHiddenFlag
int GlobalNamespace::Interop::Sys::LChflagsCanSetHiddenFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::LChflagsCanSetHiddenFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "LChflagsCanSetHiddenFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Interop/Sys.Link
int GlobalNamespace::Interop::Sys::Link(::StringW source, ::StringW link) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Link");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "Link", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(link)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, link);
}
// Autogenerated method: Interop/Sys.MkDir
int GlobalNamespace::Interop::Sys::MkDir(::StringW path, int mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::MkDir");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "MkDir", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, mode);
}
// Autogenerated method: Interop/Sys.Rename
int GlobalNamespace::Interop::Sys::Rename(::StringW oldPath, ::StringW newPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Rename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "Rename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldPath), ::il2cpp_utils::ExtractType(newPath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oldPath, newPath);
}
// Autogenerated method: Interop/Sys.RmDir
int GlobalNamespace::Interop::Sys::RmDir(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::RmDir");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "RmDir", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Interop/Sys.Stat
int GlobalNamespace::Interop::Sys::Stat(ByRef<uint8_t> path, ByRef<::GlobalNamespace::Interop::Sys::FileStatus> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Stat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "Stat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::Interop::Sys::FileStatus&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(path), byref(output));
}
// Autogenerated method: Interop/Sys.Stat
int GlobalNamespace::Interop::Sys::Stat(::System::ReadOnlySpan_1<::Il2CppChar> path, ByRef<::GlobalNamespace::Interop::Sys::FileStatus> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Stat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "Stat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::Interop::Sys::FileStatus&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(output));
}
// Autogenerated method: Interop/Sys.LStat
int GlobalNamespace::Interop::Sys::LStat(ByRef<uint8_t> path, ByRef<::GlobalNamespace::Interop::Sys::FileStatus> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::LStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "LStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::Interop::Sys::FileStatus&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(path), byref(output));
}
// Autogenerated method: Interop/Sys.LStat
int GlobalNamespace::Interop::Sys::LStat(::System::ReadOnlySpan_1<::Il2CppChar> path, ByRef<::GlobalNamespace::Interop::Sys::FileStatus> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::LStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "LStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::Interop::Sys::FileStatus&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(output));
}
// Autogenerated method: Interop/Sys.Unlink
int GlobalNamespace::Interop::Sys::Unlink(::StringW pathname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Unlink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "Unlink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pathname)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pathname);
}
// Autogenerated method: Interop/Sys.DoubleToString
int GlobalNamespace::Interop::Sys::DoubleToString(double value, uint8_t* format, uint8_t* buffer, int bufferLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::DoubleToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", "DoubleToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, buffer, bufferLength);
}
// Autogenerated method: Interop/Sys..cctor
void GlobalNamespace::Interop::Sys::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interop/Sys", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Interop/Sys/NodeType
#include "GlobalNamespace/Interop_Sys_NodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Interop/Sys/NodeType DT_UNKNOWN
::GlobalNamespace::Interop::Sys::NodeType GlobalNamespace::Interop::Sys::NodeType::_get_DT_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_get_DT_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::NodeType>("", "Interop/Sys/NodeType", "DT_UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/NodeType DT_UNKNOWN
void GlobalNamespace::Interop::Sys::NodeType::_set_DT_UNKNOWN(::GlobalNamespace::Interop::Sys::NodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_set_DT_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/NodeType", "DT_UNKNOWN", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/NodeType DT_FIFO
::GlobalNamespace::Interop::Sys::NodeType GlobalNamespace::Interop::Sys::NodeType::_get_DT_FIFO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_get_DT_FIFO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::NodeType>("", "Interop/Sys/NodeType", "DT_FIFO"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/NodeType DT_FIFO
void GlobalNamespace::Interop::Sys::NodeType::_set_DT_FIFO(::GlobalNamespace::Interop::Sys::NodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_set_DT_FIFO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/NodeType", "DT_FIFO", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/NodeType DT_CHR
::GlobalNamespace::Interop::Sys::NodeType GlobalNamespace::Interop::Sys::NodeType::_get_DT_CHR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_get_DT_CHR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::NodeType>("", "Interop/Sys/NodeType", "DT_CHR"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/NodeType DT_CHR
void GlobalNamespace::Interop::Sys::NodeType::_set_DT_CHR(::GlobalNamespace::Interop::Sys::NodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_set_DT_CHR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/NodeType", "DT_CHR", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/NodeType DT_DIR
::GlobalNamespace::Interop::Sys::NodeType GlobalNamespace::Interop::Sys::NodeType::_get_DT_DIR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_get_DT_DIR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::NodeType>("", "Interop/Sys/NodeType", "DT_DIR"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/NodeType DT_DIR
void GlobalNamespace::Interop::Sys::NodeType::_set_DT_DIR(::GlobalNamespace::Interop::Sys::NodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_set_DT_DIR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/NodeType", "DT_DIR", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/NodeType DT_BLK
::GlobalNamespace::Interop::Sys::NodeType GlobalNamespace::Interop::Sys::NodeType::_get_DT_BLK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_get_DT_BLK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::NodeType>("", "Interop/Sys/NodeType", "DT_BLK"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/NodeType DT_BLK
void GlobalNamespace::Interop::Sys::NodeType::_set_DT_BLK(::GlobalNamespace::Interop::Sys::NodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_set_DT_BLK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/NodeType", "DT_BLK", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/NodeType DT_REG
::GlobalNamespace::Interop::Sys::NodeType GlobalNamespace::Interop::Sys::NodeType::_get_DT_REG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_get_DT_REG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::NodeType>("", "Interop/Sys/NodeType", "DT_REG"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/NodeType DT_REG
void GlobalNamespace::Interop::Sys::NodeType::_set_DT_REG(::GlobalNamespace::Interop::Sys::NodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_set_DT_REG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/NodeType", "DT_REG", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/NodeType DT_LNK
::GlobalNamespace::Interop::Sys::NodeType GlobalNamespace::Interop::Sys::NodeType::_get_DT_LNK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_get_DT_LNK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::NodeType>("", "Interop/Sys/NodeType", "DT_LNK"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/NodeType DT_LNK
void GlobalNamespace::Interop::Sys::NodeType::_set_DT_LNK(::GlobalNamespace::Interop::Sys::NodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_set_DT_LNK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/NodeType", "DT_LNK", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/NodeType DT_SOCK
::GlobalNamespace::Interop::Sys::NodeType GlobalNamespace::Interop::Sys::NodeType::_get_DT_SOCK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_get_DT_SOCK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::NodeType>("", "Interop/Sys/NodeType", "DT_SOCK"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/NodeType DT_SOCK
void GlobalNamespace::Interop::Sys::NodeType::_set_DT_SOCK(::GlobalNamespace::Interop::Sys::NodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_set_DT_SOCK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/NodeType", "DT_SOCK", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/NodeType DT_WHT
::GlobalNamespace::Interop::Sys::NodeType GlobalNamespace::Interop::Sys::NodeType::_get_DT_WHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_get_DT_WHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::NodeType>("", "Interop/Sys/NodeType", "DT_WHT"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/NodeType DT_WHT
void GlobalNamespace::Interop::Sys::NodeType::_set_DT_WHT(::GlobalNamespace::Interop::Sys::NodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::_set_DT_WHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/NodeType", "DT_WHT", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Interop::Sys::NodeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::NodeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Interop/Sys/DirectoryEntry
#include "GlobalNamespace/Interop_Sys_DirectoryEntry.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Byte* Name
[[deprecated("Use field access instead!")]] uint8_t*& GlobalNamespace::Interop::Sys::DirectoryEntry::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::DirectoryEntry::dyn_Name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 NameLength
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Interop::Sys::DirectoryEntry::dyn_NameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::DirectoryEntry::dyn_NameLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NameLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Interop/Sys/NodeType InodeType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Interop::Sys::NodeType& GlobalNamespace::Interop::Sys::DirectoryEntry::dyn_InodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::DirectoryEntry::dyn_InodeType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InodeType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Interop::Sys::NodeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Interop/Sys/DirectoryEntry.GetName
::System::ReadOnlySpan_1<::Il2CppChar> GlobalNamespace::Interop::Sys::DirectoryEntry::GetName(::System::Span_1<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::DirectoryEntry::GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(this, ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Interop/Sys/FileStatusFlags
#include "GlobalNamespace/Interop_Sys_FileStatusFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Interop/Sys/FileStatusFlags None
::GlobalNamespace::Interop::Sys::FileStatusFlags GlobalNamespace::Interop::Sys::FileStatusFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::FileStatusFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::FileStatusFlags>("", "Interop/Sys/FileStatusFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/FileStatusFlags None
void GlobalNamespace::Interop::Sys::FileStatusFlags::_set_None(::GlobalNamespace::Interop::Sys::FileStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::FileStatusFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/FileStatusFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/FileStatusFlags HasBirthTime
::GlobalNamespace::Interop::Sys::FileStatusFlags GlobalNamespace::Interop::Sys::FileStatusFlags::_get_HasBirthTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::FileStatusFlags::_get_HasBirthTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::FileStatusFlags>("", "Interop/Sys/FileStatusFlags", "HasBirthTime"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/FileStatusFlags HasBirthTime
void GlobalNamespace::Interop::Sys::FileStatusFlags::_set_HasBirthTime(::GlobalNamespace::Interop::Sys::FileStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::FileStatusFlags::_set_HasBirthTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/FileStatusFlags", "HasBirthTime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Interop::Sys::FileStatusFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::FileStatusFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Interop/Sys/Permissions
#include "GlobalNamespace/Interop_Sys_Permissions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Interop/Sys/Permissions Mask
::GlobalNamespace::Interop::Sys::Permissions GlobalNamespace::Interop::Sys::Permissions::_get_Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_get_Mask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::Permissions>("", "Interop/Sys/Permissions", "Mask"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/Permissions Mask
void GlobalNamespace::Interop::Sys::Permissions::_set_Mask(::GlobalNamespace::Interop::Sys::Permissions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_set_Mask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/Permissions", "Mask", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/Permissions S_IRWXU
::GlobalNamespace::Interop::Sys::Permissions GlobalNamespace::Interop::Sys::Permissions::_get_S_IRWXU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_get_S_IRWXU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::Permissions>("", "Interop/Sys/Permissions", "S_IRWXU"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/Permissions S_IRWXU
void GlobalNamespace::Interop::Sys::Permissions::_set_S_IRWXU(::GlobalNamespace::Interop::Sys::Permissions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_set_S_IRWXU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/Permissions", "S_IRWXU", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/Permissions S_IRUSR
::GlobalNamespace::Interop::Sys::Permissions GlobalNamespace::Interop::Sys::Permissions::_get_S_IRUSR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_get_S_IRUSR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::Permissions>("", "Interop/Sys/Permissions", "S_IRUSR"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/Permissions S_IRUSR
void GlobalNamespace::Interop::Sys::Permissions::_set_S_IRUSR(::GlobalNamespace::Interop::Sys::Permissions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_set_S_IRUSR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/Permissions", "S_IRUSR", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/Permissions S_IWUSR
::GlobalNamespace::Interop::Sys::Permissions GlobalNamespace::Interop::Sys::Permissions::_get_S_IWUSR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_get_S_IWUSR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::Permissions>("", "Interop/Sys/Permissions", "S_IWUSR"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/Permissions S_IWUSR
void GlobalNamespace::Interop::Sys::Permissions::_set_S_IWUSR(::GlobalNamespace::Interop::Sys::Permissions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_set_S_IWUSR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/Permissions", "S_IWUSR", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/Permissions S_IXUSR
::GlobalNamespace::Interop::Sys::Permissions GlobalNamespace::Interop::Sys::Permissions::_get_S_IXUSR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_get_S_IXUSR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::Permissions>("", "Interop/Sys/Permissions", "S_IXUSR"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/Permissions S_IXUSR
void GlobalNamespace::Interop::Sys::Permissions::_set_S_IXUSR(::GlobalNamespace::Interop::Sys::Permissions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_set_S_IXUSR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/Permissions", "S_IXUSR", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/Permissions S_IRWXG
::GlobalNamespace::Interop::Sys::Permissions GlobalNamespace::Interop::Sys::Permissions::_get_S_IRWXG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_get_S_IRWXG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::Permissions>("", "Interop/Sys/Permissions", "S_IRWXG"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/Permissions S_IRWXG
void GlobalNamespace::Interop::Sys::Permissions::_set_S_IRWXG(::GlobalNamespace::Interop::Sys::Permissions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_set_S_IRWXG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/Permissions", "S_IRWXG", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/Permissions S_IRGRP
::GlobalNamespace::Interop::Sys::Permissions GlobalNamespace::Interop::Sys::Permissions::_get_S_IRGRP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_get_S_IRGRP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::Permissions>("", "Interop/Sys/Permissions", "S_IRGRP"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/Permissions S_IRGRP
void GlobalNamespace::Interop::Sys::Permissions::_set_S_IRGRP(::GlobalNamespace::Interop::Sys::Permissions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_set_S_IRGRP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/Permissions", "S_IRGRP", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/Permissions S_IWGRP
::GlobalNamespace::Interop::Sys::Permissions GlobalNamespace::Interop::Sys::Permissions::_get_S_IWGRP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_get_S_IWGRP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::Permissions>("", "Interop/Sys/Permissions", "S_IWGRP"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/Permissions S_IWGRP
void GlobalNamespace::Interop::Sys::Permissions::_set_S_IWGRP(::GlobalNamespace::Interop::Sys::Permissions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_set_S_IWGRP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/Permissions", "S_IWGRP", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/Permissions S_IXGRP
::GlobalNamespace::Interop::Sys::Permissions GlobalNamespace::Interop::Sys::Permissions::_get_S_IXGRP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_get_S_IXGRP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::Permissions>("", "Interop/Sys/Permissions", "S_IXGRP"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/Permissions S_IXGRP
void GlobalNamespace::Interop::Sys::Permissions::_set_S_IXGRP(::GlobalNamespace::Interop::Sys::Permissions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_set_S_IXGRP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/Permissions", "S_IXGRP", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/Permissions S_IRWXO
::GlobalNamespace::Interop::Sys::Permissions GlobalNamespace::Interop::Sys::Permissions::_get_S_IRWXO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_get_S_IRWXO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::Permissions>("", "Interop/Sys/Permissions", "S_IRWXO"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/Permissions S_IRWXO
void GlobalNamespace::Interop::Sys::Permissions::_set_S_IRWXO(::GlobalNamespace::Interop::Sys::Permissions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_set_S_IRWXO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/Permissions", "S_IRWXO", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/Permissions S_IROTH
::GlobalNamespace::Interop::Sys::Permissions GlobalNamespace::Interop::Sys::Permissions::_get_S_IROTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_get_S_IROTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::Permissions>("", "Interop/Sys/Permissions", "S_IROTH"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/Permissions S_IROTH
void GlobalNamespace::Interop::Sys::Permissions::_set_S_IROTH(::GlobalNamespace::Interop::Sys::Permissions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_set_S_IROTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/Permissions", "S_IROTH", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/Permissions S_IWOTH
::GlobalNamespace::Interop::Sys::Permissions GlobalNamespace::Interop::Sys::Permissions::_get_S_IWOTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_get_S_IWOTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::Permissions>("", "Interop/Sys/Permissions", "S_IWOTH"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/Permissions S_IWOTH
void GlobalNamespace::Interop::Sys::Permissions::_set_S_IWOTH(::GlobalNamespace::Interop::Sys::Permissions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_set_S_IWOTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/Permissions", "S_IWOTH", value));
}
// Autogenerated static field getter
// Get static field: static public Interop/Sys/Permissions S_IXOTH
::GlobalNamespace::Interop::Sys::Permissions GlobalNamespace::Interop::Sys::Permissions::_get_S_IXOTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_get_S_IXOTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Interop::Sys::Permissions>("", "Interop/Sys/Permissions", "S_IXOTH"));
}
// Autogenerated static field setter
// Set static field: static public Interop/Sys/Permissions S_IXOTH
void GlobalNamespace::Interop::Sys::Permissions::_set_S_IXOTH(::GlobalNamespace::Interop::Sys::Permissions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::_set_S_IXOTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Interop/Sys/Permissions", "S_IXOTH", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Interop::Sys::Permissions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interop::Sys::Permissions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: InteropErrorExtensions
#include "GlobalNamespace/InteropErrorExtensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: InteropErrorExtensions.Info
::GlobalNamespace::Interop::ErrorInfo GlobalNamespace::InteropErrorExtensions::Info(::GlobalNamespace::Interop::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InteropErrorExtensions::Info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "InteropErrorExtensions", "Info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::Interop::ErrorInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Locale
#include "GlobalNamespace/Locale_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Locale.GetText
::StringW GlobalNamespace::Locale_::GetText(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Locale_::GetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Locale", "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Locale.GetText
::StringW GlobalNamespace::Locale_::GetText(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Locale_::GetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Locale", "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fmt), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fmt, args);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SR
#include "GlobalNamespace/SR.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR::GetString(::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, args);
}
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR::GetString(::System::Globalization::CultureInfo* culture, ::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture, name, args);
}
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR::GetString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: SR.Format
::StringW GlobalNamespace::SR::Format(::StringW resourceFormat, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceFormat), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resourceFormat, args);
}
// Autogenerated method: SR.Format
::StringW GlobalNamespace::SR::Format(::StringW resourceFormat, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceFormat), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resourceFormat, p1);
}
// Autogenerated method: SR.Format
::StringW GlobalNamespace::SR::Format(::StringW resourceFormat, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceFormat), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resourceFormat, p1, p2);
}
// Autogenerated method: SR.Format
::StringW GlobalNamespace::SR::Format(::StringW resourceFormat, ::Il2CppObject* p1, ::Il2CppObject* p2, ::Il2CppObject* p3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceFormat), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resourceFormat, p1, p2, p3);
}
// Autogenerated method: SR.GetResourceString
::StringW GlobalNamespace::SR::GetResourceString(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR::GetResourceString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetResourceString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.CertificateImportFlags
#include "Mono/CertificateImportFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.CertificateImportFlags None
::Mono::CertificateImportFlags Mono::CertificateImportFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::CertificateImportFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::CertificateImportFlags>("Mono", "CertificateImportFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public Mono.CertificateImportFlags None
void Mono::CertificateImportFlags::_set_None(::Mono::CertificateImportFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::CertificateImportFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono", "CertificateImportFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.CertificateImportFlags DisableNativeBackend
::Mono::CertificateImportFlags Mono::CertificateImportFlags::_get_DisableNativeBackend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::CertificateImportFlags::_get_DisableNativeBackend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::CertificateImportFlags>("Mono", "CertificateImportFlags", "DisableNativeBackend"));
}
// Autogenerated static field setter
// Set static field: static public Mono.CertificateImportFlags DisableNativeBackend
void Mono::CertificateImportFlags::_set_DisableNativeBackend(::Mono::CertificateImportFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::CertificateImportFlags::_set_DisableNativeBackend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono", "CertificateImportFlags", "DisableNativeBackend", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.CertificateImportFlags DisableAutomaticFallback
::Mono::CertificateImportFlags Mono::CertificateImportFlags::_get_DisableAutomaticFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::CertificateImportFlags::_get_DisableAutomaticFallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::CertificateImportFlags>("Mono", "CertificateImportFlags", "DisableAutomaticFallback"));
}
// Autogenerated static field setter
// Set static field: static public Mono.CertificateImportFlags DisableAutomaticFallback
void Mono::CertificateImportFlags::_set_DisableAutomaticFallback(::Mono::CertificateImportFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::CertificateImportFlags::_set_DisableAutomaticFallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono", "CertificateImportFlags", "DisableAutomaticFallback", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::CertificateImportFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::CertificateImportFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.DependencyInjector
#include "Mono/DependencyInjector.hpp"
// Including type: Mono.ISystemDependencyProvider
#include "Mono/ISystemDependencyProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object locker
::Il2CppObject* Mono::DependencyInjector::_get_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::DependencyInjector::_get_locker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono", "DependencyInjector", "locker"));
}
// Autogenerated static field setter
// Set static field: static private System.Object locker
void Mono::DependencyInjector::_set_locker(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::DependencyInjector::_set_locker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono", "DependencyInjector", "locker", value));
}
// Autogenerated static field getter
// Get static field: static private Mono.ISystemDependencyProvider systemDependency
::Mono::ISystemDependencyProvider* Mono::DependencyInjector::_get_systemDependency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::DependencyInjector::_get_systemDependency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::ISystemDependencyProvider*>("Mono", "DependencyInjector", "systemDependency"));
}
// Autogenerated static field setter
// Set static field: static private Mono.ISystemDependencyProvider systemDependency
void Mono::DependencyInjector::_set_systemDependency(::Mono::ISystemDependencyProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::DependencyInjector::_set_systemDependency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono", "DependencyInjector", "systemDependency", value));
}
// Autogenerated method: Mono.DependencyInjector.get_SystemProvider
::Mono::ISystemDependencyProvider* Mono::DependencyInjector::get_SystemProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::DependencyInjector::get_SystemProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "DependencyInjector", "get_SystemProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::ISystemDependencyProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.DependencyInjector.Register
void Mono::DependencyInjector::Register(::Mono::ISystemDependencyProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::DependencyInjector::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "DependencyInjector", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider);
}
// Autogenerated method: Mono.DependencyInjector.ReflectionLoad
::Mono::ISystemDependencyProvider* Mono::DependencyInjector::ReflectionLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::DependencyInjector::ReflectionLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "DependencyInjector", "ReflectionLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::ISystemDependencyProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.DependencyInjector..cctor
void Mono::DependencyInjector::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::DependencyInjector::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "DependencyInjector", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.ISystemCertificateProvider
#include "Mono/ISystemCertificateProvider.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImpl
#include "System/Security/Cryptography/X509Certificates/X509CertificateImpl.hpp"
// Including type: Mono.CertificateImportFlags
#include "Mono/CertificateImportFlags.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafePasswordHandle
#include "Microsoft/Win32/SafeHandles/SafePasswordHandle.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
#include "System/Security/Cryptography/X509Certificates/X509KeyStorageFlags.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.ISystemCertificateProvider.Import
::System::Security::Cryptography::X509Certificates::X509CertificateImpl* Mono::ISystemCertificateProvider::Import(::ArrayW<uint8_t> data, ::Mono::CertificateImportFlags importFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::ISystemCertificateProvider::Import");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::ISystemCertificateProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(this, ___internal__method, data, importFlags);
}
// Autogenerated method: Mono.ISystemCertificateProvider.Import
::System::Security::Cryptography::X509Certificates::X509CertificateImpl* Mono::ISystemCertificateProvider::Import(::ArrayW<uint8_t> data, ::Microsoft::Win32::SafeHandles::SafePasswordHandle* password, ::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags, ::Mono::CertificateImportFlags importFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::ISystemCertificateProvider::Import");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::ISystemCertificateProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(this, ___internal__method, data, password, keyStorageFlags, importFlags);
}
// Autogenerated method: Mono.ISystemCertificateProvider.Import
::System::Security::Cryptography::X509Certificates::X509CertificateImpl* Mono::ISystemCertificateProvider::Import(::System::Security::Cryptography::X509Certificates::X509Certificate* cert, ::Mono::CertificateImportFlags importFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::ISystemCertificateProvider::Import");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::ISystemCertificateProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(this, ___internal__method, cert, importFlags);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.ISystemDependencyProvider
#include "Mono/ISystemDependencyProvider.hpp"
// Including type: Mono.ISystemCertificateProvider
#include "Mono/ISystemCertificateProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.ISystemDependencyProvider.get_CertificateProvider
::Mono::ISystemCertificateProvider* Mono::ISystemDependencyProvider::get_CertificateProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::ISystemDependencyProvider::get_CertificateProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::ISystemDependencyProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::ISystemCertificateProvider*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Runtime
#include "Mono/Runtime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object dump
::Il2CppObject* Mono::Runtime::_get_dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Runtime::_get_dump");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono", "Runtime", "dump"));
}
// Autogenerated static field setter
// Set static field: static private System.Object dump
void Mono::Runtime::_set_dump(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Runtime::_set_dump");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono", "Runtime", "dump", value));
}
// Autogenerated method: Mono.Runtime..cctor
void Mono::Runtime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Runtime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "Runtime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.RuntimeClassHandle
#include "Mono/RuntimeClassHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.RuntimeTypeHandle
#include "System/RuntimeTypeHandle.hpp"
// Including type: Mono.RuntimeStructs/MonoClass
#include "Mono/RuntimeStructs_MonoClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.RuntimeStructs/MonoClass* value
[[deprecated("Use field access instead!")]] ::Mono::RuntimeStructs::MonoClass*& Mono::RuntimeClassHandle::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeClassHandle::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Mono::RuntimeStructs::MonoClass**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.RuntimeClassHandle..ctor
// ABORTED elsewhere.  Mono::RuntimeClassHandle::RuntimeClassHandle(::Mono::RuntimeStructs::MonoClass* value)
// Autogenerated method: Mono.RuntimeClassHandle..ctor
Mono::RuntimeClassHandle::RuntimeClassHandle(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeClassHandle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ptr);
}
// Autogenerated method: Mono.RuntimeClassHandle.get_Value
::Mono::RuntimeStructs::MonoClass* Mono::RuntimeClassHandle::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeClassHandle::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::RuntimeStructs::MonoClass*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeClassHandle.GetTypeFromClass
::System::IntPtr Mono::RuntimeClassHandle::GetTypeFromClass(::Mono::RuntimeStructs::MonoClass* klass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeClassHandle::GetTypeFromClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeClassHandle", "GetTypeFromClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(klass)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, klass);
}
// Autogenerated method: Mono.RuntimeClassHandle.GetTypeHandle
::System::RuntimeTypeHandle Mono::RuntimeClassHandle::GetTypeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeClassHandle::GetTypeHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTypeHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeTypeHandle, false>(this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeClassHandle.Equals
bool Mono::RuntimeClassHandle::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeClassHandle::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Mono.RuntimeClassHandle.GetHashCode
int Mono::RuntimeClassHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeClassHandle::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.RuntimeRemoteClassHandle
#include "Mono/RuntimeRemoteClassHandle.hpp"
// Including type: Mono.RuntimeClassHandle
#include "Mono/RuntimeClassHandle.hpp"
// Including type: Mono.RuntimeStructs/RemoteClass
#include "Mono/RuntimeStructs_RemoteClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.RuntimeStructs/RemoteClass* value
[[deprecated("Use field access instead!")]] ::Mono::RuntimeStructs::RemoteClass*& Mono::RuntimeRemoteClassHandle::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeRemoteClassHandle::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Mono::RuntimeStructs::RemoteClass**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.RuntimeRemoteClassHandle.get_ProxyClass
::Mono::RuntimeClassHandle Mono::RuntimeRemoteClassHandle::get_ProxyClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeRemoteClassHandle::get_ProxyClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ProxyClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::RuntimeClassHandle, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.RuntimeGenericParamInfoHandle
#include "Mono/RuntimeGenericParamInfoHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.GenericParameterAttributes
#include "System/Reflection/GenericParameterAttributes.hpp"
// Including type: Mono.RuntimeStructs/GenericParamInfo
#include "Mono/RuntimeStructs_GenericParamInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.RuntimeStructs/GenericParamInfo* value
[[deprecated("Use field access instead!")]] ::Mono::RuntimeStructs::GenericParamInfo*& Mono::RuntimeGenericParamInfoHandle::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGenericParamInfoHandle::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Mono::RuntimeStructs::GenericParamInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle..ctor
Mono::RuntimeGenericParamInfoHandle::RuntimeGenericParamInfoHandle(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGenericParamInfoHandle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ptr);
}
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle.get_Constraints
::ArrayW<::System::Type*> Mono::RuntimeGenericParamInfoHandle::get_Constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGenericParamInfoHandle::get_Constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle.get_Attributes
::System::Reflection::GenericParameterAttributes Mono::RuntimeGenericParamInfoHandle::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGenericParamInfoHandle::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::GenericParameterAttributes, false>(this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle.GetConstraints
::ArrayW<::System::Type*> Mono::RuntimeGenericParamInfoHandle::GetConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGenericParamInfoHandle::GetConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle.GetConstraintsCount
int Mono::RuntimeGenericParamInfoHandle::GetConstraintsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGenericParamInfoHandle::GetConstraintsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetConstraintsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.RuntimeEventHandle
#include "Mono/RuntimeEventHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr value
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::RuntimeEventHandle::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeEventHandle::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.RuntimeEventHandle..ctor
// ABORTED elsewhere.  Mono::RuntimeEventHandle::RuntimeEventHandle(::System::IntPtr v)
// Autogenerated method: Mono.RuntimeEventHandle.get_Value
::System::IntPtr Mono::RuntimeEventHandle::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeEventHandle::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeEventHandle.Equals
bool Mono::RuntimeEventHandle::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeEventHandle::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Mono.RuntimeEventHandle.GetHashCode
int Mono::RuntimeEventHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeEventHandle::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.RuntimePropertyHandle
#include "Mono/RuntimePropertyHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr value
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::RuntimePropertyHandle::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimePropertyHandle::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.RuntimePropertyHandle..ctor
// ABORTED elsewhere.  Mono::RuntimePropertyHandle::RuntimePropertyHandle(::System::IntPtr v)
// Autogenerated method: Mono.RuntimePropertyHandle.get_Value
::System::IntPtr Mono::RuntimePropertyHandle::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimePropertyHandle::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.RuntimePropertyHandle.Equals
bool Mono::RuntimePropertyHandle::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimePropertyHandle::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Mono.RuntimePropertyHandle.GetHashCode
int Mono::RuntimePropertyHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimePropertyHandle::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.RuntimeGPtrArrayHandle
#include "Mono/RuntimeGPtrArrayHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.RuntimeStructs/GPtrArray
#include "Mono/RuntimeStructs_GPtrArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.RuntimeStructs/GPtrArray* value
[[deprecated("Use field access instead!")]] ::Mono::RuntimeStructs::GPtrArray*& Mono::RuntimeGPtrArrayHandle::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGPtrArrayHandle::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Mono::RuntimeStructs::GPtrArray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle..ctor
Mono::RuntimeGPtrArrayHandle::RuntimeGPtrArrayHandle(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGPtrArrayHandle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ptr);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.get_Length
int Mono::RuntimeGPtrArrayHandle::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGPtrArrayHandle::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.get_Item
::System::IntPtr Mono::RuntimeGPtrArrayHandle::get_Item(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGPtrArrayHandle::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.Lookup
::System::IntPtr Mono::RuntimeGPtrArrayHandle::Lookup(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGPtrArrayHandle::Lookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Lookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.GPtrArrayFree
void Mono::RuntimeGPtrArrayHandle::GPtrArrayFree(::Mono::RuntimeStructs::GPtrArray* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGPtrArrayHandle::GPtrArrayFree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeGPtrArrayHandle", "GPtrArrayFree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.DestroyAndFree
void Mono::RuntimeGPtrArrayHandle::DestroyAndFree(ByRef<::Mono::RuntimeGPtrArrayHandle> h) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGPtrArrayHandle::DestroyAndFree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeGPtrArrayHandle", "DestroyAndFree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(h));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.RuntimeMarshal
#include "Mono/RuntimeMarshal.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.SafeStringMarshal
#include "Mono/SafeStringMarshal.hpp"
// Including type: Mono.MonoAssemblyName
#include "Mono/MonoAssemblyName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.RuntimeMarshal.PtrToUtf8String
::StringW Mono::RuntimeMarshal::PtrToUtf8String(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeMarshal::PtrToUtf8String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "PtrToUtf8String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: Mono.RuntimeMarshal.MarshalString
::Mono::SafeStringMarshal Mono::RuntimeMarshal::MarshalString(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeMarshal::MarshalString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "MarshalString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::SafeStringMarshal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: Mono.RuntimeMarshal.DecodeBlobSize
int Mono::RuntimeMarshal::DecodeBlobSize(::System::IntPtr in_ptr, ByRef<::System::IntPtr> out_ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeMarshal::DecodeBlobSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "DecodeBlobSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(in_ptr), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, in_ptr, byref(out_ptr));
}
// Autogenerated method: Mono.RuntimeMarshal.DecodeBlobArray
::ArrayW<uint8_t> Mono::RuntimeMarshal::DecodeBlobArray(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeMarshal::DecodeBlobArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "DecodeBlobArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: Mono.RuntimeMarshal.AsciHexDigitValue
int Mono::RuntimeMarshal::AsciHexDigitValue(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeMarshal::AsciHexDigitValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "AsciHexDigitValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Mono.RuntimeMarshal.FreeAssemblyName
void Mono::RuntimeMarshal::FreeAssemblyName(ByRef<::Mono::MonoAssemblyName> name, bool freeStruct) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeMarshal::FreeAssemblyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "FreeAssemblyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(freeStruct)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(name), freeStruct);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.SafeGPtrArrayHandle
#include "Mono/SafeGPtrArrayHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.RuntimeGPtrArrayHandle handle
[[deprecated("Use field access instead!")]] ::Mono::RuntimeGPtrArrayHandle& Mono::SafeGPtrArrayHandle::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeGPtrArrayHandle::dyn_handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::Mono::RuntimeGPtrArrayHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.SafeGPtrArrayHandle..ctor
Mono::SafeGPtrArrayHandle::SafeGPtrArrayHandle(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeGPtrArrayHandle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ptr);
}
// Autogenerated method: Mono.SafeGPtrArrayHandle.Dispose
void Mono::SafeGPtrArrayHandle::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeGPtrArrayHandle::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::SafeGPtrArrayHandle), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.SafeGPtrArrayHandle.get_Length
int Mono::SafeGPtrArrayHandle::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeGPtrArrayHandle::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.SafeGPtrArrayHandle.get_Item
::System::IntPtr Mono::SafeGPtrArrayHandle::get_Item(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeGPtrArrayHandle::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, i);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.SafeStringMarshal
#include "Mono/SafeStringMarshal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String str
[[deprecated("Use field access instead!")]] ::StringW& Mono::SafeStringMarshal::dyn_str() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeStringMarshal::dyn_str");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "str"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr marshaled_string
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::SafeStringMarshal::dyn_marshaled_string() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeStringMarshal::dyn_marshaled_string");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "marshaled_string"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.SafeStringMarshal.StringToUtf8_icall
::System::IntPtr Mono::SafeStringMarshal::StringToUtf8_icall(ByRef<::StringW> str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeStringMarshal::StringToUtf8_icall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "SafeStringMarshal", "StringToUtf8_icall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str));
}
// Autogenerated method: Mono.SafeStringMarshal.StringToUtf8
::System::IntPtr Mono::SafeStringMarshal::StringToUtf8(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeStringMarshal::StringToUtf8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "SafeStringMarshal", "StringToUtf8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: Mono.SafeStringMarshal.GFree
void Mono::SafeStringMarshal::GFree(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeStringMarshal::GFree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "SafeStringMarshal", "GFree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: Mono.SafeStringMarshal..ctor
Mono::SafeStringMarshal::SafeStringMarshal(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeStringMarshal::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str);
}
// Autogenerated method: Mono.SafeStringMarshal.get_Value
::System::IntPtr Mono::SafeStringMarshal::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeStringMarshal::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.SafeStringMarshal.Dispose
void Mono::SafeStringMarshal::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeStringMarshal::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::SafeStringMarshal), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Xml.SecurityParser
#include "Mono/Xml/SecurityParser.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: Mono.Xml.SmallXmlParser/IAttrList
#include "Mono/Xml/SmallXmlParser_IAttrList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.SecurityElement root
[[deprecated("Use field access instead!")]] ::System::Security::SecurityElement*& Mono::Xml::SecurityParser::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<::System::Security::SecurityElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.SecurityElement current
[[deprecated("Use field access instead!")]] ::System::Security::SecurityElement*& Mono::Xml::SecurityParser::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<::System::Security::SecurityElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack stack
[[deprecated("Use field access instead!")]] ::System::Collections::Stack*& Mono::Xml::SecurityParser::dyn_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::dyn_stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stack"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Xml.SecurityParser.LoadXml
void Mono::Xml::SecurityParser::LoadXml(::StringW xml) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::LoadXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xml)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xml);
}
// Autogenerated method: Mono.Xml.SecurityParser.ToXml
::System::Security::SecurityElement* Mono::Xml::SecurityParser::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::ToXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnStartParsing
void Mono::Xml::SecurityParser::OnStartParsing(::Mono::Xml::SmallXmlParser* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::OnStartParsing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SecurityParser*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnProcessingInstruction
void Mono::Xml::SecurityParser::OnProcessingInstruction(::StringW name, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::OnProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SecurityParser*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnIgnorableWhitespace
void Mono::Xml::SecurityParser::OnIgnorableWhitespace(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::OnIgnorableWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SecurityParser*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnStartElement
void Mono::Xml::SecurityParser::OnStartElement(::StringW name, ::Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::OnStartElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SecurityParser*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, attrs);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnEndElement
void Mono::Xml::SecurityParser::OnEndElement(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::OnEndElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SecurityParser*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnChars
void Mono::Xml::SecurityParser::OnChars(::StringW ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::OnChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SecurityParser*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnEndParsing
void Mono::Xml::SecurityParser::OnEndParsing(::Mono::Xml::SmallXmlParser* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::OnEndParsing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SecurityParser*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Xml.SmallXmlParser
#include "Mono/Xml/SmallXmlParser.hpp"
// Including type: Mono.Xml.SmallXmlParser/IContentHandler
#include "Mono/Xml/SmallXmlParser_IContentHandler.hpp"
// Including type: Mono.Xml.SmallXmlParser/IAttrList
#include "Mono/Xml/SmallXmlParser_IAttrList.hpp"
// Including type: Mono.Xml.SmallXmlParser/AttrListImpl
#include "Mono/Xml/SmallXmlParser_AttrListImpl.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Xml.SmallXmlParser/IContentHandler handler
[[deprecated("Use field access instead!")]] ::Mono::Xml::SmallXmlParser::IContentHandler*& Mono::Xml::SmallXmlParser::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::Mono::Xml::SmallXmlParser::IContentHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.TextReader reader
[[deprecated("Use field access instead!")]] ::System::IO::TextReader*& Mono::Xml::SmallXmlParser::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::IO::TextReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack elementNames
[[deprecated("Use field access instead!")]] ::System::Collections::Stack*& Mono::Xml::SmallXmlParser::dyn_elementNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_elementNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementNames"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack xmlSpaces
[[deprecated("Use field access instead!")]] ::System::Collections::Stack*& Mono::Xml::SmallXmlParser::dyn_xmlSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_xmlSpaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlSpaces"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xmlSpace
[[deprecated("Use field access instead!")]] ::StringW& Mono::Xml::SmallXmlParser::dyn_xmlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_xmlSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlSpace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder buffer
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& Mono::Xml::SmallXmlParser::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] nameBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& Mono::Xml::SmallXmlParser::dyn_nameBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_nameBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isWhitespace
[[deprecated("Use field access instead!")]] bool& Mono::Xml::SmallXmlParser::dyn_isWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_isWhitespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isWhitespace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Xml.SmallXmlParser/AttrListImpl attributes
[[deprecated("Use field access instead!")]] ::Mono::Xml::SmallXmlParser::AttrListImpl*& Mono::Xml::SmallXmlParser::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::Mono::Xml::SmallXmlParser::AttrListImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 line
[[deprecated("Use field access instead!")]] int& Mono::Xml::SmallXmlParser::dyn_line() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_line");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "line"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 column
[[deprecated("Use field access instead!")]] int& Mono::Xml::SmallXmlParser::dyn_column() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_column");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "column"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean resetColumn
[[deprecated("Use field access instead!")]] bool& Mono::Xml::SmallXmlParser::dyn_resetColumn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_resetColumn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetColumn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Error
::System::Exception* Mono::Xml::SmallXmlParser::Error(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, msg);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.UnexpectedEndError
::System::Exception* Mono::Xml::SmallXmlParser::UnexpectedEndError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::UnexpectedEndError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnexpectedEndError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.IsNameChar
bool Mono::Xml::SmallXmlParser::IsNameChar(::Il2CppChar c, bool start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IsNameChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNameChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c, start);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.IsWhitespace
bool Mono::Xml::SmallXmlParser::IsWhitespace(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IsWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.SkipWhitespaces
void Mono::Xml::SmallXmlParser::SkipWhitespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::SkipWhitespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipWhitespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.HandleWhitespaces
void Mono::Xml::SmallXmlParser::HandleWhitespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::HandleWhitespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleWhitespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.SkipWhitespaces
void Mono::Xml::SmallXmlParser::SkipWhitespaces(bool expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::SkipWhitespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipWhitespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expected);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Peek
int Mono::Xml::SmallXmlParser::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::Peek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Read
int Mono::Xml::SmallXmlParser::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Expect
void Mono::Xml::SmallXmlParser::Expect(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::Expect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Expect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadUntil
::StringW Mono::Xml::SmallXmlParser::ReadUntil(::Il2CppChar until, bool handleReferences) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadUntil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUntil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(until), ::il2cpp_utils::ExtractType(handleReferences)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, until, handleReferences);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadName
::StringW Mono::Xml::SmallXmlParser::ReadName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Parse
void Mono::Xml::SmallXmlParser::Parse(::System::IO::TextReader* input, ::Mono::Xml::SmallXmlParser::IContentHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(handler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, handler);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Cleanup
void Mono::Xml::SmallXmlParser::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadContent
void Mono::Xml::SmallXmlParser::ReadContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.HandleBufferedContent
void Mono::Xml::SmallXmlParser::HandleBufferedContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::HandleBufferedContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBufferedContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadCharacters
void Mono::Xml::SmallXmlParser::ReadCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadReference
void Mono::Xml::SmallXmlParser::ReadReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadCharacterReference
int Mono::Xml::SmallXmlParser::ReadCharacterReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadCharacterReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCharacterReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadAttribute
void Mono::Xml::SmallXmlParser::ReadAttribute(::Mono::Xml::SmallXmlParser::AttrListImpl* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadCDATASection
void Mono::Xml::SmallXmlParser::ReadCDATASection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadCDATASection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCDATASection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadComment
void Mono::Xml::SmallXmlParser::ReadComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Xml.SmallXmlParser/IContentHandler
#include "Mono/Xml/SmallXmlParser_IContentHandler.hpp"
// Including type: Mono.Xml.SmallXmlParser/IAttrList
#include "Mono/Xml/SmallXmlParser_IAttrList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Xml.SmallXmlParser/IContentHandler.OnStartParsing
void Mono::Xml::SmallXmlParser::IContentHandler::OnStartParsing(::Mono::Xml::SmallXmlParser* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IContentHandler::OnStartParsing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::IContentHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IContentHandler.OnEndParsing
void Mono::Xml::SmallXmlParser::IContentHandler::OnEndParsing(::Mono::Xml::SmallXmlParser* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IContentHandler::OnEndParsing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::IContentHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IContentHandler.OnStartElement
void Mono::Xml::SmallXmlParser::IContentHandler::OnStartElement(::StringW name, ::Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IContentHandler::OnStartElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::IContentHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, attrs);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IContentHandler.OnEndElement
void Mono::Xml::SmallXmlParser::IContentHandler::OnEndElement(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IContentHandler::OnEndElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::IContentHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IContentHandler.OnProcessingInstruction
void Mono::Xml::SmallXmlParser::IContentHandler::OnProcessingInstruction(::StringW name, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IContentHandler::OnProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::IContentHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IContentHandler.OnChars
void Mono::Xml::SmallXmlParser::IContentHandler::OnChars(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IContentHandler::OnChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::IContentHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IContentHandler.OnIgnorableWhitespace
void Mono::Xml::SmallXmlParser::IContentHandler::OnIgnorableWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IContentHandler::OnIgnorableWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::IContentHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Xml.SmallXmlParser/IAttrList
#include "Mono/Xml/SmallXmlParser_IAttrList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Xml.SmallXmlParser/IAttrList.get_Length
int Mono::Xml::SmallXmlParser::IAttrList::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IAttrList::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::IAttrList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IAttrList.GetName
::StringW Mono::Xml::SmallXmlParser::IAttrList::GetName(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IAttrList::GetName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::IAttrList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IAttrList.GetValue
::StringW Mono::Xml::SmallXmlParser::IAttrList::GetValue(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IAttrList::GetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::IAttrList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IAttrList.GetValue
::StringW Mono::Xml::SmallXmlParser::IAttrList::GetValue(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IAttrList::GetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::IAttrList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IAttrList.get_Names
::ArrayW<::StringW> Mono::Xml::SmallXmlParser::IAttrList::get_Names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IAttrList::get_Names");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::IAttrList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/IAttrList.get_Values
::ArrayW<::StringW> Mono::Xml::SmallXmlParser::IAttrList::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IAttrList::get_Values");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::IAttrList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Xml.SmallXmlParser/AttrListImpl
#include "Mono/Xml/SmallXmlParser_AttrListImpl.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> attrNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Mono::Xml::SmallXmlParser::AttrListImpl::dyn_attrNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::dyn_attrNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> attrValues
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Mono::Xml::SmallXmlParser::AttrListImpl::dyn_attrValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::dyn_attrValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrValues"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/AttrListImpl.get_Length
int Mono::Xml::SmallXmlParser::AttrListImpl::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::AttrListImpl*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/AttrListImpl.GetName
::StringW Mono::Xml::SmallXmlParser::AttrListImpl::GetName(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::GetName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::AttrListImpl*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/AttrListImpl.GetValue
::StringW Mono::Xml::SmallXmlParser::AttrListImpl::GetValue(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::GetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::AttrListImpl*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/AttrListImpl.GetValue
::StringW Mono::Xml::SmallXmlParser::AttrListImpl::GetValue(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::GetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::AttrListImpl*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/AttrListImpl.get_Names
::ArrayW<::StringW> Mono::Xml::SmallXmlParser::AttrListImpl::get_Names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::get_Names");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::AttrListImpl*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/AttrListImpl.get_Values
::ArrayW<::StringW> Mono::Xml::SmallXmlParser::AttrListImpl::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::get_Values");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Xml::SmallXmlParser::AttrListImpl*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/AttrListImpl.Clear
void Mono::Xml::SmallXmlParser::AttrListImpl::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/AttrListImpl.Add
void Mono::Xml::SmallXmlParser::AttrListImpl::Add(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Xml.SmallXmlParserException
#include "Mono/Xml/SmallXmlParserException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 line
[[deprecated("Use field access instead!")]] int& Mono::Xml::SmallXmlParserException::dyn_line() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParserException::dyn_line");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "line"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 column
[[deprecated("Use field access instead!")]] int& Mono::Xml::SmallXmlParserException::dyn_column() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParserException::dyn_column");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "column"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Interop.MonoPInvokeCallbackAttribute
#include "Mono/Interop/MonoPInvokeCallbackAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.CodePointIndexer
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Globalization.Unicode.CodePointIndexer/TableRange[] ranges
[[deprecated("Use field access instead!")]] ::ArrayW<::Mono::Globalization::Unicode::CodePointIndexer::TableRange>& Mono::Globalization::Unicode::CodePointIndexer::dyn_ranges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::dyn_ranges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ranges"))->offset;
  return *reinterpret_cast<::ArrayW<::Mono::Globalization::Unicode::CodePointIndexer::TableRange>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 TotalCount
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::CodePointIndexer::dyn_TotalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::dyn_TotalCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 defaultIndex
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::CodePointIndexer::dyn_defaultIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::dyn_defaultIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 defaultCP
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::CodePointIndexer::dyn_defaultCP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::dyn_defaultCP");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultCP"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Globalization.Unicode.CodePointIndexer.ToIndex
int Mono::Globalization::Unicode::CodePointIndexer::ToIndex(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::ToIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cp);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.CodePointIndexer/TableRange
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Start
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_Start");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 End
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_End");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "End"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Count
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_Count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 IndexStart
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_IndexStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_IndexStart");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IndexStart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 IndexEnd
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_IndexEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_IndexEnd");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IndexEnd"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Globalization.Unicode.CodePointIndexer/TableRange..ctor
Mono::Globalization::Unicode::CodePointIndexer::TableRange::TableRange(int start, int end, int indexStart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::TableRange::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(indexStart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, indexStart);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.TailoringInfo
#include "Mono/Globalization/Unicode/TailoringInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 LCID
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::TailoringInfo::dyn_LCID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::TailoringInfo::dyn_LCID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LCID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 TailoringIndex
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::TailoringInfo::dyn_TailoringIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::TailoringInfo::dyn_TailoringIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TailoringIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 TailoringCount
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::TailoringInfo::dyn_TailoringCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::TailoringInfo::dyn_TailoringCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TailoringCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean FrenchSort
[[deprecated("Use field access instead!")]] bool& Mono::Globalization::Unicode::TailoringInfo::dyn_FrenchSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::TailoringInfo::dyn_FrenchSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FrenchSort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.Contraction
#include "Mono/Globalization/Unicode/Contraction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Index
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::Contraction::dyn_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::Contraction::dyn_Index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Char[] Source
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& Mono::Globalization::Unicode::Contraction::dyn_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::Contraction::dyn_Source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Source"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Replacement
[[deprecated("Use field access instead!")]] ::StringW& Mono::Globalization::Unicode::Contraction::dyn_Replacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::Contraction::dyn_Replacement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Replacement"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] SortKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::Contraction::dyn_SortKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::Contraction::dyn_SortKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SortKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.ContractionComparer
#include "Mono/Globalization/Unicode/ContractionComparer.hpp"
// Including type: Mono.Globalization.Unicode.Contraction
#include "Mono/Globalization/Unicode/Contraction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.ContractionComparer Instance
::Mono::Globalization::Unicode::ContractionComparer* Mono::Globalization::Unicode::ContractionComparer::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::ContractionComparer::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::ContractionComparer*>("Mono.Globalization.Unicode", "ContractionComparer", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.ContractionComparer Instance
void Mono::Globalization::Unicode::ContractionComparer::_set_Instance(::Mono::Globalization::Unicode::ContractionComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::ContractionComparer::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "ContractionComparer", "Instance", value));
}
// Autogenerated method: Mono.Globalization.Unicode.ContractionComparer.Compare
int Mono::Globalization::Unicode::ContractionComparer::Compare(::Mono::Globalization::Unicode::Contraction* c1, ::Mono::Globalization::Unicode::Contraction* c2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::ContractionComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Globalization::Unicode::ContractionComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, c1, c2);
}
// Autogenerated method: Mono.Globalization.Unicode.ContractionComparer..cctor
void Mono::Globalization::Unicode::ContractionComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::ContractionComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "ContractionComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.Level2Map
#include "Mono/Globalization/Unicode/Level2Map.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte Source
[[deprecated("Use field access instead!")]] uint8_t& Mono::Globalization::Unicode::Level2Map::dyn_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::Level2Map::dyn_Source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Source"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Replace
[[deprecated("Use field access instead!")]] uint8_t& Mono::Globalization::Unicode::Level2Map::dyn_Replace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::Level2Map::dyn_Replace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Replace"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Globalization.Unicode.MSCompatUnicodeTable
#include "Mono/Globalization/Unicode/MSCompatUnicodeTable.hpp"
// Including type: Mono.Globalization.Unicode.MSCompatUnicodeTable/<>c
#include "Mono/Globalization/Unicode/MSCompatUnicodeTable_--c.hpp"
// Including type: Mono.Globalization.Unicode.TailoringInfo
#include "Mono/Globalization/Unicode/TailoringInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: Mono.Globalization.Unicode.Contraction
#include "Mono/Globalization/Unicode/Contraction.hpp"
// Including type: Mono.Globalization.Unicode.Level2Map
#include "Mono/Globalization/Unicode/Level2Map.hpp"
// Including type: Mono.Globalization.Unicode.CodePointIndexer
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxExpansionLength
int Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_MaxExpansionLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_MaxExpansionLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "MaxExpansionLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxExpansionLength
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_MaxExpansionLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_MaxExpansionLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "MaxExpansionLength", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte* ignorableFlags
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_ignorableFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_ignorableFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "ignorableFlags"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte* ignorableFlags
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_ignorableFlags(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_ignorableFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "ignorableFlags", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte* categories
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_categories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_categories");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "categories"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte* categories
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_categories(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_categories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "categories", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte* level1
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte* level1
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level1(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte* level2
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte* level2
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level2(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte* level3
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte* level3
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level3(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level3", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkCHScategory
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHScategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHScategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHScategory"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkCHScategory
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHScategory(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHScategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHScategory", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkCHTcategory
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHTcategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHTcategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHTcategory"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkCHTcategory
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHTcategory(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHTcategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHTcategory", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkJAcategory
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkJAcategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkJAcategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkJAcategory"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkJAcategory
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkJAcategory(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkJAcategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkJAcategory", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkKOcategory
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOcategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOcategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOcategory"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkKOcategory
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOcategory(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOcategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOcategory", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkCHSlv1
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHSlv1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHSlv1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHSlv1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkCHSlv1
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHSlv1(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHSlv1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHSlv1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkCHTlv1
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHTlv1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHTlv1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHTlv1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkCHTlv1
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHTlv1(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHTlv1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHTlv1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkJAlv1
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkJAlv1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkJAlv1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkJAlv1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkJAlv1
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkJAlv1(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkJAlv1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkJAlv1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkKOlv1
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOlv1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOlv1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOlv1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkKOlv1
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOlv1(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOlv1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOlv1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkKOlv2
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOlv2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOlv2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOlv2"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkKOlv2
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOlv2(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOlv2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOlv2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] tailoringArr
::ArrayW<::Il2CppChar> Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_tailoringArr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_tailoringArr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "tailoringArr"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] tailoringArr
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_tailoringArr(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_tailoringArr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "tailoringArr", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Mono.Globalization.Unicode.TailoringInfo[] tailoringInfos
::ArrayW<::Mono::Globalization::Unicode::TailoringInfo*> Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_tailoringInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_tailoringInfos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Mono::Globalization::Unicode::TailoringInfo*>>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "tailoringInfos"));
}
// Autogenerated static field setter
// Set static field: static private readonly Mono.Globalization.Unicode.TailoringInfo[] tailoringInfos
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_tailoringInfos(::ArrayW<::Mono::Globalization::Unicode::TailoringInfo*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_tailoringInfos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "tailoringInfos", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object forLock
::Il2CppObject* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_forLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_forLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "forLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object forLock
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_forLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_forLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "forLock", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean isReady
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_isReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "isReady"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean isReady
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_isReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_isReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "isReady", value));
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.GetTailoringInfo
::Mono::Globalization::Unicode::TailoringInfo* Mono::Globalization::Unicode::MSCompatUnicodeTable::GetTailoringInfo(int lcid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::GetTailoringInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "GetTailoringInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lcid)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Globalization::Unicode::TailoringInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lcid);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.BuildTailoringTables
void Mono::Globalization::Unicode::MSCompatUnicodeTable::BuildTailoringTables(::System::Globalization::CultureInfo* culture, ::Mono::Globalization::Unicode::TailoringInfo* t, ByRef<::ArrayW<::Mono::Globalization::Unicode::Contraction*>> contractions, ByRef<::ArrayW<::Mono::Globalization::Unicode::Level2Map*>> diacriticals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::BuildTailoringTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "BuildTailoringTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(contractions), ::il2cpp_utils::ExtractType(diacriticals)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture, t, byref(contractions), byref(diacriticals));
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.SetCJKReferences
void Mono::Globalization::Unicode::MSCompatUnicodeTable::SetCJKReferences(::StringW name, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> cjkIndexer, ByRef<uint8_t*> catTable, ByRef<uint8_t*> lv1Table, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> lv2Indexer, ByRef<uint8_t*> lv2Table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::SetCJKReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "SetCJKReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(cjkIndexer), ::il2cpp_utils::ExtractType(catTable), ::il2cpp_utils::ExtractType(lv1Table), ::il2cpp_utils::ExtractType(lv2Indexer), ::il2cpp_utils::ExtractType(lv2Table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, byref(cjkIndexer), byref(catTable), byref(lv1Table), byref(lv2Indexer), byref(lv2Table));
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.Category
uint8_t Mono::Globalization::Unicode::MSCompatUnicodeTable::Category(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::Category");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "Category", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.Level1
uint8_t Mono::Globalization::Unicode::MSCompatUnicodeTable::Level1(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::Level1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "Level1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.Level2
uint8_t Mono::Globalization::Unicode::MSCompatUnicodeTable::Level2(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::Level2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "Level2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.Level3
uint8_t Mono::Globalization::Unicode::MSCompatUnicodeTable::Level3(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::Level3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "Level3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.IsIgnorable
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::IsIgnorable(int cp, uint8_t flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::IsIgnorable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "IsIgnorable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp, flag);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.IsIgnorableNonSpacing
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::IsIgnorableNonSpacing(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::IsIgnorableNonSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "IsIgnorableNonSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.ToKanaTypeInsensitive
int Mono::Globalization::Unicode::MSCompatUnicodeTable::ToKanaTypeInsensitive(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::ToKanaTypeInsensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "ToKanaTypeInsensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.ToWidthCompat
int Mono::Globalization::Unicode::MSCompatUnicodeTable::ToWidthCompat(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::ToWidthCompat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "ToWidthCompat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.HasSpecialWeight
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::HasSpecialWeight(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::HasSpecialWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "HasSpecialWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.IsHalfWidthKana
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::IsHalfWidthKana(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::IsHalfWidthKana");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "IsHalfWidthKana", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.IsHiragana
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::IsHiragana(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::IsHiragana");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "IsHiragana", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.IsJapaneseSmallLetter
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::IsJapaneseSmallLetter(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::IsJapaneseSmallLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "IsJapaneseSmallLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.get_IsReady
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::get_IsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::get_IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "get_IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.GetResource
::System::IntPtr Mono::Globalization::Unicode::MSCompatUnicodeTable::GetResource(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::GetResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "GetResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.UInt32FromBytePtr
uint Mono::Globalization::Unicode::MSCompatUnicodeTable::UInt32FromBytePtr(uint8_t* raw, uint idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::UInt32FromBytePtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "UInt32FromBytePtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, raw, idx);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable..cctor
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.FillCJK
void Mono::Globalization::Unicode::MSCompatUnicodeTable::FillCJK(::StringW culture, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> cjkIndexer, ByRef<uint8_t*> catTable, ByRef<uint8_t*> lv1Table, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> lv2Indexer, ByRef<uint8_t*> lv2Table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::FillCJK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "FillCJK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(cjkIndexer), ::il2cpp_utils::ExtractType(catTable), ::il2cpp_utils::ExtractType(lv1Table), ::il2cpp_utils::ExtractType(lv2Indexer), ::il2cpp_utils::ExtractType(lv2Table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture, byref(cjkIndexer), byref(catTable), byref(lv1Table), byref(lv2Indexer), byref(lv2Table));
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.FillCJKCore
void Mono::Globalization::Unicode::MSCompatUnicodeTable::FillCJKCore(::StringW culture, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> cjkIndexer, ByRef<uint8_t*> catTable, ByRef<uint8_t*> lv1Table, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> cjkLv2Indexer, ByRef<uint8_t*> lv2Table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::FillCJKCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "FillCJKCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(cjkIndexer), ::il2cpp_utils::ExtractType(catTable), ::il2cpp_utils::ExtractType(lv1Table), ::il2cpp_utils::ExtractType(cjkLv2Indexer), ::il2cpp_utils::ExtractType(lv2Table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture, byref(cjkIndexer), byref(catTable), byref(lv1Table), byref(cjkLv2Indexer), byref(lv2Table));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.MSCompatUnicodeTable/<>c
#include "Mono/Globalization/Unicode/MSCompatUnicodeTable_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: Mono.Globalization.Unicode.Level2Map
#include "Mono/Globalization/Unicode/Level2Map.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.MSCompatUnicodeTable/<>c <>9
::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c* Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.MSCompatUnicodeTable/<>c <>9
void Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_set_$$9(::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<Mono.Globalization.Unicode.Level2Map> <>9__17_0
::System::Comparison_1<::Mono::Globalization::Unicode::Level2Map*>* Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_get_$$9__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_get_$$9__17_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::Mono::Globalization::Unicode::Level2Map*>*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable/<>c", "<>9__17_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<Mono.Globalization.Unicode.Level2Map> <>9__17_0
void Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_set_$$9__17_0(::System::Comparison_1<::Mono::Globalization::Unicode::Level2Map*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_set_$$9__17_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable/<>c", "<>9__17_0", value)));
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable/<>c..cctor
void Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable/<>c.<BuildTailoringTables>b__17_0
int Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::$BuildTailoringTables$b__17_0(::Mono::Globalization::Unicode::Level2Map* a, ::Mono::Globalization::Unicode::Level2Map* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::<BuildTailoringTables>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BuildTailoringTables>b__17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.MSCompatUnicodeTableUtil
#include "Mono/Globalization/Unicode/MSCompatUnicodeTableUtil.hpp"
// Including type: Mono.Globalization.Unicode.CodePointIndexer
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Ignorable
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Ignorable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Ignorable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Ignorable"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Ignorable
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Ignorable(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Ignorable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Ignorable", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Category
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Category");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Category"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Category
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Category(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Category");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Category", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level1
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level1
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level1(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level2
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level2"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level2
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level2(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level3
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level3"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level3
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level3(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer CjkCHS
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_CjkCHS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_CjkCHS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "CjkCHS"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer CjkCHS
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_CjkCHS(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_CjkCHS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "CjkCHS", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Cjk
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Cjk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Cjk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Cjk"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Cjk
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Cjk(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Cjk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Cjk", value));
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTableUtil..cctor
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.NormalizationTableUtil
#include "Mono/Globalization/Unicode/NormalizationTableUtil.hpp"
// Including type: Mono.Globalization.Unicode.CodePointIndexer
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Prop
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::NormalizationTableUtil::_get_Prop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_get_Prop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "NormalizationTableUtil", "Prop"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Prop
void Mono::Globalization::Unicode::NormalizationTableUtil::_set_Prop(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_set_Prop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "NormalizationTableUtil", "Prop", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Map
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::NormalizationTableUtil::_get_Map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_get_Map");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "NormalizationTableUtil", "Map"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Map
void Mono::Globalization::Unicode::NormalizationTableUtil::_set_Map(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_set_Map");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "NormalizationTableUtil", "Map", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Combining
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::NormalizationTableUtil::_get_Combining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_get_Combining");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "NormalizationTableUtil", "Combining"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Combining
void Mono::Globalization::Unicode::NormalizationTableUtil::_set_Combining(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_set_Combining");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "NormalizationTableUtil", "Combining", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Composite
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::NormalizationTableUtil::_get_Composite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_get_Composite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "NormalizationTableUtil", "Composite"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Composite
void Mono::Globalization::Unicode::NormalizationTableUtil::_set_Composite(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_set_Composite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "NormalizationTableUtil", "Composite", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Helper
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::NormalizationTableUtil::_get_Helper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_get_Helper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "NormalizationTableUtil", "Helper"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Helper
void Mono::Globalization::Unicode::NormalizationTableUtil::_set_Helper(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_set_Helper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "NormalizationTableUtil", "Helper", value));
}
// Autogenerated method: Mono.Globalization.Unicode.NormalizationTableUtil..cctor
void Mono::Globalization::Unicode::NormalizationTableUtil::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "NormalizationTableUtil", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.NormalizationTableUtil.PropIdx
int Mono::Globalization::Unicode::NormalizationTableUtil::PropIdx(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::PropIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "NormalizationTableUtil", "PropIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.NormalizationTableUtil.MapIdx
int Mono::Globalization::Unicode::NormalizationTableUtil::MapIdx(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::MapIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "NormalizationTableUtil", "MapIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.SimpleCollator
#include "Mono/Globalization/Unicode/SimpleCollator.hpp"
// Including type: Mono.Globalization.Unicode.SimpleCollator/Context
#include "Mono/Globalization/Unicode/SimpleCollator_Context.hpp"
// Including type: Mono.Globalization.Unicode.SimpleCollator/PreviousInfo
#include "Mono/Globalization/Unicode/SimpleCollator_PreviousInfo.hpp"
// Including type: Mono.Globalization.Unicode.SimpleCollator/Escape
#include "Mono/Globalization/Unicode/SimpleCollator_Escape.hpp"
// Including type: Mono.Globalization.Unicode.SimpleCollator/ExtenderType
#include "Mono/Globalization/Unicode/SimpleCollator_ExtenderType.hpp"
// Including type: System.Globalization.TextInfo
#include "System/Globalization/TextInfo.hpp"
// Including type: Mono.Globalization.Unicode.CodePointIndexer
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
// Including type: Mono.Globalization.Unicode.Contraction
#include "Mono/Globalization/Unicode/Contraction.hpp"
// Including type: Mono.Globalization.Unicode.Level2Map
#include "Mono/Globalization/Unicode/Level2Map.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.CompareOptions
#include "System/Globalization/CompareOptions.hpp"
// Including type: System.Globalization.SortKey
#include "System/Globalization/SortKey.hpp"
// Including type: Mono.Globalization.Unicode.SortKeyBuffer
#include "Mono/Globalization/Unicode/SortKeyBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Mono.Globalization.Unicode.SimpleCollator invariant
::Mono::Globalization::Unicode::SimpleCollator* Mono::Globalization::Unicode::SimpleCollator::_get_invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::_get_invariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::SimpleCollator*>("Mono.Globalization.Unicode", "SimpleCollator", "invariant"));
}
// Autogenerated static field setter
// Set static field: static private Mono.Globalization.Unicode.SimpleCollator invariant
void Mono::Globalization::Unicode::SimpleCollator::_set_invariant(::Mono::Globalization::Unicode::SimpleCollator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::_set_invariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator", "invariant", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Globalization.TextInfo textInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::TextInfo*& Mono::Globalization::Unicode::SimpleCollator::dyn_textInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_textInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::TextInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Globalization.Unicode.CodePointIndexer cjkIndexer
[[deprecated("Use field access instead!")]] ::Mono::Globalization::Unicode::CodePointIndexer*& Mono::Globalization::Unicode::SimpleCollator::dyn_cjkIndexer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_cjkIndexer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cjkIndexer"))->offset;
  return *reinterpret_cast<::Mono::Globalization::Unicode::CodePointIndexer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Globalization.Unicode.Contraction[] contractions
[[deprecated("Use field access instead!")]] ::ArrayW<::Mono::Globalization::Unicode::Contraction*>& Mono::Globalization::Unicode::SimpleCollator::dyn_contractions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_contractions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contractions"))->offset;
  return *reinterpret_cast<::ArrayW<::Mono::Globalization::Unicode::Contraction*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Globalization.Unicode.Level2Map[] level2Maps
[[deprecated("Use field access instead!")]] ::ArrayW<::Mono::Globalization::Unicode::Level2Map*>& Mono::Globalization::Unicode::SimpleCollator::dyn_level2Maps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_level2Maps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "level2Maps"))->offset;
  return *reinterpret_cast<::ArrayW<::Mono::Globalization::Unicode::Level2Map*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] unsafeFlags
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SimpleCollator::dyn_unsafeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_unsafeFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unsafeFlags"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte* cjkCatTable
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::dyn_cjkCatTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_cjkCatTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cjkCatTable"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte* cjkLv1Table
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::dyn_cjkLv1Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_cjkLv1Table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cjkLv1Table"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte* cjkLv2Table
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::dyn_cjkLv2Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_cjkLv2Table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cjkLv2Table"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Globalization.Unicode.CodePointIndexer cjkLv2Indexer
[[deprecated("Use field access instead!")]] ::Mono::Globalization::Unicode::CodePointIndexer*& Mono::Globalization::Unicode::SimpleCollator::dyn_cjkLv2Indexer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_cjkLv2Indexer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cjkLv2Indexer"))->offset;
  return *reinterpret_cast<::Mono::Globalization::Unicode::CodePointIndexer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 lcid
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SimpleCollator::dyn_lcid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_lcid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lcid"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean frenchSort
[[deprecated("Use field access instead!")]] bool& Mono::Globalization::Unicode::SimpleCollator::dyn_frenchSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_frenchSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frenchSort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.SetCJKTable
void Mono::Globalization::Unicode::SimpleCollator::SetCJKTable(::System::Globalization::CultureInfo* culture, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> cjkIndexer, ByRef<uint8_t*> catTable, ByRef<uint8_t*> lv1Table, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> lv2Indexer, ByRef<uint8_t*> lv2Table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::SetCJKTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCJKTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(cjkIndexer), ::il2cpp_utils::ExtractType(catTable), ::il2cpp_utils::ExtractType(lv1Table), ::il2cpp_utils::ExtractType(lv2Indexer), ::il2cpp_utils::ExtractType(lv2Table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, culture, byref(cjkIndexer), byref(catTable), byref(lv1Table), byref(lv2Indexer), byref(lv2Table));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetNeutralCulture
::System::Globalization::CultureInfo* Mono::Globalization::Unicode::SimpleCollator::GetNeutralCulture(::System::Globalization::CultureInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetNeutralCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "SimpleCollator", "GetNeutralCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, info);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.Category
uint8_t Mono::Globalization::Unicode::SimpleCollator::Category(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Category");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Category", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.Level1
uint8_t Mono::Globalization::Unicode::SimpleCollator::Level1(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Level1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Level1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.Level2
uint8_t Mono::Globalization::Unicode::SimpleCollator::Level2(int cp, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Level2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Level2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp), ::il2cpp_utils::ExtractType(ext)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, cp, ext);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsHalfKana
bool Mono::Globalization::Unicode::SimpleCollator::IsHalfKana(int cp, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IsHalfKana");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "SimpleCollator", "IsHalfKana", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetContraction
::Mono::Globalization::Unicode::Contraction* Mono::Globalization::Unicode::SimpleCollator::GetContraction(::StringW s, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetContraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Globalization::Unicode::Contraction*, false>(this, ___internal__method, s, start, end);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetContraction
::Mono::Globalization::Unicode::Contraction* Mono::Globalization::Unicode::SimpleCollator::GetContraction(::StringW s, int start, int end, ::ArrayW<::Mono::Globalization::Unicode::Contraction*> clist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetContraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(clist)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Globalization::Unicode::Contraction*, false>(this, ___internal__method, s, start, end, clist);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetTailContraction
::Mono::Globalization::Unicode::Contraction* Mono::Globalization::Unicode::SimpleCollator::GetTailContraction(::StringW s, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetTailContraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTailContraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Globalization::Unicode::Contraction*, false>(this, ___internal__method, s, start, end);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetTailContraction
::Mono::Globalization::Unicode::Contraction* Mono::Globalization::Unicode::SimpleCollator::GetTailContraction(::StringW s, int start, int end, ::ArrayW<::Mono::Globalization::Unicode::Contraction*> clist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetTailContraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTailContraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(clist)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Globalization::Unicode::Contraction*, false>(this, ___internal__method, s, start, end, clist);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.FilterOptions
int Mono::Globalization::Unicode::SimpleCollator::FilterOptions(int i, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::FilterOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetExtenderType
::Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::GetExtenderType(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetExtenderType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtenderType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Globalization::Unicode::SimpleCollator::ExtenderType, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.ToDashTypeValue
uint8_t Mono::Globalization::Unicode::SimpleCollator::ToDashTypeValue(::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ToDashTypeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "SimpleCollator", "ToDashTypeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ext), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ext, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.FilterExtender
int Mono::Globalization::Unicode::SimpleCollator::FilterExtender(int i, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::FilterExtender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterExtender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(ext), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i, ext, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsIgnorable
bool Mono::Globalization::Unicode::SimpleCollator::IsIgnorable(int i, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IsIgnorable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "SimpleCollator", "IsIgnorable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsSafe
bool Mono::Globalization::Unicode::SimpleCollator::IsSafe(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IsSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetSortKey
::System::Globalization::SortKey* Mono::Globalization::Unicode::SimpleCollator::GetSortKey(::StringW s, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetSortKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Globalization::Unicode::SimpleCollator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::SortKey*, false>(this, ___internal__method, s, options);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetSortKey
::System::Globalization::SortKey* Mono::Globalization::Unicode::SimpleCollator::GetSortKey(::StringW s, int start, int length, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetSortKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSortKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::SortKey*, false>(this, ___internal__method, s, start, length, options);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetSortKey
void Mono::Globalization::Unicode::SimpleCollator::GetSortKey(::StringW s, int start, int end, ::Mono::Globalization::Unicode::SortKeyBuffer* buf, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetSortKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSortKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(opt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, start, end, buf, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.FillSortKeyRaw
void Mono::Globalization::Unicode::SimpleCollator::FillSortKeyRaw(int i, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, ::Mono::Globalization::Unicode::SortKeyBuffer* buf, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::FillSortKeyRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillSortKeyRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(ext), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(opt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, ext, buf, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.FillSurrogateSortKeyRaw
void Mono::Globalization::Unicode::SimpleCollator::FillSurrogateSortKeyRaw(int i, ::Mono::Globalization::Unicode::SortKeyBuffer* buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::FillSurrogateSortKeyRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillSurrogateSortKeyRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(buf)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, buf);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.System.Globalization.ISimpleCollator.Compare
int Mono::Globalization::Unicode::SimpleCollator::System_Globalization_ISimpleCollator_Compare(::StringW s1, int idx1, int len1, ::StringW s2, int idx2, int len2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::System.Globalization.ISimpleCollator.Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Globalization::Unicode::SimpleCollator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s1, idx1, len1, s2, idx2, len2, options);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.Compare
int Mono::Globalization::Unicode::SimpleCollator::Compare(::StringW s1, int idx1, int len1, ::StringW s2, int idx2, int len2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(idx1), ::il2cpp_utils::ExtractType(len1), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(idx2), ::il2cpp_utils::ExtractType(len2), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s1, idx1, len1, s2, idx2, len2, options);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.ClearBuffer
void Mono::Globalization::Unicode::SimpleCollator::ClearBuffer(uint8_t* buffer, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ClearBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, size);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.CompareInternal
int Mono::Globalization::Unicode::SimpleCollator::CompareInternal(::StringW s1, int idx1, int len1, ::StringW s2, int idx2, int len2, ByRef<bool> targetConsumed, ByRef<bool> sourceConsumed, bool skipHeadingExtenders, bool immediateBreakup, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::CompareInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(idx1), ::il2cpp_utils::ExtractType(len1), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(idx2), ::il2cpp_utils::ExtractType(len2), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractType(skipHeadingExtenders), ::il2cpp_utils::ExtractType(immediateBreakup), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s1, idx1, len1, s2, idx2, len2, byref(targetConsumed), byref(sourceConsumed), skipHeadingExtenders, immediateBreakup, byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.CompareFlagPair
int Mono::Globalization::Unicode::SimpleCollator::CompareFlagPair(bool b1, bool b2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::CompareFlagPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareFlagPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b1), ::il2cpp_utils::ExtractType(b2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, b1, b2);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsPrefix
bool Mono::Globalization::Unicode::SimpleCollator::IsPrefix(::StringW src, ::StringW target, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IsPrefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Globalization::Unicode::SimpleCollator*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, src, target, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsPrefix
bool Mono::Globalization::Unicode::SimpleCollator::IsPrefix(::StringW s, ::StringW target, int start, int length, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IsPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, target, start, length, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsPrefix
bool Mono::Globalization::Unicode::SimpleCollator::IsPrefix(::StringW s, ::StringW target, int start, int length, bool skipHeadingExtenders, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IsPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(skipHeadingExtenders), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, target, start, length, skipHeadingExtenders, byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsSuffix
bool Mono::Globalization::Unicode::SimpleCollator::IsSuffix(::StringW src, ::StringW target, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IsSuffix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Globalization::Unicode::SimpleCollator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, src, target, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsSuffix
bool Mono::Globalization::Unicode::SimpleCollator::IsSuffix(::StringW s, ::StringW target, int start, int length, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IsSuffix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSuffix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, target, start, length, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.QuickIndexOf
int Mono::Globalization::Unicode::SimpleCollator::QuickIndexOf(::StringW s, ::StringW target, int start, int length, ByRef<bool> testWasUnable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::QuickIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QuickIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length, byref(testWasUnable));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IndexOf
int Mono::Globalization::Unicode::SimpleCollator::IndexOf(::StringW s, ::StringW target, int start, int length, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Globalization::Unicode::SimpleCollator*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IndexOfOrdinal
int Mono::Globalization::Unicode::SimpleCollator::IndexOfOrdinal(::StringW s, ::StringW target, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IndexOfOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IndexOfOrdinal
int Mono::Globalization::Unicode::SimpleCollator::IndexOfOrdinal(::StringW s, ::Il2CppChar target, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IndexOfOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IndexOfSortKey
int Mono::Globalization::Unicode::SimpleCollator::IndexOfSortKey(::StringW s, int start, int length, uint8_t* sortkey, ::Il2CppChar target, int ti, bool noLv4, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IndexOfSortKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfSortKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(sortkey), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(ti), ::il2cpp_utils::ExtractType(noLv4), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, start, length, sortkey, target, ti, noLv4, byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IndexOf
int Mono::Globalization::Unicode::SimpleCollator::IndexOf(::StringW s, ::StringW target, int start, int length, uint8_t* targetSortKey, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(targetSortKey), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length, targetSortKey, byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.LastIndexOf
int Mono::Globalization::Unicode::SimpleCollator::LastIndexOf(::StringW s, ::StringW target, int start, int length, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::LastIndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Globalization::Unicode::SimpleCollator*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.LastIndexOfOrdinal
int Mono::Globalization::Unicode::SimpleCollator::LastIndexOfOrdinal(::StringW s, ::StringW target, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::LastIndexOfOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.LastIndexOfSortKey
int Mono::Globalization::Unicode::SimpleCollator::LastIndexOfSortKey(::StringW s, int start, int orgStart, int length, uint8_t* sortkey, int ti, bool noLv4, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::LastIndexOfSortKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfSortKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(orgStart), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(sortkey), ::il2cpp_utils::ExtractType(ti), ::il2cpp_utils::ExtractType(noLv4), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, start, orgStart, length, sortkey, ti, noLv4, byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.LastIndexOf
int Mono::Globalization::Unicode::SimpleCollator::LastIndexOf(::StringW s, ::StringW target, int start, int length, uint8_t* targetSortKey, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(targetSortKey), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length, targetSortKey, byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.MatchesForward
bool Mono::Globalization::Unicode::SimpleCollator::MatchesForward(::StringW s, ByRef<int> idx, int end, int ti, uint8_t* sortkey, bool noLv4, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::MatchesForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchesForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(ti), ::il2cpp_utils::ExtractType(sortkey), ::il2cpp_utils::ExtractType(noLv4), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, byref(idx), end, ti, sortkey, noLv4, byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.MatchesForwardCore
bool Mono::Globalization::Unicode::SimpleCollator::MatchesForwardCore(::StringW s, ByRef<int> idx, int end, int ti, uint8_t* sortkey, bool noLv4, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, ByRef<::Mono::Globalization::Unicode::Contraction*> ct, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::MatchesForwardCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchesForwardCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(ti), ::il2cpp_utils::ExtractType(sortkey), ::il2cpp_utils::ExtractType(noLv4), ::il2cpp_utils::ExtractType(ext), ::il2cpp_utils::ExtractType(ct), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, byref(idx), end, ti, sortkey, noLv4, ext, byref(ct), byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.MatchesPrimitive
bool Mono::Globalization::Unicode::SimpleCollator::MatchesPrimitive(::System::Globalization::CompareOptions opt, uint8_t* source, int si, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, uint8_t* target, int ti, bool noLv4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::MatchesPrimitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchesPrimitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opt), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(si), ::il2cpp_utils::ExtractType(ext), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(ti), ::il2cpp_utils::ExtractType(noLv4)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opt, source, si, ext, target, ti, noLv4);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.MatchesBackward
bool Mono::Globalization::Unicode::SimpleCollator::MatchesBackward(::StringW s, ByRef<int> idx, int end, int orgStart, int ti, uint8_t* sortkey, bool noLv4, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::MatchesBackward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchesBackward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(orgStart), ::il2cpp_utils::ExtractType(ti), ::il2cpp_utils::ExtractType(sortkey), ::il2cpp_utils::ExtractType(noLv4), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, byref(idx), end, orgStart, ti, sortkey, noLv4, byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.MatchesBackwardCore
bool Mono::Globalization::Unicode::SimpleCollator::MatchesBackwardCore(::StringW s, ByRef<int> idx, int end, int orgStart, int ti, uint8_t* sortkey, bool noLv4, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, ByRef<::Mono::Globalization::Unicode::Contraction*> ct, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::MatchesBackwardCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchesBackwardCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(orgStart), ::il2cpp_utils::ExtractType(ti), ::il2cpp_utils::ExtractType(sortkey), ::il2cpp_utils::ExtractType(noLv4), ::il2cpp_utils::ExtractType(ext), ::il2cpp_utils::ExtractType(ct), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, byref(idx), end, orgStart, ti, sortkey, noLv4, ext, byref(ct), byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator..cctor
void Mono::Globalization::Unicode::SimpleCollator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "SimpleCollator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.SimpleCollator/Context
#include "Mono/Globalization/Unicode/SimpleCollator_Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Globalization.CompareOptions Option
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareOptions& Mono::Globalization::Unicode::SimpleCollator::Context::dyn_Option() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Context::dyn_Option");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Option"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte* NeverMatchFlags
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::Context::dyn_NeverMatchFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Context::dyn_NeverMatchFlags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NeverMatchFlags"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte* AlwaysMatchFlags
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::Context::dyn_AlwaysMatchFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Context::dyn_AlwaysMatchFlags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AlwaysMatchFlags"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte* Buffer1
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::Context::dyn_Buffer1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Context::dyn_Buffer1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buffer1"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte* Buffer2
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::Context::dyn_Buffer2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Context::dyn_Buffer2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buffer2"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PrevCode
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SimpleCollator::Context::dyn_PrevCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Context::dyn_PrevCode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrevCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte* PrevSortKey
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::Context::dyn_PrevSortKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Context::dyn_PrevSortKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrevSortKey"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator/Context..ctor
Mono::Globalization::Unicode::SimpleCollator::Context::Context(::System::Globalization::CompareOptions opt, uint8_t* alwaysMatchFlags, uint8_t* neverMatchFlags, uint8_t* buffer1, uint8_t* buffer2, uint8_t* prev1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Context::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opt), ::il2cpp_utils::ExtractType(alwaysMatchFlags), ::il2cpp_utils::ExtractType(neverMatchFlags), ::il2cpp_utils::ExtractType(buffer1), ::il2cpp_utils::ExtractType(buffer2), ::il2cpp_utils::ExtractType(prev1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, opt, alwaysMatchFlags, neverMatchFlags, buffer1, buffer2, prev1);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.SimpleCollator/PreviousInfo
#include "Mono/Globalization/Unicode/SimpleCollator_PreviousInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Code
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SimpleCollator::PreviousInfo::dyn_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::PreviousInfo::dyn_Code");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Code"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte* SortKey
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::PreviousInfo::dyn_SortKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::PreviousInfo::dyn_SortKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SortKey"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator/PreviousInfo..ctor
Mono::Globalization::Unicode::SimpleCollator::PreviousInfo::PreviousInfo(bool dummy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::PreviousInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dummy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dummy);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.SimpleCollator/ExtenderType
#include "Mono/Globalization/Unicode/SimpleCollator_ExtenderType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType None
::Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::SimpleCollator::ExtenderType>("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType None
void Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_None(::Mono::Globalization::Unicode::SimpleCollator::ExtenderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType Simple
::Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Simple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::SimpleCollator::ExtenderType>("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType Simple
void Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Simple(::Mono::Globalization::Unicode::SimpleCollator::ExtenderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Simple", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType Voiced
::Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Voiced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Voiced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::SimpleCollator::ExtenderType>("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Voiced"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType Voiced
void Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Voiced(::Mono::Globalization::Unicode::SimpleCollator::ExtenderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Voiced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Voiced", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType Conditional
::Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Conditional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Conditional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::SimpleCollator::ExtenderType>("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Conditional"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType Conditional
void Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Conditional(::Mono::Globalization::Unicode::SimpleCollator::ExtenderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Conditional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Conditional", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType Buggy
::Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Buggy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Buggy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::SimpleCollator::ExtenderType>("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Buggy"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Globalization.Unicode.SimpleCollator/ExtenderType Buggy
void Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Buggy(::Mono::Globalization::Unicode::SimpleCollator::ExtenderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Buggy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Buggy", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SimpleCollator::ExtenderType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.SortKeyBuffer
#include "Mono/Globalization/Unicode/SortKeyBuffer.hpp"
// Including type: System.Globalization.SortKey
#include "System/Globalization/SortKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l1b
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l1b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l1b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l1b"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l2b
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l2b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l2b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l2b"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l3b
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l3b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l3b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l3b"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l4sb
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4sb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4sb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4sb"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l4tb
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4tb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4tb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4tb"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l4kb
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4kb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4kb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4kb"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l4wb
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4wb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4wb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4wb"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l5b
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l5b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l5b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l5b"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String source
[[deprecated("Use field access instead!")]] ::StringW& Mono::Globalization::Unicode::SortKeyBuffer::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l1
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l2
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l3
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l4s
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4s"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l4t
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4t"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l4k
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4k() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4k");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4k"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l4w
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4w");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4w"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l5
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l5"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lcid
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_lcid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_lcid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lcid"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareOptions options
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareOptions& Mono::Globalization::Unicode::SortKeyBuffer::dyn_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "options"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean processLevel2
[[deprecated("Use field access instead!")]] bool& Mono::Globalization::Unicode::SortKeyBuffer::dyn_processLevel2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_processLevel2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "processLevel2"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean frenchSort
[[deprecated("Use field access instead!")]] bool& Mono::Globalization::Unicode::SortKeyBuffer::dyn_frenchSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_frenchSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frenchSort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean frenchSorted
[[deprecated("Use field access instead!")]] bool& Mono::Globalization::Unicode::SortKeyBuffer::dyn_frenchSorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_frenchSorted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frenchSorted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.Reset
void Mono::Globalization::Unicode::SortKeyBuffer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.Initialize
void Mono::Globalization::Unicode::SortKeyBuffer::Initialize(::System::Globalization::CompareOptions options, int lcid, ::StringW s, bool frenchSort) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(lcid), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(frenchSort)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, options, lcid, s, frenchSort);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendCJKExtension
void Mono::Globalization::Unicode::SortKeyBuffer::AppendCJKExtension(uint8_t lv1msb, uint8_t lv1lsb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::AppendCJKExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendCJKExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lv1msb), ::il2cpp_utils::ExtractType(lv1lsb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lv1msb, lv1lsb);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendKana
void Mono::Globalization::Unicode::SortKeyBuffer::AppendKana(uint8_t category, uint8_t lv1, uint8_t lv2, uint8_t lv3, bool isSmallKana, uint8_t markType, bool isKatakana, bool isHalfWidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::AppendKana");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendKana", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(lv1), ::il2cpp_utils::ExtractType(lv2), ::il2cpp_utils::ExtractType(lv3), ::il2cpp_utils::ExtractType(isSmallKana), ::il2cpp_utils::ExtractType(markType), ::il2cpp_utils::ExtractType(isKatakana), ::il2cpp_utils::ExtractType(isHalfWidth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, category, lv1, lv2, lv3, isSmallKana, markType, isKatakana, isHalfWidth);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendNormal
void Mono::Globalization::Unicode::SortKeyBuffer::AppendNormal(uint8_t category, uint8_t lv1, uint8_t lv2, uint8_t lv3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::AppendNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(lv1), ::il2cpp_utils::ExtractType(lv2), ::il2cpp_utils::ExtractType(lv3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, category, lv1, lv2, lv3);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendLevel5
void Mono::Globalization::Unicode::SortKeyBuffer::AppendLevel5(uint8_t category, uint8_t lv1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::AppendLevel5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendLevel5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(lv1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, category, lv1);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendBufferPrimitive
void Mono::Globalization::Unicode::SortKeyBuffer::AppendBufferPrimitive(uint8_t value, ByRef<::ArrayW<uint8_t>> buf, ByRef<int> bidx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::AppendBufferPrimitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendBufferPrimitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(bidx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, byref(buf), byref(bidx));
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.GetResultAndReset
::System::Globalization::SortKey* Mono::Globalization::Unicode::SortKeyBuffer::GetResultAndReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::GetResultAndReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResultAndReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::SortKey*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.GetOptimizedLength
int Mono::Globalization::Unicode::SortKeyBuffer::GetOptimizedLength(::ArrayW<uint8_t> data, int len, uint8_t defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::GetOptimizedLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOptimizedLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, data, len, defaultValue);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.GetResult
::System::Globalization::SortKey* Mono::Globalization::Unicode::SortKeyBuffer::GetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::SortKey*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1_.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte m_nTag
[[deprecated("Use field access instead!")]] uint8_t& Mono::Security::ASN1_::dyn_m_nTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::dyn_m_nTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nTag"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_aValue
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::ASN1_::dyn_m_aValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::dyn_m_aValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_aValue"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList elist
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& Mono::Security::ASN1_::dyn_elist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::dyn_elist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elist"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.ASN1.get_Count
int Mono::Security::ASN1_::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.get_Value
::ArrayW<uint8_t> Mono::Security::ASN1_::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.Add
::Mono::Security::ASN1_* Mono::Security::ASN1_::Add(::Mono::Security::ASN1_* asn1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1_*, false>(this, ___internal__method, asn1);
}
// Autogenerated method: Mono.Security.ASN1.GetBytes
::ArrayW<uint8_t> Mono::Security::ASN1_::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::ASN1_*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.Decode
void Mono::Security::ASN1_::Decode(::ArrayW<uint8_t> asn1, ByRef<int> anPos, int anLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1), ::il2cpp_utils::ExtractType(anPos), ::il2cpp_utils::ExtractType(anLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asn1, byref(anPos), anLength);
}
// Autogenerated method: Mono.Security.ASN1.DecodeTLV
void Mono::Security::ASN1_::DecodeTLV(::ArrayW<uint8_t> asn1, ByRef<int> pos, ByRef<uint8_t> tag, ByRef<int> length, ByRef<::ArrayW<uint8_t>> content) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::DecodeTLV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeTLV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractIndependentType<uint8_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asn1, byref(pos), byref(tag), byref(length), byref(content));
}
// Autogenerated method: Mono.Security.ASN1.ToString
::StringW Mono::Security::ASN1_::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.BitConverterLE
#include "Mono/Security/BitConverterLE_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.BitConverterLE.GetUIntBytes
::ArrayW<uint8_t> Mono::Security::BitConverterLE_::GetUIntBytes(uint8_t* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::GetUIntBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetUIntBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: Mono.Security.BitConverterLE.GetULongBytes
::ArrayW<uint8_t> Mono::Security::BitConverterLE_::GetULongBytes(uint8_t* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::GetULongBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetULongBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: Mono.Security.BitConverterLE.GetBytes
::ArrayW<uint8_t> Mono::Security::BitConverterLE_::GetBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Security.BitConverterLE.GetBytes
::ArrayW<uint8_t> Mono::Security::BitConverterLE_::GetBytes(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Security.BitConverterLE.GetBytes
::ArrayW<uint8_t> Mono::Security::BitConverterLE_::GetBytes(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Security.BitConverterLE.UIntFromBytes
void Mono::Security::BitConverterLE_::UIntFromBytes(uint8_t* dst, ::ArrayW<uint8_t> src, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::UIntFromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "UIntFromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(startIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dst, src, startIndex);
}
// Autogenerated method: Mono.Security.BitConverterLE.ULongFromBytes
void Mono::Security::BitConverterLE_::ULongFromBytes(uint8_t* dst, ::ArrayW<uint8_t> src, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::ULongFromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "ULongFromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(startIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dst, src, startIndex);
}
// Autogenerated method: Mono.Security.BitConverterLE.ToSingle
float Mono::Security::BitConverterLE_::ToSingle(::ArrayW<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: Mono.Security.BitConverterLE.ToDouble
double Mono::Security::BitConverterLE_::ToDouble(::ArrayW<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.CryptoConvert
#include "Mono/Security/Cryptography/CryptoConvert_.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.RSAParameters
#include "System/Security/Cryptography/RSAParameters.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.ToInt32LE
int Mono::Security::Cryptography::CryptoConvert_::ToInt32LE(::ArrayW<uint8_t> bytes, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::ToInt32LE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "ToInt32LE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, offset);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.ToUInt32LE
uint Mono::Security::Cryptography::CryptoConvert_::ToUInt32LE(::ArrayW<uint8_t> bytes, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::ToUInt32LE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "ToUInt32LE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, offset);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.GetBytesLE
::ArrayW<uint8_t> Mono::Security::Cryptography::CryptoConvert_::GetBytesLE(int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::GetBytesLE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "GetBytesLE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.Trim
::ArrayW<uint8_t> Mono::Security::Cryptography::CryptoConvert_::Trim(::ArrayW<uint8_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::Trim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "Trim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.FromCapiPrivateKeyBlob
::System::Security::Cryptography::RSA* Mono::Security::Cryptography::CryptoConvert_::FromCapiPrivateKeyBlob(::ArrayW<uint8_t> blob, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::FromCapiPrivateKeyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "FromCapiPrivateKeyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blob), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blob, offset);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.GetParametersFromCapiPrivateKeyBlob
::System::Security::Cryptography::RSAParameters Mono::Security::Cryptography::CryptoConvert_::GetParametersFromCapiPrivateKeyBlob(::ArrayW<uint8_t> blob, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::GetParametersFromCapiPrivateKeyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "GetParametersFromCapiPrivateKeyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blob), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSAParameters, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blob, offset);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.FromCapiPrivateKeyBlobDSA
::System::Security::Cryptography::DSA* Mono::Security::Cryptography::CryptoConvert_::FromCapiPrivateKeyBlobDSA(::ArrayW<uint8_t> blob, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::FromCapiPrivateKeyBlobDSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "FromCapiPrivateKeyBlobDSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blob), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blob, offset);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.ToCapiPrivateKeyBlob
::ArrayW<uint8_t> Mono::Security::Cryptography::CryptoConvert_::ToCapiPrivateKeyBlob(::System::Security::Cryptography::RSA* rsa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::ToCapiPrivateKeyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "ToCapiPrivateKeyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.ToCapiPrivateKeyBlob
::ArrayW<uint8_t> Mono::Security::Cryptography::CryptoConvert_::ToCapiPrivateKeyBlob(::System::Security::Cryptography::DSA* dsa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::ToCapiPrivateKeyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "ToCapiPrivateKeyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dsa)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dsa);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.FromCapiPublicKeyBlob
::System::Security::Cryptography::RSA* Mono::Security::Cryptography::CryptoConvert_::FromCapiPublicKeyBlob(::ArrayW<uint8_t> blob, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::FromCapiPublicKeyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "FromCapiPublicKeyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blob), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blob, offset);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.GetParametersFromCapiPublicKeyBlob
::System::Security::Cryptography::RSAParameters Mono::Security::Cryptography::CryptoConvert_::GetParametersFromCapiPublicKeyBlob(::ArrayW<uint8_t> blob, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::GetParametersFromCapiPublicKeyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "GetParametersFromCapiPublicKeyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blob), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSAParameters, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blob, offset);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.FromCapiPublicKeyBlobDSA
::System::Security::Cryptography::DSA* Mono::Security::Cryptography::CryptoConvert_::FromCapiPublicKeyBlobDSA(::ArrayW<uint8_t> blob, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::FromCapiPublicKeyBlobDSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "FromCapiPublicKeyBlobDSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blob), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blob, offset);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.ToCapiPublicKeyBlob
::ArrayW<uint8_t> Mono::Security::Cryptography::CryptoConvert_::ToCapiPublicKeyBlob(::System::Security::Cryptography::RSA* rsa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::ToCapiPublicKeyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "ToCapiPublicKeyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.ToCapiPublicKeyBlob
::ArrayW<uint8_t> Mono::Security::Cryptography::CryptoConvert_::ToCapiPublicKeyBlob(::System::Security::Cryptography::DSA* dsa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::ToCapiPublicKeyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "ToCapiPublicKeyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dsa)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dsa);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.FromCapiKeyBlob
::System::Security::Cryptography::RSA* Mono::Security::Cryptography::CryptoConvert_::FromCapiKeyBlob(::ArrayW<uint8_t> blob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::FromCapiKeyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "FromCapiKeyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blob)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blob);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.FromCapiKeyBlob
::System::Security::Cryptography::RSA* Mono::Security::Cryptography::CryptoConvert_::FromCapiKeyBlob(::ArrayW<uint8_t> blob, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::FromCapiKeyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "FromCapiKeyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blob), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blob, offset);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.FromCapiKeyBlobDSA
::System::Security::Cryptography::DSA* Mono::Security::Cryptography::CryptoConvert_::FromCapiKeyBlobDSA(::ArrayW<uint8_t> blob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::FromCapiKeyBlobDSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "FromCapiKeyBlobDSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blob)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blob);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.FromCapiKeyBlobDSA
::System::Security::Cryptography::DSA* Mono::Security::Cryptography::CryptoConvert_::FromCapiKeyBlobDSA(::ArrayW<uint8_t> blob, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert_::FromCapiKeyBlobDSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "FromCapiKeyBlobDSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blob), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blob, offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.KeyBuilder
#include "Mono/Security/Cryptography/KeyBuilder_.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator rng
::System::Security::Cryptography::RandomNumberGenerator* Mono::Security::Cryptography::KeyBuilder_::_get_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder_::_get_rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RandomNumberGenerator*>("Mono.Security.Cryptography", "KeyBuilder", "rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator rng
void Mono::Security::Cryptography::KeyBuilder_::_set_rng(::System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder_::_set_rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyBuilder", "rng", value));
}
// Autogenerated method: Mono.Security.Cryptography.KeyBuilder.get_Rng
::System::Security::Cryptography::RandomNumberGenerator* Mono::Security::Cryptography::KeyBuilder_::get_Rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder_::get_Rng");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyBuilder", "get_Rng", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyBuilder.Key
::ArrayW<uint8_t> Mono::Security::Cryptography::KeyBuilder_::Key(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder_::Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyBuilder", "Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: Mono.Security.Cryptography.KeyBuilder.IV
::ArrayW<uint8_t> Mono::Security::Cryptography::KeyBuilder_::IV(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder_::IV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyBuilder", "IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.KeyPairPersistence
#include "Mono/Security/Cryptography/KeyPairPersistence.hpp"
// Including type: System.Security.Cryptography.CspParameters
#include "System/Security/Cryptography/CspParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean _userPathExists
bool Mono::Security::Cryptography::KeyPairPersistence::_get__userPathExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_get__userPathExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Security.Cryptography", "KeyPairPersistence", "_userPathExists"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _userPathExists
void Mono::Security::Cryptography::KeyPairPersistence::_set__userPathExists(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_set__userPathExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "_userPathExists", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _userPath
::StringW Mono::Security::Cryptography::KeyPairPersistence::_get__userPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_get__userPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Mono.Security.Cryptography", "KeyPairPersistence", "_userPath"));
}
// Autogenerated static field setter
// Set static field: static private System.String _userPath
void Mono::Security::Cryptography::KeyPairPersistence::_set__userPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_set__userPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "_userPath", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _machinePathExists
bool Mono::Security::Cryptography::KeyPairPersistence::_get__machinePathExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_get__machinePathExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Security.Cryptography", "KeyPairPersistence", "_machinePathExists"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _machinePathExists
void Mono::Security::Cryptography::KeyPairPersistence::_set__machinePathExists(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_set__machinePathExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "_machinePathExists", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _machinePath
::StringW Mono::Security::Cryptography::KeyPairPersistence::_get__machinePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_get__machinePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Mono.Security.Cryptography", "KeyPairPersistence", "_machinePath"));
}
// Autogenerated static field setter
// Set static field: static private System.String _machinePath
void Mono::Security::Cryptography::KeyPairPersistence::_set__machinePath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_set__machinePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "_machinePath", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object lockobj
::Il2CppObject* Mono::Security::Cryptography::KeyPairPersistence::_get_lockobj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_get_lockobj");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono.Security.Cryptography", "KeyPairPersistence", "lockobj"));
}
// Autogenerated static field setter
// Set static field: static private System.Object lockobj
void Mono::Security::Cryptography::KeyPairPersistence::_set_lockobj(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_set_lockobj");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "lockobj", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.CspParameters _params
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::CspParameters*& Mono::Security::Cryptography::KeyPairPersistence::dyn__params() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::dyn__params");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_params"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::CspParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _keyvalue
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::Cryptography::KeyPairPersistence::dyn__keyvalue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::dyn__keyvalue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyvalue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _filename
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::Cryptography::KeyPairPersistence::dyn__filename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::dyn__filename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _container
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::Cryptography::KeyPairPersistence::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_Filename
::StringW Mono::Security::Cryptography::KeyPairPersistence::get_Filename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_Filename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Filename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_KeyValue
::StringW Mono::Security::Cryptography::KeyPairPersistence::get_KeyValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_KeyValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.set_KeyValue
void Mono::Security::Cryptography::KeyPairPersistence::set_KeyValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::set_KeyValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_Parameters
::System::Security::Cryptography::CspParameters* Mono::Security::Cryptography::KeyPairPersistence::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::CspParameters*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.Load
bool Mono::Security::Cryptography::KeyPairPersistence::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.Save
void Mono::Security::Cryptography::KeyPairPersistence::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.Remove
void Mono::Security::Cryptography::KeyPairPersistence::Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_UserPath
::StringW Mono::Security::Cryptography::KeyPairPersistence::get_UserPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_UserPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "get_UserPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_MachinePath
::StringW Mono::Security::Cryptography::KeyPairPersistence::get_MachinePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_MachinePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "get_MachinePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._CanSecure
bool Mono::Security::Cryptography::KeyPairPersistence::_CanSecure(::Il2CppChar* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_CanSecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_CanSecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, root);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._ProtectUser
bool Mono::Security::Cryptography::KeyPairPersistence::_ProtectUser(::Il2CppChar* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_ProtectUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_ProtectUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._ProtectMachine
bool Mono::Security::Cryptography::KeyPairPersistence::_ProtectMachine(::Il2CppChar* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_ProtectMachine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_ProtectMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._IsUserProtected
bool Mono::Security::Cryptography::KeyPairPersistence::_IsUserProtected(::Il2CppChar* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_IsUserProtected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_IsUserProtected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._IsMachineProtected
bool Mono::Security::Cryptography::KeyPairPersistence::_IsMachineProtected(::Il2CppChar* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_IsMachineProtected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_IsMachineProtected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.CanSecure
bool Mono::Security::Cryptography::KeyPairPersistence::CanSecure(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::CanSecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "CanSecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.ProtectUser
bool Mono::Security::Cryptography::KeyPairPersistence::ProtectUser(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::ProtectUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "ProtectUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.ProtectMachine
bool Mono::Security::Cryptography::KeyPairPersistence::ProtectMachine(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::ProtectMachine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "ProtectMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.IsUserProtected
bool Mono::Security::Cryptography::KeyPairPersistence::IsUserProtected(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::IsUserProtected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "IsUserProtected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.IsMachineProtected
bool Mono::Security::Cryptography::KeyPairPersistence::IsMachineProtected(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::IsMachineProtected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "IsMachineProtected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_CanChange
bool Mono::Security::Cryptography::KeyPairPersistence::get_CanChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_CanChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_UseDefaultKeyContainer
bool Mono::Security::Cryptography::KeyPairPersistence::get_UseDefaultKeyContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_UseDefaultKeyContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseDefaultKeyContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_UseMachineKeyStore
bool Mono::Security::Cryptography::KeyPairPersistence::get_UseMachineKeyStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_UseMachineKeyStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseMachineKeyStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_ContainerName
::StringW Mono::Security::Cryptography::KeyPairPersistence::get_ContainerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_ContainerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.Copy
::System::Security::Cryptography::CspParameters* Mono::Security::Cryptography::KeyPairPersistence::Copy(::System::Security::Cryptography::CspParameters* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::CspParameters*, false>(this, ___internal__method, p);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.FromXml
void Mono::Security::Cryptography::KeyPairPersistence::FromXml(::StringW xml) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::FromXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xml)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xml);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.ToXml
::StringW Mono::Security::Cryptography::KeyPairPersistence::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::ToXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence..cctor
void Mono::Security::Cryptography::KeyPairPersistence::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD2
#include "Mono/Security/Cryptography/MD2_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.MD2.Create
::Mono::Security::Cryptography::MD2_* Mono::Security::Cryptography::MD2_::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2_::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "MD2", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Cryptography::MD2_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD2Managed
#include "Mono/Security/Cryptography/MD2Managed_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] PI_SUBST
::ArrayW<uint8_t> Mono::Security::Cryptography::MD2Managed_::_get_PI_SUBST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::_get_PI_SUBST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "MD2Managed", "PI_SUBST"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] PI_SUBST
void Mono::Security::Cryptography::MD2Managed_::_set_PI_SUBST(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::_set_PI_SUBST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "MD2Managed", "PI_SUBST", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] state
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD2Managed_::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] checksum
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD2Managed_::dyn_checksum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::dyn_checksum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checksum"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD2Managed_::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& Mono::Security::Cryptography::MD2Managed_::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] x
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD2Managed_::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.Padding
::ArrayW<uint8_t> Mono::Security::Cryptography::MD2Managed_::Padding(int nLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::Padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, nLength);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.MD2Transform
void Mono::Security::Cryptography::MD2Managed_::MD2Transform(::ArrayW<uint8_t> state, ::ArrayW<uint8_t> checksum, ::ArrayW<uint8_t> block, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::MD2Transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MD2Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(checksum), ::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, checksum, block, index);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed..cctor
void Mono::Security::Cryptography::MD2Managed_::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "MD2Managed", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.Initialize
void Mono::Security::Cryptography::MD2Managed_::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.HashCore
void Mono::Security::Cryptography::MD2Managed_::HashCore(::ArrayW<uint8_t> array, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::HashCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, ibStart, cbSize);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.HashFinal
::ArrayW<uint8_t> Mono::Security::Cryptography::MD2Managed_::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::HashFinal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD4
#include "Mono/Security/Cryptography/MD4_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.MD4.Create
::Mono::Security::Cryptography::MD4_* Mono::Security::Cryptography::MD4_::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4_::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "MD4", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Cryptography::MD4_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD4Managed
#include "Mono/Security/Cryptography/MD4Managed_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] state
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Mono::Security::Cryptography::MD4Managed_::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD4Managed_::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] count
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Mono::Security::Cryptography::MD4Managed_::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] x
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Mono::Security::Cryptography::MD4Managed_::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] digest
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD4Managed_::dyn_digest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::dyn_digest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "digest"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Padding
::ArrayW<uint8_t> Mono::Security::Cryptography::MD4Managed_::Padding(int nLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::Padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, nLength);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.F
uint Mono::Security::Cryptography::MD4Managed_::F(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::F");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.G
uint Mono::Security::Cryptography::MD4Managed_::G(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.H
uint Mono::Security::Cryptography::MD4Managed_::H(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::H");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "H", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.ROL
uint Mono::Security::Cryptography::MD4Managed_::ROL(uint x, uint8_t n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::ROL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ROL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, x, n);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.FF
void Mono::Security::Cryptography::MD4Managed_::FF(ByRef<uint> a, uint b, uint c, uint d, uint x, uint8_t s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::FF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(a), b, c, d, x, s);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.GG
void Mono::Security::Cryptography::MD4Managed_::GG(ByRef<uint> a, uint b, uint c, uint d, uint x, uint8_t s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::GG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(a), b, c, d, x, s);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.HH
void Mono::Security::Cryptography::MD4Managed_::HH(ByRef<uint> a, uint b, uint c, uint d, uint x, uint8_t s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::HH");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HH", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(a), b, c, d, x, s);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Encode
void Mono::Security::Cryptography::MD4Managed_::Encode(::ArrayW<uint8_t> output, ::ArrayW<uint> input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output, input);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Decode
void Mono::Security::Cryptography::MD4Managed_::Decode(::ArrayW<uint> output, ::ArrayW<uint8_t> input, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output, input, index);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.MD4Transform
void Mono::Security::Cryptography::MD4Managed_::MD4Transform(::ArrayW<uint> state, ::ArrayW<uint8_t> block, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::MD4Transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MD4Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, block, index);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Initialize
void Mono::Security::Cryptography::MD4Managed_::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.HashCore
void Mono::Security::Cryptography::MD4Managed_::HashCore(::ArrayW<uint8_t> array, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::HashCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, ibStart, cbSize);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.HashFinal
::ArrayW<uint8_t> Mono::Security::Cryptography::MD4Managed_::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::HashFinal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.PKCS1
#include "Mono/Security/Cryptography/PKCS1_.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA1
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::_get_emptySHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::_get_emptySHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "PKCS1", "emptySHA1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA1
void Mono::Security::Cryptography::PKCS1_::_set_emptySHA1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::_set_emptySHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA256
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::_get_emptySHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::_get_emptySHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "PKCS1", "emptySHA256"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA256
void Mono::Security::Cryptography::PKCS1_::_set_emptySHA256(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::_set_emptySHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA256", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA384
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::_get_emptySHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::_get_emptySHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "PKCS1", "emptySHA384"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA384
void Mono::Security::Cryptography::PKCS1_::_set_emptySHA384(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::_set_emptySHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA384", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA512
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::_get_emptySHA512() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::_get_emptySHA512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "PKCS1", "emptySHA512"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA512
void Mono::Security::Cryptography::PKCS1_::_set_emptySHA512(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::_set_emptySHA512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA512", value));
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Compare
bool Mono::Security::Cryptography::PKCS1_::Compare(::ArrayW<uint8_t> array1, ::ArrayW<uint8_t> array2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array1), ::il2cpp_utils::ExtractType(array2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array1, array2);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.xor
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::xor_(::ArrayW<uint8_t> array1, ::ArrayW<uint8_t> array2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::xor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "xor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array1), ::il2cpp_utils::ExtractType(array2)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array1, array2);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.GetEmptyHash
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::GetEmptyHash(::System::Security::Cryptography::HashAlgorithm* hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::GetEmptyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "GetEmptyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.I2OSP
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::I2OSP(int x, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::I2OSP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "I2OSP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, size);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.I2OSP
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::I2OSP(::ArrayW<uint8_t> x, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::I2OSP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "I2OSP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, size);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.OS2IP
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::OS2IP(::ArrayW<uint8_t> x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::OS2IP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "OS2IP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.RSAEP
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::RSAEP(::System::Security::Cryptography::RSA* rsa, ::ArrayW<uint8_t> m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::RSAEP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "RSAEP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, m);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.RSADP
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::RSADP(::System::Security::Cryptography::RSA* rsa, ::ArrayW<uint8_t> c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::RSADP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "RSADP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, c);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.RSASP1
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::RSASP1(::System::Security::Cryptography::RSA* rsa, ::ArrayW<uint8_t> m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::RSASP1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "RSASP1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, m);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.RSAVP1
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::RSAVP1(::System::Security::Cryptography::RSA* rsa, ::ArrayW<uint8_t> s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::RSAVP1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "RSAVP1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, s);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Encrypt_OAEP
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::Encrypt_OAEP(::System::Security::Cryptography::RSA* rsa, ::System::Security::Cryptography::HashAlgorithm* hash, ::System::Security::Cryptography::RandomNumberGenerator* rng, ::ArrayW<uint8_t> M) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::Encrypt_OAEP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Encrypt_OAEP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(rng), ::il2cpp_utils::ExtractType(M)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, hash, rng, M);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Decrypt_OAEP
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::Decrypt_OAEP(::System::Security::Cryptography::RSA* rsa, ::System::Security::Cryptography::HashAlgorithm* hash, ::ArrayW<uint8_t> C) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::Decrypt_OAEP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Decrypt_OAEP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(C)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, hash, C);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Sign_v15
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::Sign_v15(::System::Security::Cryptography::RSA* rsa, ::System::Security::Cryptography::HashAlgorithm* hash, ::ArrayW<uint8_t> hashValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::Sign_v15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Sign_v15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(hashValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, hash, hashValue);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Sign_v15
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::Sign_v15(::System::Security::Cryptography::RSA* rsa, ::StringW hashName, ::ArrayW<uint8_t> hashValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::Sign_v15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Sign_v15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(hashName), ::il2cpp_utils::ExtractType(hashValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, hashName, hashValue);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Verify_v15
bool Mono::Security::Cryptography::PKCS1_::Verify_v15(::System::Security::Cryptography::RSA* rsa, ::System::Security::Cryptography::HashAlgorithm* hash, ::ArrayW<uint8_t> hashValue, ::ArrayW<uint8_t> signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::Verify_v15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Verify_v15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(hashValue), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, hash, hashValue, signature);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Verify_v15
bool Mono::Security::Cryptography::PKCS1_::Verify_v15(::System::Security::Cryptography::RSA* rsa, ::StringW hashName, ::ArrayW<uint8_t> hashValue, ::ArrayW<uint8_t> signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::Verify_v15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Verify_v15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(hashName), ::il2cpp_utils::ExtractType(hashValue), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, hashName, hashValue, signature);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Verify_v15
bool Mono::Security::Cryptography::PKCS1_::Verify_v15(::System::Security::Cryptography::RSA* rsa, ::System::Security::Cryptography::HashAlgorithm* hash, ::ArrayW<uint8_t> hashValue, ::ArrayW<uint8_t> signature, bool tryNonStandardEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::Verify_v15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Verify_v15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(hashValue), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(tryNonStandardEncoding)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, hash, hashValue, signature, tryNonStandardEncoding);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Encode_v15
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::Encode_v15(::System::Security::Cryptography::HashAlgorithm* hash, ::ArrayW<uint8_t> hashValue, int emLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::Encode_v15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Encode_v15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(hashValue), ::il2cpp_utils::ExtractType(emLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, hashValue, emLength);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.MGF1
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::MGF1(::System::Security::Cryptography::HashAlgorithm* hash, ::ArrayW<uint8_t> mgfSeed, int maskLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::MGF1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "MGF1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(mgfSeed), ::il2cpp_utils::ExtractType(maskLen)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, mgfSeed, maskLen);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.CreateFromName
::System::Security::Cryptography::HashAlgorithm* Mono::Security::Cryptography::PKCS1_::CreateFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::CreateFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "CreateFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1..cctor
void Mono::Security::Cryptography::PKCS1_::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.RSAManaged
#include "Mono/Security/Cryptography/RSAManaged_.hpp"
// Including type: Mono.Security.Cryptography.RSAManaged/KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/RSAManaged__KeyGeneratedEventHandler.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger_.hpp"
// Including type: System.Security.Cryptography.RSAParameters
#include "System/Security/Cryptography/RSAParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isCRTpossible
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::RSAManaged_::dyn_isCRTpossible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_isCRTpossible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isCRTpossible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean keyBlinding
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::RSAManaged_::dyn_keyBlinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_keyBlinding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyBlinding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean keypairGenerated
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::RSAManaged_::dyn_keypairGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_keypairGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keypairGenerated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::RSAManaged_::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger d
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::RSAManaged_::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger p
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::RSAManaged_::dyn_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_p");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger q
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::RSAManaged_::dyn_q() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_q");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "q"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger dp
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::RSAManaged_::dyn_dp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_dp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dp"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger dq
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::RSAManaged_::dyn_dq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_dq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dq"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger qInv
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::RSAManaged_::dyn_qInv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_qInv");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qInv"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger n
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::RSAManaged_::dyn_n() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_n");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "n"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger e
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::RSAManaged_::dyn_e() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_e");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "e"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Cryptography.RSAManaged/KeyGeneratedEventHandler KeyGenerated
[[deprecated("Use field access instead!")]] ::Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler*& Mono::Security::Cryptography::RSAManaged_::dyn_KeyGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_KeyGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyGenerated"))->offset;
  return *reinterpret_cast<::Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.GenerateKeyPair
void Mono::Security::Cryptography::RSAManaged_::GenerateKeyPair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::GenerateKeyPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKeyPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.get_PublicOnly
bool Mono::Security::Cryptography::RSAManaged_::get_PublicOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::get_PublicOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.add_KeyGenerated
void Mono::Security::Cryptography::RSAManaged_::add_KeyGenerated(::Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::add_KeyGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_KeyGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.remove_KeyGenerated
void Mono::Security::Cryptography::RSAManaged_::remove_KeyGenerated(::Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::remove_KeyGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_KeyGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.get_IsCrtPossible
bool Mono::Security::Cryptography::RSAManaged_::get_IsCrtPossible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::get_IsCrtPossible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCrtPossible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.GetPaddedValue
::ArrayW<uint8_t> Mono::Security::Cryptography::RSAManaged_::GetPaddedValue(::Mono::Math::BigInteger_* value, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::GetPaddedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, value, length);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.Finalize
void Mono::Security::Cryptography::RSAManaged_::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.get_KeySize
int Mono::Security::Cryptography::RSAManaged_::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::get_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.get_KeyExchangeAlgorithm
::StringW Mono::Security::Cryptography::RSAManaged_::get_KeyExchangeAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::get_KeyExchangeAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.get_SignatureAlgorithm
::StringW Mono::Security::Cryptography::RSAManaged_::get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::get_SignatureAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.DecryptValue
::ArrayW<uint8_t> Mono::Security::Cryptography::RSAManaged_::DecryptValue(::ArrayW<uint8_t> rgb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::DecryptValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgb);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.EncryptValue
::ArrayW<uint8_t> Mono::Security::Cryptography::RSAManaged_::EncryptValue(::ArrayW<uint8_t> rgb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::EncryptValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgb);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.ExportParameters
::System::Security::Cryptography::RSAParameters Mono::Security::Cryptography::RSAManaged_::ExportParameters(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::ExportParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSAParameters, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.ImportParameters
void Mono::Security::Cryptography::RSAManaged_::ImportParameters(::System::Security::Cryptography::RSAParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::ImportParameters");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.Dispose
void Mono::Security::Cryptography::RSAManaged_::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricAlgorithm*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.ToXmlString
::StringW Mono::Security::Cryptography::RSAManaged_::ToXmlString(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::ToXmlString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::RSA*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.RSAManaged/KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/RSAManaged__KeyGeneratedEventHandler.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.RSAManaged/KeyGeneratedEventHandler.Invoke
void Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler::Invoke(::Il2CppObject* sender, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
