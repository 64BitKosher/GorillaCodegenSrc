// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPAmbisonicsNative
#include "GlobalNamespace/ONSPAmbisonicsNative.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 numFOAChannels
int GlobalNamespace::ONSPAmbisonicsNative::_get_numFOAChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_get_numFOAChannels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPAmbisonicsNative", "numFOAChannels"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 numFOAChannels
void GlobalNamespace::ONSPAmbisonicsNative::_set_numFOAChannels(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_set_numFOAChannels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative", "numFOAChannels", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 paramAmbiStat
int GlobalNamespace::ONSPAmbisonicsNative::_get_paramAmbiStat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_get_paramAmbiStat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPAmbisonicsNative", "paramAmbiStat"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 paramAmbiStat
void GlobalNamespace::ONSPAmbisonicsNative::_set_paramAmbiStat(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_set_paramAmbiStat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative", "paramAmbiStat", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource source
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::ONSPAmbisonicsNative::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus currentStatus
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus& GlobalNamespace::ONSPAmbisonicsNative::dyn_currentStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::dyn_currentStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentStatus"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPAmbisonicsNative.OnEnable
void GlobalNamespace::ONSPAmbisonicsNative::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAmbisonicsNative.Update
void GlobalNamespace::ONSPAmbisonicsNative::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAmbisonicsNative..cctor
void GlobalNamespace::ONSPAmbisonicsNative::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPAmbisonicsNative", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus
#include "GlobalNamespace/ONSPAmbisonicsNative.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus Uninitialized
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_Uninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_Uninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "Uninitialized"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus Uninitialized
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_Uninitialized(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_Uninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "Uninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus NotEnabled
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_NotEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_NotEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "NotEnabled"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus NotEnabled
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_NotEnabled(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_NotEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "NotEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus Success
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "Success"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus Success
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_Success(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus StreamError
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_StreamError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_StreamError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "StreamError"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus StreamError
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_StreamError(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_StreamError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "StreamError", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus ProcessError
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_ProcessError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_ProcessError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "ProcessError"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus ProcessError
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_ProcessError(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_ProcessError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "ProcessError", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus MaxStatValue
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_MaxStatValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_MaxStatValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "MaxStatValue"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus MaxStatValue
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_MaxStatValue(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_MaxStatValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "MaxStatValue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPAudioSource
#include "GlobalNamespace/ONSPAudioSource.hpp"
// Including type: ONSPAudioSource/Parameters
#include "GlobalNamespace/ONSPAudioSource_Parameters.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strONSPS
::StringW GlobalNamespace::ONSPAudioSource::_get_strONSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::_get_strONSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPAudioSource", "strONSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strONSPS
void GlobalNamespace::ONSPAudioSource::_set_strONSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::_set_strONSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource", "strONSPS", value));
}
// Autogenerated static field getter
// Get static field: static private ONSPAudioSource RoomReflectionGizmoAS
::GlobalNamespace::ONSPAudioSource* GlobalNamespace::ONSPAudioSource::_get_RoomReflectionGizmoAS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::_get_RoomReflectionGizmoAS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource*>("", "ONSPAudioSource", "RoomReflectionGizmoAS"));
}
// Autogenerated static field setter
// Set static field: static private ONSPAudioSource RoomReflectionGizmoAS
void GlobalNamespace::ONSPAudioSource::_set_RoomReflectionGizmoAS(::GlobalNamespace::ONSPAudioSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::_set_RoomReflectionGizmoAS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource", "RoomReflectionGizmoAS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableSpatialization
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPAudioSource::dyn_enableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_enableSpatialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single gain
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPAudioSource::dyn_gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_gain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useInvSqr
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPAudioSource::dyn_useInvSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_useInvSqr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useInvSqr"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single near
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPAudioSource::dyn_near() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_near");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "near"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single far
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPAudioSource::dyn_far() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_far");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "far"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single volumetricRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPAudioSource::dyn_volumetricRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_volumetricRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumetricRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single reverbSend
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPAudioSource::dyn_reverbSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_reverbSend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverbSend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableRfl
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPAudioSource::dyn_enableRfl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_enableRfl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableRfl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPAudioSource.OnBeforeSceneLoadRuntimeMethod
void GlobalNamespace::ONSPAudioSource::OnBeforeSceneLoadRuntimeMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::OnBeforeSceneLoadRuntimeMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPAudioSource", "OnBeforeSceneLoadRuntimeMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPAudioSource.ONSP_GetGlobalRoomReflectionValues
void GlobalNamespace::ONSPAudioSource::ONSP_GetGlobalRoomReflectionValues(ByRef<bool> reflOn, ByRef<bool> reverbOn, ByRef<float> width, ByRef<float> height, ByRef<float> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::ONSP_GetGlobalRoomReflectionValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPAudioSource", "ONSP_GetGlobalRoomReflectionValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reflOn), ::il2cpp_utils::ExtractType(reverbOn), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(reflOn), byref(reverbOn), byref(width), byref(height), byref(length));
}
// Autogenerated method: ONSPAudioSource.get_EnableSpatialization
bool GlobalNamespace::ONSPAudioSource::get_EnableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_EnableSpatialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableSpatialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_EnableSpatialization
void GlobalNamespace::ONSPAudioSource::set_EnableSpatialization(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_EnableSpatialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableSpatialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_Gain
float GlobalNamespace::ONSPAudioSource::get_Gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_Gain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Gain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_Gain
void GlobalNamespace::ONSPAudioSource::set_Gain(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_Gain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Gain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_UseInvSqr
bool GlobalNamespace::ONSPAudioSource::get_UseInvSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_UseInvSqr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseInvSqr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_UseInvSqr
void GlobalNamespace::ONSPAudioSource::set_UseInvSqr(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_UseInvSqr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseInvSqr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_Near
float GlobalNamespace::ONSPAudioSource::get_Near() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_Near");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Near", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_Near
void GlobalNamespace::ONSPAudioSource::set_Near(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_Near");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Near", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_Far
float GlobalNamespace::ONSPAudioSource::get_Far() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_Far");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Far", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_Far
void GlobalNamespace::ONSPAudioSource::set_Far(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_Far");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Far", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_VolumetricRadius
float GlobalNamespace::ONSPAudioSource::get_VolumetricRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_VolumetricRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VolumetricRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_VolumetricRadius
void GlobalNamespace::ONSPAudioSource::set_VolumetricRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_VolumetricRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VolumetricRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_ReverbSend
float GlobalNamespace::ONSPAudioSource::get_ReverbSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_ReverbSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReverbSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_ReverbSend
void GlobalNamespace::ONSPAudioSource::set_ReverbSend(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_ReverbSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReverbSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_EnableRfl
bool GlobalNamespace::ONSPAudioSource::get_EnableRfl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_EnableRfl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableRfl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_EnableRfl
void GlobalNamespace::ONSPAudioSource::set_EnableRfl(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_EnableRfl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableRfl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.Awake
void GlobalNamespace::ONSPAudioSource::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.Start
void GlobalNamespace::ONSPAudioSource::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.Update
void GlobalNamespace::ONSPAudioSource::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.SetParameters
void GlobalNamespace::ONSPAudioSource::SetParameters(ByRef<::UnityEngine::AudioSource*> source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::SetParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(source));
}
// Autogenerated method: ONSPAudioSource.OnDrawGizmos
void GlobalNamespace::ONSPAudioSource::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.OnDestroy
void GlobalNamespace::ONSPAudioSource::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.OSP_SetGlobalVoiceLimit
int GlobalNamespace::ONSPAudioSource::OSP_SetGlobalVoiceLimit(int VoiceLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::OSP_SetGlobalVoiceLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPAudioSource", "OSP_SetGlobalVoiceLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(VoiceLimit)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, VoiceLimit);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPAudioSource/Parameters
#include "GlobalNamespace/ONSPAudioSource_Parameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_GAIN
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_GAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_GAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_GAIN"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_GAIN
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_GAIN(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_GAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_GAIN", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_USEINVSQR
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_USEINVSQR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_USEINVSQR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_USEINVSQR"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_USEINVSQR
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_USEINVSQR(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_USEINVSQR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_USEINVSQR", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_NEAR
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_NEAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_NEAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_NEAR"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_NEAR
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_NEAR(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_NEAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_NEAR", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_FAR
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_FAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_FAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_FAR"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_FAR
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_FAR(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_FAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_FAR", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_RADIUS
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_RADIUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_RADIUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_RADIUS"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_RADIUS
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_RADIUS(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_RADIUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_RADIUS", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_DISABLE_RFL
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_DISABLE_RFL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_DISABLE_RFL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_DISABLE_RFL"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_DISABLE_RFL
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_DISABLE_RFL(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_DISABLE_RFL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_DISABLE_RFL", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_AMBISTAT
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_AMBISTAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_AMBISTAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_AMBISTAT"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_AMBISTAT
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_AMBISTAT(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_AMBISTAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_AMBISTAT", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_READONLY_GLOBAL_RFL_ENABLED
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_READONLY_GLOBAL_RFL_ENABLED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_READONLY_GLOBAL_RFL_ENABLED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_READONLY_GLOBAL_RFL_ENABLED"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_READONLY_GLOBAL_RFL_ENABLED
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_READONLY_GLOBAL_RFL_ENABLED(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_READONLY_GLOBAL_RFL_ENABLED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_READONLY_GLOBAL_RFL_ENABLED", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_READONLY_NUM_VOICES
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_READONLY_NUM_VOICES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_READONLY_NUM_VOICES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_READONLY_NUM_VOICES"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_READONLY_NUM_VOICES
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_READONLY_NUM_VOICES(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_READONLY_NUM_VOICES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_READONLY_NUM_VOICES", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_SENDLEVEL
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_SENDLEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_SENDLEVEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_SENDLEVEL"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_SENDLEVEL
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_SENDLEVEL(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_SENDLEVEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_SENDLEVEL", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_NUM
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_NUM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_NUM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_NUM"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_NUM
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_NUM(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_NUM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_NUM", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPAudioSource::Parameters::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPProfiler
#include "GlobalNamespace/ONSPProfiler.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 DEFAULT_PORT
int GlobalNamespace::ONSPProfiler::_get_DEFAULT_PORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::_get_DEFAULT_PORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPProfiler", "DEFAULT_PORT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DEFAULT_PORT
void GlobalNamespace::ONSPProfiler::_set_DEFAULT_PORT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::_set_DEFAULT_PORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPProfiler", "DEFAULT_PORT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String strONSPS
::StringW GlobalNamespace::ONSPProfiler::_get_strONSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::_get_strONSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPProfiler", "strONSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strONSPS
void GlobalNamespace::ONSPProfiler::_set_strONSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::_set_strONSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPProfiler", "strONSPS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean profilerEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPProfiler::dyn_profilerEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::dyn_profilerEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "profilerEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 port
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPProfiler::dyn_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::dyn_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPProfiler.Start
void GlobalNamespace::ONSPProfiler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPProfiler.Update
void GlobalNamespace::ONSPProfiler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPProfiler.ONSP_SetProfilerEnabled
int GlobalNamespace::ONSPProfiler::ONSP_SetProfilerEnabled(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::ONSP_SetProfilerEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPProfiler", "ONSP_SetProfilerEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enabled);
}
// Autogenerated method: ONSPProfiler.ONSP_SetProfilerPort
int GlobalNamespace::ONSPProfiler::ONSP_SetProfilerPort(int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::ONSP_SetProfilerPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPProfiler", "ONSP_SetProfilerPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, port);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPPropagationGeometry
#include "GlobalNamespace/ONSPPropagationGeometry.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: ONSPPropagationMaterial
#include "GlobalNamespace/ONSPPropagationMaterial.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String GeometryAssetDirectory
::StringW GlobalNamespace::ONSPPropagationGeometry::_get_GeometryAssetDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_get_GeometryAssetDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagationGeometry", "GeometryAssetDirectory"));
}
// Autogenerated static field setter
// Set static field: static public System.String GeometryAssetDirectory
void GlobalNamespace::ONSPPropagationGeometry::_set_GeometryAssetDirectory(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_set_GeometryAssetDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationGeometry", "GeometryAssetDirectory", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OSPSuccess
int GlobalNamespace::ONSPPropagationGeometry::_get_OSPSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_get_OSPSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPPropagationGeometry", "OSPSuccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OSPSuccess
void GlobalNamespace::ONSPPropagationGeometry::_set_OSPSuccess(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_set_OSPSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationGeometry", "OSPSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.String GEOMETRY_FILE_EXTENSION
::StringW GlobalNamespace::ONSPPropagationGeometry::_get_GEOMETRY_FILE_EXTENSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_get_GEOMETRY_FILE_EXTENSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagationGeometry", "GEOMETRY_FILE_EXTENSION"));
}
// Autogenerated static field setter
// Set static field: static public System.String GEOMETRY_FILE_EXTENSION
void GlobalNamespace::ONSPPropagationGeometry::_set_GEOMETRY_FILE_EXTENSION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_set_GEOMETRY_FILE_EXTENSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationGeometry", "GEOMETRY_FILE_EXTENSION", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 terrainDecimation
int GlobalNamespace::ONSPPropagationGeometry::_get_terrainDecimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_get_terrainDecimation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPPropagationGeometry", "terrainDecimation"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 terrainDecimation
void GlobalNamespace::ONSPPropagationGeometry::_set_terrainDecimation(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_set_terrainDecimation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationGeometry", "terrainDecimation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String filePathRelative
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ONSPPropagationGeometry::dyn_filePathRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::dyn_filePathRelative");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filePathRelative"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fileEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPPropagationGeometry::dyn_fileEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::dyn_fileEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeChildMeshes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPPropagationGeometry::dyn_includeChildMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::dyn_includeChildMeshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeChildMeshes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr geometryHandle
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::ONSPPropagationGeometry::dyn_geometryHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::dyn_geometryHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "geometryHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationGeometry.get_GeometryAssetPath
::StringW GlobalNamespace::ONSPPropagationGeometry::get_GeometryAssetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::get_GeometryAssetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "get_GeometryAssetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.get_filePath
::StringW GlobalNamespace::ONSPPropagationGeometry::get_filePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::get_filePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.GetPath
::StringW GlobalNamespace::ONSPPropagationGeometry::GetPath(::UnityEngine::Transform* current) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current);
}
// Autogenerated method: ONSPPropagationGeometry.Awake
void GlobalNamespace::ONSPPropagationGeometry::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.CreatePropagationGeometry
void GlobalNamespace::ONSPPropagationGeometry::CreatePropagationGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::CreatePropagationGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePropagationGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.Update
void GlobalNamespace::ONSPPropagationGeometry::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.OnDestroy
void GlobalNamespace::ONSPPropagationGeometry::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.traverseMeshHierarchy
void GlobalNamespace::ONSPPropagationGeometry::traverseMeshHierarchy(::UnityEngine::GameObject* obj, ::ArrayW<::GlobalNamespace::ONSPPropagationMaterial*> currentMaterials, bool includeChildren, ::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationGeometry::MeshMaterial>* meshMaterials, ::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationGeometry::TerrainMaterial>* terrainMaterials, bool ignoreStatic, ByRef<int> ignoredMeshCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::traverseMeshHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "traverseMeshHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(currentMaterials), ::il2cpp_utils::ExtractType(includeChildren), ::il2cpp_utils::ExtractType(meshMaterials), ::il2cpp_utils::ExtractType(terrainMaterials), ::il2cpp_utils::ExtractType(ignoreStatic), ::il2cpp_utils::ExtractType(ignoredMeshCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, currentMaterials, includeChildren, meshMaterials, terrainMaterials, ignoreStatic, byref(ignoredMeshCount));
}
// Autogenerated method: ONSPPropagationGeometry.uploadMesh
int GlobalNamespace::ONSPPropagationGeometry::uploadMesh(::System::IntPtr geometryHandle, ::UnityEngine::GameObject* meshObject, ::UnityEngine::Matrix4x4 worldToLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::uploadMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "uploadMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometryHandle), ::il2cpp_utils::ExtractType(meshObject), ::il2cpp_utils::ExtractType(worldToLocal)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometryHandle, meshObject, worldToLocal);
}
// Autogenerated method: ONSPPropagationGeometry.uploadMesh
int GlobalNamespace::ONSPPropagationGeometry::uploadMesh(::System::IntPtr geometryHandle, ::UnityEngine::GameObject* meshObject, ::UnityEngine::Matrix4x4 worldToLocal, bool ignoreStatic, ByRef<int> ignoredMeshCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::uploadMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "uploadMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometryHandle), ::il2cpp_utils::ExtractType(meshObject), ::il2cpp_utils::ExtractType(worldToLocal), ::il2cpp_utils::ExtractType(ignoreStatic), ::il2cpp_utils::ExtractType(ignoredMeshCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometryHandle, meshObject, worldToLocal, ignoreStatic, byref(ignoredMeshCount));
}
// Autogenerated method: ONSPPropagationGeometry.uploadMeshFilter
void GlobalNamespace::ONSPPropagationGeometry::uploadMeshFilter(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* tempVertices, ::System::Collections::Generic::List_1<int>* tempIndices, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::ArrayW<float> vertices, ::ArrayW<int> indices, ByRef<int> vertexOffset, ByRef<int> indexOffset, ByRef<int> groupOffset, ::UnityEngine::Mesh* mesh, ::ArrayW<::GlobalNamespace::ONSPPropagationMaterial*> materials, ::UnityEngine::Matrix4x4 matrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::uploadMeshFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "uploadMeshFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tempVertices), ::il2cpp_utils::ExtractType(tempIndices), ::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(vertexOffset), ::il2cpp_utils::ExtractType(indexOffset), ::il2cpp_utils::ExtractType(groupOffset), ::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(materials), ::il2cpp_utils::ExtractType(matrix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tempVertices, tempIndices, groups, vertices, indices, byref(vertexOffset), byref(indexOffset), byref(groupOffset), mesh, materials, matrix);
}
// Autogenerated method: ONSPPropagationGeometry.updateCountsForMesh
void GlobalNamespace::ONSPPropagationGeometry::updateCountsForMesh(ByRef<int> totalVertexCount, ByRef<uint> totalIndexCount, ByRef<int> totalFaceCount, ByRef<int> totalMaterialCount, ::UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::updateCountsForMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "updateCountsForMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalVertexCount), ::il2cpp_utils::ExtractType(totalIndexCount), ::il2cpp_utils::ExtractType(totalFaceCount), ::il2cpp_utils::ExtractType(totalMaterialCount), ::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(totalVertexCount), byref(totalIndexCount), byref(totalFaceCount), byref(totalMaterialCount), mesh);
}
// Autogenerated method: ONSPPropagationGeometry.UploadGeometry
void GlobalNamespace::ONSPPropagationGeometry::UploadGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::UploadGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.ReadFile
bool GlobalNamespace::ONSPPropagationGeometry::ReadFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::ReadFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.WriteToObj
bool GlobalNamespace::ONSPPropagationGeometry::WriteToObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::WriteToObj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToObj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry..cctor
void GlobalNamespace::ONSPPropagationGeometry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPPropagation
#include "GlobalNamespace/ONSPPropagation.hpp"
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
// Including type: ONSPPropagation/ClientType
#include "GlobalNamespace/ONSPPropagation_ClientType.hpp"
// Including type: ONSPPropagation/PropagationInterface
#include "GlobalNamespace/ONSPPropagation_PropagationInterface.hpp"
// Including type: ONSPPropagation/UnityNativeInterface
#include "GlobalNamespace/ONSPPropagation_UnityNativeInterface.hpp"
// Including type: ONSPPropagation/WwisePluginInterface
#include "GlobalNamespace/ONSPPropagation_WwisePluginInterface.hpp"
// Including type: ONSPPropagation/FMODPluginInterface
#include "GlobalNamespace/ONSPPropagation_FMODPluginInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private ONSPPropagation/PropagationInterface CachedInterface
::GlobalNamespace::ONSPPropagation::PropagationInterface* GlobalNamespace::ONSPPropagation::_get_CachedInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::_get_CachedInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::PropagationInterface*>("", "ONSPPropagation", "CachedInterface"));
}
// Autogenerated static field setter
// Set static field: static private ONSPPropagation/PropagationInterface CachedInterface
void GlobalNamespace::ONSPPropagation::_set_CachedInterface(::GlobalNamespace::ONSPPropagation::PropagationInterface* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::_set_CachedInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation", "CachedInterface", value));
}
// Autogenerated method: ONSPPropagation.get_Interface
::GlobalNamespace::ONSPPropagation::PropagationInterface* GlobalNamespace::ONSPPropagation::get_Interface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::get_Interface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation", "get_Interface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPPropagation::PropagationInterface*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPPropagation.FindInterface
::GlobalNamespace::ONSPPropagation::PropagationInterface* GlobalNamespace::ONSPPropagation::FindInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FindInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation", "FindInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPPropagation::PropagationInterface*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Int8
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Int8"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Int8
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int8(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Int8", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType UInt8
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "UInt8"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType UInt8
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt8(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "UInt8", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Int16
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Int16"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Int16
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int16(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Int16", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType UInt16
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "UInt16"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType UInt16
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt16(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "UInt16", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Int32
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Int32"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Int32
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int32(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Int32", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType UInt32
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "UInt32"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType UInt32
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt32(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "UInt32", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Int64
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Int64"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Int64
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int64(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Int64", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType UInt64
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "UInt64"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType UInt64
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt64(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "UInt64", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Float16
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Float16"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Float16
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float16(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Float16", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Float32
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Float32"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Float32
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float32(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Float32", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Float64
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Float64"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Float64
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float64(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Float64", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::ONSPPropagation::ovrAudioScalarType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/ClientType
#include "GlobalNamespace/ONSPPropagation_ClientType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_NATIVE
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_NATIVE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_NATIVE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_NATIVE"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_NATIVE
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_NATIVE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_NATIVE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_NATIVE", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2016
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2016() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2016");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2016"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2016
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2016(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2016");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2016", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2017_1
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2017_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2017_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2017_1"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2017_1
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2017_1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2017_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2017_1", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2017_2
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2017_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2017_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2017_2"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2017_2
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2017_2(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2017_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2017_2", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2018_1
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2018_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2018_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2018_1"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2018_1
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2018_1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2018_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2018_1", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_FMOD
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_FMOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_FMOD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_FMOD"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_FMOD
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_FMOD(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_FMOD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_FMOD", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_UNITY
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_UNITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_UNITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_UNITY"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_UNITY
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_UNITY(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_UNITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_UNITY", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_UE4
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_UE4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_UE4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_UE4"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_UE4
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_UE4(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_UE4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_UE4", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_VST
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_VST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_VST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_VST"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_VST
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_VST(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_VST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_VST", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_AAX
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_AAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_AAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_AAX"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_AAX
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_AAX(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_AAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_AAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_TEST
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_TEST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_TEST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_TEST"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_TEST
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_TEST(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_TEST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_TEST", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_OTHER
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_OTHER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_OTHER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_OTHER"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_OTHER
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_OTHER(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_OTHER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_OTHER", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_UNKNOWN
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_UNKNOWN
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_UNKNOWN(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_UNKNOWN", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2019_1
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2019_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2019_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2019_1"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2019_1
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2019_1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2019_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2019_1", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2019_2
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2019_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2019_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2019_2"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2019_2
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2019_2(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2019_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2019_2", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2021_1
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2021_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2021_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2021_1"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2021_1
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2021_1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2021_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2021_1", value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/PropagationInterface
#include "GlobalNamespace/ONSPPropagation_PropagationInterface.hpp"
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ONSPPropagation/PropagationInterface.SetPropagationQuality
int GlobalNamespace::ONSPPropagation::PropagationInterface::SetPropagationQuality(float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::SetPropagationQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, quality);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::PropagationInterface::SetPropagationThreadAffinity(uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::SetPropagationThreadAffinity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cpuMask);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::PropagationInterface::CreateAudioGeometry(ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::CreateAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(geometry));
}
// Autogenerated method: ONSPPropagation/PropagationInterface.DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::PropagationInterface::DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::DestroyAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryUploadMeshArrays");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, vertices, vertexCount, indices, indexCount, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometrySetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryGetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryWriteMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryReadMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryWriteMeshFileObj");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialGetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/PropagationInterface.CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::PropagationInterface::CreateAudioMaterial(ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::CreateAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagation/PropagationInterface.DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::PropagationInterface::DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::DestroyAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialSetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioMaterialReset
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialReset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/UnityNativeInterface
#include "GlobalNamespace/ONSPPropagation_UnityNativeInterface.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strOSPS
::StringW GlobalNamespace::ONSPPropagation::UnityNativeInterface::_get_strOSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::_get_strOSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagation/UnityNativeInterface", "strOSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOSPS
void GlobalNamespace::ONSPPropagation::UnityNativeInterface::_set_strOSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::_set_strOSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/UnityNativeInterface", "strOSPS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr context_
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::ONSPPropagation::UnityNativeInterface::dyn_context_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::dyn_context_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context_"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.get_context
::System::IntPtr GlobalNamespace::ONSPPropagation::UnityNativeInterface::get_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::get_context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_GetPluginContext
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_GetPluginContext(ByRef<::System::IntPtr> context, uint clientType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_GetPluginContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_GetPluginContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(clientType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), clientType);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_SetPropagationQuality
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_SetPropagationQuality(::System::IntPtr context, float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_SetPropagationQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_SetPropagationQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(quality)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, quality);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.SetPropagationQuality
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::SetPropagationQuality(float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::SetPropagationQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, quality);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_SetPropagationThreadAffinity(::System::IntPtr context, uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_SetPropagationThreadAffinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_SetPropagationThreadAffinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(cpuMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, cpuMask);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::SetPropagationThreadAffinity(uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::SetPropagationThreadAffinity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cpuMask);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_CreateAudioGeometry(::System::IntPtr context, ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_CreateAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_CreateAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(geometry));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::CreateAudioGeometry(ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::CreateAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(geometry));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_DestroyAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_DestroyAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::DestroyAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, ::System::UIntPtr verticesBytesOffset, ::System::UIntPtr vertexCount, ::System::UIntPtr vertexStride, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType vertexType, ::ArrayW<int> indices, ::System::UIntPtr indicesByteOffset, ::System::UIntPtr indexCount, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType indexType, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::System::UIntPtr groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryUploadMeshArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryUploadMeshArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(verticesBytesOffset), ::il2cpp_utils::ExtractType(vertexCount), ::il2cpp_utils::ExtractType(vertexStride), ::il2cpp_utils::ExtractType(vertexType), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(indicesByteOffset), ::il2cpp_utils::ExtractType(indexCount), ::il2cpp_utils::ExtractType(indexType), ::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(groupCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, vertices, verticesBytesOffset, vertexCount, vertexStride, vertexType, indices, indicesByteOffset, indexCount, indexType, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryUploadMeshArrays");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, vertices, vertexCount, indices, indexCount, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometrySetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometrySetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(matrix4x4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometrySetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryGetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryGetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryGetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryWriteMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryWriteMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryWriteMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryReadMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryReadMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryReadMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryWriteMeshFileObj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryWriteMeshFileObj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryWriteMeshFileObj");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_CreateAudioMaterial(::System::IntPtr context, ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_CreateAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_CreateAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(material));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::CreateAudioMaterial(ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::CreateAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_DestroyAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_DestroyAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::DestroyAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialSetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioMaterialSetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialSetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialGetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioMaterialGetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialGetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioMaterialReset
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioMaterialReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioMaterialReset
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialReset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/WwisePluginInterface
#include "GlobalNamespace/ONSPPropagation_WwisePluginInterface.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strOSPS
::StringW GlobalNamespace::ONSPPropagation::WwisePluginInterface::_get_strOSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::_get_strOSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagation/WwisePluginInterface", "strOSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOSPS
void GlobalNamespace::ONSPPropagation::WwisePluginInterface::_set_strOSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::_set_strOSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/WwisePluginInterface", "strOSPS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr context_
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::ONSPPropagation::WwisePluginInterface::dyn_context_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::dyn_context_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context_"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.get_context
::System::IntPtr GlobalNamespace::ONSPPropagation::WwisePluginInterface::get_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::get_context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_GetPluginContext
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_GetPluginContext(ByRef<::System::IntPtr> context, uint clientType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_GetPluginContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_GetPluginContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(clientType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), clientType);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_SetPropagationQuality
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_SetPropagationQuality(::System::IntPtr context, float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_SetPropagationQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_SetPropagationQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(quality)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, quality);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.SetPropagationQuality
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::SetPropagationQuality(float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::SetPropagationQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, quality);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_SetPropagationThreadAffinity(::System::IntPtr context, uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_SetPropagationThreadAffinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_SetPropagationThreadAffinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(cpuMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, cpuMask);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::SetPropagationThreadAffinity(uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::SetPropagationThreadAffinity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cpuMask);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_CreateAudioGeometry(::System::IntPtr context, ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_CreateAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_CreateAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(geometry));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::CreateAudioGeometry(ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::CreateAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(geometry));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_DestroyAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_DestroyAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::DestroyAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, ::System::UIntPtr verticesBytesOffset, ::System::UIntPtr vertexCount, ::System::UIntPtr vertexStride, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType vertexType, ::ArrayW<int> indices, ::System::UIntPtr indicesByteOffset, ::System::UIntPtr indexCount, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType indexType, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::System::UIntPtr groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryUploadMeshArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryUploadMeshArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(verticesBytesOffset), ::il2cpp_utils::ExtractType(vertexCount), ::il2cpp_utils::ExtractType(vertexStride), ::il2cpp_utils::ExtractType(vertexType), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(indicesByteOffset), ::il2cpp_utils::ExtractType(indexCount), ::il2cpp_utils::ExtractType(indexType), ::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(groupCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, vertices, verticesBytesOffset, vertexCount, vertexStride, vertexType, indices, indicesByteOffset, indexCount, indexType, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryUploadMeshArrays");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, vertices, vertexCount, indices, indexCount, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometrySetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometrySetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(matrix4x4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometrySetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryGetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryGetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryGetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryWriteMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryWriteMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryWriteMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryReadMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryReadMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryReadMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryWriteMeshFileObj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryWriteMeshFileObj");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_CreateAudioMaterial(::System::IntPtr context, ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_CreateAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_CreateAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(material));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::CreateAudioMaterial(ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::CreateAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_DestroyAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_DestroyAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::DestroyAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialSetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioMaterialSetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialSetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialGetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioMaterialGetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialGetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioMaterialReset
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioMaterialReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioMaterialReset
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialReset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/FMODPluginInterface
#include "GlobalNamespace/ONSPPropagation_FMODPluginInterface.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strOSPS
::StringW GlobalNamespace::ONSPPropagation::FMODPluginInterface::_get_strOSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::_get_strOSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagation/FMODPluginInterface", "strOSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOSPS
void GlobalNamespace::ONSPPropagation::FMODPluginInterface::_set_strOSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::_set_strOSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/FMODPluginInterface", "strOSPS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr context_
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::ONSPPropagation::FMODPluginInterface::dyn_context_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::dyn_context_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context_"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.get_context
::System::IntPtr GlobalNamespace::ONSPPropagation::FMODPluginInterface::get_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::get_context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_GetPluginContext
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_GetPluginContext(ByRef<::System::IntPtr> context, uint clientType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_GetPluginContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_GetPluginContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(clientType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), clientType);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_SetPropagationQuality
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationQuality(::System::IntPtr context, float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_SetPropagationQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(quality)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, quality);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.SetPropagationQuality
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationQuality(float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, quality);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationThreadAffinity(::System::IntPtr context, uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationThreadAffinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_SetPropagationThreadAffinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(cpuMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, cpuMask);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationThreadAffinity(uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationThreadAffinity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cpuMask);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioGeometry(::System::IntPtr context, ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_CreateAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(geometry));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioGeometry(ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(geometry));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_DestroyAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, ::System::UIntPtr verticesBytesOffset, ::System::UIntPtr vertexCount, ::System::UIntPtr vertexStride, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType vertexType, ::ArrayW<int> indices, ::System::UIntPtr indicesByteOffset, ::System::UIntPtr indexCount, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType indexType, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::System::UIntPtr groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryUploadMeshArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryUploadMeshArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(verticesBytesOffset), ::il2cpp_utils::ExtractType(vertexCount), ::il2cpp_utils::ExtractType(vertexStride), ::il2cpp_utils::ExtractType(vertexType), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(indicesByteOffset), ::il2cpp_utils::ExtractType(indexCount), ::il2cpp_utils::ExtractType(indexType), ::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(groupCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, vertices, verticesBytesOffset, vertexCount, vertexStride, vertexType, indices, indicesByteOffset, indexCount, indexType, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryUploadMeshArrays");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, vertices, vertexCount, indices, indexCount, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometrySetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometrySetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(matrix4x4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometrySetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryGetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryGetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryGetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryWriteMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryReadMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryReadMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryReadMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryWriteMeshFileObj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFileObj");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioMaterial(::System::IntPtr context, ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_CreateAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(material));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioMaterial(ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_DestroyAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialSetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioMaterialSetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialSetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialGetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioMaterialGetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialGetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioMaterialReset
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioMaterialReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioMaterialReset
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialReset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial
#include "GlobalNamespace/ONSPPropagationMaterial.hpp"
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
// Including type: ONSPPropagationMaterial/Spectrum
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr materialHandle
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::ONSPPropagationMaterial::dyn_materialHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_materialHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPPropagationMaterial/Spectrum absorption
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPPropagationMaterial::Spectrum*& GlobalNamespace::ONSPPropagationMaterial::dyn_absorption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_absorption");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "absorption"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPPropagationMaterial::Spectrum**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPPropagationMaterial/Spectrum transmission
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPPropagationMaterial::Spectrum*& GlobalNamespace::ONSPPropagationMaterial::dyn_transmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_transmission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transmission"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPPropagationMaterial::Spectrum**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPPropagationMaterial/Spectrum scattering
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPPropagationMaterial::Spectrum*& GlobalNamespace::ONSPPropagationMaterial::dyn_scattering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_scattering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scattering"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPPropagationMaterial::Spectrum**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ONSPPropagationMaterial/Preset preset_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPPropagationMaterial::Preset& GlobalNamespace::ONSPPropagationMaterial::dyn_preset_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_preset_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preset_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPPropagationMaterial::Preset*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationMaterial.get_preset
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::get_preset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::get_preset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPPropagationMaterial::Preset, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.set_preset
void GlobalNamespace::ONSPPropagationMaterial::set_preset(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::set_preset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_preset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPPropagationMaterial.Start
void GlobalNamespace::ONSPPropagationMaterial::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.StartInternal
void GlobalNamespace::ONSPPropagationMaterial::StartInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::StartInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.OnDestroy
void GlobalNamespace::ONSPPropagationMaterial::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.DestroyInternal
void GlobalNamespace::ONSPPropagationMaterial::DestroyInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::DestroyInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.UploadMaterial
void GlobalNamespace::ONSPPropagationMaterial::UploadMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::UploadMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.SetPreset
void GlobalNamespace::ONSPPropagationMaterial::SetPreset(::GlobalNamespace::ONSPPropagationMaterial::Preset preset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::SetPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(preset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, preset);
}
// Autogenerated method: ONSPPropagationMaterial.AcousticTile
void GlobalNamespace::ONSPPropagationMaterial::AcousticTile(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::AcousticTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "AcousticTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Brick
void GlobalNamespace::ONSPPropagationMaterial::Brick(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Brick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Brick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.BrickPainted
void GlobalNamespace::ONSPPropagationMaterial::BrickPainted(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::BrickPainted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "BrickPainted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Carpet
void GlobalNamespace::ONSPPropagationMaterial::Carpet(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Carpet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Carpet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.CarpetHeavy
void GlobalNamespace::ONSPPropagationMaterial::CarpetHeavy(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::CarpetHeavy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "CarpetHeavy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.CarpetHeavyPadded
void GlobalNamespace::ONSPPropagationMaterial::CarpetHeavyPadded(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::CarpetHeavyPadded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "CarpetHeavyPadded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.CeramicTile
void GlobalNamespace::ONSPPropagationMaterial::CeramicTile(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::CeramicTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "CeramicTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Concrete
void GlobalNamespace::ONSPPropagationMaterial::Concrete(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Concrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Concrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.ConcreteRough
void GlobalNamespace::ONSPPropagationMaterial::ConcreteRough(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::ConcreteRough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "ConcreteRough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.ConcreteBlock
void GlobalNamespace::ONSPPropagationMaterial::ConcreteBlock(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::ConcreteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "ConcreteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.ConcreteBlockPainted
void GlobalNamespace::ONSPPropagationMaterial::ConcreteBlockPainted(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::ConcreteBlockPainted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "ConcreteBlockPainted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Curtain
void GlobalNamespace::ONSPPropagationMaterial::Curtain(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Curtain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Curtain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Foliage
void GlobalNamespace::ONSPPropagationMaterial::Foliage(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Foliage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Foliage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Glass
void GlobalNamespace::ONSPPropagationMaterial::Glass(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Glass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Glass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.GlassHeavy
void GlobalNamespace::ONSPPropagationMaterial::GlassHeavy(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::GlassHeavy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "GlassHeavy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Grass
void GlobalNamespace::ONSPPropagationMaterial::Grass(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Grass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Grass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Gravel
void GlobalNamespace::ONSPPropagationMaterial::Gravel(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Gravel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Gravel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.GypsumBoard
void GlobalNamespace::ONSPPropagationMaterial::GypsumBoard(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::GypsumBoard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "GypsumBoard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.PlasterOnBrick
void GlobalNamespace::ONSPPropagationMaterial::PlasterOnBrick(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::PlasterOnBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "PlasterOnBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.PlasterOnConcreteBlock
void GlobalNamespace::ONSPPropagationMaterial::PlasterOnConcreteBlock(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::PlasterOnConcreteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "PlasterOnConcreteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Soil
void GlobalNamespace::ONSPPropagationMaterial::Soil(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Soil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Soil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.SoundProof
void GlobalNamespace::ONSPPropagationMaterial::SoundProof(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::SoundProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "SoundProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Snow
void GlobalNamespace::ONSPPropagationMaterial::Snow(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Snow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Snow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Steel
void GlobalNamespace::ONSPPropagationMaterial::Steel(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Steel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Steel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Water
void GlobalNamespace::ONSPPropagationMaterial::Water(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Water");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Water", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.WoodThin
void GlobalNamespace::ONSPPropagationMaterial::WoodThin(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::WoodThin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "WoodThin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.WoodThick
void GlobalNamespace::ONSPPropagationMaterial::WoodThick(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::WoodThick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "WoodThick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.WoodFloor
void GlobalNamespace::ONSPPropagationMaterial::WoodFloor(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::WoodFloor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "WoodFloor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.WoodOnConcrete
void GlobalNamespace::ONSPPropagationMaterial::WoodOnConcrete(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::WoodOnConcrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "WoodOnConcrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Preset
#include "GlobalNamespace/ONSPPropagationMaterial.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Custom
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Custom
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Custom(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset AcousticTile
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_AcousticTile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_AcousticTile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "AcousticTile"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset AcousticTile
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_AcousticTile(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_AcousticTile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "AcousticTile", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Brick
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Brick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Brick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Brick"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Brick
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Brick(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Brick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Brick", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset BrickPainted
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_BrickPainted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_BrickPainted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "BrickPainted"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset BrickPainted
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_BrickPainted(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_BrickPainted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "BrickPainted", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Carpet
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Carpet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Carpet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Carpet"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Carpet
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Carpet(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Carpet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Carpet", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset CarpetHeavy
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CarpetHeavy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CarpetHeavy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "CarpetHeavy"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset CarpetHeavy
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CarpetHeavy(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CarpetHeavy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "CarpetHeavy", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset CarpetHeavyPadded
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CarpetHeavyPadded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CarpetHeavyPadded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "CarpetHeavyPadded"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset CarpetHeavyPadded
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CarpetHeavyPadded(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CarpetHeavyPadded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "CarpetHeavyPadded", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset CeramicTile
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CeramicTile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CeramicTile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "CeramicTile"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset CeramicTile
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CeramicTile(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CeramicTile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "CeramicTile", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Concrete
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Concrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Concrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Concrete"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Concrete
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Concrete(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Concrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Concrete", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset ConcreteRough
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteRough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteRough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "ConcreteRough"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset ConcreteRough
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteRough(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteRough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "ConcreteRough", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset ConcreteBlock
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "ConcreteBlock"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset ConcreteBlock
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteBlock(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "ConcreteBlock", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset ConcreteBlockPainted
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteBlockPainted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteBlockPainted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "ConcreteBlockPainted"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset ConcreteBlockPainted
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteBlockPainted(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteBlockPainted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "ConcreteBlockPainted", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Curtain
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Curtain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Curtain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Curtain"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Curtain
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Curtain(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Curtain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Curtain", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Foliage
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Foliage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Foliage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Foliage"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Foliage
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Foliage(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Foliage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Foliage", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Glass
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Glass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Glass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Glass"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Glass
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Glass(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Glass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Glass", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset GlassHeavy
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_GlassHeavy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_GlassHeavy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "GlassHeavy"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset GlassHeavy
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_GlassHeavy(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_GlassHeavy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "GlassHeavy", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Grass
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Grass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Grass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Grass"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Grass
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Grass(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Grass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Grass", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Gravel
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Gravel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Gravel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Gravel"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Gravel
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Gravel(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Gravel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Gravel", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset GypsumBoard
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_GypsumBoard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_GypsumBoard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "GypsumBoard"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset GypsumBoard
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_GypsumBoard(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_GypsumBoard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "GypsumBoard", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset PlasterOnBrick
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_PlasterOnBrick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_PlasterOnBrick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "PlasterOnBrick"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset PlasterOnBrick
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_PlasterOnBrick(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_PlasterOnBrick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "PlasterOnBrick", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset PlasterOnConcreteBlock
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_PlasterOnConcreteBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_PlasterOnConcreteBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "PlasterOnConcreteBlock"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset PlasterOnConcreteBlock
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_PlasterOnConcreteBlock(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_PlasterOnConcreteBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "PlasterOnConcreteBlock", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Soil
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Soil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Soil");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Soil"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Soil
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Soil(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Soil");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Soil", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset SoundProof
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_SoundProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_SoundProof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "SoundProof"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset SoundProof
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_SoundProof(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_SoundProof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "SoundProof", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Snow
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Snow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Snow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Snow"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Snow
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Snow(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Snow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Snow", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Steel
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Steel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Steel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Steel"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Steel
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Steel(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Steel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Steel", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Water
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Water() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Water");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Water"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Water
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Water(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Water");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Water", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset WoodThin
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodThin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodThin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "WoodThin"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset WoodThin
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodThin(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodThin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "WoodThin", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset WoodThick
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodThick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodThick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "WoodThick"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset WoodThick
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodThick(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodThick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "WoodThick", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset WoodFloor
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodFloor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "WoodFloor"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset WoodFloor
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodFloor(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodFloor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "WoodFloor", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset WoodOnConcrete
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodOnConcrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodOnConcrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "WoodOnConcrete"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset WoodOnConcrete
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodOnConcrete(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodOnConcrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "WoodOnConcrete", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPPropagationMaterial::Preset::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single frequency
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPPropagationMaterial::Point::dyn_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Point::dyn_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single data
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPPropagationMaterial::Point::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Point::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Spectrum
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum.hpp"
// Including type: ONSPPropagationMaterial/Spectrum/<>c
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 selection
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_selection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_selection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selection"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<ONSPPropagationMaterial/Point> points
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationMaterial::Point*>*& GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "points"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationMaterial::Point*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum.get_Item
float GlobalNamespace::ONSPPropagationMaterial::Spectrum::get_Item(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Spectrum/<>c
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly ONSPPropagationMaterial/Spectrum/<>c <>9
::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c* GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c*>("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly ONSPPropagationMaterial/Spectrum/<>c <>9
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9(::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_0
::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>*>("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_0
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_0(::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_1
::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>*>("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_1
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_1(::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_1", value)));
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum/<>c..cctor
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial/Spectrum/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum/<>c.<get_Item>b__3_0
float GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::$get_Item$b__3_0(::GlobalNamespace::ONSPPropagationMaterial::Point* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::<get_Item>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Item>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, p);
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum/<>c.<get_Item>b__3_1
float GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::$get_Item$b__3_1(::GlobalNamespace::ONSPPropagationMaterial::Point* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::<get_Item>b__3_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Item>b__3_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPPropagationSettings
#include "GlobalNamespace/ONSPPropagationSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single quality
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPPropagationSettings::dyn_quality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationSettings::dyn_quality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quality"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationSettings.Update
void GlobalNamespace::ONSPPropagationSettings::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationSettings::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPSettings
#include "GlobalNamespace/ONSPSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private ONSPSettings instance
::GlobalNamespace::ONSPSettings* GlobalNamespace::ONSPSettings::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPSettings*>("", "ONSPSettings", "instance"));
}
// Autogenerated static field setter
// Set static field: static private ONSPSettings instance
void GlobalNamespace::ONSPSettings::_set_instance(::GlobalNamespace::ONSPSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPSettings", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 voiceLimit
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPSettings::dyn_voiceLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::dyn_voiceLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPSettings.get_Instance
::GlobalNamespace::ONSPSettings* GlobalNamespace::ONSPSettings::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPSettings", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: ONSPVersion
#include "GlobalNamespace/ONSPVersion.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strONSPS
::StringW GlobalNamespace::ONSPVersion::_get_strONSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::_get_strONSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPVersion", "strONSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strONSPS
void GlobalNamespace::ONSPVersion::_set_strONSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::_set_strONSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPVersion", "strONSPS", value));
}
// Autogenerated method: ONSPVersion.ONSP_GetVersion
void GlobalNamespace::ONSPVersion::ONSP_GetVersion(ByRef<int> Major, ByRef<int> Minor, ByRef<int> Patch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::ONSP_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPVersion", "ONSP_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Major), ::il2cpp_utils::ExtractType(Minor), ::il2cpp_utils::ExtractType(Patch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(Major), byref(Minor), byref(Patch));
}
// Autogenerated method: ONSPVersion.Awake
void GlobalNamespace::ONSPVersion::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPVersion.Start
void GlobalNamespace::ONSPVersion::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPVersion.Update
void GlobalNamespace::ONSPVersion::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1__________________________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1___________________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1__________________________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1__________________________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1__________________________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1__________________________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Spatializer.Propagation.FaceType
#include "Oculus/Spatializer/Propagation/FaceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.FaceType TRIANGLES
::Oculus::Spatializer::Propagation::FaceType Oculus::Spatializer::Propagation::FaceType::_get_TRIANGLES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_get_TRIANGLES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::FaceType>("Oculus.Spatializer.Propagation", "FaceType", "TRIANGLES"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.FaceType TRIANGLES
void Oculus::Spatializer::Propagation::FaceType::_set_TRIANGLES(::Oculus::Spatializer::Propagation::FaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_set_TRIANGLES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "FaceType", "TRIANGLES", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.FaceType QUADS
::Oculus::Spatializer::Propagation::FaceType Oculus::Spatializer::Propagation::FaceType::_get_QUADS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_get_QUADS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::FaceType>("Oculus.Spatializer.Propagation", "FaceType", "QUADS"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.FaceType QUADS
void Oculus::Spatializer::Propagation::FaceType::_set_QUADS(::Oculus::Spatializer::Propagation::FaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_set_QUADS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "FaceType", "QUADS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Oculus::Spatializer::Propagation::FaceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.MaterialProperty ABSORPTION
::Oculus::Spatializer::Propagation::MaterialProperty Oculus::Spatializer::Propagation::MaterialProperty::_get_ABSORPTION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_get_ABSORPTION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::MaterialProperty>("Oculus.Spatializer.Propagation", "MaterialProperty", "ABSORPTION"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.MaterialProperty ABSORPTION
void Oculus::Spatializer::Propagation::MaterialProperty::_set_ABSORPTION(::Oculus::Spatializer::Propagation::MaterialProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_set_ABSORPTION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "MaterialProperty", "ABSORPTION", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.MaterialProperty TRANSMISSION
::Oculus::Spatializer::Propagation::MaterialProperty Oculus::Spatializer::Propagation::MaterialProperty::_get_TRANSMISSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_get_TRANSMISSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::MaterialProperty>("Oculus.Spatializer.Propagation", "MaterialProperty", "TRANSMISSION"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.MaterialProperty TRANSMISSION
void Oculus::Spatializer::Propagation::MaterialProperty::_set_TRANSMISSION(::Oculus::Spatializer::Propagation::MaterialProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_set_TRANSMISSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "MaterialProperty", "TRANSMISSION", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.MaterialProperty SCATTERING
::Oculus::Spatializer::Propagation::MaterialProperty Oculus::Spatializer::Propagation::MaterialProperty::_get_SCATTERING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_get_SCATTERING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::MaterialProperty>("Oculus.Spatializer.Propagation", "MaterialProperty", "SCATTERING"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.MaterialProperty SCATTERING
void Oculus::Spatializer::Propagation::MaterialProperty::_set_SCATTERING(::Oculus::Spatializer::Propagation::MaterialProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_set_SCATTERING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "MaterialProperty", "SCATTERING", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Oculus::Spatializer::Propagation::MaterialProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Microsoft.CodeAnalysis.EmbeddedAttribute
#include "Microsoft/CodeAnalysis/EmbeddedAttribute_______.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.IsUnmanagedAttribute
#include "System/Runtime/CompilerServices/IsUnmanagedAttribute_____.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRCameraComposition
#include "GlobalNamespace/OVRCameraComposition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRComposition
#include "GlobalNamespace/OVRComposition.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: OVRMixedRealityCaptureConfiguration
#include "GlobalNamespace/OVRMixedRealityCaptureConfiguration.hpp"
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager_CompositionMethod.hpp"
// Including type: OVRManager/TrackingOrigin
#include "GlobalNamespace/OVRManager_TrackingOrigin.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace/OVRPlugin_CameraExtrinsics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean cameraInTrackingSpace
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRComposition::dyn_cameraInTrackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_cameraInTrackingSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraInTrackingSpace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig cameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::OVRComposition::dyn_cameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_cameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean usingLastAttachedNodePose
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRComposition::dyn_usingLastAttachedNodePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_usingLastAttachedNodePose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usingLastAttachedNodePose"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OVRPose lastAttachedNodePose
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPose& GlobalNamespace::OVRComposition::dyn_lastAttachedNodePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_lastAttachedNodePose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAttachedNodePose"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRComposition.CompositionMethod
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRComposition::CompositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::CompositionMethod");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_CompositionMethod, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.Update
void GlobalNamespace::OVRComposition::Update(::UnityEngine::GameObject* gameObject, ::UnityEngine::Camera* mainCamera, ::GlobalNamespace::OVRMixedRealityCaptureConfiguration* configuration, ::GlobalNamespace::OVRManager_TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject, mainCamera, configuration, trackingOrigin);
}
// Autogenerated method: OVRComposition.Cleanup
void GlobalNamespace::OVRComposition::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.RecenterPose
void GlobalNamespace::OVRComposition::RecenterPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::RecenterPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.RefreshCameraRig
void GlobalNamespace::OVRComposition::RefreshCameraRig(::UnityEngine::GameObject* parentObject, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::RefreshCameraRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCameraRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentObject), ::il2cpp_utils::ExtractType(mainCamera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentObject, mainCamera);
}
// Autogenerated method: OVRComposition.ComputeCameraWorldSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRComposition::ComputeCameraWorldSpacePose(::GlobalNamespace::OVRPlugin::CameraExtrinsics extrinsics, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::ComputeCameraWorldSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCameraWorldSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extrinsics), ::il2cpp_utils::ExtractType(mainCamera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method, extrinsics, mainCamera);
}
// Autogenerated method: OVRComposition.ComputeCameraTrackingSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRComposition::ComputeCameraTrackingSpacePose(::GlobalNamespace::OVRPlugin::CameraExtrinsics extrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::ComputeCameraTrackingSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCameraTrackingSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extrinsics)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method, extrinsics);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRCompositionUtil
#include "GlobalNamespace/OVRCompositionUtil.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRCompositionUtil.SafeDestroy
void GlobalNamespace::OVRCompositionUtil::SafeDestroy(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::SafeDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "SafeDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: OVRCompositionUtil.SafeDestroy
void GlobalNamespace::OVRCompositionUtil::SafeDestroy_(ByRef<::UnityEngine::GameObject*> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::SafeDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "SafeDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(obj));
}
// Autogenerated method: OVRCompositionUtil.GetWorldPosition
::UnityEngine::Vector3 GlobalNamespace::OVRCompositionUtil::GetWorldPosition(::UnityEngine::Vector3 trackingSpacePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::GetWorldPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "GetWorldPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingSpacePosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingSpacePosition);
}
// Autogenerated method: OVRCompositionUtil.GetWorldPosition
::UnityEngine::Vector3 GlobalNamespace::OVRCompositionUtil::GetWorldPosition(::UnityEngine::Camera* camera, ::UnityEngine::Vector3 trackingSpacePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::GetWorldPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "GetWorldPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(trackingSpacePosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera, trackingSpacePosition);
}
// Autogenerated method: OVRCompositionUtil.GetMaximumBoundaryDistance
float GlobalNamespace::OVRCompositionUtil::GetMaximumBoundaryDistance(::UnityEngine::Camera* camera, ::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::GetMaximumBoundaryDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "GetMaximumBoundaryDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera, boundaryType);
}
// Autogenerated method: OVRCompositionUtil.BuildBoundaryMesh
::UnityEngine::Mesh* GlobalNamespace::OVRCompositionUtil::BuildBoundaryMesh(::GlobalNamespace::OVRBoundary::BoundaryType boundaryType, float topY, float bottomY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::BuildBoundaryMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "BuildBoundaryMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType), ::il2cpp_utils::ExtractType(topY), ::il2cpp_utils::ExtractType(bottomY)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryType, topY, bottomY);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRDirectComposition
#include "GlobalNamespace/OVRDirectComposition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRExternalComposition
#include "GlobalNamespace/OVRExternalComposition.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.AudioListener
#include "UnityEngine/AudioListener.hpp"
// Including type: OVRMRAudioFilter
#include "GlobalNamespace/OVRMRAudioFilter.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRMixedRealityCaptureConfiguration
#include "GlobalNamespace/OVRMixedRealityCaptureConfiguration.hpp"
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager_CompositionMethod.hpp"
// Including type: OVRManager/TrackingOrigin
#include "GlobalNamespace/OVRManager_TrackingOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject previousMainCameraObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRExternalComposition::dyn_previousMainCameraObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_previousMainCameraObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousMainCameraObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject foregroundCameraGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRExternalComposition::dyn_foregroundCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_foregroundCameraGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foregroundCameraGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera foregroundCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRExternalComposition::dyn_foregroundCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_foregroundCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foregroundCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject backgroundCameraGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRExternalComposition::dyn_backgroundCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_backgroundCameraGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundCameraGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera backgroundCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRExternalComposition::dyn_backgroundCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_backgroundCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean skipFrame
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRExternalComposition::dyn_skipFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_skipFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skipFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single fpsThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRExternalComposition::dyn_fpsThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_fpsThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fpsThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isFrameSkipped
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRExternalComposition::dyn_isFrameSkipped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_isFrameSkipped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isFrameSkipped"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean renderCombinedFrame
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRExternalComposition::dyn_renderCombinedFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_renderCombinedFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderCombinedFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioListener audioListener
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioListener*& GlobalNamespace::OVRExternalComposition::dyn_audioListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_audioListener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioListener"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRMRAudioFilter audioFilter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRMRAudioFilter*& GlobalNamespace::OVRExternalComposition::dyn_audioFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_audioFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioFilter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRMRAudioFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture[] mrcRenderTextureArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RenderTexture*>& GlobalNamespace::OVRExternalComposition::dyn_mrcRenderTextureArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_mrcRenderTextureArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mrcRenderTextureArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 frameIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRExternalComposition::dyn_frameIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_frameIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastMrcEncodeFrameSyncId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRExternalComposition::dyn_lastMrcEncodeFrameSyncId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_lastMrcEncodeFrameSyncId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastMrcEncodeFrameSyncId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture[] mrcForegroundRenderTextureArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RenderTexture*>& GlobalNamespace::OVRExternalComposition::dyn_mrcForegroundRenderTextureArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_mrcForegroundRenderTextureArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mrcForegroundRenderTextureArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double[] cameraPoseTimeArray
[[deprecated("Use field access instead!")]] ::ArrayW<double>& GlobalNamespace::OVRExternalComposition::dyn_cameraPoseTimeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cameraPoseTimeArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraPoseTimeArray"))->offset;
  return *reinterpret_cast<::ArrayW<double>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] cachedAudioDataArray
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OVRExternalComposition::dyn_cachedAudioDataArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cachedAudioDataArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedAudioDataArray"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object audioDataLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OVRExternalComposition::dyn_audioDataLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_audioDataLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioDataLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single> cachedAudioData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<float>*& GlobalNamespace::OVRExternalComposition::dyn_cachedAudioData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cachedAudioData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedAudioData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 cachedChannels
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRExternalComposition::dyn_cachedChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cachedChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedChannels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRExternalComposition.RefreshCameraObjects
void GlobalNamespace::OVRExternalComposition::RefreshCameraObjects(::UnityEngine::GameObject* parentObject, ::UnityEngine::Camera* mainCamera, ::GlobalNamespace::OVRMixedRealityCaptureConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::RefreshCameraObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCameraObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentObject), ::il2cpp_utils::ExtractType(mainCamera), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentObject, mainCamera, configuration);
}
// Autogenerated method: OVRExternalComposition.RefreshAudioFilter
void GlobalNamespace::OVRExternalComposition::RefreshAudioFilter(::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::RefreshAudioFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAudioFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainCamera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainCamera);
}
// Autogenerated method: OVRExternalComposition.CastMrcFrame
int GlobalNamespace::OVRExternalComposition::CastMrcFrame(int castTextureIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CastMrcFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CastMrcFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(castTextureIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, castTextureIndex);
}
// Autogenerated method: OVRExternalComposition.SetCameraTargetTexture
void GlobalNamespace::OVRExternalComposition::SetCameraTargetTexture(int drawTextureIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::SetCameraTargetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCameraTargetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(drawTextureIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, drawTextureIndex);
}
// Autogenerated method: OVRExternalComposition.CleanupAudioFilter
void GlobalNamespace::OVRExternalComposition::CleanupAudioFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CleanupAudioFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupAudioFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRExternalComposition.CacheAudioData
void GlobalNamespace::OVRExternalComposition::CacheAudioData(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CacheAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRExternalComposition.GetAndResetAudioData
void GlobalNamespace::OVRExternalComposition::GetAndResetAudioData(ByRef<::ArrayW<float>> audioData, ByRef<int> audioFrames, ByRef<int> channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::GetAndResetAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAndResetAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(audioData), byref(audioFrames), byref(channels));
}
// Autogenerated method: OVRExternalComposition.DisplayRefreshRateChanged
void GlobalNamespace::OVRExternalComposition::DisplayRefreshRateChanged(float fromRefreshRate, float toRefreshRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::DisplayRefreshRateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisplayRefreshRateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromRefreshRate), ::il2cpp_utils::ExtractType(toRefreshRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fromRefreshRate, toRefreshRate);
}
// Autogenerated method: OVRExternalComposition.CompositionMethod
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRExternalComposition::CompositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CompositionMethod");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_CompositionMethod, false>(this, ___internal__method);
}
// Autogenerated method: OVRExternalComposition.Update
void GlobalNamespace::OVRExternalComposition::Update(::UnityEngine::GameObject* gameObject, ::UnityEngine::Camera* mainCamera, ::GlobalNamespace::OVRMixedRealityCaptureConfiguration* configuration, ::GlobalNamespace::OVRManager_TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject, mainCamera, configuration, trackingOrigin);
}
// Autogenerated method: OVRExternalComposition.Cleanup
void GlobalNamespace::OVRExternalComposition::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRMRAudioFilter
#include "GlobalNamespace/OVRMRAudioFilter.hpp"
// Including type: OVRExternalComposition
#include "GlobalNamespace/OVRExternalComposition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean running
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRMRAudioFilter::dyn_running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMRAudioFilter::dyn_running");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "running"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRExternalComposition composition
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRExternalComposition*& GlobalNamespace::OVRMRAudioFilter::dyn_composition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMRAudioFilter::dyn_composition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "composition"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRExternalComposition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRMRAudioFilter.Start
void GlobalNamespace::OVRMRAudioFilter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMRAudioFilter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMRAudioFilter.OnAudioFilterRead
void GlobalNamespace::OVRMRAudioFilter::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMRAudioFilter::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRSandwichComposition
#include "GlobalNamespace/OVRSandwichComposition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRAnchor
#include "GlobalNamespace/OVRAnchor.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: IOVRAnchorComponent`1
#include "GlobalNamespace/IOVRAnchorComponent_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRPlugin/SpaceQueryInfo
#include "GlobalNamespace/OVRPlugin_SpaceQueryInfo.hpp"
// Including type: OVRDeserialize/SpaceQueryCompleteData
#include "GlobalNamespace/OVRDeserialize_SpaceQueryCompleteData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRAnchor Null
::GlobalNamespace::OVRAnchor GlobalNamespace::OVRAnchor::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRAnchor>("", "OVRAnchor", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRAnchor Null
void GlobalNamespace::OVRAnchor::_set_Null(::GlobalNamespace::OVRAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRAnchor", "Null", value));
}
// Autogenerated static field getter
// Get static field: static private readonly OVRPlugin/SpaceComponentType[] SupportedComponentsArray
::ArrayW<::GlobalNamespace::OVRPlugin::SpaceComponentType> GlobalNamespace::OVRAnchor::_get_SupportedComponentsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::_get_SupportedComponentsArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRPlugin::SpaceComponentType>>("", "OVRAnchor", "SupportedComponentsArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly OVRPlugin/SpaceComponentType[] SupportedComponentsArray
void GlobalNamespace::OVRAnchor::_set_SupportedComponentsArray(::ArrayW<::GlobalNamespace::OVRPlugin::SpaceComponentType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::_set_SupportedComponentsArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRAnchor", "SupportedComponentsArray", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 <Handle>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRAnchor::dyn_$Handle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::dyn_$Handle$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handle>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Guid <Uuid>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Guid& GlobalNamespace::OVRAnchor::dyn_$Uuid$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::dyn_$Uuid$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Uuid>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRAnchor.GetQueryInfo
::GlobalNamespace::OVRPlugin::SpaceQueryInfo GlobalNamespace::OVRAnchor::GetQueryInfo(::GlobalNamespace::OVRPlugin::SpaceComponentType type, ::GlobalNamespace::OVRSpace::StorageLocation location, int maxResults, double timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::GetQueryInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRAnchor", "GetQueryInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(maxResults), ::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceQueryInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, location, maxResults, timeout);
}
// Autogenerated method: OVRAnchor.GetQueryInfo
::GlobalNamespace::OVRPlugin::SpaceQueryInfo GlobalNamespace::OVRAnchor::GetQueryInfo(::System::Collections::Generic::IEnumerable_1<::System::Guid>* uuids, ::GlobalNamespace::OVRSpace::StorageLocation location, double timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::GetQueryInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRAnchor", "GetQueryInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuids), ::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceQueryInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuids, location, timeout);
}
// Autogenerated method: OVRAnchor.FetchAnchorsAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRAnchor::FetchAnchorsAsync(::GlobalNamespace::OVRPlugin::SpaceComponentType type, ::System::Collections::Generic::IList_1<::GlobalNamespace::OVRAnchor>* anchors, ::GlobalNamespace::OVRSpace::StorageLocation location, int maxResults, double timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::FetchAnchorsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRAnchor", "FetchAnchorsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(anchors), ::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(maxResults), ::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, anchors, location, maxResults, timeout);
}
// Autogenerated method: OVRAnchor.FetchAnchorsAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRAnchor::FetchAnchorsAsync(::System::Collections::Generic::IEnumerable_1<::System::Guid>* uuids, ::System::Collections::Generic::IList_1<::GlobalNamespace::OVRAnchor>* anchors, ::GlobalNamespace::OVRSpace::StorageLocation location, double timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::FetchAnchorsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRAnchor", "FetchAnchorsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuids), ::il2cpp_utils::ExtractType(anchors), ::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuids, anchors, location, timeout);
}
// Autogenerated method: OVRAnchor.FetchAnchors
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRAnchor::FetchAnchors(::System::Collections::Generic::IList_1<::GlobalNamespace::OVRAnchor>* anchors, ::GlobalNamespace::OVRPlugin::SpaceQueryInfo queryInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::FetchAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRAnchor", "FetchAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchors), ::il2cpp_utils::ExtractType(queryInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchors, queryInfo);
}
// Autogenerated method: OVRAnchor.OnSpaceQueryCompleteData
void GlobalNamespace::OVRAnchor::OnSpaceQueryCompleteData(::GlobalNamespace::OVRDeserialize::SpaceQueryCompleteData data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::OnSpaceQueryCompleteData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRAnchor", "OnSpaceQueryCompleteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: OVRAnchor.CreateSpatialAnchorAsync
::GlobalNamespace::OVRTask_1<::GlobalNamespace::OVRAnchor> GlobalNamespace::OVRAnchor::CreateSpatialAnchorAsync(::UnityEngine::Pose trackingSpacePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::CreateSpatialAnchorAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRAnchor", "CreateSpatialAnchorAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingSpacePose)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<::GlobalNamespace::OVRAnchor>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingSpacePose);
}
// Autogenerated method: OVRAnchor.CreateSpatialAnchorAsync
::GlobalNamespace::OVRTask_1<::GlobalNamespace::OVRAnchor> GlobalNamespace::OVRAnchor::CreateSpatialAnchorAsync(::UnityEngine::Transform* transform, ::UnityEngine::Camera* centerEyeCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::CreateSpatialAnchorAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRAnchor", "CreateSpatialAnchorAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(centerEyeCamera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<::GlobalNamespace::OVRAnchor>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, centerEyeCamera);
}
// Autogenerated method: OVRAnchor.get_Handle
uint64_t GlobalNamespace::OVRAnchor::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRAnchor.get_Uuid
::System::Guid GlobalNamespace::OVRAnchor::get_Uuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::get_Uuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Uuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: OVRAnchor..ctor
// ABORTED elsewhere.  GlobalNamespace::OVRAnchor::OVRAnchor(uint64_t handle, ::System::Guid uuid)
// Autogenerated method: OVRAnchor.GetSupportedComponents
bool GlobalNamespace::OVRAnchor::GetSupportedComponents(::System::Collections::Generic::List_1<::GlobalNamespace::OVRPlugin::SpaceComponentType>* components) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::GetSupportedComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSupportedComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(components)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, components);
}
// Autogenerated method: OVRAnchor.Equals
bool GlobalNamespace::OVRAnchor::Equals(::GlobalNamespace::OVRAnchor other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRAnchor), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: OVRAnchor.Dispose
void GlobalNamespace::OVRAnchor::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRAnchor), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRAnchor..cctor
void GlobalNamespace::OVRAnchor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRAnchor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRAnchor.Equals
bool GlobalNamespace::OVRAnchor::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRAnchor.GetHashCode
int GlobalNamespace::OVRAnchor::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRAnchor.ToString
::StringW GlobalNamespace::OVRAnchor::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRAnchor.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::OVRAnchor& lhs, const ::GlobalNamespace::OVRAnchor& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRAnchor", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: OVRAnchor.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::OVRAnchor& lhs, const ::GlobalNamespace::OVRAnchor& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchor::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRAnchor", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRLocatable
#include "GlobalNamespace/OVRLocatable.hpp"
// Including type: OVRLocatable/TrackingSpacePose
#include "GlobalNamespace/OVRLocatable_TrackingSpacePose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRLocatable Null
::GlobalNamespace::OVRLocatable GlobalNamespace::OVRLocatable::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLocatable>("", "OVRLocatable", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRLocatable Null
void GlobalNamespace::OVRLocatable::_set_Null(::GlobalNamespace::OVRLocatable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLocatable", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 <Handle>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRLocatable::dyn_$Handle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::dyn_$Handle$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handle>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLocatable.IOVRAnchorComponent<OVRLocatable>.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRLocatable::IOVRAnchorComponent$OVRLocatable$_get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::IOVRAnchorComponent<OVRLocatable>.get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRLocatable), 7));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRLocatable.IOVRAnchorComponent<OVRLocatable>.get_Handle
uint64_t GlobalNamespace::OVRLocatable::IOVRAnchorComponent$OVRLocatable$_get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::IOVRAnchorComponent<OVRLocatable>.get_Handle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRLocatable), 8));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRLocatable.IOVRAnchorComponent<OVRLocatable>.FromAnchor
::GlobalNamespace::OVRLocatable GlobalNamespace::OVRLocatable::IOVRAnchorComponent$OVRLocatable$_FromAnchor(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::IOVRAnchorComponent<OVRLocatable>.FromAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRLocatable), 9));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLocatable, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRLocatable.get_IsNull
bool GlobalNamespace::OVRLocatable::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRLocatable), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRLocatable.get_IsEnabled
bool GlobalNamespace::OVRLocatable::get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::get_IsEnabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRLocatable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRLocatable.SetEnabledAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRLocatable::SetEnabledAsync(bool enabled, double timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::SetEnabledAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRLocatable), 6));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method, enabled, timeout);
}
// Autogenerated method: OVRLocatable.Equals
bool GlobalNamespace::OVRLocatable::Equals(::GlobalNamespace::OVRLocatable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRLocatable), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: OVRLocatable.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRLocatable::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRLocatable.get_Handle
uint64_t GlobalNamespace::OVRLocatable::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRLocatable..ctor
GlobalNamespace::OVRLocatable::OVRLocatable(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRLocatable.TryGetSceneAnchorPose
bool GlobalNamespace::OVRLocatable::TryGetSceneAnchorPose(ByRef<::GlobalNamespace::OVRLocatable::TrackingSpacePose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::TryGetSceneAnchorPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetSceneAnchorPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRLocatable::TrackingSpacePose&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: OVRLocatable.TryGetSpatialAnchorPose
bool GlobalNamespace::OVRLocatable::TryGetSpatialAnchorPose(ByRef<::GlobalNamespace::OVRLocatable::TrackingSpacePose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::TryGetSpatialAnchorPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetSpatialAnchorPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRLocatable::TrackingSpacePose&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pose));
}
// Autogenerated method: OVRLocatable..cctor
void GlobalNamespace::OVRLocatable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLocatable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLocatable.Equals
bool GlobalNamespace::OVRLocatable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRLocatable.GetHashCode
int GlobalNamespace::OVRLocatable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRLocatable.ToString
::StringW GlobalNamespace::OVRLocatable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRLocatable.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::OVRLocatable& lhs, const ::GlobalNamespace::OVRLocatable& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLocatable", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: OVRLocatable.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::OVRLocatable& lhs, const ::GlobalNamespace::OVRLocatable& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLocatable", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLocatable/TrackingSpacePose
#include "GlobalNamespace/OVRLocatable_TrackingSpacePose.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Nullable`1<UnityEngine.Vector3> <Position>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Vector3>& GlobalNamespace::OVRLocatable::TrackingSpacePose::dyn_$Position$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::TrackingSpacePose::dyn_$Position$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Position>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Nullable`1<UnityEngine.Quaternion> <Rotation>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Quaternion>& GlobalNamespace::OVRLocatable::TrackingSpacePose::dyn_$Rotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::TrackingSpacePose::dyn_$Rotation$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Rotation>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRPlugin/SpaceLocationFlags _flags
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::SpaceLocationFlags& GlobalNamespace::OVRLocatable::TrackingSpacePose::dyn__flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::TrackingSpacePose::dyn__flags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flags"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::SpaceLocationFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLocatable/TrackingSpacePose.get_Position
::System::Nullable_1<::UnityEngine::Vector3> GlobalNamespace::OVRLocatable::TrackingSpacePose::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::TrackingSpacePose::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: OVRLocatable/TrackingSpacePose.get_Rotation
::System::Nullable_1<::UnityEngine::Quaternion> GlobalNamespace::OVRLocatable::TrackingSpacePose::get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::TrackingSpacePose::get_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::Quaternion>, false>(this, ___internal__method);
}
// Autogenerated method: OVRLocatable/TrackingSpacePose.get_IsPositionTracked
bool GlobalNamespace::OVRLocatable::TrackingSpacePose::get_IsPositionTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::TrackingSpacePose::get_IsPositionTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsPositionTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRLocatable/TrackingSpacePose.get_IsRotationTracked
bool GlobalNamespace::OVRLocatable::TrackingSpacePose::get_IsRotationTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::TrackingSpacePose::get_IsRotationTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsRotationTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRLocatable/TrackingSpacePose..ctor
GlobalNamespace::OVRLocatable::TrackingSpacePose::TrackingSpacePose(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::GlobalNamespace::OVRPlugin::SpaceLocationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::TrackingSpacePose::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation, flags);
}
// Autogenerated method: OVRLocatable/TrackingSpacePose.ComputeWorldPosition
::System::Nullable_1<::UnityEngine::Vector3> GlobalNamespace::OVRLocatable::TrackingSpacePose::ComputeWorldPosition(::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::TrackingSpacePose::ComputeWorldPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ComputeWorldPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::Vector3>, false>(this, ___internal__method, camera);
}
// Autogenerated method: OVRLocatable/TrackingSpacePose.ComputeWorldRotation
::System::Nullable_1<::UnityEngine::Quaternion> GlobalNamespace::OVRLocatable::TrackingSpacePose::ComputeWorldRotation(::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLocatable::TrackingSpacePose::ComputeWorldRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ComputeWorldRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::Quaternion>, false>(this, ___internal__method, camera);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRStorable
#include "GlobalNamespace/OVRStorable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRStorable Null
::GlobalNamespace::OVRStorable GlobalNamespace::OVRStorable::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRStorable>("", "OVRStorable", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRStorable Null
void GlobalNamespace::OVRStorable::_set_Null(::GlobalNamespace::OVRStorable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRStorable", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 <Handle>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRStorable::dyn_$Handle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::dyn_$Handle$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handle>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRStorable.IOVRAnchorComponent<OVRStorable>.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRStorable::IOVRAnchorComponent$OVRStorable$_get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::IOVRAnchorComponent<OVRStorable>.get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRStorable), 7));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRStorable.IOVRAnchorComponent<OVRStorable>.get_Handle
uint64_t GlobalNamespace::OVRStorable::IOVRAnchorComponent$OVRStorable$_get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::IOVRAnchorComponent<OVRStorable>.get_Handle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRStorable), 8));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRStorable.IOVRAnchorComponent<OVRStorable>.FromAnchor
::GlobalNamespace::OVRStorable GlobalNamespace::OVRStorable::IOVRAnchorComponent$OVRStorable$_FromAnchor(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::IOVRAnchorComponent<OVRStorable>.FromAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRStorable), 9));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRStorable, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRStorable.get_IsNull
bool GlobalNamespace::OVRStorable::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRStorable), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRStorable.get_IsEnabled
bool GlobalNamespace::OVRStorable::get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::get_IsEnabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRStorable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRStorable.SetEnabledAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRStorable::SetEnabledAsync(bool enabled, double timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::SetEnabledAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRStorable), 6));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method, enabled, timeout);
}
// Autogenerated method: OVRStorable.Equals
bool GlobalNamespace::OVRStorable::Equals(::GlobalNamespace::OVRStorable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRStorable), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: OVRStorable.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRStorable::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRStorable.get_Handle
uint64_t GlobalNamespace::OVRStorable::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRStorable..ctor
GlobalNamespace::OVRStorable::OVRStorable(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRStorable..cctor
void GlobalNamespace::OVRStorable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRStorable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRStorable.Equals
bool GlobalNamespace::OVRStorable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRStorable.GetHashCode
int GlobalNamespace::OVRStorable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRStorable.ToString
::StringW GlobalNamespace::OVRStorable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRStorable.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::OVRStorable& lhs, const ::GlobalNamespace::OVRStorable& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRStorable", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: OVRStorable.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::OVRStorable& lhs, const ::GlobalNamespace::OVRStorable& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRStorable::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRStorable", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSharable
#include "GlobalNamespace/OVRSharable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRSharable Null
::GlobalNamespace::OVRSharable GlobalNamespace::OVRSharable::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSharable>("", "OVRSharable", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRSharable Null
void GlobalNamespace::OVRSharable::_set_Null(::GlobalNamespace::OVRSharable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSharable", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 <Handle>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRSharable::dyn_$Handle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::dyn_$Handle$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handle>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSharable.IOVRAnchorComponent<OVRSharable>.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRSharable::IOVRAnchorComponent$OVRSharable$_get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::IOVRAnchorComponent<OVRSharable>.get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSharable), 7));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSharable.IOVRAnchorComponent<OVRSharable>.get_Handle
uint64_t GlobalNamespace::OVRSharable::IOVRAnchorComponent$OVRSharable$_get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::IOVRAnchorComponent<OVRSharable>.get_Handle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSharable), 8));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSharable.IOVRAnchorComponent<OVRSharable>.FromAnchor
::GlobalNamespace::OVRSharable GlobalNamespace::OVRSharable::IOVRAnchorComponent$OVRSharable$_FromAnchor(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::IOVRAnchorComponent<OVRSharable>.FromAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSharable), 9));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSharable, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRSharable.get_IsNull
bool GlobalNamespace::OVRSharable::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSharable), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSharable.get_IsEnabled
bool GlobalNamespace::OVRSharable::get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::get_IsEnabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSharable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSharable.SetEnabledAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRSharable::SetEnabledAsync(bool enabled, double timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::SetEnabledAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSharable), 6));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method, enabled, timeout);
}
// Autogenerated method: OVRSharable.Equals
bool GlobalNamespace::OVRSharable::Equals(::GlobalNamespace::OVRSharable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSharable), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: OVRSharable.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRSharable::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSharable.get_Handle
uint64_t GlobalNamespace::OVRSharable::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSharable..ctor
GlobalNamespace::OVRSharable::OVRSharable(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRSharable..cctor
void GlobalNamespace::OVRSharable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSharable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSharable.Equals
bool GlobalNamespace::OVRSharable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSharable.GetHashCode
int GlobalNamespace::OVRSharable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSharable.ToString
::StringW GlobalNamespace::OVRSharable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSharable.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::OVRSharable& lhs, const ::GlobalNamespace::OVRSharable& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSharable", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: OVRSharable.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::OVRSharable& lhs, const ::GlobalNamespace::OVRSharable& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSharable::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSharable", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRBounded2D
#include "GlobalNamespace/OVRBounded2D.hpp"
// Including type: OVRAnchor
#include "GlobalNamespace/OVRAnchor.hpp"
// Including type: OVRTask`1
#include "GlobalNamespace/OVRTask_1.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
// Including type: OVRPlugin/SpaceComponentType
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Rectf
#include "GlobalNamespace/OVRPlugin_Rectf.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRBounded2D Null
::GlobalNamespace::OVRBounded2D GlobalNamespace::OVRBounded2D::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBounded2D>("", "OVRBounded2D", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRBounded2D Null
void GlobalNamespace::OVRBounded2D::_set_Null(::GlobalNamespace::OVRBounded2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBounded2D", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 <Handle>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRBounded2D::dyn_$Handle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::dyn_$Handle$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handle>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRBounded2D.IOVRAnchorComponent<OVRBounded2D>.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRBounded2D::IOVRAnchorComponent$OVRBounded2D$_get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::IOVRAnchorComponent<OVRBounded2D>.get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRBounded2D), 7));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded2D.IOVRAnchorComponent<OVRBounded2D>.get_Handle
uint64_t GlobalNamespace::OVRBounded2D::IOVRAnchorComponent$OVRBounded2D$_get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::IOVRAnchorComponent<OVRBounded2D>.get_Handle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRBounded2D), 8));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded2D.IOVRAnchorComponent<OVRBounded2D>.FromAnchor
::GlobalNamespace::OVRBounded2D GlobalNamespace::OVRBounded2D::IOVRAnchorComponent$OVRBounded2D$_FromAnchor(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::IOVRAnchorComponent<OVRBounded2D>.FromAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRBounded2D), 9));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBounded2D, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRBounded2D.get_IsNull
bool GlobalNamespace::OVRBounded2D::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRBounded2D), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded2D.get_IsEnabled
bool GlobalNamespace::OVRBounded2D::get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::get_IsEnabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRBounded2D), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded2D.IOVRAnchorComponent<OVRBounded2D>.SetEnabledAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRBounded2D::IOVRAnchorComponent$OVRBounded2D$_SetEnabledAsync(bool enabled, double timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::IOVRAnchorComponent<OVRBounded2D>.SetEnabledAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRBounded2D), 6));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method, enabled, timeout);
}
// Autogenerated method: OVRBounded2D.Equals
bool GlobalNamespace::OVRBounded2D::Equals(::GlobalNamespace::OVRBounded2D other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRBounded2D), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: OVRBounded2D.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRBounded2D::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded2D.get_Handle
uint64_t GlobalNamespace::OVRBounded2D::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded2D..ctor
GlobalNamespace::OVRBounded2D::OVRBounded2D(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRBounded2D.get_BoundingBox
::UnityEngine::Rect GlobalNamespace::OVRBounded2D::get_BoundingBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::get_BoundingBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_BoundingBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded2D.ConvertRect
::UnityEngine::Rect GlobalNamespace::OVRBounded2D::ConvertRect(::GlobalNamespace::OVRPlugin::Rectf openXrRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::ConvertRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConvertRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(openXrRect)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method, openXrRect);
}
// Autogenerated method: OVRBounded2D.TryGetBoundaryPointsCount
bool GlobalNamespace::OVRBounded2D::TryGetBoundaryPointsCount(ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::TryGetBoundaryPointsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetBoundaryPointsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(count));
}
// Autogenerated method: OVRBounded2D.TryGetBoundaryPoints
bool GlobalNamespace::OVRBounded2D::TryGetBoundaryPoints(::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::TryGetBoundaryPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetBoundaryPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, positions);
}
// Autogenerated method: OVRBounded2D..cctor
void GlobalNamespace::OVRBounded2D::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRBounded2D", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRBounded2D.Equals
bool GlobalNamespace::OVRBounded2D::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRBounded2D.GetHashCode
int GlobalNamespace::OVRBounded2D::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded2D.ToString
::StringW GlobalNamespace::OVRBounded2D::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded2D.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::OVRBounded2D& lhs, const ::GlobalNamespace::OVRBounded2D& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRBounded2D", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: OVRBounded2D.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::OVRBounded2D& lhs, const ::GlobalNamespace::OVRBounded2D& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded2D::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRBounded2D", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRBounded3D
#include "GlobalNamespace/OVRBounded3D.hpp"
// Including type: OVRAnchor
#include "GlobalNamespace/OVRAnchor.hpp"
// Including type: OVRTask`1
#include "GlobalNamespace/OVRTask_1.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: OVRPlugin/SpaceComponentType
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Boundsf
#include "GlobalNamespace/OVRPlugin_Boundsf.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRBounded3D Null
::GlobalNamespace::OVRBounded3D GlobalNamespace::OVRBounded3D::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBounded3D>("", "OVRBounded3D", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRBounded3D Null
void GlobalNamespace::OVRBounded3D::_set_Null(::GlobalNamespace::OVRBounded3D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBounded3D", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 <Handle>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRBounded3D::dyn_$Handle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::dyn_$Handle$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handle>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRBounded3D.IOVRAnchorComponent<OVRBounded3D>.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRBounded3D::IOVRAnchorComponent$OVRBounded3D$_get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::IOVRAnchorComponent<OVRBounded3D>.get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRBounded3D), 7));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded3D.IOVRAnchorComponent<OVRBounded3D>.get_Handle
uint64_t GlobalNamespace::OVRBounded3D::IOVRAnchorComponent$OVRBounded3D$_get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::IOVRAnchorComponent<OVRBounded3D>.get_Handle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRBounded3D), 8));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded3D.IOVRAnchorComponent<OVRBounded3D>.FromAnchor
::GlobalNamespace::OVRBounded3D GlobalNamespace::OVRBounded3D::IOVRAnchorComponent$OVRBounded3D$_FromAnchor(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::IOVRAnchorComponent<OVRBounded3D>.FromAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRBounded3D), 9));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBounded3D, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRBounded3D.get_IsNull
bool GlobalNamespace::OVRBounded3D::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRBounded3D), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded3D.get_IsEnabled
bool GlobalNamespace::OVRBounded3D::get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::get_IsEnabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRBounded3D), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded3D.IOVRAnchorComponent<OVRBounded3D>.SetEnabledAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRBounded3D::IOVRAnchorComponent$OVRBounded3D$_SetEnabledAsync(bool enabled, double timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::IOVRAnchorComponent<OVRBounded3D>.SetEnabledAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRBounded3D), 6));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method, enabled, timeout);
}
// Autogenerated method: OVRBounded3D.Equals
bool GlobalNamespace::OVRBounded3D::Equals(::GlobalNamespace::OVRBounded3D other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRBounded3D), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: OVRBounded3D.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRBounded3D::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded3D.get_Handle
uint64_t GlobalNamespace::OVRBounded3D::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded3D..ctor
GlobalNamespace::OVRBounded3D::OVRBounded3D(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRBounded3D.get_BoundingBox
::UnityEngine::Bounds GlobalNamespace::OVRBounded3D::get_BoundingBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::get_BoundingBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_BoundingBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded3D.ConvertBounds
::UnityEngine::Bounds GlobalNamespace::OVRBounded3D::ConvertBounds(::GlobalNamespace::OVRPlugin::Boundsf openXrBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::ConvertBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConvertBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(openXrBounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method, openXrBounds);
}
// Autogenerated method: OVRBounded3D..cctor
void GlobalNamespace::OVRBounded3D::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRBounded3D", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRBounded3D.Equals
bool GlobalNamespace::OVRBounded3D::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRBounded3D.GetHashCode
int GlobalNamespace::OVRBounded3D::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded3D.ToString
::StringW GlobalNamespace::OVRBounded3D::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRBounded3D.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::OVRBounded3D& lhs, const ::GlobalNamespace::OVRBounded3D& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRBounded3D", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: OVRBounded3D.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::OVRBounded3D& lhs, const ::GlobalNamespace::OVRBounded3D& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBounded3D::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRBounded3D", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSemanticLabels
#include "GlobalNamespace/OVRSemanticLabels.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRSemanticLabels Null
::GlobalNamespace::OVRSemanticLabels GlobalNamespace::OVRSemanticLabels::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRSemanticLabels>("", "OVRSemanticLabels", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRSemanticLabels Null
void GlobalNamespace::OVRSemanticLabels::_set_Null(::GlobalNamespace::OVRSemanticLabels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSemanticLabels", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 <Handle>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRSemanticLabels::dyn_$Handle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::dyn_$Handle$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handle>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSemanticLabels.IOVRAnchorComponent<OVRSemanticLabels>.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRSemanticLabels::IOVRAnchorComponent$OVRSemanticLabels$_get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::IOVRAnchorComponent<OVRSemanticLabels>.get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSemanticLabels), 7));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSemanticLabels.IOVRAnchorComponent<OVRSemanticLabels>.get_Handle
uint64_t GlobalNamespace::OVRSemanticLabels::IOVRAnchorComponent$OVRSemanticLabels$_get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::IOVRAnchorComponent<OVRSemanticLabels>.get_Handle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSemanticLabels), 8));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSemanticLabels.IOVRAnchorComponent<OVRSemanticLabels>.FromAnchor
::GlobalNamespace::OVRSemanticLabels GlobalNamespace::OVRSemanticLabels::IOVRAnchorComponent$OVRSemanticLabels$_FromAnchor(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::IOVRAnchorComponent<OVRSemanticLabels>.FromAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSemanticLabels), 9));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSemanticLabels, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRSemanticLabels.get_IsNull
bool GlobalNamespace::OVRSemanticLabels::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSemanticLabels), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSemanticLabels.get_IsEnabled
bool GlobalNamespace::OVRSemanticLabels::get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::get_IsEnabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSemanticLabels), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSemanticLabels.IOVRAnchorComponent<OVRSemanticLabels>.SetEnabledAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRSemanticLabels::IOVRAnchorComponent$OVRSemanticLabels$_SetEnabledAsync(bool enabled, double timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::IOVRAnchorComponent<OVRSemanticLabels>.SetEnabledAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSemanticLabels), 6));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method, enabled, timeout);
}
// Autogenerated method: OVRSemanticLabels.Equals
bool GlobalNamespace::OVRSemanticLabels::Equals(::GlobalNamespace::OVRSemanticLabels other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRSemanticLabels), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: OVRSemanticLabels.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRSemanticLabels::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSemanticLabels.get_Handle
uint64_t GlobalNamespace::OVRSemanticLabels::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSemanticLabels..ctor
GlobalNamespace::OVRSemanticLabels::OVRSemanticLabels(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRSemanticLabels.get_Labels
::StringW GlobalNamespace::OVRSemanticLabels::get_Labels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::get_Labels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Labels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSemanticLabels..cctor
void GlobalNamespace::OVRSemanticLabels::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSemanticLabels", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSemanticLabels.Equals
bool GlobalNamespace::OVRSemanticLabels::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSemanticLabels.GetHashCode
int GlobalNamespace::OVRSemanticLabels::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSemanticLabels.ToString
::StringW GlobalNamespace::OVRSemanticLabels::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSemanticLabels.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::OVRSemanticLabels& lhs, const ::GlobalNamespace::OVRSemanticLabels& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSemanticLabels", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: OVRSemanticLabels.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::OVRSemanticLabels& lhs, const ::GlobalNamespace::OVRSemanticLabels& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRSemanticLabels::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRSemanticLabels", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRRoomLayout
#include "GlobalNamespace/OVRRoomLayout.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRRoomLayout Null
::GlobalNamespace::OVRRoomLayout GlobalNamespace::OVRRoomLayout::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRRoomLayout>("", "OVRRoomLayout", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRRoomLayout Null
void GlobalNamespace::OVRRoomLayout::_set_Null(::GlobalNamespace::OVRRoomLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRRoomLayout", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 <Handle>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRRoomLayout::dyn_$Handle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::dyn_$Handle$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handle>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRRoomLayout.IOVRAnchorComponent<OVRRoomLayout>.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRRoomLayout::IOVRAnchorComponent$OVRRoomLayout$_get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::IOVRAnchorComponent<OVRRoomLayout>.get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRRoomLayout), 7));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRRoomLayout.IOVRAnchorComponent<OVRRoomLayout>.get_Handle
uint64_t GlobalNamespace::OVRRoomLayout::IOVRAnchorComponent$OVRRoomLayout$_get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::IOVRAnchorComponent<OVRRoomLayout>.get_Handle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRRoomLayout), 8));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRRoomLayout.IOVRAnchorComponent<OVRRoomLayout>.FromAnchor
::GlobalNamespace::OVRRoomLayout GlobalNamespace::OVRRoomLayout::IOVRAnchorComponent$OVRRoomLayout$_FromAnchor(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::IOVRAnchorComponent<OVRRoomLayout>.FromAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRRoomLayout), 9));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRRoomLayout, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRRoomLayout.get_IsNull
bool GlobalNamespace::OVRRoomLayout::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRRoomLayout), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRRoomLayout.get_IsEnabled
bool GlobalNamespace::OVRRoomLayout::get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::get_IsEnabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRRoomLayout), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRRoomLayout.IOVRAnchorComponent<OVRRoomLayout>.SetEnabledAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRRoomLayout::IOVRAnchorComponent$OVRRoomLayout$_SetEnabledAsync(bool enabled, double timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::IOVRAnchorComponent<OVRRoomLayout>.SetEnabledAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRRoomLayout), 6));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method, enabled, timeout);
}
// Autogenerated method: OVRRoomLayout.Equals
bool GlobalNamespace::OVRRoomLayout::Equals(::GlobalNamespace::OVRRoomLayout other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRRoomLayout), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: OVRRoomLayout.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRRoomLayout::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRRoomLayout.get_Handle
uint64_t GlobalNamespace::OVRRoomLayout::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRRoomLayout..ctor
GlobalNamespace::OVRRoomLayout::OVRRoomLayout(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRRoomLayout.FetchLayoutAnchorsAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRRoomLayout::FetchLayoutAnchorsAsync(::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* anchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::FetchLayoutAnchorsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FetchLayoutAnchorsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchors)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method, anchors);
}
// Autogenerated method: OVRRoomLayout.TryGetRoomLayout
bool GlobalNamespace::OVRRoomLayout::TryGetRoomLayout(ByRef<::System::Guid> ceiling, ByRef<::System::Guid> floor, ByRef<::ArrayW<::System::Guid>> walls) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::TryGetRoomLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetRoomLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Guid&>(), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::System::Guid>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(ceiling), byref(floor), byref(walls));
}
// Autogenerated method: OVRRoomLayout..cctor
void GlobalNamespace::OVRRoomLayout::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRRoomLayout", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRRoomLayout.Equals
bool GlobalNamespace::OVRRoomLayout::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRRoomLayout.GetHashCode
int GlobalNamespace::OVRRoomLayout::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRRoomLayout.ToString
::StringW GlobalNamespace::OVRRoomLayout::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRRoomLayout.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::OVRRoomLayout& lhs, const ::GlobalNamespace::OVRRoomLayout& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRRoomLayout", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: OVRRoomLayout.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::OVRRoomLayout& lhs, const ::GlobalNamespace::OVRRoomLayout& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRRoomLayout::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRRoomLayout", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRAnchorContainer
#include "GlobalNamespace/OVRAnchorContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRAnchorContainer Null
::GlobalNamespace::OVRAnchorContainer GlobalNamespace::OVRAnchorContainer::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRAnchorContainer>("", "OVRAnchorContainer", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRAnchorContainer Null
void GlobalNamespace::OVRAnchorContainer::_set_Null(::GlobalNamespace::OVRAnchorContainer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRAnchorContainer", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 <Handle>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRAnchorContainer::dyn_$Handle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::dyn_$Handle$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handle>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRAnchorContainer.IOVRAnchorComponent<OVRAnchorContainer>.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRAnchorContainer::IOVRAnchorComponent$OVRAnchorContainer$_get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::IOVRAnchorComponent<OVRAnchorContainer>.get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRAnchorContainer), 7));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRAnchorContainer.IOVRAnchorComponent<OVRAnchorContainer>.get_Handle
uint64_t GlobalNamespace::OVRAnchorContainer::IOVRAnchorComponent$OVRAnchorContainer$_get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::IOVRAnchorComponent<OVRAnchorContainer>.get_Handle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRAnchorContainer), 8));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRAnchorContainer.IOVRAnchorComponent<OVRAnchorContainer>.FromAnchor
::GlobalNamespace::OVRAnchorContainer GlobalNamespace::OVRAnchorContainer::IOVRAnchorComponent$OVRAnchorContainer$_FromAnchor(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::IOVRAnchorComponent<OVRAnchorContainer>.FromAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRAnchorContainer), 9));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRAnchorContainer, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRAnchorContainer.get_IsNull
bool GlobalNamespace::OVRAnchorContainer::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRAnchorContainer), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRAnchorContainer.get_IsEnabled
bool GlobalNamespace::OVRAnchorContainer::get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::get_IsEnabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRAnchorContainer), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRAnchorContainer.IOVRAnchorComponent<OVRAnchorContainer>.SetEnabledAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRAnchorContainer::IOVRAnchorComponent$OVRAnchorContainer$_SetEnabledAsync(bool enabled, double timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::IOVRAnchorComponent<OVRAnchorContainer>.SetEnabledAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRAnchorContainer), 6));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method, enabled, timeout);
}
// Autogenerated method: OVRAnchorContainer.Equals
bool GlobalNamespace::OVRAnchorContainer::Equals(::GlobalNamespace::OVRAnchorContainer other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRAnchorContainer), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: OVRAnchorContainer.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRAnchorContainer::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRAnchorContainer.get_Handle
uint64_t GlobalNamespace::OVRAnchorContainer::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRAnchorContainer..ctor
GlobalNamespace::OVRAnchorContainer::OVRAnchorContainer(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRAnchorContainer.get_Uuids
::ArrayW<::System::Guid> GlobalNamespace::OVRAnchorContainer::get_Uuids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::get_Uuids");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Uuids", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Guid>, false>(this, ___internal__method);
}
// Autogenerated method: OVRAnchorContainer.FetchChildrenAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRAnchorContainer::FetchChildrenAsync(::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* anchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::FetchChildrenAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FetchChildrenAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchors)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method, anchors);
}
// Autogenerated method: OVRAnchorContainer..cctor
void GlobalNamespace::OVRAnchorContainer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRAnchorContainer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRAnchorContainer.Equals
bool GlobalNamespace::OVRAnchorContainer::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRAnchorContainer.GetHashCode
int GlobalNamespace::OVRAnchorContainer::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRAnchorContainer.ToString
::StringW GlobalNamespace::OVRAnchorContainer::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRAnchorContainer.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::OVRAnchorContainer& lhs, const ::GlobalNamespace::OVRAnchorContainer& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRAnchorContainer", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: OVRAnchorContainer.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::OVRAnchorContainer& lhs, const ::GlobalNamespace::OVRAnchorContainer& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRAnchorContainer::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRAnchorContainer", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRTriangleMesh
#include "GlobalNamespace/OVRTriangleMesh.hpp"
// Including type: OVRTriangleMesh/GetMeshJob
#include "GlobalNamespace/OVRTriangleMesh_GetMeshJob.hpp"
// Including type: OVRTriangleMesh/Triangle
#include "GlobalNamespace/OVRTriangleMesh_Triangle.hpp"
// Including type: OVRTriangleMesh/FlipTriangleWindingJob
#include "GlobalNamespace/OVRTriangleMesh_FlipTriangleWindingJob.hpp"
// Including type: OVRTriangleMesh/NegateXJob
#include "GlobalNamespace/OVRTriangleMesh_NegateXJob.hpp"
// Including type: OVRAnchor
#include "GlobalNamespace/OVRAnchor.hpp"
// Including type: OVRTask`1
#include "GlobalNamespace/OVRTask_1.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
// Including type: Unity.Jobs.JobHandle
#include "Unity/Jobs/JobHandle.hpp"
// Including type: OVRPlugin/SpaceComponentType
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRTriangleMesh Null
::GlobalNamespace::OVRTriangleMesh GlobalNamespace::OVRTriangleMesh::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTriangleMesh>("", "OVRTriangleMesh", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRTriangleMesh Null
void GlobalNamespace::OVRTriangleMesh::_set_Null(::GlobalNamespace::OVRTriangleMesh value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTriangleMesh", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 <Handle>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRTriangleMesh::dyn_$Handle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::dyn_$Handle$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handle>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTriangleMesh.IOVRAnchorComponent<OVRTriangleMesh>.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRTriangleMesh::IOVRAnchorComponent$OVRTriangleMesh$_get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::IOVRAnchorComponent<OVRTriangleMesh>.get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRTriangleMesh), 7));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRTriangleMesh.IOVRAnchorComponent<OVRTriangleMesh>.get_Handle
uint64_t GlobalNamespace::OVRTriangleMesh::IOVRAnchorComponent$OVRTriangleMesh$_get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::IOVRAnchorComponent<OVRTriangleMesh>.get_Handle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRTriangleMesh), 8));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRTriangleMesh.IOVRAnchorComponent<OVRTriangleMesh>.FromAnchor
::GlobalNamespace::OVRTriangleMesh GlobalNamespace::OVRTriangleMesh::IOVRAnchorComponent$OVRTriangleMesh$_FromAnchor(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::IOVRAnchorComponent<OVRTriangleMesh>.FromAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRTriangleMesh), 9));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTriangleMesh, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRTriangleMesh.get_IsNull
bool GlobalNamespace::OVRTriangleMesh::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRTriangleMesh), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTriangleMesh.get_IsEnabled
bool GlobalNamespace::OVRTriangleMesh::get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::get_IsEnabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRTriangleMesh), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTriangleMesh.IOVRAnchorComponent<OVRTriangleMesh>.SetEnabledAsync
::GlobalNamespace::OVRTask_1<bool> GlobalNamespace::OVRTriangleMesh::IOVRAnchorComponent$OVRTriangleMesh$_SetEnabledAsync(bool enabled, double timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::IOVRAnchorComponent<OVRTriangleMesh>.SetEnabledAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRTriangleMesh), 6));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTask_1<bool>, false>(this, ___internal__method, enabled, timeout);
}
// Autogenerated method: OVRTriangleMesh.Equals
bool GlobalNamespace::OVRTriangleMesh::Equals(::GlobalNamespace::OVRTriangleMesh other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRTriangleMesh), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: OVRTriangleMesh.get_Type
::GlobalNamespace::OVRPlugin::SpaceComponentType GlobalNamespace::OVRTriangleMesh::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceComponentType, false>(this, ___internal__method);
}
// Autogenerated method: OVRTriangleMesh.get_Handle
uint64_t GlobalNamespace::OVRTriangleMesh::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRTriangleMesh..ctor
GlobalNamespace::OVRTriangleMesh::OVRTriangleMesh(::GlobalNamespace::OVRAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor);
}
// Autogenerated method: OVRTriangleMesh.TryGetCounts
bool GlobalNamespace::OVRTriangleMesh::TryGetCounts(ByRef<int> vertexCount, ByRef<int> triangleCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::TryGetCounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetCounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(vertexCount), byref(triangleCount));
}
// Autogenerated method: OVRTriangleMesh.TryGetMeshRawUntransformed
bool GlobalNamespace::OVRTriangleMesh::TryGetMeshRawUntransformed(::Unity::Collections::NativeArray_1<::UnityEngine::Vector3> positions, ::Unity::Collections::NativeArray_1<int> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::TryGetMeshRawUntransformed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetMeshRawUntransformed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(indices)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, positions, indices);
}
// Autogenerated method: OVRTriangleMesh.TryGetMesh
bool GlobalNamespace::OVRTriangleMesh::TryGetMesh(::Unity::Collections::NativeArray_1<::UnityEngine::Vector3> positions, ::Unity::Collections::NativeArray_1<int> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::TryGetMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(indices)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, positions, indices);
}
// Autogenerated method: OVRTriangleMesh.ScheduleGetMeshJob
::Unity::Jobs::JobHandle GlobalNamespace::OVRTriangleMesh::ScheduleGetMeshJob(::Unity::Collections::NativeArray_1<::UnityEngine::Vector3> positions, ::Unity::Collections::NativeArray_1<int> indices, ::Unity::Jobs::JobHandle dependencies) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::ScheduleGetMeshJob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ScheduleGetMeshJob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(dependencies)})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::Jobs::JobHandle, false>(this, ___internal__method, positions, indices, dependencies);
}
// Autogenerated method: OVRTriangleMesh..cctor
void GlobalNamespace::OVRTriangleMesh::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTriangleMesh", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTriangleMesh.Equals
bool GlobalNamespace::OVRTriangleMesh::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRTriangleMesh.GetHashCode
int GlobalNamespace::OVRTriangleMesh::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRTriangleMesh.ToString
::StringW GlobalNamespace::OVRTriangleMesh::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRTriangleMesh.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::OVRTriangleMesh& lhs, const ::GlobalNamespace::OVRTriangleMesh& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTriangleMesh", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: OVRTriangleMesh.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::OVRTriangleMesh& lhs, const ::GlobalNamespace::OVRTriangleMesh& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTriangleMesh", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTriangleMesh/GetMeshJob
#include "GlobalNamespace/OVRTriangleMesh_GetMeshJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 Space
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRTriangleMesh::GetMeshJob::dyn_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::GetMeshJob::dyn_Space");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Space"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Vector3> Positions
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>& GlobalNamespace::OVRTriangleMesh::GetMeshJob::dyn_Positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::GetMeshJob::dyn_Positions");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Positions"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Int32> Indices
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& GlobalNamespace::OVRTriangleMesh::GetMeshJob::dyn_Indices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::GetMeshJob::dyn_Indices");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Indices"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTriangleMesh/GetMeshJob.Execute
void GlobalNamespace::OVRTriangleMesh::GetMeshJob::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::GetMeshJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRTriangleMesh::GetMeshJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTriangleMesh/FlipTriangleWindingJob
#include "GlobalNamespace/OVRTriangleMesh_FlipTriangleWindingJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<OVRTriangleMesh/Triangle> Triangles
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::GlobalNamespace::OVRTriangleMesh::Triangle>& GlobalNamespace::OVRTriangleMesh::FlipTriangleWindingJob::dyn_Triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::FlipTriangleWindingJob::dyn_Triangles");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Triangles"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::GlobalNamespace::OVRTriangleMesh::Triangle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTriangleMesh/FlipTriangleWindingJob.Execute
void GlobalNamespace::OVRTriangleMesh::FlipTriangleWindingJob::Execute(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::FlipTriangleWindingJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRTriangleMesh::FlipTriangleWindingJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTriangleMesh/NegateXJob
#include "GlobalNamespace/OVRTriangleMesh_NegateXJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Vector3> Positions
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>& GlobalNamespace::OVRTriangleMesh::NegateXJob::dyn_Positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::NegateXJob::dyn_Positions");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Positions"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTriangleMesh/NegateXJob.Execute
void GlobalNamespace::OVRTriangleMesh::NegateXJob::Execute(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTriangleMesh::NegateXJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRTriangleMesh::NegateXJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRBody
#include "GlobalNamespace/OVRBody.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
// Including type: OVRSkeleton/SkeletonPoseData
#include "GlobalNamespace/OVRSkeleton_SkeletonPoseData.hpp"
// Including type: OVRSkeletonRenderer/SkeletonRendererData
#include "GlobalNamespace/OVRSkeletonRenderer_SkeletonRendererData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRPermissionsRequester/Permission BodyTrackingPermission
::GlobalNamespace::OVRPermissionsRequester::Permission GlobalNamespace::OVRBody::_get_BodyTrackingPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::_get_BodyTrackingPermission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPermissionsRequester::Permission>("", "OVRBody", "BodyTrackingPermission"));
}
// Autogenerated static field setter
// Set static field: static private OVRPermissionsRequester/Permission BodyTrackingPermission
void GlobalNamespace::OVRBody::_set_BodyTrackingPermission(::GlobalNamespace::OVRPermissionsRequester::Permission value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::_set_BodyTrackingPermission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBody", "BodyTrackingPermission", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _trackingInstanceCount
int GlobalNamespace::OVRBody::_get__trackingInstanceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::_get__trackingInstanceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRBody", "_trackingInstanceCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _trackingInstanceCount
void GlobalNamespace::OVRBody::_set__trackingInstanceCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::_set__trackingInstanceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBody", "_trackingInstanceCount", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/BodyState _bodyState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::BodyState& GlobalNamespace::OVRBody::dyn__bodyState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::dyn__bodyState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bodyState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::BodyState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/Quatf[] _boneRotations
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRPlugin::Quatf>& GlobalNamespace::OVRBody::dyn__boneRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::dyn__boneRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boneRotations"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRPlugin::Quatf>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/Vector3f[] _boneTranslations
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRPlugin::Vector3f>& GlobalNamespace::OVRBody::dyn__boneTranslations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::dyn__boneTranslations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boneTranslations"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRPlugin::Vector3f>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _dataChangedSinceLastQuery
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRBody::dyn__dataChangedSinceLastQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::dyn__dataChangedSinceLastQuery");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataChangedSinceLastQuery"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasData
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRBody::dyn__hasData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::dyn__hasData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> _onPermissionGranted
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::OVRBody::dyn__onPermissionGranted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::dyn__onPermissionGranted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onPermissionGranted"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRBody.get_BodyState
::System::Nullable_1<::GlobalNamespace::OVRPlugin::BodyState> GlobalNamespace::OVRBody::get_BodyState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::get_BodyState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BodyState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::GlobalNamespace::OVRPlugin::BodyState>, false>(this, ___internal__method);
}
// Autogenerated method: OVRBody.Awake
void GlobalNamespace::OVRBody::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRBody.OnEnable
void GlobalNamespace::OVRBody::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRBody.OnPermissionGranted
void GlobalNamespace::OVRBody::OnPermissionGranted(::StringW permissionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::OnPermissionGranted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPermissionGranted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permissionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, permissionId);
}
// Autogenerated method: OVRBody.StartBodyTracking
bool GlobalNamespace::OVRBody::StartBodyTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::StartBodyTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBodyTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBody.OnDisable
void GlobalNamespace::OVRBody::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRBody.OnDestroy
void GlobalNamespace::OVRBody::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRBody.Update
void GlobalNamespace::OVRBody::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRBody.GetBodyState
void GlobalNamespace::OVRBody::GetBodyState(::GlobalNamespace::OVRPlugin::Step step) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::GetBodyState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBodyState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(step)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, step);
}
// Autogenerated method: OVRBody.OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonType
::GlobalNamespace::OVRSkeleton::SkeletonType GlobalNamespace::OVRBody::OVRSkeleton_IOVRSkeletonDataProvider_GetSkeletonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRBody*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeleton::SkeletonType, false>(this, ___internal__method);
}
// Autogenerated method: OVRBody.OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonPoseData
::GlobalNamespace::OVRSkeleton::SkeletonPoseData GlobalNamespace::OVRBody::OVRSkeleton_IOVRSkeletonDataProvider_GetSkeletonPoseData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonPoseData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRBody*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeleton::SkeletonPoseData, false>(this, ___internal__method);
}
// Autogenerated method: OVRBody.OVRSkeletonRenderer.IOVRSkeletonRendererDataProvider.GetSkeletonRendererData
::GlobalNamespace::OVRSkeletonRenderer::SkeletonRendererData GlobalNamespace::OVRBody::OVRSkeletonRenderer_IOVRSkeletonRendererDataProvider_GetSkeletonRendererData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::OVRSkeletonRenderer.IOVRSkeletonRendererDataProvider.GetSkeletonRendererData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRBody*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeletonRenderer::SkeletonRendererData, false>(this, ___internal__method);
}
// Autogenerated method: OVRBody.OVRSkeleton.IOVRSkeletonDataProvider.get_enabled
bool GlobalNamespace::OVRBody::OVRSkeleton_IOVRSkeletonDataProvider_get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBody::OVRSkeleton.IOVRSkeletonDataProvider.get_enabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRBody*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRBoundary
#include "GlobalNamespace/OVRBoundary.hpp"
// Including type: OVRBoundary/Node
#include "GlobalNamespace/OVRBoundary_Node.hpp"
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
// Including type: OVRBoundary/BoundaryTestResult
#include "GlobalNamespace/OVRBoundary_BoundaryTestResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 cachedVector3fSize
int GlobalNamespace::OVRBoundary::_get_cachedVector3fSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_get_cachedVector3fSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRBoundary", "cachedVector3fSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 cachedVector3fSize
void GlobalNamespace::OVRBoundary::_set_cachedVector3fSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_set_cachedVector3fSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedVector3fSize", value));
}
// Autogenerated static field getter
// Get static field: static private OVRNativeBuffer cachedGeometryNativeBuffer
::GlobalNamespace::OVRNativeBuffer* GlobalNamespace::OVRBoundary::_get_cachedGeometryNativeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_get_cachedGeometryNativeBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRNativeBuffer*>("", "OVRBoundary", "cachedGeometryNativeBuffer"));
}
// Autogenerated static field setter
// Set static field: static private OVRNativeBuffer cachedGeometryNativeBuffer
void GlobalNamespace::OVRBoundary::_set_cachedGeometryNativeBuffer(::GlobalNamespace::OVRNativeBuffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_set_cachedGeometryNativeBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedGeometryNativeBuffer", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single[] cachedGeometryManagedBuffer
::ArrayW<float> GlobalNamespace::OVRBoundary::_get_cachedGeometryManagedBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_get_cachedGeometryManagedBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("", "OVRBoundary", "cachedGeometryManagedBuffer"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] cachedGeometryManagedBuffer
void GlobalNamespace::OVRBoundary::_set_cachedGeometryManagedBuffer(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_set_cachedGeometryManagedBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedGeometryManagedBuffer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> cachedGeometryList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::OVRBoundary::dyn_cachedGeometryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::dyn_cachedGeometryList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedGeometryList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRBoundary.GetConfigured
bool GlobalNamespace::OVRBoundary::GetConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetConfigured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConfigured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBoundary.TestNode
::GlobalNamespace::OVRBoundary::BoundaryTestResult GlobalNamespace::OVRBoundary::TestNode(::GlobalNamespace::OVRBoundary::Node node, ::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::TestNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBoundary::BoundaryTestResult, false>(this, ___internal__method, node, boundaryType);
}
// Autogenerated method: OVRBoundary.TestPoint
::GlobalNamespace::OVRBoundary::BoundaryTestResult GlobalNamespace::OVRBoundary::TestPoint(::UnityEngine::Vector3 point, ::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::TestPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBoundary::BoundaryTestResult, false>(this, ___internal__method, point, boundaryType);
}
// Autogenerated method: OVRBoundary.GetGeometry
::ArrayW<::UnityEngine::Vector3> GlobalNamespace::OVRBoundary::GetGeometry(::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method, boundaryType);
}
// Autogenerated method: OVRBoundary.GetDimensions
::UnityEngine::Vector3 GlobalNamespace::OVRBoundary::GetDimensions(::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, boundaryType);
}
// Autogenerated method: OVRBoundary.GetVisible
bool GlobalNamespace::OVRBoundary::GetVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBoundary.SetVisible
void GlobalNamespace::OVRBoundary::SetVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::SetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRBoundary..cctor
void GlobalNamespace::OVRBoundary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRBoundary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRBoundary/Node
#include "GlobalNamespace/OVRBoundary_Node.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node HandLeft
::GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node HandLeft
void GlobalNamespace::OVRBoundary::Node::_set_HandLeft(::GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node HandRight
::GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node HandRight
void GlobalNamespace::OVRBoundary::Node::_set_HandRight(::GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "HandRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node Head
::GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "Head"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node Head
void GlobalNamespace::OVRBoundary::Node::_set_Head(::GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "Head", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRBoundary::Node::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRBoundary/BoundaryType OuterBoundary
::GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRBoundary::BoundaryType::_get_OuterBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_get_OuterBoundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::BoundaryType>("", "OVRBoundary/BoundaryType", "OuterBoundary"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/BoundaryType OuterBoundary
void GlobalNamespace::OVRBoundary::BoundaryType::_set_OuterBoundary(::GlobalNamespace::OVRBoundary::BoundaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_set_OuterBoundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/BoundaryType", "OuterBoundary", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/BoundaryType PlayArea
::GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRBoundary::BoundaryType::_get_PlayArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_get_PlayArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::BoundaryType>("", "OVRBoundary/BoundaryType", "PlayArea"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/BoundaryType PlayArea
void GlobalNamespace::OVRBoundary::BoundaryType::_set_PlayArea(::GlobalNamespace::OVRBoundary::BoundaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_set_PlayArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/BoundaryType", "PlayArea", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRBoundary::BoundaryType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <trackingSpace>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$trackingSpace$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$trackingSpace$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trackingSpace>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftEyeAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftEyeAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftEyeAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftEyeAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <centerEyeAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$centerEyeAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$centerEyeAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<centerEyeAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightEyeAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightEyeAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightEyeAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightEyeAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftHandAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftHandAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftHandAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftHandAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightHandAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightHandAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightHandAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightHandAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftHandAnchorDetached>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftHandAnchorDetached$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftHandAnchorDetached$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftHandAnchorDetached>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightHandAnchorDetached>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightHandAnchorDetached$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightHandAnchorDetached$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightHandAnchorDetached>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftControllerInHandAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftControllerInHandAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftControllerInHandAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftControllerInHandAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftHandOnControllerAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftHandOnControllerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftHandOnControllerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftHandOnControllerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightControllerInHandAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightControllerInHandAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightControllerInHandAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightControllerInHandAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightHandOnControllerAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightHandOnControllerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightHandOnControllerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightHandOnControllerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftControllerAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftControllerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftControllerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftControllerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightControllerAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightControllerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightControllerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightControllerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <trackerAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$trackerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$trackerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trackerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OVRCameraRig> UpdatedAnchors
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::OVRCameraRig*>*& GlobalNamespace::OVRCameraRig::dyn_UpdatedAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_UpdatedAnchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdatedAnchors"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::OVRCameraRig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Transform> TrackingSpaceChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Transform*>*& GlobalNamespace::OVRCameraRig::dyn_TrackingSpaceChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_TrackingSpaceChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingSpaceChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean usePerEyeCameras
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCameraRig::dyn_usePerEyeCameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_usePerEyeCameras");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usePerEyeCameras"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useFixedUpdateForTracking
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCameraRig::dyn_useFixedUpdateForTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_useFixedUpdateForTracking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFixedUpdateForTracking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableEyeAnchorCameras
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCameraRig::dyn_disableEyeAnchorCameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_disableEyeAnchorCameras");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableEyeAnchorCameras"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _skipUpdate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCameraRig::dyn__skipUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__skipUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skipUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String trackingSpaceName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_trackingSpaceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_trackingSpaceName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackingSpaceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String trackerAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_trackerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_trackerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftEyeAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftEyeAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftEyeAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftEyeAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String centerEyeAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_centerEyeAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_centerEyeAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "centerEyeAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightEyeAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightEyeAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightEyeAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightEyeAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftHandAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftHandAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftHandAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightHandAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightHandAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightHandAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftControllerAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftControllerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftControllerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightControllerAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightControllerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightControllerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftHandAnchorDetachedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftHandAnchorDetachedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftHandAnchorDetachedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandAnchorDetachedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightHandAnchorDetachedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightHandAnchorDetachedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightHandAnchorDetachedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandAnchorDetachedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftControllerInHandAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftControllerInHandAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftControllerInHandAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerInHandAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftHandOnControllerAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftHandOnControllerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftHandOnControllerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandOnControllerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightControllerInHandAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightControllerInHandAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightControllerInHandAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerInHandAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightHandOnControllerAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightHandOnControllerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightHandOnControllerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandOnControllerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera _centerEyeCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRCameraRig::dyn__centerEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__centerEyeCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerEyeCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera _leftEyeCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRCameraRig::dyn__leftEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__leftEyeCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftEyeCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera _rightEyeCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRCameraRig::dyn__rightEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__rightEyeCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightEyeCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4 _previousTrackingSpaceTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& GlobalNamespace::OVRCameraRig::dyn__previousTrackingSpaceTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__previousTrackingSpaceTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousTrackingSpaceTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRCameraRig.get_leftEyeCamera
::UnityEngine::Camera* GlobalNamespace::OVRCameraRig::get_leftEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftEyeCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftEyeCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.get_rightEyeCamera
::UnityEngine::Camera* GlobalNamespace::OVRCameraRig::get_rightEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightEyeCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightEyeCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.get_trackingSpace
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_trackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_trackingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_trackingSpace
void GlobalNamespace::OVRCameraRig::set_trackingSpace(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_trackingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftEyeAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftEyeAnchor
void GlobalNamespace::OVRCameraRig::set_leftEyeAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_centerEyeAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_centerEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_centerEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_centerEyeAnchor
void GlobalNamespace::OVRCameraRig::set_centerEyeAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_centerEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_centerEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightEyeAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightEyeAnchor
void GlobalNamespace::OVRCameraRig::set_rightEyeAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftHandAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftHandAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftHandAnchor
void GlobalNamespace::OVRCameraRig::set_leftHandAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightHandAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightHandAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightHandAnchor
void GlobalNamespace::OVRCameraRig::set_rightHandAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftHandAnchorDetached
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftHandAnchorDetached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftHandAnchorDetached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHandAnchorDetached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftHandAnchorDetached
void GlobalNamespace::OVRCameraRig::set_leftHandAnchorDetached(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftHandAnchorDetached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftHandAnchorDetached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightHandAnchorDetached
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightHandAnchorDetached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightHandAnchorDetached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightHandAnchorDetached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightHandAnchorDetached
void GlobalNamespace::OVRCameraRig::set_rightHandAnchorDetached(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightHandAnchorDetached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightHandAnchorDetached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftControllerInHandAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftControllerInHandAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftControllerInHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftControllerInHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftControllerInHandAnchor
void GlobalNamespace::OVRCameraRig::set_leftControllerInHandAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftControllerInHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftControllerInHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftHandOnControllerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftHandOnControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftHandOnControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHandOnControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftHandOnControllerAnchor
void GlobalNamespace::OVRCameraRig::set_leftHandOnControllerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftHandOnControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftHandOnControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightControllerInHandAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightControllerInHandAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightControllerInHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightControllerInHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightControllerInHandAnchor
void GlobalNamespace::OVRCameraRig::set_rightControllerInHandAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightControllerInHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightControllerInHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightHandOnControllerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightHandOnControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightHandOnControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightHandOnControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightHandOnControllerAnchor
void GlobalNamespace::OVRCameraRig::set_rightHandOnControllerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightHandOnControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightHandOnControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftControllerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftControllerAnchor
void GlobalNamespace::OVRCameraRig::set_leftControllerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightControllerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightControllerAnchor
void GlobalNamespace::OVRCameraRig::set_rightControllerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_trackerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_trackerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_trackerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_trackerAnchor
void GlobalNamespace::OVRCameraRig::set_trackerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_trackerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.add_UpdatedAnchors
void GlobalNamespace::OVRCameraRig::add_UpdatedAnchors(::System::Action_1<::GlobalNamespace::OVRCameraRig*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::add_UpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_UpdatedAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.remove_UpdatedAnchors
void GlobalNamespace::OVRCameraRig::remove_UpdatedAnchors(::System::Action_1<::GlobalNamespace::OVRCameraRig*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::remove_UpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_UpdatedAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.add_TrackingSpaceChanged
void GlobalNamespace::OVRCameraRig::add_TrackingSpaceChanged(::System::Action_1<::UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::add_TrackingSpaceChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_TrackingSpaceChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.remove_TrackingSpaceChanged
void GlobalNamespace::OVRCameraRig::remove_TrackingSpaceChanged(::System::Action_1<::UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::remove_TrackingSpaceChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_TrackingSpaceChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.Awake
void GlobalNamespace::OVRCameraRig::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.Start
void GlobalNamespace::OVRCameraRig::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.FixedUpdate
void GlobalNamespace::OVRCameraRig::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::FixedUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.Update
void GlobalNamespace::OVRCameraRig::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.OnDestroy
void GlobalNamespace::OVRCameraRig::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.UpdateAnchors
void GlobalNamespace::OVRCameraRig::UpdateAnchors(bool updateEyeAnchors, bool updateHandAnchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::UpdateAnchors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateEyeAnchors, updateHandAnchors);
}
// Autogenerated method: OVRCameraRig.OnBeforeRenderCallback
void GlobalNamespace::OVRCameraRig::OnBeforeRenderCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::OnBeforeRenderCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.CheckForTrackingSpaceChangesAndRaiseEvent
void GlobalNamespace::OVRCameraRig::CheckForTrackingSpaceChangesAndRaiseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::CheckForTrackingSpaceChangesAndRaiseEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.RaiseUpdatedAnchorsEvent
void GlobalNamespace::OVRCameraRig::RaiseUpdatedAnchorsEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::RaiseUpdatedAnchorsEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.EnsureGameObjectIntegrity
void GlobalNamespace::OVRCameraRig::EnsureGameObjectIntegrity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::EnsureGameObjectIntegrity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.ConfigureAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::ConfigureAnchor(::UnityEngine::Transform* root, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::ConfigureAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, root, name);
}
// Autogenerated method: OVRCameraRig.ComputeTrackReferenceMatrix
::UnityEngine::Matrix4x4 GlobalNamespace::OVRCameraRig::ComputeTrackReferenceMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::ComputeTrackReferenceMatrix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.CheckForAnchorsInParent
void GlobalNamespace::OVRCameraRig::CheckForAnchorsInParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::CheckForAnchorsInParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForAnchorsInParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRExtensions
#include "GlobalNamespace/OVRExtensions.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: OVRTracker/Frustum
#include "GlobalNamespace/OVRTracker_Frustum.hpp"
// Including type: OVRPlugin/Frustumf
#include "GlobalNamespace/OVRPlugin_Frustumf.hpp"
// Including type: OVRPlugin/Colorf
#include "GlobalNamespace/OVRPlugin_Colorf.hpp"
// Including type: OVRPlugin/Sizef
#include "GlobalNamespace/OVRPlugin_Sizef.hpp"
// Including type: OVRPlugin/Vector2f
#include "GlobalNamespace/OVRPlugin_Vector2f.hpp"
// Including type: OVRPlugin/Size3f
#include "GlobalNamespace/OVRPlugin_Size3f.hpp"
// Including type: OVRPlugin/Vector4f
#include "GlobalNamespace/OVRPlugin_Vector4f.hpp"
// Including type: OVRPlugin/SpaceStorageLocation
#include "GlobalNamespace/OVRPlugin_SpaceStorageLocation.hpp"
// Including type: OVRSpace/StorageLocation
#include "GlobalNamespace/OVRSpace_StorageLocation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRExtensions.ToTrackingSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToTrackingSpacePose(::UnityEngine::Transform* transform, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToTrackingSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToTrackingSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, camera);
}
// Autogenerated method: OVRExtensions.ToWorldSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToWorldSpacePose(::GlobalNamespace::OVRPose trackingSpacePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToWorldSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToWorldSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingSpacePose)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingSpacePose);
}
// Autogenerated method: OVRExtensions.ToWorldSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToWorldSpacePose(::GlobalNamespace::OVRPose trackingSpacePose, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToWorldSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToWorldSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingSpacePose), ::il2cpp_utils::ExtractType(mainCamera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingSpacePose, mainCamera);
}
// Autogenerated method: OVRExtensions.ToHeadSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToHeadSpacePose(::GlobalNamespace::OVRPose trackingSpacePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToHeadSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToHeadSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingSpacePose)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingSpacePose);
}
// Autogenerated method: OVRExtensions.ToHeadSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToHeadSpacePose(::UnityEngine::Transform* transform, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToHeadSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToHeadSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, camera);
}
// Autogenerated method: OVRExtensions.ToOVRPose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToOVRPose(::UnityEngine::Transform* t, bool isLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToOVRPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToOVRPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(isLocal)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, isLocal);
}
// Autogenerated method: OVRExtensions.FromOVRPose
void GlobalNamespace::OVRExtensions::FromOVRPose(::UnityEngine::Transform* t, ::GlobalNamespace::OVRPose pose, bool isLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromOVRPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromOVRPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(isLocal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, pose, isLocal);
}
// Autogenerated method: OVRExtensions.ToOVRPose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToOVRPose(::GlobalNamespace::OVRPlugin::Posef p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToOVRPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToOVRPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p);
}
// Autogenerated method: OVRExtensions.ToFrustum
::GlobalNamespace::OVRTracker::Frustum GlobalNamespace::OVRExtensions::ToFrustum(::GlobalNamespace::OVRPlugin::Frustumf f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFrustum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFrustum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTracker::Frustum, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: OVRExtensions.FromColorf
::UnityEngine::Color GlobalNamespace::OVRExtensions::FromColorf(::GlobalNamespace::OVRPlugin::Colorf c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromColorf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromColorf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: OVRExtensions.ToColorf
::GlobalNamespace::OVRPlugin::Colorf GlobalNamespace::OVRExtensions::ToColorf(::UnityEngine::Color c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToColorf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToColorf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Colorf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: OVRExtensions.FromSizef
::UnityEngine::Vector2 GlobalNamespace::OVRExtensions::FromSizef(::GlobalNamespace::OVRPlugin::Sizef v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromSizef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromSizef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToSizef
::GlobalNamespace::OVRPlugin::Sizef GlobalNamespace::OVRExtensions::ToSizef(::UnityEngine::Vector2 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToSizef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToSizef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Sizef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromVector2f
::UnityEngine::Vector2 GlobalNamespace::OVRExtensions::FromVector2f(::GlobalNamespace::OVRPlugin::Vector2f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromVector2f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromVector2f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromFlippedXVector2f
::UnityEngine::Vector2 GlobalNamespace::OVRExtensions::FromFlippedXVector2f(::GlobalNamespace::OVRPlugin::Vector2f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedXVector2f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedXVector2f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToVector2f
::GlobalNamespace::OVRPlugin::Vector2f GlobalNamespace::OVRExtensions::ToVector2f(::UnityEngine::Vector2 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToVector2f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToVector2f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector2f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromSize3f
::UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromSize3f(::GlobalNamespace::OVRPlugin::Size3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromSize3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromSize3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToSize3f
::GlobalNamespace::OVRPlugin::Size3f GlobalNamespace::OVRExtensions::ToSize3f(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToSize3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToSize3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Size3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromVector3f
::UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromVector3f(::GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromFlippedXVector3f
::UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromFlippedXVector3f(::GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedXVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedXVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromFlippedZVector3f
::UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromFlippedZVector3f(::GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedZVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedZVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToVector3f
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToVector3f(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToFlippedXVector3f
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToFlippedXVector3f(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedXVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedXVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToFlippedZVector3f
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToFlippedZVector3f(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedZVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedZVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromVector4f
::UnityEngine::Vector4 GlobalNamespace::OVRExtensions::FromVector4f(::GlobalNamespace::OVRPlugin::Vector4f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromVector4f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromVector4f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToVector4f
::GlobalNamespace::OVRPlugin::Vector4f GlobalNamespace::OVRExtensions::ToVector4f(::UnityEngine::Vector4 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToVector4f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToVector4f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector4f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromQuatf
::UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromQuatf(::GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.FromFlippedXQuatf
::UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromFlippedXQuatf(::GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedXQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedXQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.FromFlippedZQuatf
::UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromFlippedZQuatf(::GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedZQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedZQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToQuatf
::GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToQuatf(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToFlippedXQuatf
::GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToFlippedXQuatf(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedXQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedXQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToFlippedZQuatf
::GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToFlippedZQuatf(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedZQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedZQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ConvertToHMDMatrix34
::OVR::OpenVR::HmdMatrix34_t GlobalNamespace::OVRExtensions::ConvertToHMDMatrix34(::UnityEngine::Matrix4x4 m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ConvertToHMDMatrix34");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ConvertToHMDMatrix34", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::HmdMatrix34_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, m);
}
// Autogenerated method: OVRExtensions.FindChildRecursive
::UnityEngine::Transform* GlobalNamespace::OVRExtensions::FindChildRecursive(::UnityEngine::Transform* parent, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FindChildRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FindChildRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, name);
}
// Autogenerated method: OVRExtensions.Equals
bool GlobalNamespace::OVRExtensions::Equals(::UnityEngine::Gradient* gradient, ::UnityEngine::Gradient* otherGradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gradient), ::il2cpp_utils::ExtractType(otherGradient)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gradient, otherGradient);
}
// Autogenerated method: OVRExtensions.CopyFrom
void GlobalNamespace::OVRExtensions::CopyFrom(::UnityEngine::Gradient* gradient, ::UnityEngine::Gradient* otherGradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gradient), ::il2cpp_utils::ExtractType(otherGradient)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gradient, otherGradient);
}
// Autogenerated method: OVRExtensions.ToSpaceStorageLocation
::GlobalNamespace::OVRPlugin::SpaceStorageLocation GlobalNamespace::OVRExtensions::ToSpaceStorageLocation(::GlobalNamespace::OVRSpace::StorageLocation storageLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToSpaceStorageLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToSpaceStorageLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(storageLocation)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SpaceStorageLocation, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, storageLocation);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: NodeStatePropertyType
#include "GlobalNamespace/NodeStatePropertyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Acceleration
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Acceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Acceleration"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Acceleration
void GlobalNamespace::NodeStatePropertyType::_set_Acceleration(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Acceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Acceleration", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType AngularAcceleration
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_AngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_AngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "AngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType AngularAcceleration
void GlobalNamespace::NodeStatePropertyType::_set_AngularAcceleration(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_AngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "AngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Velocity
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Velocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Velocity"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Velocity
void GlobalNamespace::NodeStatePropertyType::_set_Velocity(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Velocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Velocity", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType AngularVelocity
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_AngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "AngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType AngularVelocity
void GlobalNamespace::NodeStatePropertyType::_set_AngularVelocity(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_AngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "AngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Position
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Position"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Position
void GlobalNamespace::NodeStatePropertyType::_set_Position(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Orientation
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Orientation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Orientation"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Orientation
void GlobalNamespace::NodeStatePropertyType::_set_Orientation(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Orientation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Orientation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NodeStatePropertyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRNodeStateProperties
#include "GlobalNamespace/OVRNodeStateProperties.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NodeStatePropertyType
#include "GlobalNamespace/NodeStatePropertyType.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> nodeStateList
::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* GlobalNamespace::OVRNodeStateProperties::_get_nodeStateList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::_get_nodeStateList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>*>("", "OVRNodeStateProperties", "nodeStateList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> nodeStateList
void GlobalNamespace::OVRNodeStateProperties::_set_nodeStateList(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::_set_nodeStateList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRNodeStateProperties", "nodeStateList", value));
}
// Autogenerated method: OVRNodeStateProperties.IsHmdPresent
bool GlobalNamespace::OVRNodeStateProperties::IsHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::IsHmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "IsHmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRNodeStateProperties.GetNodeStatePropertyVector3
bool GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyVector3(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ::GlobalNamespace::OVRPlugin::Node ovrpNodeType, ::GlobalNamespace::OVRPlugin::Step stepType, ByRef<::UnityEngine::Vector3> retVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetNodeStatePropertyVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractType(ovrpNodeType), ::il2cpp_utils::ExtractType(stepType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, ovrpNodeType, stepType, byref(retVec));
}
// Autogenerated method: OVRNodeStateProperties.GetNodeStatePropertyQuaternion
bool GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyQuaternion(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ::GlobalNamespace::OVRPlugin::Node ovrpNodeType, ::GlobalNamespace::OVRPlugin::Step stepType, ByRef<::UnityEngine::Quaternion> retQuat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetNodeStatePropertyQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractType(ovrpNodeType), ::il2cpp_utils::ExtractType(stepType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, ovrpNodeType, stepType, byref(retQuat));
}
// Autogenerated method: OVRNodeStateProperties.ValidateProperty
bool GlobalNamespace::OVRNodeStateProperties::ValidateProperty(::UnityEngine::XR::XRNode nodeType, ByRef<::UnityEngine::XR::XRNodeState> requestedNodeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::ValidateProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "ValidateProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(requestedNodeState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, byref(requestedNodeState));
}
// Autogenerated method: OVRNodeStateProperties.GetUnityXRNodeStateVector3
bool GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateVector3(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ByRef<::UnityEngine::Vector3> retVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetUnityXRNodeStateVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, byref(retVec));
}
// Autogenerated method: OVRNodeStateProperties.GetUnityXRNodeStateQuaternion
bool GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateQuaternion(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ByRef<::UnityEngine::Quaternion> retQuat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetUnityXRNodeStateQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, byref(retQuat));
}
// Autogenerated method: OVRNodeStateProperties..cctor
void GlobalNamespace::OVRNodeStateProperties::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
// Including type: OVRPlugin/Posef
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRPose::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion orientation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OVRPose::dyn_orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::dyn_orientation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "orientation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPose.get_identity
::GlobalNamespace::OVRPose GlobalNamespace::OVRPose::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPose.Inverse
::GlobalNamespace::OVRPose GlobalNamespace::OVRPose::Inverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::Inverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Inverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.flipZ
::GlobalNamespace::OVRPose GlobalNamespace::OVRPose::flipZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::flipZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "flipZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.ToPosef_Legacy
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPose::ToPosef_Legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::ToPosef_Legacy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToPosef_Legacy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.ToPosef
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPose::ToPosef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::ToPosef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToPosef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.Rotate180AlongX
::GlobalNamespace::OVRPose GlobalNamespace::OVRPose::Rotate180AlongX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::Rotate180AlongX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Rotate180AlongX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.Equals
bool GlobalNamespace::OVRPose::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRPose.GetHashCode
int GlobalNamespace::OVRPose::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::OVRPose& x, const ::GlobalNamespace::OVRPose& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: OVRPose.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::OVRPose& x, const ::GlobalNamespace::OVRPose& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: OVRPose.op_Multiply
::GlobalNamespace::OVRPose GlobalNamespace::operator*(const ::GlobalNamespace::OVRPose& lhs, const ::GlobalNamespace::OVRPose& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRNativeBuffer::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numBytes
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRNativeBuffer::dyn_m_numBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::dyn_m_numBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numBytes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr m_ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::OVRNativeBuffer::dyn_m_ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::dyn_m_ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRNativeBuffer.Reset
void GlobalNamespace::OVRNativeBuffer::Reset(int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numBytes);
}
// Autogenerated method: OVRNativeBuffer.GetCapacity
int GlobalNamespace::OVRNativeBuffer::GetCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::GetCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.GetPointer
::System::IntPtr GlobalNamespace::OVRNativeBuffer::GetPointer(int byteOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::GetPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, byteOffset);
}
// Autogenerated method: OVRNativeBuffer.Dispose
void GlobalNamespace::OVRNativeBuffer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRNativeBuffer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.Dispose
void GlobalNamespace::OVRNativeBuffer::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: OVRNativeBuffer.Reallocate
void GlobalNamespace::OVRNativeBuffer::Reallocate(int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Reallocate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reallocate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numBytes);
}
// Autogenerated method: OVRNativeBuffer.Release
void GlobalNamespace::OVRNativeBuffer::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.Finalize
void GlobalNamespace::OVRNativeBuffer::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRControllerDrivenHandPosesSample
#include "GlobalNamespace/OVRControllerDrivenHandPosesSample.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button buttonOff
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OVRControllerDrivenHandPosesSample::dyn_buttonOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerDrivenHandPosesSample::dyn_buttonOff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonOff"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button buttonConforming
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OVRControllerDrivenHandPosesSample::dyn_buttonConforming() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerDrivenHandPosesSample::dyn_buttonConforming");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonConforming"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button buttonNatural
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OVRControllerDrivenHandPosesSample::dyn_buttonNatural() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerDrivenHandPosesSample::dyn_buttonNatural");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonNatural"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer leftLinePointer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::OVRControllerDrivenHandPosesSample::dyn_leftLinePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerDrivenHandPosesSample::dyn_leftLinePointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftLinePointer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer rightLinePointer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::OVRControllerDrivenHandPosesSample::dyn_rightLinePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerDrivenHandPosesSample::dyn_rightLinePointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightLinePointer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig cameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::OVRControllerDrivenHandPosesSample::dyn_cameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerDrivenHandPosesSample::dyn_cameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRControllerDrivenHandPosesSample.Awake
void GlobalNamespace::OVRControllerDrivenHandPosesSample::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerDrivenHandPosesSample::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerDrivenHandPosesSample.OnDestroy
void GlobalNamespace::OVRControllerDrivenHandPosesSample::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerDrivenHandPosesSample::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerDrivenHandPosesSample.OnEnable
void GlobalNamespace::OVRControllerDrivenHandPosesSample::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerDrivenHandPosesSample::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerDrivenHandPosesSample.OnDisable
void GlobalNamespace::OVRControllerDrivenHandPosesSample::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerDrivenHandPosesSample::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerDrivenHandPosesSample.Update
void GlobalNamespace::OVRControllerDrivenHandPosesSample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerDrivenHandPosesSample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerDrivenHandPosesSample.UpdateLineRenderer
void GlobalNamespace::OVRControllerDrivenHandPosesSample::UpdateLineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerDrivenHandPosesSample::UpdateLineRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLineRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerDrivenHandPosesSample.UpdateLineRendererForHand
void GlobalNamespace::OVRControllerDrivenHandPosesSample::UpdateLineRendererForHand(bool isLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerDrivenHandPosesSample::UpdateLineRendererForHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLineRendererForHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLeft)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeft);
}
// Autogenerated method: OVRControllerDrivenHandPosesSample.SetControllerDrivenHandPosesTypeToNone
void GlobalNamespace::OVRControllerDrivenHandPosesSample::SetControllerDrivenHandPosesTypeToNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerDrivenHandPosesSample::SetControllerDrivenHandPosesTypeToNone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetControllerDrivenHandPosesTypeToNone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerDrivenHandPosesSample.SetControllerDrivenHandPosesTypeToControllerConforming
void GlobalNamespace::OVRControllerDrivenHandPosesSample::SetControllerDrivenHandPosesTypeToControllerConforming() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerDrivenHandPosesSample::SetControllerDrivenHandPosesTypeToControllerConforming");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetControllerDrivenHandPosesTypeToControllerConforming", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerDrivenHandPosesSample.SetControllerDrivenHandPosesTypeToNatural
void GlobalNamespace::OVRControllerDrivenHandPosesSample::SetControllerDrivenHandPosesTypeToNatural() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRControllerDrivenHandPosesSample::SetControllerDrivenHandPosesTypeToNatural");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetControllerDrivenHandPosesTypeToNatural", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRDebugHeadController
#include "GlobalNamespace/OVRDebugHeadController.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowPitchLook
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDebugHeadController::dyn_AllowPitchLook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_AllowPitchLook");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowPitchLook"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowYawLook
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDebugHeadController::dyn_AllowYawLook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_AllowYawLook");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowYawLook"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean InvertPitch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDebugHeadController::dyn_InvertPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_InvertPitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvertPitch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single GamePad_PitchDegreesPerSec
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRDebugHeadController::dyn_GamePad_PitchDegreesPerSec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_GamePad_PitchDegreesPerSec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GamePad_PitchDegreesPerSec"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single GamePad_YawDegreesPerSec
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRDebugHeadController::dyn_GamePad_YawDegreesPerSec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_GamePad_YawDegreesPerSec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GamePad_YawDegreesPerSec"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowMovement
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDebugHeadController::dyn_AllowMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_AllowMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ForwardSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRDebugHeadController::dyn_ForwardSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_ForwardSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ForwardSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single StrafeSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRDebugHeadController::dyn_StrafeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_StrafeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StrafeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OVRCameraRig CameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::OVRDebugHeadController::dyn_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRDebugHeadController.Awake
void GlobalNamespace::OVRDebugHeadController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugHeadController.Start
void GlobalNamespace::OVRDebugHeadController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugHeadController.Update
void GlobalNamespace::OVRDebugHeadController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRDisplay
#include "GlobalNamespace/OVRDisplay.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: OVRDisplay/LatencyData
#include "GlobalNamespace/OVRDisplay_LatencyData.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean needsConfigureTexture
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDisplay::dyn_needsConfigureTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_needsConfigureTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "needsConfigureTexture"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRDisplay/EyeRenderDesc[] eyeDescs
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRDisplay::EyeRenderDesc>& GlobalNamespace::OVRDisplay::dyn_eyeDescs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_eyeDescs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyeDescs"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRDisplay::EyeRenderDesc>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean recenterRequested
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDisplay::dyn_recenterRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_recenterRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recenterRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 recenterRequestedFrameCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRDisplay::dyn_recenterRequestedFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_recenterRequestedFrameCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recenterRequestedFrameCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 localTrackingSpaceRecenterCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRDisplay::dyn_localTrackingSpaceRecenterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_localTrackingSpaceRecenterCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localTrackingSpaceRecenterCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action RecenteredPose
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::OVRDisplay::dyn_RecenteredPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_RecenteredPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RecenteredPose"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRDisplay.Update
void GlobalNamespace::OVRDisplay::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.add_RecenteredPose
void GlobalNamespace::OVRDisplay::add_RecenteredPose(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::add_RecenteredPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_RecenteredPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.remove_RecenteredPose
void GlobalNamespace::OVRDisplay::remove_RecenteredPose(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::remove_RecenteredPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_RecenteredPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.RecenterPose
void GlobalNamespace::OVRDisplay::RecenterPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::RecenterPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecenterPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_acceleration
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_angularAcceleration
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_angularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_angularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_velocity
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_angularVelocity
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.GetEyeRenderDesc
::GlobalNamespace::OVRDisplay::EyeRenderDesc GlobalNamespace::OVRDisplay::GetEyeRenderDesc(::UnityEngine::XR::XRNode eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::GetEyeRenderDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEyeRenderDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eye)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRDisplay::EyeRenderDesc, false>(this, ___internal__method, eye);
}
// Autogenerated method: OVRDisplay.get_latency
::GlobalNamespace::OVRDisplay::LatencyData GlobalNamespace::OVRDisplay::get_latency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_latency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_latency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRDisplay::LatencyData, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_appFramerate
float GlobalNamespace::OVRDisplay::get_appFramerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_appFramerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_appFramerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_recommendedMSAALevel
int GlobalNamespace::OVRDisplay::get_recommendedMSAALevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_recommendedMSAALevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recommendedMSAALevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_displayFrequenciesAvailable
::ArrayW<float> GlobalNamespace::OVRDisplay::get_displayFrequenciesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_displayFrequenciesAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayFrequenciesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_displayFrequency
float GlobalNamespace::OVRDisplay::get_displayFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_displayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.set_displayFrequency
void GlobalNamespace::OVRDisplay::set_displayFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::set_displayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_displayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.UpdateTextures
void GlobalNamespace::OVRDisplay::UpdateTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::UpdateTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.ConfigureEyeDesc
void GlobalNamespace::OVRDisplay::ConfigureEyeDesc(::UnityEngine::XR::XRNode eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::ConfigureEyeDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureEyeDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eye)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eye);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVREyeGaze
#include "GlobalNamespace/OVREyeGaze.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRPermissionsRequester/Permission EyeTrackingPermission
::GlobalNamespace::OVRPermissionsRequester::Permission GlobalNamespace::OVREyeGaze::_get_EyeTrackingPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::_get_EyeTrackingPermission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPermissionsRequester::Permission>("", "OVREyeGaze", "EyeTrackingPermission"));
}
// Autogenerated static field setter
// Set static field: static private OVRPermissionsRequester/Permission EyeTrackingPermission
void GlobalNamespace::OVREyeGaze::_set_EyeTrackingPermission(::GlobalNamespace::OVRPermissionsRequester::Permission value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::_set_EyeTrackingPermission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVREyeGaze", "EyeTrackingPermission", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _trackingInstanceCount
int GlobalNamespace::OVREyeGaze::_get__trackingInstanceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::_get__trackingInstanceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVREyeGaze", "_trackingInstanceCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _trackingInstanceCount
void GlobalNamespace::OVREyeGaze::_set__trackingInstanceCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::_set__trackingInstanceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVREyeGaze", "_trackingInstanceCount", value));
}
// Autogenerated instance field getter
// Get instance field: public OVREyeGaze/EyeId Eye
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVREyeGaze::EyeId& GlobalNamespace::OVREyeGaze::dyn_Eye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::dyn_Eye");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Eye"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVREyeGaze::EyeId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Confidence>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVREyeGaze::dyn_$Confidence$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::dyn_$Confidence$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Confidence>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ConfidenceThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVREyeGaze::dyn_ConfidenceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::dyn_ConfidenceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConfidenceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ApplyPosition
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVREyeGaze::dyn_ApplyPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::dyn_ApplyPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApplyPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ApplyRotation
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVREyeGaze::dyn_ApplyRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::dyn_ApplyRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApplyRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/EyeGazesState _currentEyeGazesState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::EyeGazesState& GlobalNamespace::OVREyeGaze::dyn__currentEyeGazesState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::dyn__currentEyeGazesState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentEyeGazesState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::EyeGazesState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform ReferenceFrame
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVREyeGaze::dyn_ReferenceFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::dyn_ReferenceFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReferenceFrame"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVREyeGaze/EyeTrackingMode TrackingMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVREyeGaze::EyeTrackingMode& GlobalNamespace::OVREyeGaze::dyn_TrackingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::dyn_TrackingMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVREyeGaze::EyeTrackingMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _initialRotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OVREyeGaze::dyn__initialRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::dyn__initialRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialRotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _viewTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVREyeGaze::dyn__viewTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::dyn__viewTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> _onPermissionGranted
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::OVREyeGaze::dyn__onPermissionGranted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::dyn__onPermissionGranted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onPermissionGranted"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVREyeGaze.get_EyeTrackingEnabled
bool GlobalNamespace::OVREyeGaze::get_EyeTrackingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::get_EyeTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EyeTrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVREyeGaze.get_Confidence
float GlobalNamespace::OVREyeGaze::get_Confidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::get_Confidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Confidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVREyeGaze.set_Confidence
void GlobalNamespace::OVREyeGaze::set_Confidence(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::set_Confidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Confidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVREyeGaze.Awake
void GlobalNamespace::OVREyeGaze::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVREyeGaze.Start
void GlobalNamespace::OVREyeGaze::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVREyeGaze.OnEnable
void GlobalNamespace::OVREyeGaze::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVREyeGaze.OnPermissionGranted
void GlobalNamespace::OVREyeGaze::OnPermissionGranted(::StringW permissionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::OnPermissionGranted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPermissionGranted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permissionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, permissionId);
}
// Autogenerated method: OVREyeGaze.StartEyeTracking
bool GlobalNamespace::OVREyeGaze::StartEyeTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::StartEyeTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartEyeTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVREyeGaze.OnDisable
void GlobalNamespace::OVREyeGaze::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVREyeGaze.OnDestroy
void GlobalNamespace::OVREyeGaze::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVREyeGaze.Update
void GlobalNamespace::OVREyeGaze::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVREyeGaze.CalculateEyeRotation
::UnityEngine::Quaternion GlobalNamespace::OVREyeGaze::CalculateEyeRotation(::UnityEngine::Quaternion eyeRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::CalculateEyeRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateEyeRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eyeRotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, eyeRotation);
}
// Autogenerated method: OVREyeGaze.PrepareHeadDirection
void GlobalNamespace::OVREyeGaze::PrepareHeadDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::PrepareHeadDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareHeadDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVREyeGaze/EyeId
#include "GlobalNamespace/OVREyeGaze.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVREyeGaze/EyeId Left
::GlobalNamespace::OVREyeGaze::EyeId GlobalNamespace::OVREyeGaze::EyeId::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::EyeId::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVREyeGaze::EyeId>("", "OVREyeGaze/EyeId", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVREyeGaze/EyeId Left
void GlobalNamespace::OVREyeGaze::EyeId::_set_Left(::GlobalNamespace::OVREyeGaze::EyeId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::EyeId::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVREyeGaze/EyeId", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVREyeGaze/EyeId Right
::GlobalNamespace::OVREyeGaze::EyeId GlobalNamespace::OVREyeGaze::EyeId::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::EyeId::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVREyeGaze::EyeId>("", "OVREyeGaze/EyeId", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVREyeGaze/EyeId Right
void GlobalNamespace::OVREyeGaze::EyeId::_set_Right(::GlobalNamespace::OVREyeGaze::EyeId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::EyeId::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVREyeGaze/EyeId", "Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVREyeGaze::EyeId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::EyeId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVREyeGaze/EyeTrackingMode
#include "GlobalNamespace/OVREyeGaze.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVREyeGaze/EyeTrackingMode HeadSpace
::GlobalNamespace::OVREyeGaze::EyeTrackingMode GlobalNamespace::OVREyeGaze::EyeTrackingMode::_get_HeadSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::EyeTrackingMode::_get_HeadSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVREyeGaze::EyeTrackingMode>("", "OVREyeGaze/EyeTrackingMode", "HeadSpace"));
}
// Autogenerated static field setter
// Set static field: static public OVREyeGaze/EyeTrackingMode HeadSpace
void GlobalNamespace::OVREyeGaze::EyeTrackingMode::_set_HeadSpace(::GlobalNamespace::OVREyeGaze::EyeTrackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::EyeTrackingMode::_set_HeadSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVREyeGaze/EyeTrackingMode", "HeadSpace", value));
}
// Autogenerated static field getter
// Get static field: static public OVREyeGaze/EyeTrackingMode WorldSpace
::GlobalNamespace::OVREyeGaze::EyeTrackingMode GlobalNamespace::OVREyeGaze::EyeTrackingMode::_get_WorldSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::EyeTrackingMode::_get_WorldSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVREyeGaze::EyeTrackingMode>("", "OVREyeGaze/EyeTrackingMode", "WorldSpace"));
}
// Autogenerated static field setter
// Set static field: static public OVREyeGaze/EyeTrackingMode WorldSpace
void GlobalNamespace::OVREyeGaze::EyeTrackingMode::_set_WorldSpace(::GlobalNamespace::OVREyeGaze::EyeTrackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::EyeTrackingMode::_set_WorldSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVREyeGaze/EyeTrackingMode", "WorldSpace", value));
}
// Autogenerated static field getter
// Get static field: static public OVREyeGaze/EyeTrackingMode TrackingSpace
::GlobalNamespace::OVREyeGaze::EyeTrackingMode GlobalNamespace::OVREyeGaze::EyeTrackingMode::_get_TrackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::EyeTrackingMode::_get_TrackingSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVREyeGaze::EyeTrackingMode>("", "OVREyeGaze/EyeTrackingMode", "TrackingSpace"));
}
// Autogenerated static field setter
// Set static field: static public OVREyeGaze/EyeTrackingMode TrackingSpace
void GlobalNamespace::OVREyeGaze::EyeTrackingMode::_set_TrackingSpace(::GlobalNamespace::OVREyeGaze::EyeTrackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::EyeTrackingMode::_set_TrackingSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVREyeGaze/EyeTrackingMode", "TrackingSpace", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVREyeGaze::EyeTrackingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVREyeGaze::EyeTrackingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRFaceExpressions
#include "GlobalNamespace/OVRFaceExpressions.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: OVRFaceExpressions/FaceRegionConfidence
#include "GlobalNamespace/OVRFaceExpressions_FaceRegionConfidence.hpp"
// Including type: OVRFaceExpressions/FaceExpression
#include "GlobalNamespace/OVRFaceExpressions_FaceExpression.hpp"
// Including type: OVRFaceExpressions/FaceExpressionsEnumerator
#include "GlobalNamespace/OVRFaceExpressions_FaceExpressionsEnumerator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRPermissionsRequester/Permission FaceTrackingPermission
::GlobalNamespace::OVRPermissionsRequester::Permission GlobalNamespace::OVRFaceExpressions::_get_FaceTrackingPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::_get_FaceTrackingPermission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPermissionsRequester::Permission>("", "OVRFaceExpressions", "FaceTrackingPermission"));
}
// Autogenerated static field setter
// Set static field: static private OVRPermissionsRequester/Permission FaceTrackingPermission
void GlobalNamespace::OVRFaceExpressions::_set_FaceTrackingPermission(::GlobalNamespace::OVRPermissionsRequester::Permission value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::_set_FaceTrackingPermission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions", "FaceTrackingPermission", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _trackingInstanceCount
int GlobalNamespace::OVRFaceExpressions::_get__trackingInstanceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::_get__trackingInstanceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRFaceExpressions", "_trackingInstanceCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _trackingInstanceCount
void GlobalNamespace::OVRFaceExpressions::_set__trackingInstanceCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::_set__trackingInstanceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions", "_trackingInstanceCount", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ValidExpressions>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRFaceExpressions::dyn_$ValidExpressions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::dyn_$ValidExpressions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ValidExpressions>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <EyeFollowingBlendshapesValid>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRFaceExpressions::dyn_$EyeFollowingBlendshapesValid$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::dyn_$EyeFollowingBlendshapesValid$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EyeFollowingBlendshapesValid>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/FaceState _currentFaceState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::FaceState& GlobalNamespace::OVRFaceExpressions::dyn__currentFaceState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::dyn__currentFaceState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentFaceState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::FaceState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> _onPermissionGranted
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::OVRFaceExpressions::dyn__onPermissionGranted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::dyn__onPermissionGranted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onPermissionGranted"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRFaceExpressions.get_FaceTrackingEnabled
bool GlobalNamespace::OVRFaceExpressions::get_FaceTrackingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::get_FaceTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FaceTrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions.get_ValidExpressions
bool GlobalNamespace::OVRFaceExpressions::get_ValidExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::get_ValidExpressions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions.set_ValidExpressions
void GlobalNamespace::OVRFaceExpressions::set_ValidExpressions(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::set_ValidExpressions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ValidExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRFaceExpressions.get_EyeFollowingBlendshapesValid
bool GlobalNamespace::OVRFaceExpressions::get_EyeFollowingBlendshapesValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::get_EyeFollowingBlendshapesValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EyeFollowingBlendshapesValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions.set_EyeFollowingBlendshapesValid
void GlobalNamespace::OVRFaceExpressions::set_EyeFollowingBlendshapesValid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::set_EyeFollowingBlendshapesValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EyeFollowingBlendshapesValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRFaceExpressions.Awake
void GlobalNamespace::OVRFaceExpressions::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions.OnEnable
void GlobalNamespace::OVRFaceExpressions::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions.OnPermissionGranted
void GlobalNamespace::OVRFaceExpressions::OnPermissionGranted(::StringW permissionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::OnPermissionGranted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPermissionGranted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permissionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, permissionId);
}
// Autogenerated method: OVRFaceExpressions.StartFaceTracking
bool GlobalNamespace::OVRFaceExpressions::StartFaceTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::StartFaceTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartFaceTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions.OnDisable
void GlobalNamespace::OVRFaceExpressions::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions.OnDestroy
void GlobalNamespace::OVRFaceExpressions::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions.Update
void GlobalNamespace::OVRFaceExpressions::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions.get_Item
float GlobalNamespace::OVRFaceExpressions::get_Item(::GlobalNamespace::OVRFaceExpressions::FaceExpression expression) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, expression);
}
// Autogenerated method: OVRFaceExpressions.GetWeight
float GlobalNamespace::OVRFaceExpressions::GetWeight(::GlobalNamespace::OVRFaceExpressions::FaceExpression expression) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::GetWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRFaceExpressions*), 7));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, expression);
}
// Autogenerated method: OVRFaceExpressions.TryGetFaceExpressionWeight
bool GlobalNamespace::OVRFaceExpressions::TryGetFaceExpressionWeight(::GlobalNamespace::OVRFaceExpressions::FaceExpression expression, ByRef<float> weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::TryGetFaceExpressionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetFaceExpressionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, expression, byref(weight));
}
// Autogenerated method: OVRFaceExpressions.TryGetWeightConfidence
bool GlobalNamespace::OVRFaceExpressions::TryGetWeightConfidence(::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence region, ByRef<float> weightConfidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::TryGetWeightConfidence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetWeightConfidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(region), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, region, byref(weightConfidence));
}
// Autogenerated method: OVRFaceExpressions.CheckValidity
void GlobalNamespace::OVRFaceExpressions::CheckValidity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::CheckValidity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValidity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions.CopyTo
void GlobalNamespace::OVRFaceExpressions::CopyTo(::ArrayW<float> array, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(startIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, startIndex);
}
// Autogenerated method: OVRFaceExpressions.ToArray
::ArrayW<float> GlobalNamespace::OVRFaceExpressions::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::ToArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions.GetEnumerator
::GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator GlobalNamespace::OVRFaceExpressions::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions.System.Collections.Generic.IEnumerable<System.Single>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<float>* GlobalNamespace::OVRFaceExpressions::System_Collections_Generic_IEnumerable$System_Single$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::System.Collections.Generic.IEnumerable<System.Single>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRFaceExpressions*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<float>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* GlobalNamespace::OVRFaceExpressions::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRFaceExpressions*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions.get_Count
int GlobalNamespace::OVRFaceExpressions::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRFaceExpressions*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRFaceExpressions/WeightProvider
#include "GlobalNamespace/OVRFaceExpressions.hpp"
// Including type: OVRFaceExpressions/FaceExpression
#include "GlobalNamespace/OVRFaceExpressions_FaceExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRFaceExpressions/WeightProvider.GetWeight
float GlobalNamespace::OVRFaceExpressions::WeightProvider::GetWeight(::GlobalNamespace::OVRFaceExpressions::FaceExpression expression) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::WeightProvider::GetWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRFaceExpressions::WeightProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, expression);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRFaceExpressions/FaceRegionConfidence
#include "GlobalNamespace/OVRFaceExpressions_FaceRegionConfidence.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceRegionConfidence Lower
::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence::_get_Lower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence::_get_Lower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence>("", "OVRFaceExpressions/FaceRegionConfidence", "Lower"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceRegionConfidence Lower
void GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence::_set_Lower(::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence::_set_Lower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceRegionConfidence", "Lower", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceRegionConfidence Upper
::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence::_get_Upper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence::_get_Upper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence>("", "OVRFaceExpressions/FaceRegionConfidence", "Upper"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceRegionConfidence Upper
void GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence::_set_Upper(::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence::_set_Upper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceRegionConfidence", "Upper", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceRegionConfidence Max
::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence>("", "OVRFaceExpressions/FaceRegionConfidence", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceRegionConfidence Max
void GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence::_set_Max(::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceRegionConfidence", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceRegionConfidence::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRFaceExpressions/FaceExpression
#include "GlobalNamespace/OVRFaceExpressions_FaceExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression Invalid
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression Invalid
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_Invalid(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression BrowLowererL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_BrowLowererL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_BrowLowererL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "BrowLowererL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression BrowLowererL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_BrowLowererL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_BrowLowererL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "BrowLowererL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression BrowLowererR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_BrowLowererR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_BrowLowererR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "BrowLowererR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression BrowLowererR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_BrowLowererR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_BrowLowererR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "BrowLowererR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression CheekPuffL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_CheekPuffL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_CheekPuffL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "CheekPuffL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression CheekPuffL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_CheekPuffL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_CheekPuffL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "CheekPuffL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression CheekPuffR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_CheekPuffR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_CheekPuffR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "CheekPuffR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression CheekPuffR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_CheekPuffR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_CheekPuffR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "CheekPuffR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression CheekRaiserL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_CheekRaiserL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_CheekRaiserL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "CheekRaiserL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression CheekRaiserL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_CheekRaiserL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_CheekRaiserL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "CheekRaiserL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression CheekRaiserR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_CheekRaiserR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_CheekRaiserR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "CheekRaiserR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression CheekRaiserR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_CheekRaiserR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_CheekRaiserR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "CheekRaiserR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression CheekSuckL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_CheekSuckL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_CheekSuckL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "CheekSuckL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression CheekSuckL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_CheekSuckL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_CheekSuckL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "CheekSuckL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression CheekSuckR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_CheekSuckR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_CheekSuckR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "CheekSuckR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression CheekSuckR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_CheekSuckR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_CheekSuckR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "CheekSuckR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression ChinRaiserB
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_ChinRaiserB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_ChinRaiserB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "ChinRaiserB"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression ChinRaiserB
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_ChinRaiserB(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_ChinRaiserB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "ChinRaiserB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression ChinRaiserT
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_ChinRaiserT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_ChinRaiserT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "ChinRaiserT"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression ChinRaiserT
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_ChinRaiserT(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_ChinRaiserT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "ChinRaiserT", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression DimplerL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_DimplerL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_DimplerL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "DimplerL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression DimplerL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_DimplerL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_DimplerL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "DimplerL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression DimplerR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_DimplerR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_DimplerR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "DimplerR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression DimplerR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_DimplerR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_DimplerR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "DimplerR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression EyesClosedL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesClosedL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesClosedL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "EyesClosedL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression EyesClosedL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesClosedL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesClosedL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "EyesClosedL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression EyesClosedR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesClosedR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesClosedR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "EyesClosedR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression EyesClosedR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesClosedR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesClosedR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "EyesClosedR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression EyesLookDownL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesLookDownL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesLookDownL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "EyesLookDownL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression EyesLookDownL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesLookDownL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesLookDownL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "EyesLookDownL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression EyesLookDownR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesLookDownR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesLookDownR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "EyesLookDownR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression EyesLookDownR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesLookDownR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesLookDownR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "EyesLookDownR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression EyesLookLeftL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesLookLeftL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesLookLeftL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "EyesLookLeftL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression EyesLookLeftL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesLookLeftL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesLookLeftL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "EyesLookLeftL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression EyesLookLeftR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesLookLeftR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesLookLeftR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "EyesLookLeftR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression EyesLookLeftR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesLookLeftR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesLookLeftR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "EyesLookLeftR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression EyesLookRightL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesLookRightL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesLookRightL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "EyesLookRightL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression EyesLookRightL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesLookRightL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesLookRightL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "EyesLookRightL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression EyesLookRightR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesLookRightR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesLookRightR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "EyesLookRightR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression EyesLookRightR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesLookRightR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesLookRightR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "EyesLookRightR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression EyesLookUpL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesLookUpL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesLookUpL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "EyesLookUpL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression EyesLookUpL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesLookUpL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesLookUpL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "EyesLookUpL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression EyesLookUpR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesLookUpR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_EyesLookUpR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "EyesLookUpR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression EyesLookUpR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesLookUpR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_EyesLookUpR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "EyesLookUpR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression InnerBrowRaiserL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_InnerBrowRaiserL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_InnerBrowRaiserL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "InnerBrowRaiserL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression InnerBrowRaiserL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_InnerBrowRaiserL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_InnerBrowRaiserL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "InnerBrowRaiserL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression InnerBrowRaiserR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_InnerBrowRaiserR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_InnerBrowRaiserR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "InnerBrowRaiserR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression InnerBrowRaiserR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_InnerBrowRaiserR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_InnerBrowRaiserR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "InnerBrowRaiserR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression JawDrop
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_JawDrop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_JawDrop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "JawDrop"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression JawDrop
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_JawDrop(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_JawDrop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "JawDrop", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression JawSidewaysLeft
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_JawSidewaysLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_JawSidewaysLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "JawSidewaysLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression JawSidewaysLeft
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_JawSidewaysLeft(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_JawSidewaysLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "JawSidewaysLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression JawSidewaysRight
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_JawSidewaysRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_JawSidewaysRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "JawSidewaysRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression JawSidewaysRight
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_JawSidewaysRight(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_JawSidewaysRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "JawSidewaysRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression JawThrust
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_JawThrust() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_JawThrust");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "JawThrust"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression JawThrust
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_JawThrust(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_JawThrust");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "JawThrust", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LidTightenerL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LidTightenerL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LidTightenerL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LidTightenerL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LidTightenerL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LidTightenerL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LidTightenerL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LidTightenerL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LidTightenerR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LidTightenerR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LidTightenerR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LidTightenerR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LidTightenerR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LidTightenerR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LidTightenerR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LidTightenerR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipCornerDepressorL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipCornerDepressorL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipCornerDepressorL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipCornerDepressorL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipCornerDepressorL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipCornerDepressorL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipCornerDepressorL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipCornerDepressorL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipCornerDepressorR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipCornerDepressorR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipCornerDepressorR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipCornerDepressorR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipCornerDepressorR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipCornerDepressorR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipCornerDepressorR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipCornerDepressorR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipCornerPullerL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipCornerPullerL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipCornerPullerL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipCornerPullerL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipCornerPullerL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipCornerPullerL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipCornerPullerL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipCornerPullerL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipCornerPullerR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipCornerPullerR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipCornerPullerR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipCornerPullerR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipCornerPullerR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipCornerPullerR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipCornerPullerR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipCornerPullerR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipFunnelerLB
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipFunnelerLB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipFunnelerLB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipFunnelerLB"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipFunnelerLB
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipFunnelerLB(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipFunnelerLB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipFunnelerLB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipFunnelerLT
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipFunnelerLT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipFunnelerLT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipFunnelerLT"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipFunnelerLT
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipFunnelerLT(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipFunnelerLT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipFunnelerLT", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipFunnelerRB
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipFunnelerRB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipFunnelerRB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipFunnelerRB"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipFunnelerRB
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipFunnelerRB(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipFunnelerRB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipFunnelerRB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipFunnelerRT
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipFunnelerRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipFunnelerRT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipFunnelerRT"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipFunnelerRT
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipFunnelerRT(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipFunnelerRT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipFunnelerRT", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipPressorL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipPressorL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipPressorL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipPressorL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipPressorL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipPressorL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipPressorL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipPressorL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipPressorR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipPressorR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipPressorR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipPressorR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipPressorR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipPressorR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipPressorR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipPressorR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipPuckerL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipPuckerL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipPuckerL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipPuckerL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipPuckerL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipPuckerL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipPuckerL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipPuckerL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipPuckerR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipPuckerR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipPuckerR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipPuckerR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipPuckerR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipPuckerR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipPuckerR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipPuckerR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipStretcherL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipStretcherL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipStretcherL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipStretcherL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipStretcherL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipStretcherL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipStretcherL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipStretcherL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipStretcherR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipStretcherR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipStretcherR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipStretcherR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipStretcherR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipStretcherR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipStretcherR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipStretcherR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipSuckLB
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipSuckLB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipSuckLB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipSuckLB"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipSuckLB
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipSuckLB(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipSuckLB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipSuckLB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipSuckLT
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipSuckLT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipSuckLT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipSuckLT"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipSuckLT
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipSuckLT(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipSuckLT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipSuckLT", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipSuckRB
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipSuckRB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipSuckRB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipSuckRB"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipSuckRB
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipSuckRB(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipSuckRB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipSuckRB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipSuckRT
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipSuckRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipSuckRT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipSuckRT"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipSuckRT
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipSuckRT(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipSuckRT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipSuckRT", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipTightenerL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipTightenerL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipTightenerL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipTightenerL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipTightenerL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipTightenerL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipTightenerL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipTightenerL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipTightenerR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipTightenerR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipTightenerR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipTightenerR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipTightenerR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipTightenerR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipTightenerR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipTightenerR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LipsToward
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipsToward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LipsToward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LipsToward"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LipsToward
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipsToward(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LipsToward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LipsToward", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LowerLipDepressorL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LowerLipDepressorL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LowerLipDepressorL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LowerLipDepressorL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LowerLipDepressorL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LowerLipDepressorL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LowerLipDepressorL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LowerLipDepressorL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression LowerLipDepressorR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LowerLipDepressorR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_LowerLipDepressorR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "LowerLipDepressorR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression LowerLipDepressorR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LowerLipDepressorR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_LowerLipDepressorR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "LowerLipDepressorR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression MouthLeft
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_MouthLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_MouthLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "MouthLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression MouthLeft
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_MouthLeft(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_MouthLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "MouthLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression MouthRight
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_MouthRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_MouthRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "MouthRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression MouthRight
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_MouthRight(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_MouthRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "MouthRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression NoseWrinklerL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_NoseWrinklerL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_NoseWrinklerL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "NoseWrinklerL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression NoseWrinklerL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_NoseWrinklerL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_NoseWrinklerL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "NoseWrinklerL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression NoseWrinklerR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_NoseWrinklerR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_NoseWrinklerR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "NoseWrinklerR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression NoseWrinklerR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_NoseWrinklerR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_NoseWrinklerR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "NoseWrinklerR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression OuterBrowRaiserL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_OuterBrowRaiserL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_OuterBrowRaiserL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "OuterBrowRaiserL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression OuterBrowRaiserL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_OuterBrowRaiserL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_OuterBrowRaiserL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "OuterBrowRaiserL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression OuterBrowRaiserR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_OuterBrowRaiserR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_OuterBrowRaiserR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "OuterBrowRaiserR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression OuterBrowRaiserR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_OuterBrowRaiserR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_OuterBrowRaiserR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "OuterBrowRaiserR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression UpperLidRaiserL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_UpperLidRaiserL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_UpperLidRaiserL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "UpperLidRaiserL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression UpperLidRaiserL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_UpperLidRaiserL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_UpperLidRaiserL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "UpperLidRaiserL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression UpperLidRaiserR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_UpperLidRaiserR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_UpperLidRaiserR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "UpperLidRaiserR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression UpperLidRaiserR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_UpperLidRaiserR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_UpperLidRaiserR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "UpperLidRaiserR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression UpperLipRaiserL
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_UpperLipRaiserL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_UpperLipRaiserL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "UpperLipRaiserL"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression UpperLipRaiserL
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_UpperLipRaiserL(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_UpperLipRaiserL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "UpperLipRaiserL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression UpperLipRaiserR
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_UpperLipRaiserR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_UpperLipRaiserR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "UpperLipRaiserR"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression UpperLipRaiserR
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_UpperLipRaiserR(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_UpperLipRaiserR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "UpperLipRaiserR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRFaceExpressions/FaceExpression Max
::GlobalNamespace::OVRFaceExpressions::FaceExpression GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRFaceExpressions::FaceExpression>("", "OVRFaceExpressions/FaceExpression", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OVRFaceExpressions/FaceExpression Max
void GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_Max(::GlobalNamespace::OVRFaceExpressions::FaceExpression value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRFaceExpressions/FaceExpression", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRFaceExpressions::FaceExpression::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpression::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRFaceExpressions/FaceExpressionsEnumerator
#include "GlobalNamespace/OVRFaceExpressions_FaceExpressionsEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single[] _faceExpressions
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::dyn__faceExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::dyn__faceExpressions");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_faceExpressions"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::dyn__index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _count
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::dyn__count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRFaceExpressions/FaceExpressionsEnumerator..ctor
GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::FaceExpressionsEnumerator(::ArrayW<float> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array);
}
// Autogenerated method: OVRFaceExpressions/FaceExpressionsEnumerator.MoveNext
bool GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions/FaceExpressionsEnumerator.get_Current
float GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions/FaceExpressionsEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions/FaceExpressionsEnumerator.Reset
void GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRFaceExpressions/FaceExpressionsEnumerator.Dispose
void GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRFaceExpressions::FaceExpressionsEnumerator), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRGLTFType
#include "GlobalNamespace/OVRGLTFType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRGLTFType NONE
::GlobalNamespace::OVRGLTFType GlobalNamespace::OVRGLTFType::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFType>("", "OVRGLTFType", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFType NONE
void GlobalNamespace::OVRGLTFType::_set_NONE(::GlobalNamespace::OVRGLTFType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFType", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFType SCALAR
::GlobalNamespace::OVRGLTFType GlobalNamespace::OVRGLTFType::_get_SCALAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_get_SCALAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFType>("", "OVRGLTFType", "SCALAR"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFType SCALAR
void GlobalNamespace::OVRGLTFType::_set_SCALAR(::GlobalNamespace::OVRGLTFType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_set_SCALAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFType", "SCALAR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFType VEC2
::GlobalNamespace::OVRGLTFType GlobalNamespace::OVRGLTFType::_get_VEC2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_get_VEC2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFType>("", "OVRGLTFType", "VEC2"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFType VEC2
void GlobalNamespace::OVRGLTFType::_set_VEC2(::GlobalNamespace::OVRGLTFType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_set_VEC2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFType", "VEC2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFType VEC3
::GlobalNamespace::OVRGLTFType GlobalNamespace::OVRGLTFType::_get_VEC3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_get_VEC3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFType>("", "OVRGLTFType", "VEC3"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFType VEC3
void GlobalNamespace::OVRGLTFType::_set_VEC3(::GlobalNamespace::OVRGLTFType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_set_VEC3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFType", "VEC3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFType VEC4
::GlobalNamespace::OVRGLTFType GlobalNamespace::OVRGLTFType::_get_VEC4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_get_VEC4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFType>("", "OVRGLTFType", "VEC4"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFType VEC4
void GlobalNamespace::OVRGLTFType::_set_VEC4(::GlobalNamespace::OVRGLTFType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_set_VEC4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFType", "VEC4", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFType MAT4
::GlobalNamespace::OVRGLTFType GlobalNamespace::OVRGLTFType::_get_MAT4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_get_MAT4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFType>("", "OVRGLTFType", "MAT4"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFType MAT4
void GlobalNamespace::OVRGLTFType::_set_MAT4(::GlobalNamespace::OVRGLTFType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_set_MAT4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFType", "MAT4", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRGLTFComponentType
#include "GlobalNamespace/OVRGLTFComponentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRGLTFComponentType BYTE
::GlobalNamespace::OVRGLTFComponentType GlobalNamespace::OVRGLTFComponentType::_get_BYTE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_get_BYTE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFComponentType>("", "OVRGLTFComponentType", "BYTE"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFComponentType BYTE
void GlobalNamespace::OVRGLTFComponentType::_set_BYTE(::GlobalNamespace::OVRGLTFComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_set_BYTE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFComponentType", "BYTE", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFComponentType UNSIGNED_BYTE
::GlobalNamespace::OVRGLTFComponentType GlobalNamespace::OVRGLTFComponentType::_get_UNSIGNED_BYTE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_get_UNSIGNED_BYTE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFComponentType>("", "OVRGLTFComponentType", "UNSIGNED_BYTE"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFComponentType UNSIGNED_BYTE
void GlobalNamespace::OVRGLTFComponentType::_set_UNSIGNED_BYTE(::GlobalNamespace::OVRGLTFComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_set_UNSIGNED_BYTE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFComponentType", "UNSIGNED_BYTE", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFComponentType SHORT
::GlobalNamespace::OVRGLTFComponentType GlobalNamespace::OVRGLTFComponentType::_get_SHORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_get_SHORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFComponentType>("", "OVRGLTFComponentType", "SHORT"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFComponentType SHORT
void GlobalNamespace::OVRGLTFComponentType::_set_SHORT(::GlobalNamespace::OVRGLTFComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_set_SHORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFComponentType", "SHORT", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFComponentType UNSIGNED_SHORT
::GlobalNamespace::OVRGLTFComponentType GlobalNamespace::OVRGLTFComponentType::_get_UNSIGNED_SHORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_get_UNSIGNED_SHORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFComponentType>("", "OVRGLTFComponentType", "UNSIGNED_SHORT"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFComponentType UNSIGNED_SHORT
void GlobalNamespace::OVRGLTFComponentType::_set_UNSIGNED_SHORT(::GlobalNamespace::OVRGLTFComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_set_UNSIGNED_SHORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFComponentType", "UNSIGNED_SHORT", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFComponentType UNSIGNED_INT
::GlobalNamespace::OVRGLTFComponentType GlobalNamespace::OVRGLTFComponentType::_get_UNSIGNED_INT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_get_UNSIGNED_INT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFComponentType>("", "OVRGLTFComponentType", "UNSIGNED_INT"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFComponentType UNSIGNED_INT
void GlobalNamespace::OVRGLTFComponentType::_set_UNSIGNED_INT(::GlobalNamespace::OVRGLTFComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_set_UNSIGNED_INT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFComponentType", "UNSIGNED_INT", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFComponentType FLOAT
::GlobalNamespace::OVRGLTFComponentType GlobalNamespace::OVRGLTFComponentType::_get_FLOAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_get_FLOAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFComponentType>("", "OVRGLTFComponentType", "FLOAT"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFComponentType FLOAT
void GlobalNamespace::OVRGLTFComponentType::_set_FLOAT(::GlobalNamespace::OVRGLTFComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_set_FLOAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFComponentType", "FLOAT", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFComponentType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRGLTFAccessor
#include "GlobalNamespace/OVRGLTFAccessor.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: OVRBinaryChunk
#include "GlobalNamespace/OVRBinaryChunk.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 byteOffset
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAccessor::dyn_byteOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_byteOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 byteLength
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAccessor::dyn_byteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_byteLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 byteStride
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAccessor::dyn_byteStride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_byteStride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteStride"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 bufferId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAccessor::dyn_bufferId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_bufferId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufferId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 bufferLength
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAccessor::dyn_bufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_bufferLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufferLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 additionalOffset
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAccessor::dyn_additionalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_additionalOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "additionalOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRGLTFType dataType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRGLTFType& GlobalNamespace::OVRGLTFAccessor::dyn_dataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_dataType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRGLTFType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRGLTFComponentType componentType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRGLTFComponentType& GlobalNamespace::OVRGLTFAccessor::dyn_componentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_componentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRGLTFComponentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 dataCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAccessor::dyn_dataCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_dataCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRGLTFAccessor.GetDataCount
int GlobalNamespace::OVRGLTFAccessor::GetDataCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::GetDataCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRGLTFAccessor.ToOVRType
::GlobalNamespace::OVRGLTFType GlobalNamespace::OVRGLTFAccessor::ToOVRType(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ToOVRType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRGLTFAccessor", "ToOVRType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRGLTFType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsInt
void GlobalNamespace::OVRGLTFAccessor::ReadAsInt(::GlobalNamespace::OVRBinaryChunk chunk, ByRef<::ArrayW<int>> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunk, byref(data), offset);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsFloat
void GlobalNamespace::OVRGLTFAccessor::ReadAsFloat(::GlobalNamespace::OVRBinaryChunk chunk, ByRef<::ArrayW<float>> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunk, byref(data), offset);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsVector2
void GlobalNamespace::OVRGLTFAccessor::ReadAsVector2(::GlobalNamespace::OVRBinaryChunk chunk, ByRef<::ArrayW<::UnityEngine::Vector2>> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunk, byref(data), offset);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsVector3
void GlobalNamespace::OVRGLTFAccessor::ReadAsVector3(::GlobalNamespace::OVRBinaryChunk chunk, ByRef<::ArrayW<::UnityEngine::Vector3>> data, int offset, ::UnityEngine::Vector3 conversionScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(conversionScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunk, byref(data), offset, conversionScale);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsVector4
void GlobalNamespace::OVRGLTFAccessor::ReadAsVector4(::GlobalNamespace::OVRBinaryChunk chunk, ByRef<::ArrayW<::UnityEngine::Vector4>> data, int offset, ::UnityEngine::Vector4 conversionScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(conversionScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunk, byref(data), offset, conversionScale);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsColor
void GlobalNamespace::OVRGLTFAccessor::ReadAsColor(::GlobalNamespace::OVRBinaryChunk chunk, ByRef<::ArrayW<::UnityEngine::Color>> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunk, byref(data), offset);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsMatrix4x4
void GlobalNamespace::OVRGLTFAccessor::ReadAsMatrix4x4(::GlobalNamespace::OVRBinaryChunk chunk, ByRef<::ArrayW<::UnityEngine::Matrix4x4>> data, int offset, ::UnityEngine::Vector3 conversionScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsMatrix4x4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsMatrix4x4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(conversionScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunk, byref(data), offset, conversionScale);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsTexture
::ArrayW<uint8_t> GlobalNamespace::OVRGLTFAccessor::ReadAsTexture(::GlobalNamespace::OVRBinaryChunk chunk) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, chunk);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsBoneWeights
void GlobalNamespace::OVRGLTFAccessor::ReadAsBoneWeights(::GlobalNamespace::OVRBinaryChunk chunk, ByRef<::ArrayW<::UnityEngine::Vector4>> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsBoneWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsBoneWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunk, byref(data), offset);
}
// Autogenerated method: OVRGLTFAccessor.GetStrideForType
int GlobalNamespace::OVRGLTFAccessor::GetStrideForType(::GlobalNamespace::OVRGLTFComponentType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::GetStrideForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStrideForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, type);
}
// Autogenerated method: OVRGLTFAccessor.GetMaxValueForType
float GlobalNamespace::OVRGLTFAccessor::GetMaxValueForType(::GlobalNamespace::OVRGLTFComponentType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::GetMaxValueForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxValueForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, type);
}
// Autogenerated method: OVRGLTFAccessor.ReadElementAsUint
uint GlobalNamespace::OVRGLTFAccessor::ReadElementAsUint(::ArrayW<uint8_t> data, int index, ::GlobalNamespace::OVRGLTFComponentType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadElementAsUint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadElementAsUint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, data, index, type);
}
// Autogenerated method: OVRGLTFAccessor.ReadElementAsFloat
float GlobalNamespace::OVRGLTFAccessor::ReadElementAsFloat(::ArrayW<uint8_t> data, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadElementAsFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadElementAsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, data, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRGLTFInputNode
#include "GlobalNamespace/OVRGLTFInputNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRGLTFInputNode None
::GlobalNamespace::OVRGLTFInputNode GlobalNamespace::OVRGLTFInputNode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFInputNode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFInputNode>("", "OVRGLTFInputNode", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFInputNode None
void GlobalNamespace::OVRGLTFInputNode::_set_None(::GlobalNamespace::OVRGLTFInputNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFInputNode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFInputNode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFInputNode Button_A_X
::GlobalNamespace::OVRGLTFInputNode GlobalNamespace::OVRGLTFInputNode::_get_Button_A_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFInputNode::_get_Button_A_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFInputNode>("", "OVRGLTFInputNode", "Button_A_X"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFInputNode Button_A_X
void GlobalNamespace::OVRGLTFInputNode::_set_Button_A_X(::GlobalNamespace::OVRGLTFInputNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFInputNode::_set_Button_A_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFInputNode", "Button_A_X", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFInputNode Button_B_Y
::GlobalNamespace::OVRGLTFInputNode GlobalNamespace::OVRGLTFInputNode::_get_Button_B_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFInputNode::_get_Button_B_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFInputNode>("", "OVRGLTFInputNode", "Button_B_Y"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFInputNode Button_B_Y
void GlobalNamespace::OVRGLTFInputNode::_set_Button_B_Y(::GlobalNamespace::OVRGLTFInputNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFInputNode::_set_Button_B_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFInputNode", "Button_B_Y", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFInputNode Button_Oculus_Menu
::GlobalNamespace::OVRGLTFInputNode GlobalNamespace::OVRGLTFInputNode::_get_Button_Oculus_Menu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFInputNode::_get_Button_Oculus_Menu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFInputNode>("", "OVRGLTFInputNode", "Button_Oculus_Menu"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFInputNode Button_Oculus_Menu
void GlobalNamespace::OVRGLTFInputNode::_set_Button_Oculus_Menu(::GlobalNamespace::OVRGLTFInputNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFInputNode::_set_Button_Oculus_Menu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFInputNode", "Button_Oculus_Menu", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFInputNode Trigger_Grip
::GlobalNamespace::OVRGLTFInputNode GlobalNamespace::OVRGLTFInputNode::_get_Trigger_Grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFInputNode::_get_Trigger_Grip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFInputNode>("", "OVRGLTFInputNode", "Trigger_Grip"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFInputNode Trigger_Grip
void GlobalNamespace::OVRGLTFInputNode::_set_Trigger_Grip(::GlobalNamespace::OVRGLTFInputNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFInputNode::_set_Trigger_Grip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFInputNode", "Trigger_Grip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFInputNode Trigger_Front
::GlobalNamespace::OVRGLTFInputNode GlobalNamespace::OVRGLTFInputNode::_get_Trigger_Front() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFInputNode::_get_Trigger_Front");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFInputNode>("", "OVRGLTFInputNode", "Trigger_Front"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFInputNode Trigger_Front
void GlobalNamespace::OVRGLTFInputNode::_set_Trigger_Front(::GlobalNamespace::OVRGLTFInputNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFInputNode::_set_Trigger_Front");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFInputNode", "Trigger_Front", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFInputNode ThumbStick
::GlobalNamespace::OVRGLTFInputNode GlobalNamespace::OVRGLTFInputNode::_get_ThumbStick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFInputNode::_get_ThumbStick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFInputNode>("", "OVRGLTFInputNode", "ThumbStick"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFInputNode ThumbStick
void GlobalNamespace::OVRGLTFInputNode::_set_ThumbStick(::GlobalNamespace::OVRGLTFInputNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFInputNode::_set_ThumbStick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFInputNode", "ThumbStick", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFInputNode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFInputNode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRGLTFAnimatinonNode
#include "GlobalNamespace/OVRGLTFAnimatinonNode.hpp"
// Including type: OVRGLTFAnimatinonNode/OVRGLTFTransformType
#include "GlobalNamespace/OVRGLTFAnimatinonNode_OVRGLTFTransformType.hpp"
// Including type: OVRGLTFAnimatinonNode/OVRInterpolationType
#include "GlobalNamespace/OVRGLTFAnimatinonNode_OVRInterpolationType.hpp"
// Including type: OVRGLTFAnimationNodeMorphTargetHandler
#include "GlobalNamespace/OVRGLTFAnimationNodeMorphTargetHandler.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<OVRGLTFInputNode,System.Int32> InputNodeKeyFrames
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRGLTFInputNode, int>* GlobalNamespace::OVRGLTFAnimatinonNode::_get_InputNodeKeyFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::_get_InputNodeKeyFrames");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRGLTFInputNode, int>*>("", "OVRGLTFAnimatinonNode", "InputNodeKeyFrames")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<OVRGLTFInputNode,System.Int32> InputNodeKeyFrames
void GlobalNamespace::OVRGLTFAnimatinonNode::_set_InputNodeKeyFrames(::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRGLTFInputNode, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::_set_InputNodeKeyFrames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode", "InputNodeKeyFrames", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Int32> ThumbStickKeyFrames
::System::Collections::Generic::List_1<int>* GlobalNamespace::OVRGLTFAnimatinonNode::_get_ThumbStickKeyFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::_get_ThumbStickKeyFrames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<int>*>("", "OVRGLTFAnimatinonNode", "ThumbStickKeyFrames"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Int32> ThumbStickKeyFrames
void GlobalNamespace::OVRGLTFAnimatinonNode::_set_ThumbStickKeyFrames(::System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::_set_ThumbStickKeyFrames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode", "ThumbStickKeyFrames", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2[] CardDirections
::ArrayW<::UnityEngine::Vector2> GlobalNamespace::OVRGLTFAnimatinonNode::_get_CardDirections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::_get_CardDirections");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector2>>("", "OVRGLTFAnimatinonNode", "CardDirections"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2[] CardDirections
void GlobalNamespace::OVRGLTFAnimatinonNode::_set_CardDirections(::ArrayW<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::_set_CardDirections");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode", "CardDirections", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRGLTFInputNode m_intputNodeType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRGLTFInputNode& GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_intputNodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_intputNodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_intputNodeType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRGLTFInputNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode m_jsonData
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_jsonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_jsonData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_jsonData"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRBinaryChunk m_binaryChunk
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRBinaryChunk& GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_binaryChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_binaryChunk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_binaryChunk"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRBinaryChunk*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_gameObj
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_gameObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_gameObj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_gameObj"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRGLTFAnimatinonNode/InputNodeState m_inputNodeState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRGLTFAnimatinonNode::InputNodeState& GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_inputNodeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_inputNodeState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_inputNodeState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRGLTFAnimatinonNode::InputNodeState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRGLTFAnimationNodeMorphTargetHandler m_morphTargetHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler*& GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_morphTargetHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_morphTargetHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_morphTargetHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> m_translations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_translations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_translations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_translations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Quaternion> m_rotations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Quaternion>*& GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_rotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_rotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rotations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Quaternion>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> m_scales
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_scales() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_scales");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_scales"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single> m_weights
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<float>*& GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_weights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_weights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_weights"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_additiveWeightIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_additiveWeightIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::dyn_m_additiveWeightIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_additiveWeightIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRGLTFAnimatinonNode.AddChannel
void GlobalNamespace::OVRGLTFAnimatinonNode::AddChannel(::OVRSimpleJSON::JSONNode* channel, ::OVRSimpleJSON::JSONNode* samplers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::AddChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(samplers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channel, samplers);
}
// Autogenerated method: OVRGLTFAnimatinonNode.UpdatePose
void GlobalNamespace::OVRGLTFAnimatinonNode::UpdatePose(bool down) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::UpdatePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(down)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, down);
}
// Autogenerated method: OVRGLTFAnimatinonNode.UpdatePose
void GlobalNamespace::OVRGLTFAnimatinonNode::UpdatePose(float t, bool applyDeadZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::UpdatePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(applyDeadZone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, applyDeadZone);
}
// Autogenerated method: OVRGLTFAnimatinonNode.UpdatePose
void GlobalNamespace::OVRGLTFAnimatinonNode::UpdatePose(::UnityEngine::Vector2 joystick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::UpdatePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joystick)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, joystick);
}
// Autogenerated method: OVRGLTFAnimatinonNode.GetCardinalThumbsticks
::System::Tuple_2<::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection, ::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection>* GlobalNamespace::OVRGLTFAnimatinonNode::GetCardinalThumbsticks(::UnityEngine::Vector2 joystick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::GetCardinalThumbsticks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCardinalThumbsticks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joystick)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Tuple_2<::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection, ::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection>*, false>(this, ___internal__method, joystick);
}
// Autogenerated method: OVRGLTFAnimatinonNode.GetCardinalWeights
::UnityEngine::Vector2 GlobalNamespace::OVRGLTFAnimatinonNode::GetCardinalWeights(::UnityEngine::Vector2 joystick, ::System::Tuple_2<::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection, ::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection>* cardinals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::GetCardinalWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCardinalWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joystick), ::il2cpp_utils::ExtractType(cardinals)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, joystick, cardinals);
}
// Autogenerated method: OVRGLTFAnimatinonNode.ProcessAnimationSampler
void GlobalNamespace::OVRGLTFAnimatinonNode::ProcessAnimationSampler(::OVRSimpleJSON::JSONNode* samplerNode, int nodeId, ::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType transformType, ::OVRSimpleJSON::JSONNode* extras) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ProcessAnimationSampler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAnimationSampler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samplerNode), ::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(transformType), ::il2cpp_utils::ExtractType(extras)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, samplerNode, nodeId, transformType, extras);
}
// Autogenerated method: OVRGLTFAnimatinonNode.GetTransformType
::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType GlobalNamespace::OVRGLTFAnimatinonNode::GetTransformType(::StringW transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::GetTransformType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransformType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType, false>(this, ___internal__method, transform);
}
// Autogenerated method: OVRGLTFAnimatinonNode.ToOVRInterpolationType
::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType GlobalNamespace::OVRGLTFAnimatinonNode::ToOVRInterpolationType(::StringW interpolationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ToOVRInterpolationType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToOVRInterpolationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interpolationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType, false>(this, ___internal__method, interpolationType);
}
// Autogenerated method: OVRGLTFAnimatinonNode.CloneVector3
::UnityEngine::Vector3 GlobalNamespace::OVRGLTFAnimatinonNode::CloneVector3(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::CloneVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, v);
}
// Autogenerated method: OVRGLTFAnimatinonNode.CloneQuaternion
::UnityEngine::Quaternion GlobalNamespace::OVRGLTFAnimatinonNode::CloneQuaternion(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::CloneQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, q);
}
// Autogenerated method: OVRGLTFAnimatinonNode..cctor
void GlobalNamespace::OVRGLTFAnimatinonNode::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRGLTFAnimatinonNode", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRGLTFAnimatinonNode/ThumbstickDirection
#include "GlobalNamespace/OVRGLTFAnimatinonNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection None
::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection>("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection None
void GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_None(::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection North
::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_North() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_North");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection>("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "North"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection North
void GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_North(::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_North");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "North", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection NorthEast
::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_NorthEast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_NorthEast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection>("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "NorthEast"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection NorthEast
void GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_NorthEast(::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_NorthEast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "NorthEast", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection East
::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_East() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_East");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection>("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "East"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection East
void GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_East(::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_East");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "East", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection SouthEast
::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_SouthEast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_SouthEast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection>("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "SouthEast"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection SouthEast
void GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_SouthEast(::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_SouthEast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "SouthEast", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection South
::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_South() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_South");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection>("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "South"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection South
void GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_South(::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_South");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "South", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection SouthWest
::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_SouthWest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_SouthWest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection>("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "SouthWest"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection SouthWest
void GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_SouthWest(::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_SouthWest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "SouthWest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection West
::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_West() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_West");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection>("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "West"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection West
void GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_West(::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_West");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "West", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection NorthWest
::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_NorthWest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_get_NorthWest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection>("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "NorthWest"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/ThumbstickDirection NorthWest
void GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_NorthWest(::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::_set_NorthWest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/ThumbstickDirection", "NorthWest", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::ThumbstickDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRGLTFAnimatinonNode/OVRGLTFTransformType
#include "GlobalNamespace/OVRGLTFAnimatinonNode_OVRGLTFTransformType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/OVRGLTFTransformType None
::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType>("", "OVRGLTFAnimatinonNode/OVRGLTFTransformType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/OVRGLTFTransformType None
void GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_set_None(::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/OVRGLTFTransformType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/OVRGLTFTransformType Translation
::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_get_Translation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_get_Translation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType>("", "OVRGLTFAnimatinonNode/OVRGLTFTransformType", "Translation"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/OVRGLTFTransformType Translation
void GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_set_Translation(::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_set_Translation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/OVRGLTFTransformType", "Translation", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/OVRGLTFTransformType Rotation
::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType>("", "OVRGLTFAnimatinonNode/OVRGLTFTransformType", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/OVRGLTFTransformType Rotation
void GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_set_Rotation(::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/OVRGLTFTransformType", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/OVRGLTFTransformType Scale
::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_get_Scale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType>("", "OVRGLTFAnimatinonNode/OVRGLTFTransformType", "Scale"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/OVRGLTFTransformType Scale
void GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_set_Scale(::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_set_Scale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/OVRGLTFTransformType", "Scale", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/OVRGLTFTransformType Weights
::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_get_Weights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_get_Weights");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType>("", "OVRGLTFAnimatinonNode/OVRGLTFTransformType", "Weights"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/OVRGLTFTransformType Weights
void GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_set_Weights(::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::_set_Weights");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/OVRGLTFTransformType", "Weights", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRGLTFTransformType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRGLTFAnimatinonNode/OVRInterpolationType
#include "GlobalNamespace/OVRGLTFAnimatinonNode_OVRInterpolationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/OVRInterpolationType None
::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType>("", "OVRGLTFAnimatinonNode/OVRInterpolationType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/OVRInterpolationType None
void GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::_set_None(::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/OVRInterpolationType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/OVRInterpolationType LINEAR
::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::_get_LINEAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::_get_LINEAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType>("", "OVRGLTFAnimatinonNode/OVRInterpolationType", "LINEAR"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/OVRInterpolationType LINEAR
void GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::_set_LINEAR(::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::_set_LINEAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/OVRInterpolationType", "LINEAR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/OVRInterpolationType STEP
::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::_get_STEP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::_get_STEP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType>("", "OVRGLTFAnimatinonNode/OVRInterpolationType", "STEP"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/OVRInterpolationType STEP
void GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::_set_STEP(::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::_set_STEP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/OVRInterpolationType", "STEP", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFAnimatinonNode/OVRInterpolationType CUBICSPLINE
::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::_get_CUBICSPLINE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::_get_CUBICSPLINE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType>("", "OVRGLTFAnimatinonNode/OVRInterpolationType", "CUBICSPLINE"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFAnimatinonNode/OVRInterpolationType CUBICSPLINE
void GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::_set_CUBICSPLINE(::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::_set_CUBICSPLINE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFAnimatinonNode/OVRInterpolationType", "CUBICSPLINE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimatinonNode::OVRInterpolationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRGLTFAnimationNodeMorphTargetHandler
#include "GlobalNamespace/OVRGLTFAnimationNodeMorphTargetHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRMeshData <MeshData>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRMeshData& GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler::dyn_$MeshData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler::dyn_$MeshData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MeshData>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRMeshData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] Weights
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler::dyn_Weights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler::dyn_Weights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Weights"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean modified
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler::dyn_modified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler::dyn_modified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modified"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRGLTFAnimationNodeMorphTargetHandler.get_MeshData
::GlobalNamespace::OVRMeshData GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler::get_MeshData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler::get_MeshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MeshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMeshData, false>(this, ___internal__method);
}
// Autogenerated method: OVRGLTFAnimationNodeMorphTargetHandler.set_MeshData
void GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler::set_MeshData(::GlobalNamespace::OVRMeshData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler::set_MeshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MeshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRGLTFAnimationNodeMorphTargetHandler.Update
void GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGLTFAnimationNodeMorphTargetHandler.MarkModified
void GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler::MarkModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler::MarkModified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRChunkType
#include "GlobalNamespace/OVRChunkType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRChunkType JSON
::GlobalNamespace::OVRChunkType GlobalNamespace::OVRChunkType::_get_JSON() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRChunkType::_get_JSON");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRChunkType>("", "OVRChunkType", "JSON"));
}
// Autogenerated static field setter
// Set static field: static public OVRChunkType JSON
void GlobalNamespace::OVRChunkType::_set_JSON(::GlobalNamespace::OVRChunkType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRChunkType::_set_JSON");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRChunkType", "JSON", value));
}
// Autogenerated static field getter
// Get static field: static public OVRChunkType BIN
::GlobalNamespace::OVRChunkType GlobalNamespace::OVRChunkType::_get_BIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRChunkType::_get_BIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRChunkType>("", "OVRChunkType", "BIN"));
}
// Autogenerated static field setter
// Set static field: static public OVRChunkType BIN
void GlobalNamespace::OVRChunkType::_set_BIN(::GlobalNamespace::OVRChunkType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRChunkType::_set_BIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRChunkType", "BIN", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRChunkType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRChunkType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTextureFormat
#include "GlobalNamespace/OVRTextureFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRTextureFormat NONE
::GlobalNamespace::OVRTextureFormat GlobalNamespace::OVRTextureFormat::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTextureFormat>("", "OVRTextureFormat", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public OVRTextureFormat NONE
void GlobalNamespace::OVRTextureFormat::_set_NONE(::GlobalNamespace::OVRTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTextureFormat", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTextureFormat KTX2
::GlobalNamespace::OVRTextureFormat GlobalNamespace::OVRTextureFormat::_get_KTX2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::_get_KTX2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTextureFormat>("", "OVRTextureFormat", "KTX2"));
}
// Autogenerated static field setter
// Set static field: static public OVRTextureFormat KTX2
void GlobalNamespace::OVRTextureFormat::_set_KTX2(::GlobalNamespace::OVRTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::_set_KTX2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTextureFormat", "KTX2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTextureFormat PNG
::GlobalNamespace::OVRTextureFormat GlobalNamespace::OVRTextureFormat::_get_PNG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::_get_PNG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTextureFormat>("", "OVRTextureFormat", "PNG"));
}
// Autogenerated static field setter
// Set static field: static public OVRTextureFormat PNG
void GlobalNamespace::OVRTextureFormat::_set_PNG(::GlobalNamespace::OVRTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::_set_PNG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTextureFormat", "PNG", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTextureFormat JPEG
::GlobalNamespace::OVRTextureFormat GlobalNamespace::OVRTextureFormat::_get_JPEG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::_get_JPEG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTextureFormat>("", "OVRTextureFormat", "JPEG"));
}
// Autogenerated static field setter
// Set static field: static public OVRTextureFormat JPEG
void GlobalNamespace::OVRTextureFormat::_set_JPEG(::GlobalNamespace::OVRTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::_set_JPEG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTextureFormat", "JPEG", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTextureFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTextureQualityFiltering
#include "GlobalNamespace/OVRTextureQualityFiltering.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRTextureQualityFiltering None
::GlobalNamespace::OVRTextureQualityFiltering GlobalNamespace::OVRTextureQualityFiltering::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureQualityFiltering::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTextureQualityFiltering>("", "OVRTextureQualityFiltering", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRTextureQualityFiltering None
void GlobalNamespace::OVRTextureQualityFiltering::_set_None(::GlobalNamespace::OVRTextureQualityFiltering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureQualityFiltering::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTextureQualityFiltering", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTextureQualityFiltering Bilinear
::GlobalNamespace::OVRTextureQualityFiltering GlobalNamespace::OVRTextureQualityFiltering::_get_Bilinear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureQualityFiltering::_get_Bilinear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTextureQualityFiltering>("", "OVRTextureQualityFiltering", "Bilinear"));
}
// Autogenerated static field setter
// Set static field: static public OVRTextureQualityFiltering Bilinear
void GlobalNamespace::OVRTextureQualityFiltering::_set_Bilinear(::GlobalNamespace::OVRTextureQualityFiltering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureQualityFiltering::_set_Bilinear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTextureQualityFiltering", "Bilinear", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTextureQualityFiltering Trilinear
::GlobalNamespace::OVRTextureQualityFiltering GlobalNamespace::OVRTextureQualityFiltering::_get_Trilinear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureQualityFiltering::_get_Trilinear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTextureQualityFiltering>("", "OVRTextureQualityFiltering", "Trilinear"));
}
// Autogenerated static field setter
// Set static field: static public OVRTextureQualityFiltering Trilinear
void GlobalNamespace::OVRTextureQualityFiltering::_set_Trilinear(::GlobalNamespace::OVRTextureQualityFiltering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureQualityFiltering::_set_Trilinear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTextureQualityFiltering", "Trilinear", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTextureQualityFiltering Aniso2x
::GlobalNamespace::OVRTextureQualityFiltering GlobalNamespace::OVRTextureQualityFiltering::_get_Aniso2x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureQualityFiltering::_get_Aniso2x");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTextureQualityFiltering>("", "OVRTextureQualityFiltering", "Aniso2x"));
}
// Autogenerated static field setter
// Set static field: static public OVRTextureQualityFiltering Aniso2x
void GlobalNamespace::OVRTextureQualityFiltering::_set_Aniso2x(::GlobalNamespace::OVRTextureQualityFiltering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureQualityFiltering::_set_Aniso2x");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTextureQualityFiltering", "Aniso2x", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTextureQualityFiltering Aniso4x
::GlobalNamespace::OVRTextureQualityFiltering GlobalNamespace::OVRTextureQualityFiltering::_get_Aniso4x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureQualityFiltering::_get_Aniso4x");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTextureQualityFiltering>("", "OVRTextureQualityFiltering", "Aniso4x"));
}
// Autogenerated static field setter
// Set static field: static public OVRTextureQualityFiltering Aniso4x
void GlobalNamespace::OVRTextureQualityFiltering::_set_Aniso4x(::GlobalNamespace::OVRTextureQualityFiltering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureQualityFiltering::_set_Aniso4x");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTextureQualityFiltering", "Aniso4x", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTextureQualityFiltering Aniso8x
::GlobalNamespace::OVRTextureQualityFiltering GlobalNamespace::OVRTextureQualityFiltering::_get_Aniso8x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureQualityFiltering::_get_Aniso8x");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTextureQualityFiltering>("", "OVRTextureQualityFiltering", "Aniso8x"));
}
// Autogenerated static field setter
// Set static field: static public OVRTextureQualityFiltering Aniso8x
void GlobalNamespace::OVRTextureQualityFiltering::_set_Aniso8x(::GlobalNamespace::OVRTextureQualityFiltering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureQualityFiltering::_set_Aniso8x");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTextureQualityFiltering", "Aniso8x", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTextureQualityFiltering Aniso16x
::GlobalNamespace::OVRTextureQualityFiltering GlobalNamespace::OVRTextureQualityFiltering::_get_Aniso16x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureQualityFiltering::_get_Aniso16x");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTextureQualityFiltering>("", "OVRTextureQualityFiltering", "Aniso16x"));
}
// Autogenerated static field setter
// Set static field: static public OVRTextureQualityFiltering Aniso16x
void GlobalNamespace::OVRTextureQualityFiltering::_set_Aniso16x(::GlobalNamespace::OVRTextureQualityFiltering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureQualityFiltering::_set_Aniso16x");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTextureQualityFiltering", "Aniso16x", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTextureQualityFiltering::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureQualityFiltering::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRGLTFLoader
#include "GlobalNamespace/OVRGLTFLoader.hpp"
// Including type: OVRGLTFLoader/<>c__DisplayClass30_0
#include "GlobalNamespace/OVRGLTFLoader_--c__DisplayClass30_0.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OVRGLTFAnimatinonNode
#include "GlobalNamespace/OVRGLTFAnimatinonNode.hpp"
// Including type: OVRGLTFAnimationNodeMorphTargetHandler
#include "GlobalNamespace/OVRGLTFAnimationNodeMorphTargetHandler.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: OVRGLTFScene
#include "GlobalNamespace/OVRGLTFScene.hpp"
// Including type: OVRChunkType
#include "GlobalNamespace/OVRChunkType.hpp"
// Including type: OVRMeshData
#include "GlobalNamespace/OVRMeshData.hpp"
// Including type: OVRMeshAttributes
#include "GlobalNamespace/OVRMeshAttributes.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: OVRMaterialData
#include "GlobalNamespace/OVRMaterialData.hpp"
// Including type: OVRTextureData
#include "GlobalNamespace/OVRTextureData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Vector3 GLTFToUnitySpace
::UnityEngine::Vector3 GlobalNamespace::OVRGLTFLoader::_get_GLTFToUnitySpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::_get_GLTFToUnitySpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OVRGLTFLoader", "GLTFToUnitySpace"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Vector3 GLTFToUnitySpace
void GlobalNamespace::OVRGLTFLoader::_set_GLTFToUnitySpace(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::_set_GLTFToUnitySpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFLoader", "GLTFToUnitySpace", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Vector3 GLTFToUnityTangent
::UnityEngine::Vector3 GlobalNamespace::OVRGLTFLoader::_get_GLTFToUnityTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::_get_GLTFToUnityTangent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OVRGLTFLoader", "GLTFToUnityTangent"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Vector3 GLTFToUnityTangent
void GlobalNamespace::OVRGLTFLoader::_set_GLTFToUnityTangent(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::_set_GLTFToUnityTangent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFLoader", "GLTFToUnityTangent", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Vector4 GLTFToUnitySpace_Rotation
::UnityEngine::Vector4 GlobalNamespace::OVRGLTFLoader::_get_GLTFToUnitySpace_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::_get_GLTFToUnitySpace_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector4>("", "OVRGLTFLoader", "GLTFToUnitySpace_Rotation"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Vector4 GLTFToUnitySpace_Rotation
void GlobalNamespace::OVRGLTFLoader::_set_GLTFToUnitySpace_Rotation(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::_set_GLTFToUnitySpace_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFLoader", "GLTFToUnitySpace_Rotation", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,OVRGLTFInputNode> InputNodeNameMap
::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::OVRGLTFInputNode>* GlobalNamespace::OVRGLTFLoader::_get_InputNodeNameMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::_get_InputNodeNameMap");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::OVRGLTFInputNode>*>("", "OVRGLTFLoader", "InputNodeNameMap")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,OVRGLTFInputNode> InputNodeNameMap
void GlobalNamespace::OVRGLTFLoader::_set_InputNodeNameMap(::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::OVRGLTFInputNode>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::_set_InputNodeNameMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFLoader", "InputNodeNameMap", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode m_jsonData
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& GlobalNamespace::OVRGLTFLoader::dyn_m_jsonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_m_jsonData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_jsonData"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream m_glbStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& GlobalNamespace::OVRGLTFLoader::dyn_m_glbStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_m_glbStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_glbStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRBinaryChunk m_binaryChunk
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRBinaryChunk& GlobalNamespace::OVRGLTFLoader::dyn_m_binaryChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_m_binaryChunk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_binaryChunk"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRBinaryChunk*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> m_Nodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::OVRGLTFLoader::dyn_m_Nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_m_Nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Nodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OVRGLTFInputNode,OVRGLTFAnimatinonNode> m_InputAnimationNodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRGLTFInputNode, ::GlobalNamespace::OVRGLTFAnimatinonNode*>*& GlobalNamespace::OVRGLTFLoader::dyn_m_InputAnimationNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_m_InputAnimationNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputAnimationNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::OVRGLTFInputNode, ::GlobalNamespace::OVRGLTFAnimatinonNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,OVRGLTFAnimatinonNode[]> m_AnimationLookup
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::ArrayW<::GlobalNamespace::OVRGLTFAnimatinonNode*>>*& GlobalNamespace::OVRGLTFLoader::dyn_m_AnimationLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_m_AnimationLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimationLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::ArrayW<::GlobalNamespace::OVRGLTFAnimatinonNode*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,OVRGLTFAnimationNodeMorphTargetHandler> m_morphTargetHandlers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler*>*& GlobalNamespace::OVRGLTFLoader::dyn_m_morphTargetHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_m_morphTargetHandlers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_morphTargetHandlers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::OVRGLTFAnimationNodeMorphTargetHandler*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader m_Shader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OVRGLTFLoader::dyn_m_Shader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_m_Shader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Shader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader m_AlphaBlendShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OVRGLTFLoader::dyn_m_AlphaBlendShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_m_AlphaBlendShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AlphaBlendShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTextureQualityFiltering m_TextureQuality
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRTextureQualityFiltering& GlobalNamespace::OVRGLTFLoader::dyn_m_TextureQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_m_TextureQuality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextureQuality"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRTextureQualityFiltering*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TextureMipmapBias
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRGLTFLoader::dyn_m_TextureMipmapBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_m_TextureMipmapBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextureMipmapBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`3<System.String,UnityEngine.Material,UnityEngine.Texture2D> textureUriHandler
[[deprecated("Use field access instead!")]] ::System::Func_3<::StringW, ::UnityEngine::Material*, ::UnityEngine::Texture2D*>*& GlobalNamespace::OVRGLTFLoader::dyn_textureUriHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_textureUriHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureUriHandler"))->offset;
  return *reinterpret_cast<::System::Func_3<::StringW, ::UnityEngine::Material*, ::UnityEngine::Texture2D*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRGLTFLoader.LoadGLB
::GlobalNamespace::OVRGLTFScene GlobalNamespace::OVRGLTFLoader::LoadGLB(bool supportAnimation, bool loadMips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::LoadGLB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadGLB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(supportAnimation), ::il2cpp_utils::ExtractType(loadMips)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRGLTFScene, false>(this, ___internal__method, supportAnimation, loadMips);
}
// Autogenerated method: OVRGLTFLoader.SetModelShader
void GlobalNamespace::OVRGLTFLoader::SetModelShader(::UnityEngine::Shader* shader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::SetModelShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModelShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shader);
}
// Autogenerated method: OVRGLTFLoader.SetModelAlphaBlendShader
void GlobalNamespace::OVRGLTFLoader::SetModelAlphaBlendShader(::UnityEngine::Shader* shader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::SetModelAlphaBlendShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModelAlphaBlendShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shader);
}
// Autogenerated method: OVRGLTFLoader.SetTextureQualityFiltering
void GlobalNamespace::OVRGLTFLoader::SetTextureQualityFiltering(::GlobalNamespace::OVRTextureQualityFiltering loadedTexturesQuality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::SetTextureQualityFiltering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureQualityFiltering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loadedTexturesQuality)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loadedTexturesQuality);
}
// Autogenerated method: OVRGLTFLoader.SetMipMapBias
void GlobalNamespace::OVRGLTFLoader::SetMipMapBias(float loadedTexturesMipmapBiasing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::SetMipMapBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMipMapBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loadedTexturesMipmapBiasing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loadedTexturesMipmapBiasing);
}
// Autogenerated method: OVRGLTFLoader.DetectTextureQuality
::GlobalNamespace::OVRTextureQualityFiltering GlobalNamespace::OVRGLTFLoader::DetectTextureQuality(ByRef<::UnityEngine::Texture2D*> srcTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::DetectTextureQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRGLTFLoader", "DetectTextureQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(srcTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTextureQualityFiltering, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(srcTexture));
}
// Autogenerated method: OVRGLTFLoader.ApplyTextureQuality
void GlobalNamespace::OVRGLTFLoader::ApplyTextureQuality(::GlobalNamespace::OVRTextureQualityFiltering qualityLevel, ByRef<::UnityEngine::Texture2D*> destTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ApplyTextureQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRGLTFLoader", "ApplyTextureQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualityLevel), ::il2cpp_utils::ExtractType(destTexture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qualityLevel, byref(destTexture));
}
// Autogenerated method: OVRGLTFLoader.ValidateGLB
bool GlobalNamespace::OVRGLTFLoader::ValidateGLB(::System::IO::Stream* glbStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ValidateGLB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateGLB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glbStream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, glbStream);
}
// Autogenerated method: OVRGLTFLoader.ReadChunk
::ArrayW<uint8_t> GlobalNamespace::OVRGLTFLoader::ReadChunk(::System::IO::Stream* glbStream, ::GlobalNamespace::OVRChunkType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ReadChunk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadChunk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glbStream), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, glbStream, type);
}
// Autogenerated method: OVRGLTFLoader.ValidateChunk
bool GlobalNamespace::OVRGLTFLoader::ValidateChunk(::System::IO::Stream* glbStream, ::GlobalNamespace::OVRChunkType type, ByRef<uint> chunkLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ValidateChunk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateChunk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glbStream), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, glbStream, type, byref(chunkLength));
}
// Autogenerated method: OVRGLTFLoader.LoadGLTF
int GlobalNamespace::OVRGLTFLoader::LoadGLTF(bool supportAnimation, bool loadMips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::LoadGLTF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadGLTF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(supportAnimation), ::il2cpp_utils::ExtractType(loadMips)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, supportAnimation, loadMips);
}
// Autogenerated method: OVRGLTFLoader.ProcessNode
void GlobalNamespace::OVRGLTFLoader::ProcessNode(::OVRSimpleJSON::JSONNode* node, int nodeId, bool loadMips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ProcessNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(loadMips)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, nodeId, loadMips);
}
// Autogenerated method: OVRGLTFLoader.ProcessMesh
::GlobalNamespace::OVRMeshData GlobalNamespace::OVRGLTFLoader::ProcessMesh(::OVRSimpleJSON::JSONNode* meshNode, bool loadMips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ProcessMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshNode), ::il2cpp_utils::ExtractType(loadMips)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMeshData, false>(this, ___internal__method, meshNode, loadMips);
}
// Autogenerated method: OVRGLTFLoader.FlipTraingleIndices
void GlobalNamespace::OVRGLTFLoader::FlipTraingleIndices(ByRef<::ArrayW<int>> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::FlipTraingleIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRGLTFLoader", "FlipTraingleIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(indices));
}
// Autogenerated method: OVRGLTFLoader.ReadMeshAttributes
::GlobalNamespace::OVRMeshAttributes GlobalNamespace::OVRGLTFLoader::ReadMeshAttributes(::OVRSimpleJSON::JSONNode* jsonAttributes, int totalVertexCount, int vertexOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ReadMeshAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadMeshAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonAttributes), ::il2cpp_utils::ExtractType(totalVertexCount), ::il2cpp_utils::ExtractType(vertexOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMeshAttributes, false>(this, ___internal__method, jsonAttributes, totalVertexCount, vertexOffset);
}
// Autogenerated method: OVRGLTFLoader.ProcessSkin
void GlobalNamespace::OVRGLTFLoader::ProcessSkin(::OVRSimpleJSON::JSONNode* skinNode, ::UnityEngine::SkinnedMeshRenderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ProcessSkin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSkin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skinNode), ::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skinNode, renderer);
}
// Autogenerated method: OVRGLTFLoader.ProcessMaterial
::GlobalNamespace::OVRMaterialData GlobalNamespace::OVRGLTFLoader::ProcessMaterial(int matId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ProcessMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMaterialData, false>(this, ___internal__method, matId);
}
// Autogenerated method: OVRGLTFLoader.ProcessTexture
::GlobalNamespace::OVRTextureData GlobalNamespace::OVRGLTFLoader::ProcessTexture(int textureId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ProcessTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTextureData, false>(this, ___internal__method, textureId);
}
// Autogenerated method: OVRGLTFLoader.TranscodeTexture
void GlobalNamespace::OVRGLTFLoader::TranscodeTexture(ByRef<::GlobalNamespace::OVRTextureData> textureData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::TranscodeTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TranscodeTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(textureData));
}
// Autogenerated method: OVRGLTFLoader.CreateUnityMaterial
::UnityEngine::Material* GlobalNamespace::OVRGLTFLoader::CreateUnityMaterial(::GlobalNamespace::OVRMaterialData matData, bool loadMips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::CreateUnityMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUnityMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matData), ::il2cpp_utils::ExtractType(loadMips)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, matData, loadMips);
}
// Autogenerated method: OVRGLTFLoader.GetInputNodeType
::GlobalNamespace::OVRGLTFInputNode GlobalNamespace::OVRGLTFLoader::GetInputNodeType(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::GetInputNodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInputNodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRGLTFInputNode, false>(this, ___internal__method, name);
}
// Autogenerated method: OVRGLTFLoader.ProcessAnimations
void GlobalNamespace::OVRGLTFLoader::ProcessAnimations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ProcessAnimations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAnimations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGLTFLoader..cctor
void GlobalNamespace::OVRGLTFLoader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRGLTFLoader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRGLTFLoader/<>c__DisplayClass30_0
#include "GlobalNamespace/OVRGLTFLoader_--c__DisplayClass30_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRGLTFLoader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRGLTFLoader*& GlobalNamespace::OVRGLTFLoader::$$c__DisplayClass30_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::$$c__DisplayClass30_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRGLTFLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRMaterialData matData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRMaterialData& GlobalNamespace::OVRGLTFLoader::$$c__DisplayClass30_0::dyn_matData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::$$c__DisplayClass30_0::dyn_matData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRMaterialData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRGLTFLoader/<>c__DisplayClass30_0.<ProcessMesh>b__0
void GlobalNamespace::OVRGLTFLoader::$$c__DisplayClass30_0::$ProcessMesh$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::$$c__DisplayClass30_0::<ProcessMesh>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ProcessMesh>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRHaptics
#include "GlobalNamespace/OVRHaptics.hpp"
// Including type: OVRHaptics/Config
#include "GlobalNamespace/OVRHaptics_Config.hpp"
// Including type: OVRHaptics/OVRHapticsChannel
#include "GlobalNamespace/OVRHaptics_OVRHapticsChannel.hpp"
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel[] Channels
::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*> GlobalNamespace::OVRHaptics::_get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_Channels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*>>("", "OVRHaptics", "Channels"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel[] Channels
void GlobalNamespace::OVRHaptics::_set_Channels(::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_Channels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "Channels", value));
}
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel LeftChannel
::GlobalNamespace::OVRHaptics::OVRHapticsChannel* GlobalNamespace::OVRHaptics::_get_LeftChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_LeftChannel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*>("", "OVRHaptics", "LeftChannel"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel LeftChannel
void GlobalNamespace::OVRHaptics::_set_LeftChannel(::GlobalNamespace::OVRHaptics::OVRHapticsChannel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_LeftChannel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "LeftChannel", value));
}
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel RightChannel
::GlobalNamespace::OVRHaptics::OVRHapticsChannel* GlobalNamespace::OVRHaptics::_get_RightChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_RightChannel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*>("", "OVRHaptics", "RightChannel"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel RightChannel
void GlobalNamespace::OVRHaptics::_set_RightChannel(::GlobalNamespace::OVRHaptics::OVRHapticsChannel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_RightChannel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "RightChannel", value));
}
// Autogenerated static field getter
// Get static field: static private readonly OVRHaptics/OVRHapticsOutput[] m_outputs
::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsOutput*> GlobalNamespace::OVRHaptics::_get_m_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_m_outputs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsOutput*>>("", "OVRHaptics", "m_outputs"));
}
// Autogenerated static field setter
// Set static field: static private readonly OVRHaptics/OVRHapticsOutput[] m_outputs
void GlobalNamespace::OVRHaptics::_set_m_outputs(::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsOutput*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_m_outputs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "m_outputs", value));
}
// Autogenerated method: OVRHaptics..cctor
void GlobalNamespace::OVRHaptics::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics.Process
void GlobalNamespace::OVRHaptics::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics", "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
