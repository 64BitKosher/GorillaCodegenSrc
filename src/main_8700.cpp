// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_GetApplicationKeyByProcessId
#include "OVR/OpenVR/IVRApplications__GetApplicationKeyByProcessId.hpp"
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationKeyByProcessId.Invoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_GetApplicationKeyByProcessId::Invoke(uint unProcessId, ::System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationKeyByProcessId::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationKeyByProcessId*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, unProcessId, pchAppKeyBuffer, unAppKeyBufferLen);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationKeyByProcessId.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_GetApplicationKeyByProcessId::BeginInvoke(uint unProcessId, ::System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationKeyByProcessId::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationKeyByProcessId*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unProcessId, pchAppKeyBuffer, unAppKeyBufferLen, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationKeyByProcessId.EndInvoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_GetApplicationKeyByProcessId::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationKeyByProcessId::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationKeyByProcessId*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_LaunchApplication
#include "OVR/OpenVR/IVRApplications__LaunchApplication.hpp"
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_LaunchApplication.Invoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_LaunchApplication::Invoke(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_LaunchApplication::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_LaunchApplication*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_LaunchApplication.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_LaunchApplication::BeginInvoke(::StringW pchAppKey, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_LaunchApplication::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_LaunchApplication*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchAppKey, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_LaunchApplication.EndInvoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_LaunchApplication::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_LaunchApplication::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_LaunchApplication*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_LaunchTemplateApplication
#include "OVR/OpenVR/IVRApplications__LaunchTemplateApplication.hpp"
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_LaunchTemplateApplication.Invoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_LaunchTemplateApplication::Invoke(::StringW pchTemplateAppKey, ::StringW pchNewAppKey, ByRef<::ArrayW<::OVR::OpenVR::AppOverrideKeys_t>> pKeys, uint unKeys) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_LaunchTemplateApplication::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_LaunchTemplateApplication*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchTemplateAppKey, pchNewAppKey, byref(pKeys), unKeys);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_LaunchTemplateApplication.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_LaunchTemplateApplication::BeginInvoke(::StringW pchTemplateAppKey, ::StringW pchNewAppKey, ByRef<::ArrayW<::OVR::OpenVR::AppOverrideKeys_t>> pKeys, uint unKeys, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_LaunchTemplateApplication::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_LaunchTemplateApplication*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchTemplateAppKey, pchNewAppKey, byref(pKeys), unKeys, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_LaunchTemplateApplication.EndInvoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_LaunchTemplateApplication::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_LaunchTemplateApplication::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_LaunchTemplateApplication*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_LaunchApplicationFromMimeType
#include "OVR/OpenVR/IVRApplications__LaunchApplicationFromMimeType.hpp"
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_LaunchApplicationFromMimeType.Invoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_LaunchApplicationFromMimeType::Invoke(::StringW pchMimeType, ::StringW pchArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_LaunchApplicationFromMimeType::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_LaunchApplicationFromMimeType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchMimeType, pchArgs);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_LaunchApplicationFromMimeType.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_LaunchApplicationFromMimeType::BeginInvoke(::StringW pchMimeType, ::StringW pchArgs, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_LaunchApplicationFromMimeType::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_LaunchApplicationFromMimeType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchMimeType, pchArgs, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_LaunchApplicationFromMimeType.EndInvoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_LaunchApplicationFromMimeType::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_LaunchApplicationFromMimeType::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_LaunchApplicationFromMimeType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_LaunchDashboardOverlay
#include "OVR/OpenVR/IVRApplications__LaunchDashboardOverlay.hpp"
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_LaunchDashboardOverlay.Invoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_LaunchDashboardOverlay::Invoke(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_LaunchDashboardOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_LaunchDashboardOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_LaunchDashboardOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_LaunchDashboardOverlay::BeginInvoke(::StringW pchAppKey, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_LaunchDashboardOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_LaunchDashboardOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchAppKey, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_LaunchDashboardOverlay.EndInvoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_LaunchDashboardOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_LaunchDashboardOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_LaunchDashboardOverlay*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_CancelApplicationLaunch
#include "OVR/OpenVR/IVRApplications__CancelApplicationLaunch.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_CancelApplicationLaunch.Invoke
bool OVR::OpenVR::IVRApplications::_CancelApplicationLaunch::Invoke(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_CancelApplicationLaunch::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_CancelApplicationLaunch*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_CancelApplicationLaunch.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_CancelApplicationLaunch::BeginInvoke(::StringW pchAppKey, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_CancelApplicationLaunch::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_CancelApplicationLaunch*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchAppKey, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_CancelApplicationLaunch.EndInvoke
bool OVR::OpenVR::IVRApplications::_CancelApplicationLaunch::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_CancelApplicationLaunch::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_CancelApplicationLaunch*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_IdentifyApplication
#include "OVR/OpenVR/IVRApplications__IdentifyApplication.hpp"
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_IdentifyApplication.Invoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_IdentifyApplication::Invoke(uint unProcessId, ::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_IdentifyApplication::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_IdentifyApplication*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, unProcessId, pchAppKey);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_IdentifyApplication.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_IdentifyApplication::BeginInvoke(uint unProcessId, ::StringW pchAppKey, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_IdentifyApplication::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_IdentifyApplication*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unProcessId, pchAppKey, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_IdentifyApplication.EndInvoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_IdentifyApplication::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_IdentifyApplication::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_IdentifyApplication*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_GetApplicationProcessId
#include "OVR/OpenVR/IVRApplications__GetApplicationProcessId.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationProcessId.Invoke
uint OVR::OpenVR::IVRApplications::_GetApplicationProcessId::Invoke(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationProcessId::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationProcessId*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationProcessId.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_GetApplicationProcessId::BeginInvoke(::StringW pchAppKey, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationProcessId::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationProcessId*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchAppKey, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationProcessId.EndInvoke
uint OVR::OpenVR::IVRApplications::_GetApplicationProcessId::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationProcessId::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationProcessId*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_GetApplicationsErrorNameFromEnum
#include "OVR/OpenVR/IVRApplications__GetApplicationsErrorNameFromEnum.hpp"
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationsErrorNameFromEnum.Invoke
::System::IntPtr OVR::OpenVR::IVRApplications::_GetApplicationsErrorNameFromEnum::Invoke(::OVR::OpenVR::EVRApplicationError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationsErrorNameFromEnum::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationsErrorNameFromEnum*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, error);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationsErrorNameFromEnum.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_GetApplicationsErrorNameFromEnum::BeginInvoke(::OVR::OpenVR::EVRApplicationError error, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationsErrorNameFromEnum::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationsErrorNameFromEnum*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, error, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationsErrorNameFromEnum.EndInvoke
::System::IntPtr OVR::OpenVR::IVRApplications::_GetApplicationsErrorNameFromEnum::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationsErrorNameFromEnum::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationsErrorNameFromEnum*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_GetApplicationPropertyString
#include "OVR/OpenVR/IVRApplications__GetApplicationPropertyString.hpp"
// Including type: OVR.OpenVR.EVRApplicationProperty
#include "OVR/OpenVR/EVRApplicationProperty.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationPropertyString.Invoke
uint OVR::OpenVR::IVRApplications::_GetApplicationPropertyString::Invoke(::StringW pchAppKey, ::OVR::OpenVR::EVRApplicationProperty eProperty, ::System::Text::StringBuilder* pchPropertyValueBuffer, uint unPropertyValueBufferLen, ByRef<::OVR::OpenVR::EVRApplicationError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationPropertyString::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationPropertyString*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchAppKey, eProperty, pchPropertyValueBuffer, unPropertyValueBufferLen, byref(peError));
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationPropertyString.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_GetApplicationPropertyString::BeginInvoke(::StringW pchAppKey, ::OVR::OpenVR::EVRApplicationProperty eProperty, ::System::Text::StringBuilder* pchPropertyValueBuffer, uint unPropertyValueBufferLen, ByRef<::OVR::OpenVR::EVRApplicationError> peError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationPropertyString::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationPropertyString*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchAppKey, eProperty, pchPropertyValueBuffer, unPropertyValueBufferLen, byref(peError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationPropertyString.EndInvoke
uint OVR::OpenVR::IVRApplications::_GetApplicationPropertyString::EndInvoke(ByRef<::OVR::OpenVR::EVRApplicationError> peError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationPropertyString::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationPropertyString*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_GetApplicationPropertyBool
#include "OVR/OpenVR/IVRApplications__GetApplicationPropertyBool.hpp"
// Including type: OVR.OpenVR.EVRApplicationProperty
#include "OVR/OpenVR/EVRApplicationProperty.hpp"
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationPropertyBool.Invoke
bool OVR::OpenVR::IVRApplications::_GetApplicationPropertyBool::Invoke(::StringW pchAppKey, ::OVR::OpenVR::EVRApplicationProperty eProperty, ByRef<::OVR::OpenVR::EVRApplicationError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationPropertyBool::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationPropertyBool*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchAppKey, eProperty, byref(peError));
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationPropertyBool.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_GetApplicationPropertyBool::BeginInvoke(::StringW pchAppKey, ::OVR::OpenVR::EVRApplicationProperty eProperty, ByRef<::OVR::OpenVR::EVRApplicationError> peError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationPropertyBool::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationPropertyBool*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchAppKey, eProperty, byref(peError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationPropertyBool.EndInvoke
bool OVR::OpenVR::IVRApplications::_GetApplicationPropertyBool::EndInvoke(ByRef<::OVR::OpenVR::EVRApplicationError> peError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationPropertyBool::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationPropertyBool*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_GetApplicationPropertyUint64
#include "OVR/OpenVR/IVRApplications__GetApplicationPropertyUint64.hpp"
// Including type: OVR.OpenVR.EVRApplicationProperty
#include "OVR/OpenVR/EVRApplicationProperty.hpp"
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationPropertyUint64.Invoke
uint64_t OVR::OpenVR::IVRApplications::_GetApplicationPropertyUint64::Invoke(::StringW pchAppKey, ::OVR::OpenVR::EVRApplicationProperty eProperty, ByRef<::OVR::OpenVR::EVRApplicationError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationPropertyUint64::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationPropertyUint64*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, pchAppKey, eProperty, byref(peError));
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationPropertyUint64.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_GetApplicationPropertyUint64::BeginInvoke(::StringW pchAppKey, ::OVR::OpenVR::EVRApplicationProperty eProperty, ByRef<::OVR::OpenVR::EVRApplicationError> peError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationPropertyUint64::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationPropertyUint64*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchAppKey, eProperty, byref(peError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationPropertyUint64.EndInvoke
uint64_t OVR::OpenVR::IVRApplications::_GetApplicationPropertyUint64::EndInvoke(ByRef<::OVR::OpenVR::EVRApplicationError> peError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationPropertyUint64::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationPropertyUint64*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_SetApplicationAutoLaunch
#include "OVR/OpenVR/IVRApplications__SetApplicationAutoLaunch.hpp"
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_SetApplicationAutoLaunch.Invoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_SetApplicationAutoLaunch::Invoke(::StringW pchAppKey, bool bAutoLaunch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_SetApplicationAutoLaunch::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_SetApplicationAutoLaunch*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchAppKey, bAutoLaunch);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_SetApplicationAutoLaunch.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_SetApplicationAutoLaunch::BeginInvoke(::StringW pchAppKey, bool bAutoLaunch, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_SetApplicationAutoLaunch::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_SetApplicationAutoLaunch*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchAppKey, bAutoLaunch, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_SetApplicationAutoLaunch.EndInvoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_SetApplicationAutoLaunch::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_SetApplicationAutoLaunch::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_SetApplicationAutoLaunch*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_GetApplicationAutoLaunch
#include "OVR/OpenVR/IVRApplications__GetApplicationAutoLaunch.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationAutoLaunch.Invoke
bool OVR::OpenVR::IVRApplications::_GetApplicationAutoLaunch::Invoke(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationAutoLaunch::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationAutoLaunch*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationAutoLaunch.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_GetApplicationAutoLaunch::BeginInvoke(::StringW pchAppKey, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationAutoLaunch::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationAutoLaunch*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchAppKey, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationAutoLaunch.EndInvoke
bool OVR::OpenVR::IVRApplications::_GetApplicationAutoLaunch::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationAutoLaunch::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationAutoLaunch*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_SetDefaultApplicationForMimeType
#include "OVR/OpenVR/IVRApplications__SetDefaultApplicationForMimeType.hpp"
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_SetDefaultApplicationForMimeType.Invoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_SetDefaultApplicationForMimeType::Invoke(::StringW pchAppKey, ::StringW pchMimeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_SetDefaultApplicationForMimeType::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_SetDefaultApplicationForMimeType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchAppKey, pchMimeType);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_SetDefaultApplicationForMimeType.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_SetDefaultApplicationForMimeType::BeginInvoke(::StringW pchAppKey, ::StringW pchMimeType, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_SetDefaultApplicationForMimeType::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_SetDefaultApplicationForMimeType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchAppKey, pchMimeType, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_SetDefaultApplicationForMimeType.EndInvoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_SetDefaultApplicationForMimeType::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_SetDefaultApplicationForMimeType::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_SetDefaultApplicationForMimeType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_GetDefaultApplicationForMimeType
#include "OVR/OpenVR/IVRApplications__GetDefaultApplicationForMimeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetDefaultApplicationForMimeType.Invoke
bool OVR::OpenVR::IVRApplications::_GetDefaultApplicationForMimeType::Invoke(::StringW pchMimeType, ::System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetDefaultApplicationForMimeType::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetDefaultApplicationForMimeType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchMimeType, pchAppKeyBuffer, unAppKeyBufferLen);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetDefaultApplicationForMimeType.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_GetDefaultApplicationForMimeType::BeginInvoke(::StringW pchMimeType, ::System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetDefaultApplicationForMimeType::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetDefaultApplicationForMimeType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchMimeType, pchAppKeyBuffer, unAppKeyBufferLen, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetDefaultApplicationForMimeType.EndInvoke
bool OVR::OpenVR::IVRApplications::_GetDefaultApplicationForMimeType::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetDefaultApplicationForMimeType::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetDefaultApplicationForMimeType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_GetApplicationSupportedMimeTypes
#include "OVR/OpenVR/IVRApplications__GetApplicationSupportedMimeTypes.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationSupportedMimeTypes.Invoke
bool OVR::OpenVR::IVRApplications::_GetApplicationSupportedMimeTypes::Invoke(::StringW pchAppKey, ::System::Text::StringBuilder* pchMimeTypesBuffer, uint unMimeTypesBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationSupportedMimeTypes::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationSupportedMimeTypes*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchAppKey, pchMimeTypesBuffer, unMimeTypesBuffer);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationSupportedMimeTypes.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_GetApplicationSupportedMimeTypes::BeginInvoke(::StringW pchAppKey, ::System::Text::StringBuilder* pchMimeTypesBuffer, uint unMimeTypesBuffer, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationSupportedMimeTypes::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationSupportedMimeTypes*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchAppKey, pchMimeTypesBuffer, unMimeTypesBuffer, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationSupportedMimeTypes.EndInvoke
bool OVR::OpenVR::IVRApplications::_GetApplicationSupportedMimeTypes::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationSupportedMimeTypes::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationSupportedMimeTypes*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_GetApplicationsThatSupportMimeType
#include "OVR/OpenVR/IVRApplications__GetApplicationsThatSupportMimeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationsThatSupportMimeType.Invoke
uint OVR::OpenVR::IVRApplications::_GetApplicationsThatSupportMimeType::Invoke(::StringW pchMimeType, ::System::Text::StringBuilder* pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationsThatSupportMimeType::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationsThatSupportMimeType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchMimeType, pchAppKeysThatSupportBuffer, unAppKeysThatSupportBuffer);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationsThatSupportMimeType.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_GetApplicationsThatSupportMimeType::BeginInvoke(::StringW pchMimeType, ::System::Text::StringBuilder* pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationsThatSupportMimeType::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationsThatSupportMimeType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchMimeType, pchAppKeysThatSupportBuffer, unAppKeysThatSupportBuffer, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationsThatSupportMimeType.EndInvoke
uint OVR::OpenVR::IVRApplications::_GetApplicationsThatSupportMimeType::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationsThatSupportMimeType::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationsThatSupportMimeType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_GetApplicationLaunchArguments
#include "OVR/OpenVR/IVRApplications__GetApplicationLaunchArguments.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationLaunchArguments.Invoke
uint OVR::OpenVR::IVRApplications::_GetApplicationLaunchArguments::Invoke(uint unHandle, ::System::Text::StringBuilder* pchArgs, uint unArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationLaunchArguments::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationLaunchArguments*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unHandle, pchArgs, unArgs);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationLaunchArguments.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_GetApplicationLaunchArguments::BeginInvoke(uint unHandle, ::System::Text::StringBuilder* pchArgs, uint unArgs, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationLaunchArguments::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationLaunchArguments*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unHandle, pchArgs, unArgs, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationLaunchArguments.EndInvoke
uint OVR::OpenVR::IVRApplications::_GetApplicationLaunchArguments::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationLaunchArguments::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationLaunchArguments*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_GetStartingApplication
#include "OVR/OpenVR/IVRApplications__GetStartingApplication.hpp"
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetStartingApplication.Invoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_GetStartingApplication::Invoke(::System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetStartingApplication::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetStartingApplication*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchAppKeyBuffer, unAppKeyBufferLen);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetStartingApplication.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_GetStartingApplication::BeginInvoke(::System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetStartingApplication::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetStartingApplication*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchAppKeyBuffer, unAppKeyBufferLen, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetStartingApplication.EndInvoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_GetStartingApplication::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetStartingApplication::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetStartingApplication*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_GetTransitionState
#include "OVR/OpenVR/IVRApplications__GetTransitionState.hpp"
// Including type: OVR.OpenVR.EVRApplicationTransitionState
#include "OVR/OpenVR/EVRApplicationTransitionState.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetTransitionState.Invoke
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::IVRApplications::_GetTransitionState::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetTransitionState::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetTransitionState*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationTransitionState, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetTransitionState.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_GetTransitionState::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetTransitionState::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetTransitionState*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetTransitionState.EndInvoke
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::IVRApplications::_GetTransitionState::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetTransitionState::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetTransitionState*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationTransitionState, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_PerformApplicationPrelaunchCheck
#include "OVR/OpenVR/IVRApplications__PerformApplicationPrelaunchCheck.hpp"
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_PerformApplicationPrelaunchCheck.Invoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_PerformApplicationPrelaunchCheck::Invoke(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_PerformApplicationPrelaunchCheck::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_PerformApplicationPrelaunchCheck*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_PerformApplicationPrelaunchCheck.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_PerformApplicationPrelaunchCheck::BeginInvoke(::StringW pchAppKey, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_PerformApplicationPrelaunchCheck::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_PerformApplicationPrelaunchCheck*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchAppKey, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_PerformApplicationPrelaunchCheck.EndInvoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_PerformApplicationPrelaunchCheck::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_PerformApplicationPrelaunchCheck::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_PerformApplicationPrelaunchCheck*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_GetApplicationsTransitionStateNameFromEnum
#include "OVR/OpenVR/IVRApplications__GetApplicationsTransitionStateNameFromEnum.hpp"
// Including type: OVR.OpenVR.EVRApplicationTransitionState
#include "OVR/OpenVR/EVRApplicationTransitionState.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationsTransitionStateNameFromEnum.Invoke
::System::IntPtr OVR::OpenVR::IVRApplications::_GetApplicationsTransitionStateNameFromEnum::Invoke(::OVR::OpenVR::EVRApplicationTransitionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationsTransitionStateNameFromEnum::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationsTransitionStateNameFromEnum*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, state);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationsTransitionStateNameFromEnum.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_GetApplicationsTransitionStateNameFromEnum::BeginInvoke(::OVR::OpenVR::EVRApplicationTransitionState state, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationsTransitionStateNameFromEnum::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationsTransitionStateNameFromEnum*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, state, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetApplicationsTransitionStateNameFromEnum.EndInvoke
::System::IntPtr OVR::OpenVR::IVRApplications::_GetApplicationsTransitionStateNameFromEnum::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetApplicationsTransitionStateNameFromEnum::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetApplicationsTransitionStateNameFromEnum*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_IsQuitUserPromptRequested
#include "OVR/OpenVR/IVRApplications__IsQuitUserPromptRequested.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_IsQuitUserPromptRequested.Invoke
bool OVR::OpenVR::IVRApplications::_IsQuitUserPromptRequested::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_IsQuitUserPromptRequested::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_IsQuitUserPromptRequested*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_IsQuitUserPromptRequested.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_IsQuitUserPromptRequested::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_IsQuitUserPromptRequested::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_IsQuitUserPromptRequested*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_IsQuitUserPromptRequested.EndInvoke
bool OVR::OpenVR::IVRApplications::_IsQuitUserPromptRequested::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_IsQuitUserPromptRequested::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_IsQuitUserPromptRequested*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_LaunchInternalProcess
#include "OVR/OpenVR/IVRApplications__LaunchInternalProcess.hpp"
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_LaunchInternalProcess.Invoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_LaunchInternalProcess::Invoke(::StringW pchBinaryPath, ::StringW pchArguments, ::StringW pchWorkingDirectory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_LaunchInternalProcess::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_LaunchInternalProcess*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchBinaryPath, pchArguments, pchWorkingDirectory);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_LaunchInternalProcess.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_LaunchInternalProcess::BeginInvoke(::StringW pchBinaryPath, ::StringW pchArguments, ::StringW pchWorkingDirectory, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_LaunchInternalProcess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_LaunchInternalProcess*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchBinaryPath, pchArguments, pchWorkingDirectory, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_LaunchInternalProcess.EndInvoke
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::IVRApplications::_LaunchInternalProcess::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_LaunchInternalProcess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_LaunchInternalProcess*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRApplications/_GetCurrentSceneProcessId
#include "OVR/OpenVR/IVRApplications__GetCurrentSceneProcessId.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetCurrentSceneProcessId.Invoke
uint OVR::OpenVR::IVRApplications::_GetCurrentSceneProcessId::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetCurrentSceneProcessId::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetCurrentSceneProcessId*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetCurrentSceneProcessId.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRApplications::_GetCurrentSceneProcessId::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetCurrentSceneProcessId::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetCurrentSceneProcessId*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRApplications/_GetCurrentSceneProcessId.EndInvoke
uint OVR::OpenVR::IVRApplications::_GetCurrentSceneProcessId::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRApplications::_GetCurrentSceneProcessId::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRApplications::_GetCurrentSceneProcessId*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperone/_GetCalibrationState
#include "OVR/OpenVR/IVRChaperone__GetCalibrationState.hpp"
// Including type: OVR.OpenVR.ChaperoneCalibrationState
#include "OVR/OpenVR/ChaperoneCalibrationState.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperone/_GetCalibrationState.Invoke
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::IVRChaperone::_GetCalibrationState::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_GetCalibrationState::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_GetCalibrationState*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::ChaperoneCalibrationState, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRChaperone/_GetCalibrationState.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperone::_GetCalibrationState::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_GetCalibrationState::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_GetCalibrationState*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperone/_GetCalibrationState.EndInvoke
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::IVRChaperone::_GetCalibrationState::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_GetCalibrationState::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_GetCalibrationState*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::ChaperoneCalibrationState, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperone/_GetPlayAreaSize
#include "OVR/OpenVR/IVRChaperone__GetPlayAreaSize.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperone/_GetPlayAreaSize.Invoke
bool OVR::OpenVR::IVRChaperone::_GetPlayAreaSize::Invoke(ByRef<float> pSizeX, ByRef<float> pSizeZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_GetPlayAreaSize::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_GetPlayAreaSize*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pSizeX), byref(pSizeZ));
}
// Autogenerated method: OVR.OpenVR.IVRChaperone/_GetPlayAreaSize.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperone::_GetPlayAreaSize::BeginInvoke(ByRef<float> pSizeX, ByRef<float> pSizeZ, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_GetPlayAreaSize::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_GetPlayAreaSize*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pSizeX), byref(pSizeZ), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperone/_GetPlayAreaSize.EndInvoke
bool OVR::OpenVR::IVRChaperone::_GetPlayAreaSize::EndInvoke(ByRef<float> pSizeX, ByRef<float> pSizeZ, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_GetPlayAreaSize::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_GetPlayAreaSize*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pSizeX), byref(pSizeZ), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperone/_GetPlayAreaRect
#include "OVR/OpenVR/IVRChaperone__GetPlayAreaRect.hpp"
// Including type: OVR.OpenVR.HmdQuad_t
#include "OVR/OpenVR/HmdQuad_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperone/_GetPlayAreaRect.Invoke
bool OVR::OpenVR::IVRChaperone::_GetPlayAreaRect::Invoke(ByRef<::OVR::OpenVR::HmdQuad_t> rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_GetPlayAreaRect::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_GetPlayAreaRect*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(rect));
}
// Autogenerated method: OVR.OpenVR.IVRChaperone/_GetPlayAreaRect.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperone::_GetPlayAreaRect::BeginInvoke(ByRef<::OVR::OpenVR::HmdQuad_t> rect, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_GetPlayAreaRect::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_GetPlayAreaRect*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(rect), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperone/_GetPlayAreaRect.EndInvoke
bool OVR::OpenVR::IVRChaperone::_GetPlayAreaRect::EndInvoke(ByRef<::OVR::OpenVR::HmdQuad_t> rect, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_GetPlayAreaRect::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_GetPlayAreaRect*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(rect), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperone/_ReloadInfo
#include "OVR/OpenVR/IVRChaperone__ReloadInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperone/_ReloadInfo.Invoke
void OVR::OpenVR::IVRChaperone::_ReloadInfo::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_ReloadInfo::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_ReloadInfo*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRChaperone/_ReloadInfo.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperone::_ReloadInfo::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_ReloadInfo::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_ReloadInfo*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperone/_ReloadInfo.EndInvoke
void OVR::OpenVR::IVRChaperone::_ReloadInfo::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_ReloadInfo::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_ReloadInfo*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperone/_SetSceneColor
#include "OVR/OpenVR/IVRChaperone__SetSceneColor.hpp"
// Including type: OVR.OpenVR.HmdColor_t
#include "OVR/OpenVR/HmdColor_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperone/_SetSceneColor.Invoke
void OVR::OpenVR::IVRChaperone::_SetSceneColor::Invoke(::OVR::OpenVR::HmdColor_t color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_SetSceneColor::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_SetSceneColor*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: OVR.OpenVR.IVRChaperone/_SetSceneColor.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperone::_SetSceneColor::BeginInvoke(::OVR::OpenVR::HmdColor_t color, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_SetSceneColor::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_SetSceneColor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, color, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperone/_SetSceneColor.EndInvoke
void OVR::OpenVR::IVRChaperone::_SetSceneColor::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_SetSceneColor::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_SetSceneColor*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperone/_GetBoundsColor
#include "OVR/OpenVR/IVRChaperone__GetBoundsColor.hpp"
// Including type: OVR.OpenVR.HmdColor_t
#include "OVR/OpenVR/HmdColor_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperone/_GetBoundsColor.Invoke
void OVR::OpenVR::IVRChaperone::_GetBoundsColor::Invoke(ByRef<::OVR::OpenVR::HmdColor_t> pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ByRef<::OVR::OpenVR::HmdColor_t> pOutputCameraColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_GetBoundsColor::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_GetBoundsColor*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pOutputColorArray), nNumOutputColors, flCollisionBoundsFadeDistance, byref(pOutputCameraColor));
}
// Autogenerated method: OVR.OpenVR.IVRChaperone/_GetBoundsColor.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperone::_GetBoundsColor::BeginInvoke(ByRef<::OVR::OpenVR::HmdColor_t> pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ByRef<::OVR::OpenVR::HmdColor_t> pOutputCameraColor, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_GetBoundsColor::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_GetBoundsColor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pOutputColorArray), nNumOutputColors, flCollisionBoundsFadeDistance, byref(pOutputCameraColor), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperone/_GetBoundsColor.EndInvoke
void OVR::OpenVR::IVRChaperone::_GetBoundsColor::EndInvoke(ByRef<::OVR::OpenVR::HmdColor_t> pOutputColorArray, ByRef<::OVR::OpenVR::HmdColor_t> pOutputCameraColor, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_GetBoundsColor::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_GetBoundsColor*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pOutputColorArray), byref(pOutputCameraColor), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperone/_AreBoundsVisible
#include "OVR/OpenVR/IVRChaperone__AreBoundsVisible.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperone/_AreBoundsVisible.Invoke
bool OVR::OpenVR::IVRChaperone::_AreBoundsVisible::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_AreBoundsVisible::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_AreBoundsVisible*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRChaperone/_AreBoundsVisible.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperone::_AreBoundsVisible::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_AreBoundsVisible::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_AreBoundsVisible*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperone/_AreBoundsVisible.EndInvoke
bool OVR::OpenVR::IVRChaperone::_AreBoundsVisible::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_AreBoundsVisible::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_AreBoundsVisible*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperone/_ForceBoundsVisible
#include "OVR/OpenVR/IVRChaperone__ForceBoundsVisible.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperone/_ForceBoundsVisible.Invoke
void OVR::OpenVR::IVRChaperone::_ForceBoundsVisible::Invoke(bool bForce) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_ForceBoundsVisible::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_ForceBoundsVisible*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bForce);
}
// Autogenerated method: OVR.OpenVR.IVRChaperone/_ForceBoundsVisible.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperone::_ForceBoundsVisible::BeginInvoke(bool bForce, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_ForceBoundsVisible::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_ForceBoundsVisible*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, bForce, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperone/_ForceBoundsVisible.EndInvoke
void OVR::OpenVR::IVRChaperone::_ForceBoundsVisible::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperone::_ForceBoundsVisible::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperone::_ForceBoundsVisible*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_CommitWorkingCopy
#include "OVR/OpenVR/IVRChaperoneSetup__CommitWorkingCopy.hpp"
// Including type: OVR.OpenVR.EChaperoneConfigFile
#include "OVR/OpenVR/EChaperoneConfigFile.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_CommitWorkingCopy.Invoke
bool OVR::OpenVR::IVRChaperoneSetup::_CommitWorkingCopy::Invoke(::OVR::OpenVR::EChaperoneConfigFile configFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_CommitWorkingCopy::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_CommitWorkingCopy*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, configFile);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_CommitWorkingCopy.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_CommitWorkingCopy::BeginInvoke(::OVR::OpenVR::EChaperoneConfigFile configFile, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_CommitWorkingCopy::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_CommitWorkingCopy*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, configFile, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_CommitWorkingCopy.EndInvoke
bool OVR::OpenVR::IVRChaperoneSetup::_CommitWorkingCopy::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_CommitWorkingCopy::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_CommitWorkingCopy*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_RevertWorkingCopy
#include "OVR/OpenVR/IVRChaperoneSetup__RevertWorkingCopy.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_RevertWorkingCopy.Invoke
void OVR::OpenVR::IVRChaperoneSetup::_RevertWorkingCopy::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_RevertWorkingCopy::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_RevertWorkingCopy*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_RevertWorkingCopy.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_RevertWorkingCopy::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_RevertWorkingCopy::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_RevertWorkingCopy*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_RevertWorkingCopy.EndInvoke
void OVR::OpenVR::IVRChaperoneSetup::_RevertWorkingCopy::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_RevertWorkingCopy::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_RevertWorkingCopy*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingPlayAreaSize
#include "OVR/OpenVR/IVRChaperoneSetup__GetWorkingPlayAreaSize.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingPlayAreaSize.Invoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaSize::Invoke(ByRef<float> pSizeX, ByRef<float> pSizeZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaSize::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaSize*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pSizeX), byref(pSizeZ));
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingPlayAreaSize.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaSize::BeginInvoke(ByRef<float> pSizeX, ByRef<float> pSizeZ, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaSize::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaSize*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pSizeX), byref(pSizeZ), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingPlayAreaSize.EndInvoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaSize::EndInvoke(ByRef<float> pSizeX, ByRef<float> pSizeZ, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaSize::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaSize*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pSizeX), byref(pSizeZ), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingPlayAreaRect
#include "OVR/OpenVR/IVRChaperoneSetup__GetWorkingPlayAreaRect.hpp"
// Including type: OVR.OpenVR.HmdQuad_t
#include "OVR/OpenVR/HmdQuad_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingPlayAreaRect.Invoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaRect::Invoke(ByRef<::OVR::OpenVR::HmdQuad_t> rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaRect::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaRect*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(rect));
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingPlayAreaRect.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaRect::BeginInvoke(ByRef<::OVR::OpenVR::HmdQuad_t> rect, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaRect::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaRect*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(rect), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingPlayAreaRect.EndInvoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaRect::EndInvoke(ByRef<::OVR::OpenVR::HmdQuad_t> rect, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaRect::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingPlayAreaRect*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(rect), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingCollisionBoundsInfo
#include "OVR/OpenVR/IVRChaperoneSetup__GetWorkingCollisionBoundsInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingCollisionBoundsInfo.Invoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetWorkingCollisionBoundsInfo::Invoke(ByRef<::ArrayW<::OVR::OpenVR::HmdQuad_t>> pQuadsBuffer, ByRef<uint> punQuadsCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingCollisionBoundsInfo::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingCollisionBoundsInfo*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pQuadsBuffer), byref(punQuadsCount));
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingCollisionBoundsInfo.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_GetWorkingCollisionBoundsInfo::BeginInvoke(ByRef<::ArrayW<::OVR::OpenVR::HmdQuad_t>> pQuadsBuffer, ByRef<uint> punQuadsCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingCollisionBoundsInfo::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingCollisionBoundsInfo*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pQuadsBuffer), byref(punQuadsCount), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingCollisionBoundsInfo.EndInvoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetWorkingCollisionBoundsInfo::EndInvoke(ByRef<uint> punQuadsCount, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingCollisionBoundsInfo::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingCollisionBoundsInfo*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(punQuadsCount), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_GetLiveCollisionBoundsInfo
#include "OVR/OpenVR/IVRChaperoneSetup__GetLiveCollisionBoundsInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetLiveCollisionBoundsInfo.Invoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsInfo::Invoke(ByRef<::ArrayW<::OVR::OpenVR::HmdQuad_t>> pQuadsBuffer, ByRef<uint> punQuadsCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsInfo::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsInfo*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pQuadsBuffer), byref(punQuadsCount));
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetLiveCollisionBoundsInfo.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsInfo::BeginInvoke(ByRef<::ArrayW<::OVR::OpenVR::HmdQuad_t>> pQuadsBuffer, ByRef<uint> punQuadsCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsInfo::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsInfo*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pQuadsBuffer), byref(punQuadsCount), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetLiveCollisionBoundsInfo.EndInvoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsInfo::EndInvoke(ByRef<uint> punQuadsCount, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsInfo::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsInfo*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(punQuadsCount), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingSeatedZeroPoseToRawTrackingPose
#include "OVR/OpenVR/IVRChaperoneSetup__GetWorkingSeatedZeroPoseToRawTrackingPose.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingSeatedZeroPoseToRawTrackingPose.Invoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetWorkingSeatedZeroPoseToRawTrackingPose::Invoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatSeatedZeroPoseToRawTrackingPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingSeatedZeroPoseToRawTrackingPose::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingSeatedZeroPoseToRawTrackingPose*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pmatSeatedZeroPoseToRawTrackingPose));
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingSeatedZeroPoseToRawTrackingPose.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_GetWorkingSeatedZeroPoseToRawTrackingPose::BeginInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatSeatedZeroPoseToRawTrackingPose, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingSeatedZeroPoseToRawTrackingPose::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingSeatedZeroPoseToRawTrackingPose*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pmatSeatedZeroPoseToRawTrackingPose), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingSeatedZeroPoseToRawTrackingPose.EndInvoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetWorkingSeatedZeroPoseToRawTrackingPose::EndInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatSeatedZeroPoseToRawTrackingPose, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingSeatedZeroPoseToRawTrackingPose::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingSeatedZeroPoseToRawTrackingPose*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pmatSeatedZeroPoseToRawTrackingPose), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingStandingZeroPoseToRawTrackingPose
#include "OVR/OpenVR/IVRChaperoneSetup__GetWorkingStandingZeroPoseToRawTrackingPose.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingStandingZeroPoseToRawTrackingPose.Invoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetWorkingStandingZeroPoseToRawTrackingPose::Invoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatStandingZeroPoseToRawTrackingPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingStandingZeroPoseToRawTrackingPose::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingStandingZeroPoseToRawTrackingPose*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pmatStandingZeroPoseToRawTrackingPose));
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingStandingZeroPoseToRawTrackingPose.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_GetWorkingStandingZeroPoseToRawTrackingPose::BeginInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatStandingZeroPoseToRawTrackingPose, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingStandingZeroPoseToRawTrackingPose::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingStandingZeroPoseToRawTrackingPose*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pmatStandingZeroPoseToRawTrackingPose), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetWorkingStandingZeroPoseToRawTrackingPose.EndInvoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetWorkingStandingZeroPoseToRawTrackingPose::EndInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatStandingZeroPoseToRawTrackingPose, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingStandingZeroPoseToRawTrackingPose::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetWorkingStandingZeroPoseToRawTrackingPose*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pmatStandingZeroPoseToRawTrackingPose), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingPlayAreaSize
#include "OVR/OpenVR/IVRChaperoneSetup__SetWorkingPlayAreaSize.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingPlayAreaSize.Invoke
void OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPlayAreaSize::Invoke(float sizeX, float sizeZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPlayAreaSize::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPlayAreaSize*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sizeX, sizeZ);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingPlayAreaSize.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPlayAreaSize::BeginInvoke(float sizeX, float sizeZ, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPlayAreaSize::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPlayAreaSize*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sizeX, sizeZ, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingPlayAreaSize.EndInvoke
void OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPlayAreaSize::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPlayAreaSize::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPlayAreaSize*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingCollisionBoundsInfo
#include "OVR/OpenVR/IVRChaperoneSetup__SetWorkingCollisionBoundsInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingCollisionBoundsInfo.Invoke
void OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsInfo::Invoke(ByRef<::ArrayW<::OVR::OpenVR::HmdQuad_t>> pQuadsBuffer, uint unQuadsCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsInfo::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsInfo*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pQuadsBuffer), unQuadsCount);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingCollisionBoundsInfo.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsInfo::BeginInvoke(ByRef<::ArrayW<::OVR::OpenVR::HmdQuad_t>> pQuadsBuffer, uint unQuadsCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsInfo::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsInfo*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pQuadsBuffer), unQuadsCount, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingCollisionBoundsInfo.EndInvoke
void OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsInfo::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsInfo::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsInfo*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingSeatedZeroPoseToRawTrackingPose
#include "OVR/OpenVR/IVRChaperoneSetup__SetWorkingSeatedZeroPoseToRawTrackingPose.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingSeatedZeroPoseToRawTrackingPose.Invoke
void OVR::OpenVR::IVRChaperoneSetup::_SetWorkingSeatedZeroPoseToRawTrackingPose::Invoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pMatSeatedZeroPoseToRawTrackingPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingSeatedZeroPoseToRawTrackingPose::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingSeatedZeroPoseToRawTrackingPose*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pMatSeatedZeroPoseToRawTrackingPose));
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingSeatedZeroPoseToRawTrackingPose.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_SetWorkingSeatedZeroPoseToRawTrackingPose::BeginInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pMatSeatedZeroPoseToRawTrackingPose, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingSeatedZeroPoseToRawTrackingPose::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingSeatedZeroPoseToRawTrackingPose*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pMatSeatedZeroPoseToRawTrackingPose), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingSeatedZeroPoseToRawTrackingPose.EndInvoke
void OVR::OpenVR::IVRChaperoneSetup::_SetWorkingSeatedZeroPoseToRawTrackingPose::EndInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pMatSeatedZeroPoseToRawTrackingPose, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingSeatedZeroPoseToRawTrackingPose::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingSeatedZeroPoseToRawTrackingPose*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pMatSeatedZeroPoseToRawTrackingPose), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingStandingZeroPoseToRawTrackingPose
#include "OVR/OpenVR/IVRChaperoneSetup__SetWorkingStandingZeroPoseToRawTrackingPose.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingStandingZeroPoseToRawTrackingPose.Invoke
void OVR::OpenVR::IVRChaperoneSetup::_SetWorkingStandingZeroPoseToRawTrackingPose::Invoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pMatStandingZeroPoseToRawTrackingPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingStandingZeroPoseToRawTrackingPose::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingStandingZeroPoseToRawTrackingPose*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pMatStandingZeroPoseToRawTrackingPose));
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingStandingZeroPoseToRawTrackingPose.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_SetWorkingStandingZeroPoseToRawTrackingPose::BeginInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pMatStandingZeroPoseToRawTrackingPose, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingStandingZeroPoseToRawTrackingPose::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingStandingZeroPoseToRawTrackingPose*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pMatStandingZeroPoseToRawTrackingPose), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingStandingZeroPoseToRawTrackingPose.EndInvoke
void OVR::OpenVR::IVRChaperoneSetup::_SetWorkingStandingZeroPoseToRawTrackingPose::EndInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pMatStandingZeroPoseToRawTrackingPose, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingStandingZeroPoseToRawTrackingPose::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingStandingZeroPoseToRawTrackingPose*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pMatStandingZeroPoseToRawTrackingPose), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_ReloadFromDisk
#include "OVR/OpenVR/IVRChaperoneSetup__ReloadFromDisk.hpp"
// Including type: OVR.OpenVR.EChaperoneConfigFile
#include "OVR/OpenVR/EChaperoneConfigFile.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_ReloadFromDisk.Invoke
void OVR::OpenVR::IVRChaperoneSetup::_ReloadFromDisk::Invoke(::OVR::OpenVR::EChaperoneConfigFile configFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_ReloadFromDisk::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_ReloadFromDisk*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, configFile);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_ReloadFromDisk.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_ReloadFromDisk::BeginInvoke(::OVR::OpenVR::EChaperoneConfigFile configFile, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_ReloadFromDisk::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_ReloadFromDisk*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, configFile, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_ReloadFromDisk.EndInvoke
void OVR::OpenVR::IVRChaperoneSetup::_ReloadFromDisk::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_ReloadFromDisk::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_ReloadFromDisk*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_GetLiveSeatedZeroPoseToRawTrackingPose
#include "OVR/OpenVR/IVRChaperoneSetup__GetLiveSeatedZeroPoseToRawTrackingPose.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetLiveSeatedZeroPoseToRawTrackingPose.Invoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetLiveSeatedZeroPoseToRawTrackingPose::Invoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatSeatedZeroPoseToRawTrackingPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetLiveSeatedZeroPoseToRawTrackingPose::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetLiveSeatedZeroPoseToRawTrackingPose*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pmatSeatedZeroPoseToRawTrackingPose));
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetLiveSeatedZeroPoseToRawTrackingPose.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_GetLiveSeatedZeroPoseToRawTrackingPose::BeginInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatSeatedZeroPoseToRawTrackingPose, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetLiveSeatedZeroPoseToRawTrackingPose::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetLiveSeatedZeroPoseToRawTrackingPose*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pmatSeatedZeroPoseToRawTrackingPose), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetLiveSeatedZeroPoseToRawTrackingPose.EndInvoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetLiveSeatedZeroPoseToRawTrackingPose::EndInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatSeatedZeroPoseToRawTrackingPose, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetLiveSeatedZeroPoseToRawTrackingPose::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetLiveSeatedZeroPoseToRawTrackingPose*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pmatSeatedZeroPoseToRawTrackingPose), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingCollisionBoundsTagsInfo
#include "OVR/OpenVR/IVRChaperoneSetup__SetWorkingCollisionBoundsTagsInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingCollisionBoundsTagsInfo.Invoke
void OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsTagsInfo::Invoke(ByRef<::ArrayW<uint8_t>> pTagsBuffer, uint unTagCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsTagsInfo::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsTagsInfo*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pTagsBuffer), unTagCount);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingCollisionBoundsTagsInfo.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsTagsInfo::BeginInvoke(ByRef<::ArrayW<uint8_t>> pTagsBuffer, uint unTagCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsTagsInfo::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsTagsInfo*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pTagsBuffer), unTagCount, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingCollisionBoundsTagsInfo.EndInvoke
void OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsTagsInfo::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsTagsInfo::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingCollisionBoundsTagsInfo*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_GetLiveCollisionBoundsTagsInfo
#include "OVR/OpenVR/IVRChaperoneSetup__GetLiveCollisionBoundsTagsInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetLiveCollisionBoundsTagsInfo.Invoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsTagsInfo::Invoke(ByRef<::ArrayW<uint8_t>> pTagsBuffer, ByRef<uint> punTagCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsTagsInfo::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsTagsInfo*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pTagsBuffer), byref(punTagCount));
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetLiveCollisionBoundsTagsInfo.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsTagsInfo::BeginInvoke(ByRef<::ArrayW<uint8_t>> pTagsBuffer, ByRef<uint> punTagCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsTagsInfo::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsTagsInfo*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pTagsBuffer), byref(punTagCount), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetLiveCollisionBoundsTagsInfo.EndInvoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsTagsInfo::EndInvoke(ByRef<uint> punTagCount, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsTagsInfo::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetLiveCollisionBoundsTagsInfo*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(punTagCount), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingPhysicalBoundsInfo
#include "OVR/OpenVR/IVRChaperoneSetup__SetWorkingPhysicalBoundsInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingPhysicalBoundsInfo.Invoke
bool OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPhysicalBoundsInfo::Invoke(ByRef<::ArrayW<::OVR::OpenVR::HmdQuad_t>> pQuadsBuffer, uint unQuadsCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPhysicalBoundsInfo::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPhysicalBoundsInfo*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pQuadsBuffer), unQuadsCount);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingPhysicalBoundsInfo.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPhysicalBoundsInfo::BeginInvoke(ByRef<::ArrayW<::OVR::OpenVR::HmdQuad_t>> pQuadsBuffer, uint unQuadsCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPhysicalBoundsInfo::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPhysicalBoundsInfo*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pQuadsBuffer), unQuadsCount, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_SetWorkingPhysicalBoundsInfo.EndInvoke
bool OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPhysicalBoundsInfo::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPhysicalBoundsInfo::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_SetWorkingPhysicalBoundsInfo*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_GetLivePhysicalBoundsInfo
#include "OVR/OpenVR/IVRChaperoneSetup__GetLivePhysicalBoundsInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetLivePhysicalBoundsInfo.Invoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetLivePhysicalBoundsInfo::Invoke(ByRef<::ArrayW<::OVR::OpenVR::HmdQuad_t>> pQuadsBuffer, ByRef<uint> punQuadsCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetLivePhysicalBoundsInfo::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetLivePhysicalBoundsInfo*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pQuadsBuffer), byref(punQuadsCount));
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetLivePhysicalBoundsInfo.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_GetLivePhysicalBoundsInfo::BeginInvoke(ByRef<::ArrayW<::OVR::OpenVR::HmdQuad_t>> pQuadsBuffer, ByRef<uint> punQuadsCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetLivePhysicalBoundsInfo::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetLivePhysicalBoundsInfo*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pQuadsBuffer), byref(punQuadsCount), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_GetLivePhysicalBoundsInfo.EndInvoke
bool OVR::OpenVR::IVRChaperoneSetup::_GetLivePhysicalBoundsInfo::EndInvoke(ByRef<uint> punQuadsCount, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_GetLivePhysicalBoundsInfo::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_GetLivePhysicalBoundsInfo*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(punQuadsCount), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_ExportLiveToBuffer
#include "OVR/OpenVR/IVRChaperoneSetup__ExportLiveToBuffer.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_ExportLiveToBuffer.Invoke
bool OVR::OpenVR::IVRChaperoneSetup::_ExportLiveToBuffer::Invoke(::System::Text::StringBuilder* pBuffer, ByRef<uint> pnBufferLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_ExportLiveToBuffer::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_ExportLiveToBuffer*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pBuffer, byref(pnBufferLength));
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_ExportLiveToBuffer.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_ExportLiveToBuffer::BeginInvoke(::System::Text::StringBuilder* pBuffer, ByRef<uint> pnBufferLength, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_ExportLiveToBuffer::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_ExportLiveToBuffer*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pBuffer, byref(pnBufferLength), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_ExportLiveToBuffer.EndInvoke
bool OVR::OpenVR::IVRChaperoneSetup::_ExportLiveToBuffer::EndInvoke(ByRef<uint> pnBufferLength, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_ExportLiveToBuffer::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_ExportLiveToBuffer*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pnBufferLength), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRChaperoneSetup/_ImportFromBufferToWorking
#include "OVR/OpenVR/IVRChaperoneSetup__ImportFromBufferToWorking.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_ImportFromBufferToWorking.Invoke
bool OVR::OpenVR::IVRChaperoneSetup::_ImportFromBufferToWorking::Invoke(::StringW pBuffer, uint nImportFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_ImportFromBufferToWorking::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_ImportFromBufferToWorking*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pBuffer, nImportFlags);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_ImportFromBufferToWorking.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRChaperoneSetup::_ImportFromBufferToWorking::BeginInvoke(::StringW pBuffer, uint nImportFlags, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_ImportFromBufferToWorking::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_ImportFromBufferToWorking*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pBuffer, nImportFlags, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRChaperoneSetup/_ImportFromBufferToWorking.EndInvoke
bool OVR::OpenVR::IVRChaperoneSetup::_ImportFromBufferToWorking::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRChaperoneSetup::_ImportFromBufferToWorking::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRChaperoneSetup::_ImportFromBufferToWorking*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_SetTrackingSpace
#include "OVR/OpenVR/IVRCompositor__SetTrackingSpace.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_SetTrackingSpace.Invoke
void OVR::OpenVR::IVRCompositor::_SetTrackingSpace::Invoke(::OVR::OpenVR::ETrackingUniverseOrigin eOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SetTrackingSpace::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SetTrackingSpace*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eOrigin);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_SetTrackingSpace.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_SetTrackingSpace::BeginInvoke(::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SetTrackingSpace::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SetTrackingSpace*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eOrigin, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_SetTrackingSpace.EndInvoke
void OVR::OpenVR::IVRCompositor::_SetTrackingSpace::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SetTrackingSpace::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SetTrackingSpace*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_GetTrackingSpace
#include "OVR/OpenVR/IVRCompositor__GetTrackingSpace.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetTrackingSpace.Invoke
::OVR::OpenVR::ETrackingUniverseOrigin OVR::OpenVR::IVRCompositor::_GetTrackingSpace::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetTrackingSpace::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetTrackingSpace*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::ETrackingUniverseOrigin, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetTrackingSpace.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetTrackingSpace::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetTrackingSpace::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetTrackingSpace*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetTrackingSpace.EndInvoke
::OVR::OpenVR::ETrackingUniverseOrigin OVR::OpenVR::IVRCompositor::_GetTrackingSpace::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetTrackingSpace::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetTrackingSpace*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::ETrackingUniverseOrigin, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_WaitGetPoses
#include "OVR/OpenVR/IVRCompositor__WaitGetPoses.hpp"
// Including type: OVR.OpenVR.EVRCompositorError
#include "OVR/OpenVR/EVRCompositorError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_WaitGetPoses.Invoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_WaitGetPoses::Invoke(ByRef<::ArrayW<::OVR::OpenVR::TrackedDevicePose_t>> pRenderPoseArray, uint unRenderPoseArrayCount, ByRef<::ArrayW<::OVR::OpenVR::TrackedDevicePose_t>> pGamePoseArray, uint unGamePoseArrayCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_WaitGetPoses::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_WaitGetPoses*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, byref(pRenderPoseArray), unRenderPoseArrayCount, byref(pGamePoseArray), unGamePoseArrayCount);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_WaitGetPoses.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_WaitGetPoses::BeginInvoke(ByRef<::ArrayW<::OVR::OpenVR::TrackedDevicePose_t>> pRenderPoseArray, uint unRenderPoseArrayCount, ByRef<::ArrayW<::OVR::OpenVR::TrackedDevicePose_t>> pGamePoseArray, uint unGamePoseArrayCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_WaitGetPoses::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_WaitGetPoses*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pRenderPoseArray), unRenderPoseArrayCount, byref(pGamePoseArray), unGamePoseArrayCount, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_WaitGetPoses.EndInvoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_WaitGetPoses::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_WaitGetPoses::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_WaitGetPoses*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_GetLastPoses
#include "OVR/OpenVR/IVRCompositor__GetLastPoses.hpp"
// Including type: OVR.OpenVR.EVRCompositorError
#include "OVR/OpenVR/EVRCompositorError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetLastPoses.Invoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_GetLastPoses::Invoke(ByRef<::ArrayW<::OVR::OpenVR::TrackedDevicePose_t>> pRenderPoseArray, uint unRenderPoseArrayCount, ByRef<::ArrayW<::OVR::OpenVR::TrackedDevicePose_t>> pGamePoseArray, uint unGamePoseArrayCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetLastPoses::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetLastPoses*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, byref(pRenderPoseArray), unRenderPoseArrayCount, byref(pGamePoseArray), unGamePoseArrayCount);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetLastPoses.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetLastPoses::BeginInvoke(ByRef<::ArrayW<::OVR::OpenVR::TrackedDevicePose_t>> pRenderPoseArray, uint unRenderPoseArrayCount, ByRef<::ArrayW<::OVR::OpenVR::TrackedDevicePose_t>> pGamePoseArray, uint unGamePoseArrayCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetLastPoses::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetLastPoses*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pRenderPoseArray), unRenderPoseArrayCount, byref(pGamePoseArray), unGamePoseArrayCount, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetLastPoses.EndInvoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_GetLastPoses::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetLastPoses::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetLastPoses*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_GetLastPoseForTrackedDeviceIndex
#include "OVR/OpenVR/IVRCompositor__GetLastPoseForTrackedDeviceIndex.hpp"
// Including type: OVR.OpenVR.EVRCompositorError
#include "OVR/OpenVR/EVRCompositorError.hpp"
// Including type: OVR.OpenVR.TrackedDevicePose_t
#include "OVR/OpenVR/TrackedDevicePose_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetLastPoseForTrackedDeviceIndex.Invoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_GetLastPoseForTrackedDeviceIndex::Invoke(uint unDeviceIndex, ByRef<::OVR::OpenVR::TrackedDevicePose_t> pOutputPose, ByRef<::OVR::OpenVR::TrackedDevicePose_t> pOutputGamePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetLastPoseForTrackedDeviceIndex::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetLastPoseForTrackedDeviceIndex*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, unDeviceIndex, byref(pOutputPose), byref(pOutputGamePose));
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetLastPoseForTrackedDeviceIndex.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetLastPoseForTrackedDeviceIndex::BeginInvoke(uint unDeviceIndex, ByRef<::OVR::OpenVR::TrackedDevicePose_t> pOutputPose, ByRef<::OVR::OpenVR::TrackedDevicePose_t> pOutputGamePose, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetLastPoseForTrackedDeviceIndex::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetLastPoseForTrackedDeviceIndex*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unDeviceIndex, byref(pOutputPose), byref(pOutputGamePose), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetLastPoseForTrackedDeviceIndex.EndInvoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_GetLastPoseForTrackedDeviceIndex::EndInvoke(ByRef<::OVR::OpenVR::TrackedDevicePose_t> pOutputPose, ByRef<::OVR::OpenVR::TrackedDevicePose_t> pOutputGamePose, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetLastPoseForTrackedDeviceIndex::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetLastPoseForTrackedDeviceIndex*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, byref(pOutputPose), byref(pOutputGamePose), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_Submit
#include "OVR/OpenVR/IVRCompositor__Submit.hpp"
// Including type: OVR.OpenVR.EVRCompositorError
#include "OVR/OpenVR/EVRCompositorError.hpp"
// Including type: OVR.OpenVR.EVREye
#include "OVR/OpenVR/EVREye.hpp"
// Including type: OVR.OpenVR.Texture_t
#include "OVR/OpenVR/Texture_t.hpp"
// Including type: OVR.OpenVR.VRTextureBounds_t
#include "OVR/OpenVR/VRTextureBounds_t.hpp"
// Including type: OVR.OpenVR.EVRSubmitFlags
#include "OVR/OpenVR/EVRSubmitFlags.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_Submit.Invoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_Submit::Invoke(::OVR::OpenVR::EVREye eEye, ByRef<::OVR::OpenVR::Texture_t> pTexture, ByRef<::OVR::OpenVR::VRTextureBounds_t> pBounds, ::OVR::OpenVR::EVRSubmitFlags nSubmitFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_Submit::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_Submit*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, eEye, byref(pTexture), byref(pBounds), nSubmitFlags);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_Submit.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_Submit::BeginInvoke(::OVR::OpenVR::EVREye eEye, ByRef<::OVR::OpenVR::Texture_t> pTexture, ByRef<::OVR::OpenVR::VRTextureBounds_t> pBounds, ::OVR::OpenVR::EVRSubmitFlags nSubmitFlags, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_Submit::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_Submit*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eEye, byref(pTexture), byref(pBounds), nSubmitFlags, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_Submit.EndInvoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_Submit::EndInvoke(ByRef<::OVR::OpenVR::Texture_t> pTexture, ByRef<::OVR::OpenVR::VRTextureBounds_t> pBounds, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_Submit::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_Submit*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, byref(pTexture), byref(pBounds), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_ClearLastSubmittedFrame
#include "OVR/OpenVR/IVRCompositor__ClearLastSubmittedFrame.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ClearLastSubmittedFrame.Invoke
void OVR::OpenVR::IVRCompositor::_ClearLastSubmittedFrame::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ClearLastSubmittedFrame::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ClearLastSubmittedFrame*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ClearLastSubmittedFrame.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_ClearLastSubmittedFrame::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ClearLastSubmittedFrame::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ClearLastSubmittedFrame*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ClearLastSubmittedFrame.EndInvoke
void OVR::OpenVR::IVRCompositor::_ClearLastSubmittedFrame::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ClearLastSubmittedFrame::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ClearLastSubmittedFrame*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_PostPresentHandoff
#include "OVR/OpenVR/IVRCompositor__PostPresentHandoff.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_PostPresentHandoff.Invoke
void OVR::OpenVR::IVRCompositor::_PostPresentHandoff::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_PostPresentHandoff::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_PostPresentHandoff*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_PostPresentHandoff.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_PostPresentHandoff::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_PostPresentHandoff::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_PostPresentHandoff*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_PostPresentHandoff.EndInvoke
void OVR::OpenVR::IVRCompositor::_PostPresentHandoff::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_PostPresentHandoff::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_PostPresentHandoff*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_GetFrameTiming
#include "OVR/OpenVR/IVRCompositor__GetFrameTiming.hpp"
// Including type: OVR.OpenVR.Compositor_FrameTiming
#include "OVR/OpenVR/Compositor_FrameTiming.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetFrameTiming.Invoke
bool OVR::OpenVR::IVRCompositor::_GetFrameTiming::Invoke(ByRef<::OVR::OpenVR::Compositor_FrameTiming> pTiming, uint unFramesAgo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetFrameTiming::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetFrameTiming*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pTiming), unFramesAgo);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetFrameTiming.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetFrameTiming::BeginInvoke(ByRef<::OVR::OpenVR::Compositor_FrameTiming> pTiming, uint unFramesAgo, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetFrameTiming::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetFrameTiming*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pTiming), unFramesAgo, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetFrameTiming.EndInvoke
bool OVR::OpenVR::IVRCompositor::_GetFrameTiming::EndInvoke(ByRef<::OVR::OpenVR::Compositor_FrameTiming> pTiming, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetFrameTiming::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetFrameTiming*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pTiming), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_GetFrameTimings
#include "OVR/OpenVR/IVRCompositor__GetFrameTimings.hpp"
// Including type: OVR.OpenVR.Compositor_FrameTiming
#include "OVR/OpenVR/Compositor_FrameTiming.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetFrameTimings.Invoke
uint OVR::OpenVR::IVRCompositor::_GetFrameTimings::Invoke(ByRef<::OVR::OpenVR::Compositor_FrameTiming> pTiming, uint nFrames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetFrameTimings::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetFrameTimings*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(pTiming), nFrames);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetFrameTimings.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetFrameTimings::BeginInvoke(ByRef<::OVR::OpenVR::Compositor_FrameTiming> pTiming, uint nFrames, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetFrameTimings::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetFrameTimings*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pTiming), nFrames, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetFrameTimings.EndInvoke
uint OVR::OpenVR::IVRCompositor::_GetFrameTimings::EndInvoke(ByRef<::OVR::OpenVR::Compositor_FrameTiming> pTiming, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetFrameTimings::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetFrameTimings*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(pTiming), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_GetFrameTimeRemaining
#include "OVR/OpenVR/IVRCompositor__GetFrameTimeRemaining.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetFrameTimeRemaining.Invoke
float OVR::OpenVR::IVRCompositor::_GetFrameTimeRemaining::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetFrameTimeRemaining::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetFrameTimeRemaining*), 13));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetFrameTimeRemaining.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetFrameTimeRemaining::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetFrameTimeRemaining::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetFrameTimeRemaining*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetFrameTimeRemaining.EndInvoke
float OVR::OpenVR::IVRCompositor::_GetFrameTimeRemaining::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetFrameTimeRemaining::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetFrameTimeRemaining*), 15));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_GetCumulativeStats
#include "OVR/OpenVR/IVRCompositor__GetCumulativeStats.hpp"
// Including type: OVR.OpenVR.Compositor_CumulativeStats
#include "OVR/OpenVR/Compositor_CumulativeStats.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetCumulativeStats.Invoke
void OVR::OpenVR::IVRCompositor::_GetCumulativeStats::Invoke(ByRef<::OVR::OpenVR::Compositor_CumulativeStats> pStats, uint nStatsSizeInBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetCumulativeStats::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetCumulativeStats*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pStats), nStatsSizeInBytes);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetCumulativeStats.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetCumulativeStats::BeginInvoke(ByRef<::OVR::OpenVR::Compositor_CumulativeStats> pStats, uint nStatsSizeInBytes, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetCumulativeStats::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetCumulativeStats*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pStats), nStatsSizeInBytes, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetCumulativeStats.EndInvoke
void OVR::OpenVR::IVRCompositor::_GetCumulativeStats::EndInvoke(ByRef<::OVR::OpenVR::Compositor_CumulativeStats> pStats, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetCumulativeStats::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetCumulativeStats*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pStats), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_FadeToColor
#include "OVR/OpenVR/IVRCompositor__FadeToColor.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_FadeToColor.Invoke
void OVR::OpenVR::IVRCompositor::_FadeToColor::Invoke(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_FadeToColor::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_FadeToColor*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fSeconds, fRed, fGreen, fBlue, fAlpha, bBackground);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_FadeToColor.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_FadeToColor::BeginInvoke(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_FadeToColor::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_FadeToColor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, fSeconds, fRed, fGreen, fBlue, fAlpha, bBackground, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_FadeToColor.EndInvoke
void OVR::OpenVR::IVRCompositor::_FadeToColor::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_FadeToColor::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_FadeToColor*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_GetCurrentFadeColor
#include "OVR/OpenVR/IVRCompositor__GetCurrentFadeColor.hpp"
// Including type: OVR.OpenVR.HmdColor_t
#include "OVR/OpenVR/HmdColor_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetCurrentFadeColor.Invoke
::OVR::OpenVR::HmdColor_t OVR::OpenVR::IVRCompositor::_GetCurrentFadeColor::Invoke(bool bBackground) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetCurrentFadeColor::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetCurrentFadeColor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::HmdColor_t, false>(this, ___internal__method, bBackground);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetCurrentFadeColor.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetCurrentFadeColor::BeginInvoke(bool bBackground, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetCurrentFadeColor::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetCurrentFadeColor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, bBackground, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetCurrentFadeColor.EndInvoke
::OVR::OpenVR::HmdColor_t OVR::OpenVR::IVRCompositor::_GetCurrentFadeColor::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetCurrentFadeColor::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetCurrentFadeColor*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::HmdColor_t, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_FadeGrid
#include "OVR/OpenVR/IVRCompositor__FadeGrid.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_FadeGrid.Invoke
void OVR::OpenVR::IVRCompositor::_FadeGrid::Invoke(float fSeconds, bool bFadeIn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_FadeGrid::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_FadeGrid*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fSeconds, bFadeIn);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_FadeGrid.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_FadeGrid::BeginInvoke(float fSeconds, bool bFadeIn, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_FadeGrid::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_FadeGrid*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, fSeconds, bFadeIn, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_FadeGrid.EndInvoke
void OVR::OpenVR::IVRCompositor::_FadeGrid::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_FadeGrid::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_FadeGrid*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_GetCurrentGridAlpha
#include "OVR/OpenVR/IVRCompositor__GetCurrentGridAlpha.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetCurrentGridAlpha.Invoke
float OVR::OpenVR::IVRCompositor::_GetCurrentGridAlpha::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetCurrentGridAlpha::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetCurrentGridAlpha*), 13));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetCurrentGridAlpha.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetCurrentGridAlpha::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetCurrentGridAlpha::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetCurrentGridAlpha*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetCurrentGridAlpha.EndInvoke
float OVR::OpenVR::IVRCompositor::_GetCurrentGridAlpha::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetCurrentGridAlpha::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetCurrentGridAlpha*), 15));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_SetSkyboxOverride
#include "OVR/OpenVR/IVRCompositor__SetSkyboxOverride.hpp"
// Including type: OVR.OpenVR.EVRCompositorError
#include "OVR/OpenVR/EVRCompositorError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_SetSkyboxOverride.Invoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_SetSkyboxOverride::Invoke(ByRef<::ArrayW<::OVR::OpenVR::Texture_t>> pTextures, uint unTextureCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SetSkyboxOverride::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SetSkyboxOverride*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, byref(pTextures), unTextureCount);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_SetSkyboxOverride.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_SetSkyboxOverride::BeginInvoke(ByRef<::ArrayW<::OVR::OpenVR::Texture_t>> pTextures, uint unTextureCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SetSkyboxOverride::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SetSkyboxOverride*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pTextures), unTextureCount, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_SetSkyboxOverride.EndInvoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_SetSkyboxOverride::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SetSkyboxOverride::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SetSkyboxOverride*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_ClearSkyboxOverride
#include "OVR/OpenVR/IVRCompositor__ClearSkyboxOverride.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ClearSkyboxOverride.Invoke
void OVR::OpenVR::IVRCompositor::_ClearSkyboxOverride::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ClearSkyboxOverride::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ClearSkyboxOverride*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ClearSkyboxOverride.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_ClearSkyboxOverride::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ClearSkyboxOverride::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ClearSkyboxOverride*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ClearSkyboxOverride.EndInvoke
void OVR::OpenVR::IVRCompositor::_ClearSkyboxOverride::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ClearSkyboxOverride::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ClearSkyboxOverride*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_CompositorBringToFront
#include "OVR/OpenVR/IVRCompositor__CompositorBringToFront.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_CompositorBringToFront.Invoke
void OVR::OpenVR::IVRCompositor::_CompositorBringToFront::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CompositorBringToFront::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CompositorBringToFront*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_CompositorBringToFront.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_CompositorBringToFront::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CompositorBringToFront::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CompositorBringToFront*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_CompositorBringToFront.EndInvoke
void OVR::OpenVR::IVRCompositor::_CompositorBringToFront::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CompositorBringToFront::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CompositorBringToFront*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_CompositorGoToBack
#include "OVR/OpenVR/IVRCompositor__CompositorGoToBack.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_CompositorGoToBack.Invoke
void OVR::OpenVR::IVRCompositor::_CompositorGoToBack::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CompositorGoToBack::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CompositorGoToBack*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_CompositorGoToBack.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_CompositorGoToBack::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CompositorGoToBack::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CompositorGoToBack*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_CompositorGoToBack.EndInvoke
void OVR::OpenVR::IVRCompositor::_CompositorGoToBack::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CompositorGoToBack::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CompositorGoToBack*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_CompositorQuit
#include "OVR/OpenVR/IVRCompositor__CompositorQuit.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_CompositorQuit.Invoke
void OVR::OpenVR::IVRCompositor::_CompositorQuit::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CompositorQuit::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CompositorQuit*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_CompositorQuit.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_CompositorQuit::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CompositorQuit::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CompositorQuit*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_CompositorQuit.EndInvoke
void OVR::OpenVR::IVRCompositor::_CompositorQuit::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CompositorQuit::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CompositorQuit*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_IsFullscreen
#include "OVR/OpenVR/IVRCompositor__IsFullscreen.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_IsFullscreen.Invoke
bool OVR::OpenVR::IVRCompositor::_IsFullscreen::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_IsFullscreen::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_IsFullscreen*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_IsFullscreen.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_IsFullscreen::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_IsFullscreen::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_IsFullscreen*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_IsFullscreen.EndInvoke
bool OVR::OpenVR::IVRCompositor::_IsFullscreen::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_IsFullscreen::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_IsFullscreen*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_GetCurrentSceneFocusProcess
#include "OVR/OpenVR/IVRCompositor__GetCurrentSceneFocusProcess.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetCurrentSceneFocusProcess.Invoke
uint OVR::OpenVR::IVRCompositor::_GetCurrentSceneFocusProcess::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetCurrentSceneFocusProcess::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetCurrentSceneFocusProcess*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetCurrentSceneFocusProcess.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetCurrentSceneFocusProcess::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetCurrentSceneFocusProcess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetCurrentSceneFocusProcess*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetCurrentSceneFocusProcess.EndInvoke
uint OVR::OpenVR::IVRCompositor::_GetCurrentSceneFocusProcess::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetCurrentSceneFocusProcess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetCurrentSceneFocusProcess*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_GetLastFrameRenderer
#include "OVR/OpenVR/IVRCompositor__GetLastFrameRenderer.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetLastFrameRenderer.Invoke
uint OVR::OpenVR::IVRCompositor::_GetLastFrameRenderer::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetLastFrameRenderer::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetLastFrameRenderer*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetLastFrameRenderer.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetLastFrameRenderer::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetLastFrameRenderer::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetLastFrameRenderer*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetLastFrameRenderer.EndInvoke
uint OVR::OpenVR::IVRCompositor::_GetLastFrameRenderer::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetLastFrameRenderer::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetLastFrameRenderer*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_CanRenderScene
#include "OVR/OpenVR/IVRCompositor__CanRenderScene.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_CanRenderScene.Invoke
bool OVR::OpenVR::IVRCompositor::_CanRenderScene::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CanRenderScene::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CanRenderScene*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_CanRenderScene.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_CanRenderScene::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CanRenderScene::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CanRenderScene*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_CanRenderScene.EndInvoke
bool OVR::OpenVR::IVRCompositor::_CanRenderScene::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CanRenderScene::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CanRenderScene*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_ShowMirrorWindow
#include "OVR/OpenVR/IVRCompositor__ShowMirrorWindow.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ShowMirrorWindow.Invoke
void OVR::OpenVR::IVRCompositor::_ShowMirrorWindow::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ShowMirrorWindow::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ShowMirrorWindow*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ShowMirrorWindow.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_ShowMirrorWindow::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ShowMirrorWindow::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ShowMirrorWindow*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ShowMirrorWindow.EndInvoke
void OVR::OpenVR::IVRCompositor::_ShowMirrorWindow::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ShowMirrorWindow::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ShowMirrorWindow*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_HideMirrorWindow
#include "OVR/OpenVR/IVRCompositor__HideMirrorWindow.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_HideMirrorWindow.Invoke
void OVR::OpenVR::IVRCompositor::_HideMirrorWindow::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_HideMirrorWindow::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_HideMirrorWindow*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_HideMirrorWindow.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_HideMirrorWindow::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_HideMirrorWindow::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_HideMirrorWindow*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_HideMirrorWindow.EndInvoke
void OVR::OpenVR::IVRCompositor::_HideMirrorWindow::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_HideMirrorWindow::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_HideMirrorWindow*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_IsMirrorWindowVisible
#include "OVR/OpenVR/IVRCompositor__IsMirrorWindowVisible.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_IsMirrorWindowVisible.Invoke
bool OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_IsMirrorWindowVisible.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_IsMirrorWindowVisible.EndInvoke
bool OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_IsMirrorWindowVisible*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_CompositorDumpImages
#include "OVR/OpenVR/IVRCompositor__CompositorDumpImages.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_CompositorDumpImages.Invoke
void OVR::OpenVR::IVRCompositor::_CompositorDumpImages::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CompositorDumpImages::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CompositorDumpImages*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_CompositorDumpImages.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_CompositorDumpImages::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CompositorDumpImages::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CompositorDumpImages*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_CompositorDumpImages.EndInvoke
void OVR::OpenVR::IVRCompositor::_CompositorDumpImages::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_CompositorDumpImages::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_CompositorDumpImages*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_ShouldAppRenderWithLowResources
#include "OVR/OpenVR/IVRCompositor__ShouldAppRenderWithLowResources.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ShouldAppRenderWithLowResources.Invoke
bool OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ShouldAppRenderWithLowResources.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ShouldAppRenderWithLowResources.EndInvoke
bool OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ShouldAppRenderWithLowResources*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_ForceInterleavedReprojectionOn
#include "OVR/OpenVR/IVRCompositor__ForceInterleavedReprojectionOn.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ForceInterleavedReprojectionOn.Invoke
void OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn::Invoke(bool bOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bOverride);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ForceInterleavedReprojectionOn.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn::BeginInvoke(bool bOverride, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, bOverride, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ForceInterleavedReprojectionOn.EndInvoke
void OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ForceInterleavedReprojectionOn*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_ForceReconnectProcess
#include "OVR/OpenVR/IVRCompositor__ForceReconnectProcess.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ForceReconnectProcess.Invoke
void OVR::OpenVR::IVRCompositor::_ForceReconnectProcess::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ForceReconnectProcess::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ForceReconnectProcess*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ForceReconnectProcess.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_ForceReconnectProcess::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ForceReconnectProcess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ForceReconnectProcess*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ForceReconnectProcess.EndInvoke
void OVR::OpenVR::IVRCompositor::_ForceReconnectProcess::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ForceReconnectProcess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ForceReconnectProcess*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_SuspendRendering
#include "OVR/OpenVR/IVRCompositor__SuspendRendering.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_SuspendRendering.Invoke
void OVR::OpenVR::IVRCompositor::_SuspendRendering::Invoke(bool bSuspend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SuspendRendering::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SuspendRendering*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bSuspend);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_SuspendRendering.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_SuspendRendering::BeginInvoke(bool bSuspend, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SuspendRendering::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SuspendRendering*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, bSuspend, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_SuspendRendering.EndInvoke
void OVR::OpenVR::IVRCompositor::_SuspendRendering::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SuspendRendering::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SuspendRendering*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_GetMirrorTextureD3D11
#include "OVR/OpenVR/IVRCompositor__GetMirrorTextureD3D11.hpp"
// Including type: OVR.OpenVR.EVRCompositorError
#include "OVR/OpenVR/EVRCompositorError.hpp"
// Including type: OVR.OpenVR.EVREye
#include "OVR/OpenVR/EVREye.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetMirrorTextureD3D11.Invoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11::Invoke(::OVR::OpenVR::EVREye eEye, ::System::IntPtr pD3D11DeviceOrResource, ByRef<::System::IntPtr> ppD3D11ShaderResourceView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, eEye, pD3D11DeviceOrResource, byref(ppD3D11ShaderResourceView));
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetMirrorTextureD3D11.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11::BeginInvoke(::OVR::OpenVR::EVREye eEye, ::System::IntPtr pD3D11DeviceOrResource, ByRef<::System::IntPtr> ppD3D11ShaderResourceView, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eEye, pD3D11DeviceOrResource, byref(ppD3D11ShaderResourceView), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetMirrorTextureD3D11.EndInvoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11::EndInvoke(ByRef<::System::IntPtr> ppD3D11ShaderResourceView, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetMirrorTextureD3D11*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, byref(ppD3D11ShaderResourceView), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_ReleaseMirrorTextureD3D11
#include "OVR/OpenVR/IVRCompositor__ReleaseMirrorTextureD3D11.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ReleaseMirrorTextureD3D11.Invoke
void OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11::Invoke(::System::IntPtr pD3D11ShaderResourceView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pD3D11ShaderResourceView);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ReleaseMirrorTextureD3D11.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11::BeginInvoke(::System::IntPtr pD3D11ShaderResourceView, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pD3D11ShaderResourceView, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ReleaseMirrorTextureD3D11.EndInvoke
void OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_GetMirrorTextureGL
#include "OVR/OpenVR/IVRCompositor__GetMirrorTextureGL.hpp"
// Including type: OVR.OpenVR.EVRCompositorError
#include "OVR/OpenVR/EVRCompositorError.hpp"
// Including type: OVR.OpenVR.EVREye
#include "OVR/OpenVR/EVREye.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetMirrorTextureGL.Invoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL::Invoke(::OVR::OpenVR::EVREye eEye, ByRef<uint> pglTextureId, ::System::IntPtr pglSharedTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, eEye, byref(pglTextureId), pglSharedTextureHandle);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetMirrorTextureGL.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL::BeginInvoke(::OVR::OpenVR::EVREye eEye, ByRef<uint> pglTextureId, ::System::IntPtr pglSharedTextureHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eEye, byref(pglTextureId), pglSharedTextureHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetMirrorTextureGL.EndInvoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL::EndInvoke(ByRef<uint> pglTextureId, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetMirrorTextureGL*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, byref(pglTextureId), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_ReleaseSharedGLTexture
#include "OVR/OpenVR/IVRCompositor__ReleaseSharedGLTexture.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ReleaseSharedGLTexture.Invoke
bool OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture::Invoke(uint glTextureId, ::System::IntPtr glSharedTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, glTextureId, glSharedTextureHandle);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ReleaseSharedGLTexture.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture::BeginInvoke(uint glTextureId, ::System::IntPtr glSharedTextureHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, glTextureId, glSharedTextureHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ReleaseSharedGLTexture.EndInvoke
bool OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_ReleaseSharedGLTexture*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_LockGLSharedTextureForAccess
#include "OVR/OpenVR/IVRCompositor__LockGLSharedTextureForAccess.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_LockGLSharedTextureForAccess.Invoke
void OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess::Invoke(::System::IntPtr glSharedTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, glSharedTextureHandle);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_LockGLSharedTextureForAccess.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess::BeginInvoke(::System::IntPtr glSharedTextureHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, glSharedTextureHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_LockGLSharedTextureForAccess.EndInvoke
void OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_LockGLSharedTextureForAccess*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_UnlockGLSharedTextureForAccess
#include "OVR/OpenVR/IVRCompositor__UnlockGLSharedTextureForAccess.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_UnlockGLSharedTextureForAccess.Invoke
void OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess::Invoke(::System::IntPtr glSharedTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, glSharedTextureHandle);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_UnlockGLSharedTextureForAccess.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess::BeginInvoke(::System::IntPtr glSharedTextureHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, glSharedTextureHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_UnlockGLSharedTextureForAccess.EndInvoke
void OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_UnlockGLSharedTextureForAccess*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_GetVulkanInstanceExtensionsRequired
#include "OVR/OpenVR/IVRCompositor__GetVulkanInstanceExtensionsRequired.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetVulkanInstanceExtensionsRequired.Invoke
uint OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired::Invoke(::System::Text::StringBuilder* pchValue, uint unBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchValue, unBufferSize);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetVulkanInstanceExtensionsRequired.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired::BeginInvoke(::System::Text::StringBuilder* pchValue, uint unBufferSize, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchValue, unBufferSize, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetVulkanInstanceExtensionsRequired.EndInvoke
uint OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetVulkanInstanceExtensionsRequired*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_GetVulkanDeviceExtensionsRequired
#include "OVR/OpenVR/IVRCompositor__GetVulkanDeviceExtensionsRequired.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetVulkanDeviceExtensionsRequired.Invoke
uint OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired::Invoke(::System::IntPtr pPhysicalDevice, ::System::Text::StringBuilder* pchValue, uint unBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pPhysicalDevice, pchValue, unBufferSize);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetVulkanDeviceExtensionsRequired.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired::BeginInvoke(::System::IntPtr pPhysicalDevice, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pPhysicalDevice, pchValue, unBufferSize, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_GetVulkanDeviceExtensionsRequired.EndInvoke
uint OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_GetVulkanDeviceExtensionsRequired*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_SetExplicitTimingMode
#include "OVR/OpenVR/IVRCompositor__SetExplicitTimingMode.hpp"
// Including type: OVR.OpenVR.EVRCompositorTimingMode
#include "OVR/OpenVR/EVRCompositorTimingMode.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_SetExplicitTimingMode.Invoke
void OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode::Invoke(::OVR::OpenVR::EVRCompositorTimingMode eTimingMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eTimingMode);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_SetExplicitTimingMode.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode::BeginInvoke(::OVR::OpenVR::EVRCompositorTimingMode eTimingMode, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eTimingMode, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_SetExplicitTimingMode.EndInvoke
void OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SetExplicitTimingMode*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_SubmitExplicitTimingData
#include "OVR/OpenVR/IVRCompositor__SubmitExplicitTimingData.hpp"
// Including type: OVR.OpenVR.EVRCompositorError
#include "OVR/OpenVR/EVRCompositorError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_SubmitExplicitTimingData.Invoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_SubmitExplicitTimingData.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_SubmitExplicitTimingData.EndInvoke
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRCompositor::_SubmitExplicitTimingData*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_FindOverlay
#include "OVR/OpenVR/IVROverlay__FindOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_FindOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_FindOverlay::Invoke(::StringW pchOverlayKey, ByRef<uint64_t> pOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_FindOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_FindOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, pchOverlayKey, byref(pOverlayHandle));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_FindOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_FindOverlay::BeginInvoke(::StringW pchOverlayKey, ByRef<uint64_t> pOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_FindOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_FindOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchOverlayKey, byref(pOverlayHandle), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_FindOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_FindOverlay::EndInvoke(ByRef<uint64_t> pOverlayHandle, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_FindOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_FindOverlay*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pOverlayHandle), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_CreateOverlay
#include "OVR/OpenVR/IVROverlay__CreateOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_CreateOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_CreateOverlay::Invoke(::StringW pchOverlayKey, ::StringW pchOverlayName, ByRef<uint64_t> pOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CreateOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CreateOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, pchOverlayKey, pchOverlayName, byref(pOverlayHandle));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_CreateOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_CreateOverlay::BeginInvoke(::StringW pchOverlayKey, ::StringW pchOverlayName, ByRef<uint64_t> pOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CreateOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CreateOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchOverlayKey, pchOverlayName, byref(pOverlayHandle), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_CreateOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_CreateOverlay::EndInvoke(ByRef<uint64_t> pOverlayHandle, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CreateOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CreateOverlay*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pOverlayHandle), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_DestroyOverlay
#include "OVR/OpenVR/IVROverlay__DestroyOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_DestroyOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_DestroyOverlay::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_DestroyOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_DestroyOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_DestroyOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_DestroyOverlay::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_DestroyOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_DestroyOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_DestroyOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_DestroyOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_DestroyOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_DestroyOverlay*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetHighQualityOverlay
#include "OVR/OpenVR/IVROverlay__SetHighQualityOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetHighQualityOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetHighQualityOverlay::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetHighQualityOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetHighQualityOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetHighQualityOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetHighQualityOverlay::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetHighQualityOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetHighQualityOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetHighQualityOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetHighQualityOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetHighQualityOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetHighQualityOverlay*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetHighQualityOverlay
#include "OVR/OpenVR/IVROverlay__GetHighQualityOverlay.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetHighQualityOverlay.Invoke
uint64_t OVR::OpenVR::IVROverlay::_GetHighQualityOverlay::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetHighQualityOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetHighQualityOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetHighQualityOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetHighQualityOverlay::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetHighQualityOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetHighQualityOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetHighQualityOverlay.EndInvoke
uint64_t OVR::OpenVR::IVROverlay::_GetHighQualityOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetHighQualityOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetHighQualityOverlay*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayKey
#include "OVR/OpenVR/IVROverlay__GetOverlayKey.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayKey.Invoke
uint OVR::OpenVR::IVROverlay::_GetOverlayKey::Invoke(uint64_t ulOverlayHandle, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::OVR::OpenVR::EVROverlayError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayKey::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayKey*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pError));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayKey.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayKey::BeginInvoke(uint64_t ulOverlayHandle, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::OVR::OpenVR::EVROverlayError> pError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayKey::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayKey*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayKey.EndInvoke
uint OVR::OpenVR::IVROverlay::_GetOverlayKey::EndInvoke(ByRef<::OVR::OpenVR::EVROverlayError> pError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayKey::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayKey*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayName
#include "OVR/OpenVR/IVROverlay__GetOverlayName.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayName.Invoke
uint OVR::OpenVR::IVROverlay::_GetOverlayName::Invoke(uint64_t ulOverlayHandle, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::OVR::OpenVR::EVROverlayError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayName::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayName*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pError));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayName.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayName::BeginInvoke(uint64_t ulOverlayHandle, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::OVR::OpenVR::EVROverlayError> pError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayName::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayName*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayName.EndInvoke
uint OVR::OpenVR::IVROverlay::_GetOverlayName::EndInvoke(ByRef<::OVR::OpenVR::EVROverlayError> pError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayName::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayName*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayName
#include "OVR/OpenVR/IVROverlay__SetOverlayName.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayName.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayName::Invoke(uint64_t ulOverlayHandle, ::StringW pchName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayName::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayName*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pchName);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayName.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayName::BeginInvoke(uint64_t ulOverlayHandle, ::StringW pchName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayName::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayName*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pchName, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayName.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayName::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayName::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayName*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayImageData
#include "OVR/OpenVR/IVROverlay__GetOverlayImageData.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayImageData.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayImageData::Invoke(uint64_t ulOverlayHandle, ::System::IntPtr pvBuffer, uint unBufferSize, ByRef<uint> punWidth, ByRef<uint> punHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayImageData::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayImageData*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pvBuffer, unBufferSize, byref(punWidth), byref(punHeight));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayImageData.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayImageData::BeginInvoke(uint64_t ulOverlayHandle, ::System::IntPtr pvBuffer, uint unBufferSize, ByRef<uint> punWidth, ByRef<uint> punHeight, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayImageData::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayImageData*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pvBuffer, unBufferSize, byref(punWidth), byref(punHeight), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayImageData.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayImageData::EndInvoke(ByRef<uint> punWidth, ByRef<uint> punHeight, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayImageData::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayImageData*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(punWidth), byref(punHeight), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayErrorNameFromEnum
#include "OVR/OpenVR/IVROverlay__GetOverlayErrorNameFromEnum.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayErrorNameFromEnum.Invoke
::System::IntPtr OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum::Invoke(::OVR::OpenVR::EVROverlayError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, error);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayErrorNameFromEnum.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum::BeginInvoke(::OVR::OpenVR::EVROverlayError error, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, error, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayErrorNameFromEnum.EndInvoke
::System::IntPtr OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayErrorNameFromEnum*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayRenderingPid
#include "OVR/OpenVR/IVROverlay__SetOverlayRenderingPid.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayRenderingPid.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid::Invoke(uint64_t ulOverlayHandle, uint unPID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unPID);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayRenderingPid.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid::BeginInvoke(uint64_t ulOverlayHandle, uint unPID, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, unPID, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayRenderingPid.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRenderingPid*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayRenderingPid
#include "OVR/OpenVR/IVROverlay__GetOverlayRenderingPid.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayRenderingPid.Invoke
uint OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayRenderingPid.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayRenderingPid.EndInvoke
uint OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayRenderingPid*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayFlag
#include "OVR/OpenVR/IVROverlay__SetOverlayFlag.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.VROverlayFlags
#include "OVR/OpenVR/VROverlayFlags.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayFlag.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayFlag::Invoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::VROverlayFlags eOverlayFlag, bool bEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayFlag::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayFlag*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eOverlayFlag, bEnabled);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayFlag.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayFlag::BeginInvoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::VROverlayFlags eOverlayFlag, bool bEnabled, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayFlag::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayFlag*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eOverlayFlag, bEnabled, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayFlag.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayFlag::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayFlag::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayFlag*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayFlag
#include "OVR/OpenVR/IVROverlay__GetOverlayFlag.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.VROverlayFlags
#include "OVR/OpenVR/VROverlayFlags.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayFlag.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayFlag::Invoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::VROverlayFlags eOverlayFlag, ByRef<bool> pbEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayFlag::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayFlag*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eOverlayFlag, byref(pbEnabled));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayFlag.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayFlag::BeginInvoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::VROverlayFlags eOverlayFlag, ByRef<bool> pbEnabled, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayFlag::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayFlag*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eOverlayFlag, byref(pbEnabled), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayFlag.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayFlag::EndInvoke(ByRef<bool> pbEnabled, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayFlag::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayFlag*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pbEnabled), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayColor
#include "OVR/OpenVR/IVROverlay__SetOverlayColor.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayColor.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayColor::Invoke(uint64_t ulOverlayHandle, float fRed, float fGreen, float fBlue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayColor::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayColor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fRed, fGreen, fBlue);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayColor.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayColor::BeginInvoke(uint64_t ulOverlayHandle, float fRed, float fGreen, float fBlue, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayColor::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayColor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, fRed, fGreen, fBlue, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayColor.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayColor::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayColor::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayColor*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayColor
#include "OVR/OpenVR/IVROverlay__GetOverlayColor.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayColor.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayColor::Invoke(uint64_t ulOverlayHandle, ByRef<float> pfRed, ByRef<float> pfGreen, ByRef<float> pfBlue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayColor::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayColor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfRed), byref(pfGreen), byref(pfBlue));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayColor.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayColor::BeginInvoke(uint64_t ulOverlayHandle, ByRef<float> pfRed, ByRef<float> pfGreen, ByRef<float> pfBlue, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayColor::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayColor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pfRed), byref(pfGreen), byref(pfBlue), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayColor.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayColor::EndInvoke(ByRef<float> pfRed, ByRef<float> pfGreen, ByRef<float> pfBlue, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayColor::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayColor*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pfRed), byref(pfGreen), byref(pfBlue), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayAlpha
#include "OVR/OpenVR/IVROverlay__SetOverlayAlpha.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayAlpha.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayAlpha::Invoke(uint64_t ulOverlayHandle, float fAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayAlpha::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayAlpha*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fAlpha);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayAlpha.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayAlpha::BeginInvoke(uint64_t ulOverlayHandle, float fAlpha, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayAlpha::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayAlpha*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, fAlpha, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayAlpha.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayAlpha::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayAlpha::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayAlpha*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayAlpha
#include "OVR/OpenVR/IVROverlay__GetOverlayAlpha.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayAlpha.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayAlpha::Invoke(uint64_t ulOverlayHandle, ByRef<float> pfAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayAlpha::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayAlpha*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfAlpha));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayAlpha.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayAlpha::BeginInvoke(uint64_t ulOverlayHandle, ByRef<float> pfAlpha, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayAlpha::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayAlpha*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pfAlpha), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayAlpha.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayAlpha::EndInvoke(ByRef<float> pfAlpha, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayAlpha::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayAlpha*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pfAlpha), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayTexelAspect
#include "OVR/OpenVR/IVROverlay__SetOverlayTexelAspect.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTexelAspect.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect::Invoke(uint64_t ulOverlayHandle, float fTexelAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fTexelAspect);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTexelAspect.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect::BeginInvoke(uint64_t ulOverlayHandle, float fTexelAspect, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, fTexelAspect, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTexelAspect.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTexelAspect*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayTexelAspect
#include "OVR/OpenVR/IVROverlay__GetOverlayTexelAspect.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTexelAspect.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect::Invoke(uint64_t ulOverlayHandle, ByRef<float> pfTexelAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfTexelAspect));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTexelAspect.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect::BeginInvoke(uint64_t ulOverlayHandle, ByRef<float> pfTexelAspect, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pfTexelAspect), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTexelAspect.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect::EndInvoke(ByRef<float> pfTexelAspect, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTexelAspect*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pfTexelAspect), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlaySortOrder
#include "OVR/OpenVR/IVROverlay__SetOverlaySortOrder.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlaySortOrder.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlaySortOrder::Invoke(uint64_t ulOverlayHandle, uint unSortOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlaySortOrder::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlaySortOrder*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unSortOrder);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlaySortOrder.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlaySortOrder::BeginInvoke(uint64_t ulOverlayHandle, uint unSortOrder, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlaySortOrder::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlaySortOrder*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, unSortOrder, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlaySortOrder.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlaySortOrder::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlaySortOrder::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlaySortOrder*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlaySortOrder
#include "OVR/OpenVR/IVROverlay__GetOverlaySortOrder.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlaySortOrder.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlaySortOrder::Invoke(uint64_t ulOverlayHandle, ByRef<uint> punSortOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlaySortOrder::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlaySortOrder*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punSortOrder));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlaySortOrder.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlaySortOrder::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint> punSortOrder, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlaySortOrder::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlaySortOrder*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(punSortOrder), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlaySortOrder.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlaySortOrder::EndInvoke(ByRef<uint> punSortOrder, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlaySortOrder::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlaySortOrder*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(punSortOrder), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayWidthInMeters
#include "OVR/OpenVR/IVROverlay__SetOverlayWidthInMeters.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayWidthInMeters.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters::Invoke(uint64_t ulOverlayHandle, float fWidthInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fWidthInMeters);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayWidthInMeters.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters::BeginInvoke(uint64_t ulOverlayHandle, float fWidthInMeters, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, fWidthInMeters, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayWidthInMeters.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayWidthInMeters*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayWidthInMeters
#include "OVR/OpenVR/IVROverlay__GetOverlayWidthInMeters.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayWidthInMeters.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters::Invoke(uint64_t ulOverlayHandle, ByRef<float> pfWidthInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfWidthInMeters));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayWidthInMeters.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters::BeginInvoke(uint64_t ulOverlayHandle, ByRef<float> pfWidthInMeters, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pfWidthInMeters), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayWidthInMeters.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters::EndInvoke(ByRef<float> pfWidthInMeters, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayWidthInMeters*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pfWidthInMeters), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayAutoCurveDistanceRangeInMeters
#include "OVR/OpenVR/IVROverlay__SetOverlayAutoCurveDistanceRangeInMeters.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayAutoCurveDistanceRangeInMeters.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters::Invoke(uint64_t ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fMinDistanceInMeters, fMaxDistanceInMeters);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayAutoCurveDistanceRangeInMeters.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters::BeginInvoke(uint64_t ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, fMinDistanceInMeters, fMaxDistanceInMeters, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayAutoCurveDistanceRangeInMeters.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayAutoCurveDistanceRangeInMeters*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayAutoCurveDistanceRangeInMeters
#include "OVR/OpenVR/IVROverlay__GetOverlayAutoCurveDistanceRangeInMeters.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayAutoCurveDistanceRangeInMeters.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters::Invoke(uint64_t ulOverlayHandle, ByRef<float> pfMinDistanceInMeters, ByRef<float> pfMaxDistanceInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfMinDistanceInMeters), byref(pfMaxDistanceInMeters));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayAutoCurveDistanceRangeInMeters.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters::BeginInvoke(uint64_t ulOverlayHandle, ByRef<float> pfMinDistanceInMeters, ByRef<float> pfMaxDistanceInMeters, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pfMinDistanceInMeters), byref(pfMaxDistanceInMeters), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayAutoCurveDistanceRangeInMeters.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters::EndInvoke(ByRef<float> pfMinDistanceInMeters, ByRef<float> pfMaxDistanceInMeters, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayAutoCurveDistanceRangeInMeters*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pfMinDistanceInMeters), byref(pfMaxDistanceInMeters), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayTextureColorSpace
#include "OVR/OpenVR/IVROverlay__SetOverlayTextureColorSpace.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.EColorSpace
#include "OVR/OpenVR/EColorSpace.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTextureColorSpace.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace::Invoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::EColorSpace eTextureColorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eTextureColorSpace);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTextureColorSpace.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace::BeginInvoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::EColorSpace eTextureColorSpace, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eTextureColorSpace, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTextureColorSpace.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTextureColorSpace*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayTextureColorSpace
#include "OVR/OpenVR/IVROverlay__GetOverlayTextureColorSpace.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.EColorSpace
#include "OVR/OpenVR/EColorSpace.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTextureColorSpace.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::EColorSpace> peTextureColorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peTextureColorSpace));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTextureColorSpace.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::EColorSpace> peTextureColorSpace, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(peTextureColorSpace), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTextureColorSpace.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace::EndInvoke(ByRef<::OVR::OpenVR::EColorSpace> peTextureColorSpace, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureColorSpace*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(peTextureColorSpace), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayTextureBounds
#include "OVR/OpenVR/IVROverlay__SetOverlayTextureBounds.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.VRTextureBounds_t
#include "OVR/OpenVR/VRTextureBounds_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTextureBounds.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VRTextureBounds_t> pOverlayTextureBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pOverlayTextureBounds));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTextureBounds.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VRTextureBounds_t> pOverlayTextureBounds, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pOverlayTextureBounds), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTextureBounds.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds::EndInvoke(ByRef<::OVR::OpenVR::VRTextureBounds_t> pOverlayTextureBounds, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTextureBounds*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pOverlayTextureBounds), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayTextureBounds
#include "OVR/OpenVR/IVROverlay__GetOverlayTextureBounds.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.VRTextureBounds_t
#include "OVR/OpenVR/VRTextureBounds_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTextureBounds.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VRTextureBounds_t> pOverlayTextureBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pOverlayTextureBounds));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTextureBounds.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VRTextureBounds_t> pOverlayTextureBounds, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pOverlayTextureBounds), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTextureBounds.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds::EndInvoke(ByRef<::OVR::OpenVR::VRTextureBounds_t> pOverlayTextureBounds, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureBounds*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pOverlayTextureBounds), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayRenderModel
#include "OVR/OpenVR/IVROverlay__GetOverlayRenderModel.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.HmdColor_t
#include "OVR/OpenVR/HmdColor_t.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayRenderModel.Invoke
uint OVR::OpenVR::IVROverlay::_GetOverlayRenderModel::Invoke(uint64_t ulOverlayHandle, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::OVR::OpenVR::HmdColor_t> pColor, ByRef<::OVR::OpenVR::EVROverlayError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayRenderModel::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayRenderModel*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pColor), byref(pError));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayRenderModel.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayRenderModel::BeginInvoke(uint64_t ulOverlayHandle, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::OVR::OpenVR::HmdColor_t> pColor, ByRef<::OVR::OpenVR::EVROverlayError> pError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayRenderModel::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayRenderModel*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pColor), byref(pError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayRenderModel.EndInvoke
uint OVR::OpenVR::IVROverlay::_GetOverlayRenderModel::EndInvoke(ByRef<::OVR::OpenVR::HmdColor_t> pColor, ByRef<::OVR::OpenVR::EVROverlayError> pError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayRenderModel::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayRenderModel*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(pColor), byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayRenderModel
#include "OVR/OpenVR/IVROverlay__SetOverlayRenderModel.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.HmdColor_t
#include "OVR/OpenVR/HmdColor_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayRenderModel.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayRenderModel::Invoke(uint64_t ulOverlayHandle, ::StringW pchRenderModel, ByRef<::OVR::OpenVR::HmdColor_t> pColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRenderModel::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRenderModel*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pchRenderModel, byref(pColor));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayRenderModel.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayRenderModel::BeginInvoke(uint64_t ulOverlayHandle, ::StringW pchRenderModel, ByRef<::OVR::OpenVR::HmdColor_t> pColor, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRenderModel::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRenderModel*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pchRenderModel, byref(pColor), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayRenderModel.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayRenderModel::EndInvoke(ByRef<::OVR::OpenVR::HmdColor_t> pColor, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRenderModel::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRenderModel*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pColor), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayTransformType
#include "OVR/OpenVR/IVROverlay__GetOverlayTransformType.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.VROverlayTransformType
#include "OVR/OpenVR/VROverlayTransformType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTransformType.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformType::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayTransformType> peTransformType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformType::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peTransformType));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTransformType.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTransformType::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayTransformType> peTransformType, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformType::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(peTransformType), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTransformType.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformType::EndInvoke(ByRef<::OVR::OpenVR::VROverlayTransformType> peTransformType, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformType::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(peTransformType), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayTransformAbsolute
#include "OVR/OpenVR/IVROverlay__SetOverlayTransformAbsolute.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTransformAbsolute.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute::Invoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::ETrackingUniverseOrigin eTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eTrackingOrigin, byref(pmatTrackingOriginToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTransformAbsolute.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute::BeginInvoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::ETrackingUniverseOrigin eTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToOverlayTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eTrackingOrigin, byref(pmatTrackingOriginToOverlayTransform), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTransformAbsolute.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute::EndInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToOverlayTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformAbsolute*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pmatTrackingOriginToOverlayTransform), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayTransformAbsolute
#include "OVR/OpenVR/IVROverlay__GetOverlayTransformAbsolute.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTransformAbsolute.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::ETrackingUniverseOrigin> peTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peTrackingOrigin), byref(pmatTrackingOriginToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTransformAbsolute.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::ETrackingUniverseOrigin> peTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToOverlayTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(peTrackingOrigin), byref(pmatTrackingOriginToOverlayTransform), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTransformAbsolute.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute::EndInvoke(ByRef<::OVR::OpenVR::ETrackingUniverseOrigin> peTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToOverlayTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformAbsolute*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(peTrackingOrigin), byref(pmatTrackingOriginToOverlayTransform), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayTransformTrackedDeviceRelative
#include "OVR/OpenVR/IVROverlay__SetOverlayTransformTrackedDeviceRelative.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTransformTrackedDeviceRelative.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative::Invoke(uint64_t ulOverlayHandle, uint unTrackedDevice, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackedDeviceToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unTrackedDevice, byref(pmatTrackedDeviceToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTransformTrackedDeviceRelative.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative::BeginInvoke(uint64_t ulOverlayHandle, uint unTrackedDevice, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackedDeviceToOverlayTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, unTrackedDevice, byref(pmatTrackedDeviceToOverlayTransform), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTransformTrackedDeviceRelative.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative::EndInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackedDeviceToOverlayTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceRelative*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pmatTrackedDeviceToOverlayTransform), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayTransformTrackedDeviceRelative
#include "OVR/OpenVR/IVROverlay__GetOverlayTransformTrackedDeviceRelative.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTransformTrackedDeviceRelative.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative::Invoke(uint64_t ulOverlayHandle, ByRef<uint> punTrackedDevice, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackedDeviceToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punTrackedDevice), byref(pmatTrackedDeviceToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTransformTrackedDeviceRelative.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint> punTrackedDevice, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackedDeviceToOverlayTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(punTrackedDevice), byref(pmatTrackedDeviceToOverlayTransform), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTransformTrackedDeviceRelative.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative::EndInvoke(ByRef<uint> punTrackedDevice, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackedDeviceToOverlayTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceRelative*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(punTrackedDevice), byref(pmatTrackedDeviceToOverlayTransform), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayTransformTrackedDeviceComponent
#include "OVR/OpenVR/IVROverlay__SetOverlayTransformTrackedDeviceComponent.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTransformTrackedDeviceComponent.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::Invoke(uint64_t ulOverlayHandle, uint unDeviceIndex, ::StringW pchComponentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unDeviceIndex, pchComponentName);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTransformTrackedDeviceComponent.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::BeginInvoke(uint64_t ulOverlayHandle, uint unDeviceIndex, ::StringW pchComponentName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, unDeviceIndex, pchComponentName, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTransformTrackedDeviceComponent.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayTransformTrackedDeviceComponent
#include "OVR/OpenVR/IVROverlay__GetOverlayTransformTrackedDeviceComponent.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTransformTrackedDeviceComponent.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::Invoke(uint64_t ulOverlayHandle, ByRef<uint> punDeviceIndex, ::System::Text::StringBuilder* pchComponentName, uint unComponentNameSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punDeviceIndex), pchComponentName, unComponentNameSize);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTransformTrackedDeviceComponent.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint> punDeviceIndex, ::System::Text::StringBuilder* pchComponentName, uint unComponentNameSize, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(punDeviceIndex), pchComponentName, unComponentNameSize, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTransformTrackedDeviceComponent.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::EndInvoke(ByRef<uint> punDeviceIndex, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(punDeviceIndex), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayTransformOverlayRelative
#include "OVR/OpenVR/IVROverlay__GetOverlayTransformOverlayRelative.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTransformOverlayRelative.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative::Invoke(uint64_t ulOverlayHandle, ByRef<uint64_t> ulOverlayHandleParent, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(ulOverlayHandleParent), byref(pmatParentOverlayToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTransformOverlayRelative.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint64_t> ulOverlayHandleParent, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(ulOverlayHandleParent), byref(pmatParentOverlayToOverlayTransform), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTransformOverlayRelative.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative::EndInvoke(ByRef<uint64_t> ulOverlayHandleParent, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTransformOverlayRelative*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(ulOverlayHandleParent), byref(pmatParentOverlayToOverlayTransform), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayTransformOverlayRelative
#include "OVR/OpenVR/IVROverlay__SetOverlayTransformOverlayRelative.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTransformOverlayRelative.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative::Invoke(uint64_t ulOverlayHandle, uint64_t ulOverlayHandleParent, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, ulOverlayHandleParent, byref(pmatParentOverlayToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTransformOverlayRelative.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative::BeginInvoke(uint64_t ulOverlayHandle, uint64_t ulOverlayHandleParent, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, ulOverlayHandleParent, byref(pmatParentOverlayToOverlayTransform), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTransformOverlayRelative.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative::EndInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTransformOverlayRelative*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pmatParentOverlayToOverlayTransform), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_ShowOverlay
#include "OVR/OpenVR/IVROverlay__ShowOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_ShowOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ShowOverlay::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_ShowOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_ShowOverlay::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_ShowOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ShowOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowOverlay*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_HideOverlay
#include "OVR/OpenVR/IVROverlay__HideOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_HideOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_HideOverlay::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_HideOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_HideOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_HideOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_HideOverlay::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_HideOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_HideOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_HideOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_HideOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_HideOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_HideOverlay*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_IsOverlayVisible
#include "OVR/OpenVR/IVROverlay__IsOverlayVisible.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_IsOverlayVisible.Invoke
bool OVR::OpenVR::IVROverlay::_IsOverlayVisible::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsOverlayVisible::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsOverlayVisible*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_IsOverlayVisible.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_IsOverlayVisible::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsOverlayVisible::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsOverlayVisible*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_IsOverlayVisible.EndInvoke
bool OVR::OpenVR::IVROverlay::_IsOverlayVisible::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsOverlayVisible::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsOverlayVisible*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetTransformForOverlayCoordinates
#include "OVR/OpenVR/IVROverlay__GetTransformForOverlayCoordinates.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.HmdVector2_t
#include "OVR/OpenVR/HmdVector2_t.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetTransformForOverlayCoordinates.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates::Invoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::ETrackingUniverseOrigin eTrackingOrigin, ::OVR::OpenVR::HmdVector2_t coordinatesInOverlay, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eTrackingOrigin, coordinatesInOverlay, byref(pmatTransform));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetTransformForOverlayCoordinates.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates::BeginInvoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::ETrackingUniverseOrigin eTrackingOrigin, ::OVR::OpenVR::HmdVector2_t coordinatesInOverlay, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eTrackingOrigin, coordinatesInOverlay, byref(pmatTransform), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetTransformForOverlayCoordinates.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates::EndInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetTransformForOverlayCoordinates*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pmatTransform), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_PollNextOverlayEvent
#include "OVR/OpenVR/IVROverlay__PollNextOverlayEvent.hpp"
// Including type: OVR.OpenVR.VREvent_t
#include "OVR/OpenVR/VREvent_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_PollNextOverlayEvent.Invoke
bool OVR::OpenVR::IVROverlay::_PollNextOverlayEvent::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VREvent_t> pEvent, uint uncbVREvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_PollNextOverlayEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_PollNextOverlayEvent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle, byref(pEvent), uncbVREvent);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_PollNextOverlayEvent.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_PollNextOverlayEvent::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VREvent_t> pEvent, uint uncbVREvent, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_PollNextOverlayEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_PollNextOverlayEvent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pEvent), uncbVREvent, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_PollNextOverlayEvent.EndInvoke
bool OVR::OpenVR::IVROverlay::_PollNextOverlayEvent::EndInvoke(ByRef<::OVR::OpenVR::VREvent_t> pEvent, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_PollNextOverlayEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_PollNextOverlayEvent*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pEvent), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayInputMethod
#include "OVR/OpenVR/IVROverlay__GetOverlayInputMethod.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.VROverlayInputMethod
#include "OVR/OpenVR/VROverlayInputMethod.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayInputMethod.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayInputMethod::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayInputMethod> peInputMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayInputMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayInputMethod*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peInputMethod));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayInputMethod.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayInputMethod::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayInputMethod> peInputMethod, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayInputMethod::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayInputMethod*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(peInputMethod), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayInputMethod.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayInputMethod::EndInvoke(ByRef<::OVR::OpenVR::VROverlayInputMethod> peInputMethod, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayInputMethod::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayInputMethod*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(peInputMethod), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayInputMethod
#include "OVR/OpenVR/IVROverlay__SetOverlayInputMethod.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.VROverlayInputMethod
#include "OVR/OpenVR/VROverlayInputMethod.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayInputMethod.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayInputMethod::Invoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::VROverlayInputMethod eInputMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayInputMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayInputMethod*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eInputMethod);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayInputMethod.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayInputMethod::BeginInvoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::VROverlayInputMethod eInputMethod, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayInputMethod::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayInputMethod*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eInputMethod, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayInputMethod.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayInputMethod::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayInputMethod::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayInputMethod*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayMouseScale
#include "OVR/OpenVR/IVROverlay__GetOverlayMouseScale.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.HmdVector2_t
#include "OVR/OpenVR/HmdVector2_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayMouseScale.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayMouseScale::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::HmdVector2_t> pvecMouseScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayMouseScale::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayMouseScale*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pvecMouseScale));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayMouseScale.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayMouseScale::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::HmdVector2_t> pvecMouseScale, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayMouseScale::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayMouseScale*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pvecMouseScale), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayMouseScale.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayMouseScale::EndInvoke(ByRef<::OVR::OpenVR::HmdVector2_t> pvecMouseScale, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayMouseScale::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayMouseScale*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pvecMouseScale), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayMouseScale
#include "OVR/OpenVR/IVROverlay__SetOverlayMouseScale.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.HmdVector2_t
#include "OVR/OpenVR/HmdVector2_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayMouseScale.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayMouseScale::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::HmdVector2_t> pvecMouseScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayMouseScale::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayMouseScale*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pvecMouseScale));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayMouseScale.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayMouseScale::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::HmdVector2_t> pvecMouseScale, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayMouseScale::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayMouseScale*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pvecMouseScale), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayMouseScale.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayMouseScale::EndInvoke(ByRef<::OVR::OpenVR::HmdVector2_t> pvecMouseScale, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayMouseScale::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayMouseScale*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pvecMouseScale), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_ComputeOverlayIntersection
#include "OVR/OpenVR/IVROverlay__ComputeOverlayIntersection.hpp"
// Including type: OVR.OpenVR.VROverlayIntersectionParams_t
#include "OVR/OpenVR/VROverlayIntersectionParams_t.hpp"
// Including type: OVR.OpenVR.VROverlayIntersectionResults_t
#include "OVR/OpenVR/VROverlayIntersectionResults_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_ComputeOverlayIntersection.Invoke
bool OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayIntersectionParams_t> pParams, ByRef<::OVR::OpenVR::VROverlayIntersectionResults_t> pResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle, byref(pParams), byref(pResults));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_ComputeOverlayIntersection.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayIntersectionParams_t> pParams, ByRef<::OVR::OpenVR::VROverlayIntersectionResults_t> pResults, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pParams), byref(pResults), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_ComputeOverlayIntersection.EndInvoke
bool OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection::EndInvoke(ByRef<::OVR::OpenVR::VROverlayIntersectionParams_t> pParams, ByRef<::OVR::OpenVR::VROverlayIntersectionResults_t> pResults, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ComputeOverlayIntersection*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pParams), byref(pResults), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_IsHoverTargetOverlay
#include "OVR/OpenVR/IVROverlay__IsHoverTargetOverlay.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_IsHoverTargetOverlay.Invoke
bool OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_IsHoverTargetOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_IsHoverTargetOverlay.EndInvoke
bool OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsHoverTargetOverlay*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetGamepadFocusOverlay
#include "OVR/OpenVR/IVROverlay__GetGamepadFocusOverlay.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetGamepadFocusOverlay.Invoke
uint64_t OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetGamepadFocusOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetGamepadFocusOverlay.EndInvoke
uint64_t OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetGamepadFocusOverlay*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetGamepadFocusOverlay
#include "OVR/OpenVR/IVROverlay__SetGamepadFocusOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetGamepadFocusOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay::Invoke(uint64_t ulNewFocusOverlay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulNewFocusOverlay);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetGamepadFocusOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay::BeginInvoke(uint64_t ulNewFocusOverlay, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulNewFocusOverlay, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetGamepadFocusOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetGamepadFocusOverlay*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayNeighbor
#include "OVR/OpenVR/IVROverlay__SetOverlayNeighbor.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.EOverlayDirection
#include "OVR/OpenVR/EOverlayDirection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayNeighbor.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayNeighbor::Invoke(::OVR::OpenVR::EOverlayDirection eDirection, uint64_t ulFrom, uint64_t ulTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayNeighbor::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayNeighbor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, eDirection, ulFrom, ulTo);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayNeighbor.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayNeighbor::BeginInvoke(::OVR::OpenVR::EOverlayDirection eDirection, uint64_t ulFrom, uint64_t ulTo, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayNeighbor::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayNeighbor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eDirection, ulFrom, ulTo, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayNeighbor.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayNeighbor::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayNeighbor::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayNeighbor*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_MoveGamepadFocusToNeighbor
#include "OVR/OpenVR/IVROverlay__MoveGamepadFocusToNeighbor.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.EOverlayDirection
#include "OVR/OpenVR/EOverlayDirection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_MoveGamepadFocusToNeighbor.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor::Invoke(::OVR::OpenVR::EOverlayDirection eDirection, uint64_t ulFrom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, eDirection, ulFrom);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_MoveGamepadFocusToNeighbor.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor::BeginInvoke(::OVR::OpenVR::EOverlayDirection eDirection, uint64_t ulFrom, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eDirection, ulFrom, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_MoveGamepadFocusToNeighbor.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_MoveGamepadFocusToNeighbor*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayDualAnalogTransform
#include "OVR/OpenVR/IVROverlay__SetOverlayDualAnalogTransform.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.EDualAnalogWhich
#include "OVR/OpenVR/EDualAnalogWhich.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayDualAnalogTransform.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform::Invoke(uint64_t ulOverlay, ::OVR::OpenVR::EDualAnalogWhich eWhich, ::System::IntPtr vCenter, float fRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlay, eWhich, vCenter, fRadius);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayDualAnalogTransform.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform::BeginInvoke(uint64_t ulOverlay, ::OVR::OpenVR::EDualAnalogWhich eWhich, ::System::IntPtr vCenter, float fRadius, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlay, eWhich, vCenter, fRadius, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayDualAnalogTransform.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayDualAnalogTransform*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayDualAnalogTransform
#include "OVR/OpenVR/IVROverlay__GetOverlayDualAnalogTransform.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.EDualAnalogWhich
#include "OVR/OpenVR/EDualAnalogWhich.hpp"
// Including type: OVR.OpenVR.HmdVector2_t
#include "OVR/OpenVR/HmdVector2_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayDualAnalogTransform.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform::Invoke(uint64_t ulOverlay, ::OVR::OpenVR::EDualAnalogWhich eWhich, ByRef<::OVR::OpenVR::HmdVector2_t> pvCenter, ByRef<float> pfRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlay, eWhich, byref(pvCenter), byref(pfRadius));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayDualAnalogTransform.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform::BeginInvoke(uint64_t ulOverlay, ::OVR::OpenVR::EDualAnalogWhich eWhich, ByRef<::OVR::OpenVR::HmdVector2_t> pvCenter, ByRef<float> pfRadius, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlay, eWhich, byref(pvCenter), byref(pfRadius), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayDualAnalogTransform.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform::EndInvoke(ByRef<::OVR::OpenVR::HmdVector2_t> pvCenter, ByRef<float> pfRadius, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayDualAnalogTransform*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pvCenter), byref(pfRadius), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayTexture
#include "OVR/OpenVR/IVROverlay__SetOverlayTexture.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.Texture_t
#include "OVR/OpenVR/Texture_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTexture.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTexture::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::Texture_t> pTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTexture::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTexture*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pTexture));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTexture.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayTexture::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::Texture_t> pTexture, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTexture::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTexture*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pTexture), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayTexture.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayTexture::EndInvoke(ByRef<::OVR::OpenVR::Texture_t> pTexture, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayTexture::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayTexture*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pTexture), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_ClearOverlayTexture
#include "OVR/OpenVR/IVROverlay__ClearOverlayTexture.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_ClearOverlayTexture.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ClearOverlayTexture::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ClearOverlayTexture::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ClearOverlayTexture*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_ClearOverlayTexture.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_ClearOverlayTexture::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ClearOverlayTexture::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ClearOverlayTexture*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_ClearOverlayTexture.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ClearOverlayTexture::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ClearOverlayTexture::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ClearOverlayTexture*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayRaw
#include "OVR/OpenVR/IVROverlay__SetOverlayRaw.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayRaw.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayRaw::Invoke(uint64_t ulOverlayHandle, ::System::IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRaw::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRaw*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pvBuffer, unWidth, unHeight, unDepth);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayRaw.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayRaw::BeginInvoke(uint64_t ulOverlayHandle, ::System::IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRaw::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRaw*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pvBuffer, unWidth, unHeight, unDepth, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayRaw.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayRaw::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayRaw::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayRaw*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayFromFile
#include "OVR/OpenVR/IVROverlay__SetOverlayFromFile.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayFromFile.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayFromFile::Invoke(uint64_t ulOverlayHandle, ::StringW pchFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayFromFile::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayFromFile*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pchFilePath);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayFromFile.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayFromFile::BeginInvoke(uint64_t ulOverlayHandle, ::StringW pchFilePath, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayFromFile::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayFromFile*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pchFilePath, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayFromFile.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayFromFile::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayFromFile::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayFromFile*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayTexture
#include "OVR/OpenVR/IVROverlay__GetOverlayTexture.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.ETextureType
#include "OVR/OpenVR/ETextureType.hpp"
// Including type: OVR.OpenVR.EColorSpace
#include "OVR/OpenVR/EColorSpace.hpp"
// Including type: OVR.OpenVR.VRTextureBounds_t
#include "OVR/OpenVR/VRTextureBounds_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTexture.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTexture::Invoke(uint64_t ulOverlayHandle, ByRef<::System::IntPtr> pNativeTextureHandle, ::System::IntPtr pNativeTextureRef, ByRef<uint> pWidth, ByRef<uint> pHeight, ByRef<uint> pNativeFormat, ByRef<::OVR::OpenVR::ETextureType> pAPIType, ByRef<::OVR::OpenVR::EColorSpace> pColorSpace, ByRef<::OVR::OpenVR::VRTextureBounds_t> pTextureBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTexture::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTexture*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pNativeTextureHandle), pNativeTextureRef, byref(pWidth), byref(pHeight), byref(pNativeFormat), byref(pAPIType), byref(pColorSpace), byref(pTextureBounds));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTexture.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTexture::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::System::IntPtr> pNativeTextureHandle, ::System::IntPtr pNativeTextureRef, ByRef<uint> pWidth, ByRef<uint> pHeight, ByRef<uint> pNativeFormat, ByRef<::OVR::OpenVR::ETextureType> pAPIType, ByRef<::OVR::OpenVR::EColorSpace> pColorSpace, ByRef<::OVR::OpenVR::VRTextureBounds_t> pTextureBounds, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTexture::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTexture*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pNativeTextureHandle), pNativeTextureRef, byref(pWidth), byref(pHeight), byref(pNativeFormat), byref(pAPIType), byref(pColorSpace), byref(pTextureBounds), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTexture.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTexture::EndInvoke(ByRef<::System::IntPtr> pNativeTextureHandle, ByRef<uint> pWidth, ByRef<uint> pHeight, ByRef<uint> pNativeFormat, ByRef<::OVR::OpenVR::ETextureType> pAPIType, ByRef<::OVR::OpenVR::EColorSpace> pColorSpace, ByRef<::OVR::OpenVR::VRTextureBounds_t> pTextureBounds, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTexture::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTexture*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pNativeTextureHandle), byref(pWidth), byref(pHeight), byref(pNativeFormat), byref(pAPIType), byref(pColorSpace), byref(pTextureBounds), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_ReleaseNativeOverlayHandle
#include "OVR/OpenVR/IVROverlay__ReleaseNativeOverlayHandle.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_ReleaseNativeOverlayHandle.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle::Invoke(uint64_t ulOverlayHandle, ::System::IntPtr pNativeTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pNativeTextureHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_ReleaseNativeOverlayHandle.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle::BeginInvoke(uint64_t ulOverlayHandle, ::System::IntPtr pNativeTextureHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pNativeTextureHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_ReleaseNativeOverlayHandle.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ReleaseNativeOverlayHandle*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayTextureSize
#include "OVR/OpenVR/IVROverlay__GetOverlayTextureSize.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTextureSize.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTextureSize::Invoke(uint64_t ulOverlayHandle, ByRef<uint> pWidth, ByRef<uint> pHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureSize::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureSize*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pWidth), byref(pHeight));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTextureSize.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayTextureSize::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint> pWidth, ByRef<uint> pHeight, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureSize::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureSize*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pWidth), byref(pHeight), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayTextureSize.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayTextureSize::EndInvoke(ByRef<uint> pWidth, ByRef<uint> pHeight, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayTextureSize::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayTextureSize*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pWidth), byref(pHeight), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_CreateDashboardOverlay
#include "OVR/OpenVR/IVROverlay__CreateDashboardOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_CreateDashboardOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_CreateDashboardOverlay::Invoke(::StringW pchOverlayKey, ::StringW pchOverlayFriendlyName, ByRef<uint64_t> pMainHandle, ByRef<uint64_t> pThumbnailHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CreateDashboardOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CreateDashboardOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, pchOverlayKey, pchOverlayFriendlyName, byref(pMainHandle), byref(pThumbnailHandle));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_CreateDashboardOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_CreateDashboardOverlay::BeginInvoke(::StringW pchOverlayKey, ::StringW pchOverlayFriendlyName, ByRef<uint64_t> pMainHandle, ByRef<uint64_t> pThumbnailHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CreateDashboardOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CreateDashboardOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchOverlayKey, pchOverlayFriendlyName, byref(pMainHandle), byref(pThumbnailHandle), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_CreateDashboardOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_CreateDashboardOverlay::EndInvoke(ByRef<uint64_t> pMainHandle, ByRef<uint64_t> pThumbnailHandle, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CreateDashboardOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CreateDashboardOverlay*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pMainHandle), byref(pThumbnailHandle), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_IsDashboardVisible
#include "OVR/OpenVR/IVROverlay__IsDashboardVisible.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_IsDashboardVisible.Invoke
bool OVR::OpenVR::IVROverlay::_IsDashboardVisible::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsDashboardVisible::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsDashboardVisible*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_IsDashboardVisible.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_IsDashboardVisible::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsDashboardVisible::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsDashboardVisible*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_IsDashboardVisible.EndInvoke
bool OVR::OpenVR::IVROverlay::_IsDashboardVisible::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsDashboardVisible::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsDashboardVisible*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_IsActiveDashboardOverlay
#include "OVR/OpenVR/IVROverlay__IsActiveDashboardOverlay.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_IsActiveDashboardOverlay.Invoke
bool OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_IsActiveDashboardOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay::BeginInvoke(uint64_t ulOverlayHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_IsActiveDashboardOverlay.EndInvoke
bool OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_IsActiveDashboardOverlay*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetDashboardOverlaySceneProcess
#include "OVR/OpenVR/IVROverlay__SetDashboardOverlaySceneProcess.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetDashboardOverlaySceneProcess.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess::Invoke(uint64_t ulOverlayHandle, uint unProcessId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unProcessId);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetDashboardOverlaySceneProcess.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess::BeginInvoke(uint64_t ulOverlayHandle, uint unProcessId, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, unProcessId, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetDashboardOverlaySceneProcess.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetDashboardOverlaySceneProcess*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetDashboardOverlaySceneProcess
#include "OVR/OpenVR/IVROverlay__GetDashboardOverlaySceneProcess.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetDashboardOverlaySceneProcess.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess::Invoke(uint64_t ulOverlayHandle, ByRef<uint> punProcessId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punProcessId));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetDashboardOverlaySceneProcess.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint> punProcessId, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(punProcessId), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetDashboardOverlaySceneProcess.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess::EndInvoke(ByRef<uint> punProcessId, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetDashboardOverlaySceneProcess*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(punProcessId), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_ShowDashboard
#include "OVR/OpenVR/IVROverlay__ShowDashboard.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_ShowDashboard.Invoke
void OVR::OpenVR::IVROverlay::_ShowDashboard::Invoke(::StringW pchOverlayToShow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowDashboard::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowDashboard*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchOverlayToShow);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_ShowDashboard.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_ShowDashboard::BeginInvoke(::StringW pchOverlayToShow, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowDashboard::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowDashboard*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchOverlayToShow, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_ShowDashboard.EndInvoke
void OVR::OpenVR::IVROverlay::_ShowDashboard::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowDashboard::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowDashboard*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetPrimaryDashboardDevice
#include "OVR/OpenVR/IVROverlay__GetPrimaryDashboardDevice.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetPrimaryDashboardDevice.Invoke
uint OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetPrimaryDashboardDevice.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetPrimaryDashboardDevice.EndInvoke
uint OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetPrimaryDashboardDevice*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_ShowKeyboard
#include "OVR/OpenVR/IVROverlay__ShowKeyboard.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_ShowKeyboard.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ShowKeyboard::Invoke(int eInputMode, int eLineInputMode, ::StringW pchDescription, uint unCharMax, ::StringW pchExistingText, bool bUseMinimalMode, uint64_t uUserValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowKeyboard::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowKeyboard*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_ShowKeyboard.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_ShowKeyboard::BeginInvoke(int eInputMode, int eLineInputMode, ::StringW pchDescription, uint unCharMax, ::StringW pchExistingText, bool bUseMinimalMode, uint64_t uUserValue, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowKeyboard::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowKeyboard*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_ShowKeyboard.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ShowKeyboard::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowKeyboard::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowKeyboard*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_ShowKeyboardForOverlay
#include "OVR/OpenVR/IVROverlay__ShowKeyboardForOverlay.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_ShowKeyboardForOverlay.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay::Invoke(uint64_t ulOverlayHandle, int eInputMode, int eLineInputMode, ::StringW pchDescription, uint unCharMax, ::StringW pchExistingText, bool bUseMinimalMode, uint64_t uUserValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_ShowKeyboardForOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay::BeginInvoke(uint64_t ulOverlayHandle, int eInputMode, int eLineInputMode, ::StringW pchDescription, uint unCharMax, ::StringW pchExistingText, bool bUseMinimalMode, uint64_t uUserValue, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_ShowKeyboardForOverlay.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowKeyboardForOverlay*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetKeyboardText
#include "OVR/OpenVR/IVROverlay__GetKeyboardText.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetKeyboardText.Invoke
uint OVR::OpenVR::IVROverlay::_GetKeyboardText::Invoke(::System::Text::StringBuilder* pchText, uint cchText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetKeyboardText::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetKeyboardText*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchText, cchText);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetKeyboardText.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetKeyboardText::BeginInvoke(::System::Text::StringBuilder* pchText, uint cchText, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetKeyboardText::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetKeyboardText*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchText, cchText, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetKeyboardText.EndInvoke
uint OVR::OpenVR::IVROverlay::_GetKeyboardText::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetKeyboardText::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetKeyboardText*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_HideKeyboard
#include "OVR/OpenVR/IVROverlay__HideKeyboard.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_HideKeyboard.Invoke
void OVR::OpenVR::IVROverlay::_HideKeyboard::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_HideKeyboard::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_HideKeyboard*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_HideKeyboard.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_HideKeyboard::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_HideKeyboard::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_HideKeyboard*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_HideKeyboard.EndInvoke
void OVR::OpenVR::IVROverlay::_HideKeyboard::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_HideKeyboard::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_HideKeyboard*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetKeyboardTransformAbsolute
#include "OVR/OpenVR/IVROverlay__SetKeyboardTransformAbsolute.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetKeyboardTransformAbsolute.Invoke
void OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute::Invoke(::OVR::OpenVR::ETrackingUniverseOrigin eTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToKeyboardTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eTrackingOrigin, byref(pmatTrackingOriginToKeyboardTransform));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetKeyboardTransformAbsolute.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute::BeginInvoke(::OVR::OpenVR::ETrackingUniverseOrigin eTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToKeyboardTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eTrackingOrigin, byref(pmatTrackingOriginToKeyboardTransform), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetKeyboardTransformAbsolute.EndInvoke
void OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute::EndInvoke(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToKeyboardTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetKeyboardTransformAbsolute*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pmatTrackingOriginToKeyboardTransform), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetKeyboardPositionForOverlay
#include "OVR/OpenVR/IVROverlay__SetKeyboardPositionForOverlay.hpp"
// Including type: OVR.OpenVR.HmdRect2_t
#include "OVR/OpenVR/HmdRect2_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetKeyboardPositionForOverlay.Invoke
void OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay::Invoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::HmdRect2_t avoidRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ulOverlayHandle, avoidRect);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetKeyboardPositionForOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay::BeginInvoke(uint64_t ulOverlayHandle, ::OVR::OpenVR::HmdRect2_t avoidRect, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, avoidRect, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetKeyboardPositionForOverlay.EndInvoke
void OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetKeyboardPositionForOverlay*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_SetOverlayIntersectionMask
#include "OVR/OpenVR/IVROverlay__SetOverlayIntersectionMask.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: OVR.OpenVR.VROverlayIntersectionMaskPrimitive_t
#include "OVR/OpenVR/VROverlayIntersectionMaskPrimitive_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayIntersectionMask.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayIntersectionMaskPrimitive_t> pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pMaskPrimitives), unNumMaskPrimitives, unPrimitiveSize);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayIntersectionMask.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayIntersectionMaskPrimitive_t> pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pMaskPrimitives), unNumMaskPrimitives, unPrimitiveSize, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_SetOverlayIntersectionMask.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask::EndInvoke(ByRef<::OVR::OpenVR::VROverlayIntersectionMaskPrimitive_t> pMaskPrimitives, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_SetOverlayIntersectionMask*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pMaskPrimitives), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_GetOverlayFlags
#include "OVR/OpenVR/IVROverlay__GetOverlayFlags.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayFlags.Invoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayFlags::Invoke(uint64_t ulOverlayHandle, ByRef<uint> pFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayFlags::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayFlags*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pFlags));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayFlags.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_GetOverlayFlags::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint> pFlags, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayFlags::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayFlags*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pFlags), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_GetOverlayFlags.EndInvoke
::OVR::OpenVR::EVROverlayError OVR::OpenVR::IVROverlay::_GetOverlayFlags::EndInvoke(ByRef<uint> pFlags, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_GetOverlayFlags::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_GetOverlayFlags*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, byref(pFlags), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_ShowMessageOverlay
#include "OVR/OpenVR/IVROverlay__ShowMessageOverlay.hpp"
// Including type: OVR.OpenVR.VRMessageOverlayResponse
#include "OVR/OpenVR/VRMessageOverlayResponse.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_ShowMessageOverlay.Invoke
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::IVROverlay::_ShowMessageOverlay::Invoke(::StringW pchText, ::StringW pchCaption, ::StringW pchButton0Text, ::StringW pchButton1Text, ::StringW pchButton2Text, ::StringW pchButton3Text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowMessageOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowMessageOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::VRMessageOverlayResponse, false>(this, ___internal__method, pchText, pchCaption, pchButton0Text, pchButton1Text, pchButton2Text, pchButton3Text);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_ShowMessageOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_ShowMessageOverlay::BeginInvoke(::StringW pchText, ::StringW pchCaption, ::StringW pchButton0Text, ::StringW pchButton1Text, ::StringW pchButton2Text, ::StringW pchButton3Text, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowMessageOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowMessageOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchText, pchCaption, pchButton0Text, pchButton1Text, pchButton2Text, pchButton3Text, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_ShowMessageOverlay.EndInvoke
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::IVROverlay::_ShowMessageOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_ShowMessageOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_ShowMessageOverlay*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::VRMessageOverlayResponse, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_CloseMessageOverlay
#include "OVR/OpenVR/IVROverlay__CloseMessageOverlay.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_CloseMessageOverlay.Invoke
void OVR::OpenVR::IVROverlay::_CloseMessageOverlay::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CloseMessageOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CloseMessageOverlay*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_CloseMessageOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_CloseMessageOverlay::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CloseMessageOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CloseMessageOverlay*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_CloseMessageOverlay.EndInvoke
void OVR::OpenVR::IVROverlay::_CloseMessageOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CloseMessageOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CloseMessageOverlay*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/_LoadRenderModel_Async
#include "OVR/OpenVR/IVRRenderModels__LoadRenderModel_Async.hpp"
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_LoadRenderModel_Async.Invoke
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async::Invoke(::StringW pchRenderModelName, ByRef<::System::IntPtr> ppRenderModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, pchRenderModelName, byref(ppRenderModel));
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_LoadRenderModel_Async.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async::BeginInvoke(::StringW pchRenderModelName, ByRef<::System::IntPtr> ppRenderModel, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, byref(ppRenderModel), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_LoadRenderModel_Async.EndInvoke
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async::EndInvoke(ByRef<::System::IntPtr> ppRenderModel, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, byref(ppRenderModel), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/_FreeRenderModel
#include "OVR/OpenVR/IVRRenderModels__FreeRenderModel.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_FreeRenderModel.Invoke
void OVR::OpenVR::IVRRenderModels::_FreeRenderModel::Invoke(::System::IntPtr pRenderModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeRenderModel::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeRenderModel*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pRenderModel);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_FreeRenderModel.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_FreeRenderModel::BeginInvoke(::System::IntPtr pRenderModel, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeRenderModel::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeRenderModel*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pRenderModel, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_FreeRenderModel.EndInvoke
void OVR::OpenVR::IVRRenderModels::_FreeRenderModel::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeRenderModel::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeRenderModel*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/_LoadTexture_Async
#include "OVR/OpenVR/IVRRenderModels__LoadTexture_Async.hpp"
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_LoadTexture_Async.Invoke
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::IVRRenderModels::_LoadTexture_Async::Invoke(int textureId, ByRef<::System::IntPtr> ppTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadTexture_Async::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadTexture_Async*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, textureId, byref(ppTexture));
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_LoadTexture_Async.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_LoadTexture_Async::BeginInvoke(int textureId, ByRef<::System::IntPtr> ppTexture, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadTexture_Async::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadTexture_Async*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, textureId, byref(ppTexture), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_LoadTexture_Async.EndInvoke
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::IVRRenderModels::_LoadTexture_Async::EndInvoke(ByRef<::System::IntPtr> ppTexture, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadTexture_Async::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadTexture_Async*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, byref(ppTexture), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/_FreeTexture
#include "OVR/OpenVR/IVRRenderModels__FreeTexture.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_FreeTexture.Invoke
void OVR::OpenVR::IVRRenderModels::_FreeTexture::Invoke(::System::IntPtr pTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeTexture::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeTexture*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pTexture);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_FreeTexture.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_FreeTexture::BeginInvoke(::System::IntPtr pTexture, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeTexture::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeTexture*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pTexture, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_FreeTexture.EndInvoke
void OVR::OpenVR::IVRRenderModels::_FreeTexture::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeTexture::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeTexture*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/_LoadTextureD3D11_Async
#include "OVR/OpenVR/IVRRenderModels__LoadTextureD3D11_Async.hpp"
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_LoadTextureD3D11_Async.Invoke
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async::Invoke(int textureId, ::System::IntPtr pD3D11Device, ByRef<::System::IntPtr> ppD3D11Texture2D) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, textureId, pD3D11Device, byref(ppD3D11Texture2D));
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_LoadTextureD3D11_Async.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async::BeginInvoke(int textureId, ::System::IntPtr pD3D11Device, ByRef<::System::IntPtr> ppD3D11Texture2D, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, textureId, pD3D11Device, byref(ppD3D11Texture2D), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_LoadTextureD3D11_Async.EndInvoke
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async::EndInvoke(ByRef<::System::IntPtr> ppD3D11Texture2D, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, byref(ppD3D11Texture2D), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/_LoadIntoTextureD3D11_Async
#include "OVR/OpenVR/IVRRenderModels__LoadIntoTextureD3D11_Async.hpp"
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_LoadIntoTextureD3D11_Async.Invoke
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async::Invoke(int textureId, ::System::IntPtr pDstTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, textureId, pDstTexture);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_LoadIntoTextureD3D11_Async.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async::BeginInvoke(int textureId, ::System::IntPtr pDstTexture, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, textureId, pDstTexture, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_LoadIntoTextureD3D11_Async.EndInvoke
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/_FreeTextureD3D11
#include "OVR/OpenVR/IVRRenderModels__FreeTextureD3D11.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_FreeTextureD3D11.Invoke
void OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11::Invoke(::System::IntPtr pD3D11Texture2D) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pD3D11Texture2D);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_FreeTextureD3D11.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11::BeginInvoke(::System::IntPtr pD3D11Texture2D, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pD3D11Texture2D, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_FreeTextureD3D11.EndInvoke
void OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/_GetRenderModelName
#include "OVR/OpenVR/IVRRenderModels__GetRenderModelName.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetRenderModelName.Invoke
uint OVR::OpenVR::IVRRenderModels::_GetRenderModelName::Invoke(uint unRenderModelIndex, ::System::Text::StringBuilder* pchRenderModelName, uint unRenderModelNameLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelName::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelName*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unRenderModelIndex, pchRenderModelName, unRenderModelNameLen);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetRenderModelName.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetRenderModelName::BeginInvoke(uint unRenderModelIndex, ::System::Text::StringBuilder* pchRenderModelName, uint unRenderModelNameLen, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelName::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelName*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unRenderModelIndex, pchRenderModelName, unRenderModelNameLen, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetRenderModelName.EndInvoke
uint OVR::OpenVR::IVRRenderModels::_GetRenderModelName::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelName::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelName*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/_GetRenderModelCount
#include "OVR/OpenVR/IVRRenderModels__GetRenderModelCount.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetRenderModelCount.Invoke
uint OVR::OpenVR::IVRRenderModels::_GetRenderModelCount::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelCount::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelCount*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetRenderModelCount.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetRenderModelCount::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelCount::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelCount*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetRenderModelCount.EndInvoke
uint OVR::OpenVR::IVRRenderModels::_GetRenderModelCount::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelCount::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelCount*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/_GetComponentCount
#include "OVR/OpenVR/IVRRenderModels__GetComponentCount.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentCount.Invoke
uint OVR::OpenVR::IVRRenderModels::_GetComponentCount::Invoke(::StringW pchRenderModelName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentCount::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentCount*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentCount.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetComponentCount::BeginInvoke(::StringW pchRenderModelName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentCount::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentCount*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentCount.EndInvoke
uint OVR::OpenVR::IVRRenderModels::_GetComponentCount::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentCount::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentCount*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/_GetComponentName
#include "OVR/OpenVR/IVRRenderModels__GetComponentName.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentName.Invoke
uint OVR::OpenVR::IVRRenderModels::_GetComponentName::Invoke(::StringW pchRenderModelName, uint unComponentIndex, ::System::Text::StringBuilder* pchComponentName, uint unComponentNameLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentName::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentName*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, unComponentIndex, pchComponentName, unComponentNameLen);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentName.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetComponentName::BeginInvoke(::StringW pchRenderModelName, uint unComponentIndex, ::System::Text::StringBuilder* pchComponentName, uint unComponentNameLen, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentName::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentName*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, unComponentIndex, pchComponentName, unComponentNameLen, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentName.EndInvoke
uint OVR::OpenVR::IVRRenderModels::_GetComponentName::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentName::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentName*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/_GetComponentButtonMask
#include "OVR/OpenVR/IVRRenderModels__GetComponentButtonMask.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentButtonMask.Invoke
uint64_t OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask::Invoke(::StringW pchRenderModelName, ::StringW pchComponentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, pchRenderModelName, pchComponentName);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentButtonMask.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask::BeginInvoke(::StringW pchRenderModelName, ::StringW pchComponentName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchComponentName, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentButtonMask.EndInvoke
uint64_t OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/_GetComponentRenderModelName
#include "OVR/OpenVR/IVRRenderModels__GetComponentRenderModelName.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentRenderModelName.Invoke
uint OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName::Invoke(::StringW pchRenderModelName, ::StringW pchComponentName, ::System::Text::StringBuilder* pchComponentRenderModelName, uint unComponentRenderModelNameLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName*), 13));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, pchComponentName, pchComponentRenderModelName, unComponentRenderModelNameLen);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentRenderModelName.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName::BeginInvoke(::StringW pchRenderModelName, ::StringW pchComponentName, ::System::Text::StringBuilder* pchComponentRenderModelName, uint unComponentRenderModelNameLen, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchComponentName, pchComponentRenderModelName, unComponentRenderModelNameLen, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentRenderModelName.EndInvoke
uint OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName*), 15));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/_GetComponentStateForDevicePath
#include "OVR/OpenVR/IVRRenderModels__GetComponentStateForDevicePath.hpp"
// Including type: OVR.OpenVR.RenderModel_ControllerMode_State_t
#include "OVR/OpenVR/RenderModel_ControllerMode_State_t.hpp"
// Including type: OVR.OpenVR.RenderModel_ComponentState_t
#include "OVR/OpenVR/RenderModel_ComponentState_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentStateForDevicePath.Invoke
bool OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath::Invoke(::StringW pchRenderModelName, ::StringW pchComponentName, uint64_t devicePath, ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchRenderModelName, pchComponentName, devicePath, byref(pState), byref(pComponentState));
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentStateForDevicePath.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath::BeginInvoke(::StringW pchRenderModelName, ::StringW pchComponentName, uint64_t devicePath, ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchComponentName, devicePath, byref(pState), byref(pComponentState), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentStateForDevicePath.EndInvoke
bool OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath::EndInvoke(ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pState), byref(pComponentState), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/_GetComponentState
#include "OVR/OpenVR/IVRRenderModels__GetComponentState.hpp"
// Including type: OVR.OpenVR.VRControllerState_t
#include "OVR/OpenVR/VRControllerState_t.hpp"
// Including type: OVR.OpenVR.RenderModel_ControllerMode_State_t
#include "OVR/OpenVR/RenderModel_ControllerMode_State_t.hpp"
// Including type: OVR.OpenVR.RenderModel_ComponentState_t
#include "OVR/OpenVR/RenderModel_ComponentState_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentState.Invoke
bool OVR::OpenVR::IVRRenderModels::_GetComponentState::Invoke(::StringW pchRenderModelName, ::StringW pchComponentName, ByRef<::OVR::OpenVR::VRControllerState_t> pControllerState, ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentState::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentState*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchRenderModelName, pchComponentName, byref(pControllerState), byref(pState), byref(pComponentState));
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentState.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetComponentState::BeginInvoke(::StringW pchRenderModelName, ::StringW pchComponentName, ByRef<::OVR::OpenVR::VRControllerState_t> pControllerState, ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentState::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentState*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchComponentName, byref(pControllerState), byref(pState), byref(pComponentState), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_GetComponentState.EndInvoke
bool OVR::OpenVR::IVRRenderModels::_GetComponentState::EndInvoke(ByRef<::OVR::OpenVR::VRControllerState_t> pControllerState, ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentState::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentState*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pControllerState), byref(pState), byref(pComponentState), result);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/_RenderModelHasComponent
#include "OVR/OpenVR/IVRRenderModels__RenderModelHasComponent.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_RenderModelHasComponent.Invoke
bool OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent::Invoke(::StringW pchRenderModelName, ::StringW pchComponentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchRenderModelName, pchComponentName);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_RenderModelHasComponent.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent::BeginInvoke(::StringW pchRenderModelName, ::StringW pchComponentName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchComponentName, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/_RenderModelHasComponent.EndInvoke
bool OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
