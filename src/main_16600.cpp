// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Android.AndroidAssetPacks/AssetPackManagerDownloadStatusCallback
#include "UnityEngine/Android/AndroidAssetPacks_AssetPackManagerDownloadStatusCallback.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Android.AndroidAssetPackInfo
#include "UnityEngine/Android/AndroidAssetPackInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Android.AndroidAssetPackInfo> m_Callback
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Android::AndroidAssetPackInfo*>*& UnityEngine::Android::AndroidAssetPacks::AssetPackManagerDownloadStatusCallback::dyn_m_Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::AndroidAssetPacks::AssetPackManagerDownloadStatusCallback::dyn_m_Callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Callback"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Android::AndroidAssetPackInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] m_AssetPacks
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& UnityEngine::Android::AndroidAssetPacks::AssetPackManagerDownloadStatusCallback::dyn_m_AssetPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::AndroidAssetPacks::AssetPackManagerDownloadStatusCallback::dyn_m_AssetPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AssetPacks"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Android.AndroidAssetPacks/AssetPackManagerDownloadStatusCallback.onStatusUpdate
void UnityEngine::Android::AndroidAssetPacks::AssetPackManagerDownloadStatusCallback::onStatusUpdate(::StringW assetPackName, int assetPackStatus, int64_t assetPackSize, int64_t assetPackBytesDownloaded, int assetPackTransferProgress, int assetPackErrorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::AndroidAssetPacks::AssetPackManagerDownloadStatusCallback::onStatusUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStatusUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPackName), ::il2cpp_utils::ExtractType(assetPackStatus), ::il2cpp_utils::ExtractType(assetPackSize), ::il2cpp_utils::ExtractType(assetPackBytesDownloaded), ::il2cpp_utils::ExtractType(assetPackTransferProgress), ::il2cpp_utils::ExtractType(assetPackErrorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, assetPackName, assetPackStatus, assetPackSize, assetPackBytesDownloaded, assetPackTransferProgress, assetPackErrorCode);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Android.AndroidAssetPacks/AssetPackManagerMobileDataConfirmationCallback
#include "UnityEngine/Android/AndroidAssetPacks_AssetPackManagerMobileDataConfirmationCallback.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Android.AndroidAssetPackUseMobileDataRequestResult
#include "UnityEngine/Android/AndroidAssetPackUseMobileDataRequestResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Android.AndroidAssetPackUseMobileDataRequestResult> m_Callback
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Android::AndroidAssetPackUseMobileDataRequestResult*>*& UnityEngine::Android::AndroidAssetPacks::AssetPackManagerMobileDataConfirmationCallback::dyn_m_Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::AndroidAssetPacks::AssetPackManagerMobileDataConfirmationCallback::dyn_m_Callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Callback"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Android::AndroidAssetPackUseMobileDataRequestResult*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Android.AndroidAssetPacks/AssetPackManagerMobileDataConfirmationCallback.onMobileDataConfirmationResult
void UnityEngine::Android::AndroidAssetPacks::AssetPackManagerMobileDataConfirmationCallback::onMobileDataConfirmationResult(bool allowed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::AndroidAssetPacks::AssetPackManagerMobileDataConfirmationCallback::onMobileDataConfirmationResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onMobileDataConfirmationResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allowed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, allowed);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Android.AndroidAssetPacks/AssetPackManagerStatusQueryCallback
#include "UnityEngine/Android/AndroidAssetPacks_AssetPackManagerStatusQueryCallback.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: UnityEngine.Android.AndroidAssetPackState
#include "UnityEngine/Android/AndroidAssetPackState.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.UInt64,UnityEngine.Android.AndroidAssetPackState[]> m_Callback
[[deprecated("Use field access instead!")]] ::System::Action_2<uint64_t, ::ArrayW<::UnityEngine::Android::AndroidAssetPackState*>>*& UnityEngine::Android::AndroidAssetPacks::AssetPackManagerStatusQueryCallback::dyn_m_Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::AndroidAssetPacks::AssetPackManagerStatusQueryCallback::dyn_m_Callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Callback"))->offset;
  return *reinterpret_cast<::System::Action_2<uint64_t, ::ArrayW<::UnityEngine::Android::AndroidAssetPackState*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> m_AssetPackNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& UnityEngine::Android::AndroidAssetPacks::AssetPackManagerStatusQueryCallback::dyn_m_AssetPackNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::AndroidAssetPacks::AssetPackManagerStatusQueryCallback::dyn_m_AssetPackNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AssetPackNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Android.AndroidAssetPackState> m_States
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Android::AndroidAssetPackState*>*& UnityEngine::Android::AndroidAssetPacks::AssetPackManagerStatusQueryCallback::dyn_m_States() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::AndroidAssetPacks::AssetPackManagerStatusQueryCallback::dyn_m_States");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_States"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Android::AndroidAssetPackState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_Size
[[deprecated("Use field access instead!")]] int64_t& UnityEngine::Android::AndroidAssetPacks::AssetPackManagerStatusQueryCallback::dyn_m_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::AndroidAssetPacks::AssetPackManagerStatusQueryCallback::dyn_m_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Size"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Android.AndroidAssetPacks/AssetPackManagerStatusQueryCallback.onStatusResult
void UnityEngine::Android::AndroidAssetPacks::AssetPackManagerStatusQueryCallback::onStatusResult(int64_t totalBytes, ::ArrayW<::StringW> assetPackNames, ::ArrayW<int> assetPackStatuses, ::ArrayW<int> assetPackErrorCodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::AndroidAssetPacks::AssetPackManagerStatusQueryCallback::onStatusResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStatusResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalBytes), ::il2cpp_utils::ExtractType(assetPackNames), ::il2cpp_utils::ExtractType(assetPackStatuses), ::il2cpp_utils::ExtractType(assetPackErrorCodes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, totalBytes, assetPackNames, assetPackStatuses, assetPackErrorCodes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Android.Common
#include "UnityEngine/Android/Common.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.AndroidJavaObject m_Activity
::UnityEngine::AndroidJavaObject* UnityEngine::Android::Common::_get_m_Activity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::Common::_get_m_Activity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AndroidJavaObject*>("UnityEngine.Android", "Common", "m_Activity"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AndroidJavaObject m_Activity
void UnityEngine::Android::Common::_set_m_Activity(::UnityEngine::AndroidJavaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::Common::_set_m_Activity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Android", "Common", "m_Activity", value));
}
// Autogenerated method: UnityEngine.Android.Common.GetActivity
::UnityEngine::AndroidJavaObject* UnityEngine::Android::Common::GetActivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::Common::GetActivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Android", "Common", "GetActivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Android.PermissionCallbacks
#include "UnityEngine/Android/PermissionCallbacks.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> PermissionGranted
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& UnityEngine::Android::PermissionCallbacks::dyn_PermissionGranted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::PermissionCallbacks::dyn_PermissionGranted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PermissionGranted"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> PermissionDenied
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& UnityEngine::Android::PermissionCallbacks::dyn_PermissionDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::PermissionCallbacks::dyn_PermissionDenied");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PermissionDenied"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> PermissionDeniedAndDontAskAgain
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& UnityEngine::Android::PermissionCallbacks::dyn_PermissionDeniedAndDontAskAgain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::PermissionCallbacks::dyn_PermissionDeniedAndDontAskAgain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PermissionDeniedAndDontAskAgain"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Android.PermissionCallbacks.add_PermissionGranted
void UnityEngine::Android::PermissionCallbacks::add_PermissionGranted(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::PermissionCallbacks::add_PermissionGranted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PermissionGranted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Android.PermissionCallbacks.remove_PermissionGranted
void UnityEngine::Android::PermissionCallbacks::remove_PermissionGranted(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::PermissionCallbacks::remove_PermissionGranted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PermissionGranted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Android.PermissionCallbacks.add_PermissionDenied
void UnityEngine::Android::PermissionCallbacks::add_PermissionDenied(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::PermissionCallbacks::add_PermissionDenied");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PermissionDenied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Android.PermissionCallbacks.remove_PermissionDenied
void UnityEngine::Android::PermissionCallbacks::remove_PermissionDenied(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::PermissionCallbacks::remove_PermissionDenied");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PermissionDenied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Android.PermissionCallbacks.add_PermissionDeniedAndDontAskAgain
void UnityEngine::Android::PermissionCallbacks::add_PermissionDeniedAndDontAskAgain(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::PermissionCallbacks::add_PermissionDeniedAndDontAskAgain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PermissionDeniedAndDontAskAgain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Android.PermissionCallbacks.remove_PermissionDeniedAndDontAskAgain
void UnityEngine::Android::PermissionCallbacks::remove_PermissionDeniedAndDontAskAgain(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::PermissionCallbacks::remove_PermissionDeniedAndDontAskAgain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PermissionDeniedAndDontAskAgain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Android.PermissionCallbacks.onPermissionGranted
void UnityEngine::Android::PermissionCallbacks::onPermissionGranted(::StringW permissionName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::PermissionCallbacks::onPermissionGranted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onPermissionGranted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permissionName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, permissionName);
}
// Autogenerated method: UnityEngine.Android.PermissionCallbacks.onPermissionDenied
void UnityEngine::Android::PermissionCallbacks::onPermissionDenied(::StringW permissionName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::PermissionCallbacks::onPermissionDenied");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onPermissionDenied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permissionName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, permissionName);
}
// Autogenerated method: UnityEngine.Android.PermissionCallbacks.onPermissionDeniedAndDontAskAgain
void UnityEngine::Android::PermissionCallbacks::onPermissionDeniedAndDontAskAgain(::StringW permissionName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::PermissionCallbacks::onPermissionDeniedAndDontAskAgain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onPermissionDeniedAndDontAskAgain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permissionName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, permissionName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Android.Permission
#include "UnityEngine/Android/Permission.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
// Including type: UnityEngine.Android.PermissionCallbacks
#include "UnityEngine/Android/PermissionCallbacks.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.AndroidJavaObject m_UnityPermissions
::UnityEngine::AndroidJavaObject* UnityEngine::Android::Permission::_get_m_UnityPermissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::Permission::_get_m_UnityPermissions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AndroidJavaObject*>("UnityEngine.Android", "Permission", "m_UnityPermissions"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AndroidJavaObject m_UnityPermissions
void UnityEngine::Android::Permission::_set_m_UnityPermissions(::UnityEngine::AndroidJavaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::Permission::_set_m_UnityPermissions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Android", "Permission", "m_UnityPermissions", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.AndroidJavaObject m_Activity
::UnityEngine::AndroidJavaObject* UnityEngine::Android::Permission::_get_m_Activity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::Permission::_get_m_Activity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AndroidJavaObject*>("UnityEngine.Android", "Permission", "m_Activity"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AndroidJavaObject m_Activity
void UnityEngine::Android::Permission::_set_m_Activity(::UnityEngine::AndroidJavaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::Permission::_set_m_Activity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Android", "Permission", "m_Activity", value));
}
// Autogenerated method: UnityEngine.Android.Permission.GetActivity
::UnityEngine::AndroidJavaObject* UnityEngine::Android::Permission::GetActivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::Permission::GetActivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Android", "Permission", "GetActivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Android.Permission.GetUnityPermissions
::UnityEngine::AndroidJavaObject* UnityEngine::Android::Permission::GetUnityPermissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::Permission::GetUnityPermissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Android", "Permission", "GetUnityPermissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Android.Permission.HasUserAuthorizedPermission
bool UnityEngine::Android::Permission::HasUserAuthorizedPermission(::StringW permission) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::Permission::HasUserAuthorizedPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Android", "Permission", "HasUserAuthorizedPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permission)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, permission);
}
// Autogenerated method: UnityEngine.Android.Permission.RequestUserPermission
void UnityEngine::Android::Permission::RequestUserPermission(::StringW permission) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::Permission::RequestUserPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Android", "Permission", "RequestUserPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permission)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, permission);
}
// Autogenerated method: UnityEngine.Android.Permission.RequestUserPermission
void UnityEngine::Android::Permission::RequestUserPermission(::StringW permission, ::UnityEngine::Android::PermissionCallbacks* callbacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::Permission::RequestUserPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Android", "Permission", "RequestUserPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permission), ::il2cpp_utils::ExtractType(callbacks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, permission, callbacks);
}
// Autogenerated method: UnityEngine.Android.Permission.RequestUserPermissions
void UnityEngine::Android::Permission::RequestUserPermissions(::ArrayW<::StringW> permissions, ::UnityEngine::Android::PermissionCallbacks* callbacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Android::Permission::RequestUserPermissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Android", "Permission", "RequestUserPermissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permissions), ::il2cpp_utils::ExtractType(callbacks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, permissions, callbacks);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.StateMachineBehaviour
#include "UnityEngine/StateMachineBehaviour.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.AnimatorStateInfo
#include "UnityEngine/AnimatorStateInfo.hpp"
// Including type: UnityEngine.Animations.AnimatorControllerPlayable
#include "UnityEngine/Animations/AnimatorControllerPlayable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateEnter
void UnityEngine::StateMachineBehaviour::OnStateEnter(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateUpdate
void UnityEngine::StateMachineBehaviour::OnStateUpdate(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateExit
void UnityEngine::StateMachineBehaviour::OnStateExit(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMove
void UnityEngine::StateMachineBehaviour::OnStateMove(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateIK
void UnityEngine::StateMachineBehaviour::OnStateIK(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateIK");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMachineEnter
void UnityEngine::StateMachineBehaviour::OnStateMachineEnter(::UnityEngine::Animator* animator, int stateMachinePathHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateMachineEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateMachinePathHash);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMachineExit
void UnityEngine::StateMachineBehaviour::OnStateMachineExit(::UnityEngine::Animator* animator, int stateMachinePathHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateMachineExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateMachinePathHash);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateEnter
void UnityEngine::StateMachineBehaviour::OnStateEnter(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, ::UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateUpdate
void UnityEngine::StateMachineBehaviour::OnStateUpdate(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, ::UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateExit
void UnityEngine::StateMachineBehaviour::OnStateExit(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, ::UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMove
void UnityEngine::StateMachineBehaviour::OnStateMove(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, ::UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateIK
void UnityEngine::StateMachineBehaviour::OnStateIK(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, ::UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateIK");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMachineEnter
void UnityEngine::StateMachineBehaviour::OnStateMachineEnter(::UnityEngine::Animator* animator, int stateMachinePathHash, ::UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateMachineEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateMachinePathHash, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMachineExit
void UnityEngine::StateMachineBehaviour::OnStateMachineExit(::UnityEngine::Animator* animator, int stateMachinePathHash, ::UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateMachineExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateMachinePathHash, controller);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.PlayMode
#include "UnityEngine/PlayMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.PlayMode StopSameLayer
::UnityEngine::PlayMode UnityEngine::PlayMode::_get_StopSameLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayMode::_get_StopSameLayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PlayMode>("UnityEngine", "PlayMode", "StopSameLayer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PlayMode StopSameLayer
void UnityEngine::PlayMode::_set_StopSameLayer(::UnityEngine::PlayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayMode::_set_StopSameLayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PlayMode", "StopSameLayer", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.PlayMode StopAll
::UnityEngine::PlayMode UnityEngine::PlayMode::_get_StopAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayMode::_get_StopAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PlayMode>("UnityEngine", "PlayMode", "StopAll"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PlayMode StopAll
void UnityEngine::PlayMode::_set_StopAll(::UnityEngine::PlayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayMode::_set_StopAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PlayMode", "StopAll", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::PlayMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.QueueMode
#include "UnityEngine/QueueMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.QueueMode CompleteOthers
::UnityEngine::QueueMode UnityEngine::QueueMode::_get_CompleteOthers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueueMode::_get_CompleteOthers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::QueueMode>("UnityEngine", "QueueMode", "CompleteOthers"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.QueueMode CompleteOthers
void UnityEngine::QueueMode::_set_CompleteOthers(::UnityEngine::QueueMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueueMode::_set_CompleteOthers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "QueueMode", "CompleteOthers", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.QueueMode PlayNow
::UnityEngine::QueueMode UnityEngine::QueueMode::_get_PlayNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueueMode::_get_PlayNow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::QueueMode>("UnityEngine", "QueueMode", "PlayNow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.QueueMode PlayNow
void UnityEngine::QueueMode::_set_PlayNow(::UnityEngine::QueueMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueueMode::_set_PlayNow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "QueueMode", "PlayNow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::QueueMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueueMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimationPlayMode
#include "UnityEngine/AnimationPlayMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimationPlayMode Stop
::UnityEngine::AnimationPlayMode UnityEngine::AnimationPlayMode::_get_Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationPlayMode::_get_Stop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationPlayMode>("UnityEngine", "AnimationPlayMode", "Stop"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimationPlayMode Stop
void UnityEngine::AnimationPlayMode::_set_Stop(::UnityEngine::AnimationPlayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationPlayMode::_set_Stop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimationPlayMode", "Stop", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimationPlayMode Queue
::UnityEngine::AnimationPlayMode UnityEngine::AnimationPlayMode::_get_Queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationPlayMode::_get_Queue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationPlayMode>("UnityEngine", "AnimationPlayMode", "Queue"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimationPlayMode Queue
void UnityEngine::AnimationPlayMode::_set_Queue(::UnityEngine::AnimationPlayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationPlayMode::_set_Queue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimationPlayMode", "Queue", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimationPlayMode Mix
::UnityEngine::AnimationPlayMode UnityEngine::AnimationPlayMode::_get_Mix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationPlayMode::_get_Mix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationPlayMode>("UnityEngine", "AnimationPlayMode", "Mix"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimationPlayMode Mix
void UnityEngine::AnimationPlayMode::_set_Mix(::UnityEngine::AnimationPlayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationPlayMode::_set_Mix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimationPlayMode", "Mix", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimationPlayMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationPlayMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimationCullingType
#include "UnityEngine/AnimationCullingType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimationCullingType AlwaysAnimate
::UnityEngine::AnimationCullingType UnityEngine::AnimationCullingType::_get_AlwaysAnimate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCullingType::_get_AlwaysAnimate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationCullingType>("UnityEngine", "AnimationCullingType", "AlwaysAnimate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimationCullingType AlwaysAnimate
void UnityEngine::AnimationCullingType::_set_AlwaysAnimate(::UnityEngine::AnimationCullingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCullingType::_set_AlwaysAnimate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimationCullingType", "AlwaysAnimate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimationCullingType BasedOnRenderers
::UnityEngine::AnimationCullingType UnityEngine::AnimationCullingType::_get_BasedOnRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCullingType::_get_BasedOnRenderers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationCullingType>("UnityEngine", "AnimationCullingType", "BasedOnRenderers"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimationCullingType BasedOnRenderers
void UnityEngine::AnimationCullingType::_set_BasedOnRenderers(::UnityEngine::AnimationCullingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCullingType::_set_BasedOnRenderers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimationCullingType", "BasedOnRenderers", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimationCullingType BasedOnClipBounds
::UnityEngine::AnimationCullingType UnityEngine::AnimationCullingType::_get_BasedOnClipBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCullingType::_get_BasedOnClipBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationCullingType>("UnityEngine", "AnimationCullingType", "BasedOnClipBounds"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimationCullingType BasedOnClipBounds
void UnityEngine::AnimationCullingType::_set_BasedOnClipBounds(::UnityEngine::AnimationCullingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCullingType::_set_BasedOnClipBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimationCullingType", "BasedOnClipBounds", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimationCullingType BasedOnUserBounds
::UnityEngine::AnimationCullingType UnityEngine::AnimationCullingType::_get_BasedOnUserBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCullingType::_get_BasedOnUserBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationCullingType>("UnityEngine", "AnimationCullingType", "BasedOnUserBounds"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimationCullingType BasedOnUserBounds
void UnityEngine::AnimationCullingType::_set_BasedOnUserBounds(::UnityEngine::AnimationCullingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCullingType::_set_BasedOnUserBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimationCullingType", "BasedOnUserBounds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimationCullingType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCullingType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimationEventSource
#include "UnityEngine/AnimationEventSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimationEventSource NoSource
::UnityEngine::AnimationEventSource UnityEngine::AnimationEventSource::_get_NoSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEventSource::_get_NoSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationEventSource>("UnityEngine", "AnimationEventSource", "NoSource"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimationEventSource NoSource
void UnityEngine::AnimationEventSource::_set_NoSource(::UnityEngine::AnimationEventSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEventSource::_set_NoSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimationEventSource", "NoSource", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimationEventSource Legacy
::UnityEngine::AnimationEventSource UnityEngine::AnimationEventSource::_get_Legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEventSource::_get_Legacy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationEventSource>("UnityEngine", "AnimationEventSource", "Legacy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimationEventSource Legacy
void UnityEngine::AnimationEventSource::_set_Legacy(::UnityEngine::AnimationEventSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEventSource::_set_Legacy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimationEventSource", "Legacy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimationEventSource Animator
::UnityEngine::AnimationEventSource UnityEngine::AnimationEventSource::_get_Animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEventSource::_get_Animator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationEventSource>("UnityEngine", "AnimationEventSource", "Animator"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimationEventSource Animator
void UnityEngine::AnimationEventSource::_set_Animator(::UnityEngine::AnimationEventSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEventSource::_set_Animator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimationEventSource", "Animator", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimationEventSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEventSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
// Including type: UnityEngine.Animation/Enumerator
#include "UnityEngine/Animation_Enumerator.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.WrapMode
#include "UnityEngine/WrapMode.hpp"
// Including type: UnityEngine.AnimationState
#include "UnityEngine/AnimationState.hpp"
// Including type: UnityEngine.PlayMode
#include "UnityEngine/PlayMode.hpp"
// Including type: UnityEngine.QueueMode
#include "UnityEngine/QueueMode.hpp"
// Including type: UnityEngine.AnimationPlayMode
#include "UnityEngine/AnimationPlayMode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.AnimationCullingType
#include "UnityEngine/AnimationCullingType.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animation.get_clip
::UnityEngine::AnimationClip* UnityEngine::Animation::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.set_clip
void UnityEngine::Animation::set_clip(::UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::set_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animation.get_playAutomatically
bool UnityEngine::Animation::get_playAutomatically() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::get_playAutomatically");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAutomatically", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.set_playAutomatically
void UnityEngine::Animation::set_playAutomatically(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::set_playAutomatically");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAutomatically", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animation.get_wrapMode
::UnityEngine::WrapMode UnityEngine::Animation::get_wrapMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::get_wrapMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wrapMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::WrapMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.set_wrapMode
void UnityEngine::Animation::set_wrapMode(::UnityEngine::WrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::set_wrapMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_wrapMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animation.Stop
void UnityEngine::Animation::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.Stop
void UnityEngine::Animation::Stop(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animation.StopNamed
void UnityEngine::Animation::StopNamed(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::StopNamed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopNamed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animation.Rewind
void UnityEngine::Animation::Rewind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Rewind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.Rewind
void UnityEngine::Animation::Rewind(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Rewind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animation.RewindNamed
void UnityEngine::Animation::RewindNamed(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::RewindNamed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RewindNamed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animation.Sample
void UnityEngine::Animation::Sample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Sample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.get_isPlaying
bool UnityEngine::Animation::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.IsPlaying
bool UnityEngine::Animation::IsPlaying(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animation.get_Item
::UnityEngine::AnimationState* UnityEngine::Animation::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationState*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animation.Play
bool UnityEngine::Animation::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.Play
bool UnityEngine::Animation::Play(::UnityEngine::PlayMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Animation.PlayDefaultAnimation
bool UnityEngine::Animation::PlayDefaultAnimation(::UnityEngine::PlayMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::PlayDefaultAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayDefaultAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Animation.Play
bool UnityEngine::Animation::Play(::StringW animation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, animation);
}
// Autogenerated method: UnityEngine.Animation.Play
bool UnityEngine::Animation::Play(::StringW animation, ::UnityEngine::PlayMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, animation, mode);
}
// Autogenerated method: UnityEngine.Animation.CrossFade
void UnityEngine::Animation::CrossFade(::StringW animation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animation);
}
// Autogenerated method: UnityEngine.Animation.CrossFade
void UnityEngine::Animation::CrossFade(::StringW animation, float fadeLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(fadeLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animation, fadeLength);
}
// Autogenerated method: UnityEngine.Animation.CrossFade
void UnityEngine::Animation::CrossFade(::StringW animation, float fadeLength, ::UnityEngine::PlayMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(fadeLength), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animation, fadeLength, mode);
}
// Autogenerated method: UnityEngine.Animation.Blend
void UnityEngine::Animation::Blend(::StringW animation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Blend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animation);
}
// Autogenerated method: UnityEngine.Animation.Blend
void UnityEngine::Animation::Blend(::StringW animation, float targetWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Blend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(targetWeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animation, targetWeight);
}
// Autogenerated method: UnityEngine.Animation.Blend
void UnityEngine::Animation::Blend(::StringW animation, float targetWeight, float fadeLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Blend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(targetWeight), ::il2cpp_utils::ExtractType(fadeLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animation, targetWeight, fadeLength);
}
// Autogenerated method: UnityEngine.Animation.CrossFadeQueued
::UnityEngine::AnimationState* UnityEngine::Animation::CrossFadeQueued(::StringW animation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::CrossFadeQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationState*, false>(this, ___internal__method, animation);
}
// Autogenerated method: UnityEngine.Animation.CrossFadeQueued
::UnityEngine::AnimationState* UnityEngine::Animation::CrossFadeQueued(::StringW animation, float fadeLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::CrossFadeQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(fadeLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationState*, false>(this, ___internal__method, animation, fadeLength);
}
// Autogenerated method: UnityEngine.Animation.CrossFadeQueued
::UnityEngine::AnimationState* UnityEngine::Animation::CrossFadeQueued(::StringW animation, float fadeLength, ::UnityEngine::QueueMode queue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::CrossFadeQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(fadeLength), ::il2cpp_utils::ExtractType(queue)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationState*, false>(this, ___internal__method, animation, fadeLength, queue);
}
// Autogenerated method: UnityEngine.Animation.CrossFadeQueued
::UnityEngine::AnimationState* UnityEngine::Animation::CrossFadeQueued(::StringW animation, float fadeLength, ::UnityEngine::QueueMode queue, ::UnityEngine::PlayMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::CrossFadeQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(fadeLength), ::il2cpp_utils::ExtractType(queue), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationState*, false>(this, ___internal__method, animation, fadeLength, queue, mode);
}
// Autogenerated method: UnityEngine.Animation.PlayQueued
::UnityEngine::AnimationState* UnityEngine::Animation::PlayQueued(::StringW animation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::PlayQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationState*, false>(this, ___internal__method, animation);
}
// Autogenerated method: UnityEngine.Animation.PlayQueued
::UnityEngine::AnimationState* UnityEngine::Animation::PlayQueued(::StringW animation, ::UnityEngine::QueueMode queue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::PlayQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(queue)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationState*, false>(this, ___internal__method, animation, queue);
}
// Autogenerated method: UnityEngine.Animation.PlayQueued
::UnityEngine::AnimationState* UnityEngine::Animation::PlayQueued(::StringW animation, ::UnityEngine::QueueMode queue, ::UnityEngine::PlayMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::PlayQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(queue), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationState*, false>(this, ___internal__method, animation, queue, mode);
}
// Autogenerated method: UnityEngine.Animation.AddClip
void UnityEngine::Animation::AddClip(::UnityEngine::AnimationClip* clip, ::StringW newName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::AddClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(newName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip, newName);
}
// Autogenerated method: UnityEngine.Animation.AddClip
void UnityEngine::Animation::AddClip(::UnityEngine::AnimationClip* clip, ::StringW newName, int firstFrame, int lastFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::AddClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(newName), ::il2cpp_utils::ExtractType(firstFrame), ::il2cpp_utils::ExtractType(lastFrame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip, newName, firstFrame, lastFrame);
}
// Autogenerated method: UnityEngine.Animation.AddClip
void UnityEngine::Animation::AddClip(::UnityEngine::AnimationClip* clip, ::StringW newName, int firstFrame, int lastFrame, bool addLoopFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::AddClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(newName), ::il2cpp_utils::ExtractType(firstFrame), ::il2cpp_utils::ExtractType(lastFrame), ::il2cpp_utils::ExtractType(addLoopFrame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip, newName, firstFrame, lastFrame, addLoopFrame);
}
// Autogenerated method: UnityEngine.Animation.RemoveClip
void UnityEngine::Animation::RemoveClip(::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::RemoveClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Animation.RemoveClip
void UnityEngine::Animation::RemoveClip(::StringW clipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::RemoveClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipName);
}
// Autogenerated method: UnityEngine.Animation.RemoveClipNamed
void UnityEngine::Animation::RemoveClipNamed(::StringW clipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::RemoveClipNamed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveClipNamed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipName);
}
// Autogenerated method: UnityEngine.Animation.GetClipCount
int UnityEngine::Animation::GetClipCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::GetClipCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.Play
bool UnityEngine::Animation::Play(::UnityEngine::AnimationPlayMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Animation.Play
bool UnityEngine::Animation::Play(::StringW animation, ::UnityEngine::AnimationPlayMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, animation, mode);
}
// Autogenerated method: UnityEngine.Animation.SyncLayer
void UnityEngine::Animation::SyncLayer(int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::SyncLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layer);
}
// Autogenerated method: UnityEngine.Animation.GetEnumerator
::System::Collections::IEnumerator* UnityEngine::Animation::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animation*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.GetState
::UnityEngine::AnimationState* UnityEngine::Animation::GetState(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::GetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationState*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animation.GetStateAtIndex
::UnityEngine::AnimationState* UnityEngine::Animation::GetStateAtIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::GetStateAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStateAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationState*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animation.GetStateCount
int UnityEngine::Animation::GetStateCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::GetStateCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStateCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.GetClip
::UnityEngine::AnimationClip* UnityEngine::Animation::GetClip(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::GetClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationClip*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animation.get_animatePhysics
bool UnityEngine::Animation::get_animatePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::get_animatePhysics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animatePhysics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.set_animatePhysics
void UnityEngine::Animation::set_animatePhysics(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::set_animatePhysics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_animatePhysics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animation.get_animateOnlyIfVisible
bool UnityEngine::Animation::get_animateOnlyIfVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::get_animateOnlyIfVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animateOnlyIfVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.set_animateOnlyIfVisible
void UnityEngine::Animation::set_animateOnlyIfVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::set_animateOnlyIfVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_animateOnlyIfVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animation.get_cullingType
::UnityEngine::AnimationCullingType UnityEngine::Animation::get_cullingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::get_cullingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cullingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCullingType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.set_cullingType
void UnityEngine::Animation::set_cullingType(::UnityEngine::AnimationCullingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::set_cullingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cullingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animation.get_localBounds
::UnityEngine::Bounds UnityEngine::Animation::get_localBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::get_localBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.set_localBounds
void UnityEngine::Animation::set_localBounds(::UnityEngine::Bounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::set_localBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animation.get_localBounds_Injected
void UnityEngine::Animation::get_localBounds_Injected(ByRef<::UnityEngine::Bounds> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::get_localBounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localBounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Bounds&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Animation.set_localBounds_Injected
void UnityEngine::Animation::set_localBounds_Injected(ByRef<::UnityEngine::Bounds> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::set_localBounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localBounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Animation/Enumerator
#include "UnityEngine/Animation_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animation m_Outer
[[deprecated("Use field access instead!")]] ::UnityEngine::Animation*& UnityEngine::Animation::Enumerator::dyn_m_Outer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Enumerator::dyn_m_Outer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Outer"))->offset;
  return *reinterpret_cast<::UnityEngine::Animation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_CurrentIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::Animation::Enumerator::dyn_m_CurrentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Enumerator::dyn_m_CurrentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animation/Enumerator.get_Current
::Il2CppObject* UnityEngine::Animation::Enumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Enumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animation::Enumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation/Enumerator.MoveNext
bool UnityEngine::Animation::Enumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Enumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animation::Enumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation/Enumerator.Reset
void UnityEngine::Animation::Enumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Enumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animation::Enumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimationState
#include "UnityEngine/AnimationState.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AnimationState.set_enabled
void UnityEngine::AnimationState::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationState::set_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationState.set_weight
void UnityEngine::AnimationState::set_weight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationState::set_weight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_weight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationState.set_normalizedTime
void UnityEngine::AnimationState::set_normalizedTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationState::set_normalizedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normalizedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationState.set_speed
void UnityEngine::AnimationState::set_speed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationState::set_speed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_speed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationState.get_length
float UnityEngine::AnimationState::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationState::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationState.get_clip
::UnityEngine::AnimationClip* UnityEngine::AnimationState::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationState::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimationEvent
#include "UnityEngine/AnimationEvent.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.AnimationState
#include "UnityEngine/AnimationState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Single m_Time
[[deprecated("Use field access instead!")]] float& UnityEngine::AnimationEvent::dyn_m_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_Time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_FunctionName
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::AnimationEvent::dyn_m_FunctionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_FunctionName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FunctionName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_StringParameter
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::AnimationEvent::dyn_m_StringParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_StringParameter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StringParameter"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Object m_ObjectReferenceParameter
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& UnityEngine::AnimationEvent::dyn_m_ObjectReferenceParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_ObjectReferenceParameter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ObjectReferenceParameter"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_FloatParameter
[[deprecated("Use field access instead!")]] float& UnityEngine::AnimationEvent::dyn_m_FloatParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_FloatParameter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FloatParameter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_IntParameter
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimationEvent::dyn_m_IntParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_IntParameter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IntParameter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_MessageOptions
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimationEvent::dyn_m_MessageOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_MessageOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MessageOptions"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.AnimationEventSource m_Source
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationEventSource& UnityEngine::AnimationEvent::dyn_m_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_Source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Source"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationEventSource*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.AnimationState m_StateSender
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationState*& UnityEngine::AnimationEvent::dyn_m_StateSender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_StateSender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StateSender"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.AnimatorStateInfo m_AnimatorStateInfo
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimatorStateInfo& UnityEngine::AnimationEvent::dyn_m_AnimatorStateInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_AnimatorStateInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimatorStateInfo"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimatorStateInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.AnimatorClipInfo m_AnimatorClipInfo
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimatorClipInfo& UnityEngine::AnimationEvent::dyn_m_AnimatorClipInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_AnimatorClipInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimatorClipInfo"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimatorClipInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.WrapMode
#include "UnityEngine/WrapMode.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.AnimationEvent
#include "UnityEngine/AnimationEvent.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AnimationClip.Internal_CreateAnimationClip
void UnityEngine::AnimationClip::Internal_CreateAnimationClip(::UnityEngine::AnimationClip* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::Internal_CreateAnimationClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AnimationClip", "Internal_CreateAnimationClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.AnimationClip.SampleAnimation
void UnityEngine::AnimationClip::SampleAnimation(::UnityEngine::GameObject* go, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::SampleAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SampleAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, go, time);
}
// Autogenerated method: UnityEngine.AnimationClip.SampleAnimation
void UnityEngine::AnimationClip::SampleAnimation(::UnityEngine::GameObject* go, ::UnityEngine::AnimationClip* clip, float inTime, ::UnityEngine::WrapMode wrapMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::SampleAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AnimationClip", "SampleAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(inTime), ::il2cpp_utils::ExtractType(wrapMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go, clip, inTime, wrapMode);
}
// Autogenerated method: UnityEngine.AnimationClip.get_length
float UnityEngine::AnimationClip::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_startTime
float UnityEngine::AnimationClip::get_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_startTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_stopTime
float UnityEngine::AnimationClip::get_stopTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_stopTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stopTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_frameRate
float UnityEngine::AnimationClip::get_frameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_frameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.set_frameRate
void UnityEngine::AnimationClip::set_frameRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::set_frameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_frameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationClip.SetCurve
void UnityEngine::AnimationClip::SetCurve(::StringW relativePath, ::System::Type* type, ::StringW propertyName, ::UnityEngine::AnimationCurve* curve) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::SetCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativePath), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(curve)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relativePath, type, propertyName, curve);
}
// Autogenerated method: UnityEngine.AnimationClip.EnsureQuaternionContinuity
void UnityEngine::AnimationClip::EnsureQuaternionContinuity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::EnsureQuaternionContinuity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureQuaternionContinuity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.ClearCurves
void UnityEngine::AnimationClip::ClearCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::ClearCurves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_wrapMode
::UnityEngine::WrapMode UnityEngine::AnimationClip::get_wrapMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_wrapMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wrapMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::WrapMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.set_wrapMode
void UnityEngine::AnimationClip::set_wrapMode(::UnityEngine::WrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::set_wrapMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_wrapMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationClip.get_localBounds
::UnityEngine::Bounds UnityEngine::AnimationClip::get_localBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_localBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.set_localBounds
void UnityEngine::AnimationClip::set_localBounds(::UnityEngine::Bounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::set_localBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationClip.get_legacy
bool UnityEngine::AnimationClip::get_legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_legacy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_legacy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.set_legacy
void UnityEngine::AnimationClip::set_legacy(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::set_legacy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_legacy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationClip.get_humanMotion
bool UnityEngine::AnimationClip::get_humanMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_humanMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_humanMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_empty
bool UnityEngine::AnimationClip::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasGenericRootTransform
bool UnityEngine::AnimationClip::get_hasGenericRootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_hasGenericRootTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasGenericRootTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasMotionFloatCurves
bool UnityEngine::AnimationClip::get_hasMotionFloatCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_hasMotionFloatCurves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasMotionFloatCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasMotionCurves
bool UnityEngine::AnimationClip::get_hasMotionCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_hasMotionCurves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasMotionCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasRootCurves
bool UnityEngine::AnimationClip::get_hasRootCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_hasRootCurves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRootCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasRootMotion
bool UnityEngine::AnimationClip::get_hasRootMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_hasRootMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRootMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.AddEvent
void UnityEngine::AnimationClip::AddEvent(::UnityEngine::AnimationEvent* evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::AddEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: UnityEngine.AnimationClip.AddEventInternal
void UnityEngine::AnimationClip::AddEventInternal(::Il2CppObject* evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::AddEventInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEventInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt);
}
// Autogenerated method: UnityEngine.AnimationClip.get_events
::ArrayW<::UnityEngine::AnimationEvent*> UnityEngine::AnimationClip::get_events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_events");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_events", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::AnimationEvent*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.set_events
void UnityEngine::AnimationClip::set_events(::ArrayW<::UnityEngine::AnimationEvent*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::set_events");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_events", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationClip.SetEventsInternal
void UnityEngine::AnimationClip::SetEventsInternal(::System::Array* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::SetEventsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEventsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationClip.GetEventsInternal
::System::Array* UnityEngine::AnimationClip::GetEventsInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::GetEventsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEventsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_localBounds_Injected
void UnityEngine::AnimationClip::get_localBounds_Injected(ByRef<::UnityEngine::Bounds> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_localBounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localBounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Bounds&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.AnimationClip.set_localBounds_Injected
void UnityEngine::AnimationClip::set_localBounds_Injected(ByRef<::UnityEngine::Bounds> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::set_localBounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localBounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AvatarTarget
#include "UnityEngine/AvatarTarget.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarTarget Root
::UnityEngine::AvatarTarget UnityEngine::AvatarTarget::_get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarTarget::_get_Root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarTarget>("UnityEngine", "AvatarTarget", "Root"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarTarget Root
void UnityEngine::AvatarTarget::_set_Root(::UnityEngine::AvatarTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarTarget::_set_Root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarTarget", "Root", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarTarget Body
::UnityEngine::AvatarTarget UnityEngine::AvatarTarget::_get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarTarget::_get_Body");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarTarget>("UnityEngine", "AvatarTarget", "Body"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarTarget Body
void UnityEngine::AvatarTarget::_set_Body(::UnityEngine::AvatarTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarTarget::_set_Body");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarTarget", "Body", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarTarget LeftFoot
::UnityEngine::AvatarTarget UnityEngine::AvatarTarget::_get_LeftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarTarget::_get_LeftFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarTarget>("UnityEngine", "AvatarTarget", "LeftFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarTarget LeftFoot
void UnityEngine::AvatarTarget::_set_LeftFoot(::UnityEngine::AvatarTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarTarget::_set_LeftFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarTarget", "LeftFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarTarget RightFoot
::UnityEngine::AvatarTarget UnityEngine::AvatarTarget::_get_RightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarTarget::_get_RightFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarTarget>("UnityEngine", "AvatarTarget", "RightFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarTarget RightFoot
void UnityEngine::AvatarTarget::_set_RightFoot(::UnityEngine::AvatarTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarTarget::_set_RightFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarTarget", "RightFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarTarget LeftHand
::UnityEngine::AvatarTarget UnityEngine::AvatarTarget::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarTarget::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarTarget>("UnityEngine", "AvatarTarget", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarTarget LeftHand
void UnityEngine::AvatarTarget::_set_LeftHand(::UnityEngine::AvatarTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarTarget::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarTarget", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarTarget RightHand
::UnityEngine::AvatarTarget UnityEngine::AvatarTarget::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarTarget::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarTarget>("UnityEngine", "AvatarTarget", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarTarget RightHand
void UnityEngine::AvatarTarget::_set_RightHand(::UnityEngine::AvatarTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarTarget::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarTarget", "RightHand", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AvatarTarget::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarTarget::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AvatarIKGoal
#include "UnityEngine/AvatarIKGoal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKGoal LeftFoot
::UnityEngine::AvatarIKGoal UnityEngine::AvatarIKGoal::_get_LeftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::_get_LeftFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarIKGoal>("UnityEngine", "AvatarIKGoal", "LeftFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKGoal LeftFoot
void UnityEngine::AvatarIKGoal::_set_LeftFoot(::UnityEngine::AvatarIKGoal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::_set_LeftFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKGoal", "LeftFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKGoal RightFoot
::UnityEngine::AvatarIKGoal UnityEngine::AvatarIKGoal::_get_RightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::_get_RightFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarIKGoal>("UnityEngine", "AvatarIKGoal", "RightFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKGoal RightFoot
void UnityEngine::AvatarIKGoal::_set_RightFoot(::UnityEngine::AvatarIKGoal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::_set_RightFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKGoal", "RightFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKGoal LeftHand
::UnityEngine::AvatarIKGoal UnityEngine::AvatarIKGoal::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarIKGoal>("UnityEngine", "AvatarIKGoal", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKGoal LeftHand
void UnityEngine::AvatarIKGoal::_set_LeftHand(::UnityEngine::AvatarIKGoal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKGoal", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKGoal RightHand
::UnityEngine::AvatarIKGoal UnityEngine::AvatarIKGoal::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarIKGoal>("UnityEngine", "AvatarIKGoal", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKGoal RightHand
void UnityEngine::AvatarIKGoal::_set_RightHand(::UnityEngine::AvatarIKGoal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKGoal", "RightHand", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AvatarIKGoal::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AvatarIKHint
#include "UnityEngine/AvatarIKHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKHint LeftKnee
::UnityEngine::AvatarIKHint UnityEngine::AvatarIKHint::_get_LeftKnee() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKHint::_get_LeftKnee");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarIKHint>("UnityEngine", "AvatarIKHint", "LeftKnee"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKHint LeftKnee
void UnityEngine::AvatarIKHint::_set_LeftKnee(::UnityEngine::AvatarIKHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKHint::_set_LeftKnee");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKHint", "LeftKnee", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKHint RightKnee
::UnityEngine::AvatarIKHint UnityEngine::AvatarIKHint::_get_RightKnee() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKHint::_get_RightKnee");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarIKHint>("UnityEngine", "AvatarIKHint", "RightKnee"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKHint RightKnee
void UnityEngine::AvatarIKHint::_set_RightKnee(::UnityEngine::AvatarIKHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKHint::_set_RightKnee");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKHint", "RightKnee", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKHint LeftElbow
::UnityEngine::AvatarIKHint UnityEngine::AvatarIKHint::_get_LeftElbow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKHint::_get_LeftElbow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarIKHint>("UnityEngine", "AvatarIKHint", "LeftElbow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKHint LeftElbow
void UnityEngine::AvatarIKHint::_set_LeftElbow(::UnityEngine::AvatarIKHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKHint::_set_LeftElbow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKHint", "LeftElbow", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKHint RightElbow
::UnityEngine::AvatarIKHint UnityEngine::AvatarIKHint::_get_RightElbow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKHint::_get_RightElbow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarIKHint>("UnityEngine", "AvatarIKHint", "RightElbow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKHint RightElbow
void UnityEngine::AvatarIKHint::_set_RightElbow(::UnityEngine::AvatarIKHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKHint::_set_RightElbow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKHint", "RightElbow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AvatarIKHint::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKHint::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorControllerParameterType
#include "UnityEngine/AnimatorControllerParameterType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorControllerParameterType Float
::UnityEngine::AnimatorControllerParameterType UnityEngine::AnimatorControllerParameterType::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameterType::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimatorControllerParameterType>("UnityEngine", "AnimatorControllerParameterType", "Float"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorControllerParameterType Float
void UnityEngine::AnimatorControllerParameterType::_set_Float(::UnityEngine::AnimatorControllerParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameterType::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorControllerParameterType", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorControllerParameterType Int
::UnityEngine::AnimatorControllerParameterType UnityEngine::AnimatorControllerParameterType::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameterType::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimatorControllerParameterType>("UnityEngine", "AnimatorControllerParameterType", "Int"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorControllerParameterType Int
void UnityEngine::AnimatorControllerParameterType::_set_Int(::UnityEngine::AnimatorControllerParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameterType::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorControllerParameterType", "Int", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorControllerParameterType Bool
::UnityEngine::AnimatorControllerParameterType UnityEngine::AnimatorControllerParameterType::_get_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameterType::_get_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimatorControllerParameterType>("UnityEngine", "AnimatorControllerParameterType", "Bool"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorControllerParameterType Bool
void UnityEngine::AnimatorControllerParameterType::_set_Bool(::UnityEngine::AnimatorControllerParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameterType::_set_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorControllerParameterType", "Bool", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorControllerParameterType Trigger
::UnityEngine::AnimatorControllerParameterType UnityEngine::AnimatorControllerParameterType::_get_Trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameterType::_get_Trigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimatorControllerParameterType>("UnityEngine", "AnimatorControllerParameterType", "Trigger"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorControllerParameterType Trigger
void UnityEngine::AnimatorControllerParameterType::_set_Trigger(::UnityEngine::AnimatorControllerParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameterType::_set_Trigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorControllerParameterType", "Trigger", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorControllerParameterType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameterType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.StateInfoIndex
#include "UnityEngine/StateInfoIndex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.StateInfoIndex CurrentState
::UnityEngine::StateInfoIndex UnityEngine::StateInfoIndex::_get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::_get_CurrentState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::StateInfoIndex>("UnityEngine", "StateInfoIndex", "CurrentState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StateInfoIndex CurrentState
void UnityEngine::StateInfoIndex::_set_CurrentState(::UnityEngine::StateInfoIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::_set_CurrentState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StateInfoIndex", "CurrentState", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.StateInfoIndex NextState
::UnityEngine::StateInfoIndex UnityEngine::StateInfoIndex::_get_NextState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::_get_NextState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::StateInfoIndex>("UnityEngine", "StateInfoIndex", "NextState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StateInfoIndex NextState
void UnityEngine::StateInfoIndex::_set_NextState(::UnityEngine::StateInfoIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::_set_NextState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StateInfoIndex", "NextState", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.StateInfoIndex ExitState
::UnityEngine::StateInfoIndex UnityEngine::StateInfoIndex::_get_ExitState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::_get_ExitState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::StateInfoIndex>("UnityEngine", "StateInfoIndex", "ExitState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StateInfoIndex ExitState
void UnityEngine::StateInfoIndex::_set_ExitState(::UnityEngine::StateInfoIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::_set_ExitState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StateInfoIndex", "ExitState", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.StateInfoIndex InterruptedState
::UnityEngine::StateInfoIndex UnityEngine::StateInfoIndex::_get_InterruptedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::_get_InterruptedState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::StateInfoIndex>("UnityEngine", "StateInfoIndex", "InterruptedState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StateInfoIndex InterruptedState
void UnityEngine::StateInfoIndex::_set_InterruptedState(::UnityEngine::StateInfoIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::_set_InterruptedState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StateInfoIndex", "InterruptedState", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::StateInfoIndex::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorRecorderMode
#include "UnityEngine/AnimatorRecorderMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorRecorderMode Offline
::UnityEngine::AnimatorRecorderMode UnityEngine::AnimatorRecorderMode::_get_Offline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorRecorderMode::_get_Offline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimatorRecorderMode>("UnityEngine", "AnimatorRecorderMode", "Offline"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorRecorderMode Offline
void UnityEngine::AnimatorRecorderMode::_set_Offline(::UnityEngine::AnimatorRecorderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorRecorderMode::_set_Offline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorRecorderMode", "Offline", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorRecorderMode Playback
::UnityEngine::AnimatorRecorderMode UnityEngine::AnimatorRecorderMode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorRecorderMode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimatorRecorderMode>("UnityEngine", "AnimatorRecorderMode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorRecorderMode Playback
void UnityEngine::AnimatorRecorderMode::_set_Playback(::UnityEngine::AnimatorRecorderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorRecorderMode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorRecorderMode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorRecorderMode Record
::UnityEngine::AnimatorRecorderMode UnityEngine::AnimatorRecorderMode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorRecorderMode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimatorRecorderMode>("UnityEngine", "AnimatorRecorderMode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorRecorderMode Record
void UnityEngine::AnimatorRecorderMode::_set_Record(::UnityEngine::AnimatorRecorderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorRecorderMode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorRecorderMode", "Record", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorRecorderMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorRecorderMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorCullingMode
#include "UnityEngine/AnimatorCullingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorCullingMode AlwaysAnimate
::UnityEngine::AnimatorCullingMode UnityEngine::AnimatorCullingMode::_get_AlwaysAnimate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorCullingMode::_get_AlwaysAnimate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimatorCullingMode>("UnityEngine", "AnimatorCullingMode", "AlwaysAnimate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorCullingMode AlwaysAnimate
void UnityEngine::AnimatorCullingMode::_set_AlwaysAnimate(::UnityEngine::AnimatorCullingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorCullingMode::_set_AlwaysAnimate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorCullingMode", "AlwaysAnimate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorCullingMode CullUpdateTransforms
::UnityEngine::AnimatorCullingMode UnityEngine::AnimatorCullingMode::_get_CullUpdateTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorCullingMode::_get_CullUpdateTransforms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimatorCullingMode>("UnityEngine", "AnimatorCullingMode", "CullUpdateTransforms"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorCullingMode CullUpdateTransforms
void UnityEngine::AnimatorCullingMode::_set_CullUpdateTransforms(::UnityEngine::AnimatorCullingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorCullingMode::_set_CullUpdateTransforms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorCullingMode", "CullUpdateTransforms", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorCullingMode CullCompletely
::UnityEngine::AnimatorCullingMode UnityEngine::AnimatorCullingMode::_get_CullCompletely() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorCullingMode::_get_CullCompletely");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimatorCullingMode>("UnityEngine", "AnimatorCullingMode", "CullCompletely"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorCullingMode CullCompletely
void UnityEngine::AnimatorCullingMode::_set_CullCompletely(::UnityEngine::AnimatorCullingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorCullingMode::_set_CullCompletely");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorCullingMode", "CullCompletely", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorCullingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorCullingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorUpdateMode
#include "UnityEngine/AnimatorUpdateMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorUpdateMode Normal
::UnityEngine::AnimatorUpdateMode UnityEngine::AnimatorUpdateMode::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorUpdateMode::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimatorUpdateMode>("UnityEngine", "AnimatorUpdateMode", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorUpdateMode Normal
void UnityEngine::AnimatorUpdateMode::_set_Normal(::UnityEngine::AnimatorUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorUpdateMode::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorUpdateMode", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorUpdateMode AnimatePhysics
::UnityEngine::AnimatorUpdateMode UnityEngine::AnimatorUpdateMode::_get_AnimatePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorUpdateMode::_get_AnimatePhysics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimatorUpdateMode>("UnityEngine", "AnimatorUpdateMode", "AnimatePhysics"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorUpdateMode AnimatePhysics
void UnityEngine::AnimatorUpdateMode::_set_AnimatePhysics(::UnityEngine::AnimatorUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorUpdateMode::_set_AnimatePhysics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorUpdateMode", "AnimatePhysics", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorUpdateMode UnscaledTime
::UnityEngine::AnimatorUpdateMode UnityEngine::AnimatorUpdateMode::_get_UnscaledTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorUpdateMode::_get_UnscaledTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimatorUpdateMode>("UnityEngine", "AnimatorUpdateMode", "UnscaledTime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorUpdateMode UnscaledTime
void UnityEngine::AnimatorUpdateMode::_set_UnscaledTime(::UnityEngine::AnimatorUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorUpdateMode::_set_UnscaledTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorUpdateMode", "UnscaledTime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorUpdateMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorUpdateMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorClipInfo
#include "UnityEngine/AnimatorClipInfo.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ClipInstanceID
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorClipInfo::dyn_m_ClipInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorClipInfo::dyn_m_ClipInstanceID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClipInstanceID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Weight
[[deprecated("Use field access instead!")]] float& UnityEngine::AnimatorClipInfo::dyn_m_Weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorClipInfo::dyn_m_Weight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AnimatorClipInfo.get_clip
::UnityEngine::AnimationClip* UnityEngine::AnimatorClipInfo::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorClipInfo::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimatorClipInfo.get_weight
float UnityEngine::AnimatorClipInfo::get_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorClipInfo::get_weight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_weight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimatorClipInfo.InstanceIDToAnimationClipPPtr
::UnityEngine::AnimationClip* UnityEngine::AnimatorClipInfo::InstanceIDToAnimationClipPPtr(int instanceID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorClipInfo::InstanceIDToAnimationClipPPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AnimatorClipInfo", "InstanceIDToAnimationClipPPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceID)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instanceID);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorStateInfo
#include "UnityEngine/AnimatorStateInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Name
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorStateInfo::dyn_m_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_Name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Name"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Path
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorStateInfo::dyn_m_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_Path");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Path"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_FullPath
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorStateInfo::dyn_m_FullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_FullPath");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FullPath"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_NormalizedTime
[[deprecated("Use field access instead!")]] float& UnityEngine::AnimatorStateInfo::dyn_m_NormalizedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_NormalizedTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NormalizedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Length
[[deprecated("Use field access instead!")]] float& UnityEngine::AnimatorStateInfo::dyn_m_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_Length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Speed
[[deprecated("Use field access instead!")]] float& UnityEngine::AnimatorStateInfo::dyn_m_Speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_Speed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SpeedMultiplier
[[deprecated("Use field access instead!")]] float& UnityEngine::AnimatorStateInfo::dyn_m_SpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_SpeedMultiplier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Tag
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorStateInfo::dyn_m_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_Tag");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Loop
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorStateInfo::dyn_m_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_Loop");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Loop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AnimatorStateInfo.IsName
bool UnityEngine::AnimatorStateInfo::IsName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::IsName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.AnimatorStateInfo.get_fullPathHash
int UnityEngine::AnimatorStateInfo::get_fullPathHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::get_fullPathHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_fullPathHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimatorStateInfo.get_normalizedTime
float UnityEngine::AnimatorStateInfo::get_normalizedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::get_normalizedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normalizedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.AnimatorUpdateMode
#include "UnityEngine/AnimatorUpdateMode.hpp"
// Including type: UnityEngine.AvatarIKGoal
#include "UnityEngine/AvatarIKGoal.hpp"
// Including type: UnityEngine.AvatarIKHint
#include "UnityEngine/AvatarIKHint.hpp"
// Including type: UnityEngine.HumanBodyBones
#include "UnityEngine/HumanBodyBones.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.StateMachineBehaviour
#include "UnityEngine/StateMachineBehaviour.hpp"
// Including type: UnityEngine.StateInfoIndex
#include "UnityEngine/StateInfoIndex.hpp"
// Including type: UnityEngine.AnimatorStateInfo
#include "UnityEngine/AnimatorStateInfo.hpp"
// Including type: UnityEngine.AnimatorTransitionInfo
#include "UnityEngine/AnimatorTransitionInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AnimatorControllerParameter
#include "UnityEngine/AnimatorControllerParameter.hpp"
// Including type: UnityEngine.MatchTargetWeightMask
#include "UnityEngine/MatchTargetWeightMask.hpp"
// Including type: UnityEngine.AvatarTarget
#include "UnityEngine/AvatarTarget.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimatorCullingMode
#include "UnityEngine/AnimatorCullingMode.hpp"
// Including type: UnityEngine.AnimatorRecorderMode
#include "UnityEngine/AnimatorRecorderMode.hpp"
// Including type: UnityEngine.RuntimeAnimatorController
#include "UnityEngine/RuntimeAnimatorController.hpp"
// Including type: UnityEngine.Avatar
#include "UnityEngine/Avatar.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animator.get_isOptimizable
bool UnityEngine::Animator::get_isOptimizable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_isOptimizable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOptimizable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_isHuman
bool UnityEngine::Animator::get_isHuman() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_isHuman");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isHuman", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_hasRootMotion
bool UnityEngine::Animator::get_hasRootMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_hasRootMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRootMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_isRootPositionOrRotationControlledByCurves
bool UnityEngine::Animator::get_isRootPositionOrRotationControlledByCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_isRootPositionOrRotationControlledByCurves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRootPositionOrRotationControlledByCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_humanScale
float UnityEngine::Animator::get_humanScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_humanScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_humanScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_isInitialized
bool UnityEngine::Animator::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.GetFloat
float UnityEngine::Animator::GetFloat(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.GetFloat
float UnityEngine::Animator::GetFloat(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.SetFloat
void UnityEngine::Animator::SetFloat(::StringW name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetFloat
void UnityEngine::Animator::SetFloat(::StringW name, float value, float dampTime, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(dampTime), ::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value, dampTime, deltaTime);
}
// Autogenerated method: UnityEngine.Animator.SetFloat
void UnityEngine::Animator::SetFloat(int id, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, value);
}
// Autogenerated method: UnityEngine.Animator.SetFloat
void UnityEngine::Animator::SetFloat(int id, float value, float dampTime, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(dampTime), ::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, value, dampTime, deltaTime);
}
// Autogenerated method: UnityEngine.Animator.GetBool
bool UnityEngine::Animator::GetBool(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.GetBool
bool UnityEngine::Animator::GetBool(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.SetBool
void UnityEngine::Animator::SetBool(::StringW name, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetBool
void UnityEngine::Animator::SetBool(int id, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, value);
}
// Autogenerated method: UnityEngine.Animator.GetInteger
int UnityEngine::Animator::GetInteger(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.GetInteger
int UnityEngine::Animator::GetInteger(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.SetInteger
void UnityEngine::Animator::SetInteger(::StringW name, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetInteger
void UnityEngine::Animator::SetInteger(int id, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, value);
}
// Autogenerated method: UnityEngine.Animator.SetTrigger
void UnityEngine::Animator::SetTrigger(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.SetTrigger
void UnityEngine::Animator::SetTrigger(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.ResetTrigger
void UnityEngine::Animator::ResetTrigger(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::ResetTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.ResetTrigger
void UnityEngine::Animator::ResetTrigger(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::ResetTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.IsParameterControlledByCurve
bool UnityEngine::Animator::IsParameterControlledByCurve(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::IsParameterControlledByCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsParameterControlledByCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.IsParameterControlledByCurve
bool UnityEngine::Animator::IsParameterControlledByCurve(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::IsParameterControlledByCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsParameterControlledByCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.get_deltaPosition
::UnityEngine::Vector3 UnityEngine::Animator::get_deltaPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_deltaPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_deltaRotation
::UnityEngine::Quaternion UnityEngine::Animator::get_deltaRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_deltaRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_velocity
::UnityEngine::Vector3 UnityEngine::Animator::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_angularVelocity
::UnityEngine::Vector3 UnityEngine::Animator::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_rootPosition
::UnityEngine::Vector3 UnityEngine::Animator::get_rootPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_rootPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_rootPosition
void UnityEngine::Animator::set_rootPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_rootPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rootPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_rootRotation
::UnityEngine::Quaternion UnityEngine::Animator::get_rootRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_rootRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_rootRotation
void UnityEngine::Animator::set_rootRotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_rootRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rootRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_applyRootMotion
bool UnityEngine::Animator::get_applyRootMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_applyRootMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_applyRootMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_applyRootMotion
void UnityEngine::Animator::set_applyRootMotion(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_applyRootMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_applyRootMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_linearVelocityBlending
bool UnityEngine::Animator::get_linearVelocityBlending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_linearVelocityBlending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_linearVelocityBlending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_linearVelocityBlending
void UnityEngine::Animator::set_linearVelocityBlending(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_linearVelocityBlending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_linearVelocityBlending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_animatePhysics
bool UnityEngine::Animator::get_animatePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_animatePhysics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animatePhysics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_animatePhysics
void UnityEngine::Animator::set_animatePhysics(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_animatePhysics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_animatePhysics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_updateMode
::UnityEngine::AnimatorUpdateMode UnityEngine::Animator::get_updateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_updateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_updateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimatorUpdateMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_updateMode
void UnityEngine::Animator::set_updateMode(::UnityEngine::AnimatorUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_updateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_updateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_hasTransformHierarchy
bool UnityEngine::Animator::get_hasTransformHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_hasTransformHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasTransformHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_allowConstantClipSamplingOptimization
bool UnityEngine::Animator::get_allowConstantClipSamplingOptimization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_allowConstantClipSamplingOptimization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowConstantClipSamplingOptimization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_allowConstantClipSamplingOptimization
void UnityEngine::Animator::set_allowConstantClipSamplingOptimization(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_allowConstantClipSamplingOptimization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowConstantClipSamplingOptimization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_gravityWeight
float UnityEngine::Animator::get_gravityWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_gravityWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gravityWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_bodyPosition
::UnityEngine::Vector3 UnityEngine::Animator::get_bodyPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_bodyPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bodyPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_bodyPosition
void UnityEngine::Animator::set_bodyPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_bodyPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bodyPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_bodyPositionInternal
::UnityEngine::Vector3 UnityEngine::Animator::get_bodyPositionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_bodyPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bodyPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_bodyPositionInternal
void UnityEngine::Animator::set_bodyPositionInternal(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_bodyPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bodyPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_bodyRotation
::UnityEngine::Quaternion UnityEngine::Animator::get_bodyRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_bodyRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bodyRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_bodyRotation
void UnityEngine::Animator::set_bodyRotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_bodyRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bodyRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_bodyRotationInternal
::UnityEngine::Quaternion UnityEngine::Animator::get_bodyRotationInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_bodyRotationInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bodyRotationInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_bodyRotationInternal
void UnityEngine::Animator::set_bodyRotationInternal(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_bodyRotationInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bodyRotationInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.GetIKPosition
::UnityEngine::Vector3 UnityEngine::Animator::GetIKPosition(::UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetIKPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, goal);
}
// Autogenerated method: UnityEngine.Animator.GetGoalPosition
::UnityEngine::Vector3 UnityEngine::Animator::GetGoalPosition(::UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetGoalPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGoalPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, goal);
}
// Autogenerated method: UnityEngine.Animator.SetIKPosition
void UnityEngine::Animator::SetIKPosition(::UnityEngine::AvatarIKGoal goal, ::UnityEngine::Vector3 goalPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetIKPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(goalPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goal, goalPosition);
}
// Autogenerated method: UnityEngine.Animator.SetGoalPosition
void UnityEngine::Animator::SetGoalPosition(::UnityEngine::AvatarIKGoal goal, ::UnityEngine::Vector3 goalPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetGoalPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGoalPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(goalPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goal, goalPosition);
}
// Autogenerated method: UnityEngine.Animator.GetIKRotation
::UnityEngine::Quaternion UnityEngine::Animator::GetIKRotation(::UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetIKRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, goal);
}
// Autogenerated method: UnityEngine.Animator.GetGoalRotation
::UnityEngine::Quaternion UnityEngine::Animator::GetGoalRotation(::UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetGoalRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGoalRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, goal);
}
// Autogenerated method: UnityEngine.Animator.SetIKRotation
void UnityEngine::Animator::SetIKRotation(::UnityEngine::AvatarIKGoal goal, ::UnityEngine::Quaternion goalRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetIKRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(goalRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goal, goalRotation);
}
// Autogenerated method: UnityEngine.Animator.SetGoalRotation
void UnityEngine::Animator::SetGoalRotation(::UnityEngine::AvatarIKGoal goal, ::UnityEngine::Quaternion goalRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetGoalRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGoalRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(goalRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goal, goalRotation);
}
// Autogenerated method: UnityEngine.Animator.GetIKPositionWeight
float UnityEngine::Animator::GetIKPositionWeight(::UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetIKPositionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKPositionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, goal);
}
// Autogenerated method: UnityEngine.Animator.GetGoalWeightPosition
float UnityEngine::Animator::GetGoalWeightPosition(::UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetGoalWeightPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGoalWeightPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, goal);
}
// Autogenerated method: UnityEngine.Animator.SetIKPositionWeight
void UnityEngine::Animator::SetIKPositionWeight(::UnityEngine::AvatarIKGoal goal, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetIKPositionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKPositionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goal, value);
}
// Autogenerated method: UnityEngine.Animator.SetGoalWeightPosition
void UnityEngine::Animator::SetGoalWeightPosition(::UnityEngine::AvatarIKGoal goal, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetGoalWeightPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGoalWeightPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goal, value);
}
// Autogenerated method: UnityEngine.Animator.GetIKRotationWeight
float UnityEngine::Animator::GetIKRotationWeight(::UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetIKRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, goal);
}
// Autogenerated method: UnityEngine.Animator.GetGoalWeightRotation
float UnityEngine::Animator::GetGoalWeightRotation(::UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetGoalWeightRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGoalWeightRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, goal);
}
// Autogenerated method: UnityEngine.Animator.SetIKRotationWeight
void UnityEngine::Animator::SetIKRotationWeight(::UnityEngine::AvatarIKGoal goal, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetIKRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goal, value);
}
// Autogenerated method: UnityEngine.Animator.SetGoalWeightRotation
void UnityEngine::Animator::SetGoalWeightRotation(::UnityEngine::AvatarIKGoal goal, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetGoalWeightRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGoalWeightRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goal, value);
}
// Autogenerated method: UnityEngine.Animator.GetIKHintPosition
::UnityEngine::Vector3 UnityEngine::Animator::GetIKHintPosition(::UnityEngine::AvatarIKHint hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetIKHintPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKHintPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hint)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, hint);
}
// Autogenerated method: UnityEngine.Animator.GetHintPosition
::UnityEngine::Vector3 UnityEngine::Animator::GetHintPosition(::UnityEngine::AvatarIKHint hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetHintPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHintPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hint)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, hint);
}
// Autogenerated method: UnityEngine.Animator.SetIKHintPosition
void UnityEngine::Animator::SetIKHintPosition(::UnityEngine::AvatarIKHint hint, ::UnityEngine::Vector3 hintPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetIKHintPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKHintPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hint), ::il2cpp_utils::ExtractType(hintPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hint, hintPosition);
}
// Autogenerated method: UnityEngine.Animator.SetHintPosition
void UnityEngine::Animator::SetHintPosition(::UnityEngine::AvatarIKHint hint, ::UnityEngine::Vector3 hintPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetHintPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHintPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hint), ::il2cpp_utils::ExtractType(hintPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hint, hintPosition);
}
// Autogenerated method: UnityEngine.Animator.GetIKHintPositionWeight
float UnityEngine::Animator::GetIKHintPositionWeight(::UnityEngine::AvatarIKHint hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetIKHintPositionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKHintPositionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hint)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, hint);
}
// Autogenerated method: UnityEngine.Animator.GetHintWeightPosition
float UnityEngine::Animator::GetHintWeightPosition(::UnityEngine::AvatarIKHint hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetHintWeightPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHintWeightPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hint)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, hint);
}
// Autogenerated method: UnityEngine.Animator.SetIKHintPositionWeight
void UnityEngine::Animator::SetIKHintPositionWeight(::UnityEngine::AvatarIKHint hint, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetIKHintPositionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKHintPositionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hint), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hint, value);
}
// Autogenerated method: UnityEngine.Animator.SetHintWeightPosition
void UnityEngine::Animator::SetHintWeightPosition(::UnityEngine::AvatarIKHint hint, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetHintWeightPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHintWeightPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hint), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hint, value);
}
// Autogenerated method: UnityEngine.Animator.SetLookAtPosition
void UnityEngine::Animator::SetLookAtPosition(::UnityEngine::Vector3 lookAtPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetLookAtPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lookAtPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lookAtPosition);
}
// Autogenerated method: UnityEngine.Animator.SetLookAtPositionInternal
void UnityEngine::Animator::SetLookAtPositionInternal(::UnityEngine::Vector3 lookAtPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetLookAtPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lookAtPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lookAtPosition);
}
// Autogenerated method: UnityEngine.Animator.SetLookAtWeight
void UnityEngine::Animator::SetLookAtWeight(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight);
}
// Autogenerated method: UnityEngine.Animator.SetLookAtWeight
void UnityEngine::Animator::SetLookAtWeight(float weight, float bodyWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(bodyWeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight, bodyWeight);
}
// Autogenerated method: UnityEngine.Animator.SetLookAtWeight
void UnityEngine::Animator::SetLookAtWeight(float weight, float bodyWeight, float headWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(bodyWeight), ::il2cpp_utils::ExtractType(headWeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight, bodyWeight, headWeight);
}
// Autogenerated method: UnityEngine.Animator.SetLookAtWeight
void UnityEngine::Animator::SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(bodyWeight), ::il2cpp_utils::ExtractType(headWeight), ::il2cpp_utils::ExtractType(eyesWeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight, bodyWeight, headWeight, eyesWeight);
}
// Autogenerated method: UnityEngine.Animator.SetLookAtWeight
void UnityEngine::Animator::SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(bodyWeight), ::il2cpp_utils::ExtractType(headWeight), ::il2cpp_utils::ExtractType(eyesWeight), ::il2cpp_utils::ExtractType(clampWeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight, bodyWeight, headWeight, eyesWeight, clampWeight);
}
// Autogenerated method: UnityEngine.Animator.SetLookAtWeightInternal
void UnityEngine::Animator::SetLookAtWeightInternal(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetLookAtWeightInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtWeightInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(bodyWeight), ::il2cpp_utils::ExtractType(headWeight), ::il2cpp_utils::ExtractType(eyesWeight), ::il2cpp_utils::ExtractType(clampWeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight, bodyWeight, headWeight, eyesWeight, clampWeight);
}
// Autogenerated method: UnityEngine.Animator.SetBoneLocalRotation
void UnityEngine::Animator::SetBoneLocalRotation(::UnityEngine::HumanBodyBones humanBoneId, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetBoneLocalRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBoneLocalRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanBoneId), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, humanBoneId, rotation);
}
// Autogenerated method: UnityEngine.Animator.SetBoneLocalRotationInternal
void UnityEngine::Animator::SetBoneLocalRotationInternal(int humanBoneId, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetBoneLocalRotationInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBoneLocalRotationInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanBoneId), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, humanBoneId, rotation);
}
// Autogenerated method: UnityEngine.Animator.GetBehaviour
::UnityEngine::ScriptableObject* UnityEngine::Animator::GetBehaviour(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetBehaviour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBehaviour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ScriptableObject*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.Animator.InternalGetBehaviours
::ArrayW<::UnityEngine::ScriptableObject*> UnityEngine::Animator::InternalGetBehaviours(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::InternalGetBehaviours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::ScriptableObject*>, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.Animator.GetBehaviours
::ArrayW<::UnityEngine::StateMachineBehaviour*> UnityEngine::Animator::GetBehaviours(int fullPathHash, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetBehaviours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullPathHash), ::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::StateMachineBehaviour*>, false>(this, ___internal__method, fullPathHash, layerIndex);
}
// Autogenerated method: UnityEngine.Animator.InternalGetBehavioursByKey
::ArrayW<::UnityEngine::ScriptableObject*> UnityEngine::Animator::InternalGetBehavioursByKey(int fullPathHash, int layerIndex, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::InternalGetBehavioursByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetBehavioursByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullPathHash), ::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::ScriptableObject*>, false>(this, ___internal__method, fullPathHash, layerIndex, type);
}
// Autogenerated method: UnityEngine.Animator.get_stabilizeFeet
bool UnityEngine::Animator::get_stabilizeFeet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_stabilizeFeet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stabilizeFeet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_stabilizeFeet
void UnityEngine::Animator::set_stabilizeFeet(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_stabilizeFeet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stabilizeFeet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_layerCount
int UnityEngine::Animator::get_layerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_layerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.GetLayerName
::StringW UnityEngine::Animator::GetLayerName(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetLayerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLayerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: UnityEngine.Animator.GetLayerIndex
int UnityEngine::Animator::GetLayerIndex(::StringW layerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetLayerIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLayerIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, layerName);
}
// Autogenerated method: UnityEngine.Animator.GetLayerWeight
float UnityEngine::Animator::GetLayerWeight(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetLayerWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLayerWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: UnityEngine.Animator.SetLayerWeight
void UnityEngine::Animator::SetLayerWeight(int layerIndex, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetLayerWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayerWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layerIndex, weight);
}
// Autogenerated method: UnityEngine.Animator.GetAnimatorStateInfo
void UnityEngine::Animator::GetAnimatorStateInfo(int layerIndex, ::UnityEngine::StateInfoIndex stateInfoIndex, ByRef<::UnityEngine::AnimatorStateInfo> info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetAnimatorStateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnimatorStateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(stateInfoIndex), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::AnimatorStateInfo&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layerIndex, stateInfoIndex, byref(info));
}
// Autogenerated method: UnityEngine.Animator.GetCurrentAnimatorStateInfo
::UnityEngine::AnimatorStateInfo UnityEngine::Animator::GetCurrentAnimatorStateInfo(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetCurrentAnimatorStateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentAnimatorStateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimatorStateInfo, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: UnityEngine.Animator.GetNextAnimatorStateInfo
::UnityEngine::AnimatorStateInfo UnityEngine::Animator::GetNextAnimatorStateInfo(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetNextAnimatorStateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextAnimatorStateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimatorStateInfo, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: UnityEngine.Animator.GetAnimatorTransitionInfo
void UnityEngine::Animator::GetAnimatorTransitionInfo(int layerIndex, ByRef<::UnityEngine::AnimatorTransitionInfo> info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetAnimatorTransitionInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnimatorTransitionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::AnimatorTransitionInfo&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layerIndex, byref(info));
}
// Autogenerated method: UnityEngine.Animator.GetAnimatorTransitionInfo
::UnityEngine::AnimatorTransitionInfo UnityEngine::Animator::GetAnimatorTransitionInfo(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetAnimatorTransitionInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnimatorTransitionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimatorTransitionInfo, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: UnityEngine.Animator.GetAnimatorClipInfoCount
int UnityEngine::Animator::GetAnimatorClipInfoCount(int layerIndex, bool current) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetAnimatorClipInfoCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnimatorClipInfoCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(current)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, layerIndex, current);
}
// Autogenerated method: UnityEngine.Animator.GetCurrentAnimatorClipInfoCount
int UnityEngine::Animator::GetCurrentAnimatorClipInfoCount(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetCurrentAnimatorClipInfoCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentAnimatorClipInfoCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: UnityEngine.Animator.GetNextAnimatorClipInfoCount
int UnityEngine::Animator::GetNextAnimatorClipInfoCount(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetNextAnimatorClipInfoCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextAnimatorClipInfoCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: UnityEngine.Animator.GetCurrentAnimatorClipInfo
::ArrayW<::UnityEngine::AnimatorClipInfo> UnityEngine::Animator::GetCurrentAnimatorClipInfo(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetCurrentAnimatorClipInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentAnimatorClipInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::AnimatorClipInfo>, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: UnityEngine.Animator.GetNextAnimatorClipInfo
::ArrayW<::UnityEngine::AnimatorClipInfo> UnityEngine::Animator::GetNextAnimatorClipInfo(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetNextAnimatorClipInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextAnimatorClipInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::AnimatorClipInfo>, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: UnityEngine.Animator.GetCurrentAnimatorClipInfo
void UnityEngine::Animator::GetCurrentAnimatorClipInfo(int layerIndex, ::System::Collections::Generic::List_1<::UnityEngine::AnimatorClipInfo>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetCurrentAnimatorClipInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentAnimatorClipInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(clips)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layerIndex, clips);
}
// Autogenerated method: UnityEngine.Animator.GetAnimatorClipInfoInternal
void UnityEngine::Animator::GetAnimatorClipInfoInternal(int layerIndex, bool isCurrent, ::Il2CppObject* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetAnimatorClipInfoInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnimatorClipInfoInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(isCurrent), ::il2cpp_utils::ExtractType(clips)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layerIndex, isCurrent, clips);
}
// Autogenerated method: UnityEngine.Animator.GetNextAnimatorClipInfo
void UnityEngine::Animator::GetNextAnimatorClipInfo(int layerIndex, ::System::Collections::Generic::List_1<::UnityEngine::AnimatorClipInfo>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetNextAnimatorClipInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextAnimatorClipInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(clips)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layerIndex, clips);
}
// Autogenerated method: UnityEngine.Animator.IsInTransition
bool UnityEngine::Animator::IsInTransition(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::IsInTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: UnityEngine.Animator.get_parameters
::ArrayW<::UnityEngine::AnimatorControllerParameter*> UnityEngine::Animator::get_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::AnimatorControllerParameter*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_parameterCount
int UnityEngine::Animator::get_parameterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_parameterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parameterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.GetParameterInternal
::UnityEngine::AnimatorControllerParameter* UnityEngine::Animator::GetParameterInternal(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetParameterInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimatorControllerParameter*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animator.GetParameter
::UnityEngine::AnimatorControllerParameter* UnityEngine::Animator::GetParameter(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimatorControllerParameter*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animator.get_feetPivotActive
float UnityEngine::Animator::get_feetPivotActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_feetPivotActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_feetPivotActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_feetPivotActive
void UnityEngine::Animator::set_feetPivotActive(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_feetPivotActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_feetPivotActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_pivotWeight
float UnityEngine::Animator::get_pivotWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_pivotWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivotWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_pivotPosition
::UnityEngine::Vector3 UnityEngine::Animator::get_pivotPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_pivotPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivotPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.MatchTarget
void UnityEngine::Animator::MatchTarget(::UnityEngine::Vector3 matchPosition, ::UnityEngine::Quaternion matchRotation, int targetBodyPart, ::UnityEngine::MatchTargetWeightMask weightMask, float startNormalizedTime, float targetNormalizedTime, bool completeMatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::MatchTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matchPosition), ::il2cpp_utils::ExtractType(matchRotation), ::il2cpp_utils::ExtractType(targetBodyPart), ::il2cpp_utils::ExtractType(weightMask), ::il2cpp_utils::ExtractType(startNormalizedTime), ::il2cpp_utils::ExtractType(targetNormalizedTime), ::il2cpp_utils::ExtractType(completeMatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, matchPosition, matchRotation, targetBodyPart, weightMask, startNormalizedTime, targetNormalizedTime, completeMatch);
}
// Autogenerated method: UnityEngine.Animator.MatchTarget
void UnityEngine::Animator::MatchTarget(::UnityEngine::Vector3 matchPosition, ::UnityEngine::Quaternion matchRotation, ::UnityEngine::AvatarTarget targetBodyPart, ::UnityEngine::MatchTargetWeightMask weightMask, float startNormalizedTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::MatchTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matchPosition), ::il2cpp_utils::ExtractType(matchRotation), ::il2cpp_utils::ExtractType(targetBodyPart), ::il2cpp_utils::ExtractType(weightMask), ::il2cpp_utils::ExtractType(startNormalizedTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, matchPosition, matchRotation, targetBodyPart, weightMask, startNormalizedTime);
}
// Autogenerated method: UnityEngine.Animator.MatchTarget
void UnityEngine::Animator::MatchTarget(::UnityEngine::Vector3 matchPosition, ::UnityEngine::Quaternion matchRotation, ::UnityEngine::AvatarTarget targetBodyPart, ::UnityEngine::MatchTargetWeightMask weightMask, float startNormalizedTime, float targetNormalizedTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::MatchTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matchPosition), ::il2cpp_utils::ExtractType(matchRotation), ::il2cpp_utils::ExtractType(targetBodyPart), ::il2cpp_utils::ExtractType(weightMask), ::il2cpp_utils::ExtractType(startNormalizedTime), ::il2cpp_utils::ExtractType(targetNormalizedTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, matchPosition, matchRotation, targetBodyPart, weightMask, startNormalizedTime, targetNormalizedTime);
}
// Autogenerated method: UnityEngine.Animator.MatchTarget
void UnityEngine::Animator::MatchTarget(::UnityEngine::Vector3 matchPosition, ::UnityEngine::Quaternion matchRotation, ::UnityEngine::AvatarTarget targetBodyPart, ::UnityEngine::MatchTargetWeightMask weightMask, float startNormalizedTime, float targetNormalizedTime, bool completeMatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::MatchTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matchPosition), ::il2cpp_utils::ExtractType(matchRotation), ::il2cpp_utils::ExtractType(targetBodyPart), ::il2cpp_utils::ExtractType(weightMask), ::il2cpp_utils::ExtractType(startNormalizedTime), ::il2cpp_utils::ExtractType(targetNormalizedTime), ::il2cpp_utils::ExtractType(completeMatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, matchPosition, matchRotation, targetBodyPart, weightMask, startNormalizedTime, targetNormalizedTime, completeMatch);
}
// Autogenerated method: UnityEngine.Animator.InterruptMatchTarget
void UnityEngine::Animator::InterruptMatchTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::InterruptMatchTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterruptMatchTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.InterruptMatchTarget
void UnityEngine::Animator::InterruptMatchTarget(bool completeMatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::InterruptMatchTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterruptMatchTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completeMatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, completeMatch);
}
// Autogenerated method: UnityEngine.Animator.get_isMatchingTarget
bool UnityEngine::Animator::get_isMatchingTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_isMatchingTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMatchingTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_speed
float UnityEngine::Animator::get_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_speed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_speed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_speed
void UnityEngine::Animator::set_speed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_speed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_speed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.ForceStateNormalizedTime
void UnityEngine::Animator::ForceStateNormalizedTime(float normalizedTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::ForceStateNormalizedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceStateNormalizedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normalizedTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, normalizedTime);
}
// Autogenerated method: UnityEngine.Animator.CrossFadeInFixedTime
void UnityEngine::Animator::CrossFadeInFixedTime(::StringW stateName, float fixedTransitionDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFadeInFixedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeInFixedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(fixedTransitionDuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName, fixedTransitionDuration);
}
// Autogenerated method: UnityEngine.Animator.CrossFadeInFixedTime
void UnityEngine::Animator::CrossFadeInFixedTime(::StringW stateName, float fixedTransitionDuration, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFadeInFixedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeInFixedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(fixedTransitionDuration), ::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName, fixedTransitionDuration, layer);
}
// Autogenerated method: UnityEngine.Animator.CrossFadeInFixedTime
void UnityEngine::Animator::CrossFadeInFixedTime(::StringW stateName, float fixedTransitionDuration, int layer, float fixedTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFadeInFixedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeInFixedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(fixedTransitionDuration), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(fixedTimeOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName, fixedTransitionDuration, layer, fixedTimeOffset);
}
// Autogenerated method: UnityEngine.Animator.CrossFadeInFixedTime
void UnityEngine::Animator::CrossFadeInFixedTime(::StringW stateName, float fixedTransitionDuration, int layer, float fixedTimeOffset, float normalizedTransitionTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFadeInFixedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeInFixedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(fixedTransitionDuration), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(fixedTimeOffset), ::il2cpp_utils::ExtractType(normalizedTransitionTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName, fixedTransitionDuration, layer, fixedTimeOffset, normalizedTransitionTime);
}
// Autogenerated method: UnityEngine.Animator.CrossFadeInFixedTime
void UnityEngine::Animator::CrossFadeInFixedTime(int stateHashName, float fixedTransitionDuration, int layer, float fixedTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFadeInFixedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeInFixedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateHashName), ::il2cpp_utils::ExtractType(fixedTransitionDuration), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(fixedTimeOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateHashName, fixedTransitionDuration, layer, fixedTimeOffset);
}
// Autogenerated method: UnityEngine.Animator.CrossFadeInFixedTime
void UnityEngine::Animator::CrossFadeInFixedTime(int stateHashName, float fixedTransitionDuration, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFadeInFixedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeInFixedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateHashName), ::il2cpp_utils::ExtractType(fixedTransitionDuration), ::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateHashName, fixedTransitionDuration, layer);
}
// Autogenerated method: UnityEngine.Animator.CrossFadeInFixedTime
void UnityEngine::Animator::CrossFadeInFixedTime(int stateHashName, float fixedTransitionDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFadeInFixedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeInFixedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateHashName), ::il2cpp_utils::ExtractType(fixedTransitionDuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateHashName, fixedTransitionDuration);
}
// Autogenerated method: UnityEngine.Animator.CrossFadeInFixedTime
void UnityEngine::Animator::CrossFadeInFixedTime(int stateHashName, float fixedTransitionDuration, int layer, float fixedTimeOffset, float normalizedTransitionTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFadeInFixedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeInFixedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateHashName), ::il2cpp_utils::ExtractType(fixedTransitionDuration), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(fixedTimeOffset), ::il2cpp_utils::ExtractType(normalizedTransitionTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateHashName, fixedTransitionDuration, layer, fixedTimeOffset, normalizedTransitionTime);
}
// Autogenerated method: UnityEngine.Animator.WriteDefaultValues
void UnityEngine::Animator::WriteDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::WriteDefaultValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDefaultValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(::StringW stateName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(normalizedTransitionDuration), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(normalizedTimeOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName, normalizedTransitionDuration, layer, normalizedTimeOffset);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(::StringW stateName, float normalizedTransitionDuration, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(normalizedTransitionDuration), ::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName, normalizedTransitionDuration, layer);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(::StringW stateName, float normalizedTransitionDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(normalizedTransitionDuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName, normalizedTransitionDuration);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(::StringW stateName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset, float normalizedTransitionTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(normalizedTransitionDuration), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(normalizedTimeOffset), ::il2cpp_utils::ExtractType(normalizedTransitionTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName, normalizedTransitionDuration, layer, normalizedTimeOffset, normalizedTransitionTime);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(int stateHashName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset, float normalizedTransitionTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateHashName), ::il2cpp_utils::ExtractType(normalizedTransitionDuration), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(normalizedTimeOffset), ::il2cpp_utils::ExtractType(normalizedTransitionTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateHashName, normalizedTransitionDuration, layer, normalizedTimeOffset, normalizedTransitionTime);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(int stateHashName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateHashName), ::il2cpp_utils::ExtractType(normalizedTransitionDuration), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(normalizedTimeOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateHashName, normalizedTransitionDuration, layer, normalizedTimeOffset);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(int stateHashName, float normalizedTransitionDuration, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateHashName), ::il2cpp_utils::ExtractType(normalizedTransitionDuration), ::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateHashName, normalizedTransitionDuration, layer);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(int stateHashName, float normalizedTransitionDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateHashName), ::il2cpp_utils::ExtractType(normalizedTransitionDuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateHashName, normalizedTransitionDuration);
}
// Autogenerated method: UnityEngine.Animator.PlayInFixedTime
void UnityEngine::Animator::PlayInFixedTime(::StringW stateName, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::PlayInFixedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayInFixedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName, layer);
}
// Autogenerated method: UnityEngine.Animator.PlayInFixedTime
void UnityEngine::Animator::PlayInFixedTime(::StringW stateName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::PlayInFixedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayInFixedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName);
}
// Autogenerated method: UnityEngine.Animator.PlayInFixedTime
void UnityEngine::Animator::PlayInFixedTime(::StringW stateName, int layer, float fixedTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::PlayInFixedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayInFixedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(fixedTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName, layer, fixedTime);
}
// Autogenerated method: UnityEngine.Animator.PlayInFixedTime
void UnityEngine::Animator::PlayInFixedTime(int stateNameHash, int layer, float fixedTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::PlayInFixedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayInFixedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateNameHash), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(fixedTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateNameHash, layer, fixedTime);
}
// Autogenerated method: UnityEngine.Animator.PlayInFixedTime
void UnityEngine::Animator::PlayInFixedTime(int stateNameHash, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::PlayInFixedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayInFixedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateNameHash), ::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateNameHash, layer);
}
// Autogenerated method: UnityEngine.Animator.PlayInFixedTime
void UnityEngine::Animator::PlayInFixedTime(int stateNameHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::PlayInFixedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayInFixedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateNameHash)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateNameHash);
}
// Autogenerated method: UnityEngine.Animator.Play
void UnityEngine::Animator::Play(::StringW stateName, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName, layer);
}
// Autogenerated method: UnityEngine.Animator.Play
void UnityEngine::Animator::Play(::StringW stateName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName);
}
// Autogenerated method: UnityEngine.Animator.Play
void UnityEngine::Animator::Play(::StringW stateName, int layer, float normalizedTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(normalizedTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName, layer, normalizedTime);
}
// Autogenerated method: UnityEngine.Animator.Play
void UnityEngine::Animator::Play(int stateNameHash, int layer, float normalizedTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateNameHash), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(normalizedTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateNameHash, layer, normalizedTime);
}
// Autogenerated method: UnityEngine.Animator.Play
void UnityEngine::Animator::Play(int stateNameHash, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateNameHash), ::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateNameHash, layer);
}
// Autogenerated method: UnityEngine.Animator.Play
void UnityEngine::Animator::Play(int stateNameHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateNameHash)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateNameHash);
}
// Autogenerated method: UnityEngine.Animator.SetTarget
void UnityEngine::Animator::SetTarget(::UnityEngine::AvatarTarget targetIndex, float targetNormalizedTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetIndex), ::il2cpp_utils::ExtractType(targetNormalizedTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetIndex, targetNormalizedTime);
}
// Autogenerated method: UnityEngine.Animator.get_targetPosition
::UnityEngine::Vector3 UnityEngine::Animator::get_targetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_targetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_targetRotation
::UnityEngine::Quaternion UnityEngine::Animator::get_targetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_targetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.IsControlled
bool UnityEngine::Animator::IsControlled(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::IsControlled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsControlled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, transform);
}
// Autogenerated method: UnityEngine.Animator.IsBoneTransform
bool UnityEngine::Animator::IsBoneTransform(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::IsBoneTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBoneTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, transform);
}
// Autogenerated method: UnityEngine.Animator.get_avatarRoot
::UnityEngine::Transform* UnityEngine::Animator::get_avatarRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_avatarRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_avatarRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.GetBoneTransform
::UnityEngine::Transform* UnityEngine::Animator::GetBoneTransform(::UnityEngine::HumanBodyBones humanBoneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetBoneTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoneTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanBoneId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, humanBoneId);
}
// Autogenerated method: UnityEngine.Animator.GetBoneTransformInternal
::UnityEngine::Transform* UnityEngine::Animator::GetBoneTransformInternal(int humanBoneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetBoneTransformInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoneTransformInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanBoneId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, humanBoneId);
}
// Autogenerated method: UnityEngine.Animator.get_cullingMode
::UnityEngine::AnimatorCullingMode UnityEngine::Animator::get_cullingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_cullingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cullingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimatorCullingMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_cullingMode
void UnityEngine::Animator::set_cullingMode(::UnityEngine::AnimatorCullingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_cullingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cullingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.StartPlayback
void UnityEngine::Animator::StartPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::StartPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.StopPlayback
void UnityEngine::Animator::StopPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::StopPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_playbackTime
float UnityEngine::Animator::get_playbackTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_playbackTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playbackTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_playbackTime
void UnityEngine::Animator::set_playbackTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_playbackTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playbackTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.StartRecording
void UnityEngine::Animator::StartRecording(int frameCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::StartRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frameCount);
}
// Autogenerated method: UnityEngine.Animator.StopRecording
void UnityEngine::Animator::StopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::StopRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_recorderStartTime
float UnityEngine::Animator::get_recorderStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_recorderStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recorderStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_recorderStartTime
void UnityEngine::Animator::set_recorderStartTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_recorderStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recorderStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.GetRecorderStartTime
float UnityEngine::Animator::GetRecorderStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetRecorderStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecorderStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_recorderStopTime
float UnityEngine::Animator::get_recorderStopTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_recorderStopTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recorderStopTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_recorderStopTime
void UnityEngine::Animator::set_recorderStopTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_recorderStopTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recorderStopTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.GetRecorderStopTime
float UnityEngine::Animator::GetRecorderStopTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetRecorderStopTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecorderStopTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_recorderMode
::UnityEngine::AnimatorRecorderMode UnityEngine::Animator::get_recorderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_recorderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recorderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimatorRecorderMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_runtimeAnimatorController
::UnityEngine::RuntimeAnimatorController* UnityEngine::Animator::get_runtimeAnimatorController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_runtimeAnimatorController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_runtimeAnimatorController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RuntimeAnimatorController*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_runtimeAnimatorController
void UnityEngine::Animator::set_runtimeAnimatorController(::UnityEngine::RuntimeAnimatorController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_runtimeAnimatorController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_runtimeAnimatorController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_hasBoundPlayables
bool UnityEngine::Animator::get_hasBoundPlayables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_hasBoundPlayables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasBoundPlayables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.ClearInternalControllerPlayable
void UnityEngine::Animator::ClearInternalControllerPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::ClearInternalControllerPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearInternalControllerPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.HasState
bool UnityEngine::Animator::HasState(int layerIndex, int stateID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::HasState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(stateID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, layerIndex, stateID);
}
// Autogenerated method: UnityEngine.Animator.StringToHash
int UnityEngine::Animator::StringToHash(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::StringToHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Animator", "StringToHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.get_avatar
::UnityEngine::Avatar* UnityEngine::Animator::get_avatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_avatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_avatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Avatar*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_avatar
void UnityEngine::Animator::set_avatar(::UnityEngine::Avatar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_avatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_avatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.GetStats
::StringW UnityEngine::Animator::GetStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_playableGraph
::UnityEngine::Playables::PlayableGraph UnityEngine::Animator::get_playableGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_playableGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playableGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableGraph, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.GetCurrentGraph
void UnityEngine::Animator::GetCurrentGraph(ByRef<::UnityEngine::Playables::PlayableGraph> graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetCurrentGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(graph));
}
// Autogenerated method: UnityEngine.Animator.CheckIfInIKPass
void UnityEngine::Animator::CheckIfInIKPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CheckIfInIKPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfInIKPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.IsInIKPass
bool UnityEngine::Animator::IsInIKPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::IsInIKPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInIKPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.SetFloatString
void UnityEngine::Animator::SetFloatString(::StringW name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetFloatString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetFloatID
void UnityEngine::Animator::SetFloatID(int id, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetFloatID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, value);
}
// Autogenerated method: UnityEngine.Animator.GetFloatString
float UnityEngine::Animator::GetFloatString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetFloatString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloatString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.GetFloatID
float UnityEngine::Animator::GetFloatID(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetFloatID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloatID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.SetBoolString
void UnityEngine::Animator::SetBoolString(::StringW name, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetBoolString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBoolString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetBoolID
void UnityEngine::Animator::SetBoolID(int id, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetBoolID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBoolID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, value);
}
// Autogenerated method: UnityEngine.Animator.GetBoolString
bool UnityEngine::Animator::GetBoolString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetBoolString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoolString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.GetBoolID
bool UnityEngine::Animator::GetBoolID(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetBoolID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoolID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.SetIntegerString
void UnityEngine::Animator::SetIntegerString(::StringW name, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetIntegerString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIntegerString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetIntegerID
void UnityEngine::Animator::SetIntegerID(int id, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetIntegerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIntegerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, value);
}
// Autogenerated method: UnityEngine.Animator.GetIntegerString
int UnityEngine::Animator::GetIntegerString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetIntegerString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIntegerString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.GetIntegerID
int UnityEngine::Animator::GetIntegerID(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetIntegerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIntegerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.SetTriggerString
void UnityEngine::Animator::SetTriggerString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetTriggerString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriggerString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.SetTriggerID
void UnityEngine::Animator::SetTriggerID(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetTriggerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriggerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.ResetTriggerString
void UnityEngine::Animator::ResetTriggerString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::ResetTriggerString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetTriggerString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.ResetTriggerID
void UnityEngine::Animator::ResetTriggerID(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::ResetTriggerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetTriggerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.IsParameterControlledByCurveString
bool UnityEngine::Animator::IsParameterControlledByCurveString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::IsParameterControlledByCurveString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsParameterControlledByCurveString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.IsParameterControlledByCurveID
bool UnityEngine::Animator::IsParameterControlledByCurveID(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::IsParameterControlledByCurveID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsParameterControlledByCurveID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.SetFloatStringDamp
void UnityEngine::Animator::SetFloatStringDamp(::StringW name, float value, float dampTime, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetFloatStringDamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatStringDamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(dampTime), ::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value, dampTime, deltaTime);
}
// Autogenerated method: UnityEngine.Animator.SetFloatIDDamp
void UnityEngine::Animator::SetFloatIDDamp(int id, float value, float dampTime, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetFloatIDDamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatIDDamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(dampTime), ::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, value, dampTime, deltaTime);
}
// Autogenerated method: UnityEngine.Animator.get_layersAffectMassCenter
bool UnityEngine::Animator::get_layersAffectMassCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_layersAffectMassCenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layersAffectMassCenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_layersAffectMassCenter
void UnityEngine::Animator::set_layersAffectMassCenter(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_layersAffectMassCenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_layersAffectMassCenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_leftFeetBottomHeight
float UnityEngine::Animator::get_leftFeetBottomHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_leftFeetBottomHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftFeetBottomHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_rightFeetBottomHeight
float UnityEngine::Animator::get_rightFeetBottomHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_rightFeetBottomHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightFeetBottomHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_supportsOnAnimatorMove
bool UnityEngine::Animator::get_supportsOnAnimatorMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_supportsOnAnimatorMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_supportsOnAnimatorMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.OnUpdateModeChanged
void UnityEngine::Animator::OnUpdateModeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::OnUpdateModeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdateModeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.OnCullingModeChanged
void UnityEngine::Animator::OnCullingModeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::OnCullingModeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCullingModeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.WriteDefaultPose
void UnityEngine::Animator::WriteDefaultPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::WriteDefaultPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDefaultPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.Update
void UnityEngine::Animator::Update(float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: UnityEngine.Animator.Rebind
void UnityEngine::Animator::Rebind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::Rebind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.Rebind
void UnityEngine::Animator::Rebind(bool writeDefaultValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::Rebind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writeDefaultValues)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writeDefaultValues);
}
// Autogenerated method: UnityEngine.Animator.ApplyBuiltinRootMotion
void UnityEngine::Animator::ApplyBuiltinRootMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::ApplyBuiltinRootMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyBuiltinRootMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.EvaluateController
void UnityEngine::Animator::EvaluateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::EvaluateController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.EvaluateController
void UnityEngine::Animator::EvaluateController(float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::EvaluateController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: UnityEngine.Animator.GetCurrentStateName
::StringW UnityEngine::Animator::GetCurrentStateName(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetCurrentStateName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentStateName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: UnityEngine.Animator.GetNextStateName
::StringW UnityEngine::Animator::GetNextStateName(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetNextStateName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextStateName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: UnityEngine.Animator.GetAnimatorStateName
::StringW UnityEngine::Animator::GetAnimatorStateName(int layerIndex, bool current) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetAnimatorStateName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnimatorStateName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(current)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, layerIndex, current);
}
// Autogenerated method: UnityEngine.Animator.ResolveHash
::StringW UnityEngine::Animator::ResolveHash(int hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::ResolveHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, hash);
}
// Autogenerated method: UnityEngine.Animator.get_logWarnings
bool UnityEngine::Animator::get_logWarnings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_logWarnings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_logWarnings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_logWarnings
void UnityEngine::Animator::set_logWarnings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_logWarnings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_logWarnings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_fireEvents
bool UnityEngine::Animator::get_fireEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_fireEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fireEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_fireEvents
void UnityEngine::Animator::set_fireEvents(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_fireEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fireEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_keepAnimatorControllerStateOnDisable
bool UnityEngine::Animator::get_keepAnimatorControllerStateOnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_keepAnimatorControllerStateOnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keepAnimatorControllerStateOnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_keepAnimatorControllerStateOnDisable
void UnityEngine::Animator::set_keepAnimatorControllerStateOnDisable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_keepAnimatorControllerStateOnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_keepAnimatorControllerStateOnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_keepAnimatorStateOnDisable
bool UnityEngine::Animator::get_keepAnimatorStateOnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_keepAnimatorStateOnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keepAnimatorStateOnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_keepAnimatorStateOnDisable
void UnityEngine::Animator::set_keepAnimatorStateOnDisable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_keepAnimatorStateOnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_keepAnimatorStateOnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_writeDefaultValuesOnDisable
bool UnityEngine::Animator::get_writeDefaultValuesOnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_writeDefaultValuesOnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_writeDefaultValuesOnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_writeDefaultValuesOnDisable
void UnityEngine::Animator::set_writeDefaultValuesOnDisable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_writeDefaultValuesOnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_writeDefaultValuesOnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.GetVector
::UnityEngine::Vector3 UnityEngine::Animator::GetVector(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.GetVector
::UnityEngine::Vector3 UnityEngine::Animator::GetVector(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.SetVector
void UnityEngine::Animator::SetVector(::StringW name, ::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetVector
void UnityEngine::Animator::SetVector(int id, ::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, value);
}
// Autogenerated method: UnityEngine.Animator.GetQuaternion
::UnityEngine::Quaternion UnityEngine::Animator::GetQuaternion(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.GetQuaternion
::UnityEngine::Quaternion UnityEngine::Animator::GetQuaternion(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.SetQuaternion
void UnityEngine::Animator::SetQuaternion(::StringW name, ::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetQuaternion
void UnityEngine::Animator::SetQuaternion(int id, ::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, value);
}
// Autogenerated method: UnityEngine.Animator.get_deltaPosition_Injected
void UnityEngine::Animator::get_deltaPosition_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_deltaPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Animator.get_deltaRotation_Injected
void UnityEngine::Animator::get_deltaRotation_Injected(ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_deltaRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Animator.get_velocity_Injected
void UnityEngine::Animator::get_velocity_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_velocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Animator.get_angularVelocity_Injected
void UnityEngine::Animator::get_angularVelocity_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_angularVelocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Animator.get_rootPosition_Injected
void UnityEngine::Animator::get_rootPosition_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_rootPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Animator.set_rootPosition_Injected
void UnityEngine::Animator::set_rootPosition_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_rootPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rootPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Animator.get_rootRotation_Injected
void UnityEngine::Animator::get_rootRotation_Injected(ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_rootRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Animator.set_rootRotation_Injected
void UnityEngine::Animator::set_rootRotation_Injected(ByRef<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_rootRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rootRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Animator.get_bodyPositionInternal_Injected
void UnityEngine::Animator::get_bodyPositionInternal_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_bodyPositionInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bodyPositionInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Animator.set_bodyPositionInternal_Injected
void UnityEngine::Animator::set_bodyPositionInternal_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_bodyPositionInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bodyPositionInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Animator.get_bodyRotationInternal_Injected
void UnityEngine::Animator::get_bodyRotationInternal_Injected(ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_bodyRotationInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bodyRotationInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Animator.set_bodyRotationInternal_Injected
void UnityEngine::Animator::set_bodyRotationInternal_Injected(ByRef<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_bodyRotationInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bodyRotationInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Animator.GetGoalPosition_Injected
void UnityEngine::Animator::GetGoalPosition_Injected(::UnityEngine::AvatarIKGoal goal, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetGoalPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGoalPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goal, byref(ret));
}
// Autogenerated method: UnityEngine.Animator.SetGoalPosition_Injected
void UnityEngine::Animator::SetGoalPosition_Injected(::UnityEngine::AvatarIKGoal goal, ByRef<::UnityEngine::Vector3> goalPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetGoalPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGoalPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(goalPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goal, byref(goalPosition));
}
// Autogenerated method: UnityEngine.Animator.GetGoalRotation_Injected
void UnityEngine::Animator::GetGoalRotation_Injected(::UnityEngine::AvatarIKGoal goal, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetGoalRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGoalRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goal, byref(ret));
}
// Autogenerated method: UnityEngine.Animator.SetGoalRotation_Injected
void UnityEngine::Animator::SetGoalRotation_Injected(::UnityEngine::AvatarIKGoal goal, ByRef<::UnityEngine::Quaternion> goalRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetGoalRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGoalRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(goalRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goal, byref(goalRotation));
}
// Autogenerated method: UnityEngine.Animator.GetHintPosition_Injected
void UnityEngine::Animator::GetHintPosition_Injected(::UnityEngine::AvatarIKHint hint, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetHintPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHintPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hint), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hint, byref(ret));
}
// Autogenerated method: UnityEngine.Animator.SetHintPosition_Injected
void UnityEngine::Animator::SetHintPosition_Injected(::UnityEngine::AvatarIKHint hint, ByRef<::UnityEngine::Vector3> hintPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetHintPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHintPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hint), ::il2cpp_utils::ExtractType(hintPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hint, byref(hintPosition));
}
// Autogenerated method: UnityEngine.Animator.SetLookAtPositionInternal_Injected
void UnityEngine::Animator::SetLookAtPositionInternal_Injected(ByRef<::UnityEngine::Vector3> lookAtPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetLookAtPositionInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtPositionInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lookAtPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(lookAtPosition));
}
// Autogenerated method: UnityEngine.Animator.SetBoneLocalRotationInternal_Injected
void UnityEngine::Animator::SetBoneLocalRotationInternal_Injected(int humanBoneId, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetBoneLocalRotationInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBoneLocalRotationInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanBoneId), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, humanBoneId, byref(rotation));
}
// Autogenerated method: UnityEngine.Animator.get_pivotPosition_Injected
void UnityEngine::Animator::get_pivotPosition_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_pivotPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivotPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Animator.MatchTarget_Injected
void UnityEngine::Animator::MatchTarget_Injected(ByRef<::UnityEngine::Vector3> matchPosition, ByRef<::UnityEngine::Quaternion> matchRotation, int targetBodyPart, ByRef<::UnityEngine::MatchTargetWeightMask> weightMask, float startNormalizedTime, float targetNormalizedTime, bool completeMatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::MatchTarget_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchTarget_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matchPosition), ::il2cpp_utils::ExtractType(matchRotation), ::il2cpp_utils::ExtractType(targetBodyPart), ::il2cpp_utils::ExtractType(weightMask), ::il2cpp_utils::ExtractType(startNormalizedTime), ::il2cpp_utils::ExtractType(targetNormalizedTime), ::il2cpp_utils::ExtractType(completeMatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(matchPosition), byref(matchRotation), targetBodyPart, byref(weightMask), startNormalizedTime, targetNormalizedTime, completeMatch);
}
// Autogenerated method: UnityEngine.Animator.get_targetPosition_Injected
void UnityEngine::Animator::get_targetPosition_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_targetPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Animator.get_targetRotation_Injected
void UnityEngine::Animator::get_targetRotation_Injected(ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_targetRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AnimatorControllerParameter
#include "UnityEngine/AnimatorControllerParameter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String m_Name
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::AnimatorControllerParameter::dyn_m_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameter::dyn_m_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.AnimatorControllerParameterType m_Type
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimatorControllerParameterType& UnityEngine::AnimatorControllerParameter::dyn_m_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameter::dyn_m_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimatorControllerParameterType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_DefaultFloat
[[deprecated("Use field access instead!")]] float& UnityEngine::AnimatorControllerParameter::dyn_m_DefaultFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameter::dyn_m_DefaultFloat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DefaultFloat"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_DefaultInt
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorControllerParameter::dyn_m_DefaultInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameter::dyn_m_DefaultInt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DefaultInt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_DefaultBool
[[deprecated("Use field access instead!")]] bool& UnityEngine::AnimatorControllerParameter::dyn_m_DefaultBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameter::dyn_m_DefaultBool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DefaultBool"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AnimatorControllerParameter.get_name
::StringW UnityEngine::AnimatorControllerParameter::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameter::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimatorControllerParameter.get_nameHash
int UnityEngine::AnimatorControllerParameter::get_nameHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameter::get_nameHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nameHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimatorControllerParameter.get_type
::UnityEngine::AnimatorControllerParameterType UnityEngine::AnimatorControllerParameter::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameter::get_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimatorControllerParameterType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimatorControllerParameter.Equals
bool UnityEngine::AnimatorControllerParameter::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameter::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: UnityEngine.AnimatorControllerParameter.GetHashCode
int UnityEngine::AnimatorControllerParameter::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorControllerParameter::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorOverrideController
#include "UnityEngine/AnimatorOverrideController.hpp"
// Including type: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback
#include "UnityEngine/AnimatorOverrideController_OnOverrideControllerDirtyCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback OnOverrideControllerDirty
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback*& UnityEngine::AnimatorOverrideController::dyn_OnOverrideControllerDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorOverrideController::dyn_OnOverrideControllerDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnOverrideControllerDirty"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController.OnInvalidateOverrideController
void UnityEngine::AnimatorOverrideController::OnInvalidateOverrideController(::UnityEngine::AnimatorOverrideController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorOverrideController::OnInvalidateOverrideController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AnimatorOverrideController", "OnInvalidateOverrideController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controller);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback
#include "UnityEngine/AnimatorOverrideController_OnOverrideControllerDirtyCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback.Invoke
void UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.HumanBodyBones
#include "UnityEngine/HumanBodyBones.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Hips
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Hips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_Hips");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Hips"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Hips
void UnityEngine::HumanBodyBones::_set_Hips(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_Hips");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Hips", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftUpperLeg
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftUpperLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftUpperLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftUpperLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftUpperLeg
void UnityEngine::HumanBodyBones::_set_LeftUpperLeg(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftUpperLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftUpperLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightUpperLeg
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightUpperLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightUpperLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightUpperLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightUpperLeg
void UnityEngine::HumanBodyBones::_set_RightUpperLeg(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightUpperLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightUpperLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLowerLeg
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLowerLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftLowerLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLowerLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLowerLeg
void UnityEngine::HumanBodyBones::_set_LeftLowerLeg(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftLowerLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLowerLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLowerLeg
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLowerLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightLowerLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLowerLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLowerLeg
void UnityEngine::HumanBodyBones::_set_RightLowerLeg(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightLowerLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLowerLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftFoot
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftFoot
void UnityEngine::HumanBodyBones::_set_LeftFoot(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightFoot
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightFoot
void UnityEngine::HumanBodyBones::_set_RightFoot(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Spine
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Spine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_Spine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Spine"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Spine
void UnityEngine::HumanBodyBones::_set_Spine(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_Spine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Spine", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Chest
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Chest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_Chest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Chest"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Chest
void UnityEngine::HumanBodyBones::_set_Chest(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_Chest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Chest", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones UpperChest
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_UpperChest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_UpperChest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "UpperChest"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones UpperChest
void UnityEngine::HumanBodyBones::_set_UpperChest(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_UpperChest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "UpperChest", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Neck
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Neck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_Neck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Neck"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Neck
void UnityEngine::HumanBodyBones::_set_Neck(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_Neck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Neck", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Head
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Head"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Head
void UnityEngine::HumanBodyBones::_set_Head(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftShoulder
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftShoulder"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftShoulder
void UnityEngine::HumanBodyBones::_set_LeftShoulder(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightShoulder
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightShoulder"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightShoulder
void UnityEngine::HumanBodyBones::_set_RightShoulder(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftUpperArm
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftUpperArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftUpperArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftUpperArm
void UnityEngine::HumanBodyBones::_set_LeftUpperArm(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftUpperArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftUpperArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightUpperArm
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightUpperArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightUpperArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightUpperArm
void UnityEngine::HumanBodyBones::_set_RightUpperArm(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightUpperArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightUpperArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLowerArm
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLowerArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftLowerArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLowerArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLowerArm
void UnityEngine::HumanBodyBones::_set_LeftLowerArm(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftLowerArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLowerArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLowerArm
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLowerArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightLowerArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLowerArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLowerArm
void UnityEngine::HumanBodyBones::_set_RightLowerArm(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightLowerArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLowerArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftHand
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftHand
void UnityEngine::HumanBodyBones::_set_LeftHand(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightHand
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightHand
void UnityEngine::HumanBodyBones::_set_RightHand(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftToes
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftToes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftToes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftToes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftToes
void UnityEngine::HumanBodyBones::_set_LeftToes(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftToes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftToes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightToes
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightToes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightToes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightToes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightToes
void UnityEngine::HumanBodyBones::_set_RightToes(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightToes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightToes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftEye
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftEye
void UnityEngine::HumanBodyBones::_set_LeftEye(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightEye
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightEye
void UnityEngine::HumanBodyBones::_set_RightEye(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Jaw
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Jaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_Jaw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Jaw"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Jaw
void UnityEngine::HumanBodyBones::_set_Jaw(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_Jaw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Jaw", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftThumbProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftThumbProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftThumbProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftThumbProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftThumbProximal
void UnityEngine::HumanBodyBones::_set_LeftThumbProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftThumbProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftThumbProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftThumbIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftThumbIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftThumbIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftThumbIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftThumbIntermediate
void UnityEngine::HumanBodyBones::_set_LeftThumbIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftThumbIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftThumbIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftThumbDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftThumbDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftThumbDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftThumbDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftThumbDistal
void UnityEngine::HumanBodyBones::_set_LeftThumbDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftThumbDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftThumbDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftIndexProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftIndexProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftIndexProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftIndexProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftIndexProximal
void UnityEngine::HumanBodyBones::_set_LeftIndexProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftIndexProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftIndexProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftIndexIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftIndexIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftIndexIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftIndexIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftIndexIntermediate
void UnityEngine::HumanBodyBones::_set_LeftIndexIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftIndexIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftIndexIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftIndexDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftIndexDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftIndexDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftIndexDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftIndexDistal
void UnityEngine::HumanBodyBones::_set_LeftIndexDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftIndexDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftIndexDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftMiddleProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftMiddleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftMiddleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftMiddleProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftMiddleProximal
void UnityEngine::HumanBodyBones::_set_LeftMiddleProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftMiddleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftMiddleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftMiddleIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftMiddleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftMiddleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftMiddleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftMiddleIntermediate
void UnityEngine::HumanBodyBones::_set_LeftMiddleIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftMiddleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftMiddleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftMiddleDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftMiddleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftMiddleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftMiddleDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftMiddleDistal
void UnityEngine::HumanBodyBones::_set_LeftMiddleDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftMiddleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftMiddleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftRingProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftRingProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftRingProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftRingProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftRingProximal
void UnityEngine::HumanBodyBones::_set_LeftRingProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftRingProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftRingProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftRingIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftRingIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftRingIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftRingIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftRingIntermediate
void UnityEngine::HumanBodyBones::_set_LeftRingIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftRingIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftRingIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftRingDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftRingDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftRingDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftRingDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftRingDistal
void UnityEngine::HumanBodyBones::_set_LeftRingDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftRingDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftRingDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLittleProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLittleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftLittleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLittleProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLittleProximal
void UnityEngine::HumanBodyBones::_set_LeftLittleProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftLittleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLittleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLittleIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLittleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftLittleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLittleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLittleIntermediate
void UnityEngine::HumanBodyBones::_set_LeftLittleIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftLittleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLittleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLittleDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLittleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftLittleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLittleDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLittleDistal
void UnityEngine::HumanBodyBones::_set_LeftLittleDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftLittleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLittleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightThumbProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightThumbProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightThumbProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightThumbProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightThumbProximal
void UnityEngine::HumanBodyBones::_set_RightThumbProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightThumbProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightThumbProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightThumbIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightThumbIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightThumbIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightThumbIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightThumbIntermediate
void UnityEngine::HumanBodyBones::_set_RightThumbIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightThumbIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightThumbIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightThumbDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightThumbDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightThumbDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightThumbDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightThumbDistal
void UnityEngine::HumanBodyBones::_set_RightThumbDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightThumbDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightThumbDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightIndexProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightIndexProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightIndexProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightIndexProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightIndexProximal
void UnityEngine::HumanBodyBones::_set_RightIndexProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightIndexProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightIndexProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightIndexIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightIndexIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightIndexIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightIndexIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightIndexIntermediate
void UnityEngine::HumanBodyBones::_set_RightIndexIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightIndexIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightIndexIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightIndexDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightIndexDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightIndexDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightIndexDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightIndexDistal
void UnityEngine::HumanBodyBones::_set_RightIndexDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightIndexDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightIndexDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightMiddleProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightMiddleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightMiddleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightMiddleProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightMiddleProximal
void UnityEngine::HumanBodyBones::_set_RightMiddleProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightMiddleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightMiddleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightMiddleIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightMiddleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightMiddleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightMiddleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightMiddleIntermediate
void UnityEngine::HumanBodyBones::_set_RightMiddleIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightMiddleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightMiddleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightMiddleDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightMiddleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightMiddleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightMiddleDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightMiddleDistal
void UnityEngine::HumanBodyBones::_set_RightMiddleDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightMiddleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightMiddleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightRingProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightRingProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightRingProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightRingProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightRingProximal
void UnityEngine::HumanBodyBones::_set_RightRingProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightRingProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightRingProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightRingIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightRingIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightRingIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightRingIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightRingIntermediate
void UnityEngine::HumanBodyBones::_set_RightRingIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightRingIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightRingIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightRingDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightRingDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightRingDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightRingDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightRingDistal
void UnityEngine::HumanBodyBones::_set_RightRingDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightRingDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightRingDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLittleProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLittleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightLittleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLittleProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLittleProximal
void UnityEngine::HumanBodyBones::_set_RightLittleProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightLittleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLittleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLittleIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLittleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightLittleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLittleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLittleIntermediate
void UnityEngine::HumanBodyBones::_set_RightLittleIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightLittleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLittleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLittleDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLittleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightLittleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLittleDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLittleDistal
void UnityEngine::HumanBodyBones::_set_RightLittleDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightLittleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLittleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LastBone
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LastBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LastBone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LastBone"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LastBone
void UnityEngine::HumanBodyBones::_set_LastBone(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LastBone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LastBone", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::HumanBodyBones::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Avatar
#include "UnityEngine/Avatar.hpp"
// Including type: UnityEngine.HumanDescription
#include "UnityEngine/HumanDescription.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Avatar.get_isValid
bool UnityEngine::Avatar::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Avatar::get_isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Avatar.get_isHuman
bool UnityEngine::Avatar::get_isHuman() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Avatar::get_isHuman");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isHuman", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Avatar.get_humanDescription
::UnityEngine::HumanDescription UnityEngine::Avatar::get_humanDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Avatar::get_humanDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_humanDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::HumanDescription, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Avatar.get_humanDescription_Injected
void UnityEngine::Avatar::get_humanDescription_Injected(ByRef<::UnityEngine::HumanDescription> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Avatar::get_humanDescription_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_humanDescription_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::HumanDescription&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AvatarMaskBodyPart
#include "UnityEngine/AvatarMaskBodyPart.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart Root
::UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_get_Root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "Root"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart Root
void UnityEngine::AvatarMaskBodyPart::_set_Root(::UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_set_Root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "Root", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart Body
::UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_get_Body");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "Body"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart Body
void UnityEngine::AvatarMaskBodyPart::_set_Body(::UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_set_Body");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "Body", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart Head
::UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "Head"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart Head
void UnityEngine::AvatarMaskBodyPart::_set_Head(::UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart LeftLeg
::UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_LeftLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_get_LeftLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "LeftLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart LeftLeg
void UnityEngine::AvatarMaskBodyPart::_set_LeftLeg(::UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_set_LeftLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "LeftLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart RightLeg
::UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_RightLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_get_RightLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "RightLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart RightLeg
void UnityEngine::AvatarMaskBodyPart::_set_RightLeg(::UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_set_RightLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "RightLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart LeftArm
::UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_LeftArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_get_LeftArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "LeftArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart LeftArm
void UnityEngine::AvatarMaskBodyPart::_set_LeftArm(::UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_set_LeftArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "LeftArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart RightArm
::UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_RightArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_get_RightArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "RightArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart RightArm
void UnityEngine::AvatarMaskBodyPart::_set_RightArm(::UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_set_RightArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "RightArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart LeftFingers
::UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_LeftFingers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_get_LeftFingers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "LeftFingers"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart LeftFingers
void UnityEngine::AvatarMaskBodyPart::_set_LeftFingers(::UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_set_LeftFingers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "LeftFingers", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart RightFingers
::UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_RightFingers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_get_RightFingers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "RightFingers"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart RightFingers
void UnityEngine::AvatarMaskBodyPart::_set_RightFingers(::UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_set_RightFingers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "RightFingers", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart LeftFootIK
::UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_LeftFootIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_get_LeftFootIK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "LeftFootIK"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart LeftFootIK
void UnityEngine::AvatarMaskBodyPart::_set_LeftFootIK(::UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_set_LeftFootIK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "LeftFootIK", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart RightFootIK
::UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_RightFootIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_get_RightFootIK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "RightFootIK"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart RightFootIK
void UnityEngine::AvatarMaskBodyPart::_set_RightFootIK(::UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_set_RightFootIK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "RightFootIK", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart LeftHandIK
::UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_LeftHandIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_get_LeftHandIK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "LeftHandIK"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart LeftHandIK
void UnityEngine::AvatarMaskBodyPart::_set_LeftHandIK(::UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_set_LeftHandIK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "LeftHandIK", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart RightHandIK
::UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_RightHandIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_get_RightHandIK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "RightHandIK"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart RightHandIK
void UnityEngine::AvatarMaskBodyPart::_set_RightHandIK(::UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_set_RightHandIK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "RightHandIK", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart LastBodyPart
::UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_LastBodyPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_get_LastBodyPart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "LastBodyPart"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart LastBodyPart
void UnityEngine::AvatarMaskBodyPart::_set_LastBodyPart(::UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::_set_LastBodyPart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "LastBodyPart", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AvatarMaskBodyPart::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMaskBodyPart::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AvatarMask
#include "UnityEngine/AvatarMask.hpp"
// Including type: UnityEngine.AvatarMaskBodyPart
#include "UnityEngine/AvatarMaskBodyPart.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AvatarMask.GetHumanoidBodyPartActive
bool UnityEngine::AvatarMask::GetHumanoidBodyPartActive(::UnityEngine::AvatarMaskBodyPart index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMask::GetHumanoidBodyPartActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHumanoidBodyPartActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.AvatarMask.get_transformCount
int UnityEngine::AvatarMask::get_transformCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMask::get_transformCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transformCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AvatarMask.GetTransformPath
::StringW UnityEngine::AvatarMask::GetTransformPath(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMask::GetTransformPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransformPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.AvatarMask.GetTransformWeight
float UnityEngine::AvatarMask::GetTransformWeight(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMask::GetTransformWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransformWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.AvatarMask.GetTransformActive
bool UnityEngine::AvatarMask::GetTransformActive(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarMask::GetTransformActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransformActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.HumanTrait
#include "UnityEngine/HumanTrait.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.HumanTrait.GetBoneIndexFromMono
int UnityEngine::HumanTrait::GetBoneIndexFromMono(int humanId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanTrait::GetBoneIndexFromMono");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "HumanTrait", "GetBoneIndexFromMono", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, humanId);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Motion
#include "UnityEngine/Motion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <isAnimatorMotion>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Motion::dyn_$isAnimatorMotion$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Motion::dyn_$isAnimatorMotion$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isAnimatorMotion>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Motion.get_isLooping
bool UnityEngine::Motion::get_isLooping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Motion::get_isLooping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isLooping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.RuntimeAnimatorController
#include "UnityEngine/RuntimeAnimatorController.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.RuntimeAnimatorController.get_animationClips
::ArrayW<::UnityEngine::AnimationClip*> UnityEngine::RuntimeAnimatorController::get_animationClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeAnimatorController::get_animationClips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::AnimationClip*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.Animations.AnimationStreamSource
#include "UnityEngine/Experimental/Animations/AnimationStreamSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.Animations.AnimationStreamSource DefaultValues
::UnityEngine::Experimental::Animations::AnimationStreamSource UnityEngine::Experimental::Animations::AnimationStreamSource::_get_DefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationStreamSource::_get_DefaultValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::Animations::AnimationStreamSource>("UnityEngine.Experimental.Animations", "AnimationStreamSource", "DefaultValues"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.Animations.AnimationStreamSource DefaultValues
void UnityEngine::Experimental::Animations::AnimationStreamSource::_set_DefaultValues(::UnityEngine::Experimental::Animations::AnimationStreamSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationStreamSource::_set_DefaultValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.Animations", "AnimationStreamSource", "DefaultValues", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.Animations.AnimationStreamSource PreviousInputs
::UnityEngine::Experimental::Animations::AnimationStreamSource UnityEngine::Experimental::Animations::AnimationStreamSource::_get_PreviousInputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationStreamSource::_get_PreviousInputs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::Animations::AnimationStreamSource>("UnityEngine.Experimental.Animations", "AnimationStreamSource", "PreviousInputs"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.Animations.AnimationStreamSource PreviousInputs
void UnityEngine::Experimental::Animations::AnimationStreamSource::_set_PreviousInputs(::UnityEngine::Experimental::Animations::AnimationStreamSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationStreamSource::_set_PreviousInputs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.Animations", "AnimationStreamSource", "PreviousInputs", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Experimental::Animations::AnimationStreamSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationStreamSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.Animations.AnimationPlayableOutputExtensions
#include "UnityEngine/Experimental/Animations/AnimationPlayableOutputExtensions.hpp"
// Including type: UnityEngine.Animations.AnimationPlayableOutput
#include "UnityEngine/Animations/AnimationPlayableOutput.hpp"
// Including type: UnityEngine.Experimental.Animations.AnimationStreamSource
#include "UnityEngine/Experimental/Animations/AnimationStreamSource.hpp"
// Including type: UnityEngine.Playables.PlayableOutputHandle
#include "UnityEngine/Playables/PlayableOutputHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.Animations.AnimationPlayableOutputExtensions.SetAnimationStreamSource
void UnityEngine::Experimental::Animations::AnimationPlayableOutputExtensions::SetAnimationStreamSource(::UnityEngine::Animations::AnimationPlayableOutput output, ::UnityEngine::Experimental::Animations::AnimationStreamSource streamSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationPlayableOutputExtensions::SetAnimationStreamSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.Animations", "AnimationPlayableOutputExtensions", "SetAnimationStreamSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(streamSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, output, streamSource);
}
// Autogenerated method: UnityEngine.Experimental.Animations.AnimationPlayableOutputExtensions.SetSortingOrder
void UnityEngine::Experimental::Animations::AnimationPlayableOutputExtensions::SetSortingOrder(::UnityEngine::Animations::AnimationPlayableOutput output, uint16_t sortingOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationPlayableOutputExtensions::SetSortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.Animations", "AnimationPlayableOutputExtensions", "SetSortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(sortingOrder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, output, sortingOrder);
}
// Autogenerated method: UnityEngine.Experimental.Animations.AnimationPlayableOutputExtensions.InternalSetAnimationStreamSource
void UnityEngine::Experimental::Animations::AnimationPlayableOutputExtensions::InternalSetAnimationStreamSource(::UnityEngine::Playables::PlayableOutputHandle output, ::UnityEngine::Experimental::Animations::AnimationStreamSource streamSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationPlayableOutputExtensions::InternalSetAnimationStreamSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.Animations", "AnimationPlayableOutputExtensions", "InternalSetAnimationStreamSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(streamSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, output, streamSource);
}
// Autogenerated method: UnityEngine.Experimental.Animations.AnimationPlayableOutputExtensions.InternalSetSortingOrder
void UnityEngine::Experimental::Animations::AnimationPlayableOutputExtensions::InternalSetSortingOrder(::UnityEngine::Playables::PlayableOutputHandle output, int sortingOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationPlayableOutputExtensions::InternalSetSortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.Animations", "AnimationPlayableOutputExtensions", "InternalSetSortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(sortingOrder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, output, sortingOrder);
}
// Autogenerated method: UnityEngine.Experimental.Animations.AnimationPlayableOutputExtensions.InternalSetAnimationStreamSource_Injected
void UnityEngine::Experimental::Animations::AnimationPlayableOutputExtensions::InternalSetAnimationStreamSource_Injected(ByRef<::UnityEngine::Playables::PlayableOutputHandle> output, ::UnityEngine::Experimental::Animations::AnimationStreamSource streamSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationPlayableOutputExtensions::InternalSetAnimationStreamSource_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.Animations", "AnimationPlayableOutputExtensions", "InternalSetAnimationStreamSource_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(streamSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(output), streamSource);
}
// Autogenerated method: UnityEngine.Experimental.Animations.AnimationPlayableOutputExtensions.InternalSetSortingOrder_Injected
void UnityEngine::Experimental::Animations::AnimationPlayableOutputExtensions::InternalSetSortingOrder_Injected(ByRef<::UnityEngine::Playables::PlayableOutputHandle> output, int sortingOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationPlayableOutputExtensions::InternalSetSortingOrder_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.Animations", "AnimationPlayableOutputExtensions", "InternalSetSortingOrder_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(sortingOrder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(output), sortingOrder);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationPlayableBinding
#include "UnityEngine/Animations/AnimationPlayableBinding.hpp"
// Including type: UnityEngine.Playables.PlayableBinding
#include "UnityEngine/Playables/PlayableBinding.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.AnimationPlayableBinding.Create
::UnityEngine::Playables::PlayableBinding UnityEngine::Animations::AnimationPlayableBinding::Create(::StringW name, ::UnityEngine::Object* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableBinding::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableBinding", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableBinding, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, key);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableBinding.CreateAnimationOutput
::UnityEngine::Playables::PlayableOutput UnityEngine::Animations::AnimationPlayableBinding::CreateAnimationOutput(::UnityEngine::Playables::PlayableGraph graph, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableBinding::CreateAnimationOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableBinding", "CreateAnimationOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, name);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.IAnimationJob
#include "UnityEngine/Animations/IAnimationJob.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.IAnimationJob.ProcessAnimation
void UnityEngine::Animations::IAnimationJob::ProcessAnimation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::IAnimationJob::ProcessAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::IAnimationJob*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.IAnimationJob.ProcessRootMotion
void UnityEngine::Animations::IAnimationJob::ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::IAnimationJob::ProcessRootMotion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::IAnimationJob*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.IAnimationWindowPreview
#include "UnityEngine/Animations/IAnimationWindowPreview.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.IAnimationWindowPreview.UpdatePreviewGraph
void UnityEngine::Animations::IAnimationWindowPreview::UpdatePreviewGraph(::UnityEngine::Playables::PlayableGraph graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::IAnimationWindowPreview::UpdatePreviewGraph");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::IAnimationWindowPreview*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.NotKeyableAttribute
#include "UnityEngine/Animations/NotKeyableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.JobMethodIndex
#include "UnityEngine/Animations/JobMethodIndex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.JobMethodIndex ProcessRootMotionMethodIndex
::UnityEngine::Animations::JobMethodIndex UnityEngine::Animations::JobMethodIndex::_get_ProcessRootMotionMethodIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::JobMethodIndex::_get_ProcessRootMotionMethodIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::JobMethodIndex>("UnityEngine.Animations", "JobMethodIndex", "ProcessRootMotionMethodIndex"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.JobMethodIndex ProcessRootMotionMethodIndex
void UnityEngine::Animations::JobMethodIndex::_set_ProcessRootMotionMethodIndex(::UnityEngine::Animations::JobMethodIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::JobMethodIndex::_set_ProcessRootMotionMethodIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "JobMethodIndex", "ProcessRootMotionMethodIndex", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.JobMethodIndex ProcessAnimationMethodIndex
::UnityEngine::Animations::JobMethodIndex UnityEngine::Animations::JobMethodIndex::_get_ProcessAnimationMethodIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::JobMethodIndex::_get_ProcessAnimationMethodIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::JobMethodIndex>("UnityEngine.Animations", "JobMethodIndex", "ProcessAnimationMethodIndex"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.JobMethodIndex ProcessAnimationMethodIndex
void UnityEngine::Animations::JobMethodIndex::_set_ProcessAnimationMethodIndex(::UnityEngine::Animations::JobMethodIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::JobMethodIndex::_set_ProcessAnimationMethodIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "JobMethodIndex", "ProcessAnimationMethodIndex", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.JobMethodIndex MethodIndexCount
::UnityEngine::Animations::JobMethodIndex UnityEngine::Animations::JobMethodIndex::_get_MethodIndexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::JobMethodIndex::_get_MethodIndexCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::JobMethodIndex>("UnityEngine.Animations", "JobMethodIndex", "MethodIndexCount"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.JobMethodIndex MethodIndexCount
void UnityEngine::Animations::JobMethodIndex::_set_MethodIndexCount(::UnityEngine::Animations::JobMethodIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::JobMethodIndex::_set_MethodIndexCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "JobMethodIndex", "MethodIndexCount", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::JobMethodIndex::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::JobMethodIndex::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationClipPlayable
#include "UnityEngine/Animations/AnimationClipPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimationClipPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.Create
::UnityEngine::Animations::AnimationClipPlayable UnityEngine::Animations::AnimationClipPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationClipPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, clip);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.CreateHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationClipPlayable::CreateHandle(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, clip);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationClipPlayable::AnimationClipPlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationClipPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationClipPlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.Equals
bool UnityEngine::Animations::AnimationClipPlayable::Equals(::UnityEngine::Animations::AnimationClipPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationClipPlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetApplyFootIK
void UnityEngine::Animations::AnimationClipPlayable::SetApplyFootIK(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::SetApplyFootIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetApplyFootIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetRemoveStartOffset
void UnityEngine::Animations::AnimationClipPlayable::SetRemoveStartOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::SetRemoveStartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetRemoveStartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetOverrideLoopTime
void UnityEngine::Animations::AnimationClipPlayable::SetOverrideLoopTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::SetOverrideLoopTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetOverrideLoopTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetLoopTime
void UnityEngine::Animations::AnimationClipPlayable::SetLoopTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::SetLoopTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLoopTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationClipPlayable::CreateHandleInternal(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::AnimationClip* clip, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, clip, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetApplyFootIKInternal
void UnityEngine::Animations::AnimationClipPlayable::SetApplyFootIKInternal(ByRef<::UnityEngine::Playables::PlayableHandle> handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::SetApplyFootIKInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "SetApplyFootIKInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle), value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetRemoveStartOffsetInternal
void UnityEngine::Animations::AnimationClipPlayable::SetRemoveStartOffsetInternal(ByRef<::UnityEngine::Playables::PlayableHandle> handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::SetRemoveStartOffsetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "SetRemoveStartOffsetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle), value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetOverrideLoopTimeInternal
void UnityEngine::Animations::AnimationClipPlayable::SetOverrideLoopTimeInternal(ByRef<::UnityEngine::Playables::PlayableHandle> handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::SetOverrideLoopTimeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "SetOverrideLoopTimeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle), value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetLoopTimeInternal
void UnityEngine::Animations::AnimationClipPlayable::SetLoopTimeInternal(ByRef<::UnityEngine::Playables::PlayableHandle> handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::SetLoopTimeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "SetLoopTimeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle), value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationClipPlayable::CreateHandleInternal_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> graph, ::UnityEngine::AnimationClip* clip, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), clip, byref(handle));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationLayerMixerPlayable
#include "UnityEngine/Animations/AnimationLayerMixerPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.AvatarMask
#include "UnityEngine/AvatarMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationLayerMixerPlayable m_NullPlayable
::UnityEngine::Animations::AnimationLayerMixerPlayable UnityEngine::Animations::AnimationLayerMixerPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::AnimationLayerMixerPlayable>("UnityEngine.Animations", "AnimationLayerMixerPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationLayerMixerPlayable m_NullPlayable
void UnityEngine::Animations::AnimationLayerMixerPlayable::_set_m_NullPlayable(::UnityEngine::Animations::AnimationLayerMixerPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationLayerMixerPlayable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimationLayerMixerPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.Create
::UnityEngine::Animations::AnimationLayerMixerPlayable UnityEngine::Animations::AnimationLayerMixerPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, int inputCount, bool singleLayerOptimization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(singleLayerOptimization)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationLayerMixerPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, inputCount, singleLayerOptimization);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.CreateHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandle(::UnityEngine::Playables::PlayableGraph graph, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable..ctor
UnityEngine::Animations::AnimationLayerMixerPlayable::AnimationLayerMixerPlayable(::UnityEngine::Playables::PlayableHandle handle, bool singleLayerOptimization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(singleLayerOptimization)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle, singleLayerOptimization);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationLayerMixerPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationLayerMixerPlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.Equals
bool UnityEngine::Animations::AnimationLayerMixerPlayable::Equals(::UnityEngine::Animations::AnimationLayerMixerPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationLayerMixerPlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.SetLayerMaskFromAvatarMask
void UnityEngine::Animations::AnimationLayerMixerPlayable::SetLayerMaskFromAvatarMask(uint layerIndex, ::UnityEngine::AvatarMask* mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::SetLayerMaskFromAvatarMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLayerMaskFromAvatarMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(mask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layerIndex, mask);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandleInternal(::UnityEngine::Playables::PlayableGraph graph, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.SetSingleLayerOptimizationInternal
void UnityEngine::Animations::AnimationLayerMixerPlayable::SetSingleLayerOptimizationInternal(ByRef<::UnityEngine::Playables::PlayableHandle> handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::SetSingleLayerOptimizationInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "SetSingleLayerOptimizationInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle), value);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.SetLayerMaskFromAvatarMaskInternal
void UnityEngine::Animations::AnimationLayerMixerPlayable::SetLayerMaskFromAvatarMaskInternal(ByRef<::UnityEngine::Playables::PlayableHandle> handle, uint layerIndex, ::UnityEngine::AvatarMask* mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::SetLayerMaskFromAvatarMaskInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "SetLayerMaskFromAvatarMaskInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(mask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle), layerIndex, mask);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable..cctor
void UnityEngine::Animations::AnimationLayerMixerPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandleInternal_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> graph, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), byref(handle));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationMixerPlayable
#include "UnityEngine/Animations/AnimationMixerPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationMixerPlayable m_NullPlayable
::UnityEngine::Animations::AnimationMixerPlayable UnityEngine::Animations::AnimationMixerPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::AnimationMixerPlayable>("UnityEngine.Animations", "AnimationMixerPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationMixerPlayable m_NullPlayable
void UnityEngine::Animations::AnimationMixerPlayable::_set_m_NullPlayable(::UnityEngine::Animations::AnimationMixerPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationMixerPlayable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimationMixerPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.Create
::UnityEngine::Animations::AnimationMixerPlayable UnityEngine::Animations::AnimationMixerPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationMixerPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.CreateHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationMixerPlayable::CreateHandle(::UnityEngine::Playables::PlayableGraph graph, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationMixerPlayable::AnimationMixerPlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationMixerPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationMixerPlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.Equals
bool UnityEngine::Animations::AnimationMixerPlayable::Equals(::UnityEngine::Animations::AnimationMixerPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationMixerPlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationMixerPlayable::CreateHandleInternal(::UnityEngine::Playables::PlayableGraph graph, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable..cctor
void UnityEngine::Animations::AnimationMixerPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationMixerPlayable::CreateHandleInternal_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> graph, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), byref(handle));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationMotionXToDeltaPlayable
#include "UnityEngine/Animations/AnimationMotionXToDeltaPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationMotionXToDeltaPlayable m_NullPlayable
::UnityEngine::Animations::AnimationMotionXToDeltaPlayable UnityEngine::Animations::AnimationMotionXToDeltaPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::AnimationMotionXToDeltaPlayable>("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationMotionXToDeltaPlayable m_NullPlayable
void UnityEngine::Animations::AnimationMotionXToDeltaPlayable::_set_m_NullPlayable(::UnityEngine::Animations::AnimationMotionXToDeltaPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimationMotionXToDeltaPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.Create
::UnityEngine::Animations::AnimationMotionXToDeltaPlayable UnityEngine::Animations::AnimationMotionXToDeltaPlayable::Create(::UnityEngine::Playables::PlayableGraph graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationMotionXToDeltaPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.CreateHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandle(::UnityEngine::Playables::PlayableGraph graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationMotionXToDeltaPlayable::AnimationMotionXToDeltaPlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationMotionXToDeltaPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationMotionXToDeltaPlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.Equals
bool UnityEngine::Animations::AnimationMotionXToDeltaPlayable::Equals(::UnityEngine::Animations::AnimationMotionXToDeltaPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationMotionXToDeltaPlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.SetAbsoluteMotion
void UnityEngine::Animations::AnimationMotionXToDeltaPlayable::SetAbsoluteMotion(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::SetAbsoluteMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetAbsoluteMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandleInternal(::UnityEngine::Playables::PlayableGraph graph, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.SetAbsoluteMotionInternal
void UnityEngine::Animations::AnimationMotionXToDeltaPlayable::SetAbsoluteMotionInternal(ByRef<::UnityEngine::Playables::PlayableHandle> handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::SetAbsoluteMotionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "SetAbsoluteMotionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle), value);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable..cctor
void UnityEngine::Animations::AnimationMotionXToDeltaPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandleInternal_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> graph, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), byref(handle));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationOffsetPlayable
#include "UnityEngine/Animations/AnimationOffsetPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationOffsetPlayable m_NullPlayable
::UnityEngine::Animations::AnimationOffsetPlayable UnityEngine::Animations::AnimationOffsetPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::AnimationOffsetPlayable>("UnityEngine.Animations", "AnimationOffsetPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationOffsetPlayable m_NullPlayable
void UnityEngine::Animations::AnimationOffsetPlayable::_set_m_NullPlayable(::UnityEngine::Animations::AnimationOffsetPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationOffsetPlayable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimationOffsetPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.Create
::UnityEngine::Animations::AnimationOffsetPlayable UnityEngine::Animations::AnimationOffsetPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationOffsetPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, position, rotation, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.CreateHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationOffsetPlayable::CreateHandle(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, position, rotation, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationOffsetPlayable::AnimationOffsetPlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationOffsetPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationOffsetPlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.Equals
bool UnityEngine::Animations::AnimationOffsetPlayable::Equals(::UnityEngine::Animations::AnimationOffsetPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationOffsetPlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationOffsetPlayable::CreateHandleInternal(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, position, rotation, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable..cctor
void UnityEngine::Animations::AnimationOffsetPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationOffsetPlayable::CreateHandleInternal_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> graph, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), byref(position), byref(rotation), byref(handle));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationPlayableExtensions
#include "UnityEngine/Animations/AnimationPlayableExtensions.hpp"
// Including type: UnityEngine.Playables.IPlayable
#include "UnityEngine/Playables/IPlayable.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Playables.PlayableHandle
#include "UnityEngine/Playables/PlayableHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.AnimationPlayableExtensions.SetAnimatedPropertiesInternal
void UnityEngine::Animations::AnimationPlayableExtensions::SetAnimatedPropertiesInternal(ByRef<::UnityEngine::Playables::PlayableHandle> playable, ::UnityEngine::AnimationClip* animatedProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableExtensions::SetAnimatedPropertiesInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableExtensions", "SetAnimatedPropertiesInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(animatedProperties)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(playable), animatedProperties);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationPlayableGraphExtensions
#include "UnityEngine/Animations/AnimationPlayableGraphExtensions.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.PlayableOutputHandle
#include "UnityEngine/Playables/PlayableOutputHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.AnimationPlayableGraphExtensions.InternalCreateAnimationOutput
bool UnityEngine::Animations::AnimationPlayableGraphExtensions::InternalCreateAnimationOutput(ByRef<::UnityEngine::Playables::PlayableGraph> graph, ::StringW name, ByRef<::UnityEngine::Playables::PlayableOutputHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableGraphExtensions::InternalCreateAnimationOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableGraphExtensions", "InternalCreateAnimationOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Playables::PlayableOutputHandle&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), name, byref(handle));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationPlayableOutput
#include "UnityEngine/Animations/AnimationPlayableOutput.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableOutputHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableOutputHandle& UnityEngine::Animations::AnimationPlayableOutput::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableOutputHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.Create
::UnityEngine::Animations::AnimationPlayableOutput UnityEngine::Animations::AnimationPlayableOutput::Create(::UnityEngine::Playables::PlayableGraph graph, ::StringW name, ::UnityEngine::Animator* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableOutput", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationPlayableOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, name, target);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationPlayableOutput::AnimationPlayableOutput(::UnityEngine::Playables::PlayableOutputHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.get_Null
::UnityEngine::Animations::AnimationPlayableOutput UnityEngine::Animations::AnimationPlayableOutput::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::get_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableOutput", "get_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationPlayableOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.GetHandle
::UnityEngine::Playables::PlayableOutputHandle UnityEngine::Animations::AnimationPlayableOutput::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationPlayableOutput), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableOutputHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.op_Explicit
UnityEngine::Animations::AnimationPlayableOutput::AnimationPlayableOutput(::UnityEngine::Playables::PlayableOutput& output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableOutput", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationPlayableOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, output);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.GetTarget
::UnityEngine::Animator* UnityEngine::Animations::AnimationPlayableOutput::GetTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::GetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.SetTarget
void UnityEngine::Animations::AnimationPlayableOutput::SetTarget(::UnityEngine::Animator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::SetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.InternalGetTarget
::UnityEngine::Animator* UnityEngine::Animations::AnimationPlayableOutput::InternalGetTarget(ByRef<::UnityEngine::Playables::PlayableOutputHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::InternalGetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableOutput", "InternalGetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.InternalSetTarget
void UnityEngine::Animations::AnimationPlayableOutput::InternalSetTarget(ByRef<::UnityEngine::Playables::PlayableOutputHandle> handle, ::UnityEngine::Animator* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::InternalSetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableOutput", "InternalSetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle), target);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationPosePlayable
#include "UnityEngine/Animations/AnimationPosePlayable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationPosePlayable m_NullPlayable
::UnityEngine::Animations::AnimationPosePlayable UnityEngine::Animations::AnimationPosePlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPosePlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::AnimationPosePlayable>("UnityEngine.Animations", "AnimationPosePlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationPosePlayable m_NullPlayable
void UnityEngine::Animations::AnimationPosePlayable::_set_m_NullPlayable(::UnityEngine::Animations::AnimationPosePlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPosePlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationPosePlayable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimationPosePlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPosePlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationPosePlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationPosePlayable::AnimationPosePlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationPosePlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationPosePlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPosePlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationPosePlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationPosePlayable.Equals
bool UnityEngine::Animations::AnimationPosePlayable::Equals(::UnityEngine::Animations::AnimationPosePlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPosePlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationPosePlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationPosePlayable..cctor
void UnityEngine::Animations::AnimationPosePlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPosePlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPosePlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationRemoveScalePlayable
#include "UnityEngine/Animations/AnimationRemoveScalePlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationRemoveScalePlayable m_NullPlayable
::UnityEngine::Animations::AnimationRemoveScalePlayable UnityEngine::Animations::AnimationRemoveScalePlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::AnimationRemoveScalePlayable>("UnityEngine.Animations", "AnimationRemoveScalePlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationRemoveScalePlayable m_NullPlayable
void UnityEngine::Animations::AnimationRemoveScalePlayable::_set_m_NullPlayable(::UnityEngine::Animations::AnimationRemoveScalePlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationRemoveScalePlayable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimationRemoveScalePlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.Create
::UnityEngine::Animations::AnimationRemoveScalePlayable UnityEngine::Animations::AnimationRemoveScalePlayable::Create(::UnityEngine::Playables::PlayableGraph graph, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationRemoveScalePlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationRemoveScalePlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.CreateHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandle(::UnityEngine::Playables::PlayableGraph graph, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationRemoveScalePlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationRemoveScalePlayable::AnimationRemoveScalePlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationRemoveScalePlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationRemoveScalePlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.Equals
bool UnityEngine::Animations::AnimationRemoveScalePlayable::Equals(::UnityEngine::Animations::AnimationRemoveScalePlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationRemoveScalePlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandleInternal(::UnityEngine::Playables::PlayableGraph graph, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationRemoveScalePlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable..cctor
void UnityEngine::Animations::AnimationRemoveScalePlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationRemoveScalePlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandleInternal_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> graph, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationRemoveScalePlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), byref(handle));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationScriptPlayable
#include "UnityEngine/Animations/AnimationScriptPlayable.hpp"
// Including type: UnityEngine.Animations.IAnimationJob
#include "UnityEngine/Animations/IAnimationJob.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationScriptPlayable m_NullPlayable
::UnityEngine::Animations::AnimationScriptPlayable UnityEngine::Animations::AnimationScriptPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationScriptPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::AnimationScriptPlayable>("UnityEngine.Animations", "AnimationScriptPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationScriptPlayable m_NullPlayable
void UnityEngine::Animations::AnimationScriptPlayable::_set_m_NullPlayable(::UnityEngine::Animations::AnimationScriptPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationScriptPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationScriptPlayable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimationScriptPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationScriptPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationScriptPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationScriptPlayable::AnimationScriptPlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationScriptPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationScriptPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationScriptPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationScriptPlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationScriptPlayable.Equals
bool UnityEngine::Animations::AnimationScriptPlayable::Equals(::UnityEngine::Animations::AnimationScriptPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationScriptPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationScriptPlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationScriptPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationScriptPlayable::CreateHandleInternal(::UnityEngine::Playables::PlayableGraph graph, ByRef<::UnityEngine::Playables::PlayableHandle> handle, ::System::IntPtr jobReflectionData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationScriptPlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationScriptPlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(jobReflectionData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, byref(handle), jobReflectionData);
}
// Autogenerated method: UnityEngine.Animations.AnimationScriptPlayable..cctor
void UnityEngine::Animations::AnimationScriptPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationScriptPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationScriptPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationScriptPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationScriptPlayable::CreateHandleInternal_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> graph, ByRef<::UnityEngine::Playables::PlayableHandle> handle, ::System::IntPtr jobReflectionData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationScriptPlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationScriptPlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(jobReflectionData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), byref(handle), jobReflectionData);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_AnimatorBindingsVersion
[[deprecated("Use field access instead!")]] uint& UnityEngine::Animations::AnimationStream::dyn_m_AnimatorBindingsVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStream::dyn_m_AnimatorBindingsVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimatorBindingsVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr constant
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Animations::AnimationStream::dyn_constant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStream::dyn_constant");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constant"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr input
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Animations::AnimationStream::dyn_input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStream::dyn_input");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "input"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr output
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Animations::AnimationStream::dyn_output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStream::dyn_output");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "output"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr workspace
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Animations::AnimationStream::dyn_workspace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStream::dyn_workspace");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workspace"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr inputStreamAccessor
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Animations::AnimationStream::dyn_inputStreamAccessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStream::dyn_inputStreamAccessor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputStreamAccessor"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr animationHandleBinder
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Animations::AnimationStream::dyn_animationHandleBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStream::dyn_animationHandleBinder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationHandleBinder"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationStream.get_animatorBindingsVersion
uint UnityEngine::Animations::AnimationStream::get_animatorBindingsVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStream::get_animatorBindingsVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_animatorBindingsVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationStream.get_isValid
bool UnityEngine::Animations::AnimationStream::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStream::get_isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationStream.CheckIsValid
void UnityEngine::Animations::AnimationStream::CheckIsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStream::CheckIsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckIsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationStream.get_deltaTime
float UnityEngine::Animations::AnimationStream::get_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStream::get_deltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationStream.GetDeltaTime
float UnityEngine::Animations::AnimationStream::GetDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStream::GetDeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationStream.GetDeltaTime_Injected
float UnityEngine::Animations::AnimationStream::GetDeltaTime_Injected(ByRef<::UnityEngine::Animations::AnimationStream> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStream::GetDeltaTime_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationStream", "GetDeltaTime_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.TransformStreamHandle
#include "UnityEngine/Animations/TransformStreamHandle.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_AnimatorBindingsVersion
[[deprecated("Use field access instead!")]] uint& UnityEngine::Animations::TransformStreamHandle::dyn_m_AnimatorBindingsVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::dyn_m_AnimatorBindingsVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimatorBindingsVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 handleIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::TransformStreamHandle::dyn_handleIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::dyn_handleIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handleIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 skeletonIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::TransformStreamHandle::dyn_skeletonIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::dyn_skeletonIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skeletonIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.IsValid
bool UnityEngine::Animations::TransformStreamHandle::IsValid(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.IsValidInternal
bool UnityEngine::Animations::TransformStreamHandle::IsValidInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::IsValidInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValidInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.get_createdByNative
bool UnityEngine::Animations::TransformStreamHandle::get_createdByNative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::get_createdByNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_createdByNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.IsSameVersionAsStream
bool UnityEngine::Animations::TransformStreamHandle::IsSameVersionAsStream(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::IsSameVersionAsStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsSameVersionAsStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.get_hasHandleIndex
bool UnityEngine::Animations::TransformStreamHandle::get_hasHandleIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::get_hasHandleIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_hasHandleIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.get_hasSkeletonIndex
bool UnityEngine::Animations::TransformStreamHandle::get_hasSkeletonIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::get_hasSkeletonIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_hasSkeletonIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.get_animatorBindingsVersion
uint UnityEngine::Animations::TransformStreamHandle::get_animatorBindingsVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::get_animatorBindingsVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_animatorBindingsVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.Resolve
void UnityEngine::Animations::TransformStreamHandle::Resolve(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::Resolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Resolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.IsResolved
bool UnityEngine::Animations::TransformStreamHandle::IsResolved(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::IsResolved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsResolved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.IsResolvedInternal
bool UnityEngine::Animations::TransformStreamHandle::IsResolvedInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::IsResolvedInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsResolvedInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.CheckIsValidAndResolve
void UnityEngine::Animations::TransformStreamHandle::CheckIsValidAndResolve(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::CheckIsValidAndResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckIsValidAndResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetPosition
::UnityEngine::Vector3 UnityEngine::Animations::TransformStreamHandle::GetPosition(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetPosition
void UnityEngine::Animations::TransformStreamHandle::SetPosition(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, position);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetRotation
::UnityEngine::Quaternion UnityEngine::Animations::TransformStreamHandle::GetRotation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetRotation
void UnityEngine::Animations::TransformStreamHandle::SetRotation(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, rotation);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetLocalPosition
::UnityEngine::Vector3 UnityEngine::Animations::TransformStreamHandle::GetLocalPosition(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetLocalPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetLocalPosition
void UnityEngine::Animations::TransformStreamHandle::SetLocalPosition(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetLocalPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocalPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, position);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetLocalRotation
::UnityEngine::Quaternion UnityEngine::Animations::TransformStreamHandle::GetLocalRotation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetLocalRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetLocalRotation
void UnityEngine::Animations::TransformStreamHandle::SetLocalRotation(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetLocalRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocalRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, rotation);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetLocalScale
::UnityEngine::Vector3 UnityEngine::Animations::TransformStreamHandle::GetLocalScale(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetLocalScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetLocalScale
void UnityEngine::Animations::TransformStreamHandle::SetLocalScale(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetLocalScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocalScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, scale);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetLocalTRS
void UnityEngine::Animations::TransformStreamHandle::GetLocalTRS(::UnityEngine::Animations::AnimationStream stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetLocalTRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalTRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, byref(position), byref(rotation), byref(scale));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetLocalTRS
void UnityEngine::Animations::TransformStreamHandle::SetLocalTRS(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, bool useMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetLocalTRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocalTRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(useMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, position, rotation, scale, useMask);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetGlobalTR
void UnityEngine::Animations::TransformStreamHandle::GetGlobalTR(::UnityEngine::Animations::AnimationStream stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetGlobalTR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetGlobalTR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, byref(position), byref(rotation));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetGlobalTR
void UnityEngine::Animations::TransformStreamHandle::SetGlobalTR(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, bool useMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetGlobalTR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetGlobalTR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(useMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, position, rotation, useMask);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.ResolveInternal
void UnityEngine::Animations::TransformStreamHandle::ResolveInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::ResolveInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ResolveInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetPositionInternal
::UnityEngine::Vector3 UnityEngine::Animations::TransformStreamHandle::GetPositionInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetPositionInternal
void UnityEngine::Animations::TransformStreamHandle::SetPositionInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), position);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetRotationInternal
::UnityEngine::Quaternion UnityEngine::Animations::TransformStreamHandle::GetRotationInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetRotationInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRotationInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetRotationInternal
void UnityEngine::Animations::TransformStreamHandle::SetRotationInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetRotationInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetRotationInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), rotation);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetLocalPositionInternal
::UnityEngine::Vector3 UnityEngine::Animations::TransformStreamHandle::GetLocalPositionInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetLocalPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetLocalPositionInternal
void UnityEngine::Animations::TransformStreamHandle::SetLocalPositionInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetLocalPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocalPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), position);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetLocalRotationInternal
::UnityEngine::Quaternion UnityEngine::Animations::TransformStreamHandle::GetLocalRotationInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetLocalRotationInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalRotationInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetLocalRotationInternal
void UnityEngine::Animations::TransformStreamHandle::SetLocalRotationInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetLocalRotationInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocalRotationInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), rotation);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetLocalScaleInternal
::UnityEngine::Vector3 UnityEngine::Animations::TransformStreamHandle::GetLocalScaleInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetLocalScaleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalScaleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetLocalScaleInternal
void UnityEngine::Animations::TransformStreamHandle::SetLocalScaleInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetLocalScaleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocalScaleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), scale);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetLocalTRSInternal
void UnityEngine::Animations::TransformStreamHandle::GetLocalTRSInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetLocalTRSInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalTRSInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(position), byref(rotation), byref(scale));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetLocalTRSInternal
void UnityEngine::Animations::TransformStreamHandle::SetLocalTRSInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, bool useMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetLocalTRSInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocalTRSInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(useMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), position, rotation, scale, useMask);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetGlobalTRInternal
void UnityEngine::Animations::TransformStreamHandle::GetGlobalTRInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetGlobalTRInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetGlobalTRInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(position), byref(rotation));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetGlobalTRInternal
void UnityEngine::Animations::TransformStreamHandle::SetGlobalTRInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, bool useMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetGlobalTRInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetGlobalTRInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(useMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), position, rotation, useMask);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.ResolveInternal_Injected
void UnityEngine::Animations::TransformStreamHandle::ResolveInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::ResolveInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformStreamHandle", "ResolveInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetPositionInternal_Injected
void UnityEngine::Animations::TransformStreamHandle::GetPositionInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetPositionInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformStreamHandle", "GetPositionInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(ret));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetPositionInternal_Injected
void UnityEngine::Animations::TransformStreamHandle::SetPositionInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetPositionInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformStreamHandle", "SetPositionInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(position));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetRotationInternal_Injected
void UnityEngine::Animations::TransformStreamHandle::GetRotationInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetRotationInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformStreamHandle", "GetRotationInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(ret));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetRotationInternal_Injected
void UnityEngine::Animations::TransformStreamHandle::SetRotationInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetRotationInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformStreamHandle", "SetRotationInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(rotation));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetLocalPositionInternal_Injected
void UnityEngine::Animations::TransformStreamHandle::GetLocalPositionInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetLocalPositionInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformStreamHandle", "GetLocalPositionInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(ret));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetLocalPositionInternal_Injected
void UnityEngine::Animations::TransformStreamHandle::SetLocalPositionInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetLocalPositionInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformStreamHandle", "SetLocalPositionInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(position));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetLocalRotationInternal_Injected
void UnityEngine::Animations::TransformStreamHandle::GetLocalRotationInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetLocalRotationInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformStreamHandle", "GetLocalRotationInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(ret));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetLocalRotationInternal_Injected
void UnityEngine::Animations::TransformStreamHandle::SetLocalRotationInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetLocalRotationInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformStreamHandle", "SetLocalRotationInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(rotation));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetLocalScaleInternal_Injected
void UnityEngine::Animations::TransformStreamHandle::GetLocalScaleInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetLocalScaleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformStreamHandle", "GetLocalScaleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(ret));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetLocalScaleInternal_Injected
void UnityEngine::Animations::TransformStreamHandle::SetLocalScaleInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetLocalScaleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformStreamHandle", "SetLocalScaleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(scale));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetLocalTRSInternal_Injected
void UnityEngine::Animations::TransformStreamHandle::GetLocalTRSInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetLocalTRSInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformStreamHandle", "GetLocalTRSInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(position), byref(rotation), byref(scale));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetLocalTRSInternal_Injected
void UnityEngine::Animations::TransformStreamHandle::SetLocalTRSInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> scale, bool useMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetLocalTRSInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformStreamHandle", "SetLocalTRSInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(useMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(position), byref(rotation), byref(scale), useMask);
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.GetGlobalTRInternal_Injected
void UnityEngine::Animations::TransformStreamHandle::GetGlobalTRInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::GetGlobalTRInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformStreamHandle", "GetGlobalTRInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(position), byref(rotation));
}
// Autogenerated method: UnityEngine.Animations.TransformStreamHandle.SetGlobalTRInternal_Injected
void UnityEngine::Animations::TransformStreamHandle::SetGlobalTRInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, bool useMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformStreamHandle::SetGlobalTRInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformStreamHandle", "SetGlobalTRInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(useMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(position), byref(rotation), useMask);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.PropertyStreamHandle
#include "UnityEngine/Animations/PropertyStreamHandle.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_AnimatorBindingsVersion
[[deprecated("Use field access instead!")]] uint& UnityEngine::Animations::PropertyStreamHandle::dyn_m_AnimatorBindingsVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::dyn_m_AnimatorBindingsVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimatorBindingsVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 handleIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::PropertyStreamHandle::dyn_handleIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::dyn_handleIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handleIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 valueArrayIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::PropertyStreamHandle::dyn_valueArrayIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::dyn_valueArrayIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueArrayIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 bindType
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::PropertyStreamHandle::dyn_bindType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::dyn_bindType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bindType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.IsValidInternal
bool UnityEngine::Animations::PropertyStreamHandle::IsValidInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::IsValidInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValidInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.get_createdByNative
bool UnityEngine::Animations::PropertyStreamHandle::get_createdByNative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::get_createdByNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_createdByNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.IsSameVersionAsStream
bool UnityEngine::Animations::PropertyStreamHandle::IsSameVersionAsStream(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::IsSameVersionAsStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsSameVersionAsStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.get_hasHandleIndex
bool UnityEngine::Animations::PropertyStreamHandle::get_hasHandleIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::get_hasHandleIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_hasHandleIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.get_hasValueArrayIndex
bool UnityEngine::Animations::PropertyStreamHandle::get_hasValueArrayIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::get_hasValueArrayIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_hasValueArrayIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.get_hasBindType
bool UnityEngine::Animations::PropertyStreamHandle::get_hasBindType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::get_hasBindType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_hasBindType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.get_animatorBindingsVersion
uint UnityEngine::Animations::PropertyStreamHandle::get_animatorBindingsVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::get_animatorBindingsVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_animatorBindingsVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.IsResolvedInternal
bool UnityEngine::Animations::PropertyStreamHandle::IsResolvedInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::IsResolvedInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsResolvedInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.CheckIsValidAndResolve
void UnityEngine::Animations::PropertyStreamHandle::CheckIsValidAndResolve(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::CheckIsValidAndResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckIsValidAndResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.GetFloat
float UnityEngine::Animations::PropertyStreamHandle::GetFloat(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::GetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.SetFloat
void UnityEngine::Animations::PropertyStreamHandle::SetFloat(::UnityEngine::Animations::AnimationStream stream, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, value);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.GetInt
int UnityEngine::Animations::PropertyStreamHandle::GetInt(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::GetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.SetInt
void UnityEngine::Animations::PropertyStreamHandle::SetInt(::UnityEngine::Animations::AnimationStream stream, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::SetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, value);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.GetBool
bool UnityEngine::Animations::PropertyStreamHandle::GetBool(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::GetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.SetBool
void UnityEngine::Animations::PropertyStreamHandle::SetBool(::UnityEngine::Animations::AnimationStream stream, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::SetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, value);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.ResolveInternal
void UnityEngine::Animations::PropertyStreamHandle::ResolveInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::ResolveInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ResolveInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.GetFloatInternal
float UnityEngine::Animations::PropertyStreamHandle::GetFloatInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::GetFloatInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetFloatInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.SetFloatInternal
void UnityEngine::Animations::PropertyStreamHandle::SetFloatInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::SetFloatInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFloatInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.GetIntInternal
int UnityEngine::Animations::PropertyStreamHandle::GetIntInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::GetIntInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetIntInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.SetIntInternal
void UnityEngine::Animations::PropertyStreamHandle::SetIntInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::SetIntInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetIntInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.GetBoolInternal
bool UnityEngine::Animations::PropertyStreamHandle::GetBoolInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::GetBoolInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBoolInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.SetBoolInternal
void UnityEngine::Animations::PropertyStreamHandle::SetBoolInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::SetBoolInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetBoolInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), value);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.ResolveInternal_Injected
void UnityEngine::Animations::PropertyStreamHandle::ResolveInternal_Injected(ByRef<::UnityEngine::Animations::PropertyStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::ResolveInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "PropertyStreamHandle", "ResolveInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream));
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.GetFloatInternal_Injected
float UnityEngine::Animations::PropertyStreamHandle::GetFloatInternal_Injected(ByRef<::UnityEngine::Animations::PropertyStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::GetFloatInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "PropertyStreamHandle", "GetFloatInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream));
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.SetFloatInternal_Injected
void UnityEngine::Animations::PropertyStreamHandle::SetFloatInternal_Injected(ByRef<::UnityEngine::Animations::PropertyStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::SetFloatInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "PropertyStreamHandle", "SetFloatInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), value);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.GetIntInternal_Injected
int UnityEngine::Animations::PropertyStreamHandle::GetIntInternal_Injected(ByRef<::UnityEngine::Animations::PropertyStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::GetIntInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "PropertyStreamHandle", "GetIntInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream));
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.SetIntInternal_Injected
void UnityEngine::Animations::PropertyStreamHandle::SetIntInternal_Injected(ByRef<::UnityEngine::Animations::PropertyStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::SetIntInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "PropertyStreamHandle", "SetIntInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), value);
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.GetBoolInternal_Injected
bool UnityEngine::Animations::PropertyStreamHandle::GetBoolInternal_Injected(ByRef<::UnityEngine::Animations::PropertyStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::GetBoolInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "PropertyStreamHandle", "GetBoolInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream));
}
// Autogenerated method: UnityEngine.Animations.PropertyStreamHandle.SetBoolInternal_Injected
void UnityEngine::Animations::PropertyStreamHandle::SetBoolInternal_Injected(ByRef<::UnityEngine::Animations::PropertyStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::PropertyStreamHandle::SetBoolInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "PropertyStreamHandle", "SetBoolInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.TransformSceneHandle
#include "UnityEngine/Animations/TransformSceneHandle.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 valid
[[deprecated("Use field access instead!")]] uint& UnityEngine::Animations::TransformSceneHandle::dyn_valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::dyn_valid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valid"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 transformSceneHandleDefinitionIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::TransformSceneHandle::dyn_transformSceneHandleDefinitionIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::dyn_transformSceneHandleDefinitionIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformSceneHandleDefinitionIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.IsValid
bool UnityEngine::Animations::TransformSceneHandle::IsValid(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.get_createdByNative
bool UnityEngine::Animations::TransformSceneHandle::get_createdByNative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::get_createdByNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_createdByNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.get_hasTransformSceneHandleDefinitionIndex
bool UnityEngine::Animations::TransformSceneHandle::get_hasTransformSceneHandleDefinitionIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::get_hasTransformSceneHandleDefinitionIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_hasTransformSceneHandleDefinitionIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.CheckIsValid
void UnityEngine::Animations::TransformSceneHandle::CheckIsValid(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::CheckIsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckIsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetPosition
::UnityEngine::Vector3 UnityEngine::Animations::TransformSceneHandle::GetPosition(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetLocalPosition
::UnityEngine::Vector3 UnityEngine::Animations::TransformSceneHandle::GetLocalPosition(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetLocalPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetRotation
::UnityEngine::Quaternion UnityEngine::Animations::TransformSceneHandle::GetRotation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetLocalRotation
::UnityEngine::Quaternion UnityEngine::Animations::TransformSceneHandle::GetLocalRotation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetLocalRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetLocalScale
::UnityEngine::Vector3 UnityEngine::Animations::TransformSceneHandle::GetLocalScale(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetLocalScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetLocalTRS
void UnityEngine::Animations::TransformSceneHandle::GetLocalTRS(::UnityEngine::Animations::AnimationStream stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetLocalTRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalTRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, byref(position), byref(rotation), byref(scale));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetGlobalTR
void UnityEngine::Animations::TransformSceneHandle::GetGlobalTR(::UnityEngine::Animations::AnimationStream stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetGlobalTR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetGlobalTR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, byref(position), byref(rotation));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.HasValidTransform
bool UnityEngine::Animations::TransformSceneHandle::HasValidTransform(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::HasValidTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "HasValidTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetPositionInternal
::UnityEngine::Vector3 UnityEngine::Animations::TransformSceneHandle::GetPositionInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetLocalPositionInternal
::UnityEngine::Vector3 UnityEngine::Animations::TransformSceneHandle::GetLocalPositionInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetLocalPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetRotationInternal
::UnityEngine::Quaternion UnityEngine::Animations::TransformSceneHandle::GetRotationInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetRotationInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRotationInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetLocalRotationInternal
::UnityEngine::Quaternion UnityEngine::Animations::TransformSceneHandle::GetLocalRotationInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetLocalRotationInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalRotationInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetLocalScaleInternal
::UnityEngine::Vector3 UnityEngine::Animations::TransformSceneHandle::GetLocalScaleInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetLocalScaleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalScaleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetLocalTRSInternal
void UnityEngine::Animations::TransformSceneHandle::GetLocalTRSInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetLocalTRSInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalTRSInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(position), byref(rotation), byref(scale));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetGlobalTRInternal
void UnityEngine::Animations::TransformSceneHandle::GetGlobalTRInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetGlobalTRInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetGlobalTRInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream), byref(position), byref(rotation));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.HasValidTransform_Injected
bool UnityEngine::Animations::TransformSceneHandle::HasValidTransform_Injected(ByRef<::UnityEngine::Animations::TransformSceneHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::HasValidTransform_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformSceneHandle", "HasValidTransform_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetPositionInternal_Injected
void UnityEngine::Animations::TransformSceneHandle::GetPositionInternal_Injected(ByRef<::UnityEngine::Animations::TransformSceneHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetPositionInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformSceneHandle", "GetPositionInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(ret));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetLocalPositionInternal_Injected
void UnityEngine::Animations::TransformSceneHandle::GetLocalPositionInternal_Injected(ByRef<::UnityEngine::Animations::TransformSceneHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetLocalPositionInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformSceneHandle", "GetLocalPositionInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(ret));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetRotationInternal_Injected
void UnityEngine::Animations::TransformSceneHandle::GetRotationInternal_Injected(ByRef<::UnityEngine::Animations::TransformSceneHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetRotationInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformSceneHandle", "GetRotationInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(ret));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetLocalRotationInternal_Injected
void UnityEngine::Animations::TransformSceneHandle::GetLocalRotationInternal_Injected(ByRef<::UnityEngine::Animations::TransformSceneHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetLocalRotationInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformSceneHandle", "GetLocalRotationInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(ret));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetLocalScaleInternal_Injected
void UnityEngine::Animations::TransformSceneHandle::GetLocalScaleInternal_Injected(ByRef<::UnityEngine::Animations::TransformSceneHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetLocalScaleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformSceneHandle", "GetLocalScaleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(ret));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetLocalTRSInternal_Injected
void UnityEngine::Animations::TransformSceneHandle::GetLocalTRSInternal_Injected(ByRef<::UnityEngine::Animations::TransformSceneHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetLocalTRSInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformSceneHandle", "GetLocalTRSInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(position), byref(rotation), byref(scale));
}
// Autogenerated method: UnityEngine.Animations.TransformSceneHandle.GetGlobalTRInternal_Injected
void UnityEngine::Animations::TransformSceneHandle::GetGlobalTRInternal_Injected(ByRef<::UnityEngine::Animations::TransformSceneHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::TransformSceneHandle::GetGlobalTRInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "TransformSceneHandle", "GetGlobalTRInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(stream), byref(position), byref(rotation));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationSceneHandleUtility
#include "UnityEngine/Animations/AnimationSceneHandleUtility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.AnimationSceneHandleUtility.ReadFloats
void UnityEngine::Animations::AnimationSceneHandleUtility::ReadFloats(::UnityEngine::Animations::AnimationStream stream, ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertySceneHandle> handles, ::Unity::Collections::NativeArray_1<float> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationSceneHandleUtility::ReadFloats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationSceneHandleUtility", "ReadFloats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(handles), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, handles, buffer);
}
// Autogenerated method: UnityEngine.Animations.AnimationSceneHandleUtility.ReadSceneFloatsInternal
void UnityEngine::Animations::AnimationSceneHandleUtility::ReadSceneFloatsInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, void* propertySceneHandles, void* floatBuffer, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationSceneHandleUtility::ReadSceneFloatsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationSceneHandleUtility", "ReadSceneFloatsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(propertySceneHandles), ::il2cpp_utils::ExtractType(floatBuffer), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(stream), propertySceneHandles, floatBuffer, count);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationStreamHandleUtility
#include "UnityEngine/Animations/AnimationStreamHandleUtility.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.AnimationStreamHandleUtility.WriteFloats
void UnityEngine::Animations::AnimationStreamHandleUtility::WriteFloats(::UnityEngine::Animations::AnimationStream stream, ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle> handles, ::Unity::Collections::NativeArray_1<float> buffer, bool useMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStreamHandleUtility::WriteFloats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationStreamHandleUtility", "WriteFloats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(handles), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(useMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, handles, buffer, useMask);
}
// Autogenerated method: UnityEngine.Animations.AnimationStreamHandleUtility.ReadFloats
void UnityEngine::Animations::AnimationStreamHandleUtility::ReadFloats(::UnityEngine::Animations::AnimationStream stream, ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle> handles, ::Unity::Collections::NativeArray_1<float> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStreamHandleUtility::ReadFloats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationStreamHandleUtility", "ReadFloats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(handles), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, handles, buffer);
}
// Autogenerated method: UnityEngine.Animations.AnimationStreamHandleUtility.ReadStreamFloatsInternal
void UnityEngine::Animations::AnimationStreamHandleUtility::ReadStreamFloatsInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, void* propertyStreamHandles, void* floatBuffer, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStreamHandleUtility::ReadStreamFloatsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationStreamHandleUtility", "ReadStreamFloatsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(propertyStreamHandles), ::il2cpp_utils::ExtractType(floatBuffer), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(stream), propertyStreamHandles, floatBuffer, count);
}
// Autogenerated method: UnityEngine.Animations.AnimationStreamHandleUtility.WriteStreamFloatsInternal
void UnityEngine::Animations::AnimationStreamHandleUtility::WriteStreamFloatsInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, void* propertyStreamHandles, void* floatBuffer, int count, bool useMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationStreamHandleUtility::WriteStreamFloatsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationStreamHandleUtility", "WriteStreamFloatsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(propertyStreamHandles), ::il2cpp_utils::ExtractType(floatBuffer), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(useMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(stream), propertyStreamHandles, floatBuffer, count, useMask);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimatorControllerPlayable
#include "UnityEngine/Animations/AnimatorControllerPlayable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimatorControllerPlayable m_NullPlayable
::UnityEngine::Animations::AnimatorControllerPlayable UnityEngine::Animations::AnimatorControllerPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorControllerPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::AnimatorControllerPlayable>("UnityEngine.Animations", "AnimatorControllerPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimatorControllerPlayable m_NullPlayable
void UnityEngine::Animations::AnimatorControllerPlayable::_set_m_NullPlayable(::UnityEngine::Animations::AnimatorControllerPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorControllerPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimatorControllerPlayable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimatorControllerPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorControllerPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimatorControllerPlayable::AnimatorControllerPlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimatorControllerPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorControllerPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimatorControllerPlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable.SetHandle
void UnityEngine::Animations::AnimatorControllerPlayable::SetHandle(::UnityEngine::Playables::PlayableHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorControllerPlayable::SetHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable.Equals
bool UnityEngine::Animations::AnimatorControllerPlayable::Equals(::UnityEngine::Animations::AnimatorControllerPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorControllerPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimatorControllerPlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable..cctor
void UnityEngine::Animations::AnimatorControllerPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorControllerPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimatorControllerPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.CustomStreamPropertyType
#include "UnityEngine/Animations/CustomStreamPropertyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.CustomStreamPropertyType Float
::UnityEngine::Animations::CustomStreamPropertyType UnityEngine::Animations::CustomStreamPropertyType::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::CustomStreamPropertyType::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::CustomStreamPropertyType>("UnityEngine.Animations", "CustomStreamPropertyType", "Float"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.CustomStreamPropertyType Float
void UnityEngine::Animations::CustomStreamPropertyType::_set_Float(::UnityEngine::Animations::CustomStreamPropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::CustomStreamPropertyType::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "CustomStreamPropertyType", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.CustomStreamPropertyType Bool
::UnityEngine::Animations::CustomStreamPropertyType UnityEngine::Animations::CustomStreamPropertyType::_get_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::CustomStreamPropertyType::_get_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::CustomStreamPropertyType>("UnityEngine.Animations", "CustomStreamPropertyType", "Bool"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.CustomStreamPropertyType Bool
void UnityEngine::Animations::CustomStreamPropertyType::_set_Bool(::UnityEngine::Animations::CustomStreamPropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::CustomStreamPropertyType::_set_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "CustomStreamPropertyType", "Bool", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.CustomStreamPropertyType Int
::UnityEngine::Animations::CustomStreamPropertyType UnityEngine::Animations::CustomStreamPropertyType::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::CustomStreamPropertyType::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::CustomStreamPropertyType>("UnityEngine.Animations", "CustomStreamPropertyType", "Int"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.CustomStreamPropertyType Int
void UnityEngine::Animations::CustomStreamPropertyType::_set_Int(::UnityEngine::Animations::CustomStreamPropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::CustomStreamPropertyType::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "CustomStreamPropertyType", "Int", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::CustomStreamPropertyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::CustomStreamPropertyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimatorJobExtensions
#include "UnityEngine/Animations/AnimatorJobExtensions.hpp"
// Including type: UnityEngine.Animations.TransformStreamHandle
#include "UnityEngine/Animations/TransformStreamHandle.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Animations.PropertyStreamHandle
#include "UnityEngine/Animations/PropertyStreamHandle.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Animations.CustomStreamPropertyType
#include "UnityEngine/Animations/CustomStreamPropertyType.hpp"
// Including type: UnityEngine.Animations.TransformSceneHandle
#include "UnityEngine/Animations/TransformSceneHandle.hpp"
// Including type: UnityEngine.Animations.PropertySceneHandle
#include "UnityEngine/Animations/PropertySceneHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.AnimatorJobExtensions.BindStreamTransform
::UnityEngine::Animations::TransformStreamHandle UnityEngine::Animations::AnimatorJobExtensions::BindStreamTransform(::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorJobExtensions::BindStreamTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimatorJobExtensions", "BindStreamTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::TransformStreamHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, transform);
}
// Autogenerated method: UnityEngine.Animations.AnimatorJobExtensions.BindStreamProperty
::UnityEngine::Animations::PropertyStreamHandle UnityEngine::Animations::AnimatorJobExtensions::BindStreamProperty(::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform, ::System::Type* type, ::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorJobExtensions::BindStreamProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimatorJobExtensions", "BindStreamProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::PropertyStreamHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, transform, type, property);
}
// Autogenerated method: UnityEngine.Animations.AnimatorJobExtensions.BindCustomStreamProperty
::UnityEngine::Animations::PropertyStreamHandle UnityEngine::Animations::AnimatorJobExtensions::BindCustomStreamProperty(::UnityEngine::Animator* animator, ::StringW property, ::UnityEngine::Animations::CustomStreamPropertyType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorJobExtensions::BindCustomStreamProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimatorJobExtensions", "BindCustomStreamProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::PropertyStreamHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, property, type);
}
// Autogenerated method: UnityEngine.Animations.AnimatorJobExtensions.BindStreamProperty
::UnityEngine::Animations::PropertyStreamHandle UnityEngine::Animations::AnimatorJobExtensions::BindStreamProperty(::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform, ::System::Type* type, ::StringW property, bool isObjectReference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorJobExtensions::BindStreamProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimatorJobExtensions", "BindStreamProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(isObjectReference)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::PropertyStreamHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, transform, type, property, isObjectReference);
}
// Autogenerated method: UnityEngine.Animations.AnimatorJobExtensions.BindSceneTransform
::UnityEngine::Animations::TransformSceneHandle UnityEngine::Animations::AnimatorJobExtensions::BindSceneTransform(::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorJobExtensions::BindSceneTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimatorJobExtensions", "BindSceneTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::TransformSceneHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, transform);
}
// Autogenerated method: UnityEngine.Animations.AnimatorJobExtensions.BindSceneProperty
::UnityEngine::Animations::PropertySceneHandle UnityEngine::Animations::AnimatorJobExtensions::BindSceneProperty(::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform, ::System::Type* type, ::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorJobExtensions::BindSceneProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimatorJobExtensions", "BindSceneProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::PropertySceneHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, transform, type, property);
}
// Autogenerated method: UnityEngine.Animations.AnimatorJobExtensions.BindSceneProperty
::UnityEngine::Animations::PropertySceneHandle UnityEngine::Animations::AnimatorJobExtensions::BindSceneProperty(::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform, ::System::Type* type, ::StringW property, bool isObjectReference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorJobExtensions::BindSceneProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimatorJobExtensions", "BindSceneProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(isObjectReference)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::PropertySceneHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, transform, type, property, isObjectReference);
}
// Autogenerated method: UnityEngine.Animations.AnimatorJobExtensions.InternalBindStreamTransform
void UnityEngine::Animations::AnimatorJobExtensions::InternalBindStreamTransform(::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform, ByRef<::UnityEngine::Animations::TransformStreamHandle> transformStreamHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorJobExtensions::InternalBindStreamTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimatorJobExtensions", "InternalBindStreamTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Animations::TransformStreamHandle&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, transform, byref(transformStreamHandle));
}
// Autogenerated method: UnityEngine.Animations.AnimatorJobExtensions.InternalBindStreamProperty
void UnityEngine::Animations::AnimatorJobExtensions::InternalBindStreamProperty(::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform, ::System::Type* type, ::StringW property, bool isObjectReference, ByRef<::UnityEngine::Animations::PropertyStreamHandle> propertyStreamHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorJobExtensions::InternalBindStreamProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimatorJobExtensions", "InternalBindStreamProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(isObjectReference), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Animations::PropertyStreamHandle&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, transform, type, property, isObjectReference, byref(propertyStreamHandle));
}
// Autogenerated method: UnityEngine.Animations.AnimatorJobExtensions.InternalBindCustomStreamProperty
void UnityEngine::Animations::AnimatorJobExtensions::InternalBindCustomStreamProperty(::UnityEngine::Animator* animator, ::StringW property, ::UnityEngine::Animations::CustomStreamPropertyType propertyType, ByRef<::UnityEngine::Animations::PropertyStreamHandle> propertyStreamHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorJobExtensions::InternalBindCustomStreamProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimatorJobExtensions", "InternalBindCustomStreamProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Animations::PropertyStreamHandle&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, property, propertyType, byref(propertyStreamHandle));
}
// Autogenerated method: UnityEngine.Animations.AnimatorJobExtensions.InternalBindSceneTransform
void UnityEngine::Animations::AnimatorJobExtensions::InternalBindSceneTransform(::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform, ByRef<::UnityEngine::Animations::TransformSceneHandle> transformSceneHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorJobExtensions::InternalBindSceneTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimatorJobExtensions", "InternalBindSceneTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Animations::TransformSceneHandle&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, transform, byref(transformSceneHandle));
}
// Autogenerated method: UnityEngine.Animations.AnimatorJobExtensions.InternalBindSceneProperty
void UnityEngine::Animations::AnimatorJobExtensions::InternalBindSceneProperty(::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform, ::System::Type* type, ::StringW property, bool isObjectReference, ByRef<::UnityEngine::Animations::PropertySceneHandle> propertySceneHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorJobExtensions::InternalBindSceneProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimatorJobExtensions", "InternalBindSceneProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(isObjectReference), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Animations::PropertySceneHandle&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, transform, type, property, isObjectReference, byref(propertySceneHandle));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Axis
#include "UnityEngine/Animations/Axis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Axis None
::UnityEngine::Animations::Axis UnityEngine::Animations::Axis::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Axis::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Axis>("UnityEngine.Animations", "Axis", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Axis None
void UnityEngine::Animations::Axis::_set_None(::UnityEngine::Animations::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Axis::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "Axis", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Axis X
::UnityEngine::Animations::Axis UnityEngine::Animations::Axis::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Axis::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Axis>("UnityEngine.Animations", "Axis", "X"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Axis X
void UnityEngine::Animations::Axis::_set_X(::UnityEngine::Animations::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Axis::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "Axis", "X", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Axis Y
::UnityEngine::Animations::Axis UnityEngine::Animations::Axis::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Axis::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Axis>("UnityEngine.Animations", "Axis", "Y"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Axis Y
void UnityEngine::Animations::Axis::_set_Y(::UnityEngine::Animations::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Axis::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "Axis", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Axis Z
::UnityEngine::Animations::Axis UnityEngine::Animations::Axis::_get_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Axis::_get_Z");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Axis>("UnityEngine.Animations", "Axis", "Z"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Axis Z
void UnityEngine::Animations::Axis::_set_Z(::UnityEngine::Animations::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Axis::_set_Z");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "Axis", "Z", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Axis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Axis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.RotationConstraint
#include "UnityEngine/Animations/RotationConstraint.hpp"
// Including type: UnityEngine.Animations.Axis
#include "UnityEngine/Animations/Axis.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.RotationConstraint.Internal_Create
void UnityEngine::Animations::RotationConstraint::Internal_Create(::UnityEngine::Animations::RotationConstraint* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "RotationConstraint", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.get_weight
float UnityEngine::Animations::RotationConstraint::get_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::get_weight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::RotationConstraint*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.set_weight
void UnityEngine::Animations::RotationConstraint::set_weight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::set_weight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::RotationConstraint*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.get_rotationAtRest
::UnityEngine::Vector3 UnityEngine::Animations::RotationConstraint::get_rotationAtRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::get_rotationAtRest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationAtRest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.set_rotationAtRest
void UnityEngine::Animations::RotationConstraint::set_rotationAtRest(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::set_rotationAtRest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationAtRest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.get_rotationOffset
::UnityEngine::Vector3 UnityEngine::Animations::RotationConstraint::get_rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::get_rotationOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.set_rotationOffset
void UnityEngine::Animations::RotationConstraint::set_rotationOffset(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::set_rotationOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.get_rotationAxis
::UnityEngine::Animations::Axis UnityEngine::Animations::RotationConstraint::get_rotationAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::get_rotationAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Axis, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.set_rotationAxis
void UnityEngine::Animations::RotationConstraint::set_rotationAxis(::UnityEngine::Animations::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::set_rotationAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.get_constraintActive
bool UnityEngine::Animations::RotationConstraint::get_constraintActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::get_constraintActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::RotationConstraint*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.set_constraintActive
void UnityEngine::Animations::RotationConstraint::set_constraintActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::set_constraintActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::RotationConstraint*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.get_locked
bool UnityEngine::Animations::RotationConstraint::get_locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::get_locked");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::RotationConstraint*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.set_locked
void UnityEngine::Animations::RotationConstraint::set_locked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::set_locked");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::RotationConstraint*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.get_sourceCount
int UnityEngine::Animations::RotationConstraint::get_sourceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::get_sourceCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::RotationConstraint*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.GetSourceCountInternal
int UnityEngine::Animations::RotationConstraint::GetSourceCountInternal(::UnityEngine::Animations::RotationConstraint* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::GetSourceCountInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "RotationConstraint", "GetSourceCountInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.GetSources
void UnityEngine::Animations::RotationConstraint::GetSources(::System::Collections::Generic::List_1<::UnityEngine::Animations::ConstraintSource>* sources) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::GetSources");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::RotationConstraint*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sources);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.SetSources
void UnityEngine::Animations::RotationConstraint::SetSources(::System::Collections::Generic::List_1<::UnityEngine::Animations::ConstraintSource>* sources) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::SetSources");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::RotationConstraint*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sources);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.SetSourcesInternal
void UnityEngine::Animations::RotationConstraint::SetSourcesInternal(::UnityEngine::Animations::RotationConstraint* self, ::System::Collections::Generic::List_1<::UnityEngine::Animations::ConstraintSource>* sources) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::SetSourcesInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "RotationConstraint", "SetSourcesInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(sources)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, sources);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.AddSource
int UnityEngine::Animations::RotationConstraint::AddSource(::UnityEngine::Animations::ConstraintSource source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::AddSource");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::RotationConstraint*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, source);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.RemoveSource
void UnityEngine::Animations::RotationConstraint::RemoveSource(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::RemoveSource");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::RotationConstraint*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.RemoveSourceInternal
void UnityEngine::Animations::RotationConstraint::RemoveSourceInternal(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::RemoveSourceInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSourceInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.GetSource
::UnityEngine::Animations::ConstraintSource UnityEngine::Animations::RotationConstraint::GetSource(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::GetSource");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::RotationConstraint*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::ConstraintSource, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.GetSourceInternal
::UnityEngine::Animations::ConstraintSource UnityEngine::Animations::RotationConstraint::GetSourceInternal(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::GetSourceInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSourceInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::ConstraintSource, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.SetSource
void UnityEngine::Animations::RotationConstraint::SetSource(int index, ::UnityEngine::Animations::ConstraintSource source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::SetSource");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::RotationConstraint*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, source);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.SetSourceInternal
void UnityEngine::Animations::RotationConstraint::SetSourceInternal(int index, ::UnityEngine::Animations::ConstraintSource source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::SetSourceInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSourceInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, source);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.ValidateSourceIndex
void UnityEngine::Animations::RotationConstraint::ValidateSourceIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::ValidateSourceIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateSourceIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.get_rotationAtRest_Injected
void UnityEngine::Animations::RotationConstraint::get_rotationAtRest_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::get_rotationAtRest_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationAtRest_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.set_rotationAtRest_Injected
void UnityEngine::Animations::RotationConstraint::set_rotationAtRest_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::set_rotationAtRest_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationAtRest_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.get_rotationOffset_Injected
void UnityEngine::Animations::RotationConstraint::get_rotationOffset_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::get_rotationOffset_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationOffset_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.set_rotationOffset_Injected
void UnityEngine::Animations::RotationConstraint::set_rotationOffset_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::set_rotationOffset_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationOffset_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.AddSource_Injected
int UnityEngine::Animations::RotationConstraint::AddSource_Injected(ByRef<::UnityEngine::Animations::ConstraintSource> source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::AddSource_Injected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::RotationConstraint*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(source));
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.GetSourceInternal_Injected
void UnityEngine::Animations::RotationConstraint::GetSourceInternal_Injected(int index, ByRef<::UnityEngine::Animations::ConstraintSource> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::GetSourceInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSourceInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Animations::ConstraintSource&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, byref(ret));
}
// Autogenerated method: UnityEngine.Animations.RotationConstraint.SetSourceInternal_Injected
void UnityEngine::Animations::RotationConstraint::SetSourceInternal_Injected(int index, ByRef<::UnityEngine::Animations::ConstraintSource> source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::RotationConstraint::SetSourceInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSourceInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, byref(source));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AssetBundle
#include "UnityEngine/AssetBundle.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.AssetBundleCreateRequest
#include "UnityEngine/AssetBundleCreateRequest.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.AssetBundleRequest
#include "UnityEngine/AssetBundleRequest.hpp"
// Including type: UnityEngine.AssetBundleUnloadOperation
#include "UnityEngine/AssetBundleUnloadOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AssetBundle.GetAllLoadedAssetBundles_Native
::ArrayW<::UnityEngine::AssetBundle*> UnityEngine::AssetBundle::GetAllLoadedAssetBundles_Native() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::GetAllLoadedAssetBundles_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AssetBundle", "GetAllLoadedAssetBundles_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::AssetBundle*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AssetBundle.GetAllLoadedAssetBundles
::System::Collections::Generic::IEnumerable_1<::UnityEngine::AssetBundle*>* UnityEngine::AssetBundle::GetAllLoadedAssetBundles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::GetAllLoadedAssetBundles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AssetBundle", "GetAllLoadedAssetBundles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::AssetBundle*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadFromFileAsync_Internal
::UnityEngine::AssetBundleCreateRequest* UnityEngine::AssetBundle::LoadFromFileAsync_Internal(::StringW path, uint crc, uint64_t offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadFromFileAsync_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AssetBundle", "LoadFromFileAsync_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(crc), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundleCreateRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, crc, offset);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadFromFileAsync
::UnityEngine::AssetBundleCreateRequest* UnityEngine::AssetBundle::LoadFromFileAsync(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadFromFileAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AssetBundle", "LoadFromFileAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundleCreateRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadFromFileAsync
::UnityEngine::AssetBundleCreateRequest* UnityEngine::AssetBundle::LoadFromFileAsync(::StringW path, uint crc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadFromFileAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AssetBundle", "LoadFromFileAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(crc)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundleCreateRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, crc);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadFromFile_Internal
::UnityEngine::AssetBundle* UnityEngine::AssetBundle::LoadFromFile_Internal(::StringW path, uint crc, uint64_t offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadFromFile_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AssetBundle", "LoadFromFile_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(crc), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundle*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, crc, offset);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadFromFile
::UnityEngine::AssetBundle* UnityEngine::AssetBundle::LoadFromFile(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AssetBundle", "LoadFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundle*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAsset
::UnityEngine::Object* UnityEngine::AssetBundle::LoadAsset(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAsset
::UnityEngine::Object* UnityEngine::AssetBundle::LoadAsset(::StringW name, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method, name, type);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAsset_Internal
::UnityEngine::Object* UnityEngine::AssetBundle::LoadAsset_Internal(::StringW name, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadAsset_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAsset_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method, name, type);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAssetAsync
::UnityEngine::AssetBundleRequest* UnityEngine::AssetBundle::LoadAssetAsync(::StringW name, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadAssetAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAssetAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundleRequest*, false>(this, ___internal__method, name, type);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAssetWithSubAssetsAsync
::UnityEngine::AssetBundleRequest* UnityEngine::AssetBundle::LoadAssetWithSubAssetsAsync(::StringW name, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadAssetWithSubAssetsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAssetWithSubAssetsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundleRequest*, false>(this, ___internal__method, name, type);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAllAssetsAsync
::UnityEngine::AssetBundleRequest* UnityEngine::AssetBundle::LoadAllAssetsAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadAllAssetsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAllAssetsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundleRequest*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAllAssetsAsync
::UnityEngine::AssetBundleRequest* UnityEngine::AssetBundle::LoadAllAssetsAsync(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadAllAssetsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAllAssetsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundleRequest*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAssetAsync_Internal
::UnityEngine::AssetBundleRequest* UnityEngine::AssetBundle::LoadAssetAsync_Internal(::StringW name, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadAssetAsync_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAssetAsync_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundleRequest*, false>(this, ___internal__method, name, type);
}
// Autogenerated method: UnityEngine.AssetBundle.Unload
void UnityEngine::AssetBundle::Unload(bool unloadAllLoadedObjects) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unloadAllLoadedObjects)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unloadAllLoadedObjects);
}
// Autogenerated method: UnityEngine.AssetBundle.UnloadAsync
::UnityEngine::AssetBundleUnloadOperation* UnityEngine::AssetBundle::UnloadAsync(bool unloadAllLoadedObjects) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::UnloadAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnloadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unloadAllLoadedObjects)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundleUnloadOperation*, false>(this, ___internal__method, unloadAllLoadedObjects);
}
// Autogenerated method: UnityEngine.AssetBundle.GetAllAssetNames
::ArrayW<::StringW> UnityEngine::AssetBundle::GetAllAssetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::GetAllAssetNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllAssetNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AssetBundle.GetAllScenePaths
::ArrayW<::StringW> UnityEngine::AssetBundle::GetAllScenePaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::GetAllScenePaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllScenePaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAssetWithSubAssetsAsync_Internal
::UnityEngine::AssetBundleRequest* UnityEngine::AssetBundle::LoadAssetWithSubAssetsAsync_Internal(::StringW name, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadAssetWithSubAssetsAsync_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAssetWithSubAssetsAsync_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundleRequest*, false>(this, ___internal__method, name, type);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AssetBundleCreateRequest
#include "UnityEngine/AssetBundleCreateRequest.hpp"
// Including type: UnityEngine.AssetBundle
#include "UnityEngine/AssetBundle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AssetBundleCreateRequest.get_assetBundle
::UnityEngine::AssetBundle* UnityEngine::AssetBundleCreateRequest::get_assetBundle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundleCreateRequest::get_assetBundle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_assetBundle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundle*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AssetBundleRequest
#include "UnityEngine/AssetBundleRequest.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AssetBundleRequest.get_asset
::UnityEngine::Object* UnityEngine::AssetBundleRequest::get_asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundleRequest::get_asset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AssetBundleRequest.get_allAssets
::ArrayW<::UnityEngine::Object*> UnityEngine::AssetBundleRequest::get_allAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundleRequest::get_allAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AssetBundleRequest.GetResult
::UnityEngine::Object* UnityEngine::AssetBundleRequest::GetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundleRequest::GetResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ResourceRequest*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AssetBundleUnloadOperation
#include "UnityEngine/AssetBundleUnloadOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AssetBundleUnloadOperation.WaitForCompletion
void UnityEngine::AssetBundleUnloadOperation::WaitForCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundleUnloadOperation::WaitForCompletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioSpeakerMode
#include "UnityEngine/AudioSpeakerMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSpeakerMode Raw
::UnityEngine::AudioSpeakerMode UnityEngine::AudioSpeakerMode::_get_Raw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::_get_Raw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioSpeakerMode>("UnityEngine", "AudioSpeakerMode", "Raw"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSpeakerMode Raw
void UnityEngine::AudioSpeakerMode::_set_Raw(::UnityEngine::AudioSpeakerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::_set_Raw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSpeakerMode", "Raw", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSpeakerMode Mono
::UnityEngine::AudioSpeakerMode UnityEngine::AudioSpeakerMode::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioSpeakerMode>("UnityEngine", "AudioSpeakerMode", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSpeakerMode Mono
void UnityEngine::AudioSpeakerMode::_set_Mono(::UnityEngine::AudioSpeakerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSpeakerMode", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSpeakerMode Stereo
::UnityEngine::AudioSpeakerMode UnityEngine::AudioSpeakerMode::_get_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::_get_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioSpeakerMode>("UnityEngine", "AudioSpeakerMode", "Stereo"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSpeakerMode Stereo
void UnityEngine::AudioSpeakerMode::_set_Stereo(::UnityEngine::AudioSpeakerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::_set_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSpeakerMode", "Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSpeakerMode Quad
::UnityEngine::AudioSpeakerMode UnityEngine::AudioSpeakerMode::_get_Quad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::_get_Quad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioSpeakerMode>("UnityEngine", "AudioSpeakerMode", "Quad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSpeakerMode Quad
void UnityEngine::AudioSpeakerMode::_set_Quad(::UnityEngine::AudioSpeakerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::_set_Quad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSpeakerMode", "Quad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSpeakerMode Surround
::UnityEngine::AudioSpeakerMode UnityEngine::AudioSpeakerMode::_get_Surround() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::_get_Surround");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioSpeakerMode>("UnityEngine", "AudioSpeakerMode", "Surround"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSpeakerMode Surround
void UnityEngine::AudioSpeakerMode::_set_Surround(::UnityEngine::AudioSpeakerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::_set_Surround");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSpeakerMode", "Surround", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSpeakerMode Mode5point1
::UnityEngine::AudioSpeakerMode UnityEngine::AudioSpeakerMode::_get_Mode5point1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::_get_Mode5point1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioSpeakerMode>("UnityEngine", "AudioSpeakerMode", "Mode5point1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSpeakerMode Mode5point1
void UnityEngine::AudioSpeakerMode::_set_Mode5point1(::UnityEngine::AudioSpeakerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::_set_Mode5point1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSpeakerMode", "Mode5point1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSpeakerMode Mode7point1
::UnityEngine::AudioSpeakerMode UnityEngine::AudioSpeakerMode::_get_Mode7point1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::_get_Mode7point1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioSpeakerMode>("UnityEngine", "AudioSpeakerMode", "Mode7point1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSpeakerMode Mode7point1
void UnityEngine::AudioSpeakerMode::_set_Mode7point1(::UnityEngine::AudioSpeakerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::_set_Mode7point1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSpeakerMode", "Mode7point1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSpeakerMode Prologic
::UnityEngine::AudioSpeakerMode UnityEngine::AudioSpeakerMode::_get_Prologic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::_get_Prologic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioSpeakerMode>("UnityEngine", "AudioSpeakerMode", "Prologic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSpeakerMode Prologic
void UnityEngine::AudioSpeakerMode::_set_Prologic(::UnityEngine::AudioSpeakerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::_set_Prologic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSpeakerMode", "Prologic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AudioSpeakerMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSpeakerMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioDataLoadState
#include "UnityEngine/AudioDataLoadState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioDataLoadState Unloaded
::UnityEngine::AudioDataLoadState UnityEngine::AudioDataLoadState::_get_Unloaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::_get_Unloaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioDataLoadState>("UnityEngine", "AudioDataLoadState", "Unloaded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioDataLoadState Unloaded
void UnityEngine::AudioDataLoadState::_set_Unloaded(::UnityEngine::AudioDataLoadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::_set_Unloaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioDataLoadState", "Unloaded", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioDataLoadState Loading
::UnityEngine::AudioDataLoadState UnityEngine::AudioDataLoadState::_get_Loading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::_get_Loading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioDataLoadState>("UnityEngine", "AudioDataLoadState", "Loading"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioDataLoadState Loading
void UnityEngine::AudioDataLoadState::_set_Loading(::UnityEngine::AudioDataLoadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::_set_Loading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioDataLoadState", "Loading", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioDataLoadState Loaded
::UnityEngine::AudioDataLoadState UnityEngine::AudioDataLoadState::_get_Loaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::_get_Loaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioDataLoadState>("UnityEngine", "AudioDataLoadState", "Loaded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioDataLoadState Loaded
void UnityEngine::AudioDataLoadState::_set_Loaded(::UnityEngine::AudioDataLoadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::_set_Loaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioDataLoadState", "Loaded", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioDataLoadState Failed
::UnityEngine::AudioDataLoadState UnityEngine::AudioDataLoadState::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioDataLoadState>("UnityEngine", "AudioDataLoadState", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioDataLoadState Failed
void UnityEngine::AudioDataLoadState::_set_Failed(::UnityEngine::AudioDataLoadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioDataLoadState", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AudioDataLoadState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioClipLoadType
#include "UnityEngine/AudioClipLoadType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioClipLoadType DecompressOnLoad
::UnityEngine::AudioClipLoadType UnityEngine::AudioClipLoadType::_get_DecompressOnLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClipLoadType::_get_DecompressOnLoad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioClipLoadType>("UnityEngine", "AudioClipLoadType", "DecompressOnLoad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioClipLoadType DecompressOnLoad
void UnityEngine::AudioClipLoadType::_set_DecompressOnLoad(::UnityEngine::AudioClipLoadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClipLoadType::_set_DecompressOnLoad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioClipLoadType", "DecompressOnLoad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioClipLoadType CompressedInMemory
::UnityEngine::AudioClipLoadType UnityEngine::AudioClipLoadType::_get_CompressedInMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClipLoadType::_get_CompressedInMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioClipLoadType>("UnityEngine", "AudioClipLoadType", "CompressedInMemory"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioClipLoadType CompressedInMemory
void UnityEngine::AudioClipLoadType::_set_CompressedInMemory(::UnityEngine::AudioClipLoadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClipLoadType::_set_CompressedInMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioClipLoadType", "CompressedInMemory", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioClipLoadType Streaming
::UnityEngine::AudioClipLoadType UnityEngine::AudioClipLoadType::_get_Streaming() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClipLoadType::_get_Streaming");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioClipLoadType>("UnityEngine", "AudioClipLoadType", "Streaming"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioClipLoadType Streaming
void UnityEngine::AudioClipLoadType::_set_Streaming(::UnityEngine::AudioClipLoadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClipLoadType::_set_Streaming");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioClipLoadType", "Streaming", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AudioClipLoadType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClipLoadType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioVelocityUpdateMode
#include "UnityEngine/AudioVelocityUpdateMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioVelocityUpdateMode Auto
::UnityEngine::AudioVelocityUpdateMode UnityEngine::AudioVelocityUpdateMode::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioVelocityUpdateMode::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioVelocityUpdateMode>("UnityEngine", "AudioVelocityUpdateMode", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioVelocityUpdateMode Auto
void UnityEngine::AudioVelocityUpdateMode::_set_Auto(::UnityEngine::AudioVelocityUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioVelocityUpdateMode::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioVelocityUpdateMode", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioVelocityUpdateMode Fixed
::UnityEngine::AudioVelocityUpdateMode UnityEngine::AudioVelocityUpdateMode::_get_Fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioVelocityUpdateMode::_get_Fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioVelocityUpdateMode>("UnityEngine", "AudioVelocityUpdateMode", "Fixed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioVelocityUpdateMode Fixed
void UnityEngine::AudioVelocityUpdateMode::_set_Fixed(::UnityEngine::AudioVelocityUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioVelocityUpdateMode::_set_Fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioVelocityUpdateMode", "Fixed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioVelocityUpdateMode Dynamic
::UnityEngine::AudioVelocityUpdateMode UnityEngine::AudioVelocityUpdateMode::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioVelocityUpdateMode::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioVelocityUpdateMode>("UnityEngine", "AudioVelocityUpdateMode", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioVelocityUpdateMode Dynamic
void UnityEngine::AudioVelocityUpdateMode::_set_Dynamic(::UnityEngine::AudioVelocityUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioVelocityUpdateMode::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioVelocityUpdateMode", "Dynamic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AudioVelocityUpdateMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioVelocityUpdateMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.FFTWindow
#include "UnityEngine/FFTWindow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow Rectangular
::UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_Rectangular() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_get_Rectangular");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "Rectangular"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow Rectangular
void UnityEngine::FFTWindow::_set_Rectangular(::UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_set_Rectangular");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "Rectangular", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow Triangle
::UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_Triangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_get_Triangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "Triangle"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow Triangle
void UnityEngine::FFTWindow::_set_Triangle(::UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_set_Triangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "Triangle", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow Hamming
::UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_Hamming() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_get_Hamming");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "Hamming"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow Hamming
void UnityEngine::FFTWindow::_set_Hamming(::UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_set_Hamming");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "Hamming", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow Hanning
::UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_Hanning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_get_Hanning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "Hanning"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow Hanning
void UnityEngine::FFTWindow::_set_Hanning(::UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_set_Hanning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "Hanning", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow Blackman
::UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_Blackman() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_get_Blackman");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "Blackman"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow Blackman
void UnityEngine::FFTWindow::_set_Blackman(::UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_set_Blackman");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "Blackman", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow BlackmanHarris
::UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_BlackmanHarris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_get_BlackmanHarris");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "BlackmanHarris"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow BlackmanHarris
void UnityEngine::FFTWindow::_set_BlackmanHarris(::UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_set_BlackmanHarris");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "BlackmanHarris", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::FFTWindow::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioRolloffMode
#include "UnityEngine/AudioRolloffMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioRolloffMode Logarithmic
::UnityEngine::AudioRolloffMode UnityEngine::AudioRolloffMode::_get_Logarithmic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioRolloffMode::_get_Logarithmic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioRolloffMode>("UnityEngine", "AudioRolloffMode", "Logarithmic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioRolloffMode Logarithmic
void UnityEngine::AudioRolloffMode::_set_Logarithmic(::UnityEngine::AudioRolloffMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioRolloffMode::_set_Logarithmic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioRolloffMode", "Logarithmic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioRolloffMode Linear
::UnityEngine::AudioRolloffMode UnityEngine::AudioRolloffMode::_get_Linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioRolloffMode::_get_Linear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioRolloffMode>("UnityEngine", "AudioRolloffMode", "Linear"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioRolloffMode Linear
void UnityEngine::AudioRolloffMode::_set_Linear(::UnityEngine::AudioRolloffMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioRolloffMode::_set_Linear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioRolloffMode", "Linear", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioRolloffMode Custom
::UnityEngine::AudioRolloffMode UnityEngine::AudioRolloffMode::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioRolloffMode::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioRolloffMode>("UnityEngine", "AudioRolloffMode", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioRolloffMode Custom
void UnityEngine::AudioRolloffMode::_set_Custom(::UnityEngine::AudioRolloffMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioRolloffMode::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioRolloffMode", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AudioRolloffMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioRolloffMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioSourceCurveType
#include "UnityEngine/AudioSourceCurveType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSourceCurveType CustomRolloff
::UnityEngine::AudioSourceCurveType UnityEngine::AudioSourceCurveType::_get_CustomRolloff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceCurveType::_get_CustomRolloff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioSourceCurveType>("UnityEngine", "AudioSourceCurveType", "CustomRolloff"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSourceCurveType CustomRolloff
void UnityEngine::AudioSourceCurveType::_set_CustomRolloff(::UnityEngine::AudioSourceCurveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceCurveType::_set_CustomRolloff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSourceCurveType", "CustomRolloff", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSourceCurveType SpatialBlend
::UnityEngine::AudioSourceCurveType UnityEngine::AudioSourceCurveType::_get_SpatialBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceCurveType::_get_SpatialBlend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioSourceCurveType>("UnityEngine", "AudioSourceCurveType", "SpatialBlend"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSourceCurveType SpatialBlend
void UnityEngine::AudioSourceCurveType::_set_SpatialBlend(::UnityEngine::AudioSourceCurveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceCurveType::_set_SpatialBlend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSourceCurveType", "SpatialBlend", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSourceCurveType ReverbZoneMix
::UnityEngine::AudioSourceCurveType UnityEngine::AudioSourceCurveType::_get_ReverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceCurveType::_get_ReverbZoneMix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioSourceCurveType>("UnityEngine", "AudioSourceCurveType", "ReverbZoneMix"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSourceCurveType ReverbZoneMix
void UnityEngine::AudioSourceCurveType::_set_ReverbZoneMix(::UnityEngine::AudioSourceCurveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceCurveType::_set_ReverbZoneMix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSourceCurveType", "ReverbZoneMix", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSourceCurveType Spread
::UnityEngine::AudioSourceCurveType UnityEngine::AudioSourceCurveType::_get_Spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceCurveType::_get_Spread");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioSourceCurveType>("UnityEngine", "AudioSourceCurveType", "Spread"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSourceCurveType Spread
void UnityEngine::AudioSourceCurveType::_set_Spread(::UnityEngine::AudioSourceCurveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceCurveType::_set_Spread");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSourceCurveType", "Spread", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AudioSourceCurveType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceCurveType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioSettings
#include "UnityEngine/AudioSettings.hpp"
// Including type: UnityEngine.AudioSettings/AudioConfigurationChangeHandler
#include "UnityEngine/AudioSettings_AudioConfigurationChangeHandler.hpp"
// Including type: UnityEngine.AudioSettings/Mobile
#include "UnityEngine/AudioSettings_Mobile.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.AudioSpeakerMode
#include "UnityEngine/AudioSpeakerMode.hpp"
// Including type: UnityEngine.AudioConfiguration
#include "UnityEngine/AudioConfiguration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.AudioSettings/AudioConfigurationChangeHandler OnAudioConfigurationChanged
::UnityEngine::AudioSettings::AudioConfigurationChangeHandler* UnityEngine::AudioSettings::_get_OnAudioConfigurationChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::_get_OnAudioConfigurationChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioSettings::AudioConfigurationChangeHandler*>("UnityEngine", "AudioSettings", "OnAudioConfigurationChanged"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AudioSettings/AudioConfigurationChangeHandler OnAudioConfigurationChanged
void UnityEngine::AudioSettings::_set_OnAudioConfigurationChanged(::UnityEngine::AudioSettings::AudioConfigurationChangeHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::_set_OnAudioConfigurationChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSettings", "OnAudioConfigurationChanged", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action OnAudioSystemShuttingDown
::System::Action* UnityEngine::AudioSettings::_get_OnAudioSystemShuttingDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::_get_OnAudioSystemShuttingDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("UnityEngine", "AudioSettings", "OnAudioSystemShuttingDown"));
}
// Autogenerated static field setter
// Set static field: static private System.Action OnAudioSystemShuttingDown
void UnityEngine::AudioSettings::_set_OnAudioSystemShuttingDown(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::_set_OnAudioSystemShuttingDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSettings", "OnAudioSystemShuttingDown", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action OnAudioSystemStartedUp
::System::Action* UnityEngine::AudioSettings::_get_OnAudioSystemStartedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::_get_OnAudioSystemStartedUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("UnityEngine", "AudioSettings", "OnAudioSystemStartedUp"));
}
// Autogenerated static field setter
// Set static field: static private System.Action OnAudioSystemStartedUp
void UnityEngine::AudioSettings::_set_OnAudioSystemStartedUp(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::_set_OnAudioSystemStartedUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSettings", "OnAudioSystemStartedUp", value));
}
// Autogenerated method: UnityEngine.AudioSettings.GetSpeakerMode
::UnityEngine::AudioSpeakerMode UnityEngine::AudioSettings::GetSpeakerMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::GetSpeakerMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "GetSpeakerMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioSpeakerMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.GetSampleRate
int UnityEngine::AudioSettings::GetSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::GetSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "GetSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.get_speakerMode
::UnityEngine::AudioSpeakerMode UnityEngine::AudioSettings::get_speakerMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::get_speakerMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "get_speakerMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioSpeakerMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.get_dspTime
double UnityEngine::AudioSettings::get_dspTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::get_dspTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "get_dspTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.get_outputSampleRate
int UnityEngine::AudioSettings::get_outputSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::get_outputSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "get_outputSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.GetDSPBufferSize
void UnityEngine::AudioSettings::GetDSPBufferSize(ByRef<int> bufferLength, ByRef<int> numBuffers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::GetDSPBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "GetDSPBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(bufferLength), byref(numBuffers));
}
// Autogenerated method: UnityEngine.AudioSettings.GetConfiguration
::UnityEngine::AudioConfiguration UnityEngine::AudioSettings::GetConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::GetConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "GetConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioConfiguration, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.add_OnAudioConfigurationChanged
void UnityEngine::AudioSettings::add_OnAudioConfigurationChanged(::UnityEngine::AudioSettings::AudioConfigurationChangeHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::add_OnAudioConfigurationChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "add_OnAudioConfigurationChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSettings.remove_OnAudioConfigurationChanged
void UnityEngine::AudioSettings::remove_OnAudioConfigurationChanged(::UnityEngine::AudioSettings::AudioConfigurationChangeHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::remove_OnAudioConfigurationChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "remove_OnAudioConfigurationChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSettings.InvokeOnAudioConfigurationChanged
void UnityEngine::AudioSettings::InvokeOnAudioConfigurationChanged(bool deviceWasChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::InvokeOnAudioConfigurationChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "InvokeOnAudioConfigurationChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceWasChanged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceWasChanged);
}
// Autogenerated method: UnityEngine.AudioSettings.InvokeOnAudioSystemShuttingDown
void UnityEngine::AudioSettings::InvokeOnAudioSystemShuttingDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::InvokeOnAudioSystemShuttingDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "InvokeOnAudioSystemShuttingDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.InvokeOnAudioSystemStartedUp
void UnityEngine::AudioSettings::InvokeOnAudioSystemStartedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::InvokeOnAudioSystemStartedUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "InvokeOnAudioSystemStartedUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.StartAudioOutput
bool UnityEngine::AudioSettings::StartAudioOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::StartAudioOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "StartAudioOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.StopAudioOutput
bool UnityEngine::AudioSettings::StopAudioOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::StopAudioOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "StopAudioOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.GetConfiguration_Injected
void UnityEngine::AudioSettings::GetConfiguration_Injected(ByRef<::UnityEngine::AudioConfiguration> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::GetConfiguration_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "GetConfiguration_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::AudioConfiguration&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AudioSettings/AudioConfigurationChangeHandler
#include "UnityEngine/AudioSettings_AudioConfigurationChangeHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AudioSettings/AudioConfigurationChangeHandler.Invoke
void UnityEngine::AudioSettings::AudioConfigurationChangeHandler::Invoke(bool deviceWasChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::AudioConfigurationChangeHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AudioSettings::AudioConfigurationChangeHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deviceWasChanged);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioSettings/Mobile
#include "UnityEngine/AudioSettings_Mobile.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean <muteState>k__BackingField
bool UnityEngine::AudioSettings::Mobile::_get_$muteState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::_get_$muteState$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("UnityEngine", "AudioSettings/Mobile", "<muteState>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <muteState>k__BackingField
void UnityEngine::AudioSettings::Mobile::_set_$muteState$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::_set_$muteState$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSettings/Mobile", "<muteState>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _stopAudioOutputOnMute
bool UnityEngine::AudioSettings::Mobile::_get__stopAudioOutputOnMute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::_get__stopAudioOutputOnMute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine", "AudioSettings/Mobile", "_stopAudioOutputOnMute"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _stopAudioOutputOnMute
void UnityEngine::AudioSettings::Mobile::_set__stopAudioOutputOnMute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::_set__stopAudioOutputOnMute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSettings/Mobile", "_stopAudioOutputOnMute", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Boolean> OnMuteStateChanged
::System::Action_1<bool>* UnityEngine::AudioSettings::Mobile::_get_OnMuteStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::_get_OnMuteStateChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<bool>*>("UnityEngine", "AudioSettings/Mobile", "OnMuteStateChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Boolean> OnMuteStateChanged
void UnityEngine::AudioSettings::Mobile::_set_OnMuteStateChanged(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::_set_OnMuteStateChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSettings/Mobile", "OnMuteStateChanged", value));
}
// Autogenerated method: UnityEngine.AudioSettings/Mobile.get_muteState
bool UnityEngine::AudioSettings::Mobile::get_muteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::get_muteState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "get_muteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings/Mobile.set_muteState
void UnityEngine::AudioSettings::Mobile::set_muteState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::set_muteState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "set_muteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSettings/Mobile.get_stopAudioOutputOnMute
bool UnityEngine::AudioSettings::Mobile::get_stopAudioOutputOnMute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::get_stopAudioOutputOnMute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "get_stopAudioOutputOnMute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings/Mobile.InvokeOnMuteStateChanged
void UnityEngine::AudioSettings::Mobile::InvokeOnMuteStateChanged(bool mute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::InvokeOnMuteStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "InvokeOnMuteStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mute);
}
// Autogenerated method: UnityEngine.AudioSettings/Mobile.InvokeIsStopAudioOutputOnMuteEnabled
bool UnityEngine::AudioSettings::Mobile::InvokeIsStopAudioOutputOnMuteEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::InvokeIsStopAudioOutputOnMuteEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "InvokeIsStopAudioOutputOnMuteEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings/Mobile.StartAudioOutput
void UnityEngine::AudioSettings::Mobile::StartAudioOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::StartAudioOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "StartAudioOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings/Mobile.StopAudioOutput
void UnityEngine::AudioSettings::Mobile::StopAudioOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::StopAudioOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "StopAudioOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.AudioClip/PCMReaderCallback
#include "UnityEngine/AudioClip_PCMReaderCallback.hpp"
// Including type: UnityEngine.AudioClip/PCMSetPositionCallback
#include "UnityEngine/AudioClip_PCMSetPositionCallback.hpp"
// Including type: UnityEngine.AudioClipLoadType
#include "UnityEngine/AudioClipLoadType.hpp"
// Including type: UnityEngine.AudioDataLoadState
#include "UnityEngine/AudioDataLoadState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip/PCMReaderCallback m_PCMReaderCallback
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip::PCMReaderCallback*& UnityEngine::AudioClip::dyn_m_PCMReaderCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::dyn_m_PCMReaderCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PCMReaderCallback"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip::PCMReaderCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip/PCMSetPositionCallback m_PCMSetPositionCallback
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip::PCMSetPositionCallback*& UnityEngine::AudioClip::dyn_m_PCMSetPositionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::dyn_m_PCMSetPositionCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PCMSetPositionCallback"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip::PCMSetPositionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AudioClip.GetData
bool UnityEngine::AudioClip::GetData(::UnityEngine::AudioClip* clip, ByRef<::ArrayW<float>> data, int numSamples, int samplesOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>(), ::il2cpp_utils::ExtractType(numSamples), ::il2cpp_utils::ExtractType(samplesOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, byref(data), numSamples, samplesOffset);
}
// Autogenerated method: UnityEngine.AudioClip.SetData
bool UnityEngine::AudioClip::SetData(::UnityEngine::AudioClip* clip, ::ArrayW<float> data, int numsamples, int samplesOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(numsamples), ::il2cpp_utils::ExtractType(samplesOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, data, numsamples, samplesOffset);
}
// Autogenerated method: UnityEngine.AudioClip.Construct_Internal
::UnityEngine::AudioClip* UnityEngine::AudioClip::Construct_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::Construct_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "Construct_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.GetName
::StringW UnityEngine::AudioClip::GetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.CreateUserSound
void UnityEngine::AudioClip::CreateUserSound(::StringW name, int lengthSamples, int channels, int frequency, bool stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::CreateUserSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUserSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, lengthSamples, channels, frequency, stream);
}
// Autogenerated method: UnityEngine.AudioClip.get_length
float UnityEngine::AudioClip::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_samples
int UnityEngine::AudioClip::get_samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::get_samples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_samples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_channels
int UnityEngine::AudioClip::get_channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::get_channels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_channels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_frequency
int UnityEngine::AudioClip::get_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::get_frequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_isReadyToPlay
bool UnityEngine::AudioClip::get_isReadyToPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::get_isReadyToPlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReadyToPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_loadType
::UnityEngine::AudioClipLoadType UnityEngine::AudioClip::get_loadType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::get_loadType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loadType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClipLoadType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.LoadAudioData
bool UnityEngine::AudioClip::LoadAudioData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::LoadAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.UnloadAudioData
bool UnityEngine::AudioClip::UnloadAudioData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::UnloadAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnloadAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_preloadAudioData
bool UnityEngine::AudioClip::get_preloadAudioData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::get_preloadAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preloadAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_ambisonic
bool UnityEngine::AudioClip::get_ambisonic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::get_ambisonic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ambisonic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_loadInBackground
bool UnityEngine::AudioClip::get_loadInBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::get_loadInBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loadInBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_loadState
::UnityEngine::AudioDataLoadState UnityEngine::AudioClip::get_loadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::get_loadState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loadState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioDataLoadState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.GetData
bool UnityEngine::AudioClip::GetData(::ArrayW<float> data, int offsetSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offsetSamples)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, offsetSamples);
}
// Autogenerated method: UnityEngine.AudioClip.SetData
bool UnityEngine::AudioClip::SetData(::ArrayW<float> data, int offsetSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offsetSamples)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, offsetSamples);
}
// Autogenerated method: UnityEngine.AudioClip.Create
::UnityEngine::AudioClip* UnityEngine::AudioClip::Create(::StringW name, int lengthSamples, int channels, int frequency, bool _3D, bool stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(_3D), ::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, lengthSamples, channels, frequency, _3D, stream);
}
// Autogenerated method: UnityEngine.AudioClip.Create
::UnityEngine::AudioClip* UnityEngine::AudioClip::Create(::StringW name, int lengthSamples, int channels, int frequency, bool _3D, bool stream, ::UnityEngine::AudioClip::PCMReaderCallback* pcmreadercallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(_3D), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(pcmreadercallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, lengthSamples, channels, frequency, _3D, stream, pcmreadercallback);
}
// Autogenerated method: UnityEngine.AudioClip.Create
::UnityEngine::AudioClip* UnityEngine::AudioClip::Create(::StringW name, int lengthSamples, int channels, int frequency, bool _3D, bool stream, ::UnityEngine::AudioClip::PCMReaderCallback* pcmreadercallback, ::UnityEngine::AudioClip::PCMSetPositionCallback* pcmsetpositioncallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(_3D), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(pcmreadercallback), ::il2cpp_utils::ExtractType(pcmsetpositioncallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, lengthSamples, channels, frequency, _3D, stream, pcmreadercallback, pcmsetpositioncallback);
}
// Autogenerated method: UnityEngine.AudioClip.Create
::UnityEngine::AudioClip* UnityEngine::AudioClip::Create(::StringW name, int lengthSamples, int channels, int frequency, bool stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, lengthSamples, channels, frequency, stream);
}
// Autogenerated method: UnityEngine.AudioClip.Create
::UnityEngine::AudioClip* UnityEngine::AudioClip::Create(::StringW name, int lengthSamples, int channels, int frequency, bool stream, ::UnityEngine::AudioClip::PCMReaderCallback* pcmreadercallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(pcmreadercallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, lengthSamples, channels, frequency, stream, pcmreadercallback);
}
// Autogenerated method: UnityEngine.AudioClip.Create
::UnityEngine::AudioClip* UnityEngine::AudioClip::Create(::StringW name, int lengthSamples, int channels, int frequency, bool stream, ::UnityEngine::AudioClip::PCMReaderCallback* pcmreadercallback, ::UnityEngine::AudioClip::PCMSetPositionCallback* pcmsetpositioncallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(pcmreadercallback), ::il2cpp_utils::ExtractType(pcmsetpositioncallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, lengthSamples, channels, frequency, stream, pcmreadercallback, pcmsetpositioncallback);
}
// Autogenerated method: UnityEngine.AudioClip.add_m_PCMReaderCallback
void UnityEngine::AudioClip::add_m_PCMReaderCallback(::UnityEngine::AudioClip::PCMReaderCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::add_m_PCMReaderCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_m_PCMReaderCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioClip.remove_m_PCMReaderCallback
void UnityEngine::AudioClip::remove_m_PCMReaderCallback(::UnityEngine::AudioClip::PCMReaderCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::remove_m_PCMReaderCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_m_PCMReaderCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioClip.add_m_PCMSetPositionCallback
void UnityEngine::AudioClip::add_m_PCMSetPositionCallback(::UnityEngine::AudioClip::PCMSetPositionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::add_m_PCMSetPositionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_m_PCMSetPositionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioClip.remove_m_PCMSetPositionCallback
void UnityEngine::AudioClip::remove_m_PCMSetPositionCallback(::UnityEngine::AudioClip::PCMSetPositionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::remove_m_PCMSetPositionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_m_PCMSetPositionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioClip.InvokePCMReaderCallback_Internal
void UnityEngine::AudioClip::InvokePCMReaderCallback_Internal(::ArrayW<float> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::InvokePCMReaderCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePCMReaderCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.AudioClip.InvokePCMSetPositionCallback_Internal
void UnityEngine::AudioClip::InvokePCMSetPositionCallback_Internal(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::InvokePCMSetPositionCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePCMSetPositionCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AudioClip/PCMReaderCallback
#include "UnityEngine/AudioClip_PCMReaderCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AudioClip/PCMReaderCallback.Invoke
void UnityEngine::AudioClip::PCMReaderCallback::Invoke(::ArrayW<float> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::PCMReaderCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AudioClip::PCMReaderCallback*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
