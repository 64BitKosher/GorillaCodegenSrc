// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.OVR.Input.OVRAxis1D/RemapConfig
#include "Oculus/Interaction/OVR/Input/OVRAxis1D_RemapConfig.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Enabled
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::OVR::Input::OVRAxis1D::RemapConfig::dyn_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OVR::Input::OVRAxis1D::RemapConfig::dyn_Enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve Curve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::OVR::Input::OVRAxis1D::RemapConfig::dyn_Curve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OVR::Input::OVRAxis1D::RemapConfig::dyn_Curve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Curve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.OVR.Input.OVRAxis2D
#include "Oculus/Interaction/OVR/Input/OVRAxis2D.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller _controller
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& Oculus::Interaction::OVR::Input::OVRAxis2D::dyn__controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OVR::Input::OVRAxis2D::dyn__controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Axis2D _axis2D
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Axis2D& Oculus::Interaction::OVR::Input::OVRAxis2D::dyn__axis2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OVR::Input::OVRAxis2D::dyn__axis2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_axis2D"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Axis2D*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.OVR.Input.OVRAxis2D.Value
::UnityEngine::Vector2 Oculus::Interaction::OVR::Input::OVRAxis2D::Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OVR::Input::OVRAxis2D::Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OVR::Input::OVRAxis2D*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.OVR.Input.OVRButton
#include "Oculus/Interaction/OVR/Input/OVRButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller _controller
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& Oculus::Interaction::OVR::Input::OVRButton::dyn__controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OVR::Input::OVRButton::dyn__controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Button _button
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Button& Oculus::Interaction::OVR::Input::OVRButton::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OVR::Input::OVRButton::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.OVR.Input.OVRButton.Value
bool Oculus::Interaction::OVR::Input::OVRButton::Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OVR::Input::OVRButton::Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OVR::Input::OVRButton*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.OVR.Input.OVRButtonActiveState
#include "Oculus/Interaction/OVR/Input/OVRButtonActiveState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRInput/Button _button
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Button& Oculus::Interaction::OVR::Input::OVRButtonActiveState::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OVR::Input::OVRButtonActiveState::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.OVR.Input.OVRButtonActiveState.get_Active
bool Oculus::Interaction::OVR::Input::OVRButtonActiveState::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::OVR::Input::OVRButtonActiveState::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::OVR::Input::OVRButtonActiveState*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.AnimatedHandOVR
#include "Oculus/Interaction/Input/AnimatedHandOVR.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String ANIM_LAYER_NAME_POINT
::StringW Oculus::Interaction::Input::AnimatedHandOVR::_get_ANIM_LAYER_NAME_POINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::_get_ANIM_LAYER_NAME_POINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.Input", "AnimatedHandOVR", "ANIM_LAYER_NAME_POINT"));
}
// Autogenerated static field setter
// Set static field: static public System.String ANIM_LAYER_NAME_POINT
void Oculus::Interaction::Input::AnimatedHandOVR::_set_ANIM_LAYER_NAME_POINT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::_set_ANIM_LAYER_NAME_POINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "AnimatedHandOVR", "ANIM_LAYER_NAME_POINT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ANIM_LAYER_NAME_THUMB
::StringW Oculus::Interaction::Input::AnimatedHandOVR::_get_ANIM_LAYER_NAME_THUMB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::_get_ANIM_LAYER_NAME_THUMB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.Input", "AnimatedHandOVR", "ANIM_LAYER_NAME_THUMB"));
}
// Autogenerated static field setter
// Set static field: static public System.String ANIM_LAYER_NAME_THUMB
void Oculus::Interaction::Input::AnimatedHandOVR::_set_ANIM_LAYER_NAME_THUMB(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::_set_ANIM_LAYER_NAME_THUMB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "AnimatedHandOVR", "ANIM_LAYER_NAME_THUMB", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ANIM_PARAM_NAME_FLEX
::StringW Oculus::Interaction::Input::AnimatedHandOVR::_get_ANIM_PARAM_NAME_FLEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::_get_ANIM_PARAM_NAME_FLEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.Input", "AnimatedHandOVR", "ANIM_PARAM_NAME_FLEX"));
}
// Autogenerated static field setter
// Set static field: static public System.String ANIM_PARAM_NAME_FLEX
void Oculus::Interaction::Input::AnimatedHandOVR::_set_ANIM_PARAM_NAME_FLEX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::_set_ANIM_PARAM_NAME_FLEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "AnimatedHandOVR", "ANIM_PARAM_NAME_FLEX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ANIM_PARAM_NAME_PINCH
::StringW Oculus::Interaction::Input::AnimatedHandOVR::_get_ANIM_PARAM_NAME_PINCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::_get_ANIM_PARAM_NAME_PINCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.Input", "AnimatedHandOVR", "ANIM_PARAM_NAME_PINCH"));
}
// Autogenerated static field setter
// Set static field: static public System.String ANIM_PARAM_NAME_PINCH
void Oculus::Interaction::Input::AnimatedHandOVR::_set_ANIM_PARAM_NAME_PINCH(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::_set_ANIM_PARAM_NAME_PINCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "AnimatedHandOVR", "ANIM_PARAM_NAME_PINCH", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ANIM_PARAM_NAME_INDEX_SLIDE
::StringW Oculus::Interaction::Input::AnimatedHandOVR::_get_ANIM_PARAM_NAME_INDEX_SLIDE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::_get_ANIM_PARAM_NAME_INDEX_SLIDE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Interaction.Input", "AnimatedHandOVR", "ANIM_PARAM_NAME_INDEX_SLIDE"));
}
// Autogenerated static field setter
// Set static field: static public System.String ANIM_PARAM_NAME_INDEX_SLIDE
void Oculus::Interaction::Input::AnimatedHandOVR::_set_ANIM_PARAM_NAME_INDEX_SLIDE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::_set_ANIM_PARAM_NAME_INDEX_SLIDE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "AnimatedHandOVR", "ANIM_PARAM_NAME_INDEX_SLIDE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single TRIGGER_MAX
float Oculus::Interaction::Input::AnimatedHandOVR::_get_TRIGGER_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::_get_TRIGGER_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Interaction.Input", "AnimatedHandOVR", "TRIGGER_MAX"));
}
// Autogenerated static field setter
// Set static field: static private System.Single TRIGGER_MAX
void Oculus::Interaction::Input::AnimatedHandOVR::_set_TRIGGER_MAX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::_set_TRIGGER_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "AnimatedHandOVR", "TRIGGER_MAX", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller _controller
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& Oculus::Interaction::Input::AnimatedHandOVR::dyn__controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator _animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& Oculus::Interaction::Input::AnimatedHandOVR::dyn__animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.AnimatedHandOVR/AllowThumbUp _allowThumbUp
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp& Oculus::Interaction::Input::AnimatedHandOVR::dyn__allowThumbUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__allowThumbUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowThumbUp"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animFlexhGain
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::AnimatedHandOVR::dyn__animFlexhGain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__animFlexhGain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animFlexhGain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animPinchGain
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::AnimatedHandOVR::dyn__animPinchGain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__animPinchGain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animPinchGain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animPointAndThumbsUpGain
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::AnimatedHandOVR::dyn__animPointAndThumbsUpGain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__animPointAndThumbsUpGain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animPointAndThumbsUpGain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _animLayerIndexThumb
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::AnimatedHandOVR::dyn__animLayerIndexThumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__animLayerIndexThumb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animLayerIndexThumb"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _animLayerIndexPoint
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::AnimatedHandOVR::dyn__animLayerIndexPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__animLayerIndexPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animLayerIndexPoint"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _animParamIndexFlex
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::AnimatedHandOVR::dyn__animParamIndexFlex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__animParamIndexFlex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animParamIndexFlex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _animParamPinch
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::AnimatedHandOVR::dyn__animParamPinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__animParamPinch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animParamPinch"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _animParamIndexSlide
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::AnimatedHandOVR::dyn__animParamIndexSlide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__animParamIndexSlide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animParamIndexSlide"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isGivingThumbsUp
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::AnimatedHandOVR::dyn__isGivingThumbsUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__isGivingThumbsUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isGivingThumbsUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _pointBlend
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::AnimatedHandOVR::dyn__pointBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__pointBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _slideBlend
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::AnimatedHandOVR::dyn__slideBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__slideBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_slideBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _thumbsUpBlend
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::AnimatedHandOVR::dyn__thumbsUpBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__thumbsUpBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thumbsUpBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _pointTarget
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::AnimatedHandOVR::dyn__pointTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__pointTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointTarget"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _slideTarget
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::AnimatedHandOVR::dyn__slideTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__slideTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_slideTarget"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animFlex
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::AnimatedHandOVR::dyn__animFlex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__animFlex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animFlex"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animPinch
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::AnimatedHandOVR::dyn__animPinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::dyn__animPinch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animPinch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.AnimatedHandOVR.Start
void Oculus::Interaction::Input::AnimatedHandOVR::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::AnimatedHandOVR*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.AnimatedHandOVR.Update
void Oculus::Interaction::Input::AnimatedHandOVR::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::AnimatedHandOVR*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.AnimatedHandOVR.UpdateCapTouchStates
void Oculus::Interaction::Input::AnimatedHandOVR::UpdateCapTouchStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::UpdateCapTouchStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCapTouchStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.AnimatedHandOVR.UpdateAnimStates
void Oculus::Interaction::Input::AnimatedHandOVR::UpdateAnimStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::UpdateAnimStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAnimStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.AnimatedHandOVR.InjectAllAnimatedHandOVR
void Oculus::Interaction::Input::AnimatedHandOVR::InjectAllAnimatedHandOVR(::GlobalNamespace::OVRInput::Controller controller, ::UnityEngine::Animator* animator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::InjectAllAnimatedHandOVR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllAnimatedHandOVR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller), ::il2cpp_utils::ExtractType(animator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller, animator);
}
// Autogenerated method: Oculus.Interaction.Input.AnimatedHandOVR.InjectController
void Oculus::Interaction::Input::AnimatedHandOVR::InjectController(::GlobalNamespace::OVRInput::Controller controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::InjectController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated method: Oculus.Interaction.Input.AnimatedHandOVR.InjectAnimator
void Oculus::Interaction::Input::AnimatedHandOVR::InjectAnimator(::UnityEngine::Animator* animator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::InjectAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.AnimatedHandOVR/AllowThumbUp
#include "Oculus/Interaction/Input/AnimatedHandOVR.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.AnimatedHandOVR/AllowThumbUp Always
::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp::_get_Always() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp::_get_Always");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp>("Oculus.Interaction.Input", "AnimatedHandOVR/AllowThumbUp", "Always"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.AnimatedHandOVR/AllowThumbUp Always
void Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp::_set_Always(::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp::_set_Always");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "AnimatedHandOVR/AllowThumbUp", "Always", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.AnimatedHandOVR/AllowThumbUp GripRequired
::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp::_get_GripRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp::_get_GripRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp>("Oculus.Interaction.Input", "AnimatedHandOVR/AllowThumbUp", "GripRequired"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.AnimatedHandOVR/AllowThumbUp GripRequired
void Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp::_set_GripRequired(::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp::_set_GripRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "AnimatedHandOVR/AllowThumbUp", "GripRequired", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Input.AnimatedHandOVR/AllowThumbUp TriggerAndGripRequired
::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp::_get_TriggerAndGripRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp::_get_TriggerAndGripRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp>("Oculus.Interaction.Input", "AnimatedHandOVR/AllowThumbUp", "TriggerAndGripRequired"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Input.AnimatedHandOVR/AllowThumbUp TriggerAndGripRequired
void Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp::_set_TriggerAndGripRequired(::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp::_set_TriggerAndGripRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "AnimatedHandOVR/AllowThumbUp", "TriggerAndGripRequired", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::AnimatedHandOVR::AllowThumbUp::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.UsageMapping
#include "Oculus/Interaction/Input/UsageMapping.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Input.ControllerButtonUsage <Usage>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ControllerButtonUsage& Oculus::Interaction::Input::UsageMapping::dyn_$Usage$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::UsageMapping::dyn_$Usage$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Usage>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ControllerButtonUsage*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRInput/Touch <Touch>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Touch& Oculus::Interaction::Input::UsageMapping::dyn_$Touch$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::UsageMapping::dyn_$Touch$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Touch>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Touch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRInput/Button <Button>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Button& Oculus::Interaction::Input::UsageMapping::dyn_$Button$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::UsageMapping::dyn_$Button$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Button>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.UsageMapping..ctor
Oculus::Interaction::Input::UsageMapping::UsageMapping(::Oculus::Interaction::Input::ControllerButtonUsage usage, ::GlobalNamespace::OVRInput::Touch touch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::UsageMapping::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractType(touch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, usage, touch);
}
// Autogenerated method: Oculus.Interaction.Input.UsageMapping..ctor
Oculus::Interaction::Input::UsageMapping::UsageMapping(::Oculus::Interaction::Input::ControllerButtonUsage usage, ::GlobalNamespace::OVRInput::Button button) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::UsageMapping::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(usage), ::il2cpp_utils::ExtractType(button)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, usage, button);
}
// Autogenerated method: Oculus.Interaction.Input.UsageMapping.get_IsTouch
bool Oculus::Interaction::Input::UsageMapping::get_IsTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::UsageMapping::get_IsTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.UsageMapping.get_IsButton
bool Oculus::Interaction::Input::UsageMapping::get_IsButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::UsageMapping::get_IsButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.UsageMapping.get_Usage
::Oculus::Interaction::Input::ControllerButtonUsage Oculus::Interaction::Input::UsageMapping::get_Usage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::UsageMapping::get_Usage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Usage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::ControllerButtonUsage, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.UsageMapping.get_Touch
::GlobalNamespace::OVRInput::Touch Oculus::Interaction::Input::UsageMapping::get_Touch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::UsageMapping::get_Touch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Touch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Touch, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.UsageMapping.get_Button
::GlobalNamespace::OVRInput::Button Oculus::Interaction::Input::UsageMapping::get_Button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::UsageMapping::get_Button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Button, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.OVRPointerPoseSelector
#include "Oculus/Interaction/Input/OVRPointerPoseSelector.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Pose[] QUEST1_POINTERS
::ArrayW<::UnityEngine::Pose> Oculus::Interaction::Input::OVRPointerPoseSelector::_get_QUEST1_POINTERS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRPointerPoseSelector::_get_QUEST1_POINTERS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Pose>>("Oculus.Interaction.Input", "OVRPointerPoseSelector", "QUEST1_POINTERS"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Pose[] QUEST1_POINTERS
void Oculus::Interaction::Input::OVRPointerPoseSelector::_set_QUEST1_POINTERS(::ArrayW<::UnityEngine::Pose> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRPointerPoseSelector::_set_QUEST1_POINTERS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "OVRPointerPoseSelector", "QUEST1_POINTERS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Pose[] QUEST2_POINTERS
::ArrayW<::UnityEngine::Pose> Oculus::Interaction::Input::OVRPointerPoseSelector::_get_QUEST2_POINTERS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRPointerPoseSelector::_get_QUEST2_POINTERS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Pose>>("Oculus.Interaction.Input", "OVRPointerPoseSelector", "QUEST2_POINTERS"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Pose[] QUEST2_POINTERS
void Oculus::Interaction::Input::OVRPointerPoseSelector::_set_QUEST2_POINTERS(::ArrayW<::UnityEngine::Pose> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRPointerPoseSelector::_set_QUEST2_POINTERS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "OVRPointerPoseSelector", "QUEST2_POINTERS", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose <LocalPointerPose>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Input::OVRPointerPoseSelector::dyn_$LocalPointerPose$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRPointerPoseSelector::dyn_$LocalPointerPose$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LocalPointerPose>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.OVRPointerPoseSelector.get_LocalPointerPose
::UnityEngine::Pose Oculus::Interaction::Input::OVRPointerPoseSelector::get_LocalPointerPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRPointerPoseSelector::get_LocalPointerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LocalPointerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OVRPointerPoseSelector.set_LocalPointerPose
void Oculus::Interaction::Input::OVRPointerPoseSelector::set_LocalPointerPose(::UnityEngine::Pose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRPointerPoseSelector::set_LocalPointerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_LocalPointerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.OVRPointerPoseSelector..ctor
Oculus::Interaction::Input::OVRPointerPoseSelector::OVRPointerPoseSelector(::Oculus::Interaction::Input::Handedness handedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRPointerPoseSelector::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handedness)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handedness);
}
// Autogenerated method: Oculus.Interaction.Input.OVRPointerPoseSelector..cctor
void Oculus::Interaction::Input::OVRPointerPoseSelector::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRPointerPoseSelector::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OVRPointerPoseSelector", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.FromOVRControllerDataSource
#include "Oculus/Interaction/Input/FromOVRControllerDataSource.hpp"
// Including type: Oculus.Interaction.Input.ControllerDataAsset
#include "Oculus/Interaction/Input/ControllerDataAsset.hpp"
// Including type: Oculus.Interaction.Input.IOVRCameraRigRef
#include "Oculus/Interaction/Input/IOVRCameraRigRef.hpp"
// Including type: Oculus.Interaction.Input.ITrackingToWorldTransformer
#include "Oculus/Interaction/Input/ITrackingToWorldTransformer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Interaction.Input.ControllerDataSourceConfig
#include "Oculus/Interaction/Input/ControllerDataSourceConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Oculus.Interaction.Input.UsageMapping[] ControllerUsageMappings
::ArrayW<::Oculus::Interaction::Input::UsageMapping> Oculus::Interaction::Input::FromOVRControllerDataSource::_get_ControllerUsageMappings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::_get_ControllerUsageMappings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Oculus::Interaction::Input::UsageMapping>>("Oculus.Interaction.Input", "FromOVRControllerDataSource", "ControllerUsageMappings"));
}
// Autogenerated static field setter
// Set static field: static private readonly Oculus.Interaction.Input.UsageMapping[] ControllerUsageMappings
void Oculus::Interaction::Input::FromOVRControllerDataSource::_set_ControllerUsageMappings(::ArrayW<::Oculus::Interaction::Input::UsageMapping> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::_set_ControllerUsageMappings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "FromOVRControllerDataSource", "ControllerUsageMappings", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _cameraRigRef
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__cameraRigRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__cameraRigRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraRigRef"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IOVRCameraRigRef <CameraRigRef>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IOVRCameraRigRef*& Oculus::Interaction::Input::FromOVRControllerDataSource::dyn_$CameraRigRef$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::dyn_$CameraRigRef$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CameraRigRef>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IOVRCameraRigRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _processLateUpdates
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__processLateUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__processLateUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_processLateUpdates"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.Handedness _handedness
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::Handedness& Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__handedness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handedness"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::Handedness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _trackingToWorldTransformer
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__trackingToWorldTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__trackingToWorldTransformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackingToWorldTransformer"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ITrackingToWorldTransformer TrackingToWorldTransformer
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ITrackingToWorldTransformer*& Oculus::Interaction::Input::FromOVRControllerDataSource::dyn_TrackingToWorldTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::dyn_TrackingToWorldTransformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingToWorldTransformer"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ITrackingToWorldTransformer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Input.ControllerDataAsset _controllerDataAsset
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ControllerDataAsset*& Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__controllerDataAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__controllerDataAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerDataAsset"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ControllerDataAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller _ovrController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__ovrController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__ovrController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ovrController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _ovrControllerAnchor
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__ovrControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__ovrControllerAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ovrControllerAnchor"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ControllerDataSourceConfig _config
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ControllerDataSourceConfig*& Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__config");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_config"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ControllerDataSourceConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.OVRPointerPoseSelector _pointerPoseSelector
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::OVRPointerPoseSelector& Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__pointerPoseSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::dyn__pointerPoseSelector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointerPoseSelector"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::OVRPointerPoseSelector*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.get_CameraRigRef
::Oculus::Interaction::Input::IOVRCameraRigRef* Oculus::Interaction::Input::FromOVRControllerDataSource::get_CameraRigRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::get_CameraRigRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CameraRigRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IOVRCameraRigRef*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.set_CameraRigRef
void Oculus::Interaction::Input::FromOVRControllerDataSource::set_CameraRigRef(::Oculus::Interaction::Input::IOVRCameraRigRef* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::set_CameraRigRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CameraRigRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.get_ProcessLateUpdates
bool Oculus::Interaction::Input::FromOVRControllerDataSource::get_ProcessLateUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::get_ProcessLateUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessLateUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.set_ProcessLateUpdates
void Oculus::Interaction::Input::FromOVRControllerDataSource::set_ProcessLateUpdates(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::set_ProcessLateUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProcessLateUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.Awake
void Oculus::Interaction::Input::FromOVRControllerDataSource::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.HandleInputDataDirtied
void Oculus::Interaction::Input::FromOVRControllerDataSource::HandleInputDataDirtied(bool isLateUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::HandleInputDataDirtied");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputDataDirtied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLateUpdate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLateUpdate);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.get_Config
::Oculus::Interaction::Input::ControllerDataSourceConfig* Oculus::Interaction::Input::FromOVRControllerDataSource::get_Config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::get_Config");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Config", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::ControllerDataSourceConfig*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.UpdateConfig
void Oculus::Interaction::Input::FromOVRControllerDataSource::UpdateConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::UpdateConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.get_DataAsset
::Oculus::Interaction::Input::ControllerDataAsset* Oculus::Interaction::Input::FromOVRControllerDataSource::get_DataAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::get_DataAsset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::FromOVRControllerDataSource*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::ControllerDataAsset*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.InjectAllFromOVRControllerDataSource
void Oculus::Interaction::Input::FromOVRControllerDataSource::InjectAllFromOVRControllerDataSource(typename ::Oculus::Interaction::Input::DataSource_1<::Oculus::Interaction::Input::ControllerDataAsset*>::UpdateModeFlags updateMode, ::Oculus::Interaction::Input::IDataSource* updateAfter, ::Oculus::Interaction::Input::Handedness handedness, ::Oculus::Interaction::Input::ITrackingToWorldTransformer* trackingToWorldTransformer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::InjectAllFromOVRControllerDataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllFromOVRControllerDataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMode), ::il2cpp_utils::ExtractType(updateAfter), ::il2cpp_utils::ExtractType(handedness), ::il2cpp_utils::ExtractType(trackingToWorldTransformer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateMode, updateAfter, handedness, trackingToWorldTransformer);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.InjectHandedness
void Oculus::Interaction::Input::FromOVRControllerDataSource::InjectHandedness(::Oculus::Interaction::Input::Handedness handedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::InjectHandedness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandedness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handedness)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handedness);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.InjectTrackingToWorldTransformer
void Oculus::Interaction::Input::FromOVRControllerDataSource::InjectTrackingToWorldTransformer(::Oculus::Interaction::Input::ITrackingToWorldTransformer* trackingToWorldTransformer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::InjectTrackingToWorldTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectTrackingToWorldTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingToWorldTransformer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, trackingToWorldTransformer);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource..cctor
void Oculus::Interaction::Input::FromOVRControllerDataSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "FromOVRControllerDataSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.<Start>b__19_0
void Oculus::Interaction::Input::FromOVRControllerDataSource::$Start$b__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::<Start>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.Start
void Oculus::Interaction::Input::FromOVRControllerDataSource::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.OnEnable
void Oculus::Interaction::Input::FromOVRControllerDataSource::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.OnDisable
void Oculus::Interaction::Input::FromOVRControllerDataSource::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerDataSource.UpdateData
void Oculus::Interaction::Input::FromOVRControllerDataSource::UpdateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerDataSource::UpdateData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.FromOVRControllerHandDataSource
#include "Oculus/Interaction/Input/FromOVRControllerHandDataSource.hpp"
// Including type: Oculus.Interaction.Input.HandDataAsset
#include "Oculus/Interaction/Input/HandDataAsset.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: Oculus.Interaction.Input.IOVRCameraRigRef
#include "Oculus/Interaction/Input/IOVRCameraRigRef.hpp"
// Including type: Oculus.Interaction.Input.ITrackingToWorldTransformer
#include "Oculus/Interaction/Input/ITrackingToWorldTransformer.hpp"
// Including type: Oculus.Interaction.Input.HandDataSourceConfig
#include "Oculus/Interaction/Input/HandDataSourceConfig.hpp"
// Including type: Oculus.Interaction.Input.HandSkeleton
#include "Oculus/Interaction/Input/HandSkeleton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Quaternion <WristFixupRotation>k__BackingField
::UnityEngine::Quaternion Oculus::Interaction::Input::FromOVRControllerHandDataSource::_get_$WristFixupRotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::_get_$WristFixupRotation$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Quaternion>("Oculus.Interaction.Input", "FromOVRControllerHandDataSource", "<WristFixupRotation>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Quaternion <WristFixupRotation>k__BackingField
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::_set_$WristFixupRotation$k__BackingField(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::_set_$WristFixupRotation$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "FromOVRControllerHandDataSource", "<WristFixupRotation>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] _bones
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__bones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__bones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bones"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _pinchCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__pinchCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__pinchCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinchCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _rootOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__rootOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__rootOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _rootAngleOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__rootAngleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__rootAngleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootAngleOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _cameraRigRef
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__cameraRigRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__cameraRigRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraRigRef"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IOVRCameraRigRef CameraRigRef
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IOVRCameraRigRef*& Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn_CameraRigRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn_CameraRigRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRigRef"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IOVRCameraRigRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _processLateUpdates
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__processLateUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__processLateUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_processLateUpdates"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.Handedness _handedness
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::Handedness& Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__handedness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handedness"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::Handedness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _trackingToWorldTransformer
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__trackingToWorldTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__trackingToWorldTransformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackingToWorldTransformer"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ITrackingToWorldTransformer TrackingToWorldTransformer
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ITrackingToWorldTransformer*& Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn_TrackingToWorldTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn_TrackingToWorldTransformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingToWorldTransformer"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ITrackingToWorldTransformer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Input.HandDataAsset _handDataAsset
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandDataAsset*& Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__handDataAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__handDataAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handDataAsset"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandDataAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller _ovrController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__ovrController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__ovrController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ovrController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _ovrControllerAnchor
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__ovrControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__ovrControllerAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ovrControllerAnchor"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HandDataSourceConfig _config
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandDataSourceConfig*& Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__config");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_config"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandDataSourceConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _poseOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__poseOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__poseOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_poseOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HandSkeleton _skeleton
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandSkeleton*& Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__skeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::dyn__skeleton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skeleton"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandSkeleton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.get_ProcessLateUpdates
bool Oculus::Interaction::Input::FromOVRControllerHandDataSource::get_ProcessLateUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::get_ProcessLateUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessLateUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.set_ProcessLateUpdates
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::set_ProcessLateUpdates(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::set_ProcessLateUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProcessLateUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.get_WristFixupRotation
::UnityEngine::Quaternion Oculus::Interaction::Input::FromOVRControllerHandDataSource::get_WristFixupRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::get_WristFixupRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "FromOVRControllerHandDataSource", "get_WristFixupRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.get_DataAsset
::Oculus::Interaction::Input::HandDataAsset* Oculus::Interaction::Input::FromOVRControllerHandDataSource::get_DataAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::get_DataAsset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::FromOVRControllerHandDataSource*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandDataAsset*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.Awake
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.HandleInputDataDirtied
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::HandleInputDataDirtied(bool isLateUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::HandleInputDataDirtied");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputDataDirtied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLateUpdate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLateUpdate);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.UpdateSkeleton
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::UpdateSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::UpdateSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.get_Config
::Oculus::Interaction::Input::HandDataSourceConfig* Oculus::Interaction::Input::FromOVRControllerHandDataSource::get_Config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::get_Config");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Config", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandDataSourceConfig*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.UpdateConfig
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::UpdateConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::UpdateConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.InjectAllFromOVRControllerHandDataSource
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::InjectAllFromOVRControllerHandDataSource(typename ::Oculus::Interaction::Input::DataSource_1<::Oculus::Interaction::Input::HandDataAsset*>::UpdateModeFlags updateMode, ::Oculus::Interaction::Input::IDataSource* updateAfter, ::Oculus::Interaction::Input::Handedness handedness, ::Oculus::Interaction::Input::ITrackingToWorldTransformer* trackingToWorldTransformer, ::ArrayW<::UnityEngine::Transform*> bones, ::UnityEngine::AnimationCurve* pinchCurve, ::UnityEngine::Vector3 rootOffset, ::UnityEngine::Vector3 rootAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::InjectAllFromOVRControllerHandDataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllFromOVRControllerHandDataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMode), ::il2cpp_utils::ExtractType(updateAfter), ::il2cpp_utils::ExtractType(handedness), ::il2cpp_utils::ExtractType(trackingToWorldTransformer), ::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(pinchCurve), ::il2cpp_utils::ExtractType(rootOffset), ::il2cpp_utils::ExtractType(rootAngleOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateMode, updateAfter, handedness, trackingToWorldTransformer, bones, pinchCurve, rootOffset, rootAngleOffset);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.InjectHandedness
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::InjectHandedness(::Oculus::Interaction::Input::Handedness handedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::InjectHandedness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandedness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handedness)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handedness);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.InjectTrackingToWorldTransformer
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::InjectTrackingToWorldTransformer(::Oculus::Interaction::Input::ITrackingToWorldTransformer* trackingToWorldTransformer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::InjectTrackingToWorldTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectTrackingToWorldTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingToWorldTransformer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, trackingToWorldTransformer);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.InjectBones
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::InjectBones(::ArrayW<::UnityEngine::Transform*> bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::InjectBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bones);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.InjectPinchCurve
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::InjectPinchCurve(::UnityEngine::AnimationCurve* pinchCurve) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::InjectPinchCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPinchCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pinchCurve)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pinchCurve);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.InjectRootOffset
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::InjectRootOffset(::UnityEngine::Vector3 rootOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::InjectRootOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRootOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootOffset);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.InjectRootAngleOffset
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::InjectRootAngleOffset(::UnityEngine::Vector3 rootAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::InjectRootAngleOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRootAngleOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootAngleOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootAngleOffset);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource..cctor
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "FromOVRControllerHandDataSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.<Start>b__25_0
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::$Start$b__25_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::<Start>b__25_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__25_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.Start
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.OnEnable
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.OnDisable
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRControllerHandDataSource.UpdateData
void Oculus::Interaction::Input::FromOVRControllerHandDataSource::UpdateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRControllerHandDataSource::UpdateData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.FromOVRHandDataSource
#include "Oculus/Interaction/Input/FromOVRHandDataSource.hpp"
// Including type: Oculus.Interaction.Input.HandDataAsset
#include "Oculus/Interaction/Input/HandDataAsset.hpp"
// Including type: Oculus.Interaction.Input.ITrackingToWorldTransformer
#include "Oculus/Interaction/Input/ITrackingToWorldTransformer.hpp"
// Including type: Oculus.Interaction.Input.IHandSkeletonProvider
#include "Oculus/Interaction/Input/IHandSkeletonProvider.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
// Including type: Oculus.Interaction.Input.HandDataSourceConfig
#include "Oculus/Interaction/Input/HandDataSourceConfig.hpp"
// Including type: Oculus.Interaction.Input.IOVRCameraRigRef
#include "Oculus/Interaction/Input/IOVRCameraRigRef.hpp"
// Including type: OVRSkeleton/SkeletonPoseData
#include "GlobalNamespace/OVRSkeleton_SkeletonPoseData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Quaternion <WristFixupRotation>k__BackingField
::UnityEngine::Quaternion Oculus::Interaction::Input::FromOVRHandDataSource::_get_$WristFixupRotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::_get_$WristFixupRotation$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Quaternion>("Oculus.Interaction.Input", "FromOVRHandDataSource", "<WristFixupRotation>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Quaternion <WristFixupRotation>k__BackingField
void Oculus::Interaction::Input::FromOVRHandDataSource::_set_$WristFixupRotation$k__BackingField(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::_set_$WristFixupRotation$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "FromOVRHandDataSource", "<WristFixupRotation>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _cameraRigRef
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::FromOVRHandDataSource::dyn__cameraRigRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::dyn__cameraRigRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraRigRef"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _processLateUpdates
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::FromOVRHandDataSource::dyn__processLateUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::dyn__processLateUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_processLateUpdates"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.Handedness _handedness
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::Handedness& Oculus::Interaction::Input::FromOVRHandDataSource::dyn__handedness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::dyn__handedness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handedness"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::Handedness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _trackingToWorldTransformer
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::FromOVRHandDataSource::dyn__trackingToWorldTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::dyn__trackingToWorldTransformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackingToWorldTransformer"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ITrackingToWorldTransformer TrackingToWorldTransformer
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ITrackingToWorldTransformer*& Oculus::Interaction::Input::FromOVRHandDataSource::dyn_TrackingToWorldTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::dyn_TrackingToWorldTransformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingToWorldTransformer"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ITrackingToWorldTransformer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _handSkeletonProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::FromOVRHandDataSource::dyn__handSkeletonProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::dyn__handSkeletonProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handSkeletonProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHandSkeletonProvider HandSkeletonProvider
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHandSkeletonProvider*& Oculus::Interaction::Input::FromOVRHandDataSource::dyn_HandSkeletonProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::dyn_HandSkeletonProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandSkeletonProvider"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHandSkeletonProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Input.HandDataAsset _handDataAsset
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandDataAsset*& Oculus::Interaction::Input::FromOVRHandDataSource::dyn__handDataAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::dyn__handDataAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handDataAsset"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandDataAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHand _ovrHand
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHand*& Oculus::Interaction::Input::FromOVRHandDataSource::dyn__ovrHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::dyn__ovrHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ovrHand"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller _ovrController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& Oculus::Interaction::Input::FromOVRHandDataSource::dyn__ovrController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::dyn__ovrController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ovrController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastHandScale
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::FromOVRHandDataSource::dyn__lastHandScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::dyn__lastHandScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastHandScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HandDataSourceConfig _config
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HandDataSourceConfig*& Oculus::Interaction::Input::FromOVRHandDataSource::dyn__config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::dyn__config");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_config"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HandDataSourceConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IOVRCameraRigRef CameraRigRef
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IOVRCameraRigRef*& Oculus::Interaction::Input::FromOVRHandDataSource::dyn_CameraRigRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::dyn_CameraRigRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRigRef"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IOVRCameraRigRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.get_ProcessLateUpdates
bool Oculus::Interaction::Input::FromOVRHandDataSource::get_ProcessLateUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::get_ProcessLateUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessLateUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.set_ProcessLateUpdates
void Oculus::Interaction::Input::FromOVRHandDataSource::set_ProcessLateUpdates(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::set_ProcessLateUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProcessLateUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.get_DataAsset
::Oculus::Interaction::Input::HandDataAsset* Oculus::Interaction::Input::FromOVRHandDataSource::get_DataAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::get_DataAsset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::FromOVRHandDataSource*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandDataAsset*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.get_WristFixupRotation
::UnityEngine::Quaternion Oculus::Interaction::Input::FromOVRHandDataSource::get_WristFixupRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::get_WristFixupRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "FromOVRHandDataSource", "get_WristFixupRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.Awake
void Oculus::Interaction::Input::FromOVRHandDataSource::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::FromOVRHandDataSource*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.HandleInputDataDirtied
void Oculus::Interaction::Input::FromOVRHandDataSource::HandleInputDataDirtied(bool isLateUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::HandleInputDataDirtied");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputDataDirtied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLateUpdate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLateUpdate);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.get_Config
::Oculus::Interaction::Input::HandDataSourceConfig* Oculus::Interaction::Input::FromOVRHandDataSource::get_Config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::get_Config");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Config", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandDataSourceConfig*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.UpdateConfig
void Oculus::Interaction::Input::FromOVRHandDataSource::UpdateConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::UpdateConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.UpdateDataPoses
void Oculus::Interaction::Input::FromOVRHandDataSource::UpdateDataPoses(::GlobalNamespace::OVRSkeleton::SkeletonPoseData poseData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::UpdateDataPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDataPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poseData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poseData);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.InjectAllFromOVRHandDataSource
void Oculus::Interaction::Input::FromOVRHandDataSource::InjectAllFromOVRHandDataSource(typename ::Oculus::Interaction::Input::DataSource_1<::Oculus::Interaction::Input::HandDataAsset*>::UpdateModeFlags updateMode, ::Oculus::Interaction::Input::IDataSource* updateAfter, ::Oculus::Interaction::Input::Handedness handedness, ::Oculus::Interaction::Input::ITrackingToWorldTransformer* trackingToWorldTransformer, ::Oculus::Interaction::Input::IHandSkeletonProvider* handSkeletonProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::InjectAllFromOVRHandDataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllFromOVRHandDataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMode), ::il2cpp_utils::ExtractType(updateAfter), ::il2cpp_utils::ExtractType(handedness), ::il2cpp_utils::ExtractType(trackingToWorldTransformer), ::il2cpp_utils::ExtractType(handSkeletonProvider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateMode, updateAfter, handedness, trackingToWorldTransformer, handSkeletonProvider);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.InjectHandedness
void Oculus::Interaction::Input::FromOVRHandDataSource::InjectHandedness(::Oculus::Interaction::Input::Handedness handedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::InjectHandedness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandedness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handedness)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handedness);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.InjectTrackingToWorldTransformer
void Oculus::Interaction::Input::FromOVRHandDataSource::InjectTrackingToWorldTransformer(::Oculus::Interaction::Input::ITrackingToWorldTransformer* trackingToWorldTransformer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::InjectTrackingToWorldTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectTrackingToWorldTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingToWorldTransformer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, trackingToWorldTransformer);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.InjectHandSkeletonProvider
void Oculus::Interaction::Input::FromOVRHandDataSource::InjectHandSkeletonProvider(::Oculus::Interaction::Input::IHandSkeletonProvider* handSkeletonProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::InjectHandSkeletonProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandSkeletonProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handSkeletonProvider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handSkeletonProvider);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource..cctor
void Oculus::Interaction::Input::FromOVRHandDataSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "FromOVRHandDataSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.<Start>b__22_0
void Oculus::Interaction::Input::FromOVRHandDataSource::$Start$b__22_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::<Start>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__22_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.Start
void Oculus::Interaction::Input::FromOVRHandDataSource::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.OnEnable
void Oculus::Interaction::Input::FromOVRHandDataSource::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.OnDisable
void Oculus::Interaction::Input::FromOVRHandDataSource::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHandDataSource.UpdateData
void Oculus::Interaction::Input::FromOVRHandDataSource::UpdateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHandDataSource::UpdateData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.FromOVRHmdDataSource
#include "Oculus/Interaction/Input/FromOVRHmdDataSource.hpp"
// Including type: Oculus.Interaction.Input.HmdDataAsset
#include "Oculus/Interaction/Input/HmdDataAsset.hpp"
// Including type: Oculus.Interaction.Input.IOVRCameraRigRef
#include "Oculus/Interaction/Input/IOVRCameraRigRef.hpp"
// Including type: Oculus.Interaction.Input.ITrackingToWorldTransformer
#include "Oculus/Interaction/Input/ITrackingToWorldTransformer.hpp"
// Including type: Oculus.Interaction.Input.HmdDataSourceConfig
#include "Oculus/Interaction/Input/HmdDataSourceConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _cameraRigRef
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::FromOVRHmdDataSource::dyn__cameraRigRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::dyn__cameraRigRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraRigRef"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IOVRCameraRigRef <CameraRigRef>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IOVRCameraRigRef*& Oculus::Interaction::Input::FromOVRHmdDataSource::dyn_$CameraRigRef$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::dyn_$CameraRigRef$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CameraRigRef>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IOVRCameraRigRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _processLateUpdates
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::FromOVRHmdDataSource::dyn__processLateUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::dyn__processLateUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_processLateUpdates"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useOvrManagerEmulatedPose
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::FromOVRHmdDataSource::dyn__useOvrManagerEmulatedPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::dyn__useOvrManagerEmulatedPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useOvrManagerEmulatedPose"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _trackingToWorldTransformer
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::FromOVRHmdDataSource::dyn__trackingToWorldTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::dyn__trackingToWorldTransformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackingToWorldTransformer"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.ITrackingToWorldTransformer TrackingToWorldTransformer
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::ITrackingToWorldTransformer*& Oculus::Interaction::Input::FromOVRHmdDataSource::dyn_TrackingToWorldTransformer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::dyn_TrackingToWorldTransformer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingToWorldTransformer"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::ITrackingToWorldTransformer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HmdDataAsset _hmdDataAsset
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HmdDataAsset*& Oculus::Interaction::Input::FromOVRHmdDataSource::dyn__hmdDataAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::dyn__hmdDataAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hmdDataAsset"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HmdDataAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.HmdDataSourceConfig _config
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::HmdDataSourceConfig*& Oculus::Interaction::Input::FromOVRHmdDataSource::dyn__config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::dyn__config");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_config"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::HmdDataSourceConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHmdDataSource.get_CameraRigRef
::Oculus::Interaction::Input::IOVRCameraRigRef* Oculus::Interaction::Input::FromOVRHmdDataSource::get_CameraRigRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::get_CameraRigRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CameraRigRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IOVRCameraRigRef*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHmdDataSource.set_CameraRigRef
void Oculus::Interaction::Input::FromOVRHmdDataSource::set_CameraRigRef(::Oculus::Interaction::Input::IOVRCameraRigRef* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::set_CameraRigRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CameraRigRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHmdDataSource.get_ProcessLateUpdates
bool Oculus::Interaction::Input::FromOVRHmdDataSource::get_ProcessLateUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::get_ProcessLateUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessLateUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHmdDataSource.set_ProcessLateUpdates
void Oculus::Interaction::Input::FromOVRHmdDataSource::set_ProcessLateUpdates(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::set_ProcessLateUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProcessLateUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHmdDataSource.Awake
void Oculus::Interaction::Input::FromOVRHmdDataSource::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHmdDataSource.HandleInputDataDirtied
void Oculus::Interaction::Input::FromOVRHmdDataSource::HandleInputDataDirtied(bool isLateUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::HandleInputDataDirtied");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputDataDirtied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLateUpdate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLateUpdate);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHmdDataSource.get_Config
::Oculus::Interaction::Input::HmdDataSourceConfig* Oculus::Interaction::Input::FromOVRHmdDataSource::get_Config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::get_Config");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Config", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HmdDataSourceConfig*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHmdDataSource.get_DataAsset
::Oculus::Interaction::Input::HmdDataAsset* Oculus::Interaction::Input::FromOVRHmdDataSource::get_DataAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::get_DataAsset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::FromOVRHmdDataSource*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HmdDataAsset*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHmdDataSource.InjectAllFromOVRHmdDataSource
void Oculus::Interaction::Input::FromOVRHmdDataSource::InjectAllFromOVRHmdDataSource(typename ::Oculus::Interaction::Input::DataSource_1<::Oculus::Interaction::Input::HmdDataAsset*>::UpdateModeFlags updateMode, ::Oculus::Interaction::Input::IDataSource* updateAfter, bool useOvrManagerEmulatedPose, ::Oculus::Interaction::Input::ITrackingToWorldTransformer* trackingToWorldTransformer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::InjectAllFromOVRHmdDataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllFromOVRHmdDataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMode), ::il2cpp_utils::ExtractType(updateAfter), ::il2cpp_utils::ExtractType(useOvrManagerEmulatedPose), ::il2cpp_utils::ExtractType(trackingToWorldTransformer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateMode, updateAfter, useOvrManagerEmulatedPose, trackingToWorldTransformer);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHmdDataSource.InjectUseOvrManagerEmulatedPose
void Oculus::Interaction::Input::FromOVRHmdDataSource::InjectUseOvrManagerEmulatedPose(bool useOvrManagerEmulatedPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::InjectUseOvrManagerEmulatedPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectUseOvrManagerEmulatedPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useOvrManagerEmulatedPose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, useOvrManagerEmulatedPose);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHmdDataSource.InjectTrackingToWorldTransformer
void Oculus::Interaction::Input::FromOVRHmdDataSource::InjectTrackingToWorldTransformer(::Oculus::Interaction::Input::ITrackingToWorldTransformer* trackingToWorldTransformer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::InjectTrackingToWorldTransformer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectTrackingToWorldTransformer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingToWorldTransformer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, trackingToWorldTransformer);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHmdDataSource.<Start>b__15_0
void Oculus::Interaction::Input::FromOVRHmdDataSource::$Start$b__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::<Start>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHmdDataSource.Start
void Oculus::Interaction::Input::FromOVRHmdDataSource::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHmdDataSource.OnEnable
void Oculus::Interaction::Input::FromOVRHmdDataSource::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHmdDataSource.OnDisable
void Oculus::Interaction::Input::FromOVRHmdDataSource::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.FromOVRHmdDataSource.UpdateData
void Oculus::Interaction::Input::FromOVRHmdDataSource::UpdateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::FromOVRHmdDataSource::UpdateData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandSkeletonOVR
#include "Oculus/Interaction/Input/HandSkeletonOVR.hpp"
// Including type: Oculus.Interaction.Input.HandSkeletonOVR/<>c__DisplayClass5_0
#include "Oculus/Interaction/Input/HandSkeletonOVR_--c__DisplayClass5_0.hpp"
// Including type: Oculus.Interaction.Input.HandSkeleton
#include "Oculus/Interaction/Input/HandSkeleton.hpp"
// Including type: Oculus.Interaction.Input.Handedness
#include "Oculus/Interaction/Input/Handedness.hpp"
// Including type: OVRPlugin/Skeleton2
#include "GlobalNamespace/OVRPlugin_Skeleton2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Input.HandSkeleton[] _skeletons
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::Input::HandSkeleton*>& Oculus::Interaction::Input::HandSkeletonOVR::dyn__skeletons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeletonOVR::dyn__skeletons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skeletons"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Interaction::Input::HandSkeleton*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.HandSkeletonOVR.get_Item
::Oculus::Interaction::Input::HandSkeleton* Oculus::Interaction::Input::HandSkeletonOVR::get_Item(::Oculus::Interaction::Input::Handedness handedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeletonOVR::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::HandSkeletonOVR*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandSkeleton*, false>(this, ___internal__method, handedness);
}
// Autogenerated method: Oculus.Interaction.Input.HandSkeletonOVR.Awake
void Oculus::Interaction::Input::HandSkeletonOVR::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeletonOVR::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.HandSkeletonOVR.CreateSkeletonData
::Oculus::Interaction::Input::HandSkeleton* Oculus::Interaction::Input::HandSkeletonOVR::CreateSkeletonData(::Oculus::Interaction::Input::Handedness handedness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeletonOVR::CreateSkeletonData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "HandSkeletonOVR", "CreateSkeletonData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handedness)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::HandSkeleton*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handedness);
}
// Autogenerated method: Oculus.Interaction.Input.HandSkeletonOVR.ApplyToSkeleton
void Oculus::Interaction::Input::HandSkeletonOVR::ApplyToSkeleton(ByRef<::GlobalNamespace::OVRPlugin::Skeleton2> ovrSkeleton, ::Oculus::Interaction::Input::HandSkeleton* handSkeleton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeletonOVR::ApplyToSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "HandSkeletonOVR", "ApplyToSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ovrSkeleton), ::il2cpp_utils::ExtractType(handSkeleton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ovrSkeleton), handSkeleton);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.HandSkeletonOVR/<>c__DisplayClass5_0
#include "Oculus/Interaction/Input/HandSkeletonOVR_--c__DisplayClass5_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 boneIndex
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Input::HandSkeletonOVR::$$c__DisplayClass5_0::dyn_boneIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeletonOVR::$$c__DisplayClass5_0::dyn_boneIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boneIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.HandSkeletonOVR/<>c__DisplayClass5_0.<ApplyToSkeleton>b__0
bool Oculus::Interaction::Input::HandSkeletonOVR::$$c__DisplayClass5_0::$ApplyToSkeleton$b__0(::GlobalNamespace::OVRPlugin::BoneCapsule c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::HandSkeletonOVR::$$c__DisplayClass5_0::<ApplyToSkeleton>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ApplyToSkeleton>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.IOVRCameraRigRef
#include "Oculus/Interaction/Input/IOVRCameraRigRef.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Input.IOVRCameraRigRef.get_CameraRig
::GlobalNamespace::OVRCameraRig* Oculus::Interaction::Input::IOVRCameraRigRef::get_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IOVRCameraRigRef::get_CameraRig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IOVRCameraRigRef*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRCameraRig*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IOVRCameraRigRef.get_LeftHand
::GlobalNamespace::OVRHand* Oculus::Interaction::Input::IOVRCameraRigRef::get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IOVRCameraRigRef::get_LeftHand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IOVRCameraRigRef*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IOVRCameraRigRef.get_RightHand
::GlobalNamespace::OVRHand* Oculus::Interaction::Input::IOVRCameraRigRef::get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IOVRCameraRigRef::get_RightHand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IOVRCameraRigRef*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IOVRCameraRigRef.get_LeftController
::UnityEngine::Transform* Oculus::Interaction::Input::IOVRCameraRigRef::get_LeftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IOVRCameraRigRef::get_LeftController");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IOVRCameraRigRef*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IOVRCameraRigRef.get_RightController
::UnityEngine::Transform* Oculus::Interaction::Input::IOVRCameraRigRef::get_RightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IOVRCameraRigRef::get_RightController");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IOVRCameraRigRef*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.IOVRCameraRigRef.add_WhenInputDataDirtied
void Oculus::Interaction::Input::IOVRCameraRigRef::add_WhenInputDataDirtied(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IOVRCameraRigRef::add_WhenInputDataDirtied");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IOVRCameraRigRef*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.IOVRCameraRigRef.remove_WhenInputDataDirtied
void Oculus::Interaction::Input::IOVRCameraRigRef::remove_WhenInputDataDirtied(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::IOVRCameraRigRef::remove_WhenInputDataDirtied");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::IOVRCameraRigRef*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.OVRCameraRigRef
#include "Oculus/Interaction/Input/OVRCameraRigRef.hpp"
// Including type: Oculus.Interaction.Input.OVRCameraRigRef/<>c
#include "Oculus/Interaction/Input/OVRCameraRigRef_--c.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig _ovrCameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& Oculus::Interaction::Input::OVRCameraRigRef::dyn__ovrCameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::dyn__ovrCameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ovrCameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _requireOvrHands
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::OVRCameraRigRef::dyn__requireOvrHands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::dyn__requireOvrHands");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requireOvrHands"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHand _leftHand
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHand*& Oculus::Interaction::Input::OVRCameraRigRef::dyn__leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::dyn__leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHand"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHand _rightHand
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHand*& Oculus::Interaction::Input::OVRCameraRigRef::dyn__rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::dyn__rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHand"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> WhenInputDataDirtied
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& Oculus::Interaction::Input::OVRCameraRigRef::dyn_WhenInputDataDirtied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::dyn_WhenInputDataDirtied");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenInputDataDirtied"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::OVRCameraRigRef::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isLateUpdate
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::OVRCameraRigRef::dyn__isLateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::dyn__isLateUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isLateUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.get_CameraRig
::GlobalNamespace::OVRCameraRig* Oculus::Interaction::Input::OVRCameraRigRef::get_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::get_CameraRig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OVRCameraRigRef*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRCameraRig*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.get_LeftHand
::GlobalNamespace::OVRHand* Oculus::Interaction::Input::OVRCameraRigRef::get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::get_LeftHand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OVRCameraRigRef*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.get_RightHand
::GlobalNamespace::OVRHand* Oculus::Interaction::Input::OVRCameraRigRef::get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::get_RightHand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OVRCameraRigRef*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.get_LeftController
::UnityEngine::Transform* Oculus::Interaction::Input::OVRCameraRigRef::get_LeftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::get_LeftController");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OVRCameraRigRef*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.get_RightController
::UnityEngine::Transform* Oculus::Interaction::Input::OVRCameraRigRef::get_RightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::get_RightController");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OVRCameraRigRef*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.add_WhenInputDataDirtied
void Oculus::Interaction::Input::OVRCameraRigRef::add_WhenInputDataDirtied(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::add_WhenInputDataDirtied");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OVRCameraRigRef*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.remove_WhenInputDataDirtied
void Oculus::Interaction::Input::OVRCameraRigRef::remove_WhenInputDataDirtied(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::remove_WhenInputDataDirtied");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OVRCameraRigRef*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.Start
void Oculus::Interaction::Input::OVRCameraRigRef::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OVRCameraRigRef*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.FixedUpdate
void Oculus::Interaction::Input::OVRCameraRigRef::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::FixedUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OVRCameraRigRef*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.Update
void Oculus::Interaction::Input::OVRCameraRigRef::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OVRCameraRigRef*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.LateUpdate
void Oculus::Interaction::Input::OVRCameraRigRef::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OVRCameraRigRef*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.OnEnable
void Oculus::Interaction::Input::OVRCameraRigRef::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OVRCameraRigRef*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.OnDisable
void Oculus::Interaction::Input::OVRCameraRigRef::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OVRCameraRigRef*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.GetHandCached
::GlobalNamespace::OVRHand* Oculus::Interaction::Input::OVRCameraRigRef::GetHandCached(ByRef<::GlobalNamespace::OVRHand*> cachedValue, ::UnityEngine::Transform* handAnchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::GetHandCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHandCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cachedValue), ::il2cpp_utils::ExtractType(handAnchor)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHand*, false>(this, ___internal__method, byref(cachedValue), handAnchor);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.HandleInputDataDirtied
void Oculus::Interaction::Input::OVRCameraRigRef::HandleInputDataDirtied(::GlobalNamespace::OVRCameraRig* cameraRig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::HandleInputDataDirtied");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputDataDirtied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraRig)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cameraRig);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.InjectAllOVRCameraRigRef
void Oculus::Interaction::Input::OVRCameraRigRef::InjectAllOVRCameraRigRef(::GlobalNamespace::OVRCameraRig* ovrCameraRig, bool requireHands) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::InjectAllOVRCameraRigRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllOVRCameraRigRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ovrCameraRig), ::il2cpp_utils::ExtractType(requireHands)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ovrCameraRig, requireHands);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.InjectInteractionOVRCameraRig
void Oculus::Interaction::Input::OVRCameraRigRef::InjectInteractionOVRCameraRig(::GlobalNamespace::OVRCameraRig* ovrCameraRig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::InjectInteractionOVRCameraRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectInteractionOVRCameraRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ovrCameraRig)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ovrCameraRig);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef.InjectRequireHands
void Oculus::Interaction::Input::OVRCameraRigRef::InjectRequireHands(bool requireHands) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::InjectRequireHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectRequireHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requireHands)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requireHands);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.OVRCameraRigRef/<>c
#include "Oculus/Interaction/Input/OVRCameraRigRef_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Input.OVRCameraRigRef/<>c <>9
::Oculus::Interaction::Input::OVRCameraRigRef::$$c* Oculus::Interaction::Input::OVRCameraRigRef::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Input::OVRCameraRigRef::$$c*>("Oculus.Interaction.Input", "OVRCameraRigRef/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Input.OVRCameraRigRef/<>c <>9
void Oculus::Interaction::Input::OVRCameraRigRef::$$c::_set_$$9(::Oculus::Interaction::Input::OVRCameraRigRef::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "OVRCameraRigRef/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Boolean> <>9__30_0
::System::Action_1<bool>* Oculus::Interaction::Input::OVRCameraRigRef::$$c::_get_$$9__30_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::$$c::_get_$$9__30_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<bool>*>("Oculus.Interaction.Input", "OVRCameraRigRef/<>c", "<>9__30_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Boolean> <>9__30_0
void Oculus::Interaction::Input::OVRCameraRigRef::$$c::_set_$$9__30_0(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::$$c::_set_$$9__30_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "OVRCameraRigRef/<>c", "<>9__30_0", value)));
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef/<>c..cctor
void Oculus::Interaction::Input::OVRCameraRigRef::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OVRCameraRigRef/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OVRCameraRigRef/<>c.<.ctor>b__30_0
void Oculus::Interaction::Input::OVRCameraRigRef::$$c::$_ctor$b__30_0(bool $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRCameraRigRef::$$c::<.ctor>b__30_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__30_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.OVRControllerUtility
#include "Oculus/Interaction/Input/OVRControllerUtility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Input.OVRControllerUtility.GetPinchAmount
float Oculus::Interaction::Input::OVRControllerUtility::GetPinchAmount(::GlobalNamespace::OVRInput::Controller ovrController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRControllerUtility::GetPinchAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OVRControllerUtility", "GetPinchAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ovrController)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ovrController);
}
// Autogenerated method: Oculus.Interaction.Input.OVRControllerUtility.GetIndexCurl
float Oculus::Interaction::Input::OVRControllerUtility::GetIndexCurl(::GlobalNamespace::OVRInput::Controller ovrController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRControllerUtility::GetIndexCurl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OVRControllerUtility", "GetIndexCurl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ovrController)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ovrController);
}
// Autogenerated method: Oculus.Interaction.Input.OVRControllerUtility.GetIndexSlide
float Oculus::Interaction::Input::OVRControllerUtility::GetIndexSlide(::GlobalNamespace::OVRInput::Controller ovrController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRControllerUtility::GetIndexSlide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OVRControllerUtility", "GetIndexSlide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ovrController)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ovrController);
}
// Autogenerated method: Oculus.Interaction.Input.OVRControllerUtility.SupportsAnalogIndex
bool Oculus::Interaction::Input::OVRControllerUtility::SupportsAnalogIndex(::GlobalNamespace::OVRInput::Controller ovrController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRControllerUtility::SupportsAnalogIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OVRControllerUtility", "SupportsAnalogIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ovrController)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ovrController);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.OVRInputDeviceActiveState
#include "Oculus/Interaction/Input/OVRInputDeviceActiveState.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRInput/Controller> _controllerTypes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRInput::Controller>*& Oculus::Interaction::Input::OVRInputDeviceActiveState::dyn__controllerTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRInputDeviceActiveState::dyn__controllerTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerTypes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRInput::Controller>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.OVRInputDeviceActiveState.get_Active
bool Oculus::Interaction::Input::OVRInputDeviceActiveState::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRInputDeviceActiveState::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OVRInputDeviceActiveState*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.OVRInputDeviceActiveState.InjectAllOVRInputDeviceActiveState
void Oculus::Interaction::Input::OVRInputDeviceActiveState::InjectAllOVRInputDeviceActiveState(::System::Collections::Generic::List_1<::GlobalNamespace::OVRInput::Controller>* controllerTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRInputDeviceActiveState::InjectAllOVRInputDeviceActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllOVRInputDeviceActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerTypes);
}
// Autogenerated method: Oculus.Interaction.Input.OVRInputDeviceActiveState.InjectControllerTypes
void Oculus::Interaction::Input::OVRInputDeviceActiveState::InjectControllerTypes(::System::Collections::Generic::List_1<::GlobalNamespace::OVRInput::Controller>* controllerTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRInputDeviceActiveState::InjectControllerTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectControllerTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerTypes);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.OVRNearTouch
#include "Oculus/Interaction/Input/OVRNearTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller _controller
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& Oculus::Interaction::Input::OVRNearTouch::dyn__controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRNearTouch::dyn__controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/NearTouch _nearTouch
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::NearTouch& Oculus::Interaction::Input::OVRNearTouch::dyn__nearTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRNearTouch::dyn__nearTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nearTouch"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::NearTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.OVRNearTouch.Value
bool Oculus::Interaction::Input::OVRNearTouch::Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRNearTouch::Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OVRNearTouch*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.OVRSkeletonData
#include "Oculus/Interaction/Input/OVRSkeletonData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRPlugin/Skeleton2 LeftSkeleton
::GlobalNamespace::OVRPlugin::Skeleton2 Oculus::Interaction::Input::OVRSkeletonData::_get_LeftSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRSkeletonData::_get_LeftSkeleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Skeleton2>("Oculus.Interaction.Input", "OVRSkeletonData", "LeftSkeleton"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRPlugin/Skeleton2 LeftSkeleton
void Oculus::Interaction::Input::OVRSkeletonData::_set_LeftSkeleton(::GlobalNamespace::OVRPlugin::Skeleton2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRSkeletonData::_set_LeftSkeleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "OVRSkeletonData", "LeftSkeleton", value));
}
// Autogenerated static field getter
// Get static field: static public readonly OVRPlugin/Skeleton2 RightSkeleton
::GlobalNamespace::OVRPlugin::Skeleton2 Oculus::Interaction::Input::OVRSkeletonData::_get_RightSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRSkeletonData::_get_RightSkeleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Skeleton2>("Oculus.Interaction.Input", "OVRSkeletonData", "RightSkeleton"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRPlugin/Skeleton2 RightSkeleton
void Oculus::Interaction::Input::OVRSkeletonData::_set_RightSkeleton(::GlobalNamespace::OVRPlugin::Skeleton2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRSkeletonData::_set_RightSkeleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Input", "OVRSkeletonData", "RightSkeleton", value));
}
// Autogenerated method: Oculus.Interaction.Input.OVRSkeletonData..cctor
void Oculus::Interaction::Input::OVRSkeletonData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRSkeletonData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Input", "OVRSkeletonData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.OVRTouch
#include "Oculus/Interaction/Input/OVRTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller _controller
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& Oculus::Interaction::Input::OVRTouch::dyn__controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRTouch::dyn__controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Touch _touch
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Touch& Oculus::Interaction::Input::OVRTouch::dyn__touch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRTouch::dyn__touch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_touch"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Touch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.OVRTouch.Value
bool Oculus::Interaction::Input::OVRTouch::Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::OVRTouch::Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::OVRTouch*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.SetDisplayRefresh
#include "Oculus/Interaction/Input/SetDisplayRefresh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _desiredDisplayFrequency
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Input::SetDisplayRefresh::dyn__desiredDisplayFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SetDisplayRefresh::dyn__desiredDisplayFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_desiredDisplayFrequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.SetDisplayRefresh.SetDesiredDisplayFrequency
void Oculus::Interaction::Input::SetDisplayRefresh::SetDesiredDisplayFrequency(float desiredDisplayFrequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SetDisplayRefresh::SetDesiredDisplayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDesiredDisplayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desiredDisplayFrequency)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, desiredDisplayFrequency);
}
// Autogenerated method: Oculus.Interaction.Input.SetDisplayRefresh.Awake
void Oculus::Interaction::Input::SetDisplayRefresh::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::SetDisplayRefresh::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::SetDisplayRefresh*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.TrackingToWorldTransformerOVR
#include "Oculus/Interaction/Input/TrackingToWorldTransformerOVR.hpp"
// Including type: Oculus.Interaction.Input.IOVRCameraRigRef
#include "Oculus/Interaction/Input/IOVRCameraRigRef.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _cameraRigRef
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::TrackingToWorldTransformerOVR::dyn__cameraRigRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::TrackingToWorldTransformerOVR::dyn__cameraRigRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraRigRef"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IOVRCameraRigRef <CameraRigRef>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IOVRCameraRigRef*& Oculus::Interaction::Input::TrackingToWorldTransformerOVR::dyn_$CameraRigRef$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::TrackingToWorldTransformerOVR::dyn_$CameraRigRef$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CameraRigRef>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IOVRCameraRigRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.TrackingToWorldTransformerOVR.get_CameraRigRef
::Oculus::Interaction::Input::IOVRCameraRigRef* Oculus::Interaction::Input::TrackingToWorldTransformerOVR::get_CameraRigRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::TrackingToWorldTransformerOVR::get_CameraRigRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CameraRigRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IOVRCameraRigRef*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.TrackingToWorldTransformerOVR.set_CameraRigRef
void Oculus::Interaction::Input::TrackingToWorldTransformerOVR::set_CameraRigRef(::Oculus::Interaction::Input::IOVRCameraRigRef* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::TrackingToWorldTransformerOVR::set_CameraRigRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CameraRigRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.TrackingToWorldTransformerOVR.get_Transform
::UnityEngine::Transform* Oculus::Interaction::Input::TrackingToWorldTransformerOVR::get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::TrackingToWorldTransformerOVR::get_Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::TrackingToWorldTransformerOVR*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.TrackingToWorldTransformerOVR.ToWorldPose
::UnityEngine::Pose Oculus::Interaction::Input::TrackingToWorldTransformerOVR::ToWorldPose(::UnityEngine::Pose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::TrackingToWorldTransformerOVR::ToWorldPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::TrackingToWorldTransformerOVR*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, pose);
}
// Autogenerated method: Oculus.Interaction.Input.TrackingToWorldTransformerOVR.ToTrackingPose
::UnityEngine::Pose Oculus::Interaction::Input::TrackingToWorldTransformerOVR::ToTrackingPose(ByRef<::UnityEngine::Pose> worldPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::TrackingToWorldTransformerOVR::ToTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPose)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, byref(worldPose));
}
// Autogenerated method: Oculus.Interaction.Input.TrackingToWorldTransformerOVR.get_WorldToTrackingWristJointFixup
::UnityEngine::Quaternion Oculus::Interaction::Input::TrackingToWorldTransformerOVR::get_WorldToTrackingWristJointFixup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::TrackingToWorldTransformerOVR::get_WorldToTrackingWristJointFixup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::TrackingToWorldTransformerOVR*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.TrackingToWorldTransformerOVR.Awake
void Oculus::Interaction::Input::TrackingToWorldTransformerOVR::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::TrackingToWorldTransformerOVR::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::TrackingToWorldTransformerOVR*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.TrackingToWorldTransformerOVR.Start
void Oculus::Interaction::Input::TrackingToWorldTransformerOVR::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::TrackingToWorldTransformerOVR::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::TrackingToWorldTransformerOVR*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.TrackingToWorldTransformerOVR.InjectAllTrackingToWorldTransformerOVR
void Oculus::Interaction::Input::TrackingToWorldTransformerOVR::InjectAllTrackingToWorldTransformerOVR(::Oculus::Interaction::Input::IOVRCameraRigRef* cameraRigRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::TrackingToWorldTransformerOVR::InjectAllTrackingToWorldTransformerOVR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllTrackingToWorldTransformerOVR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraRigRef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cameraRigRef);
}
// Autogenerated method: Oculus.Interaction.Input.TrackingToWorldTransformerOVR.InjectCameraRigRef
void Oculus::Interaction::Input::TrackingToWorldTransformerOVR::InjectCameraRigRef(::Oculus::Interaction::Input::IOVRCameraRigRef* cameraRigRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::TrackingToWorldTransformerOVR::InjectCameraRigRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectCameraRigRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraRigRef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cameraRigRef);
}
// Autogenerated method: Oculus.Interaction.Input.TrackingToWorldTransformerOVR.Oculus.Interaction.Input.ITrackingToWorldTransformer.ToTrackingPose
::UnityEngine::Pose Oculus::Interaction::Input::TrackingToWorldTransformerOVR::Oculus_Interaction_Input_ITrackingToWorldTransformer_ToTrackingPose(ByRef<::UnityEngine::Pose> worldPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::TrackingToWorldTransformerOVR::Oculus.Interaction.Input.ITrackingToWorldTransformer.ToTrackingPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::TrackingToWorldTransformerOVR*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method, byref(worldPose));
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Input.Visuals.OVRControllerVisual
#include "Oculus/Interaction/Input/Visuals/OVRControllerVisual.hpp"
// Including type: Oculus.Interaction.Input.IController
#include "Oculus/Interaction/Input/IController.hpp"
// Including type: OVRControllerHelper
#include "GlobalNamespace/OVRControllerHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _controller
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Input::Visuals::OVRControllerVisual::dyn__controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Visuals::OVRControllerVisual::dyn__controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Input.IController Controller
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IController*& Oculus::Interaction::Input::Visuals::OVRControllerVisual::dyn_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Visuals::OVRControllerVisual::dyn_Controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Controller"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRControllerHelper _ovrControllerHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRControllerHelper*& Oculus::Interaction::Input::Visuals::OVRControllerVisual::dyn__ovrControllerHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Visuals::OVRControllerVisual::dyn__ovrControllerHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ovrControllerHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRControllerHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ForceOffVisibility>k__BackingField
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::Visuals::OVRControllerVisual::dyn_$ForceOffVisibility$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Visuals::OVRControllerVisual::dyn_$ForceOffVisibility$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ForceOffVisibility>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Input::Visuals::OVRControllerVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Visuals::OVRControllerVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Input.Visuals.OVRControllerVisual.get_ForceOffVisibility
bool Oculus::Interaction::Input::Visuals::OVRControllerVisual::get_ForceOffVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Visuals::OVRControllerVisual::get_ForceOffVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ForceOffVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Visuals.OVRControllerVisual.set_ForceOffVisibility
void Oculus::Interaction::Input::Visuals::OVRControllerVisual::set_ForceOffVisibility(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Visuals::OVRControllerVisual::set_ForceOffVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ForceOffVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Input.Visuals.OVRControllerVisual.Awake
void Oculus::Interaction::Input::Visuals::OVRControllerVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Visuals::OVRControllerVisual::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Visuals::OVRControllerVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Visuals.OVRControllerVisual.Start
void Oculus::Interaction::Input::Visuals::OVRControllerVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Visuals::OVRControllerVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Visuals::OVRControllerVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Visuals.OVRControllerVisual.OnEnable
void Oculus::Interaction::Input::Visuals::OVRControllerVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Visuals::OVRControllerVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Visuals::OVRControllerVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Visuals.OVRControllerVisual.OnDisable
void Oculus::Interaction::Input::Visuals::OVRControllerVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Visuals::OVRControllerVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::Visuals::OVRControllerVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Visuals.OVRControllerVisual.HandleUpdated
void Oculus::Interaction::Input::Visuals::OVRControllerVisual::HandleUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Visuals::OVRControllerVisual::HandleUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Input.Visuals.OVRControllerVisual.InjectAllOVRControllerVisual
void Oculus::Interaction::Input::Visuals::OVRControllerVisual::InjectAllOVRControllerVisual(::Oculus::Interaction::Input::IController* controller, ::GlobalNamespace::OVRControllerHelper* ovrControllerHelper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Visuals::OVRControllerVisual::InjectAllOVRControllerVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllOVRControllerVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller), ::il2cpp_utils::ExtractType(ovrControllerHelper)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller, ovrControllerHelper);
}
// Autogenerated method: Oculus.Interaction.Input.Visuals.OVRControllerVisual.InjectController
void Oculus::Interaction::Input::Visuals::OVRControllerVisual::InjectController(::Oculus::Interaction::Input::IController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Visuals::OVRControllerVisual::InjectController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated method: Oculus.Interaction.Input.Visuals.OVRControllerVisual.InjectAllOVRControllerHelper
void Oculus::Interaction::Input::Visuals::OVRControllerVisual::InjectAllOVRControllerHelper(::GlobalNamespace::OVRControllerHelper* ovrControllerHelper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Input::Visuals::OVRControllerVisual::InjectAllOVRControllerHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllOVRControllerHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ovrControllerHelper)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ovrControllerHelper);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Body.PoseDetection.OVRBodyPoseSkeletonProvider
#include "Oculus/Interaction/Body/PoseDetection/OVRBodyPoseSkeletonProvider.hpp"
// Including type: Oculus.Interaction.Body.PoseDetection.IBodyPose
#include "Oculus/Interaction/Body/PoseDetection/IBodyPose.hpp"
// Including type: Oculus.Interaction.Body.Input.OVRSkeletonMapping
#include "Oculus/Interaction/Body/Input/OVRSkeletonMapping.hpp"
// Including type: OVRSkeleton/SkeletonPoseData
#include "GlobalNamespace/OVRSkeleton_SkeletonPoseData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 OVR_NUM_JOINTS
int Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::_get_OVR_NUM_JOINTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::_get_OVR_NUM_JOINTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.Body.PoseDetection", "OVRBodyPoseSkeletonProvider", "OVR_NUM_JOINTS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 OVR_NUM_JOINTS
void Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::_set_OVR_NUM_JOINTS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::_set_OVR_NUM_JOINTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Body.PoseDetection", "OVRBodyPoseSkeletonProvider", "OVR_NUM_JOINTS", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _bodyPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::dyn__bodyPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::dyn__bodyPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bodyPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Body.PoseDetection.IBodyPose BodyPose
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::PoseDetection::IBodyPose*& Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::dyn_BodyPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::dyn_BodyPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BodyPose"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Body::PoseDetection::IBodyPose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/Quatf[] _boneRotations
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRPlugin::Quatf>& Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::dyn__boneRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::dyn__boneRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boneRotations"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRPlugin::Quatf>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/Vector3f[] _boneTranslations
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRPlugin::Vector3f>& Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::dyn__boneTranslations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::dyn__boneTranslations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boneTranslations"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRPlugin::Vector3f>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Body.Input.OVRSkeletonMapping _mapping
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::Input::OVRSkeletonMapping*& Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::dyn__mapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::dyn__mapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mapping"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Body::Input::OVRSkeletonMapping**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Body.PoseDetection.OVRBodyPoseSkeletonProvider.Awake
void Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.PoseDetection.OVRBodyPoseSkeletonProvider.Start
void Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.PoseDetection.OVRBodyPoseSkeletonProvider.OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonPoseData
::GlobalNamespace::OVRSkeleton::SkeletonPoseData Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::OVRSkeleton_IOVRSkeletonDataProvider_GetSkeletonPoseData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonPoseData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeleton::SkeletonPoseData, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.PoseDetection.OVRBodyPoseSkeletonProvider.GetSkeletonType
::GlobalNamespace::OVRSkeleton::SkeletonType Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::GetSkeletonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::GetSkeletonType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeleton::SkeletonType, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.PoseDetection.OVRBodyPoseSkeletonProvider.OVRSkeleton.IOVRSkeletonDataProvider.get_enabled
bool Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::OVRSkeleton_IOVRSkeletonDataProvider_get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider::OVRSkeleton.IOVRSkeletonDataProvider.get_enabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::PoseDetection::OVRBodyPoseSkeletonProvider*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Body.Input.FromOVRBodyDataSource
#include "Oculus/Interaction/Body/Input/FromOVRBodyDataSource.hpp"
// Including type: Oculus.Interaction.Body.Input.BodyDataAsset
#include "Oculus/Interaction/Body/Input/BodyDataAsset.hpp"
// Including type: Oculus.Interaction.Input.IOVRCameraRigRef
#include "Oculus/Interaction/Input/IOVRCameraRigRef.hpp"
// Including type: Oculus.Interaction.Body.Input.OVRSkeletonMapping
#include "Oculus/Interaction/Body/Input/OVRSkeletonMapping.hpp"
// Including type: OVRSkeleton/IOVRSkeletonDataProvider
#include "GlobalNamespace/OVRSkeleton_IOVRSkeletonDataProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _dataProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Body::Input::FromOVRBodyDataSource::dyn__dataProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::FromOVRBodyDataSource::dyn__dataProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeleton/IOVRSkeletonDataProvider DataProvider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSkeleton::IOVRSkeletonDataProvider*& Oculus::Interaction::Body::Input::FromOVRBodyDataSource::dyn_DataProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::FromOVRBodyDataSource::dyn_DataProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DataProvider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSkeleton::IOVRSkeletonDataProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _cameraRigRef
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Body::Input::FromOVRBodyDataSource::dyn__cameraRigRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::FromOVRBodyDataSource::dyn__cameraRigRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraRigRef"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IOVRCameraRigRef CameraRigRef
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IOVRCameraRigRef*& Oculus::Interaction::Body::Input::FromOVRBodyDataSource::dyn_CameraRigRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::FromOVRBodyDataSource::dyn_CameraRigRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRigRef"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IOVRCameraRigRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _processLateUpdates
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Body::Input::FromOVRBodyDataSource::dyn__processLateUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::FromOVRBodyDataSource::dyn__processLateUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_processLateUpdates"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Body.Input.BodyDataAsset _bodyDataAsset
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::Input::BodyDataAsset*& Oculus::Interaction::Body::Input::FromOVRBodyDataSource::dyn__bodyDataAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::FromOVRBodyDataSource::dyn__bodyDataAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bodyDataAsset"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Body::Input::BodyDataAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Interaction.Body.Input.OVRSkeletonMapping _mapping
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::Input::OVRSkeletonMapping*& Oculus::Interaction::Body::Input::FromOVRBodyDataSource::dyn__mapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::FromOVRBodyDataSource::dyn__mapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mapping"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Body::Input::OVRSkeletonMapping**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Body.Input.FromOVRBodyDataSource.get_DataAsset
::Oculus::Interaction::Body::Input::BodyDataAsset* Oculus::Interaction::Body::Input::FromOVRBodyDataSource::get_DataAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::FromOVRBodyDataSource::get_DataAsset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Input::FromOVRBodyDataSource*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Body::Input::BodyDataAsset*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Input.FromOVRBodyDataSource.Awake
void Oculus::Interaction::Body::Input::FromOVRBodyDataSource::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::FromOVRBodyDataSource::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Input.FromOVRBodyDataSource.HandleInputDataDirtied
void Oculus::Interaction::Body::Input::FromOVRBodyDataSource::HandleInputDataDirtied(bool isLateUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::FromOVRBodyDataSource::HandleInputDataDirtied");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputDataDirtied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLateUpdate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLateUpdate);
}
// Autogenerated method: Oculus.Interaction.Body.Input.FromOVRBodyDataSource.Start
void Oculus::Interaction::Body::Input::FromOVRBodyDataSource::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::FromOVRBodyDataSource::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Input.FromOVRBodyDataSource.OnEnable
void Oculus::Interaction::Body::Input::FromOVRBodyDataSource::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::FromOVRBodyDataSource::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Input.FromOVRBodyDataSource.OnDisable
void Oculus::Interaction::Body::Input::FromOVRBodyDataSource::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::FromOVRBodyDataSource::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Input.FromOVRBodyDataSource.UpdateData
void Oculus::Interaction::Body::Input::FromOVRBodyDataSource::UpdateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::FromOVRBodyDataSource::UpdateData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Input::DataSource_1<TData>*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Body.Input.OVRSkeletonMapping
#include "Oculus/Interaction/Body/Input/OVRSkeletonMapping.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.IReadOnlyDictionary`2
#include "System/Collections/Generic/IReadOnlyDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<Oculus.Interaction.Body.Input.BodyJointId,Oculus.Interaction.Body.Input.BodySkeletonMapping`1/JointInfo<OVRPlugin/BoneId>> _jointMapping
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::Body::Input::BodyJointId, typename ::Oculus::Interaction::Body::Input::BodySkeletonMapping_1<::GlobalNamespace::OVRPlugin::BoneId>::JointInfo>*& Oculus::Interaction::Body::Input::OVRSkeletonMapping::dyn__jointMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::OVRSkeletonMapping::dyn__jointMapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jointMapping"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::Body::Input::BodyJointId, typename ::Oculus::Interaction::Body::Input::BodySkeletonMapping_1<::GlobalNamespace::OVRPlugin::BoneId>::JointInfo>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Body.Input.OVRSkeletonMapping.GetJointMapping
::System::Collections::Generic::IReadOnlyDictionary_2<::Oculus::Interaction::Body::Input::BodyJointId, typename ::Oculus::Interaction::Body::Input::BodySkeletonMapping_1<::GlobalNamespace::OVRPlugin::BoneId>::JointInfo>* Oculus::Interaction::Body::Input::OVRSkeletonMapping::GetJointMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::OVRSkeletonMapping::GetJointMapping");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Input::OVRSkeletonMapping*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyDictionary_2<::Oculus::Interaction::Body::Input::BodyJointId, typename ::Oculus::Interaction::Body::Input::BodySkeletonMapping_1<::GlobalNamespace::OVRPlugin::BoneId>::JointInfo>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Input.OVRSkeletonMapping.GetRoot
::GlobalNamespace::OVRPlugin::BoneId Oculus::Interaction::Body::Input::OVRSkeletonMapping::GetRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Input::OVRSkeletonMapping::GetRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Input::OVRSkeletonMapping*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::BoneId, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________.hpp"
// Including type: UnitySourceGeneratedAssemblyMonoScriptTypes_v1/MonoScriptData
#include "GlobalNamespace/UnitySourceGeneratedAssemblyMonoScriptTypes_v1________________________________MonoScriptData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnitySourceGeneratedAssemblyMonoScriptTypes_v1.Get
::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________::MonoScriptData GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnitySourceGeneratedAssemblyMonoScriptTypes_v1", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnitySourceGeneratedAssemblyMonoScriptTypes_v1_______________________________::MonoScriptData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.AudioPhysics
#include "Oculus/Interaction/AudioPhysics.hpp"
// Including type: Oculus.Interaction.AudioPhysics/CollisionEvents
#include "Oculus/Interaction/AudioPhysics_CollisionEvents.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
// Including type: Oculus.Interaction.AudioTrigger
#include "Oculus/Interaction/AudioTrigger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Oculus::Interaction::AudioPhysics::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ImpactAudio _impactAudioEvents
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ImpactAudio& Oculus::Interaction::AudioPhysics::dyn__impactAudioEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::dyn__impactAudioEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_impactAudioEvents"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ImpactAudio*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _velocitySplit
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::AudioPhysics::dyn__velocitySplit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::dyn__velocitySplit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocitySplit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minimumVelocity
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::AudioPhysics::dyn__minimumVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::dyn__minimumVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minimumVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeBetweenCollisions
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::AudioPhysics::dyn__timeBetweenCollisions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::dyn__timeBetweenCollisions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeBetweenCollisions"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowMultipleCollisions
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::AudioPhysics::dyn__allowMultipleCollisions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::dyn__allowMultipleCollisions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowMultipleCollisions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeAtLastCollision
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::AudioPhysics::dyn__timeAtLastCollision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::dyn__timeAtLastCollision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeAtLastCollision"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::AudioPhysics::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.AudioPhysics/CollisionEvents _collisionEvents
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::AudioPhysics::CollisionEvents*& Oculus::Interaction::AudioPhysics::dyn__collisionEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::dyn__collisionEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collisionEvents"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::AudioPhysics::CollisionEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.AudioPhysics.Start
void Oculus::Interaction::AudioPhysics::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::AudioPhysics*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.AudioPhysics.OnEnable
void Oculus::Interaction::AudioPhysics::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::AudioPhysics*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.AudioPhysics.OnDisable
void Oculus::Interaction::AudioPhysics::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::AudioPhysics*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.AudioPhysics.OnDestroy
void Oculus::Interaction::AudioPhysics::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::AudioPhysics*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.AudioPhysics.HandleCollisionEnter
void Oculus::Interaction::AudioPhysics::HandleCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::HandleCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: Oculus.Interaction.AudioPhysics.TryPlayCollisionAudio
void Oculus::Interaction::AudioPhysics::TryPlayCollisionAudio(::UnityEngine::Collision* collision, ::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::TryPlayCollisionAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryPlayCollisionAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision), ::il2cpp_utils::ExtractType(rigidbody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision, rigidbody);
}
// Autogenerated method: Oculus.Interaction.AudioPhysics.PlayCollisionAudio
void Oculus::Interaction::AudioPhysics::PlayCollisionAudio(::Oculus::Interaction::ImpactAudio impactAudio, float magnitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::PlayCollisionAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayCollisionAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impactAudio), ::il2cpp_utils::ExtractType(magnitude)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, impactAudio, magnitude);
}
// Autogenerated method: Oculus.Interaction.AudioPhysics.GetObjectVelocity
float Oculus::Interaction::AudioPhysics::GetObjectVelocity(::Oculus::Interaction::AudioPhysics* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::GetObjectVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "AudioPhysics", "GetObjectVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target);
}
// Autogenerated method: Oculus.Interaction.AudioPhysics.PlaySoundOnAudioTrigger
void Oculus::Interaction::AudioPhysics::PlaySoundOnAudioTrigger(::Oculus::Interaction::AudioTrigger* audioTrigger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::PlaySoundOnAudioTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySoundOnAudioTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioTrigger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioTrigger);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.AudioPhysics/CollisionEvents
#include "Oculus/Interaction/AudioPhysics_CollisionEvents.hpp"
// Including type: Oculus.Interaction.AudioPhysics/CollisionEvents/<>c
#include "Oculus/Interaction/AudioPhysics_CollisionEvents_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Collision> WhenCollisionEnter
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Collision*>*& Oculus::Interaction::AudioPhysics::CollisionEvents::dyn_WhenCollisionEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::CollisionEvents::dyn_WhenCollisionEnter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenCollisionEnter"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Collision*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.AudioPhysics/CollisionEvents.add_WhenCollisionEnter
void Oculus::Interaction::AudioPhysics::CollisionEvents::add_WhenCollisionEnter(::System::Action_1<::UnityEngine::Collision*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::CollisionEvents::add_WhenCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_WhenCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.AudioPhysics/CollisionEvents.remove_WhenCollisionEnter
void Oculus::Interaction::AudioPhysics::CollisionEvents::remove_WhenCollisionEnter(::System::Action_1<::UnityEngine::Collision*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::CollisionEvents::remove_WhenCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_WhenCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.AudioPhysics/CollisionEvents.OnCollisionEnter
void Oculus::Interaction::AudioPhysics::CollisionEvents::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::CollisionEvents::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.AudioPhysics/CollisionEvents/<>c
#include "Oculus/Interaction/AudioPhysics_CollisionEvents_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.AudioPhysics/CollisionEvents/<>c <>9
::Oculus::Interaction::AudioPhysics::CollisionEvents::$$c* Oculus::Interaction::AudioPhysics::CollisionEvents::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::CollisionEvents::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::AudioPhysics::CollisionEvents::$$c*>("Oculus.Interaction", "AudioPhysics/CollisionEvents/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.AudioPhysics/CollisionEvents/<>c <>9
void Oculus::Interaction::AudioPhysics::CollisionEvents::$$c::_set_$$9(::Oculus::Interaction::AudioPhysics::CollisionEvents::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::CollisionEvents::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "AudioPhysics/CollisionEvents/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<UnityEngine.Collision> <>9__4_0
::System::Action_1<::UnityEngine::Collision*>* Oculus::Interaction::AudioPhysics::CollisionEvents::$$c::_get_$$9__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::CollisionEvents::$$c::_get_$$9__4_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::Collision*>*>("Oculus.Interaction", "AudioPhysics/CollisionEvents/<>c", "<>9__4_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<UnityEngine.Collision> <>9__4_0
void Oculus::Interaction::AudioPhysics::CollisionEvents::$$c::_set_$$9__4_0(::System::Action_1<::UnityEngine::Collision*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::CollisionEvents::$$c::_set_$$9__4_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction", "AudioPhysics/CollisionEvents/<>c", "<>9__4_0", value)));
}
// Autogenerated method: Oculus.Interaction.AudioPhysics/CollisionEvents/<>c..cctor
void Oculus::Interaction::AudioPhysics::CollisionEvents::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::CollisionEvents::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction", "AudioPhysics/CollisionEvents/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.AudioPhysics/CollisionEvents/<>c.<.ctor>b__4_0
void Oculus::Interaction::AudioPhysics::CollisionEvents::$$c::$_ctor$b__4_0(::UnityEngine::Collision* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioPhysics::CollisionEvents::$$c::<.ctor>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.ImpactAudio
#include "Oculus/Interaction/ImpactAudio.hpp"
// Including type: Oculus.Interaction.AudioTrigger
#include "Oculus/Interaction/AudioTrigger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.AudioTrigger _hardCollisionSound
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::AudioTrigger*& Oculus::Interaction::ImpactAudio::dyn__hardCollisionSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ImpactAudio::dyn__hardCollisionSound");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hardCollisionSound"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::AudioTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.AudioTrigger _softCollisionSound
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::AudioTrigger*& Oculus::Interaction::ImpactAudio::dyn__softCollisionSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ImpactAudio::dyn__softCollisionSound");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_softCollisionSound"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::AudioTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.ImpactAudio.get_HardCollisionSound
::Oculus::Interaction::AudioTrigger* Oculus::Interaction::ImpactAudio::get_HardCollisionSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ImpactAudio::get_HardCollisionSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HardCollisionSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::AudioTrigger*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.ImpactAudio.get_SoftCollisionSound
::Oculus::Interaction::AudioTrigger* Oculus::Interaction::ImpactAudio::get_SoftCollisionSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::ImpactAudio::get_SoftCollisionSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_SoftCollisionSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::AudioTrigger*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.AudioTrigger
#include "Oculus/Interaction/AudioTrigger.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& Oculus::Interaction::AudioTrigger::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _audioClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& Oculus::Interaction::AudioTrigger::dyn__audioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::dyn__audioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _volume
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::AudioTrigger::dyn__volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::dyn__volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MinMaxPair _volumeRandomization
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MinMaxPair& Oculus::Interaction::AudioTrigger::dyn__volumeRandomization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::dyn__volumeRandomization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volumeRandomization"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MinMaxPair*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _pitch
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::AudioTrigger::dyn__pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::dyn__pitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pitch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MinMaxPair _pitchRandomization
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MinMaxPair& Oculus::Interaction::AudioTrigger::dyn__pitchRandomization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::dyn__pitchRandomization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pitchRandomization"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MinMaxPair*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _spatialize
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::AudioTrigger::dyn__spatialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::dyn__spatialize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spatialize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _loop
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::AudioTrigger::dyn__loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::dyn__loop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _chanceToPlay
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::AudioTrigger::dyn__chanceToPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::dyn__chanceToPlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_chanceToPlay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _playOnStart
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::AudioTrigger::dyn__playOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::dyn__playOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _previousAudioClipIndex
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::AudioTrigger::dyn__previousAudioClipIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::dyn__previousAudioClipIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousAudioClipIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.get_Volume
float Oculus::Interaction::AudioTrigger::get_Volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::get_Volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.set_Volume
void Oculus::Interaction::AudioTrigger::set_Volume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::set_Volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.get_VolumeRandomization
::Oculus::Interaction::MinMaxPair Oculus::Interaction::AudioTrigger::get_VolumeRandomization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::get_VolumeRandomization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VolumeRandomization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::MinMaxPair, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.set_VolumeRandomization
void Oculus::Interaction::AudioTrigger::set_VolumeRandomization(::Oculus::Interaction::MinMaxPair value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::set_VolumeRandomization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VolumeRandomization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.get_Pitch
float Oculus::Interaction::AudioTrigger::get_Pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::get_Pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.set_Pitch
void Oculus::Interaction::AudioTrigger::set_Pitch(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::set_Pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.get_PitchRandomization
::Oculus::Interaction::MinMaxPair Oculus::Interaction::AudioTrigger::get_PitchRandomization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::get_PitchRandomization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PitchRandomization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::MinMaxPair, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.set_PitchRandomization
void Oculus::Interaction::AudioTrigger::set_PitchRandomization(::Oculus::Interaction::MinMaxPair value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::set_PitchRandomization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PitchRandomization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.get_Spatialize
bool Oculus::Interaction::AudioTrigger::get_Spatialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::get_Spatialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Spatialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.set_Spatialize
void Oculus::Interaction::AudioTrigger::set_Spatialize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::set_Spatialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Spatialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.get_Loop
bool Oculus::Interaction::AudioTrigger::get_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::get_Loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.set_Loop
void Oculus::Interaction::AudioTrigger::set_Loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::set_Loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.get_ChanceToPlay
float Oculus::Interaction::AudioTrigger::get_ChanceToPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::get_ChanceToPlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChanceToPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.set_ChanceToPlay
void Oculus::Interaction::AudioTrigger::set_ChanceToPlay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::set_ChanceToPlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChanceToPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.Start
void Oculus::Interaction::AudioTrigger::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::AudioTrigger*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.PlayAudio
void Oculus::Interaction::AudioTrigger::PlayAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::PlayAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.RandomClipWithoutRepeat
::UnityEngine::AudioClip* Oculus::Interaction::AudioTrigger::RandomClipWithoutRepeat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::RandomClipWithoutRepeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomClipWithoutRepeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.InjectAllAudioTrigger
void Oculus::Interaction::AudioTrigger::InjectAllAudioTrigger(::UnityEngine::AudioSource* audioSource, ::ArrayW<::UnityEngine::AudioClip*> audioClips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::InjectAllAudioTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllAudioTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioSource), ::il2cpp_utils::ExtractType(audioClips)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioSource, audioClips);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.InjectAudioSource
void Oculus::Interaction::AudioTrigger::InjectAudioSource(::UnityEngine::AudioSource* audioSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::InjectAudioSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAudioSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioSource);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.InjectAudioClips
void Oculus::Interaction::AudioTrigger::InjectAudioClips(::ArrayW<::UnityEngine::AudioClip*> audioClips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::InjectAudioClips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAudioClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClips)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioClips);
}
// Autogenerated method: Oculus.Interaction.AudioTrigger.InjectOptionalPlayOnStart
void Oculus::Interaction::AudioTrigger::InjectOptionalPlayOnStart(bool playOnStart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::AudioTrigger::InjectOptionalPlayOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectOptionalPlayOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playOnStart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playOnStart);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.MinMaxPair
#include "Oculus/Interaction/MinMaxPair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useRandomRange
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::MinMaxPair::dyn__useRandomRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MinMaxPair::dyn__useRandomRange");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useRandomRange"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _min
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::MinMaxPair::dyn__min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MinMaxPair::dyn__min");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _max
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::MinMaxPair::dyn__max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MinMaxPair::dyn__max");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.MinMaxPair.get_UseRandomRange
bool Oculus::Interaction::MinMaxPair::get_UseRandomRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MinMaxPair::get_UseRandomRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_UseRandomRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.MinMaxPair.get_Min
float Oculus::Interaction::MinMaxPair::get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MinMaxPair::get_Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.MinMaxPair.get_Max
float Oculus::Interaction::MinMaxPair::get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::MinMaxPair::get_Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PressureBreakable
#include "Oculus/Interaction/PressureBreakable.hpp"
// Including type: Oculus.Interaction.PressureBreakable/<Unbreak>d__18
#include "Oculus/Interaction/PressureBreakable_-Unbreak-d__18.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractable
#include "Oculus/Interaction/HandGrab/HandGrabInteractable.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _breakThreshold
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PressureBreakable::dyn__breakThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::dyn__breakThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_breakThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _unbrokenObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::PressureBreakable::dyn__unbrokenObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::dyn__unbrokenObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unbrokenObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _brokenObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::PressureBreakable::dyn__brokenObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::dyn__brokenObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brokenObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody[] _brokenBodies
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Rigidbody*>& Oculus::Interaction::PressureBreakable::dyn__brokenBodies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::dyn__brokenBodies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brokenBodies"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Rigidbody*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandGrabInteractable[] _grabInteractables
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::HandGrab::HandGrabInteractable*>& Oculus::Interaction::PressureBreakable::dyn__grabInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::dyn__grabInteractables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabInteractables"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Interaction::HandGrab::HandGrabInteractable*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _explosionForce
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PressureBreakable::dyn__explosionForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::dyn__explosionForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionForce"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _explosionRadius
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PressureBreakable::dyn__explosionRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::dyn__explosionRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _unbreakDelay
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PressureBreakable::dyn__unbreakDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::dyn__unbreakDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unbreakDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _useStrength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PressureBreakable::dyn__useStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::dyn__useStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isBroken
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PressureBreakable::dyn__isBroken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::dyn__isBroken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isBroken"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose[] _brokenBodiesInitialPoses
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Pose>& Oculus::Interaction::PressureBreakable::dyn__brokenBodiesInitialPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::dyn__brokenBodiesInitialPoses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brokenBodiesInitialPoses"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Pose>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PressureBreakable.Awake
void Oculus::Interaction::PressureBreakable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PressureBreakable*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PressureBreakable.Start
void Oculus::Interaction::PressureBreakable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PressureBreakable*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PressureBreakable.Update
void Oculus::Interaction::PressureBreakable::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PressureBreakable*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PressureBreakable.BeginUse
void Oculus::Interaction::PressureBreakable::BeginUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::BeginUse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PressureBreakable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PressureBreakable.EndUse
void Oculus::Interaction::PressureBreakable::EndUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::EndUse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PressureBreakable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PressureBreakable.ComputeUseStrength
float Oculus::Interaction::PressureBreakable::ComputeUseStrength(float strength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::ComputeUseStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PressureBreakable*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, strength);
}
// Autogenerated method: Oculus.Interaction.PressureBreakable.Break
void Oculus::Interaction::PressureBreakable::Break() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::Break");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Break", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PressureBreakable.Unbreak
::System::Collections::IEnumerator* Oculus::Interaction::PressureBreakable::Unbreak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::Unbreak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unbreak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.PressureBreakable/<Unbreak>d__18
#include "Oculus/Interaction/PressureBreakable_-Unbreak-d__18.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::PressureBreakable::$Unbreak$d__18::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::$Unbreak$d__18::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Oculus::Interaction::PressureBreakable::$Unbreak$d__18::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::$Unbreak$d__18::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.PressureBreakable <>4__this
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PressureBreakable*& Oculus::Interaction::PressureBreakable::$Unbreak$d__18::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::$Unbreak$d__18::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PressureBreakable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PressureBreakable/<Unbreak>d__18.System.IDisposable.Dispose
void Oculus::Interaction::PressureBreakable::$Unbreak$d__18::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::$Unbreak$d__18::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PressureBreakable::$Unbreak$d__18*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PressureBreakable/<Unbreak>d__18.MoveNext
bool Oculus::Interaction::PressureBreakable::$Unbreak$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::$Unbreak$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PressureBreakable::$Unbreak$d__18*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PressureBreakable/<Unbreak>d__18.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Oculus::Interaction::PressureBreakable::$Unbreak$d__18::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::$Unbreak$d__18::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PressureBreakable::$Unbreak$d__18*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PressureBreakable/<Unbreak>d__18.System.Collections.IEnumerator.Reset
void Oculus::Interaction::PressureBreakable::$Unbreak$d__18::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::$Unbreak$d__18::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PressureBreakable::$Unbreak$d__18*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PressureBreakable/<Unbreak>d__18.System.Collections.IEnumerator.get_Current
::Il2CppObject* Oculus::Interaction::PressureBreakable::$Unbreak$d__18::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureBreakable::$Unbreak$d__18::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PressureBreakable::$Unbreak$d__18*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.PressureSquishable
#include "Oculus/Interaction/PressureSquishable.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _squishableObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::PressureSquishable::dyn__squishableObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureSquishable::dyn__squishableObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_squishableObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxSquish
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PressureSquishable::dyn__maxSquish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureSquishable::dyn__maxSquish");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxSquish"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxStretch
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::PressureSquishable::dyn__maxStretch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureSquishable::dyn__maxStretch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxStretch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::PressureSquishable::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureSquishable::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _initialScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::PressureSquishable::dyn__initialScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureSquishable::dyn__initialScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.PressureSquishable.Start
void Oculus::Interaction::PressureSquishable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureSquishable::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PressureSquishable*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PressureSquishable.BeginUse
void Oculus::Interaction::PressureSquishable::BeginUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureSquishable::BeginUse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PressureSquishable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PressureSquishable.EndUse
void Oculus::Interaction::PressureSquishable::EndUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureSquishable::EndUse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PressureSquishable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.PressureSquishable.ComputeUseStrength
float Oculus::Interaction::PressureSquishable::ComputeUseStrength(float strength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::PressureSquishable::ComputeUseStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::PressureSquishable*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, strength);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.AdjustableAudio
#include "Oculus/Interaction/Locomotion/AdjustableAudio.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& Oculus::Interaction::Locomotion::AdjustableAudio::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _audioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& Oculus::Interaction::Locomotion::AdjustableAudio::dyn__audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::dyn__audioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _volumeFactor
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::AdjustableAudio::dyn__volumeFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::dyn__volumeFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volumeFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _volumeCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::Locomotion::AdjustableAudio::dyn__volumeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::dyn__volumeCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volumeCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _pitchCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::Locomotion::AdjustableAudio::dyn__pitchCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::dyn__pitchCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pitchCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::AdjustableAudio::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.AdjustableAudio.get_AudioClip
::UnityEngine::AudioClip* Oculus::Interaction::Locomotion::AdjustableAudio::get_AudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::get_AudioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.AdjustableAudio.set_AudioClip
void Oculus::Interaction::Locomotion::AdjustableAudio::set_AudioClip(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::set_AudioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.AdjustableAudio.get_VolumeFactor
float Oculus::Interaction::Locomotion::AdjustableAudio::get_VolumeFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::get_VolumeFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VolumeFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.AdjustableAudio.set_VolumeFactor
void Oculus::Interaction::Locomotion::AdjustableAudio::set_VolumeFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::set_VolumeFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VolumeFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.AdjustableAudio.get_VolumeCurve
::UnityEngine::AnimationCurve* Oculus::Interaction::Locomotion::AdjustableAudio::get_VolumeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::get_VolumeCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VolumeCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.AdjustableAudio.set_VolumeCurve
void Oculus::Interaction::Locomotion::AdjustableAudio::set_VolumeCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::set_VolumeCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VolumeCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.AdjustableAudio.get_PitchCurve
::UnityEngine::AnimationCurve* Oculus::Interaction::Locomotion::AdjustableAudio::get_PitchCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::get_PitchCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PitchCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.AdjustableAudio.set_PitchCurve
void Oculus::Interaction::Locomotion::AdjustableAudio::set_PitchCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::set_PitchCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PitchCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Locomotion.AdjustableAudio.Reset
void Oculus::Interaction::Locomotion::AdjustableAudio::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::AdjustableAudio*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.AdjustableAudio.Start
void Oculus::Interaction::Locomotion::AdjustableAudio::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::AdjustableAudio*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.AdjustableAudio.PlayAudio
void Oculus::Interaction::Locomotion::AdjustableAudio::PlayAudio(float volumeT, float pitchT, float pan) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::PlayAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volumeT), ::il2cpp_utils::ExtractType(pitchT), ::il2cpp_utils::ExtractType(pan)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volumeT, pitchT, pan);
}
// Autogenerated method: Oculus.Interaction.Locomotion.AdjustableAudio.InjectAllAdjustableAudio
void Oculus::Interaction::Locomotion::AdjustableAudio::InjectAllAdjustableAudio(::UnityEngine::AudioSource* audioSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::InjectAllAdjustableAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllAdjustableAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioSource);
}
// Autogenerated method: Oculus.Interaction.Locomotion.AdjustableAudio.InjectAudioSource
void Oculus::Interaction::Locomotion::AdjustableAudio::InjectAudioSource(::UnityEngine::AudioSource* audioSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::AdjustableAudio::InjectAudioSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAudioSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioSource);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Locomotion.LocomotorSound
#include "Oculus/Interaction/Locomotion/LocomotorSound.hpp"
// Including type: Oculus.Interaction.Locomotion.PlayerLocomotor
#include "Oculus/Interaction/Locomotion/PlayerLocomotor.hpp"
// Including type: Oculus.Interaction.Locomotion.AdjustableAudio
#include "Oculus/Interaction/Locomotion/AdjustableAudio.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: Oculus.Interaction.Locomotion.LocomotionEvent
#include "Oculus/Interaction/Locomotion/LocomotionEvent.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.PlayerLocomotor _locomotor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::PlayerLocomotor*& Oculus::Interaction::Locomotion::LocomotorSound::dyn__locomotor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::dyn__locomotor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locomotor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::PlayerLocomotor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.AdjustableAudio _translationSound
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::AdjustableAudio*& Oculus::Interaction::Locomotion::LocomotorSound::dyn__translationSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::dyn__translationSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_translationSound"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::AdjustableAudio**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.AdjustableAudio _translationDeniedSound
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::AdjustableAudio*& Oculus::Interaction::Locomotion::LocomotorSound::dyn__translationDeniedSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::dyn__translationDeniedSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_translationDeniedSound"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::AdjustableAudio**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.AdjustableAudio _snapTurnSound
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::AdjustableAudio*& Oculus::Interaction::Locomotion::LocomotorSound::dyn__snapTurnSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::dyn__snapTurnSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snapTurnSound"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::AdjustableAudio**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _translationCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::Locomotion::LocomotorSound::dyn__translationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::dyn__translationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_translationCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _rotationCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::Locomotion::LocomotorSound::dyn__rotationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::dyn__rotationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _pitchVariance
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Locomotion::LocomotorSound::dyn__pitchVariance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::dyn__pitchVariance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pitchVariance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Locomotion::LocomotorSound::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotorSound.Start
void Oculus::Interaction::Locomotion::LocomotorSound::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotorSound*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotorSound.OnEnable
void Oculus::Interaction::Locomotion::LocomotorSound::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotorSound*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotorSound.OnDisable
void Oculus::Interaction::Locomotion::LocomotorSound::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Locomotion::LocomotorSound*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotorSound.HandleLocomotionEvent
void Oculus::Interaction::Locomotion::LocomotorSound::HandleLocomotionEvent(::Oculus::Interaction::Locomotion::LocomotionEvent locomotionEvent, ::UnityEngine::Pose delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::HandleLocomotionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLocomotionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locomotionEvent), ::il2cpp_utils::ExtractType(delta)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, locomotionEvent, delta);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotorSound.PlayTranslationSound
void Oculus::Interaction::Locomotion::LocomotorSound::PlayTranslationSound(float translationDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::PlayTranslationSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayTranslationSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(translationDistance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, translationDistance);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotorSound.PlayDenialSound
void Oculus::Interaction::Locomotion::LocomotorSound::PlayDenialSound(float translationDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::PlayDenialSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayDenialSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(translationDistance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, translationDistance);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotorSound.PlayRotationSound
void Oculus::Interaction::Locomotion::LocomotorSound::PlayRotationSound(float rotationLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::PlayRotationSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayRotationSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotationLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotationLength);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotorSound.InjectAllLocomotorSound
void Oculus::Interaction::Locomotion::LocomotorSound::InjectAllLocomotorSound(::Oculus::Interaction::Locomotion::PlayerLocomotor* locomotor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::InjectAllLocomotorSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllLocomotorSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locomotor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, locomotor);
}
// Autogenerated method: Oculus.Interaction.Locomotion.LocomotorSound.InjectPlayerLocomotor
void Oculus::Interaction::Locomotion::LocomotorSound::InjectPlayerLocomotor(::Oculus::Interaction::Locomotion::PlayerLocomotor* locomotor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Locomotion::LocomotorSound::InjectPlayerLocomotor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPlayerLocomotor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locomotor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, locomotor);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Demo.MeshBlit
#include "Oculus/Interaction/Demo/MeshBlit.hpp"
// Including type: Oculus.Interaction.Demo.MeshBlit/<<OnEnable>g__BlitRoutine|11_0>d
#include "Oculus/Interaction/Demo/MeshBlit_--OnEnable-g__BlitRoutine-11_0-d.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.WaitForSeconds
#include "UnityEngine/WaitForSeconds.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MAIN_TEX
int Oculus::Interaction::Demo::MeshBlit::_get_MAIN_TEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::_get_MAIN_TEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.Demo", "MeshBlit", "MAIN_TEX"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAIN_TEX
void Oculus::Interaction::Demo::MeshBlit::_set_MAIN_TEX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::_set_MAIN_TEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Demo", "MeshBlit", "MAIN_TEX", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Oculus::Interaction::Demo::MeshBlit::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::dyn_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RenderTexture renderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& Oculus::Interaction::Demo::MeshBlit::dyn_renderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::dyn_renderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _blitsPerSecond
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::MeshBlit::dyn__blitsPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::dyn__blitsPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blitsPerSecond"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& Oculus::Interaction::Demo::MeshBlit::dyn__mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::dyn__mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.WaitForSeconds _waitForSeconds
[[deprecated("Use field access instead!")]] ::UnityEngine::WaitForSeconds*& Oculus::Interaction::Demo::MeshBlit::dyn__waitForSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::dyn__waitForSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitForSeconds"))->offset;
  return *reinterpret_cast<::UnityEngine::WaitForSeconds**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Demo.MeshBlit.get_BlitsPerSecond
float Oculus::Interaction::Demo::MeshBlit::get_BlitsPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::get_BlitsPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BlitsPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.MeshBlit.set_BlitsPerSecond
void Oculus::Interaction::Demo::MeshBlit::set_BlitsPerSecond(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::set_BlitsPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BlitsPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Demo.MeshBlit.get_Mesh
::UnityEngine::Mesh* Oculus::Interaction::Demo::MeshBlit::get_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::get_Mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.MeshBlit.OnEnable
void Oculus::Interaction::Demo::MeshBlit::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.MeshBlit.Blit
void Oculus::Interaction::Demo::MeshBlit::Blit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::Blit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.MeshBlit.SetBlitsPerSecond
void Oculus::Interaction::Demo::MeshBlit::SetBlitsPerSecond(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::SetBlitsPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBlitsPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Demo.MeshBlit..cctor
void Oculus::Interaction::Demo::MeshBlit::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Demo", "MeshBlit", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.MeshBlit.<OnEnable>g__BlitRoutine|11_0
::System::Collections::IEnumerator* Oculus::Interaction::Demo::MeshBlit::$OnEnable$g__BlitRoutine_11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::<OnEnable>g__BlitRoutine|11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>g__BlitRoutine|11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.Demo.MeshBlit/<<OnEnable>g__BlitRoutine|11_0>d
#include "Oculus/Interaction/Demo/MeshBlit_--OnEnable-g__BlitRoutine-11_0-d.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Demo.MeshBlit <>4__this
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Demo::MeshBlit*& Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Demo::MeshBlit**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Demo.MeshBlit/<<OnEnable>g__BlitRoutine|11_0>d.System.IDisposable.Dispose
void Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.MeshBlit/<<OnEnable>g__BlitRoutine|11_0>d.MoveNext
bool Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.MeshBlit/<<OnEnable>g__BlitRoutine|11_0>d.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.MeshBlit/<<OnEnable>g__BlitRoutine|11_0>d.System.Collections.IEnumerator.Reset
void Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.MeshBlit/<<OnEnable>g__BlitRoutine|11_0>d.System.Collections.IEnumerator.get_Current
::Il2CppObject* Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::MeshBlit::$$OnEnable$g__BlitRoutine|11_0$d*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Demo.WaterSpray
#include "Oculus/Interaction/Demo/WaterSpray.hpp"
// Including type: Oculus.Interaction.Demo.WaterSpray/NozzleMode
#include "Oculus/Interaction/Demo/WaterSpray_NozzleMode.hpp"
// Including type: Oculus.Interaction.Demo.WaterSpray/NonAlloc
#include "Oculus/Interaction/Demo/WaterSpray_NonAlloc.hpp"
// Including type: Oculus.Interaction.Demo.WaterSpray/<StampRoutine>d__35
#include "Oculus/Interaction/Demo/WaterSpray_-StampRoutine-d__35.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: UnityEngine.WaitForSeconds
#include "UnityEngine/WaitForSeconds.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: Oculus.Interaction.Demo.MeshBlit
#include "Oculus/Interaction/Demo/MeshBlit.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 WET_MAP_PROPERTY
int Oculus::Interaction::Demo::WaterSpray::_get_WET_MAP_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::_get_WET_MAP_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.Demo", "WaterSpray", "WET_MAP_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 WET_MAP_PROPERTY
void Oculus::Interaction::Demo::WaterSpray::_set_WET_MAP_PROPERTY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::_set_WET_MAP_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Demo", "WaterSpray", "WET_MAP_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 STAMP_MULTIPLIER_PROPERTY
int Oculus::Interaction::Demo::WaterSpray::_get_STAMP_MULTIPLIER_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::_get_STAMP_MULTIPLIER_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.Demo", "WaterSpray", "STAMP_MULTIPLIER_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 STAMP_MULTIPLIER_PROPERTY
void Oculus::Interaction::Demo::WaterSpray::_set_STAMP_MULTIPLIER_PROPERTY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::_set_STAMP_MULTIPLIER_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Demo", "WaterSpray", "STAMP_MULTIPLIER_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 SUBTRACT_PROPERTY
int Oculus::Interaction::Demo::WaterSpray::_get_SUBTRACT_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::_get_SUBTRACT_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.Demo", "WaterSpray", "SUBTRACT_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 SUBTRACT_PROPERTY
void Oculus::Interaction::Demo::WaterSpray::_set_SUBTRACT_PROPERTY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::_set_SUBTRACT_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Demo", "WaterSpray", "SUBTRACT_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 WET_BUMPMAP_PROPERTY
int Oculus::Interaction::Demo::WaterSpray::_get_WET_BUMPMAP_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::_get_WET_BUMPMAP_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.Demo", "WaterSpray", "WET_BUMPMAP_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 WET_BUMPMAP_PROPERTY
void Oculus::Interaction::Demo::WaterSpray::_set_WET_BUMPMAP_PROPERTY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::_set_WET_BUMPMAP_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Demo", "WaterSpray", "WET_BUMPMAP_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 STAMP_MATRIX_PROPERTY
int Oculus::Interaction::Demo::WaterSpray::_get_STAMP_MATRIX_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::_get_STAMP_MATRIX_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.Demo", "WaterSpray", "STAMP_MATRIX_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 STAMP_MATRIX_PROPERTY
void Oculus::Interaction::Demo::WaterSpray::_set_STAMP_MATRIX_PROPERTY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::_set_STAMP_MATRIX_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Demo", "WaterSpray", "STAMP_MATRIX_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.WaitForSeconds WAIT_TIME
::UnityEngine::WaitForSeconds* Oculus::Interaction::Demo::WaterSpray::_get_WAIT_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::_get_WAIT_TIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::WaitForSeconds*>("Oculus.Interaction.Demo", "WaterSpray", "WAIT_TIME"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.WaitForSeconds WAIT_TIME
void Oculus::Interaction::Demo::WaterSpray::_set_WAIT_TIME(::UnityEngine::WaitForSeconds* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::_set_WAIT_TIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Demo", "WaterSpray", "WAIT_TIME", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _trigger
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Demo::WaterSpray::dyn__trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__trigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trigger"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _nozzle
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Demo::WaterSpray::dyn__nozzle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__nozzle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nozzle"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _triggerRotationCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::Demo::WaterSpray::dyn__triggerRotationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__triggerRotationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_triggerRotationCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SnapAxis _axis
[[deprecated("Use field access instead!")]] ::UnityEngine::SnapAxis& Oculus::Interaction::Demo::WaterSpray::dyn__axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__axis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_axis"))->offset;
  return *reinterpret_cast<::UnityEngine::SnapAxis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _releaseThresold
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSpray::dyn__releaseThresold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__releaseThresold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_releaseThresold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fireThresold
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSpray::dyn__fireThresold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__fireThresold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fireThresold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _triggerSpeed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSpray::dyn__triggerSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__triggerSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_triggerSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _strengthCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::Demo::WaterSpray::dyn__strengthCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__strengthCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strengthCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _raycastLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Oculus::Interaction::Demo::WaterSpray::dyn__raycastLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__raycastLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_raycastLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spraySpreadAngle
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSpray::dyn__spraySpreadAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__spraySpreadAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spraySpreadAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _streamSpreadAngle
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSpray::dyn__streamSpreadAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__streamSpreadAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_streamSpreadAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sprayStrength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSpray::dyn__sprayStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__sprayStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sprayStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _sprayHits
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Demo::WaterSpray::dyn__sprayHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__sprayHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sprayHits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sprayRandomness
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSpray::dyn__sprayRandomness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__sprayRandomness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sprayRandomness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxDistance
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSpray::dyn__maxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__maxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _dryingSpeed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSpray::dyn__dryingSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__dryingSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dryingSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _sprayStampMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Oculus::Interaction::Demo::WaterSpray::dyn__sprayStampMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__sprayStampMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sprayStampMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture _waterBumpOverride
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& Oculus::Interaction::Demo::WaterSpray::dyn__waterBumpOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__waterBumpOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waterBumpOverride"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent WhenSpray
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Demo::WaterSpray::dyn_WhenSpray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn_WhenSpray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenSpray"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent WhenStream
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Demo::WaterSpray::dyn_WhenStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn_WhenStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenStream"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wasFired
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Demo::WaterSpray::dyn__wasFired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__wasFired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wasFired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _dampedUseStrength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSpray::dyn__dampedUseStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__dampedUseStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dampedUseStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastUseTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSpray::dyn__lastUseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::dyn__lastUseTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastUseTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.SprayWater
void Oculus::Interaction::Demo::WaterSpray::SprayWater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::SprayWater");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SprayWater", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.UpdateTriggerRotation
void Oculus::Interaction::Demo::WaterSpray::UpdateTriggerRotation(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::UpdateTriggerRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTriggerRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.GetNozzleMode
::Oculus::Interaction::Demo::WaterSpray::NozzleMode Oculus::Interaction::Demo::WaterSpray::GetNozzleMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::GetNozzleMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNozzleMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Demo::WaterSpray::NozzleMode, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.Spray
void Oculus::Interaction::Demo::WaterSpray::Spray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::Spray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Spray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.Stream
void Oculus::Interaction::Demo::WaterSpray::Stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::Stream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.StampRoutine
::System::Collections::IEnumerator* Oculus::Interaction::Demo::WaterSpray::StampRoutine(int stampCount, float randomness, float spread, float strength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::StampRoutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StampRoutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stampCount), ::il2cpp_utils::ExtractType(randomness), ::il2cpp_utils::ExtractType(spread), ::il2cpp_utils::ExtractType(strength)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, stampCount, randomness, spread, strength);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.StartStamping
void Oculus::Interaction::Demo::WaterSpray::StartStamping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::StartStamping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartStamping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.StartDrying
void Oculus::Interaction::Demo::WaterSpray::StartDrying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::StartDrying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartDrying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.Stamp
void Oculus::Interaction::Demo::WaterSpray::Stamp(::UnityEngine::Pose pose, float maxDistance, float angle, float strength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::Stamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(strength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pose, maxDistance, angle, strength);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.RenderSplash
void Oculus::Interaction::Demo::WaterSpray::RenderSplash(::UnityEngine::Transform* rootObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::RenderSplash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderSplash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootObject);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.CreateMeshBlit
::Oculus::Interaction::Demo::MeshBlit* Oculus::Interaction::Demo::WaterSpray::CreateMeshBlit(::UnityEngine::MeshFilter* meshFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::CreateMeshBlit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMeshBlit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Demo::MeshBlit*, false>(this, ___internal__method, meshFilter);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.CreateStampMatrix
::UnityEngine::Matrix4x4 Oculus::Interaction::Demo::WaterSpray::CreateStampMatrix(::UnityEngine::Pose pose, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::CreateStampMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateStampMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(angle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method, pose, angle);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.OnDestroy
void Oculus::Interaction::Demo::WaterSpray::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.BeginUse
void Oculus::Interaction::Demo::WaterSpray::BeginUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::BeginUse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::WaterSpray*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.EndUse
void Oculus::Interaction::Demo::WaterSpray::EndUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::EndUse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::WaterSpray*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.ComputeUseStrength
float Oculus::Interaction::Demo::WaterSpray::ComputeUseStrength(float strength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::ComputeUseStrength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::WaterSpray*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, strength);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray.UpdateTriggerProgress
void Oculus::Interaction::Demo::WaterSpray::UpdateTriggerProgress(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::UpdateTriggerProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTriggerProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray..cctor
void Oculus::Interaction::Demo::WaterSpray::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Demo", "WaterSpray", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Demo.WaterSpray/NozzleMode
#include "Oculus/Interaction/Demo/WaterSpray_NozzleMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Demo.WaterSpray/NozzleMode Spray
::Oculus::Interaction::Demo::WaterSpray::NozzleMode Oculus::Interaction::Demo::WaterSpray::NozzleMode::_get_Spray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NozzleMode::_get_Spray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Demo::WaterSpray::NozzleMode>("Oculus.Interaction.Demo", "WaterSpray/NozzleMode", "Spray"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Demo.WaterSpray/NozzleMode Spray
void Oculus::Interaction::Demo::WaterSpray::NozzleMode::_set_Spray(::Oculus::Interaction::Demo::WaterSpray::NozzleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NozzleMode::_set_Spray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Demo", "WaterSpray/NozzleMode", "Spray", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Demo.WaterSpray/NozzleMode Stream
::Oculus::Interaction::Demo::WaterSpray::NozzleMode Oculus::Interaction::Demo::WaterSpray::NozzleMode::_get_Stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NozzleMode::_get_Stream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Demo::WaterSpray::NozzleMode>("Oculus.Interaction.Demo", "WaterSpray/NozzleMode", "Stream"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Demo.WaterSpray/NozzleMode Stream
void Oculus::Interaction::Demo::WaterSpray::NozzleMode::_set_Stream(::Oculus::Interaction::Demo::WaterSpray::NozzleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NozzleMode::_set_Stream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Demo", "WaterSpray/NozzleMode", "Stream", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Demo::WaterSpray::NozzleMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NozzleMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Demo.WaterSpray/NonAlloc
#include "Oculus/Interaction/Demo/WaterSpray_NonAlloc.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Interaction.Demo.MeshBlit
#include "Oculus/Interaction/Demo/MeshBlit.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Collider[] _overlapResults
::ArrayW<::UnityEngine::Collider*> Oculus::Interaction::Demo::WaterSpray::NonAlloc::_get__overlapResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NonAlloc::_get__overlapResults");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Collider*>>("Oculus.Interaction.Demo", "WaterSpray/NonAlloc", "_overlapResults"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Collider[] _overlapResults
void Oculus::Interaction::Demo::WaterSpray::NonAlloc::_set__overlapResults(::ArrayW<::UnityEngine::Collider*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NonAlloc::_set__overlapResults");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Demo", "WaterSpray/NonAlloc", "_overlapResults", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Generic.Dictionary`2<System.Int32,Oculus.Interaction.Demo.MeshBlit> _blits
::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::Demo::MeshBlit*>* Oculus::Interaction::Demo::WaterSpray::NonAlloc::_get__blits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NonAlloc::_get__blits");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::Demo::MeshBlit*>*>("Oculus.Interaction.Demo", "WaterSpray/NonAlloc", "_blits")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Generic.Dictionary`2<System.Int32,Oculus.Interaction.Demo.MeshBlit> _blits
void Oculus::Interaction::Demo::WaterSpray::NonAlloc::_set__blits(::System::Collections::Generic::Dictionary_2<int, ::Oculus::Interaction::Demo::MeshBlit*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NonAlloc::_set__blits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Demo", "WaterSpray/NonAlloc", "_blits", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.MeshFilter> _meshFilters
::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>* Oculus::Interaction::Demo::WaterSpray::NonAlloc::_get__meshFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NonAlloc::_get__meshFilters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>*>("Oculus.Interaction.Demo", "WaterSpray/NonAlloc", "_meshFilters"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.MeshFilter> _meshFilters
void Oculus::Interaction::Demo::WaterSpray::NonAlloc::_set__meshFilters(::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NonAlloc::_set__meshFilters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Demo", "WaterSpray/NonAlloc", "_meshFilters", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.HashSet`1<UnityEngine.Transform> _roots
::System::Collections::Generic::HashSet_1<::UnityEngine::Transform*>* Oculus::Interaction::Demo::WaterSpray::NonAlloc::_get__roots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NonAlloc::_get__roots");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::UnityEngine::Transform*>*>("Oculus.Interaction.Demo", "WaterSpray/NonAlloc", "_roots"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.HashSet`1<UnityEngine.Transform> _roots
void Oculus::Interaction::Demo::WaterSpray::NonAlloc::_set__roots(::System::Collections::Generic::HashSet_1<::UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NonAlloc::_set__roots");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Demo", "WaterSpray/NonAlloc", "_roots", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.MaterialPropertyBlock _block
::UnityEngine::MaterialPropertyBlock* Oculus::Interaction::Demo::WaterSpray::NonAlloc::_get__block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NonAlloc::_get__block");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MaterialPropertyBlock*>("Oculus.Interaction.Demo", "WaterSpray/NonAlloc", "_block"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.MaterialPropertyBlock _block
void Oculus::Interaction::Demo::WaterSpray::NonAlloc::_set__block(::UnityEngine::MaterialPropertyBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NonAlloc::_set__block");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Demo", "WaterSpray/NonAlloc", "_block", value));
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray/NonAlloc.get_PropertyBlock
::UnityEngine::MaterialPropertyBlock* Oculus::Interaction::Demo::WaterSpray::NonAlloc::get_PropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NonAlloc::get_PropertyBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Demo", "WaterSpray/NonAlloc", "get_PropertyBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MaterialPropertyBlock*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray/NonAlloc.GetMeshFiltersInChildren
::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>* Oculus::Interaction::Demo::WaterSpray::NonAlloc::GetMeshFiltersInChildren(::UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NonAlloc::GetMeshFiltersInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Demo", "WaterSpray/NonAlloc", "GetMeshFiltersInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::MeshFilter*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, root);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray/NonAlloc.GetRootsFromOverlapResults
::System::Collections::Generic::HashSet_1<::UnityEngine::Transform*>* Oculus::Interaction::Demo::WaterSpray::NonAlloc::GetRootsFromOverlapResults(int hitCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NonAlloc::GetRootsFromOverlapResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Demo", "WaterSpray/NonAlloc", "GetRootsFromOverlapResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hitCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::UnityEngine::Transform*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hitCount);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray/NonAlloc.GetRoot
::UnityEngine::Transform* Oculus::Interaction::Demo::WaterSpray::NonAlloc::GetRoot(::UnityEngine::Collider* hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NonAlloc::GetRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Demo", "WaterSpray/NonAlloc", "GetRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hit)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hit);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray/NonAlloc.CleanUpDestroyedBlits
void Oculus::Interaction::Demo::WaterSpray::NonAlloc::CleanUpDestroyedBlits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NonAlloc::CleanUpDestroyedBlits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Demo", "WaterSpray/NonAlloc", "CleanUpDestroyedBlits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray/NonAlloc..cctor
void Oculus::Interaction::Demo::WaterSpray::NonAlloc::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::NonAlloc::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Demo", "WaterSpray/NonAlloc", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.Demo.WaterSpray/<StampRoutine>d__35
#include "Oculus/Interaction/Demo/WaterSpray_-StampRoutine-d__35.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Demo.WaterSpray <>4__this
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Demo::WaterSpray*& Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Demo::WaterSpray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single randomness
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_randomness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_randomness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spread
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_spread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single strength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_strength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_strength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 stampCount
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_stampCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_stampCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stampCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose <originalPose>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_$originalPose$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_$originalPose$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<originalPose>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__3
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_$i$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::dyn_$i$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray/<StampRoutine>d__35.System.IDisposable.Dispose
void Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray/<StampRoutine>d__35.MoveNext
bool Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray/<StampRoutine>d__35.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray/<StampRoutine>d__35.System.Collections.IEnumerator.Reset
void Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSpray/<StampRoutine>d__35.System.Collections.IEnumerator.get_Current
::Il2CppObject* Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::WaterSpray::$StampRoutine$d__35*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Demo.WaterSprayNozzleTransformer
#include "Oculus/Interaction/Demo/WaterSprayNozzleTransformer.hpp"
// Including type: Oculus.Interaction.IGrabbable
#include "Oculus/Interaction/IGrabbable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _factor
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSprayNozzleTransformer::dyn__factor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSprayNozzleTransformer::dyn__factor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_factor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _snapAngle
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSprayNozzleTransformer::dyn__snapAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSprayNozzleTransformer::dyn__snapAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snapAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _snappiness
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSprayNozzleTransformer::dyn__snappiness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSprayNozzleTransformer::dyn__snappiness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snappiness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxSteps
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Demo::WaterSprayNozzleTransformer::dyn__maxSteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSprayNozzleTransformer::dyn__maxSteps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxSteps"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _relativeAngle
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Demo::WaterSprayNozzleTransformer::dyn__relativeAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSprayNozzleTransformer::dyn__relativeAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _stepsCount
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Demo::WaterSprayNozzleTransformer::dyn__stepsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSprayNozzleTransformer::dyn__stepsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stepsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IGrabbable _grabbable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IGrabbable*& Oculus::Interaction::Demo::WaterSprayNozzleTransformer::dyn__grabbable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSprayNozzleTransformer::dyn__grabbable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabbable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _previousGrabPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Demo::WaterSprayNozzleTransformer::dyn__previousGrabPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSprayNozzleTransformer::dyn__previousGrabPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousGrabPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSprayNozzleTransformer.Initialize
void Oculus::Interaction::Demo::WaterSprayNozzleTransformer::Initialize(::Oculus::Interaction::IGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSprayNozzleTransformer::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::WaterSprayNozzleTransformer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSprayNozzleTransformer.BeginTransform
void Oculus::Interaction::Demo::WaterSprayNozzleTransformer::BeginTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSprayNozzleTransformer::BeginTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::WaterSprayNozzleTransformer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSprayNozzleTransformer.UpdateTransform
void Oculus::Interaction::Demo::WaterSprayNozzleTransformer::UpdateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSprayNozzleTransformer::UpdateTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::WaterSprayNozzleTransformer*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.WaterSprayNozzleTransformer.EndTransform
void Oculus::Interaction::Demo::WaterSprayNozzleTransformer::EndTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::WaterSprayNozzleTransformer::EndTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Demo::WaterSprayNozzleTransformer*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Demo.BasicPBRGlobals
#include "Oculus/Interaction/Demo/BasicPBRGlobals.hpp"
// Including type: UnityEngine.Light
#include "UnityEngine/Light.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Light _mainlight
[[deprecated("Use field access instead!")]] ::UnityEngine::Light*& Oculus::Interaction::Demo::BasicPBRGlobals::dyn__mainlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::BasicPBRGlobals::dyn__mainlight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainlight"))->offset;
  return *reinterpret_cast<::UnityEngine::Light**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Demo.BasicPBRGlobals.Update
void Oculus::Interaction::Demo::BasicPBRGlobals::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::BasicPBRGlobals::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Demo.BasicPBRGlobals.UpateShaderGlobals
void Oculus::Interaction::Demo::BasicPBRGlobals::UpateShaderGlobals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Demo::BasicPBRGlobals::UpateShaderGlobals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpateShaderGlobals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder
#include "Oculus/Interaction/HandGrab/Recorder/HandGrabPoseLiveRecorder.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/<DelayedSnapshot>d__29
#include "Oculus/Interaction/HandGrab/Recorder/HandGrabPoseLiveRecorder_-DelayedSnapshot-d__29.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractor
#include "Oculus/Interaction/HandGrab/HandGrabInteractor.hpp"
// Including type: Oculus.Interaction.HandGrab.Visuals.HandGhostProvider
#include "Oculus/Interaction/HandGrab/Visuals/HandGhostProvider.hpp"
// Including type: Oculus.Interaction.HandGrab.Recorder.TimerUIControl
#include "Oculus/Interaction/HandGrab/Recorder/TimerUIControl.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: Oculus.Interaction.HandGrab.Recorder.RigidbodyDetector
#include "Oculus/Interaction/HandGrab/Recorder/RigidbodyDetector.hpp"
// Including type: UnityEngine.WaitForSeconds
#include "UnityEngine/WaitForSeconds.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: UnityEngine.Events.UnityEvent`1
#include "UnityEngine/Events/UnityEvent_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: Oculus.Interaction.HandGrab.HandPose
#include "Oculus/Interaction/HandGrab/HandPose.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractable
#include "Oculus/Interaction/HandGrab/HandGrabInteractable.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabPose
#include "Oculus/Interaction/HandGrab/HandGrabPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandGrabInteractor _leftHand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabInteractor*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandGrabInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandGrabInteractor _rightHand
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabInteractor*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHand"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandGrabInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.Visuals.HandGhostProvider _ghostProvider
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::Visuals::HandGhostProvider*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__ghostProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__ghostProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostProvider"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::Visuals::HandGhostProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.Recorder.TimerUIControl _timerControl
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::Recorder::TimerUIControl*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__timerControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__timerControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timerControl"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::Recorder::TimerUIControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _delayLabel
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__delayLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__delayLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delayLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.Recorder.RigidbodyDetector _leftDetector
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__leftDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__leftDetector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftDetector"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.Recorder.RigidbodyDetector _rightDetector
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__rightDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__rightDetector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightDetector"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.WaitForSeconds _waitOneSeconds
[[deprecated("Use field access instead!")]] ::UnityEngine::WaitForSeconds*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__waitOneSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__waitOneSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitOneSeconds"))->offset;
  return *reinterpret_cast<::UnityEngine::WaitForSeconds**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _delayedSnapRoutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__delayedSnapRoutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__delayedSnapRoutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delayedSnapRoutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent WhenTimeStep
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn_WhenTimeStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn_WhenTimeStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenTimeStep"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent WhenSnapshot
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn_WhenSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn_WhenSnapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenSnapshot"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent WhenError
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn_WhenError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn_WhenError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenError"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent`1<System.Boolean> WhenCanUndo
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent_1<bool>*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn_WhenCanUndo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn_WhenCanUndo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenCanUndo"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent`1<System.Boolean> WhenCanRedo
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent_1<bool>*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn_WhenCanRedo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn_WhenCanRedo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenCanRedo"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent WhenGrabAllowed
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn_WhenGrabAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn_WhenGrabAllowed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenGrabAllowed"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent WhenGrabDisallowed
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn_WhenGrabDisallowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn_WhenGrabDisallowed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenGrabDisallowed"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/RecorderStep> _recorderSteps
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep>*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__recorderSteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__recorderSteps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recorderSteps"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentStepIndex
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__currentStepIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__currentStepIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentStepIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _grabbingEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__grabbingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::dyn__grabbingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabbingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.get_CurrentStepIndex
int Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::get_CurrentStepIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::get_CurrentStepIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentStepIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.set_CurrentStepIndex
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::set_CurrentStepIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::set_CurrentStepIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentStepIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.get_Active
bool Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.Awake
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.Start
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.Record
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::Record");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Record", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.ClearSnapshot
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::ClearSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::ClearSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.DelayedSnapshot
::System::Collections::IEnumerator* Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::DelayedSnapshot(int seconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::DelayedSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seconds)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, seconds);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.TakeSnapshot
bool Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::TakeSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::TakeSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TakeSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.FindNearestItem
::UnityEngine::Rigidbody* Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::FindNearestItem(::UnityEngine::Rigidbody* handBody, ::Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector* detector, ByRef<float> bestDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::FindNearestItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNearestItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handBody), ::il2cpp_utils::ExtractType(detector), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method, handBody, detector, byref(bestDistance));
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.Undo
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::Undo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::Undo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Undo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.Redo
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::Redo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::Redo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Redo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.EnableGrabbing
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::EnableGrabbing(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::EnableGrabbing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableGrabbing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.Record
bool Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::Record(::Oculus::Interaction::Input::IHand* hand, ::UnityEngine::Rigidbody* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::Record");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Record", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hand, item);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.TrackedPose
::Oculus::Interaction::HandGrab::HandPose* Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::TrackedPose(::Oculus::Interaction::Input::IHand* hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::TrackedPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackedPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandPose*, false>(this, ___internal__method, hand);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.AddHandGrabPose
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::AddHandGrabPose(::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep recorderStep, ByRef<::Oculus::Interaction::HandGrab::HandGrabInteractable*> interactable, ByRef<::Oculus::Interaction::HandGrab::HandGrabPose*> handGrabPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::AddHandGrabPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddHandGrabPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recorderStep), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::HandGrab::HandGrabInteractable*&>(), ::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::HandGrab::HandGrabPose*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recorderStep, byref(interactable), byref(handGrabPose));
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder.AttachGhost
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::AttachGhost(::Oculus::Interaction::HandGrab::HandGrabPose* point, float referenceScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::AttachGhost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachGhost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(referenceScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point, referenceScale);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/RecorderStep
#include "Oculus/Interaction/HandGrab/Recorder/HandGrabPoseLiveRecorder.hpp"
// Including type: Oculus.Interaction.HandGrab.HandPose
#include "Oculus/Interaction/HandGrab/HandPose.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractable
#include "Oculus/Interaction/HandGrab/HandGrabInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandPose <RawHandPose>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandPose*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::dyn_$RawHandPose$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::dyn_$RawHandPose$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RawHandPose>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandPose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose <GrabPoint>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::dyn_$GrabPoint$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::dyn_$GrabPoint$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GrabPoint>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody <Item>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::dyn_$Item$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::dyn_$Item$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Item>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <HandScale>k__BackingField
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::dyn_$HandScale$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::dyn_$HandScale$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HandScale>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.HandGrab.HandGrabInteractable interactable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabInteractable*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::dyn_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::dyn_interactable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandGrabInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/RecorderStep.get_RawHandPose
::Oculus::Interaction::HandGrab::HandPose* Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::get_RawHandPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::get_RawHandPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_RawHandPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::HandGrab::HandPose*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/RecorderStep.set_RawHandPose
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::set_RawHandPose(::Oculus::Interaction::HandGrab::HandPose* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::set_RawHandPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_RawHandPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/RecorderStep.get_GrabPoint
::UnityEngine::Pose Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::get_GrabPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::get_GrabPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_GrabPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/RecorderStep.set_GrabPoint
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::set_GrabPoint(::UnityEngine::Pose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::set_GrabPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_GrabPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/RecorderStep.get_Item
::UnityEngine::Rigidbody* Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::get_Item() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/RecorderStep.set_Item
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::set_Item(::UnityEngine::Rigidbody* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/RecorderStep.get_HandScale
float Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::get_HandScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::get_HandScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HandScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/RecorderStep.set_HandScale
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::set_HandScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::set_HandScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_HandScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/RecorderStep..ctor
Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::RecorderStep(::Oculus::Interaction::HandGrab::HandPose* rawPose, ::UnityEngine::Pose grabPoint, float scale, ::UnityEngine::Rigidbody* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawPose), ::il2cpp_utils::ExtractType(grabPoint), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rawPose, grabPoint, scale, item);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/RecorderStep.ClearInteractable
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::ClearInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::RecorderStep::ClearInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ClearInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/<DelayedSnapshot>d__29
#include "Oculus/Interaction/HandGrab/Recorder/HandGrabPoseLiveRecorder_-DelayedSnapshot-d__29.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 seconds
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::dyn_seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::dyn_seconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder <>4__this
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder*& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__2
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::dyn_$i$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::dyn_$i$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/<DelayedSnapshot>d__29.System.IDisposable.Dispose
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/<DelayedSnapshot>d__29.MoveNext
bool Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/<DelayedSnapshot>d__29.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/<DelayedSnapshot>d__29.System.Collections.IEnumerator.Reset
void Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.HandGrabPoseLiveRecorder/<DelayedSnapshot>d__29.System.Collections.IEnumerator.get_Current
::Il2CppObject* Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::HandGrab::Recorder::HandGrabPoseLiveRecorder::$DelayedSnapshot$d__29*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.Recorder.RigidbodyDetector
#include "Oculus/Interaction/HandGrab/Recorder/RigidbodyDetector.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<UnityEngine.Rigidbody> _ignoredBodies
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::Rigidbody*>*& Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector::dyn__ignoredBodies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector::dyn__ignoredBodies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoredBodies"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::Rigidbody*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Rigidbody> <IntersectingBodies>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Rigidbody*>*& Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector::dyn_$IntersectingBodies$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector::dyn_$IntersectingBodies$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IntersectingBodies>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Rigidbody*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.RigidbodyDetector.get_IntersectingBodies
::System::Collections::Generic::List_1<::UnityEngine::Rigidbody*>* Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector::get_IntersectingBodies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector::get_IntersectingBodies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IntersectingBodies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Rigidbody*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.RigidbodyDetector.set_IntersectingBodies
void Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector::set_IntersectingBodies(::System::Collections::Generic::List_1<::UnityEngine::Rigidbody*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector::set_IntersectingBodies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IntersectingBodies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.RigidbodyDetector.IgnoreBody
void Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector::IgnoreBody(::UnityEngine::Rigidbody* body) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector::IgnoreBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IgnoreBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(body)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, body);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.RigidbodyDetector.UnIgnoreBody
void Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector::UnIgnoreBody(::UnityEngine::Rigidbody* body) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector::UnIgnoreBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnIgnoreBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(body)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, body);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.RigidbodyDetector.OnTriggerEnter
void Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector::OnTriggerEnter(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.RigidbodyDetector.OnTriggerExit
void Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector::OnTriggerExit(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::RigidbodyDetector::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.HandGrab.Recorder.TimerUIControl
#include "Oculus/Interaction/HandGrab/Recorder/TimerUIControl.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _timerLabel
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& Oculus::Interaction::HandGrab::Recorder::TimerUIControl::dyn__timerLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::TimerUIControl::dyn__timerLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timerLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _delaySeconds
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandGrab::Recorder::TimerUIControl::dyn__delaySeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::TimerUIControl::dyn__delaySeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delaySeconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxSeconds
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::HandGrab::Recorder::TimerUIControl::dyn__maxSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::TimerUIControl::dyn__maxSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxSeconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _moreButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& Oculus::Interaction::HandGrab::Recorder::TimerUIControl::dyn__moreButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::TimerUIControl::dyn__moreButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moreButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _lessButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& Oculus::Interaction::HandGrab::Recorder::TimerUIControl::dyn__lessButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::TimerUIControl::dyn__lessButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lessButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.TimerUIControl.get_DelaySeconds
int Oculus::Interaction::HandGrab::Recorder::TimerUIControl::get_DelaySeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::TimerUIControl::get_DelaySeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DelaySeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.TimerUIControl.set_DelaySeconds
void Oculus::Interaction::HandGrab::Recorder::TimerUIControl::set_DelaySeconds(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::TimerUIControl::set_DelaySeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DelaySeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.TimerUIControl.OnEnable
void Oculus::Interaction::HandGrab::Recorder::TimerUIControl::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::TimerUIControl::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.TimerUIControl.OnDisable
void Oculus::Interaction::HandGrab::Recorder::TimerUIControl::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::TimerUIControl::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.TimerUIControl.Start
void Oculus::Interaction::HandGrab::Recorder::TimerUIControl::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::TimerUIControl::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.TimerUIControl.IncreaseTime
void Oculus::Interaction::HandGrab::Recorder::TimerUIControl::IncreaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::TimerUIControl::IncreaseTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncreaseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.TimerUIControl.DecreaseTime
void Oculus::Interaction::HandGrab::Recorder::TimerUIControl::DecreaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::TimerUIControl::DecreaseTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecreaseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.HandGrab.Recorder.TimerUIControl.UpdateDisplay
void Oculus::Interaction::HandGrab::Recorder::TimerUIControl::UpdateDisplay(int seconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::HandGrab::Recorder::TimerUIControl::UpdateDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, seconds);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.CarouselView
#include "Oculus/Interaction/Samples/CarouselView.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _viewport
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Oculus::Interaction::Samples::CarouselView::dyn__viewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CarouselView::dyn__viewport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewport"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _content
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Oculus::Interaction::Samples::CarouselView::dyn__content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CarouselView::dyn__content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_content"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _easeCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::Samples::CarouselView::dyn__easeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CarouselView::dyn__easeCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_easeCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _emptyCarouselVisuals
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::Samples::CarouselView::dyn__emptyCarouselVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CarouselView::dyn__emptyCarouselVisuals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emptyCarouselVisuals"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentChildIndex
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Samples::CarouselView::dyn__currentChildIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CarouselView::dyn__currentChildIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentChildIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _scrollVal
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::CarouselView::dyn__scrollVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CarouselView::dyn__scrollVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollVal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.CarouselView.get_CurrentChildIndex
int Oculus::Interaction::Samples::CarouselView::get_CurrentChildIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CarouselView::get_CurrentChildIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentChildIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.CarouselView.get_ContentArea
::UnityEngine::RectTransform* Oculus::Interaction::Samples::CarouselView::get_ContentArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CarouselView::get_ContentArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.CarouselView.Start
void Oculus::Interaction::Samples::CarouselView::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CarouselView::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::CarouselView*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.CarouselView.ScrollRight
void Oculus::Interaction::Samples::CarouselView::ScrollRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CarouselView::ScrollRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.CarouselView.ScrollLeft
void Oculus::Interaction::Samples::CarouselView::ScrollLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CarouselView::ScrollLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.CarouselView.GetCurrentChild
::UnityEngine::RectTransform* Oculus::Interaction::Samples::CarouselView::GetCurrentChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CarouselView::GetCurrentChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.CarouselView.ScrollToChild
void Oculus::Interaction::Samples::CarouselView::ScrollToChild(::UnityEngine::RectTransform* child, float amount01) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CarouselView::ScrollToChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollToChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child), ::il2cpp_utils::ExtractType(amount01)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, child, amount01);
}
// Autogenerated method: Oculus.Interaction.Samples.CarouselView.Update
void Oculus::Interaction::Samples::CarouselView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CarouselView::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::CarouselView*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.ColorChanger
#include "Oculus/Interaction/Samples/ColorChanger.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _target
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::Samples::ColorChanger::dyn__target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ColorChanger::dyn__target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_target"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _targetMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Oculus::Interaction::Samples::ColorChanger::dyn__targetMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ColorChanger::dyn__targetMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _savedColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::Samples::ColorChanger::dyn__savedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ColorChanger::dyn__savedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_savedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastHue
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::ColorChanger::dyn__lastHue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ColorChanger::dyn__lastHue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastHue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.ColorChanger.NextColor
void Oculus::Interaction::Samples::ColorChanger::NextColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ColorChanger::NextColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.ColorChanger.Save
void Oculus::Interaction::Samples::ColorChanger::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ColorChanger::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.ColorChanger.Revert
void Oculus::Interaction::Samples::ColorChanger::Revert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ColorChanger::Revert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Revert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.ColorChanger.Start
void Oculus::Interaction::Samples::ColorChanger::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ColorChanger::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::ColorChanger*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.ColorChanger.OnDestroy
void Oculus::Interaction::Samples::ColorChanger::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ColorChanger::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.CountdownTimer
#include "Oculus/Interaction/Samples/CountdownTimer.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: UnityEngine.Events.UnityEvent`1
#include "UnityEngine/Events/UnityEvent_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _countdownTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::CountdownTimer::dyn__countdownTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CountdownTimer::dyn__countdownTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_countdownTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _countdownOn
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Samples::CountdownTimer::dyn__countdownOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CountdownTimer::dyn__countdownOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_countdownOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _callback
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Samples::CountdownTimer::dyn__callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CountdownTimer::dyn__callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callback"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent`1<System.Single> _progressCallback
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent_1<float>*& Oculus::Interaction::Samples::CountdownTimer::dyn__progressCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CountdownTimer::dyn__progressCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressCallback"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _countdownTimer
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::CountdownTimer::dyn__countdownTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CountdownTimer::dyn__countdownTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_countdownTimer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.CountdownTimer.get_CountdownOn
bool Oculus::Interaction::Samples::CountdownTimer::get_CountdownOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CountdownTimer::get_CountdownOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CountdownOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.CountdownTimer.set_CountdownOn
void Oculus::Interaction::Samples::CountdownTimer::set_CountdownOn(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CountdownTimer::set_CountdownOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CountdownOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Samples.CountdownTimer.Awake
void Oculus::Interaction::Samples::CountdownTimer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CountdownTimer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.CountdownTimer.Update
void Oculus::Interaction::Samples::CountdownTimer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::CountdownTimer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.EnableTargetOnStart
#include "Oculus/Interaction/Samples/EnableTargetOnStart.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MonoBehaviour[] _components
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::MonoBehaviour*>& Oculus::Interaction::Samples::EnableTargetOnStart::dyn__components() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::EnableTargetOnStart::dyn__components");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_components"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MonoBehaviour*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] _gameObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& Oculus::Interaction::Samples::EnableTargetOnStart::dyn__gameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::EnableTargetOnStart::dyn__gameObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.EnableTargetOnStart.Start
void Oculus::Interaction::Samples::EnableTargetOnStart::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::EnableTargetOnStart::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.FadeTextAfterActive
#include "Oculus/Interaction/Samples/FadeTextAfterActive.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeOutTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::FadeTextAfterActive::dyn__fadeOutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::FadeTextAfterActive::dyn__fadeOutTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& Oculus::Interaction::Samples::FadeTextAfterActive::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::FadeTextAfterActive::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeLeft
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::FadeTextAfterActive::dyn__timeLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::FadeTextAfterActive::dyn__timeLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeLeft"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.FadeTextAfterActive.OnEnable
void Oculus::Interaction::Samples::FadeTextAfterActive::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::FadeTextAfterActive::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::FadeTextAfterActive*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.FadeTextAfterActive.Update
void Oculus::Interaction::Samples::FadeTextAfterActive::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::FadeTextAfterActive::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::FadeTextAfterActive*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.HideHandVisualOnGrab
#include "Oculus/Interaction/Samples/HideHandVisualOnGrab.hpp"
// Including type: Oculus.Interaction.HandGrab.HandGrabInteractor
#include "Oculus/Interaction/HandGrab/HandGrabInteractor.hpp"
// Including type: Oculus.Interaction.IHandVisual
#include "Oculus/Interaction/IHandVisual.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.HandGrab.HandGrabInteractor _handGrabInteractor
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::HandGrab::HandGrabInteractor*& Oculus::Interaction::Samples::HideHandVisualOnGrab::dyn__handGrabInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::HideHandVisualOnGrab::dyn__handGrabInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handGrabInteractor"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::HandGrab::HandGrabInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _handVisual
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Samples::HideHandVisualOnGrab::dyn__handVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::HideHandVisualOnGrab::dyn__handVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handVisual"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IHandVisual HandVisual
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IHandVisual*& Oculus::Interaction::Samples::HideHandVisualOnGrab::dyn_HandVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::HideHandVisualOnGrab::dyn_HandVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandVisual"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IHandVisual**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.HideHandVisualOnGrab.Awake
void Oculus::Interaction::Samples::HideHandVisualOnGrab::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::HideHandVisualOnGrab::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::HideHandVisualOnGrab*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.HideHandVisualOnGrab.Start
void Oculus::Interaction::Samples::HideHandVisualOnGrab::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::HideHandVisualOnGrab::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::HideHandVisualOnGrab*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.HideHandVisualOnGrab.Update
void Oculus::Interaction::Samples::HideHandVisualOnGrab::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::HideHandVisualOnGrab::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::HideHandVisualOnGrab*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.HideHandVisualOnGrab.InjectAll
void Oculus::Interaction::Samples::HideHandVisualOnGrab::InjectAll(::Oculus::Interaction::HandGrab::HandGrabInteractor* handGrabInteractor, ::Oculus::Interaction::IHandVisual* handVisual) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::HideHandVisualOnGrab::InjectAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor), ::il2cpp_utils::ExtractType(handVisual)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handGrabInteractor, handVisual);
}
// Autogenerated method: Oculus.Interaction.Samples.HideHandVisualOnGrab.InjectHandGrabInteractor
void Oculus::Interaction::Samples::HideHandVisualOnGrab::InjectHandGrabInteractor(::Oculus::Interaction::HandGrab::HandGrabInteractor* handGrabInteractor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::HideHandVisualOnGrab::InjectHandGrabInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandGrabInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handGrabInteractor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handGrabInteractor);
}
// Autogenerated method: Oculus.Interaction.Samples.HideHandVisualOnGrab.InjectHandVisual
void Oculus::Interaction::Samples::HideHandVisualOnGrab::InjectHandVisual(::Oculus::Interaction::IHandVisual* handVisual) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::HideHandVisualOnGrab::InjectHandVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectHandVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handVisual)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handVisual);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.LocomotionTutorialAnimationUnityEventWrapper
#include "Oculus/Interaction/Samples/LocomotionTutorialAnimationUnityEventWrapper.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent WhenEnableTeleportRay
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::dyn_WhenEnableTeleportRay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::dyn_WhenEnableTeleportRay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenEnableTeleportRay"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent WhenDisableTeleportRay
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::dyn_WhenDisableTeleportRay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::dyn_WhenDisableTeleportRay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenDisableTeleportRay"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent WhenEnableTurningRing
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::dyn_WhenEnableTurningRing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::dyn_WhenEnableTurningRing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenEnableTurningRing"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent WhenDisableTurningRing
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::dyn_WhenDisableTurningRing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::dyn_WhenDisableTurningRing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenDisableTurningRing"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialAnimationUnityEventWrapper.EnableTeleportRay
void Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::EnableTeleportRay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::EnableTeleportRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableTeleportRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialAnimationUnityEventWrapper.DisableTeleportRay
void Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::DisableTeleportRay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::DisableTeleportRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableTeleportRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialAnimationUnityEventWrapper.EnableTurningRing
void Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::EnableTurningRing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::EnableTurningRing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableTurningRing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialAnimationUnityEventWrapper.DisableTurningRing
void Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::DisableTurningRing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialAnimationUnityEventWrapper::DisableTurningRing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableTurningRing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.LocomotionTutorialProgressTracker
#include "Oculus/Interaction/Samples/LocomotionTutorialProgressTracker.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Interaction.Locomotion.ILocomotionEventHandler
#include "Oculus/Interaction/Locomotion/ILocomotionEventHandler.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image[] _dots
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::Image*>& Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__dots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__dots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dots"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::Image*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _pendingSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__pendingSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__pendingSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _currentSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__currentSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__currentSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _completedSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__completedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__completedSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_completedSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.Locomotion.LocomotionEvent/TranslationType> _consumeTranslationEvents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType>*& Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__consumeTranslationEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__consumeTranslationEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_consumeTranslationEvents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Interaction.Locomotion.LocomotionEvent/RotationType> _consumeRotationEvents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType>*& Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__consumeRotationEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__consumeRotationEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_consumeRotationEvents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _locomotionHandler
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__locomotionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__locomotionHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locomotionHandler"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Locomotion.ILocomotionEventHandler LocomotionHandler
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Locomotion::ILocomotionEventHandler*& Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn_LocomotionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn_LocomotionHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocomotionHandler"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Locomotion::ILocomotionEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent WhenCompleted
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn_WhenCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn_WhenCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenCompleted"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentProgress
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__currentProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__currentProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentProgress"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _totalProgress
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__totalProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::dyn__totalProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_totalProgress"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialProgressTracker.Awake
void Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialProgressTracker.Start
void Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialProgressTracker.OnEnable
void Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialProgressTracker.OnDisable
void Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialProgressTracker.LocomotionEventHandled
void Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::LocomotionEventHandled(::Oculus::Interaction::Locomotion::LocomotionEvent arg1, ::UnityEngine::Pose arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::LocomotionEventHandled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocomotionEventHandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg1, arg2);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialProgressTracker.Progress
void Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::Progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::Progress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialProgressTracker.ResetProgress
void Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::ResetProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::ResetProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialProgressTracker.InjectAllLocomotionTutorialProgressTracker
void Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::InjectAllLocomotionTutorialProgressTracker(::ArrayW<::UnityEngine::UI::Image*> dots, ::UnityEngine::Sprite* pendingSprite, ::UnityEngine::Sprite* currentSprite, ::UnityEngine::Sprite* completedSprite, ::System::Collections::Generic::List_1<::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType>* consumeTranslationEvents, ::System::Collections::Generic::List_1<::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType>* consumeRotationEvents, ::Oculus::Interaction::Locomotion::ILocomotionEventHandler* locomotionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::InjectAllLocomotionTutorialProgressTracker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectAllLocomotionTutorialProgressTracker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dots), ::il2cpp_utils::ExtractType(pendingSprite), ::il2cpp_utils::ExtractType(currentSprite), ::il2cpp_utils::ExtractType(completedSprite), ::il2cpp_utils::ExtractType(consumeTranslationEvents), ::il2cpp_utils::ExtractType(consumeRotationEvents), ::il2cpp_utils::ExtractType(locomotionHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dots, pendingSprite, currentSprite, completedSprite, consumeTranslationEvents, consumeRotationEvents, locomotionHandler);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialProgressTracker.InjectDots
void Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::InjectDots(::ArrayW<::UnityEngine::UI::Image*> dots) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::InjectDots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectDots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dots)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dots);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialProgressTracker.InjectPendingSprite
void Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::InjectPendingSprite(::UnityEngine::Sprite* pendingSprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::InjectPendingSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectPendingSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pendingSprite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pendingSprite);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialProgressTracker.InjectCurrentSprite
void Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::InjectCurrentSprite(::UnityEngine::Sprite* currentSprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::InjectCurrentSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectCurrentSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentSprite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentSprite);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialProgressTracker.InjectCompletedSprite
void Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::InjectCompletedSprite(::UnityEngine::Sprite* completedSprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::InjectCompletedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectCompletedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completedSprite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, completedSprite);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialProgressTracker.InjectConsumeTranslationEvents
void Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::InjectConsumeTranslationEvents(::System::Collections::Generic::List_1<::Oculus::Interaction::Locomotion::LocomotionEvent::TranslationType>* consumeTranslationEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::InjectConsumeTranslationEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectConsumeTranslationEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(consumeTranslationEvents)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, consumeTranslationEvents);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialProgressTracker.InjectConsumeRotationEvents
void Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::InjectConsumeRotationEvents(::System::Collections::Generic::List_1<::Oculus::Interaction::Locomotion::LocomotionEvent::RotationType>* consumeRotationEvents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::InjectConsumeRotationEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectConsumeRotationEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(consumeRotationEvents)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, consumeRotationEvents);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialProgressTracker.InjectLocomotionHandler
void Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::InjectLocomotionHandler(::Oculus::Interaction::Locomotion::ILocomotionEventHandler* locomotionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialProgressTracker::InjectLocomotionHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectLocomotionHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locomotionHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, locomotionHandler);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual
#include "Oculus/Interaction/Samples/LocomotionTutorialTurnVisual.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: Oculus.Interaction.TubeRenderer
#include "Oculus/Interaction/TubeRenderer.hpp"
// Including type: Oculus.Interaction.MaterialPropertyBlockEditor
#include "Oculus/Interaction/MaterialPropertyBlockEditor.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single _degreesPerSegment
float Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::_get__degreesPerSegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::_get__degreesPerSegment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Interaction.Samples", "LocomotionTutorialTurnVisual", "_degreesPerSegment"));
}
// Autogenerated static field setter
// Set static field: static private System.Single _degreesPerSegment
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::_set__degreesPerSegment(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::_set__degreesPerSegment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Samples", "LocomotionTutorialTurnVisual", "_degreesPerSegment", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Quaternion _rotationCorrectionLeft
::UnityEngine::Quaternion Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::_get__rotationCorrectionLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::_get__rotationCorrectionLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Quaternion>("Oculus.Interaction.Samples", "LocomotionTutorialTurnVisual", "_rotationCorrectionLeft"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Quaternion _rotationCorrectionLeft
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::_set__rotationCorrectionLeft(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::_set__rotationCorrectionLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Samples", "LocomotionTutorialTurnVisual", "_rotationCorrectionLeft", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorShaderPropertyID
int Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::_get__colorShaderPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::_get__colorShaderPropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Interaction.Samples", "LocomotionTutorialTurnVisual", "_colorShaderPropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorShaderPropertyID
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::_set__colorShaderPropertyID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::_set__colorShaderPropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Samples", "LocomotionTutorialTurnVisual", "_colorShaderPropertyID", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _value
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _progress
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _leftArrow
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__leftArrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__leftArrow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftArrow"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _rightArrow
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__rightArrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__rightArrow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightArrow"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TubeRenderer _leftTrail
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::TubeRenderer*& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__leftTrail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__leftTrail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftTrail"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::TubeRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TubeRenderer _rightTrail
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::TubeRenderer*& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__rightTrail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__rightTrail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightTrail"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::TubeRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MaterialPropertyBlockEditor _leftMaterialBlock
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MaterialPropertyBlockEditor*& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__leftMaterialBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__leftMaterialBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftMaterialBlock"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MaterialPropertyBlockEditor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.MaterialPropertyBlockEditor _rightMaterialBlock
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::MaterialPropertyBlockEditor*& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__rightMaterialBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__rightMaterialBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightMaterialBlock"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::MaterialPropertyBlockEditor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _verticalOffset
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__verticalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__verticalOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_verticalOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radius
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _margin
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__margin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__margin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_margin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _trailLength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__trailLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__trailLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trailLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxAngle
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__maxAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__maxAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _railGap
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__railGap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__railGap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_railGap"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _squeezeLength
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__squeezeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__squeezeLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_squeezeLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _disabledColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__disabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__disabledColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _enabledColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__enabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__enabledColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enabledColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _highligtedColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__highligtedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__highligtedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highligtedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.get_VerticalOffset
float Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::get_VerticalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::get_VerticalOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VerticalOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.set_VerticalOffset
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::set_VerticalOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::set_VerticalOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VerticalOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.get_DisabledColor
::UnityEngine::Color Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::get_DisabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::get_DisabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.set_DisabledColor
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::set_DisabledColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::set_DisabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.get_EnabledColor
::UnityEngine::Color Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::get_EnabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::get_EnabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.set_EnabledColor
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::set_EnabledColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::set_EnabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.get_HighligtedColor
::UnityEngine::Color Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::get_HighligtedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::get_HighligtedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HighligtedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.set_HighligtedColor
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::set_HighligtedColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::set_HighligtedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HighligtedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.Start
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.OnEnable
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.OnDisable
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.Update
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.InitializeVisuals
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::InitializeVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::InitializeVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.UpdateArrows
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::UpdateArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::UpdateArrows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateArrows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.UpdateArrowPosition
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::UpdateArrowPosition(float angle, ::UnityEngine::Transform* arrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::UpdateArrowPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateArrowPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(arrow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, angle, arrow);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.RotateTrail
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::RotateTrail(float angle, ::Oculus::Interaction::TubeRenderer* trail) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::RotateTrail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateTrail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(trail)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, angle, trail);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.UpdateTrail
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::UpdateTrail(float angle, ::Oculus::Interaction::TubeRenderer* trail) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::UpdateTrail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTrail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(trail)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, angle, trail);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.UpdateColors
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::UpdateColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::UpdateColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual.InitializeSegment
::ArrayW<::Oculus::Interaction::TubePoint> Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::InitializeSegment(::UnityEngine::Vector2 minMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::InitializeSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minMax)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Oculus::Interaction::TubePoint>, false>(this, ___internal__method, minMax);
}
// Autogenerated method: Oculus.Interaction.Samples.LocomotionTutorialTurnVisual..cctor
void Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LocomotionTutorialTurnVisual::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Samples", "LocomotionTutorialTurnVisual", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.LookAtTarget
#include "Oculus/Interaction/Samples/LookAtTarget.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _toRotate
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Samples::LookAtTarget::dyn__toRotate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LookAtTarget::dyn__toRotate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toRotate"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Samples::LookAtTarget::dyn__target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LookAtTarget::dyn__target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.LookAtTarget.Start
void Oculus::Interaction::Samples::LookAtTarget::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LookAtTarget::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::LookAtTarget*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.LookAtTarget.Update
void Oculus::Interaction::Samples::LookAtTarget::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::LookAtTarget::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::LookAtTarget*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.PoseUseSample
#include "Oculus/Interaction/Samples/PoseUseSample.hpp"
// Including type: Oculus.Interaction.Samples.PoseUseSample/<>c__DisplayClass10_0
#include "Oculus/Interaction/Samples/PoseUseSample_--c__DisplayClass10_0.hpp"
// Including type: Oculus.Interaction.Input.IHmd
#include "Oculus/Interaction/Input/IHmd.hpp"
// Including type: Oculus.Interaction.ActiveStateSelector
#include "Oculus/Interaction/ActiveStateSelector.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _hmd
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Samples::PoseUseSample::dyn__hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::dyn__hmd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hmd"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHmd <Hmd>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHmd*& Oculus::Interaction::Samples::PoseUseSample::dyn_$Hmd$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::dyn_$Hmd$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Hmd>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHmd**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ActiveStateSelector[] _poses
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::ActiveStateSelector*>& Oculus::Interaction::Samples::PoseUseSample::dyn__poses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::dyn__poses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_poses"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Interaction::ActiveStateSelector*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material[] _onSelectIcons
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& Oculus::Interaction::Samples::PoseUseSample::dyn__onSelectIcons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::dyn__onSelectIcons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onSelectIcons"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _poseActiveVisualPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::Samples::PoseUseSample::dyn__poseActiveVisualPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::dyn__poseActiveVisualPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_poseActiveVisualPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _poseActiveVisuals
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& Oculus::Interaction::Samples::PoseUseSample::dyn__poseActiveVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::dyn__poseActiveVisuals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_poseActiveVisuals"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.PoseUseSample.get_Hmd
::Oculus::Interaction::Input::IHmd* Oculus::Interaction::Samples::PoseUseSample::get_Hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::get_Hmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHmd*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PoseUseSample.set_Hmd
void Oculus::Interaction::Samples::PoseUseSample::set_Hmd(::Oculus::Interaction::Input::IHmd* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::set_Hmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Samples.PoseUseSample.Awake
void Oculus::Interaction::Samples::PoseUseSample::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::PoseUseSample*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PoseUseSample.Start
void Oculus::Interaction::Samples::PoseUseSample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::PoseUseSample*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PoseUseSample.ShowVisuals
void Oculus::Interaction::Samples::PoseUseSample::ShowVisuals(int poseNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::ShowVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poseNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poseNumber);
}
// Autogenerated method: Oculus.Interaction.Samples.PoseUseSample.HideVisuals
void Oculus::Interaction::Samples::PoseUseSample::HideVisuals(int poseNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::HideVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poseNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poseNumber);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.PoseUseSample/<>c__DisplayClass10_0
#include "Oculus/Interaction/Samples/PoseUseSample_--c__DisplayClass10_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 poseNumber
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0::dyn_poseNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0::dyn_poseNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poseNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Samples.PoseUseSample <>4__this
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Samples::PoseUseSample*& Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Samples::PoseUseSample**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.PoseUseSample/<>c__DisplayClass10_0.<Start>b__0
void Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0::$Start$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0::<Start>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PoseUseSample/<>c__DisplayClass10_0.<Start>b__1
void Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0::$Start$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PoseUseSample::$$c__DisplayClass10_0::<Start>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.RespawnOnDrop
#include "Oculus/Interaction/Samples/RespawnOnDrop.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: Oculus.Interaction.TwoGrabFreeTransformer
#include "Oculus/Interaction/TwoGrabFreeTransformer.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _yThresholdForRespawn
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::RespawnOnDrop::dyn__yThresholdForRespawn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RespawnOnDrop::dyn__yThresholdForRespawn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yThresholdForRespawn"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenRespawned
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Samples::RespawnOnDrop::dyn__whenRespawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RespawnOnDrop::dyn__whenRespawned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenRespawned"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _initialPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Samples::RespawnOnDrop::dyn__initialPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RespawnOnDrop::dyn__initialPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _initialRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Oculus::Interaction::Samples::RespawnOnDrop::dyn__initialRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RespawnOnDrop::dyn__initialRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _initialScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Samples::RespawnOnDrop::dyn__initialScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RespawnOnDrop::dyn__initialScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.TwoGrabFreeTransformer[] _freeTransformers
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Interaction::TwoGrabFreeTransformer*>& Oculus::Interaction::Samples::RespawnOnDrop::dyn__freeTransformers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RespawnOnDrop::dyn__freeTransformers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_freeTransformers"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Interaction::TwoGrabFreeTransformer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidBody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Oculus::Interaction::Samples::RespawnOnDrop::dyn__rigidBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RespawnOnDrop::dyn__rigidBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidBody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.RespawnOnDrop.get_WhenRespawned
::UnityEngine::Events::UnityEvent* Oculus::Interaction::Samples::RespawnOnDrop::get_WhenRespawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RespawnOnDrop::get_WhenRespawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenRespawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.RespawnOnDrop.OnEnable
void Oculus::Interaction::Samples::RespawnOnDrop::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RespawnOnDrop::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::RespawnOnDrop*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.RespawnOnDrop.Update
void Oculus::Interaction::Samples::RespawnOnDrop::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RespawnOnDrop::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::RespawnOnDrop*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.RotationAudioEvents
#include "Oculus/Interaction/Samples/RotationAudioEvents.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: Oculus.Interaction.IInteractableView
#include "Oculus/Interaction/IInteractableView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _interactableView
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Samples::RotationAudioEvents::dyn__interactableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::dyn__interactableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactableView"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _trackedTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Samples::RotationAudioEvents::dyn__trackedTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::dyn__trackedTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackedTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _relativeTo
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Samples::RotationAudioEvents::dyn__relativeTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::dyn__relativeTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeTo"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _thresholdDeg
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::RotationAudioEvents::dyn__thresholdDeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::dyn__thresholdDeg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thresholdDeg"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxRangeDeg
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::RotationAudioEvents::dyn__maxRangeDeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::dyn__maxRangeDeg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxRangeDeg"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenRotationStarted
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Samples::RotationAudioEvents::dyn__whenRotationStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::dyn__whenRotationStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenRotationStarted"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenRotationEnded
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Samples::RotationAudioEvents::dyn__whenRotationEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::dyn__whenRotationEnded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenRotationEnded"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenRotatedOpen
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Samples::RotationAudioEvents::dyn__whenRotatedOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::dyn__whenRotatedOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenRotatedOpen"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenRotatedClosed
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Samples::RotationAudioEvents::dyn__whenRotatedClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::dyn__whenRotatedClosed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenRotatedClosed"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractableView InteractableView
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractableView*& Oculus::Interaction::Samples::RotationAudioEvents::dyn_InteractableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::dyn_InteractableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractableView"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _baseDelta
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::RotationAudioEvents::dyn__baseDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::dyn__baseDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseDelta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isRotating
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Samples::RotationAudioEvents::dyn__isRotating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::dyn__isRotating");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRotating"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Samples.RotationAudioEvents/Direction _lastCrossedDirection
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Samples::RotationAudioEvents::Direction& Oculus::Interaction::Samples::RotationAudioEvents::dyn__lastCrossedDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::dyn__lastCrossedDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastCrossedDirection"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Samples::RotationAudioEvents::Direction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Samples::RotationAudioEvents::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.RotationAudioEvents.get_WhenRotationStarted
::UnityEngine::Events::UnityEvent* Oculus::Interaction::Samples::RotationAudioEvents::get_WhenRotationStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::get_WhenRotationStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenRotationStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.RotationAudioEvents.get_WhenRotationEnded
::UnityEngine::Events::UnityEvent* Oculus::Interaction::Samples::RotationAudioEvents::get_WhenRotationEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::get_WhenRotationEnded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenRotationEnded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.RotationAudioEvents.get_WhenRotatedOpen
::UnityEngine::Events::UnityEvent* Oculus::Interaction::Samples::RotationAudioEvents::get_WhenRotatedOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::get_WhenRotatedOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenRotatedOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.RotationAudioEvents.get_WhenRotatedClosed
::UnityEngine::Events::UnityEvent* Oculus::Interaction::Samples::RotationAudioEvents::get_WhenRotatedClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::get_WhenRotatedClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenRotatedClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.RotationAudioEvents.get_TrackedTransform
::UnityEngine::Transform* Oculus::Interaction::Samples::RotationAudioEvents::get_TrackedTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::get_TrackedTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrackedTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.RotationAudioEvents.RotationStarted
void Oculus::Interaction::Samples::RotationAudioEvents::RotationStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::RotationStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotationStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.RotationAudioEvents.RotationEnded
void Oculus::Interaction::Samples::RotationAudioEvents::RotationEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::RotationEnded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotationEnded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.RotationAudioEvents.GetCurrentRotation
::UnityEngine::Quaternion Oculus::Interaction::Samples::RotationAudioEvents::GetCurrentRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::GetCurrentRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.RotationAudioEvents.GetTotalDelta
float Oculus::Interaction::Samples::RotationAudioEvents::GetTotalDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::GetTotalDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTotalDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.RotationAudioEvents.UpdateRotation
void Oculus::Interaction::Samples::RotationAudioEvents::UpdateRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::UpdateRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.RotationAudioEvents.Awake
void Oculus::Interaction::Samples::RotationAudioEvents::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::RotationAudioEvents*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.RotationAudioEvents.Start
void Oculus::Interaction::Samples::RotationAudioEvents::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::RotationAudioEvents*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.RotationAudioEvents.Update
void Oculus::Interaction::Samples::RotationAudioEvents::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::RotationAudioEvents*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.RotationAudioEvents/Direction
#include "Oculus/Interaction/Samples/RotationAudioEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Samples.RotationAudioEvents/Direction None
::Oculus::Interaction::Samples::RotationAudioEvents::Direction Oculus::Interaction::Samples::RotationAudioEvents::Direction::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::Direction::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Samples::RotationAudioEvents::Direction>("Oculus.Interaction.Samples", "RotationAudioEvents/Direction", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Samples.RotationAudioEvents/Direction None
void Oculus::Interaction::Samples::RotationAudioEvents::Direction::_set_None(::Oculus::Interaction::Samples::RotationAudioEvents::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::Direction::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Samples", "RotationAudioEvents/Direction", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Samples.RotationAudioEvents/Direction Opening
::Oculus::Interaction::Samples::RotationAudioEvents::Direction Oculus::Interaction::Samples::RotationAudioEvents::Direction::_get_Opening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::Direction::_get_Opening");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Samples::RotationAudioEvents::Direction>("Oculus.Interaction.Samples", "RotationAudioEvents/Direction", "Opening"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Samples.RotationAudioEvents/Direction Opening
void Oculus::Interaction::Samples::RotationAudioEvents::Direction::_set_Opening(::Oculus::Interaction::Samples::RotationAudioEvents::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::Direction::_set_Opening");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Samples", "RotationAudioEvents/Direction", "Opening", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Samples.RotationAudioEvents/Direction Closing
::Oculus::Interaction::Samples::RotationAudioEvents::Direction Oculus::Interaction::Samples::RotationAudioEvents::Direction::_get_Closing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::Direction::_get_Closing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Samples::RotationAudioEvents::Direction>("Oculus.Interaction.Samples", "RotationAudioEvents/Direction", "Closing"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Samples.RotationAudioEvents/Direction Closing
void Oculus::Interaction::Samples::RotationAudioEvents::Direction::_set_Closing(::Oculus::Interaction::Samples::RotationAudioEvents::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::Direction::_set_Closing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Samples", "RotationAudioEvents/Direction", "Closing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Samples::RotationAudioEvents::Direction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::RotationAudioEvents::Direction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.SamplesInfoPanel
#include "Oculus/Interaction/Samples/SamplesInfoPanel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Samples.SamplesInfoPanel.HandleUrlButton
void Oculus::Interaction::Samples::SamplesInfoPanel::HandleUrlButton(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SamplesInfoPanel::HandleUrlButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUrlButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, url);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.ScaleAudioEvents
#include "Oculus/Interaction/Samples/ScaleAudioEvents.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: Oculus.Interaction.IInteractableView
#include "Oculus/Interaction/IInteractableView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _interactableView
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Samples::ScaleAudioEvents::dyn__interactableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::dyn__interactableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactableView"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _trackedTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Samples::ScaleAudioEvents::dyn__trackedTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::dyn__trackedTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackedTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _stepSize
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::ScaleAudioEvents::dyn__stepSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::dyn__stepSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stepSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxEventFreq
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Samples::ScaleAudioEvents::dyn__maxEventFreq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::dyn__maxEventFreq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxEventFreq"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenScalingStarted
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Samples::ScaleAudioEvents::dyn__whenScalingStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::dyn__whenScalingStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenScalingStarted"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenScalingEnded
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Samples::ScaleAudioEvents::dyn__whenScalingEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::dyn__whenScalingEnded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenScalingEnded"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenScaledUp
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Samples::ScaleAudioEvents::dyn__whenScaledUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::dyn__whenScaledUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenScaledUp"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _whenScaledDown
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Samples::ScaleAudioEvents::dyn__whenScaledDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::dyn__whenScaledDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whenScaledDown"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.IInteractableView InteractableView
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::IInteractableView*& Oculus::Interaction::Samples::ScaleAudioEvents::dyn_InteractableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::dyn_InteractableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractableView"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::IInteractableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isScaling
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Samples::ScaleAudioEvents::dyn__isScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::dyn__isScaling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isScaling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _lastStep
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Samples::ScaleAudioEvents::dyn__lastStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::dyn__lastStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastStep"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastEventTime
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::ScaleAudioEvents::dyn__lastEventTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::dyn__lastEventTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastEventTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Samples.ScaleAudioEvents/Direction _direction
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Samples::ScaleAudioEvents::Direction& Oculus::Interaction::Samples::ScaleAudioEvents::dyn__direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::dyn__direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_direction"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Samples::ScaleAudioEvents::Direction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Samples::ScaleAudioEvents::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.ScaleAudioEvents.get_WhenScalingStarted
::UnityEngine::Events::UnityEvent* Oculus::Interaction::Samples::ScaleAudioEvents::get_WhenScalingStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::get_WhenScalingStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenScalingStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.ScaleAudioEvents.get_WhenScalingEnded
::UnityEngine::Events::UnityEvent* Oculus::Interaction::Samples::ScaleAudioEvents::get_WhenScalingEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::get_WhenScalingEnded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenScalingEnded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.ScaleAudioEvents.get_WhenScaledUp
::UnityEngine::Events::UnityEvent* Oculus::Interaction::Samples::ScaleAudioEvents::get_WhenScaledUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::get_WhenScaledUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenScaledUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.ScaleAudioEvents.get_WhenScaledDown
::UnityEngine::Events::UnityEvent* Oculus::Interaction::Samples::ScaleAudioEvents::get_WhenScaledDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::get_WhenScaledDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WhenScaledDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.ScaleAudioEvents.get_TrackedTransform
::UnityEngine::Transform* Oculus::Interaction::Samples::ScaleAudioEvents::get_TrackedTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::get_TrackedTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrackedTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.ScaleAudioEvents.ScalingStarted
void Oculus::Interaction::Samples::ScaleAudioEvents::ScalingStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::ScalingStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScalingStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.ScaleAudioEvents.ScalingEnded
void Oculus::Interaction::Samples::ScaleAudioEvents::ScalingEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::ScalingEnded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScalingEnded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.ScaleAudioEvents.GetTotalDelta
float Oculus::Interaction::Samples::ScaleAudioEvents::GetTotalDelta(ByRef<::Oculus::Interaction::Samples::ScaleAudioEvents::Direction> direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::GetTotalDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTotalDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Oculus::Interaction::Samples::ScaleAudioEvents::Direction&>()})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, byref(direction));
}
// Autogenerated method: Oculus.Interaction.Samples.ScaleAudioEvents.UpdateScaling
void Oculus::Interaction::Samples::ScaleAudioEvents::UpdateScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::UpdateScaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.ScaleAudioEvents.Awake
void Oculus::Interaction::Samples::ScaleAudioEvents::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::ScaleAudioEvents*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.ScaleAudioEvents.Start
void Oculus::Interaction::Samples::ScaleAudioEvents::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::ScaleAudioEvents*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.ScaleAudioEvents.Update
void Oculus::Interaction::Samples::ScaleAudioEvents::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::ScaleAudioEvents*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.ScaleAudioEvents/Direction
#include "Oculus/Interaction/Samples/ScaleAudioEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Samples.ScaleAudioEvents/Direction None
::Oculus::Interaction::Samples::ScaleAudioEvents::Direction Oculus::Interaction::Samples::ScaleAudioEvents::Direction::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::Direction::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Samples::ScaleAudioEvents::Direction>("Oculus.Interaction.Samples", "ScaleAudioEvents/Direction", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Samples.ScaleAudioEvents/Direction None
void Oculus::Interaction::Samples::ScaleAudioEvents::Direction::_set_None(::Oculus::Interaction::Samples::ScaleAudioEvents::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::Direction::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Samples", "ScaleAudioEvents/Direction", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Samples.ScaleAudioEvents/Direction ScaleUp
::Oculus::Interaction::Samples::ScaleAudioEvents::Direction Oculus::Interaction::Samples::ScaleAudioEvents::Direction::_get_ScaleUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::Direction::_get_ScaleUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Samples::ScaleAudioEvents::Direction>("Oculus.Interaction.Samples", "ScaleAudioEvents/Direction", "ScaleUp"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Samples.ScaleAudioEvents/Direction ScaleUp
void Oculus::Interaction::Samples::ScaleAudioEvents::Direction::_set_ScaleUp(::Oculus::Interaction::Samples::ScaleAudioEvents::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::Direction::_set_ScaleUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Samples", "ScaleAudioEvents/Direction", "ScaleUp", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Samples.ScaleAudioEvents/Direction ScaleDown
::Oculus::Interaction::Samples::ScaleAudioEvents::Direction Oculus::Interaction::Samples::ScaleAudioEvents::Direction::_get_ScaleDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::Direction::_get_ScaleDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Samples::ScaleAudioEvents::Direction>("Oculus.Interaction.Samples", "ScaleAudioEvents/Direction", "ScaleDown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Samples.ScaleAudioEvents/Direction ScaleDown
void Oculus::Interaction::Samples::ScaleAudioEvents::Direction::_set_ScaleDown(::Oculus::Interaction::Samples::ScaleAudioEvents::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::Direction::_set_ScaleDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Samples", "ScaleAudioEvents/Direction", "ScaleDown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Samples::ScaleAudioEvents::Direction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleAudioEvents::Direction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.ScaleModifier
#include "Oculus/Interaction/Samples/ScaleModifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Interaction.Samples.ScaleModifier.SetScaleX
void Oculus::Interaction::Samples::ScaleModifier::SetScaleX(float x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleModifier::SetScaleX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScaleX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
}
// Autogenerated method: Oculus.Interaction.Samples.ScaleModifier.SetScaleY
void Oculus::Interaction::Samples::ScaleModifier::SetScaleY(float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleModifier::SetScaleY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScaleY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, y);
}
// Autogenerated method: Oculus.Interaction.Samples.ScaleModifier.SetScaleZ
void Oculus::Interaction::Samples::ScaleModifier::SetScaleZ(float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ScaleModifier::SetScaleZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScaleZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, z);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.SceneLoader
#include "Oculus/Interaction/Samples/SceneLoader.hpp"
// Including type: Oculus.Interaction.Samples.SceneLoader/<>c
#include "Oculus/Interaction/Samples/SceneLoader_--c.hpp"
// Including type: Oculus.Interaction.Samples.SceneLoader/<LoadSceneAsync>d__6
#include "Oculus/Interaction/Samples/SceneLoader_-LoadSceneAsync-d__6.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _loading
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Samples::SceneLoader::dyn__loading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::dyn__loading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> WhenLoadingScene
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& Oculus::Interaction::Samples::SceneLoader::dyn_WhenLoadingScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::dyn_WhenLoadingScene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenLoadingScene"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> WhenSceneLoaded
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& Oculus::Interaction::Samples::SceneLoader::dyn_WhenSceneLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::dyn_WhenSceneLoaded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenSceneLoaded"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _waitingCount
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Samples::SceneLoader::dyn__waitingCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::dyn__waitingCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitingCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.SceneLoader.Load
void Oculus::Interaction::Samples::SceneLoader::Load(::StringW sceneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sceneName);
}
// Autogenerated method: Oculus.Interaction.Samples.SceneLoader.HandleReadyToLoad
void Oculus::Interaction::Samples::SceneLoader::HandleReadyToLoad(::StringW sceneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::HandleReadyToLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleReadyToLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sceneName);
}
// Autogenerated method: Oculus.Interaction.Samples.SceneLoader.LoadSceneAsync
::System::Collections::IEnumerator* Oculus::Interaction::Samples::SceneLoader::LoadSceneAsync(::StringW sceneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, sceneName);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.SceneLoader/<>c
#include "Oculus/Interaction/Samples/SceneLoader_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Samples.SceneLoader/<>c <>9
::Oculus::Interaction::Samples::SceneLoader::$$c* Oculus::Interaction::Samples::SceneLoader::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Samples::SceneLoader::$$c*>("Oculus.Interaction.Samples", "SceneLoader/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Samples.SceneLoader/<>c <>9
void Oculus::Interaction::Samples::SceneLoader::$$c::_set_$$9(::Oculus::Interaction::Samples::SceneLoader::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Samples", "SceneLoader/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.String> <>9__7_0
::System::Action_1<::StringW>* Oculus::Interaction::Samples::SceneLoader::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("Oculus.Interaction.Samples", "SceneLoader/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.String> <>9__7_0
void Oculus::Interaction::Samples::SceneLoader::$$c::_set_$$9__7_0(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Samples", "SceneLoader/<>c", "<>9__7_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.String> <>9__7_1
::System::Action_1<::StringW>* Oculus::Interaction::Samples::SceneLoader::$$c::_get_$$9__7_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$$c::_get_$$9__7_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("Oculus.Interaction.Samples", "SceneLoader/<>c", "<>9__7_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.String> <>9__7_1
void Oculus::Interaction::Samples::SceneLoader::$$c::_set_$$9__7_1(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$$c::_set_$$9__7_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Samples", "SceneLoader/<>c", "<>9__7_1", value)));
}
// Autogenerated method: Oculus.Interaction.Samples.SceneLoader/<>c..cctor
void Oculus::Interaction::Samples::SceneLoader::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Samples", "SceneLoader/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.SceneLoader/<>c.<.ctor>b__7_0
void Oculus::Interaction::Samples::SceneLoader::$$c::$_ctor$b__7_0(::StringW $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$$c::<.ctor>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated method: Oculus.Interaction.Samples.SceneLoader/<>c.<.ctor>b__7_1
void Oculus::Interaction::Samples::SceneLoader::$$c::$_ctor$b__7_1(::StringW $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$$c::<.ctor>b__7_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__7_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Interaction.Samples.SceneLoader/<LoadSceneAsync>d__6
#include "Oculus/Interaction/Samples/SceneLoader_-LoadSceneAsync-d__6.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sceneName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::dyn_sceneName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::dyn_sceneName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Interaction.Samples.SceneLoader <>4__this
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Samples::SceneLoader*& Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Samples::SceneLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation <asyncLoad>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::AsyncOperation*& Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::dyn_$asyncLoad$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::dyn_$asyncLoad$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<asyncLoad>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.SceneLoader/<LoadSceneAsync>d__6.System.IDisposable.Dispose
void Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.SceneLoader/<LoadSceneAsync>d__6.MoveNext
bool Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.SceneLoader/<LoadSceneAsync>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.SceneLoader/<LoadSceneAsync>d__6.System.Collections.IEnumerator.Reset
void Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.SceneLoader/<LoadSceneAsync>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::SceneLoader::$LoadSceneAsync$d__6*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.ShouldHideHandOnGrab
#include "Oculus/Interaction/Samples/ShouldHideHandOnGrab.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.ConstantRotation
#include "Oculus/Interaction/Samples/ConstantRotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationSpeed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::ConstantRotation::dyn__rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ConstantRotation::dyn__rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Samples::ConstantRotation::dyn__localAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ConstantRotation::dyn__localAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.ConstantRotation.get_RotationSpeed
float Oculus::Interaction::Samples::ConstantRotation::get_RotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ConstantRotation::get_RotationSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RotationSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.ConstantRotation.set_RotationSpeed
void Oculus::Interaction::Samples::ConstantRotation::set_RotationSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ConstantRotation::set_RotationSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RotationSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Samples.ConstantRotation.get_LocalAxis
::UnityEngine::Vector3 Oculus::Interaction::Samples::ConstantRotation::get_LocalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ConstantRotation::get_LocalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.ConstantRotation.set_LocalAxis
void Oculus::Interaction::Samples::ConstantRotation::set_LocalAxis(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ConstantRotation::set_LocalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Samples.ConstantRotation.Update
void Oculus::Interaction::Samples::ConstantRotation::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ConstantRotation::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::ConstantRotation*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.ListSnapPoseDelegateRoundedBoxVisual
#include "Oculus/Interaction/Samples/ListSnapPoseDelegateRoundedBoxVisual.hpp"
// Including type: Oculus.Interaction.ListSnapPoseDelegate
#include "Oculus/Interaction/ListSnapPoseDelegate.hpp"
// Including type: Oculus.Interaction.RoundedBoxProperties
#include "Oculus/Interaction/RoundedBoxProperties.hpp"
// Including type: Oculus.Interaction.SnapInteractable
#include "Oculus/Interaction/SnapInteractable.hpp"
// Including type: Oculus.Interaction.ProgressCurve
#include "Oculus/Interaction/ProgressCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ListSnapPoseDelegate _listSnapPoseDelegate
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ListSnapPoseDelegate*& Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::dyn__listSnapPoseDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::dyn__listSnapPoseDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listSnapPoseDelegate"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ListSnapPoseDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.RoundedBoxProperties _properties
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::RoundedBoxProperties*& Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::dyn__properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::dyn__properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_properties"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::RoundedBoxProperties**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.SnapInteractable _snapInteractable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::SnapInteractable*& Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::dyn__snapInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::dyn__snapInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snapInteractable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::SnapInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minSize
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::dyn__minSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::dyn__minSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.ProgressCurve _curve
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::ProgressCurve*& Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::dyn__curve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::dyn__curve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curve"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::ProgressCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _targetWidth
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::dyn__targetWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::dyn__targetWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startWidth
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::dyn__startWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::dyn__startWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.ListSnapPoseDelegateRoundedBoxVisual.LateUpdate
void Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::ListSnapPoseDelegateRoundedBoxVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.StayInView
#include "Oculus/Interaction/Samples/StayInView.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _eyeCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Interaction::Samples::StayInView::dyn__eyeCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::StayInView::dyn__eyeCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eyeCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _extraDistanceForward
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::StayInView::dyn__extraDistanceForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::StayInView::dyn__extraDistanceForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_extraDistanceForward"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _zeroOutEyeHeight
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Samples::StayInView::dyn__zeroOutEyeHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::StayInView::dyn__zeroOutEyeHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zeroOutEyeHeight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.StayInView.Update
void Oculus::Interaction::Samples::StayInView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::StayInView::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.PalmMenu.DominantHandGameObjectFilter
#include "Oculus/Interaction/Samples/PalmMenu/DominantHandGameObjectFilter.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _leftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::dyn__leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::dyn__leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _leftHandedGameObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::dyn__leftHandedGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::dyn__leftHandedGameObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandedGameObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _rightHandedGameObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::dyn__rightHandedGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::dyn__rightHandedGameObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandedGameObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <LeftHand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::dyn_$LeftHand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::dyn_$LeftHand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LeftHand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<UnityEngine.GameObject> _leftHandedGameObjectSet
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>*& Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::dyn__leftHandedGameObjectSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::dyn__leftHandedGameObjectSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandedGameObjectSet"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<UnityEngine.GameObject> _rightHandedGameObjectSet
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>*& Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::dyn__rightHandedGameObjectSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::dyn__rightHandedGameObjectSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandedGameObjectSet"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.DominantHandGameObjectFilter.get_LeftHand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::get_LeftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.DominantHandGameObjectFilter.set_LeftHand
void Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::set_LeftHand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::set_LeftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.DominantHandGameObjectFilter.Start
void Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.DominantHandGameObjectFilter.Filter
bool Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::Filter(::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter::Filter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::PalmMenu::DominantHandGameObjectFilter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, go);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.PalmMenu.MatchNonDominantPalmWorldSpaceTransform
#include "Oculus/Interaction/Samples/PalmMenu/MatchNonDominantPalmWorldSpaceTransform.hpp"
// Including type: Oculus.Interaction.Input.IHand
#include "Oculus/Interaction/Input/IHand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _leftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::dyn__leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::dyn__leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _rightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::dyn__rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::dyn__rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _leftAnchorPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::dyn__leftAnchorPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::dyn__leftAnchorPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftAnchorPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _leftAimPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::dyn__leftAimPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::dyn__leftAimPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftAimPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _rightAnchorPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::dyn__rightAnchorPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::dyn__rightAnchorPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightAnchorPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _rightAimPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::dyn__rightAimPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::dyn__rightAimPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightAimPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <LeftHand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::dyn_$LeftHand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::dyn_$LeftHand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LeftHand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Input.IHand <RightHand>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Input::IHand*& Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::dyn_$RightHand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::dyn_$RightHand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RightHand>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Input::IHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.MatchNonDominantPalmWorldSpaceTransform.get_LeftHand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::get_LeftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.MatchNonDominantPalmWorldSpaceTransform.set_LeftHand
void Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::set_LeftHand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::set_LeftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.MatchNonDominantPalmWorldSpaceTransform.get_RightHand
::Oculus::Interaction::Input::IHand* Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::get_RightHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Input::IHand*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.MatchNonDominantPalmWorldSpaceTransform.set_RightHand
void Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::set_RightHand(::Oculus::Interaction::Input::IHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::set_RightHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.MatchNonDominantPalmWorldSpaceTransform.Awake
void Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.MatchNonDominantPalmWorldSpaceTransform.Update
void Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::MatchNonDominantPalmWorldSpaceTransform::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.PalmMenu.PalmMenuExample
#include "Oculus/Interaction/Samples/PalmMenu/PalmMenuExample.hpp"
// Including type: Oculus.Interaction.PokeInteractable
#include "Oculus/Interaction/PokeInteractable.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.PokeInteractable _menuInteractable
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::PokeInteractable*& Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__menuInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__menuInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuInteractable"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::PokeInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _menuParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__menuParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__menuParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _menuPanel
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__menuPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__menuPanel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuPanel"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform[] _buttons
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RectTransform*>& Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__buttons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttons"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RectTransform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform[] _paginationDots
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RectTransform*>& Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__paginationDots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__paginationDots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_paginationDots"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RectTransform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _selectionIndicatorDot
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__selectionIndicatorDot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__selectionIndicatorDot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionIndicatorDot"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _paginationButtonScaleCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__paginationButtonScaleCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__paginationButtonScaleCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_paginationButtonScaleCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _defaultButtonDistance
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__defaultButtonDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__defaultButtonDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultButtonDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _paginationSwipeAudio
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__paginationSwipeAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__paginationSwipeAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_paginationSwipeAudio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _showMenuAudio
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__showMenuAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__showMenuAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showMenuAudio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _hideMenuAudio
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__hideMenuAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__hideMenuAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hideMenuAudio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentSelectedButtonIdx
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__currentSelectedButtonIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::dyn__currentSelectedButtonIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentSelectedButtonIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.PalmMenuExample.Start
void Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.PalmMenuExample.Update
void Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.PalmMenuExample.CalculateNearestButtonIdx
int Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::CalculateNearestButtonIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::CalculateNearestButtonIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateNearestButtonIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.PalmMenuExample.LerpToButton
void Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::LerpToButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::LerpToButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LerpToButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.PalmMenuExample.ToggleMenu
void Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::ToggleMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExample::ToggleMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Samples.PalmMenu.PalmMenuExampleButtonHandlers
#include "Oculus/Interaction/Samples/PalmMenu/PalmMenuExampleButtonHandlers.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _controlledObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__controlledObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__controlledObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controlledObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] _colors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _rotationEnabledIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__rotationEnabledIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__rotationEnabledIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationEnabledIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _rotationDisabledIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__rotationDisabledIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__rotationDisabledIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationDisabledIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationLerpSpeed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__rotationLerpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__rotationLerpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationLerpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text _rotationDirectionText
[[deprecated("Use field access instead!")]] ::TMPro::TMP_Text*& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__rotationDirectionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__rotationDirectionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationDirectionText"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _rotationDirectionNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__rotationDirectionNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__rotationDirectionNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationDirectionNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _rotationDirectionIcons
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__rotationDirectionIcons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__rotationDirectionIcons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationDirectionIcons"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion[] _rotationDirections
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__rotationDirections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__rotationDirections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationDirections"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text _elevationText
[[deprecated("Use field access instead!")]] ::TMPro::TMP_Text*& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__elevationText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__elevationText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elevationText"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _elevationChangeIncrement
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__elevationChangeIncrement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__elevationChangeIncrement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elevationChangeIncrement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _elevationChangeLerpSpeed
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__elevationChangeLerpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__elevationChangeLerpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elevationChangeLerpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text _shapeNameText
[[deprecated("Use field access instead!")]] ::TMPro::TMP_Text*& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__shapeNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__shapeNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shapeNameText"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _shapeNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__shapeNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__shapeNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shapeNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh[] _shapes
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Mesh*>& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__shapes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__shapes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shapes"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Mesh*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentColorIdx
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__currentColorIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__currentColorIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentColorIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _rotationEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__rotationEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__rotationEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentRotationDirectionIdx
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__currentRotationDirectionIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__currentRotationDirectionIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRotationDirectionIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _targetPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__targetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__targetPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentShapeIdx
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__currentShapeIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::dyn__currentShapeIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentShapeIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.PalmMenuExampleButtonHandlers.Start
void Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.PalmMenuExampleButtonHandlers.Update
void Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.PalmMenuExampleButtonHandlers.CycleColor
void Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::CycleColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::CycleColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CycleColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.PalmMenuExampleButtonHandlers.ToggleRotationEnabled
void Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::ToggleRotationEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::ToggleRotationEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleRotationEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.PalmMenuExampleButtonHandlers.CycleRotationDirection
void Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::CycleRotationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::CycleRotationDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CycleRotationDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.PalmMenuExampleButtonHandlers.IncrementElevation
void Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::IncrementElevation(bool up) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::IncrementElevation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementElevation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(up)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, up);
}
// Autogenerated method: Oculus.Interaction.Samples.PalmMenu.PalmMenuExampleButtonHandlers.CycleShape
void Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::CycleShape(bool cycleForward) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Samples::PalmMenu::PalmMenuExampleButtonHandlers::CycleShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CycleShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cycleForward)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cycleForward);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Body.Samples.BodyPoseSwitcher
#include "Oculus/Interaction/Body/Samples/BodyPoseSwitcher.hpp"
// Including type: Oculus.Interaction.Body.Input.ISkeletonMapping
#include "Oculus/Interaction/Body/Input/ISkeletonMapping.hpp"
// Including type: Oculus.Interaction.Body.Samples.BodyPoseSwitcher/<>c
#include "Oculus/Interaction/Body/Samples/BodyPoseSwitcher_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Oculus.Interaction.Body.Input.BodyJointId
#include "Oculus/Interaction/Body/Input/BodyJointId.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action WhenBodyPoseUpdated
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::Body::Samples::BodyPoseSwitcher::dyn_WhenBodyPoseUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::dyn_WhenBodyPoseUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenBodyPoseUpdated"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _poseA
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Body::Samples::BodyPoseSwitcher::dyn__poseA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::dyn__poseA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_poseA"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Body.PoseDetection.IBodyPose PoseA
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::PoseDetection::IBodyPose*& Oculus::Interaction::Body::Samples::BodyPoseSwitcher::dyn_PoseA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::dyn_PoseA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PoseA"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Body::PoseDetection::IBodyPose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _poseB
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Body::Samples::BodyPoseSwitcher::dyn__poseB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::dyn__poseB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_poseB"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Body.PoseDetection.IBodyPose PoseB
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::PoseDetection::IBodyPose*& Oculus::Interaction::Body::Samples::BodyPoseSwitcher::dyn_PoseB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::dyn_PoseB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PoseB"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Body::PoseDetection::IBodyPose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource _source
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource& Oculus::Interaction::Body::Samples::BodyPoseSwitcher::dyn__source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::dyn__source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_source"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Body::Samples::BodyPoseSwitcher::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.add_WhenBodyPoseUpdated
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::add_WhenBodyPoseUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::add_WhenBodyPoseUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.remove_WhenBodyPoseUpdated
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::remove_WhenBodyPoseUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::remove_WhenBodyPoseUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.get_SkeletonMapping
::Oculus::Interaction::Body::Input::ISkeletonMapping* Oculus::Interaction::Body::Samples::BodyPoseSwitcher::get_SkeletonMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::get_SkeletonMapping");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Body::Input::ISkeletonMapping*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.GetJointPoseFromRoot
bool Oculus::Interaction::Body::Samples::BodyPoseSwitcher::GetJointPoseFromRoot(::Oculus::Interaction::Body::Input::BodyJointId bodyJointId, ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::GetJointPoseFromRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bodyJointId, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.GetJointPoseLocal
bool Oculus::Interaction::Body::Samples::BodyPoseSwitcher::GetJointPoseLocal(::Oculus::Interaction::Body::Input::BodyJointId bodyJointId, ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::GetJointPoseLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bodyJointId, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.get_Source
::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource Oculus::Interaction::Body::Samples::BodyPoseSwitcher::get_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::get_Source");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Source", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.set_Source
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::set_Source(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::set_Source");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Source", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.UsePoseA
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::UsePoseA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::UsePoseA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UsePoseA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.UsePoseB
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::UsePoseB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::UsePoseB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UsePoseB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.Awake
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.Start
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.OnEnable
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.OnDisable
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.OnPoseUpdated
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::OnPoseUpdated(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::OnPoseUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPoseUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.GetPose
::Oculus::Interaction::Body::PoseDetection::IBodyPose* Oculus::Interaction::Body::Samples::BodyPoseSwitcher::GetPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::GetPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Body::PoseDetection::IBodyPose*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.<OnEnable>b__21_0
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$OnEnable$b__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::<OnEnable>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.<OnEnable>b__21_1
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$OnEnable$b__21_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::<OnEnable>b__21_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__21_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.<OnDisable>b__22_0
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$OnDisable$b__22_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::<OnDisable>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnDisable>b__22_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher.<OnDisable>b__22_1
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$OnDisable$b__22_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::<OnDisable>b__22_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnDisable>b__22_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource
#include "Oculus/Interaction/Body/Samples/BodyPoseSwitcher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource PoseA
::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource::_get_PoseA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource::_get_PoseA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource>("Oculus.Interaction.Body.Samples", "BodyPoseSwitcher/PoseSource", "PoseA"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource PoseA
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource::_set_PoseA(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource::_set_PoseA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Body.Samples", "BodyPoseSwitcher/PoseSource", "PoseA", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource PoseB
::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource::_get_PoseB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource::_get_PoseB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource>("Oculus.Interaction.Body.Samples", "BodyPoseSwitcher/PoseSource", "PoseB"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Interaction.Body.Samples.BodyPoseSwitcher/PoseSource PoseB
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource::_set_PoseB(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource::_set_PoseB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Body.Samples", "BodyPoseSwitcher/PoseSource", "PoseB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::PoseSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Body.Samples.BodyPoseSwitcher/<>c
#include "Oculus/Interaction/Body/Samples/BodyPoseSwitcher_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Body.Samples.BodyPoseSwitcher/<>c <>9
::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$$c* Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$$c*>("Oculus.Interaction.Body.Samples", "BodyPoseSwitcher/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Body.Samples.BodyPoseSwitcher/<>c <>9
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$$c::_set_$$9(::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Body.Samples", "BodyPoseSwitcher/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__25_0
::System::Action* Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$$c::_get_$$9__25_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$$c::_get_$$9__25_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction.Body.Samples", "BodyPoseSwitcher/<>c", "<>9__25_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__25_0
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$$c::_set_$$9__25_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$$c::_set_$$9__25_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Body.Samples", "BodyPoseSwitcher/<>c", "<>9__25_0", value)));
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher/<>c..cctor
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Body.Samples", "BodyPoseSwitcher/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.BodyPoseSwitcher/<>c.<.ctor>b__25_0
void Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$$c::$_ctor$b__25_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::BodyPoseSwitcher::$$c::<.ctor>b__25_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__25_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Body.Samples.LockedBodyPose
#include "Oculus/Interaction/Body/Samples/LockedBodyPose.hpp"
// Including type: Oculus.Interaction.Body.Samples.LockedBodyPose/<>c
#include "Oculus/Interaction/Body/Samples/LockedBodyPose_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Interaction.Body.Input.ISkeletonMapping
#include "Oculus/Interaction/Body/Input/ISkeletonMapping.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Pose HIP_OFFSET
::UnityEngine::Pose Oculus::Interaction::Body::Samples::LockedBodyPose::_get_HIP_OFFSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::_get_HIP_OFFSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Pose>("Oculus.Interaction.Body.Samples", "LockedBodyPose", "HIP_OFFSET"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Pose HIP_OFFSET
void Oculus::Interaction::Body::Samples::LockedBodyPose::_set_HIP_OFFSET(::UnityEngine::Pose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::_set_HIP_OFFSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Interaction.Body.Samples", "LockedBodyPose", "HIP_OFFSET", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action WhenBodyPoseUpdated
[[deprecated("Use field access instead!")]] ::System::Action*& Oculus::Interaction::Body::Samples::LockedBodyPose::dyn_WhenBodyPoseUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::dyn_WhenBodyPoseUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhenBodyPoseUpdated"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object _pose
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Oculus::Interaction::Body::Samples::LockedBodyPose::dyn__pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::dyn__pose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pose"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Body.PoseDetection.IBodyPose Pose
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::PoseDetection::IBodyPose*& Oculus::Interaction::Body::Samples::LockedBodyPose::dyn_Pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::dyn_Pose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pose"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Body::PoseDetection::IBodyPose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Interaction.Body.Input.BodyJointId _referenceJoint
[[deprecated("Use field access instead!")]] ::Oculus::Interaction::Body::Input::BodyJointId& Oculus::Interaction::Body::Samples::LockedBodyPose::dyn__referenceJoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::dyn__referenceJoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceJoint"))->offset;
  return *reinterpret_cast<::Oculus::Interaction::Body::Input::BodyJointId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose _referenceOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& Oculus::Interaction::Body::Samples::LockedBodyPose::dyn__referenceOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::dyn__referenceOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _started
[[deprecated("Use field access instead!")]] bool& Oculus::Interaction::Body::Samples::LockedBodyPose::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Oculus.Interaction.Body.Input.BodyJointId,UnityEngine.Pose> _lockedPoses
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::Body::Input::BodyJointId, ::UnityEngine::Pose>*& Oculus::Interaction::Body::Samples::LockedBodyPose::dyn__lockedPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::dyn__lockedPoses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockedPoses"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Oculus::Interaction::Body::Input::BodyJointId, ::UnityEngine::Pose>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.LockedBodyPose.add_WhenBodyPoseUpdated
void Oculus::Interaction::Body::Samples::LockedBodyPose::add_WhenBodyPoseUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::add_WhenBodyPoseUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::LockedBodyPose*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.LockedBodyPose.remove_WhenBodyPoseUpdated
void Oculus::Interaction::Body::Samples::LockedBodyPose::remove_WhenBodyPoseUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::remove_WhenBodyPoseUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::LockedBodyPose*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.LockedBodyPose.get_SkeletonMapping
::Oculus::Interaction::Body::Input::ISkeletonMapping* Oculus::Interaction::Body::Samples::LockedBodyPose::get_SkeletonMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::get_SkeletonMapping");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::LockedBodyPose*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Interaction::Body::Input::ISkeletonMapping*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.LockedBodyPose.GetJointPoseLocal
bool Oculus::Interaction::Body::Samples::LockedBodyPose::GetJointPoseLocal(::Oculus::Interaction::Body::Input::BodyJointId bodyJointId, ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::GetJointPoseLocal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::LockedBodyPose*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bodyJointId, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Body.Samples.LockedBodyPose.GetJointPoseFromRoot
bool Oculus::Interaction::Body::Samples::LockedBodyPose::GetJointPoseFromRoot(::Oculus::Interaction::Body::Input::BodyJointId bodyJointId, ByRef<::UnityEngine::Pose> pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::GetJointPoseFromRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::LockedBodyPose*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bodyJointId, byref(pose));
}
// Autogenerated method: Oculus.Interaction.Body.Samples.LockedBodyPose.UpdateLockedBodyPose
void Oculus::Interaction::Body::Samples::LockedBodyPose::UpdateLockedBodyPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::UpdateLockedBodyPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLockedBodyPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.LockedBodyPose.Awake
void Oculus::Interaction::Body::Samples::LockedBodyPose::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::LockedBodyPose*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.LockedBodyPose.Start
void Oculus::Interaction::Body::Samples::LockedBodyPose::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::LockedBodyPose*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.LockedBodyPose.OnEnable
void Oculus::Interaction::Body::Samples::LockedBodyPose::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::LockedBodyPose*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.LockedBodyPose.OnDisable
void Oculus::Interaction::Body::Samples::LockedBodyPose::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Interaction::Body::Samples::LockedBodyPose*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.LockedBodyPose..cctor
void Oculus::Interaction::Body::Samples::LockedBodyPose::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Body.Samples", "LockedBodyPose", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Body.Samples.LockedBodyPose/<>c
#include "Oculus/Interaction/Body/Samples/LockedBodyPose_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Oculus.Interaction.Body.Samples.LockedBodyPose/<>c <>9
::Oculus::Interaction::Body::Samples::LockedBodyPose::$$c* Oculus::Interaction::Body::Samples::LockedBodyPose::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Interaction::Body::Samples::LockedBodyPose::$$c*>("Oculus.Interaction.Body.Samples", "LockedBodyPose/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Oculus.Interaction.Body.Samples.LockedBodyPose/<>c <>9
void Oculus::Interaction::Body::Samples::LockedBodyPose::$$c::_set_$$9(::Oculus::Interaction::Body::Samples::LockedBodyPose::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Body.Samples", "LockedBodyPose/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__19_0
::System::Action* Oculus::Interaction::Body::Samples::LockedBodyPose::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Interaction.Body.Samples", "LockedBodyPose/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__19_0
void Oculus::Interaction::Body::Samples::LockedBodyPose::$$c::_set_$$9__19_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Oculus.Interaction.Body.Samples", "LockedBodyPose/<>c", "<>9__19_0", value)));
}
// Autogenerated method: Oculus.Interaction.Body.Samples.LockedBodyPose/<>c..cctor
void Oculus::Interaction::Body::Samples::LockedBodyPose::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Interaction.Body.Samples", "LockedBodyPose/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.LockedBodyPose/<>c.<.ctor>b__19_0
void Oculus::Interaction::Body::Samples::LockedBodyPose::$$c::$_ctor$b__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::LockedBodyPose::$$c::<.ctor>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: Oculus.Interaction.Body.Samples.PoseCaptureCountdown
#include "Oculus/Interaction/Body/Samples/PoseCaptureCountdown.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _timerStart
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn__timerStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn__timerStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timerStart"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _timerSecondTick
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn__timerSecondTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn__timerSecondTick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timerSecondTick"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEvent _timeUp
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn__timeUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn__timeUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeUp"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _countdownText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn__countdownText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn__countdownText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_countdownText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _poseText
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn__poseText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn__poseText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_poseText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single duration
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _resetColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn__resetColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn__resetColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resetColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timer
[[deprecated("Use field access instead!")]] float& Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn__timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::PoseCaptureCountdown::dyn__timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.PoseCaptureCountdown.Restart
void Oculus::Interaction::Body::Samples::PoseCaptureCountdown::Restart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::PoseCaptureCountdown::Restart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Restart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Interaction.Body.Samples.PoseCaptureCountdown.Update
void Oculus::Interaction::Body::Samples::PoseCaptureCountdown::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Interaction::Body::Samples::PoseCaptureCountdown::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: EnableSwitch
#include "GlobalNamespace/EnableSwitch.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] SwitchTargets
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::EnableSwitch::dyn_SwitchTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableSwitch::dyn_SwitchTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SwitchTargets"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: LipSyncDemo_Control
#include "GlobalNamespace/LipSyncDemo_Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode rotateLeftKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::LipSyncDemo_Control::dyn_rotateLeftKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotateLeftKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotateLeftKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode rotateRightKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::LipSyncDemo_Control::dyn_rotateRightKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotateRightKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotateRightKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode resetRotationKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::LipSyncDemo_Control::dyn_resetRotationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_resetRotationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetRotationKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single resetRotation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LipSyncDemo_Control::dyn_resetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_resetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationAmount
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LipSyncDemo_Control::dyn_rotationAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotationAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationMax
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LipSyncDemo_Control::dyn_rotationMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotationMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LipSyncDemo_Control.Start
void GlobalNamespace::LipSyncDemo_Control::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_Control.Update
void GlobalNamespace::LipSyncDemo_Control::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_Control.RotateObject
void GlobalNamespace::LipSyncDemo_Control::RotateObject(float amountDegrees, bool absolute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::RotateObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amountDegrees), ::il2cpp_utils::ExtractType(absolute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amountDegrees, absolute);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: LipSyncDemo_SetCurrentTarget
#include "GlobalNamespace/LipSyncDemo_SetCurrentTarget.hpp"
// Including type: EnableSwitch
#include "GlobalNamespace/EnableSwitch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public EnableSwitch[] SwitchTargets
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::EnableSwitch*>& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_SwitchTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_SwitchTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SwitchTargets"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::EnableSwitch*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 targetSet
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_targetSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_targetSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetSet"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxTarget
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_maxTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_maxTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTarget"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean XRButtonBeingPressed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_XRButtonBeingPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_XRButtonBeingPressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XRButtonBeingPressed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.Start
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.Update
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.SetCurrentTarget
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::SetCurrentTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::SetCurrentTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCurrentTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.LocalTouchEventCallback
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::LocalTouchEventCallback(::GlobalNamespace::OVRTouchpad::TouchEvent touchEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::LocalTouchEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalTouchEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touchEvent);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLipSyncDebugConsole
#include "GlobalNamespace/OVRLipSyncDebugConsole.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRLipSyncDebugConsole s_Instance
::GlobalNamespace::OVRLipSyncDebugConsole* GlobalNamespace::OVRLipSyncDebugConsole::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncDebugConsole*>("", "OVRLipSyncDebugConsole", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private OVRLipSyncDebugConsole s_Instance
void GlobalNamespace::OVRLipSyncDebugConsole::_set_s_Instance(::GlobalNamespace::OVRLipSyncDebugConsole* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncDebugConsole", "s_Instance", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.ArrayList messages
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& GlobalNamespace::OVRLipSyncDebugConsole::dyn_messages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_messages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messages"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxMessages
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncDebugConsole::dyn_maxMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_maxMessages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxMessages"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text textMsg
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::OVRLipSyncDebugConsole::dyn_textMsg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_textMsg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textMsg"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean clearTimeoutOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeoutOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeoutOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearTimeoutOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single clearTimeout
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearTimeout"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncDebugConsole.get_instance
::GlobalNamespace::OVRLipSyncDebugConsole* GlobalNamespace::OVRLipSyncDebugConsole::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSyncDebugConsole*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Awake
void GlobalNamespace::OVRLipSyncDebugConsole::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Update
void GlobalNamespace::OVRLipSyncDebugConsole::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Init
void GlobalNamespace::OVRLipSyncDebugConsole::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Log
void GlobalNamespace::OVRLipSyncDebugConsole::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: OVRLipSyncDebugConsole.Log
void GlobalNamespace::OVRLipSyncDebugConsole::Log(::StringW message, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, color);
}
// Autogenerated method: OVRLipSyncDebugConsole.Clear
void GlobalNamespace::OVRLipSyncDebugConsole::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.ClearTimeout
void GlobalNamespace::OVRLipSyncDebugConsole::ClearTimeout(float timeToClear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::ClearTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "ClearTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeToClear)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeToClear);
}
// Autogenerated method: OVRLipSyncDebugConsole.AddMessage
void GlobalNamespace::OVRLipSyncDebugConsole::AddMessage(::StringW message, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::AddMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, color);
}
// Autogenerated method: OVRLipSyncDebugConsole.ClearMessages
void GlobalNamespace::OVRLipSyncDebugConsole::ClearMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::ClearMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.SetClearTimeout
void GlobalNamespace::OVRLipSyncDebugConsole::SetClearTimeout(float timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::SetClearTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetClearTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeout);
}
// Autogenerated method: OVRLipSyncDebugConsole.Prune
void GlobalNamespace::OVRLipSyncDebugConsole::Prune() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Prune");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Prune", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Display
void GlobalNamespace::OVRLipSyncDebugConsole::Display() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Display");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Display", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRNamedArrayAttribute
#include "GlobalNamespace/OVRNamedArrayAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String[] names
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::OVRNamedArrayAttribute::dyn_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNamedArrayAttribute::dyn_names");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "names"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTouchpad
#include "GlobalNamespace/OVRTouchpad.hpp"
// Including type: OVRTouchpad/OVRTouchpadCallback`1
#include "GlobalNamespace/OVRTouchpad_OVRTouchpadCallback_1.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: OVRTouchpadHelper
#include "GlobalNamespace/OVRTouchpadHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 moveAmountMouse
::UnityEngine::Vector3 GlobalNamespace::OVRTouchpad::_get_moveAmountMouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_moveAmountMouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OVRTouchpad", "moveAmountMouse"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 moveAmountMouse
void GlobalNamespace::OVRTouchpad::_set_moveAmountMouse(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_moveAmountMouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "moveAmountMouse", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single minMovMagnitudeMouse
float GlobalNamespace::OVRTouchpad::_get_minMovMagnitudeMouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_minMovMagnitudeMouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTouchpad", "minMovMagnitudeMouse"));
}
// Autogenerated static field setter
// Set static field: static private System.Single minMovMagnitudeMouse
void GlobalNamespace::OVRTouchpad::_set_minMovMagnitudeMouse(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_minMovMagnitudeMouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "minMovMagnitudeMouse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Delegate touchPadCallbacks
::System::Delegate* GlobalNamespace::OVRTouchpad::_get_touchPadCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_touchPadCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Delegate*>("", "OVRTouchpad", "touchPadCallbacks"));
}
// Autogenerated static field setter
// Set static field: static public System.Delegate touchPadCallbacks
void GlobalNamespace::OVRTouchpad::_set_touchPadCallbacks(::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_touchPadCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "touchPadCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private OVRTouchpadHelper touchpadHelper
::GlobalNamespace::OVRTouchpadHelper* GlobalNamespace::OVRTouchpad::_get_touchpadHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_touchpadHelper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpadHelper*>("", "OVRTouchpad", "touchpadHelper"));
}
// Autogenerated static field setter
// Set static field: static private OVRTouchpadHelper touchpadHelper
void GlobalNamespace::OVRTouchpad::_set_touchpadHelper(::GlobalNamespace::OVRTouchpadHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_touchpadHelper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "touchpadHelper", value));
}
// Autogenerated method: OVRTouchpad.Create
void GlobalNamespace::OVRTouchpad::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.Update
void GlobalNamespace::OVRTouchpad::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.OnDisable
void GlobalNamespace::OVRTouchpad::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.HandleInputMouse
void GlobalNamespace::OVRTouchpad::HandleInputMouse(ByRef<::UnityEngine::Vector3> move) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::HandleInputMouse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "HandleInputMouse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(move)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(move));
}
// Autogenerated method: OVRTouchpad.AddListener
void GlobalNamespace::OVRTouchpad::AddListener(::GlobalNamespace::OVRTouchpad::OVRTouchpadCallback_1<::GlobalNamespace::OVRTouchpad::TouchEvent>* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::AddListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "AddListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handler);
}
// Autogenerated method: OVRTouchpad..cctor
void GlobalNamespace::OVRTouchpad::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTouchpad/TouchEvent
#include "GlobalNamespace/OVRTouchpad.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent SingleTap
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_SingleTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_SingleTap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "SingleTap"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent SingleTap
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_SingleTap(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_SingleTap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "SingleTap", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent DoubleTap
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_DoubleTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_DoubleTap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "DoubleTap"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent DoubleTap
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_DoubleTap(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_DoubleTap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "DoubleTap", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Left
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Left
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Left(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Right
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Right
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Right(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Up
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Up
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Up(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Down
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Down
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Down(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Down", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTouchpad::TouchEvent::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRTouchpadHelper
#include "GlobalNamespace/OVRTouchpadHelper.hpp"
// Including type: OVRTouchpad/TouchEvent
#include "GlobalNamespace/OVRTouchpad.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRTouchpadHelper.Awake
void GlobalNamespace::OVRTouchpadHelper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.Start
void GlobalNamespace::OVRTouchpadHelper::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.Update
void GlobalNamespace::OVRTouchpadHelper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.OnDisable
void GlobalNamespace::OVRTouchpadHelper::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.LocalTouchEventCallback
void GlobalNamespace::OVRTouchpadHelper::LocalTouchEventCallback(::GlobalNamespace::OVRTouchpad::TouchEvent touchEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::LocalTouchEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalTouchEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touchEvent);
}
// Autogenerated from CppSourceCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
// Begin includes
// Including type: OVRLipSync
#include "GlobalNamespace/OVRLipSync.hpp"
// Including type: OVRLipSync/AudioDataType
#include "GlobalNamespace/OVRLipSync_AudioDataType.hpp"
// Including type: OVRLipSync/Viseme
#include "GlobalNamespace/OVRLipSync_Viseme.hpp"
// Including type: OVRLipSync/Signals
#include "GlobalNamespace/OVRLipSync_Signals.hpp"
// Including type: OVRLipSync/ContextProviders
#include "GlobalNamespace/OVRLipSync_ContextProviders.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 VisemeCount
int GlobalNamespace::OVRLipSync::_get_VisemeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_VisemeCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRLipSync", "VisemeCount"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 VisemeCount
void GlobalNamespace::OVRLipSync::_set_VisemeCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_VisemeCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "VisemeCount", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 SignalCount
int GlobalNamespace::OVRLipSync::_get_SignalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_SignalCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRLipSync", "SignalCount"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 SignalCount
void GlobalNamespace::OVRLipSync::_set_SignalCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_SignalCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "SignalCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.String strOVRLS
::StringW GlobalNamespace::OVRLipSync::_get_strOVRLS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_strOVRLS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRLipSync", "strOVRLS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOVRLS
void GlobalNamespace::OVRLipSync::_set_strOVRLS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_strOVRLS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "strOVRLS", value));
}
// Autogenerated static field getter
// Get static field: static private OVRLipSync/Result sInitialized
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::_get_sInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_sInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync", "sInitialized"));
}
// Autogenerated static field setter
// Set static field: static private OVRLipSync/Result sInitialized
void GlobalNamespace::OVRLipSync::_set_sInitialized(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_sInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "sInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync sInstance
::GlobalNamespace::OVRLipSync* GlobalNamespace::OVRLipSync::_get_sInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_sInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync*>("", "OVRLipSync", "sInstance"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync sInstance
void GlobalNamespace::OVRLipSync::_set_sInstance(::GlobalNamespace::OVRLipSync* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_sInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "sInstance", value));
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_Initialize
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_Initialize(int samplerate, int buffersize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samplerate), ::il2cpp_utils::ExtractType(buffersize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, samplerate, buffersize);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_Shutdown
void GlobalNamespace::OVRLipSync::ovrLipSyncDll_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_GetVersion
::System::IntPtr GlobalNamespace::OVRLipSync::ovrLipSyncDll_GetVersion(ByRef<int> Major, ByRef<int> Minor, ByRef<int> Patch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Major), ::il2cpp_utils::ExtractType(Minor), ::il2cpp_utils::ExtractType(Patch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(Major), byref(Minor), byref(Patch));
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_CreateContextEx
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextEx(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_CreateContextEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_CreateContextWithModelFile
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextWithModelFile(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, ::StringW modelPath, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextWithModelFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_CreateContextWithModelFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(modelPath), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, modelPath, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_DestroyContext
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_DestroyContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_DestroyContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_DestroyContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_ResetContext
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_ResetContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_ResetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_ResetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_SendSignal
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_SendSignal(uint context, ::GlobalNamespace::OVRLipSync::Signals signal, int arg1, int arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_SendSignal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_SendSignal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(signal), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, signal, arg1, arg2);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_ProcessFrameEx
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_ProcessFrameEx(uint context, ::System::IntPtr audioBuffer, uint bufferSize, ::GlobalNamespace::OVRLipSync::AudioDataType dataType, ByRef<int> frameNumber, ByRef<int> frameDelay, ::ArrayW<float> visemes, int visemeCount, ByRef<float> laughterScore, ::ArrayW<float> laughterCategories, int laughterCategoriesLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_ProcessFrameEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_ProcessFrameEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(dataType), ::il2cpp_utils::ExtractType(frameNumber), ::il2cpp_utils::ExtractType(frameDelay), ::il2cpp_utils::ExtractType(visemes), ::il2cpp_utils::ExtractType(visemeCount), ::il2cpp_utils::ExtractType(laughterScore), ::il2cpp_utils::ExtractType(laughterCategories), ::il2cpp_utils::ExtractType(laughterCategoriesLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, audioBuffer, bufferSize, dataType, byref(frameNumber), byref(frameDelay), visemes, visemeCount, byref(laughterScore), laughterCategories, laughterCategoriesLength);
}
// Autogenerated method: OVRLipSync.Awake
void GlobalNamespace::OVRLipSync::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSync.OnDestroy
void GlobalNamespace::OVRLipSync::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSync.Initialize
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.Initialize
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Initialize(int sampleRate, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sampleRate, bufferSize);
}
// Autogenerated method: OVRLipSync.Shutdown
void GlobalNamespace::OVRLipSync::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.IsInitialized
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.CreateContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::CreateContext(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::CreateContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "CreateContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.CreateContextWithModelFile
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::CreateContextWithModelFile(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, ::StringW modelPath, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::CreateContextWithModelFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "CreateContextWithModelFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(modelPath), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, modelPath, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.DestroyContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::DestroyContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::DestroyContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "DestroyContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.ResetContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::ResetContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ResetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ResetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.SendSignal
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::SendSignal(uint context, ::GlobalNamespace::OVRLipSync::Signals signal, int arg1, int arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::SendSignal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "SendSignal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(signal), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, signal, arg1, arg2);
}
// Autogenerated method: OVRLipSync.ProcessFrame
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::ProcessFrame(uint context, ::ArrayW<float> audioBuffer, ::GlobalNamespace::OVRLipSync::Frame* frame, bool stereo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ProcessFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(stereo)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, audioBuffer, frame, stereo);
}
// Autogenerated method: OVRLipSync.ProcessFrame
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::ProcessFrame(uint context, ::ArrayW<int16_t> audioBuffer, ::GlobalNamespace::OVRLipSync::Frame* frame, bool stereo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ProcessFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(stereo)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, audioBuffer, frame, stereo);
}
// Autogenerated method: OVRLipSync..cctor
void GlobalNamespace::OVRLipSync::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
