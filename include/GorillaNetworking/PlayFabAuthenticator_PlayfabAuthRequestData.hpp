// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaNetworking.PlayFabAuthenticator
#include "GorillaNetworking/PlayFabAuthenticator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::PlayFabAuthenticator::PlayfabAuthRequestData);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::PlayFabAuthenticator::PlayfabAuthRequestData*, "GorillaNetworking", "PlayFabAuthenticator/PlayfabAuthRequestData");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.PlayFabAuthenticator/PlayfabAuthRequestData
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayFabAuthenticator::PlayfabAuthRequestData : public ::Il2CppObject {
    public:
    public:
    // public System.String CustomId
    // Size: 0x8
    // Offset: 0x10
    ::StringW CustomId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String AppId
    // Size: 0x8
    // Offset: 0x18
    ::StringW AppId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String AppVersion
    // Size: 0x8
    // Offset: 0x20
    ::StringW AppVersion;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String Nonce
    // Size: 0x8
    // Offset: 0x28
    ::StringW Nonce;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String OculusId
    // Size: 0x8
    // Offset: 0x30
    ::StringW OculusId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String Platform
    // Size: 0x8
    // Offset: 0x38
    ::StringW Platform;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.String CustomId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_CustomId();
    // Get instance field reference: public System.String AppId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_AppId();
    // Get instance field reference: public System.String AppVersion
    [[deprecated("Use field access instead!")]] ::StringW& dyn_AppVersion();
    // Get instance field reference: public System.String Nonce
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Nonce();
    // Get instance field reference: public System.String OculusId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OculusId();
    // Get instance field reference: public System.String Platform
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Platform();
    // public System.Void .ctor()
    // Offset: 0x285E1B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayFabAuthenticator::PlayfabAuthRequestData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::PlayfabAuthRequestData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayFabAuthenticator::PlayfabAuthRequestData*, creationType>()));
    }
  }; // GorillaNetworking.PlayFabAuthenticator/PlayfabAuthRequestData
  #pragma pack(pop)
  static check_size<sizeof(PlayFabAuthenticator::PlayfabAuthRequestData), 56 + sizeof(::StringW)> __GorillaNetworking_PlayFabAuthenticator_PlayfabAuthRequestDataSizeCheck;
  static_assert(sizeof(PlayFabAuthenticator::PlayfabAuthRequestData) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::PlayFabAuthenticator::PlayfabAuthRequestData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
