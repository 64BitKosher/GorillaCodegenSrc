// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaNetworking.Store.BundleManager
#include "GorillaNetworking/Store/BundleManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaNetworking::Store
namespace GorillaNetworking::Store {
  // Forward declaring type: EndCapSpawnPoint
  class EndCapSpawnPoint;
  // Forward declaring type: BundleStand
  class BundleStand;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerable
  class IEnumerable;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::Store::BundleManager::BundleStandSpawn);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::Store::BundleManager::BundleStandSpawn*, "GorillaNetworking.Store", "BundleManager/BundleStandSpawn");
// Type namespace: GorillaNetworking.Store
namespace GorillaNetworking::Store {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.Store.BundleManager/BundleStandSpawn
  // [TokenAttribute] Offset: FFFFFFFF
  class BundleManager::BundleStandSpawn : public ::Il2CppObject {
    public:
    // Nested type: ::GorillaNetworking::Store::BundleManager::BundleStandSpawn::$$c
    class $$c;
    public:
    // public GorillaNetworking.Store.EndCapSpawnPoint spawnLocation
    // Size: 0x8
    // Offset: 0x10
    ::GorillaNetworking::Store::EndCapSpawnPoint* spawnLocation;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::Store::EndCapSpawnPoint*) == 0x8);
    // public GorillaNetworking.Store.BundleStand bundleStand
    // Size: 0x8
    // Offset: 0x18
    ::GorillaNetworking::Store::BundleStand* bundleStand;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::Store::BundleStand*) == 0x8);
    public:
    // Get instance field reference: public GorillaNetworking.Store.EndCapSpawnPoint spawnLocation
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::Store::EndCapSpawnPoint*& dyn_spawnLocation();
    // Get instance field reference: public GorillaNetworking.Store.BundleStand bundleStand
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::Store::BundleStand*& dyn_bundleStand();
    // static private System.Collections.IEnumerable GetEndCapSpawnPoints()
    // Offset: 0x2864B74
    static ::System::Collections::IEnumerable* GetEndCapSpawnPoints();
    // public System.Void .ctor()
    // Offset: 0x2864CB4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BundleManager::BundleStandSpawn* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::Store::BundleManager::BundleStandSpawn::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BundleManager::BundleStandSpawn*, creationType>()));
    }
  }; // GorillaNetworking.Store.BundleManager/BundleStandSpawn
  #pragma pack(pop)
  static check_size<sizeof(BundleManager::BundleStandSpawn), 24 + sizeof(::GorillaNetworking::Store::BundleStand*)> __GorillaNetworking_Store_BundleManager_BundleStandSpawnSizeCheck;
  static_assert(sizeof(BundleManager::BundleStandSpawn) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::BundleStandSpawn::GetEndCapSpawnPoints
// Il2CppName: GetEndCapSpawnPoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerable* (*)()>(&GorillaNetworking::Store::BundleManager::BundleStandSpawn::GetEndCapSpawnPoints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager::BundleStandSpawn*), "GetEndCapSpawnPoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::BundleStandSpawn::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
