// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaPressableButton
#include "GlobalNamespace/GorillaPressableButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaNetworking::Store
namespace GorillaNetworking::Store {
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: GorillaNetworking.Store
namespace GorillaNetworking::Store {
  // Forward declaring type: BundlePurchaseButton
  class BundlePurchaseButton;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::Store::BundlePurchaseButton);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::Store::BundlePurchaseButton*, "GorillaNetworking.Store", "BundlePurchaseButton");
// Type namespace: GorillaNetworking.Store
namespace GorillaNetworking::Store {
  // Size: 0x98
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.Store.BundlePurchaseButton
  // [TokenAttribute] Offset: FFFFFFFF
  class BundlePurchaseButton : public ::GlobalNamespace::GorillaPressableButton {
    public:
    // Nested type: ::GorillaNetworking::Store::BundlePurchaseButton::$ButtonColorUpdate$d__9
    class $ButtonColorUpdate$d__9;
    public:
    // public System.Boolean bError
    // Size: 0x1
    // Offset: 0x70
    bool bError;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: bError and: ErrorText
    char __padding0[0x7] = {};
    // public System.String ErrorText
    // Size: 0x8
    // Offset: 0x78
    ::StringW ErrorText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String AlreadyOwnText
    // Size: 0x8
    // Offset: 0x80
    ::StringW AlreadyOwnText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String UnavailableText
    // Size: 0x8
    // Offset: 0x88
    ::StringW UnavailableText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String playfabID
    // Size: 0x8
    // Offset: 0x90
    ::StringW playfabID;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.Boolean bError
    [[deprecated("Use field access instead!")]] bool& dyn_bError();
    // Get instance field reference: public System.String ErrorText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ErrorText();
    // Get instance field reference: public System.String AlreadyOwnText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_AlreadyOwnText();
    // Get instance field reference: public System.String UnavailableText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_UnavailableText();
    // Get instance field reference: public System.String playfabID
    [[deprecated("Use field access instead!")]] ::StringW& dyn_playfabID();
    // public System.Void Update()
    // Offset: 0x2864FC8
    void Update();
    // public System.Void AlreadyOwn()
    // Offset: 0x2865210
    void AlreadyOwn();
    // public System.Void ResetButton()
    // Offset: 0x28652D4
    void ResetButton();
    // private System.Collections.IEnumerator ButtonColorUpdate()
    // Offset: 0x28651A4
    ::System::Collections::IEnumerator* ButtonColorUpdate();
    // public System.Void ErrorHappened()
    // Offset: 0x28653A8
    void ErrorHappened();
    // public System.Void InitializeData()
    // Offset: 0x2865428
    void InitializeData();
    // public System.Void UpdatePurchaseButtonText(System.String purchaseText)
    // Offset: 0x2865488
    void UpdatePurchaseButtonText(::StringW purchaseText);
    // public override System.Void ButtonActivation()
    // Offset: 0x286510C
    // Implemented from: GorillaPressableButton
    // Base method: System.Void GorillaPressableButton::ButtonActivation()
    void ButtonActivation();
    // public System.Void .ctor()
    // Offset: 0x28654BC
    // Implemented from: GorillaPressableButton
    // Base method: System.Void GorillaPressableButton::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BundlePurchaseButton* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::Store::BundlePurchaseButton::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BundlePurchaseButton*, creationType>()));
    }
  }; // GorillaNetworking.Store.BundlePurchaseButton
  #pragma pack(pop)
  static check_size<sizeof(BundlePurchaseButton), 144 + sizeof(::StringW)> __GorillaNetworking_Store_BundlePurchaseButtonSizeCheck;
  static_assert(sizeof(BundlePurchaseButton) == 0x98);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::Store::BundlePurchaseButton::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundlePurchaseButton::*)()>(&GorillaNetworking::Store::BundlePurchaseButton::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundlePurchaseButton*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundlePurchaseButton::AlreadyOwn
// Il2CppName: AlreadyOwn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundlePurchaseButton::*)()>(&GorillaNetworking::Store::BundlePurchaseButton::AlreadyOwn)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundlePurchaseButton*), "AlreadyOwn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundlePurchaseButton::ResetButton
// Il2CppName: ResetButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundlePurchaseButton::*)()>(&GorillaNetworking::Store::BundlePurchaseButton::ResetButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundlePurchaseButton*), "ResetButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundlePurchaseButton::ButtonColorUpdate
// Il2CppName: ButtonColorUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GorillaNetworking::Store::BundlePurchaseButton::*)()>(&GorillaNetworking::Store::BundlePurchaseButton::ButtonColorUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundlePurchaseButton*), "ButtonColorUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundlePurchaseButton::ErrorHappened
// Il2CppName: ErrorHappened
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundlePurchaseButton::*)()>(&GorillaNetworking::Store::BundlePurchaseButton::ErrorHappened)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundlePurchaseButton*), "ErrorHappened", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundlePurchaseButton::InitializeData
// Il2CppName: InitializeData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundlePurchaseButton::*)()>(&GorillaNetworking::Store::BundlePurchaseButton::InitializeData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundlePurchaseButton*), "InitializeData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundlePurchaseButton::UpdatePurchaseButtonText
// Il2CppName: UpdatePurchaseButtonText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundlePurchaseButton::*)(::StringW)>(&GorillaNetworking::Store::BundlePurchaseButton::UpdatePurchaseButtonText)> {
  static const MethodInfo* get() {
    static auto* purchaseText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundlePurchaseButton*), "UpdatePurchaseButtonText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{purchaseText});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundlePurchaseButton::ButtonActivation
// Il2CppName: ButtonActivation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundlePurchaseButton::*)()>(&GorillaNetworking::Store::BundlePurchaseButton::ButtonActivation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundlePurchaseButton*), "ButtonActivation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundlePurchaseButton::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
