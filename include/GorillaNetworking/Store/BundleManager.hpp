// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaNetworking::Store
namespace GorillaNetworking::Store {
  // Forward declaring type: StoreBundleData
  class StoreBundleData;
  // Forward declaring type: StoreBundle
  class StoreBundle;
  // Forward declaring type: SpawnedBundle
  class SpawnedBundle;
  // Forward declaring type: BundleStand
  class BundleStand;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: TryOnBundlesStand
  class TryOnBundlesStand;
  // Forward declaring type: TryOnBundleButton
  class TryOnBundleButton;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerable
  class IEnumerable;
}
// Forward declaring namespace: Oculus::Platform
namespace Oculus::Platform {
  // Forward declaring type: Message`1<T>
  template<typename T>
  class Message_1;
}
// Forward declaring namespace: Oculus::Platform::Models
namespace Oculus::Platform::Models {
  // Forward declaring type: ProductList
  class ProductList;
}
// Completed forward declares
// Type namespace: GorillaNetworking.Store
namespace GorillaNetworking::Store {
  // Forward declaring type: BundleManager
  class BundleManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::Store::BundleManager);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::Store::BundleManager*, "GorillaNetworking.Store", "BundleManager");
// Type namespace: GorillaNetworking.Store
namespace GorillaNetworking::Store {
  // Size: 0x88
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.Store.BundleManager
  // [TokenAttribute] Offset: FFFFFFFF
  class BundleManager : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GorillaNetworking::Store::BundleManager::BundleStandSpawn
    class BundleStandSpawn;
    // Nested type: ::GorillaNetworking::Store::BundleManager::$$c__DisplayClass28_0
    class $$c__DisplayClass28_0;
    public:
    // public TryOnBundlesStand _tryOnBundlesStand
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::TryOnBundlesStand* tryOnBundlesStand;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::TryOnBundlesStand*) == 0x8);
    // private GorillaNetworking.Store.StoreBundleData nullBundleData
    // Size: 0x8
    // Offset: 0x28
    ::GorillaNetworking::Store::StoreBundleData* nullBundleData;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::Store::StoreBundleData*) == 0x8);
    // private System.Collections.Generic.List`1<GorillaNetworking.Store.StoreBundleData> _bundleScriptableObjects
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::List_1<::GorillaNetworking::Store::StoreBundleData*>* bundleScriptableObjects;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::Store::StoreBundleData*>*) == 0x8);
    // private System.Collections.Generic.List`1<GorillaNetworking.Store.StoreBundle> _storeBundles
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::List_1<::GorillaNetworking::Store::StoreBundle*>* storeBundles;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::Store::StoreBundle*>*) == 0x8);
    // private System.Collections.Generic.List`1<GorillaNetworking.Store.SpawnedBundle> _spawnedBundleStands
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::List_1<::GorillaNetworking::Store::SpawnedBundle*>* spawnedBundleStands;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::Store::SpawnedBundle*>*) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.String,GorillaNetworking.Store.StoreBundle> storeBundlesById
    // Size: 0x8
    // Offset: 0x48
    ::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaNetworking::Store::StoreBundle*>* storeBundlesById;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaNetworking::Store::StoreBundle*>*) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.String,GorillaNetworking.Store.StoreBundle> storeBundlesBySKU
    // Size: 0x8
    // Offset: 0x50
    ::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaNetworking::Store::StoreBundle*>* storeBundlesBySKU;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaNetworking::Store::StoreBundle*>*) == 0x8);
    // private System.Collections.Generic.List`1<GorillaNetworking.Store.BundleManager/BundleStandSpawn> BundleStands
    // Size: 0x8
    // Offset: 0x58
    ::System::Collections::Generic::List_1<::GorillaNetworking::Store::BundleManager::BundleStandSpawn*>* BundleStands;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::Store::BundleManager::BundleStandSpawn*>*) == 0x8);
    // private GorillaNetworking.Store.StoreBundleData tryOnBundleButton1
    // Size: 0x8
    // Offset: 0x60
    ::GorillaNetworking::Store::StoreBundleData* tryOnBundleButton1;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::Store::StoreBundleData*) == 0x8);
    // private GorillaNetworking.Store.StoreBundleData tryOnBundleButton2
    // Size: 0x8
    // Offset: 0x68
    ::GorillaNetworking::Store::StoreBundleData* tryOnBundleButton2;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::Store::StoreBundleData*) == 0x8);
    // private GorillaNetworking.Store.StoreBundleData tryOnBundleButton3
    // Size: 0x8
    // Offset: 0x70
    ::GorillaNetworking::Store::StoreBundleData* tryOnBundleButton3;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::Store::StoreBundleData*) == 0x8);
    // private GorillaNetworking.Store.StoreBundleData tryOnBundleButton4
    // Size: 0x8
    // Offset: 0x78
    ::GorillaNetworking::Store::StoreBundleData* tryOnBundleButton4;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::Store::StoreBundleData*) == 0x8);
    // private GorillaNetworking.Store.StoreBundleData tryOnBundleButton5
    // Size: 0x8
    // Offset: 0x80
    ::GorillaNetworking::Store::StoreBundleData* tryOnBundleButton5;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::Store::StoreBundleData*) == 0x8);
    public:
    // Get static field: static public GorillaNetworking.Store.BundleManager instance
    static ::GorillaNetworking::Store::BundleManager* _get_instance();
    // Set static field: static public GorillaNetworking.Store.BundleManager instance
    static void _set_instance(::GorillaNetworking::Store::BundleManager* value);
    // Get instance field reference: public TryOnBundlesStand _tryOnBundlesStand
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::TryOnBundlesStand*& dyn__tryOnBundlesStand();
    // Get instance field reference: private GorillaNetworking.Store.StoreBundleData nullBundleData
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::Store::StoreBundleData*& dyn_nullBundleData();
    // Get instance field reference: private System.Collections.Generic.List`1<GorillaNetworking.Store.StoreBundleData> _bundleScriptableObjects
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::Store::StoreBundleData*>*& dyn__bundleScriptableObjects();
    // Get instance field reference: private System.Collections.Generic.List`1<GorillaNetworking.Store.StoreBundle> _storeBundles
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::Store::StoreBundle*>*& dyn__storeBundles();
    // Get instance field reference: private System.Collections.Generic.List`1<GorillaNetworking.Store.SpawnedBundle> _spawnedBundleStands
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::Store::SpawnedBundle*>*& dyn__spawnedBundleStands();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,GorillaNetworking.Store.StoreBundle> storeBundlesById
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaNetworking::Store::StoreBundle*>*& dyn_storeBundlesById();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,GorillaNetworking.Store.StoreBundle> storeBundlesBySKU
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaNetworking::Store::StoreBundle*>*& dyn_storeBundlesBySKU();
    // Get instance field reference: private System.Collections.Generic.List`1<GorillaNetworking.Store.BundleManager/BundleStandSpawn> BundleStands
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::Store::BundleManager::BundleStandSpawn*>*& dyn_BundleStands();
    // Get instance field reference: private GorillaNetworking.Store.StoreBundleData tryOnBundleButton1
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::Store::StoreBundleData*& dyn_tryOnBundleButton1();
    // Get instance field reference: private GorillaNetworking.Store.StoreBundleData tryOnBundleButton2
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::Store::StoreBundleData*& dyn_tryOnBundleButton2();
    // Get instance field reference: private GorillaNetworking.Store.StoreBundleData tryOnBundleButton3
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::Store::StoreBundleData*& dyn_tryOnBundleButton3();
    // Get instance field reference: private GorillaNetworking.Store.StoreBundleData tryOnBundleButton4
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::Store::StoreBundleData*& dyn_tryOnBundleButton4();
    // Get instance field reference: private GorillaNetworking.Store.StoreBundleData tryOnBundleButton5
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::Store::StoreBundleData*& dyn_tryOnBundleButton5();
    // private System.Collections.IEnumerable GetStoreBundles()
    // Offset: 0x28611C8
    ::System::Collections::IEnumerable* GetStoreBundles();
    // public System.Void Awake()
    // Offset: 0x28612D4
    void Awake();
    // private System.Void Start()
    // Offset: 0x2861400
    void Start();
    // private System.Void Initialize()
    // Offset: 0x2861610
    void Initialize();
    // private System.Void ValidateBundleData()
    // Offset: 0x2861BE0
    void ValidateBundleData();
    // private System.Void SpawnBundleStands()
    // Offset: 0x28621B8
    void SpawnBundleStands();
    // public System.Void ClearEverything()
    // Offset: 0x286287C
    void ClearEverything();
    // public System.Void GenerateAllStoreBundleReferences()
    // Offset: 0x2862878
    void GenerateAllStoreBundleReferences();
    // private System.Void AddNewBundleStand(GorillaNetworking.Store.BundleStand bundleStand)
    // Offset: 0x2862D28
    void AddNewBundleStand(::GorillaNetworking::Store::BundleStand* bundleStand);
    // public System.Void GenerateBundleDictionaries()
    // Offset: 0x2861418
    void GenerateBundleDictionaries();
    // public System.Void GetTitleDataForBundles()
    // Offset: 0x28619B0
    void GetTitleDataForBundles();
    // private System.Void GetProductsCallback_Oculus(Oculus.Platform.Message`1<Oculus.Platform.Models.ProductList> message)
    // Offset: 0x28631C4
    void GetProductsCallback_Oculus(::Oculus::Platform::Message_1<::Oculus::Platform::Models::ProductList*>* message);
    // public System.Void BundlePurchaseButtonPressed(System.String playFabItemName)
    // Offset: 0x2863970
    void BundlePurchaseButtonPressed(::StringW playFabItemName);
    // public System.Void FixBundles()
    // Offset: 0x2863A08
    void FixBundles();
    // public GorillaNetworking.Store.StoreBundleData[] GetTryOnButtons()
    // Offset: 0x2863DC8
    ::ArrayW<::GorillaNetworking::Store::StoreBundleData*> GetTryOnButtons();
    // public System.Void NotifyBundleOfErrorByPlayFabID(System.String ItemId)
    // Offset: 0x2863F48
    void NotifyBundleOfErrorByPlayFabID(::StringW ItemId);
    // public System.Void NotifyBundleOfErrorBySKU(System.String ItemSKU)
    // Offset: 0x28640F8
    void NotifyBundleOfErrorBySKU(::StringW ItemSKU);
    // public System.Void MarkBundleOwnedByPlayFabID(System.String ItemId)
    // Offset: 0x286428C
    void MarkBundleOwnedByPlayFabID(::StringW ItemId);
    // public System.Void MarkBundleOwnedBySKU(System.String SKU)
    // Offset: 0x286447C
    void MarkBundleOwnedBySKU(::StringW SKU);
    // public System.Void CheckIfBundlesOwned()
    // Offset: 0x2864650
    void CheckIfBundlesOwned();
    // public System.Void PressTryOnBundleButton(TryOnBundleButton pressedTryOnBundleButton, System.Boolean isLeftHand)
    // Offset: 0x28648FC
    void PressTryOnBundleButton(::GlobalNamespace::TryOnBundleButton* pressedTryOnBundleButton, bool isLeftHand);
    // public System.Void PressPurchaseTryOnBundleButton()
    // Offset: 0x2864964
    void PressPurchaseTryOnBundleButton();
    // public System.Void UpdateBundlePrice(System.String productSku, System.String productFormattedPrice)
    // Offset: 0x28636B8
    void UpdateBundlePrice(::StringW productSku, ::StringW productFormattedPrice);
    // public System.Void .ctor()
    // Offset: 0x2864980
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BundleManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::Store::BundleManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BundleManager*, creationType>()));
    }
  }; // GorillaNetworking.Store.BundleManager
  #pragma pack(pop)
  static check_size<sizeof(BundleManager), 128 + sizeof(::GorillaNetworking::Store::StoreBundleData*)> __GorillaNetworking_Store_BundleManagerSizeCheck;
  static_assert(sizeof(BundleManager) == 0x88);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::GetStoreBundles
// Il2CppName: GetStoreBundles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerable* (GorillaNetworking::Store::BundleManager::*)()>(&GorillaNetworking::Store::BundleManager::GetStoreBundles)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "GetStoreBundles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)()>(&GorillaNetworking::Store::BundleManager::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)()>(&GorillaNetworking::Store::BundleManager::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)()>(&GorillaNetworking::Store::BundleManager::Initialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::ValidateBundleData
// Il2CppName: ValidateBundleData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)()>(&GorillaNetworking::Store::BundleManager::ValidateBundleData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "ValidateBundleData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::SpawnBundleStands
// Il2CppName: SpawnBundleStands
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)()>(&GorillaNetworking::Store::BundleManager::SpawnBundleStands)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "SpawnBundleStands", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::ClearEverything
// Il2CppName: ClearEverything
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)()>(&GorillaNetworking::Store::BundleManager::ClearEverything)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "ClearEverything", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::GenerateAllStoreBundleReferences
// Il2CppName: GenerateAllStoreBundleReferences
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)()>(&GorillaNetworking::Store::BundleManager::GenerateAllStoreBundleReferences)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "GenerateAllStoreBundleReferences", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::AddNewBundleStand
// Il2CppName: AddNewBundleStand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)(::GorillaNetworking::Store::BundleStand*)>(&GorillaNetworking::Store::BundleManager::AddNewBundleStand)> {
  static const MethodInfo* get() {
    static auto* bundleStand = &::il2cpp_utils::GetClassFromName("GorillaNetworking.Store", "BundleStand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "AddNewBundleStand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bundleStand});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::GenerateBundleDictionaries
// Il2CppName: GenerateBundleDictionaries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)()>(&GorillaNetworking::Store::BundleManager::GenerateBundleDictionaries)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "GenerateBundleDictionaries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::GetTitleDataForBundles
// Il2CppName: GetTitleDataForBundles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)()>(&GorillaNetworking::Store::BundleManager::GetTitleDataForBundles)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "GetTitleDataForBundles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::GetProductsCallback_Oculus
// Il2CppName: GetProductsCallback_Oculus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)(::Oculus::Platform::Message_1<::Oculus::Platform::Models::ProductList*>*)>(&GorillaNetworking::Store::BundleManager::GetProductsCallback_Oculus)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Platform.Models", "ProductList")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "GetProductsCallback_Oculus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::BundlePurchaseButtonPressed
// Il2CppName: BundlePurchaseButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)(::StringW)>(&GorillaNetworking::Store::BundleManager::BundlePurchaseButtonPressed)> {
  static const MethodInfo* get() {
    static auto* playFabItemName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "BundlePurchaseButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playFabItemName});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::FixBundles
// Il2CppName: FixBundles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)()>(&GorillaNetworking::Store::BundleManager::FixBundles)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "FixBundles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::GetTryOnButtons
// Il2CppName: GetTryOnButtons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::GorillaNetworking::Store::StoreBundleData*> (GorillaNetworking::Store::BundleManager::*)()>(&GorillaNetworking::Store::BundleManager::GetTryOnButtons)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "GetTryOnButtons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::NotifyBundleOfErrorByPlayFabID
// Il2CppName: NotifyBundleOfErrorByPlayFabID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)(::StringW)>(&GorillaNetworking::Store::BundleManager::NotifyBundleOfErrorByPlayFabID)> {
  static const MethodInfo* get() {
    static auto* ItemId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "NotifyBundleOfErrorByPlayFabID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ItemId});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::NotifyBundleOfErrorBySKU
// Il2CppName: NotifyBundleOfErrorBySKU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)(::StringW)>(&GorillaNetworking::Store::BundleManager::NotifyBundleOfErrorBySKU)> {
  static const MethodInfo* get() {
    static auto* ItemSKU = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "NotifyBundleOfErrorBySKU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ItemSKU});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::MarkBundleOwnedByPlayFabID
// Il2CppName: MarkBundleOwnedByPlayFabID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)(::StringW)>(&GorillaNetworking::Store::BundleManager::MarkBundleOwnedByPlayFabID)> {
  static const MethodInfo* get() {
    static auto* ItemId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "MarkBundleOwnedByPlayFabID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ItemId});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::MarkBundleOwnedBySKU
// Il2CppName: MarkBundleOwnedBySKU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)(::StringW)>(&GorillaNetworking::Store::BundleManager::MarkBundleOwnedBySKU)> {
  static const MethodInfo* get() {
    static auto* SKU = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "MarkBundleOwnedBySKU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{SKU});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::CheckIfBundlesOwned
// Il2CppName: CheckIfBundlesOwned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)()>(&GorillaNetworking::Store::BundleManager::CheckIfBundlesOwned)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "CheckIfBundlesOwned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::PressTryOnBundleButton
// Il2CppName: PressTryOnBundleButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)(::GlobalNamespace::TryOnBundleButton*, bool)>(&GorillaNetworking::Store::BundleManager::PressTryOnBundleButton)> {
  static const MethodInfo* get() {
    static auto* pressedTryOnBundleButton = &::il2cpp_utils::GetClassFromName("", "TryOnBundleButton")->byval_arg;
    static auto* isLeftHand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "PressTryOnBundleButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pressedTryOnBundleButton, isLeftHand});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::PressPurchaseTryOnBundleButton
// Il2CppName: PressPurchaseTryOnBundleButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)()>(&GorillaNetworking::Store::BundleManager::PressPurchaseTryOnBundleButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "PressPurchaseTryOnBundleButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::UpdateBundlePrice
// Il2CppName: UpdateBundlePrice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::BundleManager::*)(::StringW, ::StringW)>(&GorillaNetworking::Store::BundleManager::UpdateBundlePrice)> {
  static const MethodInfo* get() {
    static auto* productSku = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* productFormattedPrice = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::BundleManager*), "UpdateBundlePrice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{productSku, productFormattedPrice});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::BundleManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
