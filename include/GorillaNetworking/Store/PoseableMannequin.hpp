// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaNetworking::Store
namespace GorillaNetworking::Store {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: SkinnedMeshRenderer
  class SkinnedMeshRenderer;
  // Forward declaring type: MeshCollider
  class MeshCollider;
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: MeshFilter
  class MeshFilter;
  // Forward declaring type: MeshRenderer
  class MeshRenderer;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: AnimationClip
  class AnimationClip;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: GTPosRotConstraints
  class GTPosRotConstraints;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: GorillaNetworking.Store
namespace GorillaNetworking::Store {
  // Forward declaring type: PoseableMannequin
  class PoseableMannequin;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::Store::PoseableMannequin);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::Store::PoseableMannequin*, "GorillaNetworking.Store", "PoseableMannequin");
// Type namespace: GorillaNetworking.Store
namespace GorillaNetworking::Store {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.Store.PoseableMannequin
  // [TokenAttribute] Offset: FFFFFFFF
  class PoseableMannequin : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GorillaNetworking::Store::PoseableMannequin::$$c
    class $$c;
    // Nested type: ::GorillaNetworking::Store::PoseableMannequin::$SaveLocalPlayerPose$d__22
    class $SaveLocalPlayerPose$d__22;
    public:
    // public UnityEngine.SkinnedMeshRenderer skinnedMeshRenderer
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::SkinnedMeshRenderer* skinnedMeshRenderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::SkinnedMeshRenderer*) == 0x8);
    // public UnityEngine.MeshCollider skinnedMeshCollider
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::MeshCollider* skinnedMeshCollider;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshCollider*) == 0x8);
    // public GTPosRotConstraints[] cosmeticConstraints
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<::GlobalNamespace::GTPosRotConstraints*> cosmeticConstraints;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::GTPosRotConstraints*>) == 0x8);
    // public UnityEngine.Mesh BakedColliderMesh
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Mesh* BakedColliderMesh;
    // Field size check
    static_assert(sizeof(::UnityEngine::Mesh*) == 0x8);
    // protected System.String prefabAssetPath
    // Size: 0x8
    // Offset: 0x40
    ::StringW prefabAssetPath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // protected System.String prefabFolderPath
    // Size: 0x8
    // Offset: 0x48
    ::StringW prefabFolderPath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // protected System.String prefabAssetName
    // Size: 0x8
    // Offset: 0x50
    ::StringW prefabAssetName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.MeshFilter staticGorillaMesh
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::MeshFilter* staticGorillaMesh;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshFilter*) == 0x8);
    // public UnityEngine.MeshCollider staticGorillaMeshCollider
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::MeshCollider* staticGorillaMeshCollider;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshCollider*) == 0x8);
    // public UnityEngine.MeshRenderer staticGorillaMeshRenderer
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::MeshRenderer* staticGorillaMeshRenderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshRenderer*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.SkinnedMeshRenderer skinnedMeshRenderer
    [[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& dyn_skinnedMeshRenderer();
    // Get instance field reference: public UnityEngine.MeshCollider skinnedMeshCollider
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshCollider*& dyn_skinnedMeshCollider();
    // Get instance field reference: public GTPosRotConstraints[] cosmeticConstraints
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GTPosRotConstraints*>& dyn_cosmeticConstraints();
    // Get instance field reference: public UnityEngine.Mesh BakedColliderMesh
    [[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& dyn_BakedColliderMesh();
    // Get instance field reference: protected System.String prefabAssetPath
    [[deprecated("Use field access instead!")]] ::StringW& dyn_prefabAssetPath();
    // Get instance field reference: protected System.String prefabFolderPath
    [[deprecated("Use field access instead!")]] ::StringW& dyn_prefabFolderPath();
    // Get instance field reference: protected System.String prefabAssetName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_prefabAssetName();
    // Get instance field reference: public UnityEngine.MeshFilter staticGorillaMesh
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& dyn_staticGorillaMesh();
    // Get instance field reference: public UnityEngine.MeshCollider staticGorillaMeshCollider
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshCollider*& dyn_staticGorillaMeshCollider();
    // Get instance field reference: public UnityEngine.MeshRenderer staticGorillaMeshRenderer
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& dyn_staticGorillaMeshRenderer();
    // public System.Void Start()
    // Offset: 0x2865A30
    void Start();
    // private System.String GetPrefabPathFromCurrentPrefabStage()
    // Offset: 0x2865A80
    ::StringW GetPrefabPathFromCurrentPrefabStage();
    // private System.String GetMeshPathFromPrefabPath(System.String prefabPath)
    // Offset: 0x2865AC0
    ::StringW GetMeshPathFromPrefabPath(::StringW prefabPath);
    // public System.Void BakeSkinnedMesh()
    // Offset: 0x2865B00
    void BakeSkinnedMesh();
    // public System.Void BakeAndSaveMeshInPath(System.String meshPath)
    // Offset: 0x2865B4C
    void BakeAndSaveMeshInPath(::StringW meshPath);
    // private System.Void UpdateStaticMeshMannequin()
    // Offset: 0x2865B50
    void UpdateStaticMeshMannequin();
    // private System.Void UpdateSkinnedMeshCollider()
    // Offset: 0x2865BB8
    void UpdateSkinnedMeshCollider();
    // public System.Void UpdateGTPosRotConstraints()
    // Offset: 0x2865BDC
    void UpdateGTPosRotConstraints();
    // private System.Void HookupCosmeticConstraints()
    // Offset: 0x2865D30
    void HookupCosmeticConstraints();
    // private UnityEngine.Transform FindBone(System.String boneName)
    // Offset: 0x2865E60
    ::UnityEngine::Transform* FindBone(::StringW boneName);
    // public System.Void CreasteTestClip()
    // Offset: 0x2865EF8
    void CreasteTestClip();
    // public System.Void SerializeVRRig()
    // Offset: 0x2865EFC
    void SerializeVRRig();
    // public System.Collections.IEnumerator SaveLocalPlayerPose()
    // Offset: 0x2865F1C
    ::System::Collections::IEnumerator* SaveLocalPlayerPose();
    // public System.Void SerializeOutBonesFromSkinnedMesh(UnityEngine.SkinnedMeshRenderer paramSkinnedMeshRenderer)
    // Offset: 0x2865F9C
    void SerializeOutBonesFromSkinnedMesh(::UnityEngine::SkinnedMeshRenderer* paramSkinnedMeshRenderer);
    // public System.Void SetCurvesForBone(UnityEngine.SkinnedMeshRenderer paramSkinnedMeshRenderer, UnityEngine.AnimationClip clip, UnityEngine.Transform bone)
    // Offset: 0x2865FA0
    void SetCurvesForBone(::UnityEngine::SkinnedMeshRenderer* paramSkinnedMeshRenderer, ::UnityEngine::AnimationClip* clip, ::UnityEngine::Transform* bone);
    // public System.Void UpdatePrefabWithAnimationClip(System.String AnimationFileName)
    // Offset: 0x28665B4
    void UpdatePrefabWithAnimationClip(::StringW AnimationFileName);
    // public System.Void LoadPoseOntoMannequin(UnityEngine.AnimationClip clip, System.Single frameTime)
    // Offset: 0x28665B8
    void LoadPoseOntoMannequin(::UnityEngine::AnimationClip* clip, float frameTime);
    // public System.Void OnValidate()
    // Offset: 0x28665BC
    void OnValidate();
    // public System.Void .ctor()
    // Offset: 0x28665C0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PoseableMannequin* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::Store::PoseableMannequin::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PoseableMannequin*, creationType>()));
    }
  }; // GorillaNetworking.Store.PoseableMannequin
  #pragma pack(pop)
  static check_size<sizeof(PoseableMannequin), 104 + sizeof(::UnityEngine::MeshRenderer*)> __GorillaNetworking_Store_PoseableMannequinSizeCheck;
  static_assert(sizeof(PoseableMannequin) == 0x70);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::PoseableMannequin::*)()>(&GorillaNetworking::Store::PoseableMannequin::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::GetPrefabPathFromCurrentPrefabStage
// Il2CppName: GetPrefabPathFromCurrentPrefabStage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GorillaNetworking::Store::PoseableMannequin::*)()>(&GorillaNetworking::Store::PoseableMannequin::GetPrefabPathFromCurrentPrefabStage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "GetPrefabPathFromCurrentPrefabStage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::GetMeshPathFromPrefabPath
// Il2CppName: GetMeshPathFromPrefabPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GorillaNetworking::Store::PoseableMannequin::*)(::StringW)>(&GorillaNetworking::Store::PoseableMannequin::GetMeshPathFromPrefabPath)> {
  static const MethodInfo* get() {
    static auto* prefabPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "GetMeshPathFromPrefabPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefabPath});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::BakeSkinnedMesh
// Il2CppName: BakeSkinnedMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::PoseableMannequin::*)()>(&GorillaNetworking::Store::PoseableMannequin::BakeSkinnedMesh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "BakeSkinnedMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::BakeAndSaveMeshInPath
// Il2CppName: BakeAndSaveMeshInPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::PoseableMannequin::*)(::StringW)>(&GorillaNetworking::Store::PoseableMannequin::BakeAndSaveMeshInPath)> {
  static const MethodInfo* get() {
    static auto* meshPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "BakeAndSaveMeshInPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{meshPath});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::UpdateStaticMeshMannequin
// Il2CppName: UpdateStaticMeshMannequin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::PoseableMannequin::*)()>(&GorillaNetworking::Store::PoseableMannequin::UpdateStaticMeshMannequin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "UpdateStaticMeshMannequin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::UpdateSkinnedMeshCollider
// Il2CppName: UpdateSkinnedMeshCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::PoseableMannequin::*)()>(&GorillaNetworking::Store::PoseableMannequin::UpdateSkinnedMeshCollider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "UpdateSkinnedMeshCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::UpdateGTPosRotConstraints
// Il2CppName: UpdateGTPosRotConstraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::PoseableMannequin::*)()>(&GorillaNetworking::Store::PoseableMannequin::UpdateGTPosRotConstraints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "UpdateGTPosRotConstraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::HookupCosmeticConstraints
// Il2CppName: HookupCosmeticConstraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::PoseableMannequin::*)()>(&GorillaNetworking::Store::PoseableMannequin::HookupCosmeticConstraints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "HookupCosmeticConstraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::FindBone
// Il2CppName: FindBone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (GorillaNetworking::Store::PoseableMannequin::*)(::StringW)>(&GorillaNetworking::Store::PoseableMannequin::FindBone)> {
  static const MethodInfo* get() {
    static auto* boneName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "FindBone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{boneName});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::CreasteTestClip
// Il2CppName: CreasteTestClip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::PoseableMannequin::*)()>(&GorillaNetworking::Store::PoseableMannequin::CreasteTestClip)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "CreasteTestClip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::SerializeVRRig
// Il2CppName: SerializeVRRig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::PoseableMannequin::*)()>(&GorillaNetworking::Store::PoseableMannequin::SerializeVRRig)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "SerializeVRRig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::SaveLocalPlayerPose
// Il2CppName: SaveLocalPlayerPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GorillaNetworking::Store::PoseableMannequin::*)()>(&GorillaNetworking::Store::PoseableMannequin::SaveLocalPlayerPose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "SaveLocalPlayerPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::SerializeOutBonesFromSkinnedMesh
// Il2CppName: SerializeOutBonesFromSkinnedMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::PoseableMannequin::*)(::UnityEngine::SkinnedMeshRenderer*)>(&GorillaNetworking::Store::PoseableMannequin::SerializeOutBonesFromSkinnedMesh)> {
  static const MethodInfo* get() {
    static auto* paramSkinnedMeshRenderer = &::il2cpp_utils::GetClassFromName("UnityEngine", "SkinnedMeshRenderer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "SerializeOutBonesFromSkinnedMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramSkinnedMeshRenderer});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::SetCurvesForBone
// Il2CppName: SetCurvesForBone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::PoseableMannequin::*)(::UnityEngine::SkinnedMeshRenderer*, ::UnityEngine::AnimationClip*, ::UnityEngine::Transform*)>(&GorillaNetworking::Store::PoseableMannequin::SetCurvesForBone)> {
  static const MethodInfo* get() {
    static auto* paramSkinnedMeshRenderer = &::il2cpp_utils::GetClassFromName("UnityEngine", "SkinnedMeshRenderer")->byval_arg;
    static auto* clip = &::il2cpp_utils::GetClassFromName("UnityEngine", "AnimationClip")->byval_arg;
    static auto* bone = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "SetCurvesForBone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paramSkinnedMeshRenderer, clip, bone});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::UpdatePrefabWithAnimationClip
// Il2CppName: UpdatePrefabWithAnimationClip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::PoseableMannequin::*)(::StringW)>(&GorillaNetworking::Store::PoseableMannequin::UpdatePrefabWithAnimationClip)> {
  static const MethodInfo* get() {
    static auto* AnimationFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "UpdatePrefabWithAnimationClip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AnimationFileName});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::LoadPoseOntoMannequin
// Il2CppName: LoadPoseOntoMannequin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::PoseableMannequin::*)(::UnityEngine::AnimationClip*, float)>(&GorillaNetworking::Store::PoseableMannequin::LoadPoseOntoMannequin)> {
  static const MethodInfo* get() {
    static auto* clip = &::il2cpp_utils::GetClassFromName("UnityEngine", "AnimationClip")->byval_arg;
    static auto* frameTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "LoadPoseOntoMannequin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clip, frameTime});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::OnValidate
// Il2CppName: OnValidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::Store::PoseableMannequin::*)()>(&GorillaNetworking::Store::PoseableMannequin::OnValidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::Store::PoseableMannequin*), "OnValidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::Store::PoseableMannequin::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
