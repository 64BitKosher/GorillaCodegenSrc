// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaNetworking.GorillaServer
#include "GorillaNetworking/GorillaServer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: PlayFab
namespace PlayFab {
  // Forward declaring type: PlayFabError
  class PlayFabError;
}
// Forward declaring namespace: PlayFab::CloudScriptModels
namespace PlayFab::CloudScriptModels {
  // Forward declaring type: ExecuteFunctionResult
  class ExecuteFunctionResult;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::GorillaServer::$$c__DisplayClass16_0);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::GorillaServer::$$c__DisplayClass16_0*, "GorillaNetworking", "GorillaServer/<>c__DisplayClass16_0");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.GorillaServer/<>c__DisplayClass16_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class GorillaServer::$$c__DisplayClass16_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Action`1<System.Collections.Generic.Dictionary`2<System.String,System.String>> successCallback
    // Size: 0x8
    // Offset: 0x10
    ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* successCallback;
    // Field size check
    static_assert(sizeof(::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>*) == 0x8);
    // public System.Action`1<PlayFab.PlayFabError> errorCallback
    // Size: 0x8
    // Offset: 0x18
    ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback;
    // Field size check
    static_assert(sizeof(::System::Action_1<::PlayFab::PlayFabError*>*) == 0x8);
    public:
    // Get instance field reference: public System.Action`1<System.Collections.Generic.Dictionary`2<System.String,System.String>> successCallback
    [[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>*& dyn_successCallback();
    // Get instance field reference: public System.Action`1<PlayFab.PlayFabError> errorCallback
    [[deprecated("Use field access instead!")]] ::System::Action_1<::PlayFab::PlayFabError*>*& dyn_errorCallback();
    // public System.Void .ctor()
    // Offset: 0x2855F10
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaServer::$$c__DisplayClass16_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaServer::$$c__DisplayClass16_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaServer::$$c__DisplayClass16_0*, creationType>()));
    }
    // System.Void <GetAcceptedAgreements>b__0(PlayFab.CloudScriptModels.ExecuteFunctionResult result)
    // Offset: 0x2857230
    void $GetAcceptedAgreements$b__0(::PlayFab::CloudScriptModels::ExecuteFunctionResult* result);
  }; // GorillaNetworking.GorillaServer/<>c__DisplayClass16_0
  #pragma pack(pop)
  static check_size<sizeof(GorillaServer::$$c__DisplayClass16_0), 24 + sizeof(::System::Action_1<::PlayFab::PlayFabError*>*)> __GorillaNetworking_GorillaServer_$$c__DisplayClass16_0SizeCheck;
  static_assert(sizeof(GorillaServer::$$c__DisplayClass16_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::GorillaServer::$$c__DisplayClass16_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaNetworking::GorillaServer::$$c__DisplayClass16_0::$GetAcceptedAgreements$b__0
// Il2CppName: <GetAcceptedAgreements>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::GorillaServer::$$c__DisplayClass16_0::*)(::PlayFab::CloudScriptModels::ExecuteFunctionResult*)>(&GorillaNetworking::GorillaServer::$$c__DisplayClass16_0::$GetAcceptedAgreements$b__0)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.CloudScriptModels", "ExecuteFunctionResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::GorillaServer::$$c__DisplayClass16_0*), "<GetAcceptedAgreements>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
