// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaNetworking.CosmeticsController
#include "GorillaNetworking/CosmeticsController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaNetworking
namespace GorillaNetworking {
  // Forward declaring type: CosmeticItemRegistry
  class CosmeticItemRegistry;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: NetPlayer
  class NetPlayer;
  // Forward declaring type: BodyDockPositions
  class BodyDockPositions;
  // Forward declaring type: VRRig
  class VRRig;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::CosmeticsController::CosmeticSet);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::CosmeticsController::CosmeticSet*, "GorillaNetworking", "CosmeticsController/CosmeticSet");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.CosmeticsController/CosmeticSet
  // [TokenAttribute] Offset: FFFFFFFF
  class CosmeticsController::CosmeticSet : public ::Il2CppObject {
    public:
    // Nested type: ::GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler
    class OnSetActivatedHandler;
    // Nested type: ::GorillaNetworking::CosmeticsController::CosmeticSet::$$c__DisplayClass24_0
    class $$c__DisplayClass24_0;
    public:
    // public GorillaNetworking.CosmeticsController/CosmeticItem[] items
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::GorillaNetworking::CosmeticsController::CosmeticItem> items;
    // Field size check
    static_assert(sizeof(::ArrayW<::GorillaNetworking::CosmeticsController::CosmeticItem>) == 0x8);
    // private GorillaNetworking.CosmeticsController/CosmeticSet/OnSetActivatedHandler onSetActivatedEvent
    // Size: 0x8
    // Offset: 0x18
    ::GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler* onSetActivatedEvent;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler*) == 0x8);
    // public System.String[] returnArray
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::StringW> returnArray;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    public:
    // Get instance field reference: public GorillaNetworking.CosmeticsController/CosmeticItem[] items
    [[deprecated("Use field access instead!")]] ::ArrayW<::GorillaNetworking::CosmeticsController::CosmeticItem>& dyn_items();
    // Get instance field reference: private GorillaNetworking.CosmeticsController/CosmeticSet/OnSetActivatedHandler onSetActivatedEvent
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler*& dyn_onSetActivatedEvent();
    // Get instance field reference: public System.String[] returnArray
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_returnArray();
    // public System.Void add_onSetActivatedEvent(GorillaNetworking.CosmeticsController/CosmeticSet/OnSetActivatedHandler value)
    // Offset: 0x283E75C
    void add_onSetActivatedEvent(::GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler* value);
    // public System.Void remove_onSetActivatedEvent(GorillaNetworking.CosmeticsController/CosmeticSet/OnSetActivatedHandler value)
    // Offset: 0x283E7F8
    void remove_onSetActivatedEvent(::GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler* value);
    // protected System.Void OnSetActivated(GorillaNetworking.CosmeticsController/CosmeticSet prevSet, GorillaNetworking.CosmeticsController/CosmeticSet currentSet, NetPlayer netPlayer)
    // Offset: 0x283E894
    void OnSetActivated(::GorillaNetworking::CosmeticsController::CosmeticSet* prevSet, ::GorillaNetworking::CosmeticsController::CosmeticSet* currentSet, ::GlobalNamespace::NetPlayer* netPlayer);
    // public System.Void .ctor()
    // Offset: 0x283D9B0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CosmeticsController::CosmeticSet* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::CosmeticSet::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CosmeticsController::CosmeticSet*, creationType>()));
    }
    // public System.Void .ctor(System.String[] itemNames, GorillaNetworking.CosmeticsController controller)
    // Offset: 0x283E8B0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CosmeticsController::CosmeticSet* New_ctor(::ArrayW<::StringW> itemNames, ::GorillaNetworking::CosmeticsController* controller) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::CosmeticSet::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CosmeticsController::CosmeticSet*, creationType>(itemNames, controller)));
    }
    // public System.Void CopyItems(GorillaNetworking.CosmeticsController/CosmeticSet other)
    // Offset: 0x28362F8
    void CopyItems(::GorillaNetworking::CosmeticsController::CosmeticSet* other);
    // public System.Void MergeSets(GorillaNetworking.CosmeticsController/CosmeticSet tryOn, GorillaNetworking.CosmeticsController/CosmeticSet current)
    // Offset: 0x283EA18
    void MergeSets(::GorillaNetworking::CosmeticsController::CosmeticSet* tryOn, ::GorillaNetworking::CosmeticsController::CosmeticSet* current);
    // public System.Void ClearSet(GorillaNetworking.CosmeticsController/CosmeticItem nullItem)
    // Offset: 0x2838938
    void ClearSet(::GorillaNetworking::CosmeticsController::CosmeticItem nullItem);
    // public System.Boolean IsActive(System.String name)
    // Offset: 0x2839E6C
    bool IsActive(::StringW name);
    // public System.Boolean HasItemOfCategory(GorillaNetworking.CosmeticsController/CosmeticCategory category)
    // Offset: 0x283EB64
    bool HasItemOfCategory(::GorillaNetworking::CosmeticsController::CosmeticCategory category);
    // public System.Boolean HasItem(System.String name)
    // Offset: 0x283EBC8
    bool HasItem(::StringW name);
    // static public System.Boolean IsSlotLeftHanded(GorillaNetworking.CosmeticsController/CosmeticSlots slot)
    // Offset: 0x28328FC
    static bool IsSlotLeftHanded(::GorillaNetworking::CosmeticsController::CosmeticSlots slot);
    // static public System.Boolean IsSlotRightHanded(GorillaNetworking.CosmeticsController/CosmeticSlots slot)
    // Offset: 0x283291C
    static bool IsSlotRightHanded(::GorillaNetworking::CosmeticsController::CosmeticSlots slot);
    // static public System.Boolean IsHoldable(GorillaNetworking.CosmeticsController/CosmeticItem item)
    // Offset: 0x283EC50
    static bool IsHoldable(::GorillaNetworking::CosmeticsController::CosmeticItem item);
    // static public GorillaNetworking.CosmeticsController/CosmeticSlots OppositeSlot(GorillaNetworking.CosmeticsController/CosmeticSlots slot)
    // Offset: 0x2835EFC
    static ::GorillaNetworking::CosmeticsController::CosmeticSlots OppositeSlot(::GorillaNetworking::CosmeticsController::CosmeticSlots slot);
    // static public System.String SlotPlayerPreferenceName(GorillaNetworking.CosmeticsController/CosmeticSlots slot)
    // Offset: 0x2835514
    static ::StringW SlotPlayerPreferenceName(::GorillaNetworking::CosmeticsController::CosmeticSlots slot);
    // private System.Void ActivateHoldable(GorillaNetworking.CosmeticsController/CosmeticSet prevSet, System.Int32 cosmeticIdx, GorillaNetworking.CosmeticItemRegistry cosmeticsObjectRegistry, BodyDockPositions bDock, GorillaNetworking.CosmeticsController/CosmeticItem nullItem)
    // Offset: 0x283EC5C
    void ActivateHoldable(::GorillaNetworking::CosmeticsController::CosmeticSet* prevSet, int cosmeticIdx, ::GorillaNetworking::CosmeticItemRegistry* cosmeticsObjectRegistry, ::GlobalNamespace::BodyDockPositions* bDock, ::GorillaNetworking::CosmeticsController::CosmeticItem nullItem);
    // private System.Void ActivateCosmeticItem(GorillaNetworking.CosmeticsController/CosmeticSet prevSet, VRRig rig, System.Int32 cosmeticIdx, GorillaNetworking.CosmeticItemRegistry cosmeticsObjectRegistry, BodyDockPositions bDock, GorillaNetworking.CosmeticsController/CosmeticItem nullItem)
    // Offset: 0x283EE2C
    void ActivateCosmeticItem(::GorillaNetworking::CosmeticsController::CosmeticSet* prevSet, ::GlobalNamespace::VRRig* rig, int cosmeticIdx, ::GorillaNetworking::CosmeticItemRegistry* cosmeticsObjectRegistry, ::GlobalNamespace::BodyDockPositions* bDock, ::GorillaNetworking::CosmeticsController::CosmeticItem nullItem);
    // public System.Void ActivateCosmetics(GorillaNetworking.CosmeticsController/CosmeticSet prevSet, VRRig rig, BodyDockPositions bDock, GorillaNetworking.CosmeticsController/CosmeticItem nullItem, GorillaNetworking.CosmeticItemRegistry cosmeticsObjectRegistry)
    // Offset: 0x28363B4
    void ActivateCosmetics(::GorillaNetworking::CosmeticsController::CosmeticSet* prevSet, ::GlobalNamespace::VRRig* rig, ::GlobalNamespace::BodyDockPositions* bDock, ::GorillaNetworking::CosmeticsController::CosmeticItem nullItem, ::GorillaNetworking::CosmeticItemRegistry* cosmeticsObjectRegistry);
    // public System.Void DeactivateAllCosmetcs(BodyDockPositions bDock, GorillaNetworking.CosmeticsController/CosmeticItem nullItem, GorillaNetworking.CosmeticItemRegistry cosmeticObjectRegistry)
    // Offset: 0x283F084
    void DeactivateAllCosmetcs(::GlobalNamespace::BodyDockPositions* bDock, ::GorillaNetworking::CosmeticsController::CosmeticItem nullItem, ::GorillaNetworking::CosmeticItemRegistry* cosmeticObjectRegistry);
    // public System.Void LoadFromPlayerPreferences(GorillaNetworking.CosmeticsController controller)
    // Offset: 0x283F1A8
    void LoadFromPlayerPreferences(::GorillaNetworking::CosmeticsController* controller);
    // public System.String[] ToDisplayNameArray()
    // Offset: 0x28398F4
    ::ArrayW<::StringW> ToDisplayNameArray();
    // public System.String[] HoldableDisplayNames(System.Boolean leftHoldables)
    // Offset: 0x283F580
    ::ArrayW<::StringW> HoldableDisplayNames(bool leftHoldables);
    // public System.Boolean[] ToOnRightSideArray()
    // Offset: 0x28399D8
    ::ArrayW<bool> ToOnRightSideArray();
  }; // GorillaNetworking.CosmeticsController/CosmeticSet
  #pragma pack(pop)
  static check_size<sizeof(CosmeticsController::CosmeticSet), 32 + sizeof(::ArrayW<::StringW>)> __GorillaNetworking_CosmeticsController_CosmeticSetSizeCheck;
  static_assert(sizeof(CosmeticsController::CosmeticSet) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::add_onSetActivatedEvent
// Il2CppName: add_onSetActivatedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::CosmeticSet::*)(::GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler*)>(&GorillaNetworking::CosmeticsController::CosmeticSet::add_onSetActivatedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet/OnSetActivatedHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "add_onSetActivatedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::remove_onSetActivatedEvent
// Il2CppName: remove_onSetActivatedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::CosmeticSet::*)(::GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler*)>(&GorillaNetworking::CosmeticsController::CosmeticSet::remove_onSetActivatedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet/OnSetActivatedHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "remove_onSetActivatedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivated
// Il2CppName: OnSetActivated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::CosmeticSet::*)(::GorillaNetworking::CosmeticsController::CosmeticSet*, ::GorillaNetworking::CosmeticsController::CosmeticSet*, ::GlobalNamespace::NetPlayer*)>(&GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivated)> {
  static const MethodInfo* get() {
    static auto* prevSet = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* currentSet = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* netPlayer = &::il2cpp_utils::GetClassFromName("", "NetPlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "OnSetActivated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prevSet, currentSet, netPlayer});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::CopyItems
// Il2CppName: CopyItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::CosmeticSet::*)(::GorillaNetworking::CosmeticsController::CosmeticSet*)>(&GorillaNetworking::CosmeticsController::CosmeticSet::CopyItems)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "CopyItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::MergeSets
// Il2CppName: MergeSets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::CosmeticSet::*)(::GorillaNetworking::CosmeticsController::CosmeticSet*, ::GorillaNetworking::CosmeticsController::CosmeticSet*)>(&GorillaNetworking::CosmeticsController::CosmeticSet::MergeSets)> {
  static const MethodInfo* get() {
    static auto* tryOn = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* current = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "MergeSets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tryOn, current});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::ClearSet
// Il2CppName: ClearSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::CosmeticSet::*)(::GorillaNetworking::CosmeticsController::CosmeticItem)>(&GorillaNetworking::CosmeticsController::CosmeticSet::ClearSet)> {
  static const MethodInfo* get() {
    static auto* nullItem = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "ClearSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nullItem});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::IsActive
// Il2CppName: IsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::CosmeticSet::*)(::StringW)>(&GorillaNetworking::CosmeticsController::CosmeticSet::IsActive)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "IsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::HasItemOfCategory
// Il2CppName: HasItemOfCategory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::CosmeticSet::*)(::GorillaNetworking::CosmeticsController::CosmeticCategory)>(&GorillaNetworking::CosmeticsController::CosmeticSet::HasItemOfCategory)> {
  static const MethodInfo* get() {
    static auto* category = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticCategory")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "HasItemOfCategory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{category});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::HasItem
// Il2CppName: HasItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::CosmeticSet::*)(::StringW)>(&GorillaNetworking::CosmeticsController::CosmeticSet::HasItem)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "HasItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::IsSlotLeftHanded
// Il2CppName: IsSlotLeftHanded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GorillaNetworking::CosmeticsController::CosmeticSlots)>(&GorillaNetworking::CosmeticsController::CosmeticSet::IsSlotLeftHanded)> {
  static const MethodInfo* get() {
    static auto* slot = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSlots")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "IsSlotLeftHanded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{slot});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::IsSlotRightHanded
// Il2CppName: IsSlotRightHanded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GorillaNetworking::CosmeticsController::CosmeticSlots)>(&GorillaNetworking::CosmeticsController::CosmeticSet::IsSlotRightHanded)> {
  static const MethodInfo* get() {
    static auto* slot = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSlots")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "IsSlotRightHanded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{slot});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::IsHoldable
// Il2CppName: IsHoldable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GorillaNetworking::CosmeticsController::CosmeticItem)>(&GorillaNetworking::CosmeticsController::CosmeticSet::IsHoldable)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "IsHoldable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::OppositeSlot
// Il2CppName: OppositeSlot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GorillaNetworking::CosmeticsController::CosmeticSlots (*)(::GorillaNetworking::CosmeticsController::CosmeticSlots)>(&GorillaNetworking::CosmeticsController::CosmeticSet::OppositeSlot)> {
  static const MethodInfo* get() {
    static auto* slot = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSlots")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "OppositeSlot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{slot});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::SlotPlayerPreferenceName
// Il2CppName: SlotPlayerPreferenceName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::GorillaNetworking::CosmeticsController::CosmeticSlots)>(&GorillaNetworking::CosmeticsController::CosmeticSet::SlotPlayerPreferenceName)> {
  static const MethodInfo* get() {
    static auto* slot = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSlots")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "SlotPlayerPreferenceName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{slot});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::ActivateHoldable
// Il2CppName: ActivateHoldable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::CosmeticSet::*)(::GorillaNetworking::CosmeticsController::CosmeticSet*, int, ::GorillaNetworking::CosmeticItemRegistry*, ::GlobalNamespace::BodyDockPositions*, ::GorillaNetworking::CosmeticsController::CosmeticItem)>(&GorillaNetworking::CosmeticsController::CosmeticSet::ActivateHoldable)> {
  static const MethodInfo* get() {
    static auto* prevSet = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* cosmeticIdx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cosmeticsObjectRegistry = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticItemRegistry")->byval_arg;
    static auto* bDock = &::il2cpp_utils::GetClassFromName("", "BodyDockPositions")->byval_arg;
    static auto* nullItem = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "ActivateHoldable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prevSet, cosmeticIdx, cosmeticsObjectRegistry, bDock, nullItem});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::ActivateCosmeticItem
// Il2CppName: ActivateCosmeticItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::CosmeticSet::*)(::GorillaNetworking::CosmeticsController::CosmeticSet*, ::GlobalNamespace::VRRig*, int, ::GorillaNetworking::CosmeticItemRegistry*, ::GlobalNamespace::BodyDockPositions*, ::GorillaNetworking::CosmeticsController::CosmeticItem)>(&GorillaNetworking::CosmeticsController::CosmeticSet::ActivateCosmeticItem)> {
  static const MethodInfo* get() {
    static auto* prevSet = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* rig = &::il2cpp_utils::GetClassFromName("", "VRRig")->byval_arg;
    static auto* cosmeticIdx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cosmeticsObjectRegistry = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticItemRegistry")->byval_arg;
    static auto* bDock = &::il2cpp_utils::GetClassFromName("", "BodyDockPositions")->byval_arg;
    static auto* nullItem = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "ActivateCosmeticItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prevSet, rig, cosmeticIdx, cosmeticsObjectRegistry, bDock, nullItem});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::ActivateCosmetics
// Il2CppName: ActivateCosmetics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::CosmeticSet::*)(::GorillaNetworking::CosmeticsController::CosmeticSet*, ::GlobalNamespace::VRRig*, ::GlobalNamespace::BodyDockPositions*, ::GorillaNetworking::CosmeticsController::CosmeticItem, ::GorillaNetworking::CosmeticItemRegistry*)>(&GorillaNetworking::CosmeticsController::CosmeticSet::ActivateCosmetics)> {
  static const MethodInfo* get() {
    static auto* prevSet = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* rig = &::il2cpp_utils::GetClassFromName("", "VRRig")->byval_arg;
    static auto* bDock = &::il2cpp_utils::GetClassFromName("", "BodyDockPositions")->byval_arg;
    static auto* nullItem = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    static auto* cosmeticsObjectRegistry = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticItemRegistry")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "ActivateCosmetics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prevSet, rig, bDock, nullItem, cosmeticsObjectRegistry});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::DeactivateAllCosmetcs
// Il2CppName: DeactivateAllCosmetcs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::CosmeticSet::*)(::GlobalNamespace::BodyDockPositions*, ::GorillaNetworking::CosmeticsController::CosmeticItem, ::GorillaNetworking::CosmeticItemRegistry*)>(&GorillaNetworking::CosmeticsController::CosmeticSet::DeactivateAllCosmetcs)> {
  static const MethodInfo* get() {
    static auto* bDock = &::il2cpp_utils::GetClassFromName("", "BodyDockPositions")->byval_arg;
    static auto* nullItem = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    static auto* cosmeticObjectRegistry = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticItemRegistry")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "DeactivateAllCosmetcs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bDock, nullItem, cosmeticObjectRegistry});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::LoadFromPlayerPreferences
// Il2CppName: LoadFromPlayerPreferences
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::CosmeticSet::*)(::GorillaNetworking::CosmeticsController*)>(&GorillaNetworking::CosmeticsController::CosmeticSet::LoadFromPlayerPreferences)> {
  static const MethodInfo* get() {
    static auto* controller = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "LoadFromPlayerPreferences", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{controller});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::ToDisplayNameArray
// Il2CppName: ToDisplayNameArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (GorillaNetworking::CosmeticsController::CosmeticSet::*)()>(&GorillaNetworking::CosmeticsController::CosmeticSet::ToDisplayNameArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "ToDisplayNameArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::HoldableDisplayNames
// Il2CppName: HoldableDisplayNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (GorillaNetworking::CosmeticsController::CosmeticSet::*)(bool)>(&GorillaNetworking::CosmeticsController::CosmeticSet::HoldableDisplayNames)> {
  static const MethodInfo* get() {
    static auto* leftHoldables = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "HoldableDisplayNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leftHoldables});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::ToOnRightSideArray
// Il2CppName: ToOnRightSideArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<bool> (GorillaNetworking::CosmeticsController::CosmeticSet::*)()>(&GorillaNetworking::CosmeticsController::CosmeticSet::ToOnRightSideArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet*), "ToOnRightSideArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
