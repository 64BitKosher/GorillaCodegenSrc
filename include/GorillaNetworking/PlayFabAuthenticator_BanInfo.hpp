// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaNetworking.PlayFabAuthenticator
#include "GorillaNetworking/PlayFabAuthenticator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::PlayFabAuthenticator::BanInfo);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::PlayFabAuthenticator::BanInfo*, "GorillaNetworking", "PlayFabAuthenticator/BanInfo");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.PlayFabAuthenticator/BanInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayFabAuthenticator::BanInfo : public ::Il2CppObject {
    public:
    public:
    // public System.String BanMessage
    // Size: 0x8
    // Offset: 0x10
    ::StringW BanMessage;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String BanExpirationTime
    // Size: 0x8
    // Offset: 0x18
    ::StringW BanExpirationTime;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.String BanMessage
    [[deprecated("Use field access instead!")]] ::StringW& dyn_BanMessage();
    // Get instance field reference: public System.String BanExpirationTime
    [[deprecated("Use field access instead!")]] ::StringW& dyn_BanExpirationTime();
    // public System.Void .ctor()
    // Offset: 0x285E1C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayFabAuthenticator::BanInfo* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::BanInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayFabAuthenticator::BanInfo*, creationType>()));
    }
  }; // GorillaNetworking.PlayFabAuthenticator/BanInfo
  #pragma pack(pop)
  static check_size<sizeof(PlayFabAuthenticator::BanInfo), 24 + sizeof(::StringW)> __GorillaNetworking_PlayFabAuthenticator_BanInfoSizeCheck;
  static_assert(sizeof(PlayFabAuthenticator::BanInfo) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::PlayFabAuthenticator::BanInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
