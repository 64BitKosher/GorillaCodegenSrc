// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaNetworking.CosmeticsController/CosmeticSet
#include "GorillaNetworking/CosmeticsController_CosmeticSet.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: NetPlayer
  class NetPlayer;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler*, "GorillaNetworking", "CosmeticsController/CosmeticSet/OnSetActivatedHandler");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x80
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.CosmeticsController/CosmeticSet/OnSetActivatedHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class CosmeticsController::CosmeticSet::OnSetActivatedHandler : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x283F764
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CosmeticsController::CosmeticSet::OnSetActivatedHandler* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CosmeticsController::CosmeticSet::OnSetActivatedHandler*, creationType>(object, method)));
    }
    // public System.Void Invoke(GorillaNetworking.CosmeticsController/CosmeticSet prevSet, GorillaNetworking.CosmeticsController/CosmeticSet currentSet, NetPlayer netPlayer)
    // Offset: 0x283F870
    void Invoke(::GorillaNetworking::CosmeticsController::CosmeticSet* prevSet, ::GorillaNetworking::CosmeticsController::CosmeticSet* currentSet, ::GlobalNamespace::NetPlayer* netPlayer);
    // public System.IAsyncResult BeginInvoke(GorillaNetworking.CosmeticsController/CosmeticSet prevSet, GorillaNetworking.CosmeticsController/CosmeticSet currentSet, NetPlayer netPlayer, System.AsyncCallback callback, System.Object object)
    // Offset: 0x283F884
    ::System::IAsyncResult* BeginInvoke(::GorillaNetworking::CosmeticsController::CosmeticSet* prevSet, ::GorillaNetworking::CosmeticsController::CosmeticSet* currentSet, ::GlobalNamespace::NetPlayer* netPlayer, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public System.Void EndInvoke(System.IAsyncResult result)
    // Offset: 0x283F8B0
    void EndInvoke(::System::IAsyncResult* result);
  }; // GorillaNetworking.CosmeticsController/CosmeticSet/OnSetActivatedHandler
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler::*)(::GorillaNetworking::CosmeticsController::CosmeticSet*, ::GorillaNetworking::CosmeticsController::CosmeticSet*, ::GlobalNamespace::NetPlayer*)>(&GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler::Invoke)> {
  static const MethodInfo* get() {
    static auto* prevSet = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* currentSet = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* netPlayer = &::il2cpp_utils::GetClassFromName("", "NetPlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prevSet, currentSet, netPlayer});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler::*)(::GorillaNetworking::CosmeticsController::CosmeticSet*, ::GorillaNetworking::CosmeticsController::CosmeticSet*, ::GlobalNamespace::NetPlayer*, ::System::AsyncCallback*, ::Il2CppObject*)>(&GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* prevSet = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* currentSet = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* netPlayer = &::il2cpp_utils::GetClassFromName("", "NetPlayer")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prevSet, currentSet, netPlayer, callback, object});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler::*)(::System::IAsyncResult*)>(&GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::CosmeticSet::OnSetActivatedHandler*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
