// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Forward declaring type: SafeAccountObjectSwapper
  class SafeAccountObjectSwapper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::SafeAccountObjectSwapper);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::SafeAccountObjectSwapper*, "GorillaNetworking", "SafeAccountObjectSwapper");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.SafeAccountObjectSwapper
  // [TokenAttribute] Offset: FFFFFFFF
  class SafeAccountObjectSwapper : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.GameObject[] UnSafeGameObjects
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::UnityEngine::GameObject*> UnSafeGameObjects;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject[] UnSafeTexts
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::UnityEngine::GameObject*> UnSafeTexts;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject[] SafeTexts
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<::UnityEngine::GameObject*> SafeTexts;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject[] SafeModeObjects
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<::UnityEngine::GameObject*> SafeModeObjects;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.GameObject[] UnSafeGameObjects
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_UnSafeGameObjects();
    // Get instance field reference: public UnityEngine.GameObject[] UnSafeTexts
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_UnSafeTexts();
    // Get instance field reference: public UnityEngine.GameObject[] SafeTexts
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_SafeTexts();
    // Get instance field reference: public UnityEngine.GameObject[] SafeModeObjects
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_SafeModeObjects();
    // public System.Void Start()
    // Offset: 0x28466A0
    void Start();
    // public System.Void SafeAccountUpdated(System.Boolean isSafety)
    // Offset: 0x28469F0
    void SafeAccountUpdated(bool isSafety);
    // public System.Void SwitchToSafeMode()
    // Offset: 0x28467C8
    void SwitchToSafeMode();
    // public System.Void .ctor()
    // Offset: 0x28469FC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SafeAccountObjectSwapper* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::SafeAccountObjectSwapper::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SafeAccountObjectSwapper*, creationType>()));
    }
  }; // GorillaNetworking.SafeAccountObjectSwapper
  #pragma pack(pop)
  static check_size<sizeof(SafeAccountObjectSwapper), 56 + sizeof(::ArrayW<::UnityEngine::GameObject*>)> __GorillaNetworking_SafeAccountObjectSwapperSizeCheck;
  static_assert(sizeof(SafeAccountObjectSwapper) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::SafeAccountObjectSwapper::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::SafeAccountObjectSwapper::*)()>(&GorillaNetworking::SafeAccountObjectSwapper::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::SafeAccountObjectSwapper*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::SafeAccountObjectSwapper::SafeAccountUpdated
// Il2CppName: SafeAccountUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::SafeAccountObjectSwapper::*)(bool)>(&GorillaNetworking::SafeAccountObjectSwapper::SafeAccountUpdated)> {
  static const MethodInfo* get() {
    static auto* isSafety = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::SafeAccountObjectSwapper*), "SafeAccountUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isSafety});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::SafeAccountObjectSwapper::SwitchToSafeMode
// Il2CppName: SwitchToSafeMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::SafeAccountObjectSwapper::*)()>(&GorillaNetworking::SafeAccountObjectSwapper::SwitchToSafeMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::SafeAccountObjectSwapper*), "SwitchToSafeMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::SafeAccountObjectSwapper::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
