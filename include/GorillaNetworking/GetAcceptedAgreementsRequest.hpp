// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Forward declaring type: GetAcceptedAgreementsRequest
  class GetAcceptedAgreementsRequest;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::GetAcceptedAgreementsRequest);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::GetAcceptedAgreementsRequest*, "GorillaNetworking", "GetAcceptedAgreementsRequest");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.GetAcceptedAgreementsRequest
  // [TokenAttribute] Offset: FFFFFFFF
  class GetAcceptedAgreementsRequest : public ::Il2CppObject {
    public:
    public:
    // public System.String[] AgreementKeys
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::StringW> AgreementKeys;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    public:
    // Creating conversion operator: operator ::ArrayW<::StringW>
    constexpr operator ::ArrayW<::StringW>() const noexcept {
      return AgreementKeys;
    }
    // Get instance field reference: public System.String[] AgreementKeys
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_AgreementKeys();
    // public System.Void .ctor()
    // Offset: 0x28545E8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GetAcceptedAgreementsRequest* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GetAcceptedAgreementsRequest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GetAcceptedAgreementsRequest*, creationType>()));
    }
  }; // GorillaNetworking.GetAcceptedAgreementsRequest
  #pragma pack(pop)
  static check_size<sizeof(GetAcceptedAgreementsRequest), 16 + sizeof(::ArrayW<::StringW>)> __GorillaNetworking_GetAcceptedAgreementsRequestSizeCheck;
  static_assert(sizeof(GetAcceptedAgreementsRequest) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::GetAcceptedAgreementsRequest::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
