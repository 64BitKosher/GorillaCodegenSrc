// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Forward declaring type: BroadcastMyRoomRequest
  class BroadcastMyRoomRequest;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::BroadcastMyRoomRequest);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::BroadcastMyRoomRequest*, "GorillaNetworking", "BroadcastMyRoomRequest");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.BroadcastMyRoomRequest
  // [TokenAttribute] Offset: FFFFFFFF
  class BroadcastMyRoomRequest : public ::Il2CppObject {
    public:
    public:
    // public System.String KeyToFollow
    // Size: 0x8
    // Offset: 0x10
    ::StringW KeyToFollow;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String RoomToJoin
    // Size: 0x8
    // Offset: 0x18
    ::StringW RoomToJoin;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean Set
    // Size: 0x1
    // Offset: 0x20
    bool Set;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public System.String KeyToFollow
    [[deprecated("Use field access instead!")]] ::StringW& dyn_KeyToFollow();
    // Get instance field reference: public System.String RoomToJoin
    [[deprecated("Use field access instead!")]] ::StringW& dyn_RoomToJoin();
    // Get instance field reference: public System.Boolean Set
    [[deprecated("Use field access instead!")]] bool& dyn_Set();
    // public System.Void .ctor()
    // Offset: 0x28545E0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BroadcastMyRoomRequest* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::BroadcastMyRoomRequest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BroadcastMyRoomRequest*, creationType>()));
    }
  }; // GorillaNetworking.BroadcastMyRoomRequest
  #pragma pack(pop)
  static check_size<sizeof(BroadcastMyRoomRequest), 32 + sizeof(bool)> __GorillaNetworking_BroadcastMyRoomRequestSizeCheck;
  static_assert(sizeof(BroadcastMyRoomRequest) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::BroadcastMyRoomRequest::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
