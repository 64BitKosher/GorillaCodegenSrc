// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Forward declaring type: CreditsSection
  class CreditsSection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::CreditsSection);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::CreditsSection*, "GorillaNetworking", "CreditsSection");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.CreditsSection
  // [TokenAttribute] Offset: FFFFFFFF
  class CreditsSection : public ::Il2CppObject {
    public:
    public:
    // private System.String <Title>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::StringW Title;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Collections.Generic.List`1<System.String> <Entries>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::StringW>* Entries;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    public:
    // Get instance field reference: private System.String <Title>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Title$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> <Entries>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_$Entries$k__BackingField();
    // public System.String get_Title()
    // Offset: 0x2846A04
    ::StringW get_Title();
    // public System.Void set_Title(System.String value)
    // Offset: 0x2846A0C
    void set_Title(::StringW value);
    // public System.Collections.Generic.List`1<System.String> get_Entries()
    // Offset: 0x2846A14
    ::System::Collections::Generic::List_1<::StringW>* get_Entries();
    // public System.Void set_Entries(System.Collections.Generic.List`1<System.String> value)
    // Offset: 0x2846A1C
    void set_Entries(::System::Collections::Generic::List_1<::StringW>* value);
    // public System.Void .ctor()
    // Offset: 0x2846A24
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CreditsSection* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CreditsSection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CreditsSection*, creationType>()));
    }
  }; // GorillaNetworking.CreditsSection
  #pragma pack(pop)
  static check_size<sizeof(CreditsSection), 24 + sizeof(::System::Collections::Generic::List_1<::StringW>*)> __GorillaNetworking_CreditsSectionSizeCheck;
  static_assert(sizeof(CreditsSection) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::CreditsSection::get_Title
// Il2CppName: get_Title
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GorillaNetworking::CreditsSection::*)()>(&GorillaNetworking::CreditsSection::get_Title)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CreditsSection*), "get_Title", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CreditsSection::set_Title
// Il2CppName: set_Title
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CreditsSection::*)(::StringW)>(&GorillaNetworking::CreditsSection::set_Title)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CreditsSection*), "set_Title", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CreditsSection::get_Entries
// Il2CppName: get_Entries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::StringW>* (GorillaNetworking::CreditsSection::*)()>(&GorillaNetworking::CreditsSection::get_Entries)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CreditsSection*), "get_Entries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CreditsSection::set_Entries
// Il2CppName: set_Entries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CreditsSection::*)(::System::Collections::Generic::List_1<::StringW>*)>(&GorillaNetworking::CreditsSection::set_Entries)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CreditsSection*), "set_Entries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CreditsSection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
