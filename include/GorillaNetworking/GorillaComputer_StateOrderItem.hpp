// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaNetworking.GorillaComputer
#include "GorillaNetworking/GorillaComputer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::GorillaComputer::StateOrderItem);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::GorillaComputer::StateOrderItem*, "GorillaNetworking", "GorillaComputer/StateOrderItem");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.GorillaComputer/StateOrderItem
  // [TokenAttribute] Offset: FFFFFFFF
  class GorillaComputer::StateOrderItem : public ::Il2CppObject {
    public:
    public:
    // public GorillaNetworking.GorillaComputer/ComputerState State
    // Size: 0x4
    // Offset: 0x10
    ::GorillaNetworking::GorillaComputer::ComputerState State;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::GorillaComputer::ComputerState) == 0x4);
    // Padding between fields: State and: OverrideName
    char __padding0[0x4] = {};
    // public System.String OverrideName
    // Size: 0x8
    // Offset: 0x18
    ::StringW OverrideName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public GorillaNetworking.GorillaComputer/ComputerState State
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaComputer::ComputerState& dyn_State();
    // Get instance field reference: public System.String OverrideName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OverrideName();
    // public System.Void .ctor()
    // Offset: 0x2851FE4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaComputer::StateOrderItem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::StateOrderItem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaComputer::StateOrderItem*, creationType>()));
    }
    // public System.Void .ctor(GorillaNetworking.GorillaComputer/ComputerState state)
    // Offset: 0x2851D38
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaComputer::StateOrderItem* New_ctor(::GorillaNetworking::GorillaComputer::ComputerState state) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::StateOrderItem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaComputer::StateOrderItem*, creationType>(state)));
    }
    // public System.Void .ctor(GorillaNetworking.GorillaComputer/ComputerState state, System.String overrideName)
    // Offset: 0x2851DA4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaComputer::StateOrderItem* New_ctor(::GorillaNetworking::GorillaComputer::ComputerState state, ::StringW overrideName) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::StateOrderItem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaComputer::StateOrderItem*, creationType>(state, overrideName)));
    }
    // public System.String GetName()
    // Offset: 0x2851F40
    ::StringW GetName();
  }; // GorillaNetworking.GorillaComputer/StateOrderItem
  #pragma pack(pop)
  static check_size<sizeof(GorillaComputer::StateOrderItem), 24 + sizeof(::StringW)> __GorillaNetworking_GorillaComputer_StateOrderItemSizeCheck;
  static_assert(sizeof(GorillaComputer::StateOrderItem) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::GorillaComputer::StateOrderItem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaNetworking::GorillaComputer::StateOrderItem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaNetworking::GorillaComputer::StateOrderItem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaNetworking::GorillaComputer::StateOrderItem::GetName
// Il2CppName: GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GorillaNetworking::GorillaComputer::StateOrderItem::*)()>(&GorillaNetworking::GorillaComputer::StateOrderItem::GetName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::GorillaComputer::StateOrderItem*), "GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
