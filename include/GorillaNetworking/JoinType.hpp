// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Forward declaring type: JoinType
  struct JoinType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::JoinType, "GorillaNetworking", "JoinType");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.JoinType
  // [TokenAttribute] Offset: FFFFFFFF
  struct JoinType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: JoinType
    constexpr JoinType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public GorillaNetworking.JoinType Solo
    static constexpr const int Solo = 0;
    // Get static field: static public GorillaNetworking.JoinType Solo
    static ::GorillaNetworking::JoinType _get_Solo();
    // Set static field: static public GorillaNetworking.JoinType Solo
    static void _set_Solo(::GorillaNetworking::JoinType value);
    // static field const value: static public GorillaNetworking.JoinType JoinWithNearby
    static constexpr const int JoinWithNearby = 1;
    // Get static field: static public GorillaNetworking.JoinType JoinWithNearby
    static ::GorillaNetworking::JoinType _get_JoinWithNearby();
    // Set static field: static public GorillaNetworking.JoinType JoinWithNearby
    static void _set_JoinWithNearby(::GorillaNetworking::JoinType value);
    // static field const value: static public GorillaNetworking.JoinType JoinWithParty
    static constexpr const int JoinWithParty = 2;
    // Get static field: static public GorillaNetworking.JoinType JoinWithParty
    static ::GorillaNetworking::JoinType _get_JoinWithParty();
    // Set static field: static public GorillaNetworking.JoinType JoinWithParty
    static void _set_JoinWithParty(::GorillaNetworking::JoinType value);
    // static field const value: static public GorillaNetworking.JoinType ForceJoinWithParty
    static constexpr const int ForceJoinWithParty = 3;
    // Get static field: static public GorillaNetworking.JoinType ForceJoinWithParty
    static ::GorillaNetworking::JoinType _get_ForceJoinWithParty();
    // Set static field: static public GorillaNetworking.JoinType ForceJoinWithParty
    static void _set_ForceJoinWithParty(::GorillaNetworking::JoinType value);
    // static field const value: static public GorillaNetworking.JoinType FollowingNearby
    static constexpr const int FollowingNearby = 4;
    // Get static field: static public GorillaNetworking.JoinType FollowingNearby
    static ::GorillaNetworking::JoinType _get_FollowingNearby();
    // Set static field: static public GorillaNetworking.JoinType FollowingNearby
    static void _set_FollowingNearby(::GorillaNetworking::JoinType value);
    // static field const value: static public GorillaNetworking.JoinType FollowingParty
    static constexpr const int FollowingParty = 5;
    // Get static field: static public GorillaNetworking.JoinType FollowingParty
    static ::GorillaNetworking::JoinType _get_FollowingParty();
    // Set static field: static public GorillaNetworking.JoinType FollowingParty
    static void _set_FollowingParty(::GorillaNetworking::JoinType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // GorillaNetworking.JoinType
  #pragma pack(pop)
  static check_size<sizeof(JoinType), 0 + sizeof(int)> __GorillaNetworking_JoinTypeSizeCheck;
  static_assert(sizeof(JoinType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
