// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Forward declaring type: ExtensionMethods
  class ExtensionMethods;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::ExtensionMethods);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::ExtensionMethods*, "GorillaNetworking", "ExtensionMethods");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.ExtensionMethods
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class ExtensionMethods : public ::Il2CppObject {
    public:
    // static public System.Void SafeInvoke(System.Action`1<T> action, T data)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void SafeInvoke(::System::Action_1<T>* action, T data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::ExtensionMethods::SafeInvoke");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaNetworking", "ExtensionMethods", "SafeInvoke", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(data)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, action, data);
    }
    // static public System.Void AddOrUpdate(System.Collections.Generic.Dictionary`2<TKey,TValue> dict, TKey key, TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TKey, class TValue>
    static void AddOrUpdate(::System::Collections::Generic::Dictionary_2<TKey, TValue>* dict, TKey key, TValue value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::ExtensionMethods::AddOrUpdate");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaNetworking", "ExtensionMethods", "AddOrUpdate", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dict), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TKey>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, dict, key, value);
    }
  }; // GorillaNetworking.ExtensionMethods
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::ExtensionMethods::SafeInvoke
// Il2CppName: SafeInvoke
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GorillaNetworking::ExtensionMethods::AddOrUpdate
// Il2CppName: AddOrUpdate
// Cannot write MetadataGetter for generic methods!
