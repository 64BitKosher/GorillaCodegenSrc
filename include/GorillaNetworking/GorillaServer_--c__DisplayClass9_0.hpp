// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaNetworking.GorillaServer
#include "GorillaNetworking/GorillaServer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: PlayFab::CloudScriptModels
namespace PlayFab::CloudScriptModels {
  // Forward declaring type: ExecuteFunctionResult
  class ExecuteFunctionResult;
}
// Forward declaring namespace: PlayFab::ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: ExecuteCloudScriptResult
  class ExecuteCloudScriptResult;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::GorillaServer::$$c__DisplayClass9_0);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::GorillaServer::$$c__DisplayClass9_0*, "GorillaNetworking", "GorillaServer/<>c__DisplayClass9_0");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.GorillaServer/<>c__DisplayClass9_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class GorillaServer::$$c__DisplayClass9_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Action`1<PlayFab.CloudScriptModels.ExecuteFunctionResult> successCallback
    // Size: 0x8
    // Offset: 0x10
    ::System::Action_1<::PlayFab::CloudScriptModels::ExecuteFunctionResult*>* successCallback;
    // Field size check
    static_assert(sizeof(::System::Action_1<::PlayFab::CloudScriptModels::ExecuteFunctionResult*>*) == 0x8);
    // public GorillaNetworking.GorillaServer <>4__this
    // Size: 0x8
    // Offset: 0x18
    ::GorillaNetworking::GorillaServer* $$4__this;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::GorillaServer*) == 0x8);
    public:
    // Get instance field reference: public System.Action`1<PlayFab.CloudScriptModels.ExecuteFunctionResult> successCallback
    [[deprecated("Use field access instead!")]] ::System::Action_1<::PlayFab::CloudScriptModels::ExecuteFunctionResult*>*& dyn_successCallback();
    // Get instance field reference: public GorillaNetworking.GorillaServer <>4__this
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaServer*& dyn_$$4__this();
    // public System.Void .ctor()
    // Offset: 0x28548BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaServer::$$c__DisplayClass9_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaServer::$$c__DisplayClass9_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaServer::$$c__DisplayClass9_0*, creationType>()));
    }
    // System.Void <ReturnCurrentVersion>b__0(PlayFab.ClientModels.ExecuteCloudScriptResult result)
    // Offset: 0x2857400
    void $ReturnCurrentVersion$b__0(::PlayFab::ClientModels::ExecuteCloudScriptResult* result);
  }; // GorillaNetworking.GorillaServer/<>c__DisplayClass9_0
  #pragma pack(pop)
  static check_size<sizeof(GorillaServer::$$c__DisplayClass9_0), 24 + sizeof(::GorillaNetworking::GorillaServer*)> __GorillaNetworking_GorillaServer_$$c__DisplayClass9_0SizeCheck;
  static_assert(sizeof(GorillaServer::$$c__DisplayClass9_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::GorillaServer::$$c__DisplayClass9_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaNetworking::GorillaServer::$$c__DisplayClass9_0::$ReturnCurrentVersion$b__0
// Il2CppName: <ReturnCurrentVersion>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::GorillaServer::$$c__DisplayClass9_0::*)(::PlayFab::ClientModels::ExecuteCloudScriptResult*)>(&GorillaNetworking::GorillaServer::$$c__DisplayClass9_0::$ReturnCurrentVersion$b__0)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.ClientModels", "ExecuteCloudScriptResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::GorillaServer::$$c__DisplayClass9_0*), "<ReturnCurrentVersion>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
