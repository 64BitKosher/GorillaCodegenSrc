// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: GorillaTag.CosmeticSystem.CosmeticInfoV2
#include "GorillaTag/CosmeticSystem/CosmeticInfoV2.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: BodyDockPositions
#include "GlobalNamespace/BodyDockPositions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaNetworking
namespace GorillaNetworking {
  // Skipping declaration: CosmeticCategory because it is already included!
  // Skipping declaration: CosmeticItem because it is already included!
  // Skipping declaration: CosmeticSlots because it is already included!
  // Skipping declaration: ATMStages because it is already included!
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: CheckoutCartButton
  class CheckoutCartButton;
  // Forward declaring type: PurchaseCurrencyButton
  class PurchaseCurrencyButton;
  // Forward declaring type: VRRigAnchorOverrides
  class VRRigAnchorOverrides;
  // Forward declaring type: FittingRoomButton
  class FittingRoomButton;
  // Forward declaring type: CosmeticStand
  class CosmeticStand;
  // Forward declaring type: PurchaseItemButton
  class PurchaseItemButton;
  // Forward declaring type: HeadModel
  class HeadModel;
  // Forward declaring type: WardrobeInstance
  class WardrobeInstance;
  // Forward declaring type: EarlyAccessButton
  class EarlyAccessButton;
  // Forward declaring type: BundleList
  class BundleList;
}
// Forward declaring namespace: GorillaNetworking::Store
namespace GorillaNetworking::Store {
  // Forward declaring type: StoreBundle
  class StoreBundle;
}
// Forward declaring namespace: GorillaTag
namespace GorillaTag {
  // Forward declaring type: GTAssetRef`1<TObject>
  template<typename TObject>
  class GTAssetRef_1;
}
// Forward declaring namespace: GorillaTag::CosmeticSystem
namespace GorillaTag::CosmeticSystem {
  // Forward declaring type: AllCosmeticsArraySO
  class AllCosmeticsArraySO;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: PlayFab::ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: CatalogItem
  class CatalogItem;
  // Forward declaring type: UserDataRecord
  class UserDataRecord;
  // Forward declaring type: GetUserInventoryResult
  class GetUserInventoryResult;
  // Forward declaring type: PurchaseItemResult
  class PurchaseItemResult;
  // Forward declaring type: GetUserDataResult
  class GetUserDataResult;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: Oculus::Platform
namespace Oculus::Platform {
  // Forward declaring type: Message
  class Message;
  // Forward declaring type: Message`1<T>
  template<typename T>
  class Message_1;
}
// Forward declaring namespace: PlayFab::Json
namespace PlayFab::Json {
  // Forward declaring type: JsonObject
  class JsonObject;
}
// Forward declaring namespace: PlayFab
namespace PlayFab {
  // Forward declaring type: PlayFabError
  class PlayFabError;
}
// Forward declaring namespace: Oculus::Platform::Models
namespace Oculus::Platform::Models {
  // Forward declaring type: Purchase
  class Purchase;
}
// Forward declaring namespace: PlayFab::CloudScriptModels
namespace PlayFab::CloudScriptModels {
  // Forward declaring type: ExecuteFunctionResult
  class ExecuteFunctionResult;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Sprite
  class Sprite;
}
// Completed forward declares
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Forward declaring type: CosmeticsController
  class CosmeticsController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::CosmeticsController);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::CosmeticsController*, "GorillaNetworking", "CosmeticsController");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x4E8
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.CosmeticsController
  // [TokenAttribute] Offset: FFFFFFFF
  class CosmeticsController : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GorillaNetworking::CosmeticsController::SuccessCallback
    class SuccessCallback;
    // Nested type: ::GorillaNetworking::CosmeticsController::ErrorCallback
    class ErrorCallback;
    // Nested type: ::GorillaNetworking::CosmeticsController::PurchaseItemStages
    struct PurchaseItemStages;
    // Nested type: ::GorillaNetworking::CosmeticsController::ATMStages
    struct ATMStages;
    // Nested type: ::GorillaNetworking::CosmeticsController::CosmeticCategory
    struct CosmeticCategory;
    // Nested type: ::GorillaNetworking::CosmeticsController::CosmeticSlots
    struct CosmeticSlots;
    // Nested type: ::GorillaNetworking::CosmeticsController::CosmeticSet
    class CosmeticSet;
    // Nested type: ::GorillaNetworking::CosmeticsController::CosmeticItem
    struct CosmeticItem;
    // Nested type: ::GorillaNetworking::CosmeticsController::IAPRequestBody
    class IAPRequestBody;
    // Nested type: ::GorillaNetworking::CosmeticsController::EWearingCosmeticSet
    struct EWearingCosmeticSet;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c
    class $$c;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass184_0
    class $$c__DisplayClass184_0;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass185_0
    class $$c__DisplayClass185_0;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass204_0
    class $$c__DisplayClass204_0;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass204_1
    class $$c__DisplayClass204_1;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass204_2
    class $$c__DisplayClass204_2;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass204_3
    class $$c__DisplayClass204_3;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass204_4
    class $$c__DisplayClass204_4;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass204_5
    class $$c__DisplayClass204_5;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass214_0
    class $$c__DisplayClass214_0;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass216_0
    class $$c__DisplayClass216_0;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass231_0
    class $$c__DisplayClass231_0;
    // Nested type: ::GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__202
    class $CheckCanGetDaily$d__202;
    // Nested type: ::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__185
    class $CheckIfMyCosmeticsUpdated$d__185;
    // Nested type: ::GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__212
    class $CheckIfQuitPurchase$d__212;
    // Nested type: ::GorillaNetworking::CosmeticsController::$GetMyDaily$d__203
    class $GetMyDaily$d__203;
    // Nested type: ::GorillaNetworking::CosmeticsController::$SendPostRequest$d__223
    class $SendPostRequest$d__223;
    // Nested type: ::GorillaNetworking::CosmeticsController::$V2_allCosmeticsInfoAssetRefSO_LoadCoroutine$d__20
    class $V2_allCosmeticsInfoAssetRefSO_LoadCoroutine$d__20;
    // Nested type: ::GorillaNetworking::CosmeticsController::$WaitForNextCosmeticsAttempt$d__230
    class $WaitForNextCosmeticsAttempt$d__230;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: GorillaNetworking.CosmeticsController/PurchaseItemStages
    // [TokenAttribute] Offset: FFFFFFFF
    struct PurchaseItemStages/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: PurchaseItemStages
      constexpr PurchaseItemStages(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Start
      static constexpr const int Start = 0;
      // Get static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Start
      static ::GorillaNetworking::CosmeticsController::PurchaseItemStages _get_Start();
      // Set static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Start
      static void _set_Start(::GorillaNetworking::CosmeticsController::PurchaseItemStages value);
      // static field const value: static public GorillaNetworking.CosmeticsController/PurchaseItemStages CheckoutButtonPressed
      static constexpr const int CheckoutButtonPressed = 1;
      // Get static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages CheckoutButtonPressed
      static ::GorillaNetworking::CosmeticsController::PurchaseItemStages _get_CheckoutButtonPressed();
      // Set static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages CheckoutButtonPressed
      static void _set_CheckoutButtonPressed(::GorillaNetworking::CosmeticsController::PurchaseItemStages value);
      // static field const value: static public GorillaNetworking.CosmeticsController/PurchaseItemStages ItemSelected
      static constexpr const int ItemSelected = 2;
      // Get static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages ItemSelected
      static ::GorillaNetworking::CosmeticsController::PurchaseItemStages _get_ItemSelected();
      // Set static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages ItemSelected
      static void _set_ItemSelected(::GorillaNetworking::CosmeticsController::PurchaseItemStages value);
      // static field const value: static public GorillaNetworking.CosmeticsController/PurchaseItemStages ItemOwned
      static constexpr const int ItemOwned = 3;
      // Get static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages ItemOwned
      static ::GorillaNetworking::CosmeticsController::PurchaseItemStages _get_ItemOwned();
      // Set static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages ItemOwned
      static void _set_ItemOwned(::GorillaNetworking::CosmeticsController::PurchaseItemStages value);
      // static field const value: static public GorillaNetworking.CosmeticsController/PurchaseItemStages FinalPurchaseAcknowledgement
      static constexpr const int FinalPurchaseAcknowledgement = 4;
      // Get static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages FinalPurchaseAcknowledgement
      static ::GorillaNetworking::CosmeticsController::PurchaseItemStages _get_FinalPurchaseAcknowledgement();
      // Set static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages FinalPurchaseAcknowledgement
      static void _set_FinalPurchaseAcknowledgement(::GorillaNetworking::CosmeticsController::PurchaseItemStages value);
      // static field const value: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Buying
      static constexpr const int Buying = 5;
      // Get static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Buying
      static ::GorillaNetworking::CosmeticsController::PurchaseItemStages _get_Buying();
      // Set static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Buying
      static void _set_Buying(::GorillaNetworking::CosmeticsController::PurchaseItemStages value);
      // static field const value: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Success
      static constexpr const int Success = 6;
      // Get static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Success
      static ::GorillaNetworking::CosmeticsController::PurchaseItemStages _get_Success();
      // Set static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Success
      static void _set_Success(::GorillaNetworking::CosmeticsController::PurchaseItemStages value);
      // static field const value: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Failure
      static constexpr const int Failure = 7;
      // Get static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Failure
      static ::GorillaNetworking::CosmeticsController::PurchaseItemStages _get_Failure();
      // Set static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Failure
      static void _set_Failure(::GorillaNetworking::CosmeticsController::PurchaseItemStages value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // GorillaNetworking.CosmeticsController/PurchaseItemStages
    #pragma pack(pop)
    static check_size<sizeof(CosmeticsController::PurchaseItemStages), 0 + sizeof(int)> __GorillaNetworking_CosmeticsController_PurchaseItemStagesSizeCheck;
    static_assert(sizeof(CosmeticsController::PurchaseItemStages) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: GorillaNetworking.CosmeticsController/ATMStages
    // [TokenAttribute] Offset: FFFFFFFF
    struct ATMStages/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: ATMStages
      constexpr ATMStages(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public GorillaNetworking.CosmeticsController/ATMStages Unavailable
      static constexpr const int Unavailable = 0;
      // Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Unavailable
      static ::GorillaNetworking::CosmeticsController::ATMStages _get_Unavailable();
      // Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Unavailable
      static void _set_Unavailable(::GorillaNetworking::CosmeticsController::ATMStages value);
      // static field const value: static public GorillaNetworking.CosmeticsController/ATMStages Begin
      static constexpr const int Begin = 1;
      // Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Begin
      static ::GorillaNetworking::CosmeticsController::ATMStages _get_Begin();
      // Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Begin
      static void _set_Begin(::GorillaNetworking::CosmeticsController::ATMStages value);
      // static field const value: static public GorillaNetworking.CosmeticsController/ATMStages Menu
      static constexpr const int Menu = 2;
      // Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Menu
      static ::GorillaNetworking::CosmeticsController::ATMStages _get_Menu();
      // Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Menu
      static void _set_Menu(::GorillaNetworking::CosmeticsController::ATMStages value);
      // static field const value: static public GorillaNetworking.CosmeticsController/ATMStages Balance
      static constexpr const int Balance = 3;
      // Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Balance
      static ::GorillaNetworking::CosmeticsController::ATMStages _get_Balance();
      // Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Balance
      static void _set_Balance(::GorillaNetworking::CosmeticsController::ATMStages value);
      // static field const value: static public GorillaNetworking.CosmeticsController/ATMStages Choose
      static constexpr const int Choose = 4;
      // Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Choose
      static ::GorillaNetworking::CosmeticsController::ATMStages _get_Choose();
      // Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Choose
      static void _set_Choose(::GorillaNetworking::CosmeticsController::ATMStages value);
      // static field const value: static public GorillaNetworking.CosmeticsController/ATMStages Confirm
      static constexpr const int Confirm = 5;
      // Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Confirm
      static ::GorillaNetworking::CosmeticsController::ATMStages _get_Confirm();
      // Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Confirm
      static void _set_Confirm(::GorillaNetworking::CosmeticsController::ATMStages value);
      // static field const value: static public GorillaNetworking.CosmeticsController/ATMStages Purchasing
      static constexpr const int Purchasing = 6;
      // Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Purchasing
      static ::GorillaNetworking::CosmeticsController::ATMStages _get_Purchasing();
      // Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Purchasing
      static void _set_Purchasing(::GorillaNetworking::CosmeticsController::ATMStages value);
      // static field const value: static public GorillaNetworking.CosmeticsController/ATMStages Success
      static constexpr const int Success = 7;
      // Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Success
      static ::GorillaNetworking::CosmeticsController::ATMStages _get_Success();
      // Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Success
      static void _set_Success(::GorillaNetworking::CosmeticsController::ATMStages value);
      // static field const value: static public GorillaNetworking.CosmeticsController/ATMStages Failure
      static constexpr const int Failure = 8;
      // Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Failure
      static ::GorillaNetworking::CosmeticsController::ATMStages _get_Failure();
      // Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Failure
      static void _set_Failure(::GorillaNetworking::CosmeticsController::ATMStages value);
      // static field const value: static public GorillaNetworking.CosmeticsController/ATMStages SafeAccount
      static constexpr const int SafeAccount = 9;
      // Get static field: static public GorillaNetworking.CosmeticsController/ATMStages SafeAccount
      static ::GorillaNetworking::CosmeticsController::ATMStages _get_SafeAccount();
      // Set static field: static public GorillaNetworking.CosmeticsController/ATMStages SafeAccount
      static void _set_SafeAccount(::GorillaNetworking::CosmeticsController::ATMStages value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // GorillaNetworking.CosmeticsController/ATMStages
    #pragma pack(pop)
    static check_size<sizeof(CosmeticsController::ATMStages), 0 + sizeof(int)> __GorillaNetworking_CosmeticsController_ATMStagesSizeCheck;
    static_assert(sizeof(CosmeticsController::ATMStages) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: GorillaNetworking.CosmeticsController/CosmeticCategory
    // [TokenAttribute] Offset: FFFFFFFF
    struct CosmeticCategory/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: CosmeticCategory
      constexpr CosmeticCategory(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticCategory None
      static constexpr const int None = 0;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory None
      static ::GorillaNetworking::CosmeticsController::CosmeticCategory _get_None();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory None
      static void _set_None(::GorillaNetworking::CosmeticsController::CosmeticCategory value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticCategory Hat
      static constexpr const int Hat = 1;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Hat
      static ::GorillaNetworking::CosmeticsController::CosmeticCategory _get_Hat();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Hat
      static void _set_Hat(::GorillaNetworking::CosmeticsController::CosmeticCategory value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticCategory Badge
      static constexpr const int Badge = 2;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Badge
      static ::GorillaNetworking::CosmeticsController::CosmeticCategory _get_Badge();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Badge
      static void _set_Badge(::GorillaNetworking::CosmeticsController::CosmeticCategory value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticCategory Face
      static constexpr const int Face = 3;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Face
      static ::GorillaNetworking::CosmeticsController::CosmeticCategory _get_Face();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Face
      static void _set_Face(::GorillaNetworking::CosmeticsController::CosmeticCategory value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticCategory Paw
      static constexpr const int Paw = 4;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Paw
      static ::GorillaNetworking::CosmeticsController::CosmeticCategory _get_Paw();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Paw
      static void _set_Paw(::GorillaNetworking::CosmeticsController::CosmeticCategory value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticCategory Chest
      static constexpr const int Chest = 5;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Chest
      static ::GorillaNetworking::CosmeticsController::CosmeticCategory _get_Chest();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Chest
      static void _set_Chest(::GorillaNetworking::CosmeticsController::CosmeticCategory value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticCategory Fur
      static constexpr const int Fur = 6;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Fur
      static ::GorillaNetworking::CosmeticsController::CosmeticCategory _get_Fur();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Fur
      static void _set_Fur(::GorillaNetworking::CosmeticsController::CosmeticCategory value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticCategory Shirt
      static constexpr const int Shirt = 7;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Shirt
      static ::GorillaNetworking::CosmeticsController::CosmeticCategory _get_Shirt();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Shirt
      static void _set_Shirt(::GorillaNetworking::CosmeticsController::CosmeticCategory value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticCategory Back
      static constexpr const int Back = 8;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Back
      static ::GorillaNetworking::CosmeticsController::CosmeticCategory _get_Back();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Back
      static void _set_Back(::GorillaNetworking::CosmeticsController::CosmeticCategory value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticCategory Arms
      static constexpr const int Arms = 9;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Arms
      static ::GorillaNetworking::CosmeticsController::CosmeticCategory _get_Arms();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Arms
      static void _set_Arms(::GorillaNetworking::CosmeticsController::CosmeticCategory value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticCategory Pants
      static constexpr const int Pants = 10;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Pants
      static ::GorillaNetworking::CosmeticsController::CosmeticCategory _get_Pants();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Pants
      static void _set_Pants(::GorillaNetworking::CosmeticsController::CosmeticCategory value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticCategory TagEffect
      static constexpr const int TagEffect = 11;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory TagEffect
      static ::GorillaNetworking::CosmeticsController::CosmeticCategory _get_TagEffect();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory TagEffect
      static void _set_TagEffect(::GorillaNetworking::CosmeticsController::CosmeticCategory value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticCategory Count
      static constexpr const int Count = 12;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Count
      static ::GorillaNetworking::CosmeticsController::CosmeticCategory _get_Count();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Count
      static void _set_Count(::GorillaNetworking::CosmeticsController::CosmeticCategory value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticCategory Set
      static constexpr const int Set = 13;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Set
      static ::GorillaNetworking::CosmeticsController::CosmeticCategory _get_Set();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticCategory Set
      static void _set_Set(::GorillaNetworking::CosmeticsController::CosmeticCategory value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // GorillaNetworking.CosmeticsController/CosmeticCategory
    #pragma pack(pop)
    static check_size<sizeof(CosmeticsController::CosmeticCategory), 0 + sizeof(int)> __GorillaNetworking_CosmeticsController_CosmeticCategorySizeCheck;
    static_assert(sizeof(CosmeticsController::CosmeticCategory) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: GorillaNetworking.CosmeticsController/CosmeticSlots
    // [TokenAttribute] Offset: FFFFFFFF
    struct CosmeticSlots/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: CosmeticSlots
      constexpr CosmeticSlots(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots Hat
      static constexpr const int Hat = 0;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Hat
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_Hat();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Hat
      static void _set_Hat(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots Badge
      static constexpr const int Badge = 1;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Badge
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_Badge();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Badge
      static void _set_Badge(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots Face
      static constexpr const int Face = 2;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Face
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_Face();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Face
      static void _set_Face(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots ArmLeft
      static constexpr const int ArmLeft = 3;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots ArmLeft
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_ArmLeft();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots ArmLeft
      static void _set_ArmLeft(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots ArmRight
      static constexpr const int ArmRight = 4;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots ArmRight
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_ArmRight();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots ArmRight
      static void _set_ArmRight(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots BackLeft
      static constexpr const int BackLeft = 5;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots BackLeft
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_BackLeft();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots BackLeft
      static void _set_BackLeft(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots BackRight
      static constexpr const int BackRight = 6;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots BackRight
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_BackRight();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots BackRight
      static void _set_BackRight(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots HandLeft
      static constexpr const int HandLeft = 7;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots HandLeft
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_HandLeft();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots HandLeft
      static void _set_HandLeft(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots HandRight
      static constexpr const int HandRight = 8;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots HandRight
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_HandRight();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots HandRight
      static void _set_HandRight(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots Chest
      static constexpr const int Chest = 9;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Chest
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_Chest();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Chest
      static void _set_Chest(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots Fur
      static constexpr const int Fur = 10;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Fur
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_Fur();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Fur
      static void _set_Fur(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots Shirt
      static constexpr const int Shirt = 11;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Shirt
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_Shirt();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Shirt
      static void _set_Shirt(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots Pants
      static constexpr const int Pants = 12;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Pants
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_Pants();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Pants
      static void _set_Pants(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots Back
      static constexpr const int Back = 13;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Back
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_Back();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Back
      static void _set_Back(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots Arms
      static constexpr const int Arms = 14;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Arms
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_Arms();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Arms
      static void _set_Arms(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots TagEffect
      static constexpr const int TagEffect = 15;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots TagEffect
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_TagEffect();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots TagEffect
      static void _set_TagEffect(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // static field const value: static public GorillaNetworking.CosmeticsController/CosmeticSlots Count
      static constexpr const int Count = 16;
      // Get static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Count
      static ::GorillaNetworking::CosmeticsController::CosmeticSlots _get_Count();
      // Set static field: static public GorillaNetworking.CosmeticsController/CosmeticSlots Count
      static void _set_Count(::GorillaNetworking::CosmeticsController::CosmeticSlots value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // GorillaNetworking.CosmeticsController/CosmeticSlots
    #pragma pack(pop)
    static check_size<sizeof(CosmeticsController::CosmeticSlots), 0 + sizeof(int)> __GorillaNetworking_CosmeticsController_CosmeticSlotsSizeCheck;
    static_assert(sizeof(CosmeticsController::CosmeticSlots) == 0x4);
    // Size: 0x79
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: GorillaNetworking.CosmeticsController/CosmeticItem
    // [TokenAttribute] Offset: FFFFFFFF
    struct CosmeticItem/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.String itemName
      // Size: 0x8
      // Offset: 0x0
      ::StringW itemName;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // public GorillaNetworking.CosmeticsController/CosmeticCategory itemCategory
      // Size: 0x4
      // Offset: 0x8
      ::GorillaNetworking::CosmeticsController::CosmeticCategory itemCategory;
      // Field size check
      static_assert(sizeof(::GorillaNetworking::CosmeticsController::CosmeticCategory) == 0x4);
      // public System.Boolean isHoldable
      // Size: 0x1
      // Offset: 0xC
      bool isHoldable;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // Padding between fields: isHoldable and: itemPicture
      char __padding2[0x3] = {};
      // public UnityEngine.Sprite itemPicture
      // Size: 0x8
      // Offset: 0x10
      ::UnityEngine::Sprite* itemPicture;
      // Field size check
      static_assert(sizeof(::UnityEngine::Sprite*) == 0x8);
      // public System.String displayName
      // Size: 0x8
      // Offset: 0x18
      ::StringW displayName;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // public System.String itemPictureResourceString
      // Size: 0x8
      // Offset: 0x20
      ::StringW itemPictureResourceString;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // public System.String overrideDisplayName
      // Size: 0x8
      // Offset: 0x28
      ::StringW overrideDisplayName;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // public System.Int32 cost
      // Size: 0x4
      // Offset: 0x30
      int cost;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Padding between fields: cost and: bundledItems
      char __padding7[0x4] = {};
      // public System.String[] bundledItems
      // Size: 0x8
      // Offset: 0x38
      ::ArrayW<::StringW> bundledItems;
      // Field size check
      static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
      // public System.Boolean canTryOn
      // Size: 0x1
      // Offset: 0x40
      bool canTryOn;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // public System.Boolean bothHandsHoldable
      // Size: 0x1
      // Offset: 0x41
      bool bothHandsHoldable;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // public System.Boolean bLoadsFromResources
      // Size: 0x1
      // Offset: 0x42
      bool bLoadsFromResources;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // public System.Boolean bUsesMeshAtlas
      // Size: 0x1
      // Offset: 0x43
      bool bUsesMeshAtlas;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // public UnityEngine.Vector3 rotationOffset
      // Size: 0xC
      // Offset: 0x44
      ::UnityEngine::Vector3 rotationOffset;
      // Field size check
      static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
      // public UnityEngine.Vector3 positionOffset
      // Size: 0xC
      // Offset: 0x50
      ::UnityEngine::Vector3 positionOffset;
      // Field size check
      static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
      // Padding between fields: positionOffset and: meshAtlasResourceString
      char __padding14[0x4] = {};
      // public System.String meshAtlasResourceString
      // Size: 0x8
      // Offset: 0x60
      ::StringW meshAtlasResourceString;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // public System.String meshResourceString
      // Size: 0x8
      // Offset: 0x68
      ::StringW meshResourceString;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // public System.String materialResourceString
      // Size: 0x8
      // Offset: 0x70
      ::StringW materialResourceString;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // public System.Boolean isNullItem
      // Size: 0x1
      // Offset: 0x78
      bool isNullItem;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      public:
      // Creating value type constructor for type: CosmeticItem
      constexpr CosmeticItem(::StringW itemName_ = {}, ::GorillaNetworking::CosmeticsController::CosmeticCategory itemCategory_ = {}, bool isHoldable_ = {}, ::UnityEngine::Sprite* itemPicture_ = {}, ::StringW displayName_ = {}, ::StringW itemPictureResourceString_ = {}, ::StringW overrideDisplayName_ = {}, int cost_ = {}, ::ArrayW<::StringW> bundledItems_ = ::ArrayW<::StringW>(static_cast<void*>(nullptr)), bool canTryOn_ = {}, bool bothHandsHoldable_ = {}, bool bLoadsFromResources_ = {}, bool bUsesMeshAtlas_ = {}, ::UnityEngine::Vector3 rotationOffset_ = {}, ::UnityEngine::Vector3 positionOffset_ = {}, ::StringW meshAtlasResourceString_ = {}, ::StringW meshResourceString_ = {}, ::StringW materialResourceString_ = {}, bool isNullItem_ = {}) noexcept : itemName{itemName_}, itemCategory{itemCategory_}, isHoldable{isHoldable_}, itemPicture{itemPicture_}, displayName{displayName_}, itemPictureResourceString{itemPictureResourceString_}, overrideDisplayName{overrideDisplayName_}, cost{cost_}, bundledItems{bundledItems_}, canTryOn{canTryOn_}, bothHandsHoldable{bothHandsHoldable_}, bLoadsFromResources{bLoadsFromResources_}, bUsesMeshAtlas{bUsesMeshAtlas_}, rotationOffset{rotationOffset_}, positionOffset{positionOffset_}, meshAtlasResourceString{meshAtlasResourceString_}, meshResourceString{meshResourceString_}, materialResourceString{materialResourceString_}, isNullItem{isNullItem_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public System.String itemName
      [[deprecated("Use field access instead!")]] ::StringW& dyn_itemName();
      // Get instance field reference: public GorillaNetworking.CosmeticsController/CosmeticCategory itemCategory
      [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticCategory& dyn_itemCategory();
      // Get instance field reference: public System.Boolean isHoldable
      [[deprecated("Use field access instead!")]] bool& dyn_isHoldable();
      // Get instance field reference: public UnityEngine.Sprite itemPicture
      [[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& dyn_itemPicture();
      // Get instance field reference: public System.String displayName
      [[deprecated("Use field access instead!")]] ::StringW& dyn_displayName();
      // Get instance field reference: public System.String itemPictureResourceString
      [[deprecated("Use field access instead!")]] ::StringW& dyn_itemPictureResourceString();
      // Get instance field reference: public System.String overrideDisplayName
      [[deprecated("Use field access instead!")]] ::StringW& dyn_overrideDisplayName();
      // Get instance field reference: public System.Int32 cost
      [[deprecated("Use field access instead!")]] int& dyn_cost();
      // Get instance field reference: public System.String[] bundledItems
      [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_bundledItems();
      // Get instance field reference: public System.Boolean canTryOn
      [[deprecated("Use field access instead!")]] bool& dyn_canTryOn();
      // Get instance field reference: public System.Boolean bothHandsHoldable
      [[deprecated("Use field access instead!")]] bool& dyn_bothHandsHoldable();
      // Get instance field reference: public System.Boolean bLoadsFromResources
      [[deprecated("Use field access instead!")]] bool& dyn_bLoadsFromResources();
      // Get instance field reference: public System.Boolean bUsesMeshAtlas
      [[deprecated("Use field access instead!")]] bool& dyn_bUsesMeshAtlas();
      // Get instance field reference: public UnityEngine.Vector3 rotationOffset
      [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_rotationOffset();
      // Get instance field reference: public UnityEngine.Vector3 positionOffset
      [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_positionOffset();
      // Get instance field reference: public System.String meshAtlasResourceString
      [[deprecated("Use field access instead!")]] ::StringW& dyn_meshAtlasResourceString();
      // Get instance field reference: public System.String meshResourceString
      [[deprecated("Use field access instead!")]] ::StringW& dyn_meshResourceString();
      // Get instance field reference: public System.String materialResourceString
      [[deprecated("Use field access instead!")]] ::StringW& dyn_materialResourceString();
      // Get instance field reference: public System.Boolean isNullItem
      [[deprecated("Use field access instead!")]] bool& dyn_isNullItem();
    }; // GorillaNetworking.CosmeticsController/CosmeticItem
    #pragma pack(pop)
    static check_size<sizeof(CosmeticsController::CosmeticItem), 120 + sizeof(bool)> __GorillaNetworking_CosmeticsController_CosmeticItemSizeCheck;
    static_assert(sizeof(CosmeticsController::CosmeticItem) == 0x79);
    public:
    // public GorillaTag.GTAssetRef`1<GorillaTag.CosmeticSystem.AllCosmeticsArraySO> v2_allCosmeticsInfoAssetRef
    // Size: 0x8
    // Offset: 0x20
    ::GorillaTag::GTAssetRef_1<::GorillaTag::CosmeticSystem::AllCosmeticsArraySO*>* v2_allCosmeticsInfoAssetRef;
    // Field size check
    static_assert(sizeof(::GorillaTag::GTAssetRef_1<::GorillaTag::CosmeticSystem::AllCosmeticsArraySO*>*) == 0x8);
    // private GorillaTag.CosmeticSystem.CosmeticInfoV2[] <v2_allCosmetics>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::GorillaTag::CosmeticSystem::CosmeticInfoV2> v2_allCosmetics;
    // Field size check
    static_assert(sizeof(::ArrayW<::GorillaTag::CosmeticSystem::CosmeticInfoV2>) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<System.String,GorillaTag.CosmeticSystem.CosmeticInfoV2> _allCosmeticsDictV2
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaTag::CosmeticSystem::CosmeticInfoV2>* allCosmeticsDictV2;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaTag::CosmeticSystem::CosmeticInfoV2>*) == 0x8);
    // public System.Action V2_allCosmeticsInfoAssetRef_OnPostLoad
    // Size: 0x8
    // Offset: 0x38
    ::System::Action* V2_allCosmeticsInfoAssetRef_OnPostLoad;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Boolean <v2_allCosmeticsInfoAssetRef_isLoaded>k__BackingField
    // Size: 0x1
    // Offset: 0x40
    bool v2_allCosmeticsInfoAssetRef_isLoaded;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <v2_isGetCosmeticsPlayCatalogDataWaitingForCallback>k__BackingField
    // Size: 0x1
    // Offset: 0x41
    bool v2_isGetCosmeticsPlayCatalogDataWaitingForCallback;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <v2_isCosmeticPlayFabCatalogDataLoaded>k__BackingField
    // Size: 0x1
    // Offset: 0x42
    bool v2_isCosmeticPlayFabCatalogDataLoaded;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: v2_isCosmeticPlayFabCatalogDataLoaded and: V2_OnGetCosmeticsPlayFabCatalogData_PostSuccess
    char __padding6[0x5] = {};
    // public System.Action V2_OnGetCosmeticsPlayFabCatalogData_PostSuccess
    // Size: 0x8
    // Offset: 0x48
    ::System::Action* V2_OnGetCosmeticsPlayFabCatalogData_PostSuccess;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> _allCosmetics
    // Size: 0x8
    // Offset: 0x50
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* allCosmetics;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*) == 0x8);
    // private System.Boolean <allCosmeticsDict_isInitialized>k__BackingField
    // Size: 0x1
    // Offset: 0x58
    bool allCosmeticsDict_isInitialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: allCosmeticsDict_isInitialized and: allCosmeticsDict
    char __padding9[0x7] = {};
    // public System.Collections.Generic.Dictionary`2<System.String,GorillaNetworking.CosmeticsController/CosmeticItem> _allCosmeticsDict
    // Size: 0x8
    // Offset: 0x60
    ::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaNetworking::CosmeticsController::CosmeticItem>* allCosmeticsDict;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaNetworking::CosmeticsController::CosmeticItem>*) == 0x8);
    // private System.Boolean <allCosmeticsItemIDsfromDisplayNamesDict_isInitialized>k__BackingField
    // Size: 0x1
    // Offset: 0x68
    bool allCosmeticsItemIDsfromDisplayNamesDict_isInitialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: allCosmeticsItemIDsfromDisplayNamesDict_isInitialized and: allCosmeticsItemIDsfromDisplayNamesDict
    char __padding11[0x7] = {};
    // public System.Collections.Generic.Dictionary`2<System.String,System.String> _allCosmeticsItemIDsfromDisplayNamesDict
    // Size: 0x8
    // Offset: 0x70
    ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* allCosmeticsItemIDsfromDisplayNamesDict;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*) == 0x8);
    // public GorillaNetworking.CosmeticsController/CosmeticItem nullItem
    // Size: 0x79
    // Offset: 0x78
    ::GorillaNetworking::CosmeticsController::CosmeticItem nullItem;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController::CosmeticItem) == 0x79);
    // Padding between fields: nullItem and: catalog
    char __padding13[0x7] = {};
    // public System.String catalog
    // Size: 0x8
    // Offset: 0xF8
    ::StringW catalog;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String[] tempStringArray
    // Size: 0x8
    // Offset: 0x100
    ::ArrayW<::StringW> tempStringArray;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // private GorillaNetworking.CosmeticsController/CosmeticItem tempItem
    // Size: 0x79
    // Offset: 0x108
    ::GorillaNetworking::CosmeticsController::CosmeticItem tempItem;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController::CosmeticItem) == 0x79);
    // Padding between fields: tempItem and: anchorOverrides
    char __padding16[0x7] = {};
    // private VRRigAnchorOverrides anchorOverrides
    // Size: 0x8
    // Offset: 0x188
    ::GlobalNamespace::VRRigAnchorOverrides* anchorOverrides;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::VRRigAnchorOverrides*) == 0x8);
    // public System.Collections.Generic.List`1<PlayFab.ClientModels.CatalogItem> catalogItems
    // Size: 0x8
    // Offset: 0x190
    ::System::Collections::Generic::List_1<::PlayFab::ClientModels::CatalogItem*>* catalogItems;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::PlayFab::ClientModels::CatalogItem*>*) == 0x8);
    // public System.Boolean tryTwice
    // Size: 0x1
    // Offset: 0x198
    bool tryTwice;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: tryTwice and: tryOnSet
    char __padding19[0x7] = {};
    // public GorillaNetworking.CosmeticsController/CosmeticSet tryOnSet
    // Size: 0x8
    // Offset: 0x1A0
    ::GorillaNetworking::CosmeticsController::CosmeticSet* tryOnSet;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController::CosmeticSet*) == 0x8);
    // public FittingRoomButton[] fittingRoomButtons
    // Size: 0x8
    // Offset: 0x1A8
    ::ArrayW<::GlobalNamespace::FittingRoomButton*> fittingRoomButtons;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::FittingRoomButton*>) == 0x8);
    // public CosmeticStand[] cosmeticStands
    // Size: 0x8
    // Offset: 0x1B0
    ::ArrayW<::GlobalNamespace::CosmeticStand*> cosmeticStands;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::CosmeticStand*>) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> currentCart
    // Size: 0x8
    // Offset: 0x1B8
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* currentCart;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*) == 0x8);
    // public GorillaNetworking.CosmeticsController/PurchaseItemStages currentPurchaseItemStage
    // Size: 0x4
    // Offset: 0x1C0
    ::GorillaNetworking::CosmeticsController::PurchaseItemStages currentPurchaseItemStage;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController::PurchaseItemStages) == 0x4);
    // Padding between fields: currentPurchaseItemStage and: checkoutCartButtons
    char __padding24[0x4] = {};
    // public CheckoutCartButton[] checkoutCartButtons
    // Size: 0x8
    // Offset: 0x1C8
    ::ArrayW<::GlobalNamespace::CheckoutCartButton*> checkoutCartButtons;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::CheckoutCartButton*>) == 0x8);
    // public PurchaseItemButton leftPurchaseButton
    // Size: 0x8
    // Offset: 0x1D0
    ::GlobalNamespace::PurchaseItemButton* leftPurchaseButton;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PurchaseItemButton*) == 0x8);
    // public PurchaseItemButton rightPurchaseButton
    // Size: 0x8
    // Offset: 0x1D8
    ::GlobalNamespace::PurchaseItemButton* rightPurchaseButton;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PurchaseItemButton*) == 0x8);
    // public UnityEngine.UI.Text purchaseText
    // Size: 0x8
    // Offset: 0x1E0
    ::UnityEngine::UI::Text* purchaseText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public GorillaNetworking.CosmeticsController/CosmeticItem itemToBuy
    // Size: 0x79
    // Offset: 0x1E8
    ::GorillaNetworking::CosmeticsController::CosmeticItem itemToBuy;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController::CosmeticItem) == 0x79);
    // Padding between fields: itemToBuy and: checkoutHeadModel
    char __padding29[0x7] = {};
    // public HeadModel checkoutHeadModel
    // Size: 0x8
    // Offset: 0x268
    ::GlobalNamespace::HeadModel* checkoutHeadModel;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::HeadModel*) == 0x8);
    // private System.Collections.Generic.List`1<System.String> playerIDList
    // Size: 0x8
    // Offset: 0x270
    ::System::Collections::Generic::List_1<::StringW>* playerIDList;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // private System.Boolean foundCosmetic
    // Size: 0x1
    // Offset: 0x278
    bool foundCosmetic;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: foundCosmetic and: attempts
    char __padding32[0x3] = {};
    // private System.Int32 attempts
    // Size: 0x4
    // Offset: 0x27C
    int attempts;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.String finalLine
    // Size: 0x8
    // Offset: 0x280
    ::StringW finalLine;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean isLastHandTouchedLeft
    // Size: 0x1
    // Offset: 0x288
    bool isLastHandTouchedLeft;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isLastHandTouchedLeft and: cachedSet
    char __padding35[0x7] = {};
    // private GorillaNetworking.CosmeticsController/CosmeticSet cachedSet
    // Size: 0x8
    // Offset: 0x290
    ::GorillaNetworking::CosmeticsController::CosmeticSet* cachedSet;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController::CosmeticSet*) == 0x8);
    // public readonly System.Collections.Generic.List`1<WardrobeInstance> wardrobes
    // Size: 0x8
    // Offset: 0x298
    ::System::Collections::Generic::List_1<::GlobalNamespace::WardrobeInstance*>* wardrobes;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GlobalNamespace::WardrobeInstance*>*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedCosmetics
    // Size: 0x8
    // Offset: 0x2A0
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* unlockedCosmetics;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedHats
    // Size: 0x8
    // Offset: 0x2A8
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* unlockedHats;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedFaces
    // Size: 0x8
    // Offset: 0x2B0
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* unlockedFaces;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedBadges
    // Size: 0x8
    // Offset: 0x2B8
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* unlockedBadges;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedPaws
    // Size: 0x8
    // Offset: 0x2C0
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* unlockedPaws;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedChests
    // Size: 0x8
    // Offset: 0x2C8
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* unlockedChests;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedFurs
    // Size: 0x8
    // Offset: 0x2D0
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* unlockedFurs;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedShirts
    // Size: 0x8
    // Offset: 0x2D8
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* unlockedShirts;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedPants
    // Size: 0x8
    // Offset: 0x2E0
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* unlockedPants;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedBacks
    // Size: 0x8
    // Offset: 0x2E8
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* unlockedBacks;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedArms
    // Size: 0x8
    // Offset: 0x2F0
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* unlockedArms;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*) == 0x8);
    // public System.Int32[] cosmeticsPages
    // Size: 0x8
    // Offset: 0x2F8
    ::ArrayW<int> cosmeticsPages;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem>[] itemLists
    // Size: 0x8
    // Offset: 0x300
    ::ArrayW<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*> itemLists;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*>) == 0x8);
    // private System.Int32 wardrobeType
    // Size: 0x4
    // Offset: 0x308
    int wardrobeType;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: wardrobeType and: currentWornSet
    char __padding51[0x4] = {};
    // public GorillaNetworking.CosmeticsController/CosmeticSet currentWornSet
    // Size: 0x8
    // Offset: 0x310
    ::GorillaNetworking::CosmeticsController::CosmeticSet* currentWornSet;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController::CosmeticSet*) == 0x8);
    // public System.String concatStringCosmeticsAllowed
    // Size: 0x8
    // Offset: 0x318
    ::StringW concatStringCosmeticsAllowed;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Action OnCosmeticsUpdated
    // Size: 0x8
    // Offset: 0x320
    ::System::Action* OnCosmeticsUpdated;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // public UnityEngine.UI.Text atmText
    // Size: 0x8
    // Offset: 0x328
    ::UnityEngine::UI::Text* atmText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public System.String currentAtmString
    // Size: 0x8
    // Offset: 0x330
    ::StringW currentAtmString;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.UI.Text infoText
    // Size: 0x8
    // Offset: 0x338
    ::UnityEngine::UI::Text* infoText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public UnityEngine.UI.Text earlyAccessText
    // Size: 0x8
    // Offset: 0x340
    ::UnityEngine::UI::Text* earlyAccessText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public UnityEngine.UI.Text[] purchaseButtonText
    // Size: 0x8
    // Offset: 0x348
    ::ArrayW<::UnityEngine::UI::Text*> purchaseButtonText;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::UI::Text*>) == 0x8);
    // public UnityEngine.UI.Text dailyText
    // Size: 0x8
    // Offset: 0x350
    ::UnityEngine::UI::Text* dailyText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public GorillaNetworking.CosmeticsController/ATMStages currentATMStage
    // Size: 0x4
    // Offset: 0x358
    ::GorillaNetworking::CosmeticsController::ATMStages currentATMStage;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController::ATMStages) == 0x4);
    // Padding between fields: currentATMStage and: ATM_RightColumnButtonText
    char __padding61[0x4] = {};
    // public UnityEngine.UI.Text[] ATM_RightColumnButtonText
    // Size: 0x8
    // Offset: 0x360
    ::ArrayW<::UnityEngine::UI::Text*> ATM_RightColumnButtonText;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::UI::Text*>) == 0x8);
    // public UnityEngine.UI.Text[] ATM_RightColumnArrowText
    // Size: 0x8
    // Offset: 0x368
    ::ArrayW<::UnityEngine::UI::Text*> ATM_RightColumnArrowText;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::UI::Text*>) == 0x8);
    // public System.Int32 currencyBalance
    // Size: 0x4
    // Offset: 0x370
    int currencyBalance;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: currencyBalance and: currencyName
    char __padding64[0x4] = {};
    // public System.String currencyName
    // Size: 0x8
    // Offset: 0x378
    ::StringW currencyName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public PurchaseCurrencyButton[] purchaseCurrencyButtons
    // Size: 0x8
    // Offset: 0x380
    ::ArrayW<::GlobalNamespace::PurchaseCurrencyButton*> purchaseCurrencyButtons;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::PurchaseCurrencyButton*>) == 0x8);
    // public UnityEngine.UI.Text currencyBoardText
    // Size: 0x8
    // Offset: 0x388
    ::UnityEngine::UI::Text* currencyBoardText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public UnityEngine.UI.Text currencyBoxText
    // Size: 0x8
    // Offset: 0x390
    ::UnityEngine::UI::Text* currencyBoxText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public System.String startingCurrencyBoxTextString
    // Size: 0x8
    // Offset: 0x398
    ::StringW startingCurrencyBoxTextString;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String successfulCurrencyPurchaseTextString
    // Size: 0x8
    // Offset: 0x3A0
    ::StringW successfulCurrencyPurchaseTextString;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Int32 numShinyRocksToBuy
    // Size: 0x4
    // Offset: 0x3A8
    int numShinyRocksToBuy;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Single shinyRocksCost
    // Size: 0x4
    // Offset: 0x3AC
    float shinyRocksCost;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.String itemToPurchase
    // Size: 0x8
    // Offset: 0x3B0
    ::StringW itemToPurchase;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean confirmedDidntPlayInBeta
    // Size: 0x1
    // Offset: 0x3B8
    bool confirmedDidntPlayInBeta;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean playedInBeta
    // Size: 0x1
    // Offset: 0x3B9
    bool playedInBeta;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean gotMyDaily
    // Size: 0x1
    // Offset: 0x3BA
    bool gotMyDaily;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean checkedDaily
    // Size: 0x1
    // Offset: 0x3BB
    bool checkedDaily;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: checkedDaily and: currentPurchaseID
    char __padding77[0x4] = {};
    // public System.String currentPurchaseID
    // Size: 0x8
    // Offset: 0x3C0
    ::StringW currentPurchaseID;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean hasPrice
    // Size: 0x1
    // Offset: 0x3C8
    bool hasPrice;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: hasPrice and: searchIndex
    char __padding79[0x3] = {};
    // private System.Int32 searchIndex
    // Size: 0x4
    // Offset: 0x3CC
    int searchIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 iterator
    // Size: 0x4
    // Offset: 0x3D0
    int iterator;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: iterator and: cosmeticItemVar
    char __padding81[0x4] = {};
    // private GorillaNetworking.CosmeticsController/CosmeticItem cosmeticItemVar
    // Size: 0x79
    // Offset: 0x3D8
    ::GorillaNetworking::CosmeticsController::CosmeticItem cosmeticItemVar;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController::CosmeticItem) == 0x79);
    // Padding between fields: cosmeticItemVar and: earlyAccessButtons
    char __padding82[0x7] = {};
    // public EarlyAccessButton[] earlyAccessButtons
    // Size: 0x8
    // Offset: 0x458
    ::ArrayW<::GlobalNamespace::EarlyAccessButton*> earlyAccessButtons;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::EarlyAccessButton*>) == 0x8);
    // private BundleList bundleList
    // Size: 0x8
    // Offset: 0x460
    ::GlobalNamespace::BundleList* bundleList;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::BundleList*) == 0x8);
    // public System.String BundleSkuName
    // Size: 0x8
    // Offset: 0x468
    ::StringW BundleSkuName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String BundlePlayfabItemName
    // Size: 0x8
    // Offset: 0x470
    ::StringW BundlePlayfabItemName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Int32 BundleShinyRocks
    // Size: 0x4
    // Offset: 0x478
    int BundleShinyRocks;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: BundleShinyRocks and: userToken
    char __padding87[0x4] = {};
    // private System.String userToken
    // Size: 0x8
    // Offset: 0x480
    ::StringW userToken;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean triggerAPI
    // Size: 0x1
    // Offset: 0x488
    bool triggerAPI;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: triggerAPI and: iapConsumeAttempts
    char __padding89[0x3] = {};
    // public System.Int32 iapConsumeAttempts
    // Size: 0x4
    // Offset: 0x48C
    int iapConsumeAttempts;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 attemptsLimit
    // Size: 0x4
    // Offset: 0x490
    int attemptsLimit;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean tryGetPurchasesTwice
    // Size: 0x1
    // Offset: 0x494
    bool tryGetPurchasesTwice;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: tryGetPurchasesTwice and: startupSKU
    char __padding92[0x3] = {};
    // public System.String startupSKU
    // Size: 0x8
    // Offset: 0x498
    ::StringW startupSKU;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Int32 startupAttempts
    // Size: 0x4
    // Offset: 0x4A0
    int startupAttempts;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean oculusAttemptingToPurchase
    // Size: 0x1
    // Offset: 0x4A4
    bool oculusAttemptingToPurchase;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: oculusAttemptingToPurchase and: debugParameters
    char __padding95[0x3] = {};
    // public System.Boolean[] debugParameters
    // Size: 0x8
    // Offset: 0x4A8
    ::ArrayW<bool> debugParameters;
    // Field size check
    static_assert(sizeof(::ArrayW<bool>) == 0x8);
    // public System.DateTime currentTime
    // Size: 0x8
    // Offset: 0x4B0
    ::System::DateTime currentTime;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    // public System.String lastDailyLogin
    // Size: 0x8
    // Offset: 0x4B8
    ::StringW lastDailyLogin;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public PlayFab.ClientModels.UserDataRecord userDataRecord
    // Size: 0x8
    // Offset: 0x4C0
    ::PlayFab::ClientModels::UserDataRecord* userDataRecord;
    // Field size check
    static_assert(sizeof(::PlayFab::ClientModels::UserDataRecord*) == 0x8);
    // public System.Int32 secondsUntilTomorrow
    // Size: 0x4
    // Offset: 0x4C8
    int secondsUntilTomorrow;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Single secondsToWaitToCheckDaily
    // Size: 0x4
    // Offset: 0x4CC
    float secondsToWaitToCheckDaily;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 updateCosmeticsRetries
    // Size: 0x4
    // Offset: 0x4D0
    int updateCosmeticsRetries;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 maxUpdateCosmeticsRetries
    // Size: 0x4
    // Offset: 0x4D4
    int maxUpdateCosmeticsRetries;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private PlayFab.ClientModels.GetUserInventoryResult latestInventory
    // Size: 0x8
    // Offset: 0x4D8
    ::PlayFab::ClientModels::GetUserInventoryResult* latestInventory;
    // Field size check
    static_assert(sizeof(::PlayFab::ClientModels::GetUserInventoryResult*) == 0x8);
    // private System.String returnString
    // Size: 0x8
    // Offset: 0x4E0
    ::StringW returnString;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // static field const value: static public System.Int32 maximumTransferrableItems
    static constexpr const int maximumTransferrableItems = 5;
    // Get static field: static public System.Int32 maximumTransferrableItems
    static int _get_maximumTransferrableItems();
    // Set static field: static public System.Int32 maximumTransferrableItems
    static void _set_maximumTransferrableItems(int value);
    // static field const value: static private System.String oculusIAPUrl
    static constexpr const char* oculusIAPUrl = "https://iap.gtag-cf.com/api/ConsumeOculusIAP";
    // Get static field: static private System.String oculusIAPUrl
    static ::StringW _get_oculusIAPUrl();
    // Set static field: static private System.String oculusIAPUrl
    static void _set_oculusIAPUrl(::StringW value);
    // Get static field: static public GorillaNetworking.CosmeticsController instance
    static ::GorillaNetworking::CosmeticsController* _get_instance();
    // Set static field: static public GorillaNetworking.CosmeticsController instance
    static void _set_instance(::GorillaNetworking::CosmeticsController* value);
    // Get static field: static private System.Boolean <hasInstance>k__BackingField
    static bool _get_$hasInstance$k__BackingField();
    // Set static field: static private System.Boolean <hasInstance>k__BackingField
    static void _set_$hasInstance$k__BackingField(bool value);
    // Get instance field reference: public GorillaTag.GTAssetRef`1<GorillaTag.CosmeticSystem.AllCosmeticsArraySO> v2_allCosmeticsInfoAssetRef
    [[deprecated("Use field access instead!")]] ::GorillaTag::GTAssetRef_1<::GorillaTag::CosmeticSystem::AllCosmeticsArraySO*>*& dyn_v2_allCosmeticsInfoAssetRef();
    // Get instance field reference: private GorillaTag.CosmeticSystem.CosmeticInfoV2[] <v2_allCosmetics>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::GorillaTag::CosmeticSystem::CosmeticInfoV2>& dyn_$v2_allCosmetics$k__BackingField();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<System.String,GorillaTag.CosmeticSystem.CosmeticInfoV2> _allCosmeticsDictV2
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaTag::CosmeticSystem::CosmeticInfoV2>*& dyn__allCosmeticsDictV2();
    // Get instance field reference: public System.Action V2_allCosmeticsInfoAssetRef_OnPostLoad
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_V2_allCosmeticsInfoAssetRef_OnPostLoad();
    // Get instance field reference: private System.Boolean <v2_allCosmeticsInfoAssetRef_isLoaded>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$v2_allCosmeticsInfoAssetRef_isLoaded$k__BackingField();
    // Get instance field reference: private System.Boolean <v2_isGetCosmeticsPlayCatalogDataWaitingForCallback>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$v2_isGetCosmeticsPlayCatalogDataWaitingForCallback$k__BackingField();
    // Get instance field reference: private System.Boolean <v2_isCosmeticPlayFabCatalogDataLoaded>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$v2_isCosmeticPlayFabCatalogDataLoaded$k__BackingField();
    // Get instance field reference: public System.Action V2_OnGetCosmeticsPlayFabCatalogData_PostSuccess
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_V2_OnGetCosmeticsPlayFabCatalogData_PostSuccess();
    // Get instance field reference: private System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> _allCosmetics
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& dyn__allCosmetics();
    // Get instance field reference: private System.Boolean <allCosmeticsDict_isInitialized>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$allCosmeticsDict_isInitialized$k__BackingField();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,GorillaNetworking.CosmeticsController/CosmeticItem> _allCosmeticsDict
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaNetworking::CosmeticsController::CosmeticItem>*& dyn__allCosmeticsDict();
    // Get instance field reference: private System.Boolean <allCosmeticsItemIDsfromDisplayNamesDict_isInitialized>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$allCosmeticsItemIDsfromDisplayNamesDict_isInitialized$k__BackingField();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,System.String> _allCosmeticsItemIDsfromDisplayNamesDict
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& dyn__allCosmeticsItemIDsfromDisplayNamesDict();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/CosmeticItem nullItem
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& dyn_nullItem();
    // Get instance field reference: public System.String catalog
    [[deprecated("Use field access instead!")]] ::StringW& dyn_catalog();
    // Get instance field reference: private System.String[] tempStringArray
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_tempStringArray();
    // Get instance field reference: private GorillaNetworking.CosmeticsController/CosmeticItem tempItem
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& dyn_tempItem();
    // Get instance field reference: private VRRigAnchorOverrides anchorOverrides
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRigAnchorOverrides*& dyn_anchorOverrides();
    // Get instance field reference: public System.Collections.Generic.List`1<PlayFab.ClientModels.CatalogItem> catalogItems
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ClientModels::CatalogItem*>*& dyn_catalogItems();
    // Get instance field reference: public System.Boolean tryTwice
    [[deprecated("Use field access instead!")]] bool& dyn_tryTwice();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/CosmeticSet tryOnSet
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticSet*& dyn_tryOnSet();
    // Get instance field reference: public FittingRoomButton[] fittingRoomButtons
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::FittingRoomButton*>& dyn_fittingRoomButtons();
    // Get instance field reference: public CosmeticStand[] cosmeticStands
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::CosmeticStand*>& dyn_cosmeticStands();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> currentCart
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& dyn_currentCart();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/PurchaseItemStages currentPurchaseItemStage
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::PurchaseItemStages& dyn_currentPurchaseItemStage();
    // Get instance field reference: public CheckoutCartButton[] checkoutCartButtons
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::CheckoutCartButton*>& dyn_checkoutCartButtons();
    // Get instance field reference: public PurchaseItemButton leftPurchaseButton
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PurchaseItemButton*& dyn_leftPurchaseButton();
    // Get instance field reference: public PurchaseItemButton rightPurchaseButton
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PurchaseItemButton*& dyn_rightPurchaseButton();
    // Get instance field reference: public UnityEngine.UI.Text purchaseText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_purchaseText();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/CosmeticItem itemToBuy
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& dyn_itemToBuy();
    // Get instance field reference: public HeadModel checkoutHeadModel
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::HeadModel*& dyn_checkoutHeadModel();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> playerIDList
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_playerIDList();
    // Get instance field reference: private System.Boolean foundCosmetic
    [[deprecated("Use field access instead!")]] bool& dyn_foundCosmetic();
    // Get instance field reference: private System.Int32 attempts
    [[deprecated("Use field access instead!")]] int& dyn_attempts();
    // Get instance field reference: private System.String finalLine
    [[deprecated("Use field access instead!")]] ::StringW& dyn_finalLine();
    // Get instance field reference: private System.Boolean isLastHandTouchedLeft
    [[deprecated("Use field access instead!")]] bool& dyn_isLastHandTouchedLeft();
    // Get instance field reference: private GorillaNetworking.CosmeticsController/CosmeticSet cachedSet
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticSet*& dyn_cachedSet();
    // Get instance field reference: public readonly System.Collections.Generic.List`1<WardrobeInstance> wardrobes
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::WardrobeInstance*>*& dyn_wardrobes();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedCosmetics
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& dyn_unlockedCosmetics();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedHats
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& dyn_unlockedHats();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedFaces
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& dyn_unlockedFaces();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedBadges
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& dyn_unlockedBadges();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedPaws
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& dyn_unlockedPaws();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedChests
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& dyn_unlockedChests();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedFurs
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& dyn_unlockedFurs();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedShirts
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& dyn_unlockedShirts();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedPants
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& dyn_unlockedPants();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedBacks
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& dyn_unlockedBacks();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedArms
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& dyn_unlockedArms();
    // Get instance field reference: public System.Int32[] cosmeticsPages
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_cosmeticsPages();
    // Get instance field reference: private System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem>[] itemLists
    [[deprecated("Use field access instead!")]] ::ArrayW<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*>& dyn_itemLists();
    // Get instance field reference: private System.Int32 wardrobeType
    [[deprecated("Use field access instead!")]] int& dyn_wardrobeType();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/CosmeticSet currentWornSet
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticSet*& dyn_currentWornSet();
    // Get instance field reference: public System.String concatStringCosmeticsAllowed
    [[deprecated("Use field access instead!")]] ::StringW& dyn_concatStringCosmeticsAllowed();
    // Get instance field reference: public System.Action OnCosmeticsUpdated
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_OnCosmeticsUpdated();
    // Get instance field reference: public UnityEngine.UI.Text atmText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_atmText();
    // Get instance field reference: public System.String currentAtmString
    [[deprecated("Use field access instead!")]] ::StringW& dyn_currentAtmString();
    // Get instance field reference: public UnityEngine.UI.Text infoText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_infoText();
    // Get instance field reference: public UnityEngine.UI.Text earlyAccessText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_earlyAccessText();
    // Get instance field reference: public UnityEngine.UI.Text[] purchaseButtonText
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::Text*>& dyn_purchaseButtonText();
    // Get instance field reference: public UnityEngine.UI.Text dailyText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_dailyText();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/ATMStages currentATMStage
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::ATMStages& dyn_currentATMStage();
    // Get instance field reference: public UnityEngine.UI.Text[] ATM_RightColumnButtonText
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::Text*>& dyn_ATM_RightColumnButtonText();
    // Get instance field reference: public UnityEngine.UI.Text[] ATM_RightColumnArrowText
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::Text*>& dyn_ATM_RightColumnArrowText();
    // Get instance field reference: public System.Int32 currencyBalance
    [[deprecated("Use field access instead!")]] int& dyn_currencyBalance();
    // Get instance field reference: public System.String currencyName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_currencyName();
    // Get instance field reference: public PurchaseCurrencyButton[] purchaseCurrencyButtons
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PurchaseCurrencyButton*>& dyn_purchaseCurrencyButtons();
    // Get instance field reference: public UnityEngine.UI.Text currencyBoardText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_currencyBoardText();
    // Get instance field reference: public UnityEngine.UI.Text currencyBoxText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_currencyBoxText();
    // Get instance field reference: public System.String startingCurrencyBoxTextString
    [[deprecated("Use field access instead!")]] ::StringW& dyn_startingCurrencyBoxTextString();
    // Get instance field reference: public System.String successfulCurrencyPurchaseTextString
    [[deprecated("Use field access instead!")]] ::StringW& dyn_successfulCurrencyPurchaseTextString();
    // Get instance field reference: public System.Int32 numShinyRocksToBuy
    [[deprecated("Use field access instead!")]] int& dyn_numShinyRocksToBuy();
    // Get instance field reference: public System.Single shinyRocksCost
    [[deprecated("Use field access instead!")]] float& dyn_shinyRocksCost();
    // Get instance field reference: public System.String itemToPurchase
    [[deprecated("Use field access instead!")]] ::StringW& dyn_itemToPurchase();
    // Get instance field reference: public System.Boolean confirmedDidntPlayInBeta
    [[deprecated("Use field access instead!")]] bool& dyn_confirmedDidntPlayInBeta();
    // Get instance field reference: public System.Boolean playedInBeta
    [[deprecated("Use field access instead!")]] bool& dyn_playedInBeta();
    // Get instance field reference: public System.Boolean gotMyDaily
    [[deprecated("Use field access instead!")]] bool& dyn_gotMyDaily();
    // Get instance field reference: public System.Boolean checkedDaily
    [[deprecated("Use field access instead!")]] bool& dyn_checkedDaily();
    // Get instance field reference: public System.String currentPurchaseID
    [[deprecated("Use field access instead!")]] ::StringW& dyn_currentPurchaseID();
    // Get instance field reference: public System.Boolean hasPrice
    [[deprecated("Use field access instead!")]] bool& dyn_hasPrice();
    // Get instance field reference: private System.Int32 searchIndex
    [[deprecated("Use field access instead!")]] int& dyn_searchIndex();
    // Get instance field reference: private System.Int32 iterator
    [[deprecated("Use field access instead!")]] int& dyn_iterator();
    // Get instance field reference: private GorillaNetworking.CosmeticsController/CosmeticItem cosmeticItemVar
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& dyn_cosmeticItemVar();
    // Get instance field reference: public EarlyAccessButton[] earlyAccessButtons
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::EarlyAccessButton*>& dyn_earlyAccessButtons();
    // Get instance field reference: private BundleList bundleList
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::BundleList*& dyn_bundleList();
    // Get instance field reference: public System.String BundleSkuName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_BundleSkuName();
    // Get instance field reference: public System.String BundlePlayfabItemName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_BundlePlayfabItemName();
    // Get instance field reference: public System.Int32 BundleShinyRocks
    [[deprecated("Use field access instead!")]] int& dyn_BundleShinyRocks();
    // Get instance field reference: private System.String userToken
    [[deprecated("Use field access instead!")]] ::StringW& dyn_userToken();
    // Get instance field reference: public System.Boolean triggerAPI
    [[deprecated("Use field access instead!")]] bool& dyn_triggerAPI();
    // Get instance field reference: public System.Int32 iapConsumeAttempts
    [[deprecated("Use field access instead!")]] int& dyn_iapConsumeAttempts();
    // Get instance field reference: public System.Int32 attemptsLimit
    [[deprecated("Use field access instead!")]] int& dyn_attemptsLimit();
    // Get instance field reference: public System.Boolean tryGetPurchasesTwice
    [[deprecated("Use field access instead!")]] bool& dyn_tryGetPurchasesTwice();
    // Get instance field reference: public System.String startupSKU
    [[deprecated("Use field access instead!")]] ::StringW& dyn_startupSKU();
    // Get instance field reference: public System.Int32 startupAttempts
    [[deprecated("Use field access instead!")]] int& dyn_startupAttempts();
    // Get instance field reference: public System.Boolean oculusAttemptingToPurchase
    [[deprecated("Use field access instead!")]] bool& dyn_oculusAttemptingToPurchase();
    // Get instance field reference: public System.Boolean[] debugParameters
    [[deprecated("Use field access instead!")]] ::ArrayW<bool>& dyn_debugParameters();
    // Get instance field reference: public System.DateTime currentTime
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn_currentTime();
    // Get instance field reference: public System.String lastDailyLogin
    [[deprecated("Use field access instead!")]] ::StringW& dyn_lastDailyLogin();
    // Get instance field reference: public PlayFab.ClientModels.UserDataRecord userDataRecord
    [[deprecated("Use field access instead!")]] ::PlayFab::ClientModels::UserDataRecord*& dyn_userDataRecord();
    // Get instance field reference: public System.Int32 secondsUntilTomorrow
    [[deprecated("Use field access instead!")]] int& dyn_secondsUntilTomorrow();
    // Get instance field reference: public System.Single secondsToWaitToCheckDaily
    [[deprecated("Use field access instead!")]] float& dyn_secondsToWaitToCheckDaily();
    // Get instance field reference: private System.Int32 updateCosmeticsRetries
    [[deprecated("Use field access instead!")]] int& dyn_updateCosmeticsRetries();
    // Get instance field reference: private System.Int32 maxUpdateCosmeticsRetries
    [[deprecated("Use field access instead!")]] int& dyn_maxUpdateCosmeticsRetries();
    // Get instance field reference: private PlayFab.ClientModels.GetUserInventoryResult latestInventory
    [[deprecated("Use field access instead!")]] ::PlayFab::ClientModels::GetUserInventoryResult*& dyn_latestInventory();
    // Get instance field reference: private System.String returnString
    [[deprecated("Use field access instead!")]] ::StringW& dyn_returnString();
    // public GorillaTag.CosmeticSystem.CosmeticInfoV2[] get_v2_allCosmetics()
    // Offset: 0x2832D20
    ::ArrayW<::GorillaTag::CosmeticSystem::CosmeticInfoV2> get_v2_allCosmetics();
    // private System.Void set_v2_allCosmetics(GorillaTag.CosmeticSystem.CosmeticInfoV2[] value)
    // Offset: 0x2832D28
    void set_v2_allCosmetics(::ArrayW<::GorillaTag::CosmeticSystem::CosmeticInfoV2> value);
    // public System.Boolean get_v2_allCosmeticsInfoAssetRef_isLoaded()
    // Offset: 0x2832D30
    bool get_v2_allCosmeticsInfoAssetRef_isLoaded();
    // private System.Void set_v2_allCosmeticsInfoAssetRef_isLoaded(System.Boolean value)
    // Offset: 0x2832D38
    void set_v2_allCosmeticsInfoAssetRef_isLoaded(bool value);
    // public System.Boolean get_v2_isGetCosmeticsPlayCatalogDataWaitingForCallback()
    // Offset: 0x2832D44
    bool get_v2_isGetCosmeticsPlayCatalogDataWaitingForCallback();
    // private System.Void set_v2_isGetCosmeticsPlayCatalogDataWaitingForCallback(System.Boolean value)
    // Offset: 0x2832D4C
    void set_v2_isGetCosmeticsPlayCatalogDataWaitingForCallback(bool value);
    // public System.Boolean get_v2_isCosmeticPlayFabCatalogDataLoaded()
    // Offset: 0x2832D58
    bool get_v2_isCosmeticPlayFabCatalogDataLoaded();
    // private System.Void set_v2_isCosmeticPlayFabCatalogDataLoaded(System.Boolean value)
    // Offset: 0x2832D60
    void set_v2_isCosmeticPlayFabCatalogDataLoaded(bool value);
    // private System.Void V2Awake()
    // Offset: 0x2832D6C
    void V2Awake();
    // private System.Collections.IEnumerator V2_allCosmeticsInfoAssetRefSO_LoadCoroutine()
    // Offset: 0x2832D9C
    ::System::Collections::IEnumerator* V2_allCosmeticsInfoAssetRefSO_LoadCoroutine();
    // private System.Void V2_allCosmeticsInfoAssetRef_LoadSucceeded(GorillaTag.CosmeticSystem.AllCosmeticsArraySO allCosmeticsSO)
    // Offset: 0x2832E10
    void V2_allCosmeticsInfoAssetRef_LoadSucceeded(::GorillaTag::CosmeticSystem::AllCosmeticsArraySO* allCosmeticsSO);
    // public System.Boolean TryGetCosmeticInfoV2(System.String playFabId, out GorillaTag.CosmeticSystem.CosmeticInfoV2 cosmeticInfo)
    // Offset: 0x28333AC
    bool TryGetCosmeticInfoV2(::StringW playFabId, ByRef<::GorillaTag::CosmeticSystem::CosmeticInfoV2> cosmeticInfo);
    // private System.Void V2_ConformCosmeticItemV1DisplayName(ref GorillaNetworking.CosmeticsController/CosmeticItem cosmetic)
    // Offset: 0x2833414
    void V2_ConformCosmeticItemV1DisplayName(ByRef<::GorillaNetworking::CosmeticsController::CosmeticItem> cosmetic);
    // System.Void InitializeCosmeticStands()
    // Offset: 0x283346C
    void InitializeCosmeticStands();
    // static public System.Boolean get_hasInstance()
    // Offset: 0x283352C
    static bool get_hasInstance();
    // static private System.Void set_hasInstance(System.Boolean value)
    // Offset: 0x2833574
    static void set_hasInstance(bool value);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> get_allCosmetics()
    // Offset: 0x28335C4
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* get_allCosmetics();
    // public System.Void set_allCosmetics(System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> value)
    // Offset: 0x28335CC
    void set_allCosmetics(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* value);
    // public System.Boolean get_allCosmeticsDict_isInitialized()
    // Offset: 0x28335D4
    bool get_allCosmeticsDict_isInitialized();
    // private System.Void set_allCosmeticsDict_isInitialized(System.Boolean value)
    // Offset: 0x28335DC
    void set_allCosmeticsDict_isInitialized(bool value);
    // public System.Collections.Generic.Dictionary`2<System.String,GorillaNetworking.CosmeticsController/CosmeticItem> get_allCosmeticsDict()
    // Offset: 0x28335E8
    ::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaNetworking::CosmeticsController::CosmeticItem>* get_allCosmeticsDict();
    // public System.Boolean get_allCosmeticsItemIDsfromDisplayNamesDict_isInitialized()
    // Offset: 0x28335F0
    bool get_allCosmeticsItemIDsfromDisplayNamesDict_isInitialized();
    // private System.Void set_allCosmeticsItemIDsfromDisplayNamesDict_isInitialized(System.Boolean value)
    // Offset: 0x28335F8
    void set_allCosmeticsItemIDsfromDisplayNamesDict_isInitialized(bool value);
    // public System.Collections.Generic.Dictionary`2<System.String,System.String> get_allCosmeticsItemIDsfromDisplayNamesDict()
    // Offset: 0x2833604
    ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* get_allCosmeticsItemIDsfromDisplayNamesDict();
    // public System.Void AddWardrobeInstance(WardrobeInstance instance)
    // Offset: 0x283360C
    void AddWardrobeInstance(::GlobalNamespace::WardrobeInstance* instance);
    // public System.Void RemoveWardrobeInstance(WardrobeInstance instance)
    // Offset: 0x2833EC8
    void RemoveWardrobeInstance(::GlobalNamespace::WardrobeInstance* instance);
    // public System.Void Awake()
    // Offset: 0x2833F20
    void Awake();
    // public System.Void Start()
    // Offset: 0x2835110
    void Start();
    // public System.Void Update()
    // Offset: 0x2835308
    void Update();
    // static public System.Boolean CompareCategoryToSavedCosmeticSlots(GorillaNetworking.CosmeticsController/CosmeticCategory category, GorillaNetworking.CosmeticsController/CosmeticSlots slot)
    // Offset: 0x28353D8
    static bool CompareCategoryToSavedCosmeticSlots(::GorillaNetworking::CosmeticsController::CosmeticCategory category, ::GorillaNetworking::CosmeticsController::CosmeticSlots slot);
    // static public GorillaNetworking.CosmeticsController/CosmeticSlots CategoryToNonTransferrableSlot(GorillaNetworking.CosmeticsController/CosmeticCategory category)
    // Offset: 0x2835468
    static ::GorillaNetworking::CosmeticsController::CosmeticSlots CategoryToNonTransferrableSlot(::GorillaNetworking::CosmeticsController::CosmeticCategory category);
    // private GorillaNetworking.CosmeticsController/CosmeticSlots DropPositionToCosmeticSlot(BodyDockPositions/DropPositions pos)
    // Offset: 0x283548C
    ::GorillaNetworking::CosmeticsController::CosmeticSlots DropPositionToCosmeticSlot(::GlobalNamespace::BodyDockPositions::DropPositions pos);
    // static private BodyDockPositions/DropPositions CosmeticSlotToDropPosition(GorillaNetworking.CosmeticsController/CosmeticSlots slot)
    // Offset: 0x28354C8
    static ::GlobalNamespace::BodyDockPositions::DropPositions CosmeticSlotToDropPosition(::GorillaNetworking::CosmeticsController::CosmeticSlots slot);
    // private System.Void SaveItemPreference(GorillaNetworking.CosmeticsController/CosmeticSlots slot, System.Int32 slotIdx, GorillaNetworking.CosmeticsController/CosmeticItem newItem)
    // Offset: 0x28354EC
    void SaveItemPreference(::GorillaNetworking::CosmeticsController::CosmeticSlots slot, int slotIdx, ::GorillaNetworking::CosmeticsController::CosmeticItem newItem);
    // public System.Void SaveCurrentItemPreferences()
    // Offset: 0x28355A8
    void SaveCurrentItemPreferences();
    // private System.Void ApplyCosmeticToSet(GorillaNetworking.CosmeticsController/CosmeticSet set, GorillaNetworking.CosmeticsController/CosmeticItem newItem, System.Int32 slotIdx, GorillaNetworking.CosmeticsController/CosmeticSlots slot, System.Boolean applyToPlayerPrefs, System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticSlots> appliedSlots)
    // Offset: 0x2835624
    void ApplyCosmeticToSet(::GorillaNetworking::CosmeticsController::CosmeticSet* set, ::GorillaNetworking::CosmeticsController::CosmeticItem newItem, int slotIdx, ::GorillaNetworking::CosmeticsController::CosmeticSlots slot, bool applyToPlayerPrefs, ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticSlots>* appliedSlots);
    // private System.Void PrivApplyCosmeticItemToSet(GorillaNetworking.CosmeticsController/CosmeticSet set, GorillaNetworking.CosmeticsController/CosmeticItem newItem, System.Boolean isLeftHand, System.Boolean applyToPlayerPrefs, System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticSlots> appliedSlots)
    // Offset: 0x28357D4
    void PrivApplyCosmeticItemToSet(::GorillaNetworking::CosmeticsController::CosmeticSet* set, ::GorillaNetworking::CosmeticsController::CosmeticItem newItem, bool isLeftHand, bool applyToPlayerPrefs, ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticSlots>* appliedSlots);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticSlots> ApplyCosmeticItemToSet(GorillaNetworking.CosmeticsController/CosmeticSet set, GorillaNetworking.CosmeticsController/CosmeticItem newItem, System.Boolean isLeftHand, System.Boolean applyToPlayerPrefs)
    // Offset: 0x2835F1C
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticSlots>* ApplyCosmeticItemToSet(::GorillaNetworking::CosmeticsController::CosmeticSet* set, ::GorillaNetworking::CosmeticsController::CosmeticItem newItem, bool isLeftHand, bool applyToPlayerPrefs);
    // public System.Void RemoveCosmeticItemFromSet(GorillaNetworking.CosmeticsController/CosmeticSet set, System.String itemName, System.Boolean applyToPlayerPrefs)
    // Offset: 0x283610C
    void RemoveCosmeticItemFromSet(::GorillaNetworking::CosmeticsController::CosmeticSet* set, ::StringW itemName, bool applyToPlayerPrefs);
    // public System.Void PressFittingRoomButton(FittingRoomButton pressedFittingRoomButton, System.Boolean isLeftHand)
    // Offset: 0x283646C
    void PressFittingRoomButton(::GlobalNamespace::FittingRoomButton* pressedFittingRoomButton, bool isLeftHand);
    // public GorillaNetworking.CosmeticsController/EWearingCosmeticSet CheckIfCosmeticSetMatchesItemSet(GorillaNetworking.CosmeticsController/CosmeticSet set, System.String itemName)
    // Offset: 0x2836B94
    ::GorillaNetworking::CosmeticsController::EWearingCosmeticSet CheckIfCosmeticSetMatchesItemSet(::GorillaNetworking::CosmeticsController::CosmeticSet* set, ::StringW itemName);
    // public System.Void PressCosmeticStandButton(CosmeticStand pressedStand)
    // Offset: 0x2836E5C
    void PressCosmeticStandButton(::GlobalNamespace::CosmeticStand* pressedStand);
    // public System.Void PressWardrobeItemButton(GorillaNetworking.CosmeticsController/CosmeticItem cosmeticItem, System.Boolean isLeftHand)
    // Offset: 0x283726C
    void PressWardrobeItemButton(::GorillaNetworking::CosmeticsController::CosmeticItem cosmeticItem, bool isLeftHand);
    // public System.Void PressWardrobeFunctionButton(System.String function)
    // Offset: 0x28374C4
    void PressWardrobeFunctionButton(::StringW function);
    // public System.Void ClearCheckout()
    // Offset: 0x2837A40
    void ClearCheckout();
    // public System.Boolean RemoveItemFromCart(GorillaNetworking.CosmeticsController/CosmeticItem cosmeticItem)
    // Offset: 0x2838468
    bool RemoveItemFromCart(::GorillaNetworking::CosmeticsController::CosmeticItem cosmeticItem);
    // public System.Void PressCheckoutCartButton(CheckoutCartButton pressedCheckoutCartButton, System.Boolean isLeftHand)
    // Offset: 0x28385F8
    void PressCheckoutCartButton(::GlobalNamespace::CheckoutCartButton* pressedCheckoutCartButton, bool isLeftHand);
    // public System.Void PressPurchaseItemButton(PurchaseItemButton pressedPurchaseItemButton, System.Boolean isLeftHand)
    // Offset: 0x28389E0
    void PressPurchaseItemButton(::GlobalNamespace::PurchaseItemButton* pressedPurchaseItemButton, bool isLeftHand);
    // public System.Void PurchaseBundle(GorillaNetworking.Store.StoreBundle bundleToPurchase)
    // Offset: 0x28389FC
    void PurchaseBundle(::GorillaNetworking::Store::StoreBundle* bundleToPurchase);
    // public System.Void PressEarlyAccessButton()
    // Offset: 0x2838B48
    void PressEarlyAccessButton();
    // public System.Void PressPurchaseBundleButton(System.String PlayFabItemName)
    // Offset: 0x2838C44
    void PressPurchaseBundleButton(::StringW PlayFabItemName);
    // public System.Void ProcessPurchaseItemState(System.String buttonSide, System.Boolean isLeftHand)
    // Offset: 0x2837B30
    void ProcessPurchaseItemState(::StringW buttonSide, bool isLeftHand);
    // public System.Void FormattedPurchaseText(System.String finalLineVar)
    // Offset: 0x2838CA8
    void FormattedPurchaseText(::StringW finalLineVar);
    // public System.Void PurchaseItem()
    // Offset: 0x2838ECC
    void PurchaseItem();
    // private System.Void UnlockItem(System.String itemIdToUnlock)
    // Offset: 0x2839098
    void UnlockItem(::StringW itemIdToUnlock);
    // private System.Collections.IEnumerator CheckIfMyCosmeticsUpdated(System.String itemToBuyID)
    // Offset: 0x2839844
    ::System::Collections::IEnumerator* CheckIfMyCosmeticsUpdated(::StringW itemToBuyID);
    // public System.Void UpdateWardrobeModelsAndButtons()
    // Offset: 0x283372C
    void UpdateWardrobeModelsAndButtons();
    // public System.Int32 GetCategorySize(GorillaNetworking.CosmeticsController/CosmeticCategory category)
    // Offset: 0x2839AEC
    int GetCategorySize(::GorillaNetworking::CosmeticsController::CosmeticCategory category);
    // public GorillaNetworking.CosmeticsController/CosmeticItem GetCosmetic(System.Int32 category, System.Int32 cosmeticIndex)
    // Offset: 0x2839BE0
    ::GorillaNetworking::CosmeticsController::CosmeticItem GetCosmetic(int category, int cosmeticIndex);
    // public GorillaNetworking.CosmeticsController/CosmeticItem GetCosmetic(GorillaNetworking.CosmeticsController/CosmeticCategory category, System.Int32 cosmeticIndex)
    // Offset: 0x2839CC0
    ::GorillaNetworking::CosmeticsController::CosmeticItem GetCosmetic(::GorillaNetworking::CosmeticsController::CosmeticCategory category, int cosmeticIndex);
    // private System.Int32 GetIndexForCategory(GorillaNetworking.CosmeticsController/CosmeticCategory category)
    // Offset: 0x2839BBC
    int GetIndexForCategory(::GorillaNetworking::CosmeticsController::CosmeticCategory category);
    // public System.Boolean IsCosmeticEquipped(GorillaNetworking.CosmeticsController/CosmeticItem cosmetic)
    // Offset: 0x2839D10
    bool IsCosmeticEquipped(::GorillaNetworking::CosmeticsController::CosmeticItem cosmetic);
    // public GorillaNetworking.CosmeticsController/CosmeticItem GetSlotItem(GorillaNetworking.CosmeticsController/CosmeticSlots slot, System.Boolean checkOpposite)
    // Offset: 0x2839D54
    ::GorillaNetworking::CosmeticsController::CosmeticItem GetSlotItem(::GorillaNetworking::CosmeticsController::CosmeticSlots slot, bool checkOpposite);
    // public System.String[] GetCurrentlyWornCosmetics()
    // Offset: 0x2839DB8
    ::ArrayW<::StringW> GetCurrentlyWornCosmetics();
    // public System.Boolean[] GetCurrentRightEquippedSided()
    // Offset: 0x2839DD0
    ::ArrayW<bool> GetCurrentRightEquippedSided();
    // public System.Void UpdateShoppingCart()
    // Offset: 0x283652C
    void UpdateShoppingCart();
    // public System.Void UpdateWornCosmetics(System.Boolean sync)
    // Offset: 0x2836958
    void UpdateWornCosmetics(bool sync);
    // public GorillaNetworking.CosmeticsController/CosmeticItem GetItemFromDict(System.String itemID)
    // Offset: 0x2836088
    ::GorillaNetworking::CosmeticsController::CosmeticItem GetItemFromDict(::StringW itemID);
    // public System.String GetItemNameFromDisplayName(System.String displayName)
    // Offset: 0x2839DE8
    ::StringW GetItemNameFromDisplayName(::StringW displayName);
    // public System.Boolean AnyMatch(GorillaNetworking.CosmeticsController/CosmeticSet set, GorillaNetworking.CosmeticsController/CosmeticItem item)
    // Offset: 0x2836CC8
    bool AnyMatch(::GorillaNetworking::CosmeticsController::CosmeticSet* set, ::GorillaNetworking::CosmeticsController::CosmeticItem item);
    // public System.Void Initialize()
    // Offset: 0x2839EE8
    void Initialize();
    // public System.Void GetLastDailyLogin()
    // Offset: 0x283A1E8
    void GetLastDailyLogin();
    // private System.Collections.IEnumerator CheckCanGetDaily()
    // Offset: 0x28350A4
    ::System::Collections::IEnumerator* CheckCanGetDaily();
    // private System.Collections.IEnumerator GetMyDaily()
    // Offset: 0x283A340
    ::System::Collections::IEnumerator* GetMyDaily();
    // public System.Void GetCosmeticsPlayFabCatalogData()
    // Offset: 0x283A018
    void GetCosmeticsPlayFabCatalogData();
    // public System.Void ProcessATMState(System.String currencyButton)
    // Offset: 0x283A3D4
    void ProcessATMState(::StringW currencyButton);
    // public System.Void SwitchToStage(GorillaNetworking.CosmeticsController/ATMStages newStage)
    // Offset: 0x2834668
    void SwitchToStage(::GorillaNetworking::CosmeticsController::ATMStages newStage);
    // public System.Void PressCurrencyPurchaseButton(System.String currencyPurchaseSize)
    // Offset: 0x283A7EC
    void PressCurrencyPurchaseButton(::StringW currencyPurchaseSize);
    // public System.Void UpdateCurrencyBoard()
    // Offset: 0x283A7F0
    void UpdateCurrencyBoard();
    // public System.Void GetCurrencyBalance()
    // Offset: 0x283AA8C
    void GetCurrencyBalance();
    // public System.String GetItemDisplayName(GorillaNetworking.CosmeticsController/CosmeticItem item)
    // Offset: 0x2839034
    ::StringW GetItemDisplayName(::GorillaNetworking::CosmeticsController::CosmeticItem item);
    // public System.Void LeaveSystemMenu()
    // Offset: 0x283AC14
    void LeaveSystemMenu();
    // private System.Collections.IEnumerator CheckIfQuitPurchase()
    // Offset: 0x283AC48
    ::System::Collections::IEnumerator* CheckIfQuitPurchase();
    // public System.Void CheckIAPPurchases()
    // Offset: 0x283531C
    void CheckIAPPurchases();
    // private System.Void OnGetViewerPurchasesStartup(Oculus.Platform.Message msg)
    // Offset: 0x283ACDC
    void OnGetViewerPurchasesStartup(::Oculus::Platform::Message* msg);
    // private System.Void OnGetAccessTokenForStartupIAPCheck(Oculus.Platform.Message msg)
    // Offset: 0x283B5D0
    void OnGetAccessTokenForStartupIAPCheck(::Oculus::Platform::Message* msg);
    // private System.Void ConsumeIAPOculus(System.String nonce, System.String platform, System.String sku, System.Boolean isStartupCheck)
    // Offset: 0x283B740
    void ConsumeIAPOculus(::StringW nonce, ::StringW platform, ::StringW sku, bool isStartupCheck);
    // private System.Void handleIAPResponse(PlayFab.Json.JsonObject jsonResponse, System.Boolean isStartupCheck)
    // Offset: 0x283BC08
    void handleIAPResponse(::PlayFab::Json::JsonObject* jsonResponse, bool isStartupCheck);
    // private System.Void handleIAPError(System.String error, PlayFab.PlayFabError playFabError, System.Boolean isStartupCheck)
    // Offset: 0x283C188
    void handleIAPError(::StringW error, ::PlayFab::PlayFabError* playFabError, bool isStartupCheck);
    // private System.Void OnGetNonceForStartupIAPCheck(Oculus.Platform.Message msg)
    // Offset: 0x283C560
    void OnGetNonceForStartupIAPCheck(::Oculus::Platform::Message* msg);
    // private System.Void LaunchCheckoutFlowCallback(Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase> msg)
    // Offset: 0x283C6D8
    void LaunchCheckoutFlowCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>* msg);
    // private System.Void OnGetAccessTokenForCurrencyPurchase(Oculus.Platform.Message msg)
    // Offset: 0x283C878
    void OnGetAccessTokenForCurrencyPurchase(::Oculus::Platform::Message* msg);
    // private System.Void OnGetNonceForCurrencyPurchase(Oculus.Platform.Message msg)
    // Offset: 0x283C9EC
    void OnGetNonceForCurrencyPurchase(::Oculus::Platform::Message* msg);
    // private System.Collections.IEnumerator SendPostRequest(System.String url, System.String jsonBody, GorillaNetworking.CosmeticsController/SuccessCallback onSuccess, GorillaNetworking.CosmeticsController/ErrorCallback onError)
    // Offset: 0x283BB50
    ::System::Collections::IEnumerator* SendPostRequest(::StringW url, ::StringW jsonBody, ::GorillaNetworking::CosmeticsController::SuccessCallback* onSuccess, ::GorillaNetworking::CosmeticsController::ErrorCallback* onError);
    // public System.Void UpdateMyCosmetics()
    // Offset: 0x283C108
    void UpdateMyCosmetics();
    // private System.Void UpdateMyCosmeticsNotInRoom()
    // Offset: 0x283CD8C
    void UpdateMyCosmeticsNotInRoom();
    // private System.Void UpdateMyCosmeticsForRoom()
    // Offset: 0x283CB90
    void UpdateMyCosmeticsForRoom();
    // private System.Void AlreadyOwnAllBundleButtons()
    // Offset: 0x283CE3C
    void AlreadyOwnAllBundleButtons();
    // private System.Boolean UseNewCosmeticsPath()
    // Offset: 0x283CCD8
    bool UseNewCosmeticsPath();
    // public System.Void CheckCosmeticsSharedGroup()
    // Offset: 0x283CE9C
    void CheckCosmeticsSharedGroup();
    // private System.Collections.IEnumerator WaitForNextCosmeticsAttempt()
    // Offset: 0x283CEDC
    ::System::Collections::IEnumerator* WaitForNextCosmeticsAttempt();
    // private System.Void ConfirmIndividualCosmeticsSharedGroup(PlayFab.ClientModels.GetUserInventoryResult inventory)
    // Offset: 0x283CF50
    void ConfirmIndividualCosmeticsSharedGroup(::PlayFab::ClientModels::GetUserInventoryResult* inventory);
    // public System.Void ReauthOrBan(PlayFab.PlayFabError error)
    // Offset: 0x283D258
    void ReauthOrBan(::PlayFab::PlayFabError* error);
    // public System.Void .ctor()
    // Offset: 0x283D448
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CosmeticsController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CosmeticsController*, creationType>()));
    }
    // private System.Void <Start>b__156_0(System.String data)
    // Offset: 0x283DA4C
    void $Start$b__156_0(::StringW data);
    // private System.Boolean <ProcessPurchaseItemState>b__181_0(GorillaNetworking.CosmeticsController/CosmeticItem x)
    // Offset: 0x283DA68
    bool $ProcessPurchaseItemState$b__181_0(::GorillaNetworking::CosmeticsController::CosmeticItem x);
    // private System.Void <PurchaseItem>b__183_0(PlayFab.ClientModels.PurchaseItemResult result)
    // Offset: 0x283DA78
    void $PurchaseItem$b__183_0(::PlayFab::ClientModels::PurchaseItemResult* result);
    // private System.Void <PurchaseItem>b__183_1(PlayFab.PlayFabError error)
    // Offset: 0x283DD28
    void $PurchaseItem$b__183_1(::PlayFab::PlayFabError* error);
    // private System.Void <GetLastDailyLogin>b__201_0(PlayFab.ClientModels.GetUserDataResult result)
    // Offset: 0x283DD3C
    void $GetLastDailyLogin$b__201_0(::PlayFab::ClientModels::GetUserDataResult* result);
    // private System.Void <GetLastDailyLogin>b__201_1(PlayFab.PlayFabError error)
    // Offset: 0x283DE14
    void $GetLastDailyLogin$b__201_1(::PlayFab::PlayFabError* error);
    // private System.Void <GetMyDaily>b__203_0(PlayFab.CloudScriptModels.ExecuteFunctionResult result)
    // Offset: 0x283E084
    void $GetMyDaily$b__203_0(::PlayFab::CloudScriptModels::ExecuteFunctionResult* result);
    // private System.Void <GetCosmeticsPlayFabCatalogData>b__204_0(PlayFab.ClientModels.GetUserInventoryResult result)
    // Offset: 0x283E09C
    void $GetCosmeticsPlayFabCatalogData$b__204_0(::PlayFab::ClientModels::GetUserInventoryResult* result);
    // private System.Void <GetCosmeticsPlayFabCatalogData>b__204_3(PlayFab.PlayFabError error)
    // Offset: 0x283E23C
    void $GetCosmeticsPlayFabCatalogData$b__204_3(::PlayFab::PlayFabError* error);
    // private System.Void <GetCosmeticsPlayFabCatalogData>b__204_1(PlayFab.PlayFabError error)
    // Offset: 0x283E458
    void $GetCosmeticsPlayFabCatalogData$b__204_1(::PlayFab::PlayFabError* error);
    // private System.Void <GetCurrencyBalance>b__209_0(PlayFab.ClientModels.GetUserInventoryResult result)
    // Offset: 0x283E674
    void $GetCurrencyBalance$b__209_0(::PlayFab::ClientModels::GetUserInventoryResult* result);
  }; // GorillaNetworking.CosmeticsController
  #pragma pack(pop)
  static check_size<sizeof(CosmeticsController), 1248 + sizeof(::StringW)> __GorillaNetworking_CosmeticsControllerSizeCheck;
  static_assert(sizeof(CosmeticsController) == 0x4E8);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::CosmeticsController::CosmeticItem, "GorillaNetworking", "CosmeticsController/CosmeticItem");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::CosmeticsController::CosmeticSlots, "GorillaNetworking", "CosmeticsController/CosmeticSlots");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::CosmeticsController::CosmeticCategory, "GorillaNetworking", "CosmeticsController/CosmeticCategory");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::CosmeticsController::ATMStages, "GorillaNetworking", "CosmeticsController/ATMStages");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::CosmeticsController::PurchaseItemStages, "GorillaNetworking", "CosmeticsController/PurchaseItemStages");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::get_v2_allCosmetics
// Il2CppName: get_v2_allCosmetics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::GorillaTag::CosmeticSystem::CosmeticInfoV2> (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::get_v2_allCosmetics)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "get_v2_allCosmetics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::set_v2_allCosmetics
// Il2CppName: set_v2_allCosmetics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::ArrayW<::GorillaTag::CosmeticSystem::CosmeticInfoV2>)>(&GorillaNetworking::CosmeticsController::set_v2_allCosmetics)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("GorillaTag.CosmeticSystem", "CosmeticInfoV2"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "set_v2_allCosmetics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::get_v2_allCosmeticsInfoAssetRef_isLoaded
// Il2CppName: get_v2_allCosmeticsInfoAssetRef_isLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::get_v2_allCosmeticsInfoAssetRef_isLoaded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "get_v2_allCosmeticsInfoAssetRef_isLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::set_v2_allCosmeticsInfoAssetRef_isLoaded
// Il2CppName: set_v2_allCosmeticsInfoAssetRef_isLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(bool)>(&GorillaNetworking::CosmeticsController::set_v2_allCosmeticsInfoAssetRef_isLoaded)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "set_v2_allCosmeticsInfoAssetRef_isLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::get_v2_isGetCosmeticsPlayCatalogDataWaitingForCallback
// Il2CppName: get_v2_isGetCosmeticsPlayCatalogDataWaitingForCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::get_v2_isGetCosmeticsPlayCatalogDataWaitingForCallback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "get_v2_isGetCosmeticsPlayCatalogDataWaitingForCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::set_v2_isGetCosmeticsPlayCatalogDataWaitingForCallback
// Il2CppName: set_v2_isGetCosmeticsPlayCatalogDataWaitingForCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(bool)>(&GorillaNetworking::CosmeticsController::set_v2_isGetCosmeticsPlayCatalogDataWaitingForCallback)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "set_v2_isGetCosmeticsPlayCatalogDataWaitingForCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::get_v2_isCosmeticPlayFabCatalogDataLoaded
// Il2CppName: get_v2_isCosmeticPlayFabCatalogDataLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::get_v2_isCosmeticPlayFabCatalogDataLoaded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "get_v2_isCosmeticPlayFabCatalogDataLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::set_v2_isCosmeticPlayFabCatalogDataLoaded
// Il2CppName: set_v2_isCosmeticPlayFabCatalogDataLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(bool)>(&GorillaNetworking::CosmeticsController::set_v2_isCosmeticPlayFabCatalogDataLoaded)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "set_v2_isCosmeticPlayFabCatalogDataLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::V2Awake
// Il2CppName: V2Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::V2Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "V2Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::V2_allCosmeticsInfoAssetRefSO_LoadCoroutine
// Il2CppName: V2_allCosmeticsInfoAssetRefSO_LoadCoroutine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::V2_allCosmeticsInfoAssetRefSO_LoadCoroutine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "V2_allCosmeticsInfoAssetRefSO_LoadCoroutine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::V2_allCosmeticsInfoAssetRef_LoadSucceeded
// Il2CppName: V2_allCosmeticsInfoAssetRef_LoadSucceeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GorillaTag::CosmeticSystem::AllCosmeticsArraySO*)>(&GorillaNetworking::CosmeticsController::V2_allCosmeticsInfoAssetRef_LoadSucceeded)> {
  static const MethodInfo* get() {
    static auto* allCosmeticsSO = &::il2cpp_utils::GetClassFromName("GorillaTag.CosmeticSystem", "AllCosmeticsArraySO")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "V2_allCosmeticsInfoAssetRef_LoadSucceeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{allCosmeticsSO});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::TryGetCosmeticInfoV2
// Il2CppName: TryGetCosmeticInfoV2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::*)(::StringW, ByRef<::GorillaTag::CosmeticSystem::CosmeticInfoV2>)>(&GorillaNetworking::CosmeticsController::TryGetCosmeticInfoV2)> {
  static const MethodInfo* get() {
    static auto* playFabId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* cosmeticInfo = &::il2cpp_utils::GetClassFromName("GorillaTag.CosmeticSystem", "CosmeticInfoV2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "TryGetCosmeticInfoV2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playFabId, cosmeticInfo});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::V2_ConformCosmeticItemV1DisplayName
// Il2CppName: V2_ConformCosmeticItemV1DisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(ByRef<::GorillaNetworking::CosmeticsController::CosmeticItem>)>(&GorillaNetworking::CosmeticsController::V2_ConformCosmeticItemV1DisplayName)> {
  static const MethodInfo* get() {
    static auto* cosmetic = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "V2_ConformCosmeticItemV1DisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cosmetic});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::InitializeCosmeticStands
// Il2CppName: InitializeCosmeticStands
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::InitializeCosmeticStands)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "InitializeCosmeticStands", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::get_hasInstance
// Il2CppName: get_hasInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&GorillaNetworking::CosmeticsController::get_hasInstance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "get_hasInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::set_hasInstance
// Il2CppName: set_hasInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&GorillaNetworking::CosmeticsController::set_hasInstance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "set_hasInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::get_allCosmetics
// Il2CppName: get_allCosmetics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::get_allCosmetics)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "get_allCosmetics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::set_allCosmetics
// Il2CppName: set_allCosmetics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*)>(&GorillaNetworking::CosmeticsController::set_allCosmetics)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "set_allCosmetics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::get_allCosmeticsDict_isInitialized
// Il2CppName: get_allCosmeticsDict_isInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::get_allCosmeticsDict_isInitialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "get_allCosmeticsDict_isInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::set_allCosmeticsDict_isInitialized
// Il2CppName: set_allCosmeticsDict_isInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(bool)>(&GorillaNetworking::CosmeticsController::set_allCosmeticsDict_isInitialized)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "set_allCosmeticsDict_isInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::get_allCosmeticsDict
// Il2CppName: get_allCosmeticsDict
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaNetworking::CosmeticsController::CosmeticItem>* (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::get_allCosmeticsDict)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "get_allCosmeticsDict", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::get_allCosmeticsItemIDsfromDisplayNamesDict_isInitialized
// Il2CppName: get_allCosmeticsItemIDsfromDisplayNamesDict_isInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::get_allCosmeticsItemIDsfromDisplayNamesDict_isInitialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "get_allCosmeticsItemIDsfromDisplayNamesDict_isInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::set_allCosmeticsItemIDsfromDisplayNamesDict_isInitialized
// Il2CppName: set_allCosmeticsItemIDsfromDisplayNamesDict_isInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(bool)>(&GorillaNetworking::CosmeticsController::set_allCosmeticsItemIDsfromDisplayNamesDict_isInitialized)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "set_allCosmeticsItemIDsfromDisplayNamesDict_isInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::get_allCosmeticsItemIDsfromDisplayNamesDict
// Il2CppName: get_allCosmeticsItemIDsfromDisplayNamesDict
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::get_allCosmeticsItemIDsfromDisplayNamesDict)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "get_allCosmeticsItemIDsfromDisplayNamesDict", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::AddWardrobeInstance
// Il2CppName: AddWardrobeInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GlobalNamespace::WardrobeInstance*)>(&GorillaNetworking::CosmeticsController::AddWardrobeInstance)> {
  static const MethodInfo* get() {
    static auto* instance = &::il2cpp_utils::GetClassFromName("", "WardrobeInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "AddWardrobeInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instance});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::RemoveWardrobeInstance
// Il2CppName: RemoveWardrobeInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GlobalNamespace::WardrobeInstance*)>(&GorillaNetworking::CosmeticsController::RemoveWardrobeInstance)> {
  static const MethodInfo* get() {
    static auto* instance = &::il2cpp_utils::GetClassFromName("", "WardrobeInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "RemoveWardrobeInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instance});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CompareCategoryToSavedCosmeticSlots
// Il2CppName: CompareCategoryToSavedCosmeticSlots
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GorillaNetworking::CosmeticsController::CosmeticCategory, ::GorillaNetworking::CosmeticsController::CosmeticSlots)>(&GorillaNetworking::CosmeticsController::CompareCategoryToSavedCosmeticSlots)> {
  static const MethodInfo* get() {
    static auto* category = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticCategory")->byval_arg;
    static auto* slot = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSlots")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "CompareCategoryToSavedCosmeticSlots", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{category, slot});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CategoryToNonTransferrableSlot
// Il2CppName: CategoryToNonTransferrableSlot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GorillaNetworking::CosmeticsController::CosmeticSlots (*)(::GorillaNetworking::CosmeticsController::CosmeticCategory)>(&GorillaNetworking::CosmeticsController::CategoryToNonTransferrableSlot)> {
  static const MethodInfo* get() {
    static auto* category = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticCategory")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "CategoryToNonTransferrableSlot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{category});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::DropPositionToCosmeticSlot
// Il2CppName: DropPositionToCosmeticSlot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GorillaNetworking::CosmeticsController::CosmeticSlots (GorillaNetworking::CosmeticsController::*)(::GlobalNamespace::BodyDockPositions::DropPositions)>(&GorillaNetworking::CosmeticsController::DropPositionToCosmeticSlot)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("", "BodyDockPositions/DropPositions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "DropPositionToCosmeticSlot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CosmeticSlotToDropPosition
// Il2CppName: CosmeticSlotToDropPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::BodyDockPositions::DropPositions (*)(::GorillaNetworking::CosmeticsController::CosmeticSlots)>(&GorillaNetworking::CosmeticsController::CosmeticSlotToDropPosition)> {
  static const MethodInfo* get() {
    static auto* slot = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSlots")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "CosmeticSlotToDropPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{slot});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::SaveItemPreference
// Il2CppName: SaveItemPreference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::CosmeticSlots, int, ::GorillaNetworking::CosmeticsController::CosmeticItem)>(&GorillaNetworking::CosmeticsController::SaveItemPreference)> {
  static const MethodInfo* get() {
    static auto* slot = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSlots")->byval_arg;
    static auto* slotIdx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* newItem = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "SaveItemPreference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{slot, slotIdx, newItem});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::SaveCurrentItemPreferences
// Il2CppName: SaveCurrentItemPreferences
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::SaveCurrentItemPreferences)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "SaveCurrentItemPreferences", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::ApplyCosmeticToSet
// Il2CppName: ApplyCosmeticToSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::CosmeticSet*, ::GorillaNetworking::CosmeticsController::CosmeticItem, int, ::GorillaNetworking::CosmeticsController::CosmeticSlots, bool, ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticSlots>*)>(&GorillaNetworking::CosmeticsController::ApplyCosmeticToSet)> {
  static const MethodInfo* get() {
    static auto* set = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* newItem = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    static auto* slotIdx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* slot = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSlots")->byval_arg;
    static auto* applyToPlayerPrefs = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* appliedSlots = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSlots")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "ApplyCosmeticToSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{set, newItem, slotIdx, slot, applyToPlayerPrefs, appliedSlots});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PrivApplyCosmeticItemToSet
// Il2CppName: PrivApplyCosmeticItemToSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::CosmeticSet*, ::GorillaNetworking::CosmeticsController::CosmeticItem, bool, bool, ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticSlots>*)>(&GorillaNetworking::CosmeticsController::PrivApplyCosmeticItemToSet)> {
  static const MethodInfo* get() {
    static auto* set = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* newItem = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    static auto* isLeftHand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* applyToPlayerPrefs = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* appliedSlots = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSlots")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PrivApplyCosmeticItemToSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{set, newItem, isLeftHand, applyToPlayerPrefs, appliedSlots});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::ApplyCosmeticItemToSet
// Il2CppName: ApplyCosmeticItemToSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticSlots>* (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::CosmeticSet*, ::GorillaNetworking::CosmeticsController::CosmeticItem, bool, bool)>(&GorillaNetworking::CosmeticsController::ApplyCosmeticItemToSet)> {
  static const MethodInfo* get() {
    static auto* set = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* newItem = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    static auto* isLeftHand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* applyToPlayerPrefs = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "ApplyCosmeticItemToSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{set, newItem, isLeftHand, applyToPlayerPrefs});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::RemoveCosmeticItemFromSet
// Il2CppName: RemoveCosmeticItemFromSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::CosmeticSet*, ::StringW, bool)>(&GorillaNetworking::CosmeticsController::RemoveCosmeticItemFromSet)> {
  static const MethodInfo* get() {
    static auto* set = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* itemName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* applyToPlayerPrefs = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "RemoveCosmeticItemFromSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{set, itemName, applyToPlayerPrefs});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressFittingRoomButton
// Il2CppName: PressFittingRoomButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GlobalNamespace::FittingRoomButton*, bool)>(&GorillaNetworking::CosmeticsController::PressFittingRoomButton)> {
  static const MethodInfo* get() {
    static auto* pressedFittingRoomButton = &::il2cpp_utils::GetClassFromName("", "FittingRoomButton")->byval_arg;
    static auto* isLeftHand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressFittingRoomButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pressedFittingRoomButton, isLeftHand});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CheckIfCosmeticSetMatchesItemSet
// Il2CppName: CheckIfCosmeticSetMatchesItemSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GorillaNetworking::CosmeticsController::EWearingCosmeticSet (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::CosmeticSet*, ::StringW)>(&GorillaNetworking::CosmeticsController::CheckIfCosmeticSetMatchesItemSet)> {
  static const MethodInfo* get() {
    static auto* set = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* itemName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "CheckIfCosmeticSetMatchesItemSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{set, itemName});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressCosmeticStandButton
// Il2CppName: PressCosmeticStandButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GlobalNamespace::CosmeticStand*)>(&GorillaNetworking::CosmeticsController::PressCosmeticStandButton)> {
  static const MethodInfo* get() {
    static auto* pressedStand = &::il2cpp_utils::GetClassFromName("", "CosmeticStand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressCosmeticStandButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pressedStand});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressWardrobeItemButton
// Il2CppName: PressWardrobeItemButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::CosmeticItem, bool)>(&GorillaNetworking::CosmeticsController::PressWardrobeItemButton)> {
  static const MethodInfo* get() {
    static auto* cosmeticItem = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    static auto* isLeftHand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressWardrobeItemButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cosmeticItem, isLeftHand});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressWardrobeFunctionButton
// Il2CppName: PressWardrobeFunctionButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::PressWardrobeFunctionButton)> {
  static const MethodInfo* get() {
    static auto* function = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressWardrobeFunctionButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{function});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::ClearCheckout
// Il2CppName: ClearCheckout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::ClearCheckout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "ClearCheckout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::RemoveItemFromCart
// Il2CppName: RemoveItemFromCart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::CosmeticItem)>(&GorillaNetworking::CosmeticsController::RemoveItemFromCart)> {
  static const MethodInfo* get() {
    static auto* cosmeticItem = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "RemoveItemFromCart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cosmeticItem});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressCheckoutCartButton
// Il2CppName: PressCheckoutCartButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GlobalNamespace::CheckoutCartButton*, bool)>(&GorillaNetworking::CosmeticsController::PressCheckoutCartButton)> {
  static const MethodInfo* get() {
    static auto* pressedCheckoutCartButton = &::il2cpp_utils::GetClassFromName("", "CheckoutCartButton")->byval_arg;
    static auto* isLeftHand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressCheckoutCartButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pressedCheckoutCartButton, isLeftHand});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressPurchaseItemButton
// Il2CppName: PressPurchaseItemButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GlobalNamespace::PurchaseItemButton*, bool)>(&GorillaNetworking::CosmeticsController::PressPurchaseItemButton)> {
  static const MethodInfo* get() {
    static auto* pressedPurchaseItemButton = &::il2cpp_utils::GetClassFromName("", "PurchaseItemButton")->byval_arg;
    static auto* isLeftHand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressPurchaseItemButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pressedPurchaseItemButton, isLeftHand});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PurchaseBundle
// Il2CppName: PurchaseBundle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::Store::StoreBundle*)>(&GorillaNetworking::CosmeticsController::PurchaseBundle)> {
  static const MethodInfo* get() {
    static auto* bundleToPurchase = &::il2cpp_utils::GetClassFromName("GorillaNetworking.Store", "StoreBundle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PurchaseBundle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bundleToPurchase});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressEarlyAccessButton
// Il2CppName: PressEarlyAccessButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::PressEarlyAccessButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressEarlyAccessButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressPurchaseBundleButton
// Il2CppName: PressPurchaseBundleButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::PressPurchaseBundleButton)> {
  static const MethodInfo* get() {
    static auto* PlayFabItemName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressPurchaseBundleButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PlayFabItemName});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::ProcessPurchaseItemState
// Il2CppName: ProcessPurchaseItemState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::StringW, bool)>(&GorillaNetworking::CosmeticsController::ProcessPurchaseItemState)> {
  static const MethodInfo* get() {
    static auto* buttonSide = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isLeftHand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "ProcessPurchaseItemState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buttonSide, isLeftHand});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::FormattedPurchaseText
// Il2CppName: FormattedPurchaseText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::FormattedPurchaseText)> {
  static const MethodInfo* get() {
    static auto* finalLineVar = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "FormattedPurchaseText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finalLineVar});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PurchaseItem
// Il2CppName: PurchaseItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::PurchaseItem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PurchaseItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::UnlockItem
// Il2CppName: UnlockItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::UnlockItem)> {
  static const MethodInfo* get() {
    static auto* itemIdToUnlock = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "UnlockItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemIdToUnlock});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CheckIfMyCosmeticsUpdated
// Il2CppName: CheckIfMyCosmeticsUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::CheckIfMyCosmeticsUpdated)> {
  static const MethodInfo* get() {
    static auto* itemToBuyID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "CheckIfMyCosmeticsUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemToBuyID});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::UpdateWardrobeModelsAndButtons
// Il2CppName: UpdateWardrobeModelsAndButtons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::UpdateWardrobeModelsAndButtons)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "UpdateWardrobeModelsAndButtons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetCategorySize
// Il2CppName: GetCategorySize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::CosmeticCategory)>(&GorillaNetworking::CosmeticsController::GetCategorySize)> {
  static const MethodInfo* get() {
    static auto* category = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticCategory")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetCategorySize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{category});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetCosmetic
// Il2CppName: GetCosmetic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GorillaNetworking::CosmeticsController::CosmeticItem (GorillaNetworking::CosmeticsController::*)(int, int)>(&GorillaNetworking::CosmeticsController::GetCosmetic)> {
  static const MethodInfo* get() {
    static auto* category = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cosmeticIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetCosmetic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{category, cosmeticIndex});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetCosmetic
// Il2CppName: GetCosmetic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GorillaNetworking::CosmeticsController::CosmeticItem (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::CosmeticCategory, int)>(&GorillaNetworking::CosmeticsController::GetCosmetic)> {
  static const MethodInfo* get() {
    static auto* category = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticCategory")->byval_arg;
    static auto* cosmeticIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetCosmetic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{category, cosmeticIndex});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetIndexForCategory
// Il2CppName: GetIndexForCategory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::CosmeticCategory)>(&GorillaNetworking::CosmeticsController::GetIndexForCategory)> {
  static const MethodInfo* get() {
    static auto* category = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticCategory")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetIndexForCategory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{category});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::IsCosmeticEquipped
// Il2CppName: IsCosmeticEquipped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::CosmeticItem)>(&GorillaNetworking::CosmeticsController::IsCosmeticEquipped)> {
  static const MethodInfo* get() {
    static auto* cosmetic = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "IsCosmeticEquipped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cosmetic});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetSlotItem
// Il2CppName: GetSlotItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GorillaNetworking::CosmeticsController::CosmeticItem (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::CosmeticSlots, bool)>(&GorillaNetworking::CosmeticsController::GetSlotItem)> {
  static const MethodInfo* get() {
    static auto* slot = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSlots")->byval_arg;
    static auto* checkOpposite = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetSlotItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{slot, checkOpposite});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetCurrentlyWornCosmetics
// Il2CppName: GetCurrentlyWornCosmetics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::GetCurrentlyWornCosmetics)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetCurrentlyWornCosmetics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetCurrentRightEquippedSided
// Il2CppName: GetCurrentRightEquippedSided
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<bool> (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::GetCurrentRightEquippedSided)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetCurrentRightEquippedSided", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::UpdateShoppingCart
// Il2CppName: UpdateShoppingCart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::UpdateShoppingCart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "UpdateShoppingCart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::UpdateWornCosmetics
// Il2CppName: UpdateWornCosmetics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(bool)>(&GorillaNetworking::CosmeticsController::UpdateWornCosmetics)> {
  static const MethodInfo* get() {
    static auto* sync = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "UpdateWornCosmetics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sync});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetItemFromDict
// Il2CppName: GetItemFromDict
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GorillaNetworking::CosmeticsController::CosmeticItem (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::GetItemFromDict)> {
  static const MethodInfo* get() {
    static auto* itemID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetItemFromDict", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemID});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetItemNameFromDisplayName
// Il2CppName: GetItemNameFromDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::GetItemNameFromDisplayName)> {
  static const MethodInfo* get() {
    static auto* displayName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetItemNameFromDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{displayName});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::AnyMatch
// Il2CppName: AnyMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::CosmeticSet*, ::GorillaNetworking::CosmeticsController::CosmeticItem)>(&GorillaNetworking::CosmeticsController::AnyMatch)> {
  static const MethodInfo* get() {
    static auto* set = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* item = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "AnyMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{set, item});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::Initialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetLastDailyLogin
// Il2CppName: GetLastDailyLogin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::GetLastDailyLogin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetLastDailyLogin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CheckCanGetDaily
// Il2CppName: CheckCanGetDaily
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::CheckCanGetDaily)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "CheckCanGetDaily", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetMyDaily
// Il2CppName: GetMyDaily
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::GetMyDaily)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetMyDaily", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetCosmeticsPlayFabCatalogData
// Il2CppName: GetCosmeticsPlayFabCatalogData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::GetCosmeticsPlayFabCatalogData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetCosmeticsPlayFabCatalogData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::ProcessATMState
// Il2CppName: ProcessATMState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::ProcessATMState)> {
  static const MethodInfo* get() {
    static auto* currencyButton = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "ProcessATMState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{currencyButton});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::SwitchToStage
// Il2CppName: SwitchToStage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::ATMStages)>(&GorillaNetworking::CosmeticsController::SwitchToStage)> {
  static const MethodInfo* get() {
    static auto* newStage = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/ATMStages")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "SwitchToStage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newStage});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressCurrencyPurchaseButton
// Il2CppName: PressCurrencyPurchaseButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::PressCurrencyPurchaseButton)> {
  static const MethodInfo* get() {
    static auto* currencyPurchaseSize = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressCurrencyPurchaseButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{currencyPurchaseSize});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::UpdateCurrencyBoard
// Il2CppName: UpdateCurrencyBoard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::UpdateCurrencyBoard)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "UpdateCurrencyBoard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetCurrencyBalance
// Il2CppName: GetCurrencyBalance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::GetCurrencyBalance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetCurrencyBalance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetItemDisplayName
// Il2CppName: GetItemDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::CosmeticItem)>(&GorillaNetworking::CosmeticsController::GetItemDisplayName)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetItemDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::LeaveSystemMenu
// Il2CppName: LeaveSystemMenu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::LeaveSystemMenu)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "LeaveSystemMenu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CheckIfQuitPurchase
// Il2CppName: CheckIfQuitPurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::CheckIfQuitPurchase)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "CheckIfQuitPurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CheckIAPPurchases
// Il2CppName: CheckIAPPurchases
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::CheckIAPPurchases)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "CheckIAPPurchases", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::OnGetViewerPurchasesStartup
// Il2CppName: OnGetViewerPurchasesStartup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::Oculus::Platform::Message*)>(&GorillaNetworking::CosmeticsController::OnGetViewerPurchasesStartup)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "OnGetViewerPurchasesStartup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::OnGetAccessTokenForStartupIAPCheck
// Il2CppName: OnGetAccessTokenForStartupIAPCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::Oculus::Platform::Message*)>(&GorillaNetworking::CosmeticsController::OnGetAccessTokenForStartupIAPCheck)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "OnGetAccessTokenForStartupIAPCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::ConsumeIAPOculus
// Il2CppName: ConsumeIAPOculus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::StringW, ::StringW, ::StringW, bool)>(&GorillaNetworking::CosmeticsController::ConsumeIAPOculus)> {
  static const MethodInfo* get() {
    static auto* nonce = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* platform = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* sku = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isStartupCheck = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "ConsumeIAPOculus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nonce, platform, sku, isStartupCheck});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::handleIAPResponse
// Il2CppName: handleIAPResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::Json::JsonObject*, bool)>(&GorillaNetworking::CosmeticsController::handleIAPResponse)> {
  static const MethodInfo* get() {
    static auto* jsonResponse = &::il2cpp_utils::GetClassFromName("PlayFab.Json", "JsonObject")->byval_arg;
    static auto* isStartupCheck = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "handleIAPResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jsonResponse, isStartupCheck});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::handleIAPError
// Il2CppName: handleIAPError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::StringW, ::PlayFab::PlayFabError*, bool)>(&GorillaNetworking::CosmeticsController::handleIAPError)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* playFabError = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    static auto* isStartupCheck = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "handleIAPError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error, playFabError, isStartupCheck});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::OnGetNonceForStartupIAPCheck
// Il2CppName: OnGetNonceForStartupIAPCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::Oculus::Platform::Message*)>(&GorillaNetworking::CosmeticsController::OnGetNonceForStartupIAPCheck)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "OnGetNonceForStartupIAPCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::LaunchCheckoutFlowCallback
// Il2CppName: LaunchCheckoutFlowCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*)>(&GorillaNetworking::CosmeticsController::LaunchCheckoutFlowCallback)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Platform.Models", "Purchase")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "LaunchCheckoutFlowCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::OnGetAccessTokenForCurrencyPurchase
// Il2CppName: OnGetAccessTokenForCurrencyPurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::Oculus::Platform::Message*)>(&GorillaNetworking::CosmeticsController::OnGetAccessTokenForCurrencyPurchase)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "OnGetAccessTokenForCurrencyPurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::OnGetNonceForCurrencyPurchase
// Il2CppName: OnGetNonceForCurrencyPurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::Oculus::Platform::Message*)>(&GorillaNetworking::CosmeticsController::OnGetNonceForCurrencyPurchase)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "OnGetNonceForCurrencyPurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::SendPostRequest
// Il2CppName: SendPostRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GorillaNetworking::CosmeticsController::*)(::StringW, ::StringW, ::GorillaNetworking::CosmeticsController::SuccessCallback*, ::GorillaNetworking::CosmeticsController::ErrorCallback*)>(&GorillaNetworking::CosmeticsController::SendPostRequest)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* jsonBody = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/SuccessCallback")->byval_arg;
    static auto* onError = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/ErrorCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "SendPostRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, jsonBody, onSuccess, onError});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::UpdateMyCosmetics
// Il2CppName: UpdateMyCosmetics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::UpdateMyCosmetics)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "UpdateMyCosmetics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::UpdateMyCosmeticsNotInRoom
// Il2CppName: UpdateMyCosmeticsNotInRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::UpdateMyCosmeticsNotInRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "UpdateMyCosmeticsNotInRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::UpdateMyCosmeticsForRoom
// Il2CppName: UpdateMyCosmeticsForRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::UpdateMyCosmeticsForRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "UpdateMyCosmeticsForRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::AlreadyOwnAllBundleButtons
// Il2CppName: AlreadyOwnAllBundleButtons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::AlreadyOwnAllBundleButtons)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "AlreadyOwnAllBundleButtons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::UseNewCosmeticsPath
// Il2CppName: UseNewCosmeticsPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::UseNewCosmeticsPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "UseNewCosmeticsPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CheckCosmeticsSharedGroup
// Il2CppName: CheckCosmeticsSharedGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::CheckCosmeticsSharedGroup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "CheckCosmeticsSharedGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::WaitForNextCosmeticsAttempt
// Il2CppName: WaitForNextCosmeticsAttempt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::WaitForNextCosmeticsAttempt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "WaitForNextCosmeticsAttempt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::ConfirmIndividualCosmeticsSharedGroup
// Il2CppName: ConfirmIndividualCosmeticsSharedGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::ClientModels::GetUserInventoryResult*)>(&GorillaNetworking::CosmeticsController::ConfirmIndividualCosmeticsSharedGroup)> {
  static const MethodInfo* get() {
    static auto* inventory = &::il2cpp_utils::GetClassFromName("PlayFab.ClientModels", "GetUserInventoryResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "ConfirmIndividualCosmeticsSharedGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inventory});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::ReauthOrBan
// Il2CppName: ReauthOrBan
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::PlayFabError*)>(&GorillaNetworking::CosmeticsController::ReauthOrBan)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "ReauthOrBan", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$Start$b__156_0
// Il2CppName: <Start>b__156_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::$Start$b__156_0)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<Start>b__156_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$ProcessPurchaseItemState$b__181_0
// Il2CppName: <ProcessPurchaseItemState>b__181_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController::CosmeticItem)>(&GorillaNetworking::CosmeticsController::$ProcessPurchaseItemState$b__181_0)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<ProcessPurchaseItemState>b__181_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$PurchaseItem$b__183_0
// Il2CppName: <PurchaseItem>b__183_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::ClientModels::PurchaseItemResult*)>(&GorillaNetworking::CosmeticsController::$PurchaseItem$b__183_0)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.ClientModels", "PurchaseItemResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<PurchaseItem>b__183_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$PurchaseItem$b__183_1
// Il2CppName: <PurchaseItem>b__183_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::PlayFabError*)>(&GorillaNetworking::CosmeticsController::$PurchaseItem$b__183_1)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<PurchaseItem>b__183_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$GetLastDailyLogin$b__201_0
// Il2CppName: <GetLastDailyLogin>b__201_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::ClientModels::GetUserDataResult*)>(&GorillaNetworking::CosmeticsController::$GetLastDailyLogin$b__201_0)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.ClientModels", "GetUserDataResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<GetLastDailyLogin>b__201_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$GetLastDailyLogin$b__201_1
// Il2CppName: <GetLastDailyLogin>b__201_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::PlayFabError*)>(&GorillaNetworking::CosmeticsController::$GetLastDailyLogin$b__201_1)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<GetLastDailyLogin>b__201_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$GetMyDaily$b__203_0
// Il2CppName: <GetMyDaily>b__203_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::CloudScriptModels::ExecuteFunctionResult*)>(&GorillaNetworking::CosmeticsController::$GetMyDaily$b__203_0)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.CloudScriptModels", "ExecuteFunctionResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<GetMyDaily>b__203_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$GetCosmeticsPlayFabCatalogData$b__204_0
// Il2CppName: <GetCosmeticsPlayFabCatalogData>b__204_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::ClientModels::GetUserInventoryResult*)>(&GorillaNetworking::CosmeticsController::$GetCosmeticsPlayFabCatalogData$b__204_0)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.ClientModels", "GetUserInventoryResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<GetCosmeticsPlayFabCatalogData>b__204_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$GetCosmeticsPlayFabCatalogData$b__204_3
// Il2CppName: <GetCosmeticsPlayFabCatalogData>b__204_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::PlayFabError*)>(&GorillaNetworking::CosmeticsController::$GetCosmeticsPlayFabCatalogData$b__204_3)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<GetCosmeticsPlayFabCatalogData>b__204_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$GetCosmeticsPlayFabCatalogData$b__204_1
// Il2CppName: <GetCosmeticsPlayFabCatalogData>b__204_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::PlayFabError*)>(&GorillaNetworking::CosmeticsController::$GetCosmeticsPlayFabCatalogData$b__204_1)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<GetCosmeticsPlayFabCatalogData>b__204_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$GetCurrencyBalance$b__209_0
// Il2CppName: <GetCurrencyBalance>b__209_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::ClientModels::GetUserInventoryResult*)>(&GorillaNetworking::CosmeticsController::$GetCurrencyBalance$b__209_0)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.ClientModels", "GetUserInventoryResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<GetCurrencyBalance>b__209_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
