// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaNetworking.CosmeticsController
#include "GorillaNetworking/CosmeticsController.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::CosmeticsController::EWearingCosmeticSet, "GorillaNetworking", "CosmeticsController/EWearingCosmeticSet");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.CosmeticsController/EWearingCosmeticSet
  // [TokenAttribute] Offset: FFFFFFFF
  struct CosmeticsController::EWearingCosmeticSet/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: EWearingCosmeticSet
    constexpr EWearingCosmeticSet(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public GorillaNetworking.CosmeticsController/EWearingCosmeticSet NotASet
    static constexpr const int NotASet = 0;
    // Get static field: static public GorillaNetworking.CosmeticsController/EWearingCosmeticSet NotASet
    static ::GorillaNetworking::CosmeticsController::EWearingCosmeticSet _get_NotASet();
    // Set static field: static public GorillaNetworking.CosmeticsController/EWearingCosmeticSet NotASet
    static void _set_NotASet(::GorillaNetworking::CosmeticsController::EWearingCosmeticSet value);
    // static field const value: static public GorillaNetworking.CosmeticsController/EWearingCosmeticSet NotWearing
    static constexpr const int NotWearing = 1;
    // Get static field: static public GorillaNetworking.CosmeticsController/EWearingCosmeticSet NotWearing
    static ::GorillaNetworking::CosmeticsController::EWearingCosmeticSet _get_NotWearing();
    // Set static field: static public GorillaNetworking.CosmeticsController/EWearingCosmeticSet NotWearing
    static void _set_NotWearing(::GorillaNetworking::CosmeticsController::EWearingCosmeticSet value);
    // static field const value: static public GorillaNetworking.CosmeticsController/EWearingCosmeticSet Partial
    static constexpr const int Partial = 2;
    // Get static field: static public GorillaNetworking.CosmeticsController/EWearingCosmeticSet Partial
    static ::GorillaNetworking::CosmeticsController::EWearingCosmeticSet _get_Partial();
    // Set static field: static public GorillaNetworking.CosmeticsController/EWearingCosmeticSet Partial
    static void _set_Partial(::GorillaNetworking::CosmeticsController::EWearingCosmeticSet value);
    // static field const value: static public GorillaNetworking.CosmeticsController/EWearingCosmeticSet Complete
    static constexpr const int Complete = 3;
    // Get static field: static public GorillaNetworking.CosmeticsController/EWearingCosmeticSet Complete
    static ::GorillaNetworking::CosmeticsController::EWearingCosmeticSet _get_Complete();
    // Set static field: static public GorillaNetworking.CosmeticsController/EWearingCosmeticSet Complete
    static void _set_Complete(::GorillaNetworking::CosmeticsController::EWearingCosmeticSet value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // GorillaNetworking.CosmeticsController/EWearingCosmeticSet
  #pragma pack(pop)
  static check_size<sizeof(CosmeticsController::EWearingCosmeticSet), 0 + sizeof(int)> __GorillaNetworking_CosmeticsController_EWearingCosmeticSetSizeCheck;
  static_assert(sizeof(CosmeticsController::EWearingCosmeticSet) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
