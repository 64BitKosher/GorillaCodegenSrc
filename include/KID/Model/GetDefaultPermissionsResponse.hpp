// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: KID.Model.AgeStatusType
#include "KID/Model/AgeStatusType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: KID::Model
namespace KID::Model {
  // Forward declaring type: Permission
  class Permission;
}
// Completed forward declares
// Type namespace: KID.Model
namespace KID::Model {
  // Forward declaring type: GetDefaultPermissionsResponse
  class GetDefaultPermissionsResponse;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::KID::Model::GetDefaultPermissionsResponse);
DEFINE_IL2CPP_ARG_TYPE(::KID::Model::GetDefaultPermissionsResponse*, "KID.Model", "GetDefaultPermissionsResponse");
// Type namespace: KID.Model
namespace KID::Model {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: KID.Model.GetDefaultPermissionsResponse
  // [TokenAttribute] Offset: FFFFFFFF
  // [DataContractAttribute] Offset: FFFFFFFF
  class GetDefaultPermissionsResponse : public ::Il2CppObject {
    public:
    public:
    // private KID.Model.AgeStatusType <AgeStatus>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    ::KID::Model::AgeStatusType AgeStatus;
    // Field size check
    static_assert(sizeof(::KID::Model::AgeStatusType) == 0x4);
    // Padding between fields: AgeStatus and: Permissions
    char __padding0[0x4] = {};
    // private System.Collections.Generic.List`1<KID.Model.Permission> <Permissions>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::KID::Model::Permission*>* Permissions;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::KID::Model::Permission*>*) == 0x8);
    public:
    // Get instance field reference: private KID.Model.AgeStatusType <AgeStatus>k__BackingField
    [[deprecated("Use field access instead!")]] ::KID::Model::AgeStatusType& dyn_$AgeStatus$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.List`1<KID.Model.Permission> <Permissions>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::KID::Model::Permission*>*& dyn_$Permissions$k__BackingField();
    // public KID.Model.AgeStatusType get_AgeStatus()
    // Offset: 0x4380560
    ::KID::Model::AgeStatusType get_AgeStatus();
    // public System.Void set_AgeStatus(KID.Model.AgeStatusType value)
    // Offset: 0x4380568
    void set_AgeStatus(::KID::Model::AgeStatusType value);
    // protected System.Void .ctor()
    // Offset: 0x4380570
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GetDefaultPermissionsResponse* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Model::GetDefaultPermissionsResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GetDefaultPermissionsResponse*, creationType>()));
    }
    // public System.Void .ctor(System.Collections.Generic.List`1<KID.Model.Permission> permissions, KID.Model.AgeStatusType ageStatus)
    // Offset: 0x4380578
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GetDefaultPermissionsResponse* New_ctor(::System::Collections::Generic::List_1<::KID::Model::Permission*>* permissions, ::KID::Model::AgeStatusType ageStatus) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Model::GetDefaultPermissionsResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GetDefaultPermissionsResponse*, creationType>(permissions, ageStatus)));
    }
    // public System.Collections.Generic.List`1<KID.Model.Permission> get_Permissions()
    // Offset: 0x4380600
    ::System::Collections::Generic::List_1<::KID::Model::Permission*>* get_Permissions();
    // public System.Void set_Permissions(System.Collections.Generic.List`1<KID.Model.Permission> value)
    // Offset: 0x4380608
    void set_Permissions(::System::Collections::Generic::List_1<::KID::Model::Permission*>* value);
    // public System.String ToJson()
    // Offset: 0x43807A0
    ::StringW ToJson();
    // public override System.String ToString()
    // Offset: 0x4380610
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // KID.Model.GetDefaultPermissionsResponse
  #pragma pack(pop)
  static check_size<sizeof(GetDefaultPermissionsResponse), 24 + sizeof(::System::Collections::Generic::List_1<::KID::Model::Permission*>*)> __KID_Model_GetDefaultPermissionsResponseSizeCheck;
  static_assert(sizeof(GetDefaultPermissionsResponse) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: KID::Model::GetDefaultPermissionsResponse::get_AgeStatus
// Il2CppName: get_AgeStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Model::AgeStatusType (KID::Model::GetDefaultPermissionsResponse::*)()>(&KID::Model::GetDefaultPermissionsResponse::get_AgeStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Model::GetDefaultPermissionsResponse*), "get_AgeStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Model::GetDefaultPermissionsResponse::set_AgeStatus
// Il2CppName: set_AgeStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Model::GetDefaultPermissionsResponse::*)(::KID::Model::AgeStatusType)>(&KID::Model::GetDefaultPermissionsResponse::set_AgeStatus)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("KID.Model", "AgeStatusType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Model::GetDefaultPermissionsResponse*), "set_AgeStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Model::GetDefaultPermissionsResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: KID::Model::GetDefaultPermissionsResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: KID::Model::GetDefaultPermissionsResponse::get_Permissions
// Il2CppName: get_Permissions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::KID::Model::Permission*>* (KID::Model::GetDefaultPermissionsResponse::*)()>(&KID::Model::GetDefaultPermissionsResponse::get_Permissions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Model::GetDefaultPermissionsResponse*), "get_Permissions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Model::GetDefaultPermissionsResponse::set_Permissions
// Il2CppName: set_Permissions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Model::GetDefaultPermissionsResponse::*)(::System::Collections::Generic::List_1<::KID::Model::Permission*>*)>(&KID::Model::GetDefaultPermissionsResponse::set_Permissions)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("KID.Model", "Permission")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Model::GetDefaultPermissionsResponse*), "set_Permissions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Model::GetDefaultPermissionsResponse::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Model::GetDefaultPermissionsResponse::*)()>(&KID::Model::GetDefaultPermissionsResponse::ToJson)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Model::GetDefaultPermissionsResponse*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Model::GetDefaultPermissionsResponse::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Model::GetDefaultPermissionsResponse::*)()>(&KID::Model::GetDefaultPermissionsResponse::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Model::GetDefaultPermissionsResponse*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
