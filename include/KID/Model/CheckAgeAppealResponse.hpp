// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: KID::Model
namespace KID::Model {
  // Skipping declaration: StatusEnum because it is already included!
}
// Completed forward declares
// Type namespace: KID.Model
namespace KID::Model {
  // Forward declaring type: CheckAgeAppealResponse
  class CheckAgeAppealResponse;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::KID::Model::CheckAgeAppealResponse);
DEFINE_IL2CPP_ARG_TYPE(::KID::Model::CheckAgeAppealResponse*, "KID.Model", "CheckAgeAppealResponse");
// Type namespace: KID.Model
namespace KID::Model {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: KID.Model.CheckAgeAppealResponse
  // [TokenAttribute] Offset: FFFFFFFF
  // [DataContractAttribute] Offset: FFFFFFFF
  class CheckAgeAppealResponse : public ::Il2CppObject {
    public:
    // Nested type: ::KID::Model::CheckAgeAppealResponse::StatusEnum
    struct StatusEnum;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: KID.Model.CheckAgeAppealResponse/StatusEnum
    // [TokenAttribute] Offset: FFFFFFFF
    // [JsonConverterAttribute] Offset: FFFFFFFF
    struct StatusEnum/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: StatusEnum
      constexpr StatusEnum(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public KID.Model.CheckAgeAppealResponse/StatusEnum PASS
      static constexpr const int PASS = 1;
      // Get static field: static public KID.Model.CheckAgeAppealResponse/StatusEnum PASS
      static ::KID::Model::CheckAgeAppealResponse::StatusEnum _get_PASS();
      // Set static field: static public KID.Model.CheckAgeAppealResponse/StatusEnum PASS
      static void _set_PASS(::KID::Model::CheckAgeAppealResponse::StatusEnum value);
      // static field const value: static public KID.Model.CheckAgeAppealResponse/StatusEnum FAIL
      static constexpr const int FAIL = 2;
      // Get static field: static public KID.Model.CheckAgeAppealResponse/StatusEnum FAIL
      static ::KID::Model::CheckAgeAppealResponse::StatusEnum _get_FAIL();
      // Set static field: static public KID.Model.CheckAgeAppealResponse/StatusEnum FAIL
      static void _set_FAIL(::KID::Model::CheckAgeAppealResponse::StatusEnum value);
      // static field const value: static public KID.Model.CheckAgeAppealResponse/StatusEnum CHALLENGE
      static constexpr const int CHALLENGE = 3;
      // Get static field: static public KID.Model.CheckAgeAppealResponse/StatusEnum CHALLENGE
      static ::KID::Model::CheckAgeAppealResponse::StatusEnum _get_CHALLENGE();
      // Set static field: static public KID.Model.CheckAgeAppealResponse/StatusEnum CHALLENGE
      static void _set_CHALLENGE(::KID::Model::CheckAgeAppealResponse::StatusEnum value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // KID.Model.CheckAgeAppealResponse/StatusEnum
    #pragma pack(pop)
    static check_size<sizeof(CheckAgeAppealResponse::StatusEnum), 0 + sizeof(int)> __KID_Model_CheckAgeAppealResponse_StatusEnumSizeCheck;
    static_assert(sizeof(CheckAgeAppealResponse::StatusEnum) == 0x4);
    public:
    // private KID.Model.CheckAgeAppealResponse/StatusEnum <Status>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    ::KID::Model::CheckAgeAppealResponse::StatusEnum Status;
    // Field size check
    static_assert(sizeof(::KID::Model::CheckAgeAppealResponse::StatusEnum) == 0x4);
    // Padding between fields: Status and: Url
    char __padding0[0x4] = {};
    // private System.String <Url>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::StringW Url;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private KID.Model.CheckAgeAppealResponse/StatusEnum <Status>k__BackingField
    [[deprecated("Use field access instead!")]] ::KID::Model::CheckAgeAppealResponse::StatusEnum& dyn_$Status$k__BackingField();
    // Get instance field reference: private System.String <Url>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Url$k__BackingField();
    // public KID.Model.CheckAgeAppealResponse/StatusEnum get_Status()
    // Offset: 0x437F96C
    ::KID::Model::CheckAgeAppealResponse::StatusEnum get_Status();
    // public System.Void set_Status(KID.Model.CheckAgeAppealResponse/StatusEnum value)
    // Offset: 0x437F974
    void set_Status(::KID::Model::CheckAgeAppealResponse::StatusEnum value);
    // protected System.Void .ctor()
    // Offset: 0x437F97C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CheckAgeAppealResponse* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Model::CheckAgeAppealResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CheckAgeAppealResponse*, creationType>()));
    }
    // public System.Void .ctor(KID.Model.CheckAgeAppealResponse/StatusEnum status, System.String url)
    // Offset: 0x437F984
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CheckAgeAppealResponse* New_ctor(::KID::Model::CheckAgeAppealResponse::StatusEnum status, ::StringW url) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Model::CheckAgeAppealResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CheckAgeAppealResponse*, creationType>(status, url)));
    }
    // public System.String get_Url()
    // Offset: 0x437F9BC
    ::StringW get_Url();
    // public System.Void set_Url(System.String value)
    // Offset: 0x437F9C4
    void set_Url(::StringW value);
    // public System.String ToJson()
    // Offset: 0x437FB54
    ::StringW ToJson();
    // public override System.String ToString()
    // Offset: 0x437F9CC
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // KID.Model.CheckAgeAppealResponse
  #pragma pack(pop)
  static check_size<sizeof(CheckAgeAppealResponse), 24 + sizeof(::StringW)> __KID_Model_CheckAgeAppealResponseSizeCheck;
  static_assert(sizeof(CheckAgeAppealResponse) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::KID::Model::CheckAgeAppealResponse::StatusEnum, "KID.Model", "CheckAgeAppealResponse/StatusEnum");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: KID::Model::CheckAgeAppealResponse::get_Status
// Il2CppName: get_Status
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Model::CheckAgeAppealResponse::StatusEnum (KID::Model::CheckAgeAppealResponse::*)()>(&KID::Model::CheckAgeAppealResponse::get_Status)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Model::CheckAgeAppealResponse*), "get_Status", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Model::CheckAgeAppealResponse::set_Status
// Il2CppName: set_Status
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Model::CheckAgeAppealResponse::*)(::KID::Model::CheckAgeAppealResponse::StatusEnum)>(&KID::Model::CheckAgeAppealResponse::set_Status)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("KID.Model", "CheckAgeAppealResponse/StatusEnum")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Model::CheckAgeAppealResponse*), "set_Status", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Model::CheckAgeAppealResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: KID::Model::CheckAgeAppealResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: KID::Model::CheckAgeAppealResponse::get_Url
// Il2CppName: get_Url
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Model::CheckAgeAppealResponse::*)()>(&KID::Model::CheckAgeAppealResponse::get_Url)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Model::CheckAgeAppealResponse*), "get_Url", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Model::CheckAgeAppealResponse::set_Url
// Il2CppName: set_Url
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Model::CheckAgeAppealResponse::*)(::StringW)>(&KID::Model::CheckAgeAppealResponse::set_Url)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Model::CheckAgeAppealResponse*), "set_Url", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Model::CheckAgeAppealResponse::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Model::CheckAgeAppealResponse::*)()>(&KID::Model::CheckAgeAppealResponse::ToJson)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Model::CheckAgeAppealResponse*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Model::CheckAgeAppealResponse::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Model::CheckAgeAppealResponse::*)()>(&KID::Model::CheckAgeAppealResponse::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Model::CheckAgeAppealResponse*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
