// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: KID.Model.AgeStatusType
#include "KID/Model/AgeStatusType.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: KID::Model
namespace KID::Model {
  // Forward declaring type: Permission
  class Permission;
  // Skipping declaration: StatusEnum because it is already included!
}
// Completed forward declares
// Type namespace: KID.Model
namespace KID::Model {
  // Forward declaring type: Session
  class Session;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::KID::Model::Session);
DEFINE_IL2CPP_ARG_TYPE(::KID::Model::Session*, "KID.Model", "Session");
// Type namespace: KID.Model
namespace KID::Model {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: KID.Model.Session
  // [TokenAttribute] Offset: FFFFFFFF
  // [DataContractAttribute] Offset: FFFFFFFF
  class Session : public ::Il2CppObject {
    public:
    // Nested type: ::KID::Model::Session::StatusEnum
    struct StatusEnum;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: KID.Model.Session/StatusEnum
    // [TokenAttribute] Offset: FFFFFFFF
    // [JsonConverterAttribute] Offset: FFFFFFFF
    struct StatusEnum/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: StatusEnum
      constexpr StatusEnum(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public KID.Model.Session/StatusEnum ACTIVE
      static constexpr const int ACTIVE = 1;
      // Get static field: static public KID.Model.Session/StatusEnum ACTIVE
      static ::KID::Model::Session::StatusEnum _get_ACTIVE();
      // Set static field: static public KID.Model.Session/StatusEnum ACTIVE
      static void _set_ACTIVE(::KID::Model::Session::StatusEnum value);
      // static field const value: static public KID.Model.Session/StatusEnum HOLD
      static constexpr const int HOLD = 2;
      // Get static field: static public KID.Model.Session/StatusEnum HOLD
      static ::KID::Model::Session::StatusEnum _get_HOLD();
      // Set static field: static public KID.Model.Session/StatusEnum HOLD
      static void _set_HOLD(::KID::Model::Session::StatusEnum value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // KID.Model.Session/StatusEnum
    #pragma pack(pop)
    static check_size<sizeof(Session::StatusEnum), 0 + sizeof(int)> __KID_Model_Session_StatusEnumSizeCheck;
    static_assert(sizeof(Session::StatusEnum) == 0x4);
    public:
    // private KID.Model.Session/StatusEnum <Status>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    ::KID::Model::Session::StatusEnum Status;
    // Field size check
    static_assert(sizeof(::KID::Model::Session::StatusEnum) == 0x4);
    // private KID.Model.AgeStatusType <AgeStatus>k__BackingField
    // Size: 0x4
    // Offset: 0x14
    ::KID::Model::AgeStatusType AgeStatus;
    // Field size check
    static_assert(sizeof(::KID::Model::AgeStatusType) == 0x4);
    // private System.Guid <SessionId>k__BackingField
    // Size: 0x10
    // Offset: 0x18
    ::System::Guid SessionId;
    // Field size check
    static_assert(sizeof(::System::Guid) == 0x10);
    // private System.String <Etag>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::StringW Etag;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Collections.Generic.List`1<KID.Model.Permission> <Permissions>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::List_1<::KID::Model::Permission*>* Permissions;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::KID::Model::Permission*>*) == 0x8);
    public:
    // Get instance field reference: private KID.Model.Session/StatusEnum <Status>k__BackingField
    [[deprecated("Use field access instead!")]] ::KID::Model::Session::StatusEnum& dyn_$Status$k__BackingField();
    // Get instance field reference: private KID.Model.AgeStatusType <AgeStatus>k__BackingField
    [[deprecated("Use field access instead!")]] ::KID::Model::AgeStatusType& dyn_$AgeStatus$k__BackingField();
    // Get instance field reference: private System.Guid <SessionId>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Guid& dyn_$SessionId$k__BackingField();
    // Get instance field reference: private System.String <Etag>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Etag$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.List`1<KID.Model.Permission> <Permissions>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::KID::Model::Permission*>*& dyn_$Permissions$k__BackingField();
    // public KID.Model.Session/StatusEnum get_Status()
    // Offset: 0x4381220
    ::KID::Model::Session::StatusEnum get_Status();
    // public System.Void set_Status(KID.Model.Session/StatusEnum value)
    // Offset: 0x4381228
    void set_Status(::KID::Model::Session::StatusEnum value);
    // public KID.Model.AgeStatusType get_AgeStatus()
    // Offset: 0x4381230
    ::KID::Model::AgeStatusType get_AgeStatus();
    // public System.Void set_AgeStatus(KID.Model.AgeStatusType value)
    // Offset: 0x4381238
    void set_AgeStatus(::KID::Model::AgeStatusType value);
    // protected System.Void .ctor()
    // Offset: 0x4381240
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Session* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Model::Session::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Session*, creationType>()));
    }
    // public System.Void .ctor(System.Guid sessionId, System.String etag, KID.Model.Session/StatusEnum status, System.Collections.Generic.List`1<KID.Model.Permission> permissions, KID.Model.AgeStatusType ageStatus)
    // Offset: 0x4381248
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Session* New_ctor(::System::Guid sessionId, ::StringW etag, ::KID::Model::Session::StatusEnum status, ::System::Collections::Generic::List_1<::KID::Model::Permission*>* permissions, ::KID::Model::AgeStatusType ageStatus) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Model::Session::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Session*, creationType>(sessionId, etag, status, permissions, ageStatus)));
    }
    // public System.Guid get_SessionId()
    // Offset: 0x4381300
    ::System::Guid get_SessionId();
    // public System.Void set_SessionId(System.Guid value)
    // Offset: 0x438130C
    void set_SessionId(::System::Guid value);
    // public System.String get_Etag()
    // Offset: 0x4381314
    ::StringW get_Etag();
    // public System.Void set_Etag(System.String value)
    // Offset: 0x438131C
    void set_Etag(::StringW value);
    // public System.Collections.Generic.List`1<KID.Model.Permission> get_Permissions()
    // Offset: 0x4381324
    ::System::Collections::Generic::List_1<::KID::Model::Permission*>* get_Permissions();
    // public System.Void set_Permissions(System.Collections.Generic.List`1<KID.Model.Permission> value)
    // Offset: 0x438132C
    void set_Permissions(::System::Collections::Generic::List_1<::KID::Model::Permission*>* value);
    // public System.String ToJson()
    // Offset: 0x43815F0
    ::StringW ToJson();
    // public override System.String ToString()
    // Offset: 0x4381334
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // KID.Model.Session
  #pragma pack(pop)
  static check_size<sizeof(Session), 48 + sizeof(::System::Collections::Generic::List_1<::KID::Model::Permission*>*)> __KID_Model_SessionSizeCheck;
  static_assert(sizeof(Session) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::KID::Model::Session::StatusEnum, "KID.Model", "Session/StatusEnum");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: KID::Model::Session::get_Status
// Il2CppName: get_Status
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Model::Session::StatusEnum (KID::Model::Session::*)()>(&KID::Model::Session::get_Status)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Model::Session*), "get_Status", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Model::Session::set_Status
// Il2CppName: set_Status
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Model::Session::*)(::KID::Model::Session::StatusEnum)>(&KID::Model::Session::set_Status)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("KID.Model", "Session/StatusEnum")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Model::Session*), "set_Status", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Model::Session::get_AgeStatus
// Il2CppName: get_AgeStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Model::AgeStatusType (KID::Model::Session::*)()>(&KID::Model::Session::get_AgeStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Model::Session*), "get_AgeStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Model::Session::set_AgeStatus
// Il2CppName: set_AgeStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Model::Session::*)(::KID::Model::AgeStatusType)>(&KID::Model::Session::set_AgeStatus)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("KID.Model", "AgeStatusType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Model::Session*), "set_AgeStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Model::Session::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: KID::Model::Session::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: KID::Model::Session::get_SessionId
// Il2CppName: get_SessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Guid (KID::Model::Session::*)()>(&KID::Model::Session::get_SessionId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Model::Session*), "get_SessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Model::Session::set_SessionId
// Il2CppName: set_SessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Model::Session::*)(::System::Guid)>(&KID::Model::Session::set_SessionId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Guid")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Model::Session*), "set_SessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Model::Session::get_Etag
// Il2CppName: get_Etag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Model::Session::*)()>(&KID::Model::Session::get_Etag)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Model::Session*), "get_Etag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Model::Session::set_Etag
// Il2CppName: set_Etag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Model::Session::*)(::StringW)>(&KID::Model::Session::set_Etag)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Model::Session*), "set_Etag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Model::Session::get_Permissions
// Il2CppName: get_Permissions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::KID::Model::Permission*>* (KID::Model::Session::*)()>(&KID::Model::Session::get_Permissions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Model::Session*), "get_Permissions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Model::Session::set_Permissions
// Il2CppName: set_Permissions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Model::Session::*)(::System::Collections::Generic::List_1<::KID::Model::Permission*>*)>(&KID::Model::Session::set_Permissions)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("KID.Model", "Permission")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Model::Session*), "set_Permissions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Model::Session::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Model::Session::*)()>(&KID::Model::Session::ToJson)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Model::Session*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Model::Session::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Model::Session::*)()>(&KID::Model::Session::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Model::Session*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
