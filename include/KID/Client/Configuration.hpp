// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: KID.Client.IReadableConfiguration
#include "KID/Client/IReadableConfiguration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: KID::Client
namespace KID::Client {
  // Forward declaring type: ExceptionFactory
  class ExceptionFactory;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
  // Forward declaring type: IReadOnlyDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IReadOnlyDictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: WebProxy
  class WebProxy;
}
// Forward declaring namespace: System::Security::Cryptography::X509Certificates
namespace System::Security::Cryptography::X509Certificates {
  // Forward declaring type: X509CertificateCollection
  class X509CertificateCollection;
}
// Forward declaring namespace: System::Net::Security
namespace System::Net::Security {
  // Forward declaring type: RemoteCertificateValidationCallback
  class RemoteCertificateValidationCallback;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Completed forward declares
// Type namespace: KID.Client
namespace KID::Client {
  // Forward declaring type: Configuration
  class Configuration;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::KID::Client::Configuration);
DEFINE_IL2CPP_ARG_TYPE(::KID::Client::Configuration*, "KID.Client", "Configuration");
// Type namespace: KID.Client
namespace KID::Client {
  // Size: 0x98
  #pragma pack(push, 1)
  // Autogenerated type: KID.Client.Configuration
  // [TokenAttribute] Offset: FFFFFFFF
  class Configuration : public ::Il2CppObject/*, public ::KID::Client::IReadableConfiguration*/ {
    public:
    // Nested type: ::KID::Client::Configuration::$$c
    class $$c;
    public:
    // private System.String _basePath
    // Size: 0x8
    // Offset: 0x10
    ::StringW basePath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean _useDefaultCredentials
    // Size: 0x1
    // Offset: 0x18
    bool useDefaultCredentials;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: useDefaultCredentials and: apiKey
    char __padding1[0x7] = {};
    // private System.Collections.Generic.IDictionary`2<System.String,System.String> _apiKey
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* apiKey;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*) == 0x8);
    // private System.Collections.Generic.IDictionary`2<System.String,System.String> _apiKeyPrefix
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* apiKeyPrefix;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*) == 0x8);
    // private System.String _dateTimeFormat
    // Size: 0x8
    // Offset: 0x30
    ::StringW dateTimeFormat;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _tempFolderPath
    // Size: 0x8
    // Offset: 0x38
    ::StringW tempFolderPath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Collections.Generic.IList`1<System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.Object>> _servers
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::IList_1<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::Il2CppObject*>*>* servers;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IList_1<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::Il2CppObject*>*>*) == 0x8);
    // private System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.Collections.Generic.List`1<System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.Object>>> _operationServers
    // Size: 0x8
    // Offset: 0x48
    ::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::System::Collections::Generic::List_1<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::Il2CppObject*>*>*>* operationServers;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::System::Collections::Generic::List_1<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::Il2CppObject*>*>*>*) == 0x8);
    // private System.Collections.Generic.IDictionary`2<System.String,System.String> <DefaultHeaders>k__BackingField
    // Size: 0x8
    // Offset: 0x50
    ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* DefaultHeaders;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*) == 0x8);
    // private System.Int32 <Timeout>k__BackingField
    // Size: 0x4
    // Offset: 0x58
    int Timeout;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: Timeout and: Proxy
    char __padding9[0x4] = {};
    // private System.Net.WebProxy <Proxy>k__BackingField
    // Size: 0x8
    // Offset: 0x60
    ::System::Net::WebProxy* Proxy;
    // Field size check
    static_assert(sizeof(::System::Net::WebProxy*) == 0x8);
    // private System.String <UserAgent>k__BackingField
    // Size: 0x8
    // Offset: 0x68
    ::StringW UserAgent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String <Username>k__BackingField
    // Size: 0x8
    // Offset: 0x70
    ::StringW Username;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String <Password>k__BackingField
    // Size: 0x8
    // Offset: 0x78
    ::StringW Password;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Security.Cryptography.X509Certificates.X509CertificateCollection <ClientCertificates>k__BackingField
    // Size: 0x8
    // Offset: 0x80
    ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* ClientCertificates;
    // Field size check
    static_assert(sizeof(::System::Security::Cryptography::X509Certificates::X509CertificateCollection*) == 0x8);
    // private System.String <AccessToken>k__BackingField
    // Size: 0x8
    // Offset: 0x88
    ::StringW AccessToken;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Net.Security.RemoteCertificateValidationCallback <RemoteCertificateValidationCallback>k__BackingField
    // Size: 0x8
    // Offset: 0x90
    ::System::Net::Security::RemoteCertificateValidationCallback* RemoteCertificateValidationCallback;
    // Field size check
    static_assert(sizeof(::System::Net::Security::RemoteCertificateValidationCallback*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::KID::Client::IReadableConfiguration
    operator ::KID::Client::IReadableConfiguration() noexcept {
      return *reinterpret_cast<::KID::Client::IReadableConfiguration*>(this);
    }
    // static field const value: static public System.String Version
    static constexpr const char* Version = "1.0.0";
    // Get static field: static public System.String Version
    static ::StringW _get_Version();
    // Set static field: static public System.String Version
    static void _set_Version(::StringW value);
    // static field const value: static public System.String ISO8601_DATETIME_FORMAT
    static constexpr const char* ISO8601_DATETIME_FORMAT = "o";
    // Get static field: static public System.String ISO8601_DATETIME_FORMAT
    static ::StringW _get_ISO8601_DATETIME_FORMAT();
    // Set static field: static public System.String ISO8601_DATETIME_FORMAT
    static void _set_ISO8601_DATETIME_FORMAT(::StringW value);
    // Get static field: static public readonly KID.Client.ExceptionFactory DefaultExceptionFactory
    static ::KID::Client::ExceptionFactory* _get_DefaultExceptionFactory();
    // Set static field: static public readonly KID.Client.ExceptionFactory DefaultExceptionFactory
    static void _set_DefaultExceptionFactory(::KID::Client::ExceptionFactory* value);
    // Get instance field reference: private System.String _basePath
    [[deprecated("Use field access instead!")]] ::StringW& dyn__basePath();
    // Get instance field reference: private System.Boolean _useDefaultCredentials
    [[deprecated("Use field access instead!")]] bool& dyn__useDefaultCredentials();
    // Get instance field reference: private System.Collections.Generic.IDictionary`2<System.String,System.String> _apiKey
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*& dyn__apiKey();
    // Get instance field reference: private System.Collections.Generic.IDictionary`2<System.String,System.String> _apiKeyPrefix
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*& dyn__apiKeyPrefix();
    // Get instance field reference: private System.String _dateTimeFormat
    [[deprecated("Use field access instead!")]] ::StringW& dyn__dateTimeFormat();
    // Get instance field reference: private System.String _tempFolderPath
    [[deprecated("Use field access instead!")]] ::StringW& dyn__tempFolderPath();
    // Get instance field reference: private System.Collections.Generic.IList`1<System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.Object>> _servers
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::Il2CppObject*>*>*& dyn__servers();
    // Get instance field reference: private System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.Collections.Generic.List`1<System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.Object>>> _operationServers
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::System::Collections::Generic::List_1<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::Il2CppObject*>*>*>*& dyn__operationServers();
    // Get instance field reference: private System.Collections.Generic.IDictionary`2<System.String,System.String> <DefaultHeaders>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*& dyn_$DefaultHeaders$k__BackingField();
    // Get instance field reference: private System.Int32 <Timeout>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$Timeout$k__BackingField();
    // Get instance field reference: private System.Net.WebProxy <Proxy>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Net::WebProxy*& dyn_$Proxy$k__BackingField();
    // Get instance field reference: private System.String <UserAgent>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$UserAgent$k__BackingField();
    // Get instance field reference: private System.String <Username>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Username$k__BackingField();
    // Get instance field reference: private System.String <Password>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Password$k__BackingField();
    // Get instance field reference: private System.Security.Cryptography.X509Certificates.X509CertificateCollection <ClientCertificates>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509CertificateCollection*& dyn_$ClientCertificates$k__BackingField();
    // Get instance field reference: private System.String <AccessToken>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$AccessToken$k__BackingField();
    // Get instance field reference: private System.Net.Security.RemoteCertificateValidationCallback <RemoteCertificateValidationCallback>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Net::Security::RemoteCertificateValidationCallback*& dyn_$RemoteCertificateValidationCallback$k__BackingField();
    // public System.Void .ctor()
    // Offset: 0x4384890
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Configuration* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Client::Configuration::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Configuration*, creationType>()));
    }
    // public System.Void .ctor(System.Collections.Generic.IDictionary`2<System.String,System.String> defaultHeaders, System.Collections.Generic.IDictionary`2<System.String,System.String> apiKey, System.Collections.Generic.IDictionary`2<System.String,System.String> apiKeyPrefix, System.String basePath)
    // Offset: 0x4384C84
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Configuration* New_ctor(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* defaultHeaders, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* apiKey, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* apiKeyPrefix, ::StringW basePath) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Client::Configuration::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Configuration*, creationType>(defaultHeaders, apiKey, apiKeyPrefix, basePath)));
    }
    // public System.String get_BasePath()
    // Offset: 0x43856FC
    ::StringW get_BasePath();
    // public System.Void set_BasePath(System.String value)
    // Offset: 0x4385704
    void set_BasePath(::StringW value);
    // public System.Boolean get_UseDefaultCredentials()
    // Offset: 0x438570C
    bool get_UseDefaultCredentials();
    // public System.Void set_UseDefaultCredentials(System.Boolean value)
    // Offset: 0x4385714
    void set_UseDefaultCredentials(bool value);
    // public System.Collections.Generic.IDictionary`2<System.String,System.String> get_DefaultHeader()
    // Offset: 0x4385720
    ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* get_DefaultHeader();
    // public System.Void set_DefaultHeader(System.Collections.Generic.IDictionary`2<System.String,System.String> value)
    // Offset: 0x4385730
    void set_DefaultHeader(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* value);
    // public System.Collections.Generic.IDictionary`2<System.String,System.String> get_DefaultHeaders()
    // Offset: 0x4385740
    ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* get_DefaultHeaders();
    // public System.Void set_DefaultHeaders(System.Collections.Generic.IDictionary`2<System.String,System.String> value)
    // Offset: 0x4385748
    void set_DefaultHeaders(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* value);
    // public System.Int32 get_Timeout()
    // Offset: 0x4385750
    int get_Timeout();
    // public System.Void set_Timeout(System.Int32 value)
    // Offset: 0x4385758
    void set_Timeout(int value);
    // public System.Net.WebProxy get_Proxy()
    // Offset: 0x4385760
    ::System::Net::WebProxy* get_Proxy();
    // public System.Void set_Proxy(System.Net.WebProxy value)
    // Offset: 0x4385768
    void set_Proxy(::System::Net::WebProxy* value);
    // public System.String get_UserAgent()
    // Offset: 0x4385770
    ::StringW get_UserAgent();
    // public System.Void set_UserAgent(System.String value)
    // Offset: 0x4385778
    void set_UserAgent(::StringW value);
    // public System.String get_Username()
    // Offset: 0x4385780
    ::StringW get_Username();
    // public System.Void set_Username(System.String value)
    // Offset: 0x4385788
    void set_Username(::StringW value);
    // public System.String get_Password()
    // Offset: 0x4385790
    ::StringW get_Password();
    // public System.Void set_Password(System.String value)
    // Offset: 0x4385798
    void set_Password(::StringW value);
    // public System.String GetApiKeyWithPrefix(System.String apiKeyIdentifier)
    // Offset: 0x43857A0
    ::StringW GetApiKeyWithPrefix(::StringW apiKeyIdentifier);
    // public System.Security.Cryptography.X509Certificates.X509CertificateCollection get_ClientCertificates()
    // Offset: 0x4385934
    ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* get_ClientCertificates();
    // public System.Void set_ClientCertificates(System.Security.Cryptography.X509Certificates.X509CertificateCollection value)
    // Offset: 0x438593C
    void set_ClientCertificates(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* value);
    // public System.String get_AccessToken()
    // Offset: 0x4385944
    ::StringW get_AccessToken();
    // public System.Void set_AccessToken(System.String value)
    // Offset: 0x438594C
    void set_AccessToken(::StringW value);
    // public System.String get_TempFolderPath()
    // Offset: 0x4385954
    ::StringW get_TempFolderPath();
    // public System.Void set_TempFolderPath(System.String value)
    // Offset: 0x438595C
    void set_TempFolderPath(::StringW value);
    // public System.String get_DateTimeFormat()
    // Offset: 0x4385A90
    ::StringW get_DateTimeFormat();
    // public System.Void set_DateTimeFormat(System.String value)
    // Offset: 0x4385A98
    void set_DateTimeFormat(::StringW value);
    // public System.Collections.Generic.IDictionary`2<System.String,System.String> get_ApiKeyPrefix()
    // Offset: 0x4385AFC
    ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* get_ApiKeyPrefix();
    // public System.Void set_ApiKeyPrefix(System.Collections.Generic.IDictionary`2<System.String,System.String> value)
    // Offset: 0x4385B04
    void set_ApiKeyPrefix(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* value);
    // public System.Collections.Generic.IDictionary`2<System.String,System.String> get_ApiKey()
    // Offset: 0x4385B60
    ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* get_ApiKey();
    // public System.Void set_ApiKey(System.Collections.Generic.IDictionary`2<System.String,System.String> value)
    // Offset: 0x4385B68
    void set_ApiKey(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* value);
    // public System.Collections.Generic.IList`1<System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.Object>> get_Servers()
    // Offset: 0x4385BC4
    ::System::Collections::Generic::IList_1<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::Il2CppObject*>*>* get_Servers();
    // public System.Void set_Servers(System.Collections.Generic.IList`1<System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.Object>> value)
    // Offset: 0x4385BCC
    void set_Servers(::System::Collections::Generic::IList_1<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::Il2CppObject*>*>* value);
    // public System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.Collections.Generic.List`1<System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.Object>>> get_OperationServers()
    // Offset: 0x4385C28
    ::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::System::Collections::Generic::List_1<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::Il2CppObject*>*>*>* get_OperationServers();
    // public System.Void set_OperationServers(System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.Collections.Generic.List`1<System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.Object>>> value)
    // Offset: 0x4385C30
    void set_OperationServers(::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::System::Collections::Generic::List_1<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::Il2CppObject*>*>*>* value);
    // public System.String GetServerUrl(System.Int32 index)
    // Offset: 0x4385C8C
    ::StringW GetServerUrl(int index);
    // public System.String GetServerUrl(System.Int32 index, System.Collections.Generic.Dictionary`2<System.String,System.String> inputVariables)
    // Offset: 0x4386854
    ::StringW GetServerUrl(int index, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* inputVariables);
    // public System.String GetOperationServerUrl(System.String operation, System.Int32 index)
    // Offset: 0x4386890
    ::StringW GetOperationServerUrl(::StringW operation, int index);
    // public System.String GetOperationServerUrl(System.String operation, System.Int32 index, System.Collections.Generic.Dictionary`2<System.String,System.String> inputVariables)
    // Offset: 0x4386898
    ::StringW GetOperationServerUrl(::StringW operation, int index, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* inputVariables);
    // private System.String GetServerUrl(System.Collections.Generic.IList`1<System.Collections.Generic.IReadOnlyDictionary`2<System.String,System.Object>> servers, System.Int32 index, System.Collections.Generic.Dictionary`2<System.String,System.String> inputVariables)
    // Offset: 0x4385CBC
    ::StringW GetServerUrl(::System::Collections::Generic::IList_1<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::Il2CppObject*>*>* servers, int index, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* inputVariables);
    // public System.Net.Security.RemoteCertificateValidationCallback get_RemoteCertificateValidationCallback()
    // Offset: 0x438699C
    ::System::Net::Security::RemoteCertificateValidationCallback* get_RemoteCertificateValidationCallback();
    // public System.Void set_RemoteCertificateValidationCallback(System.Net.Security.RemoteCertificateValidationCallback value)
    // Offset: 0x43869A4
    void set_RemoteCertificateValidationCallback(::System::Net::Security::RemoteCertificateValidationCallback* value);
    // static public System.String ToDebugReport()
    // Offset: 0x43869AC
    static ::StringW ToDebugReport();
    // public System.Void AddApiKey(System.String key, System.String value)
    // Offset: 0x4386AF0
    void AddApiKey(::StringW key, ::StringW value);
    // public System.Void AddApiKeyPrefix(System.String key, System.String value)
    // Offset: 0x4386BC0
    void AddApiKeyPrefix(::StringW key, ::StringW value);
    // static public KID.Client.IReadableConfiguration MergeConfigurations(KID.Client.IReadableConfiguration first, KID.Client.IReadableConfiguration second)
    // Offset: 0x4386C90
    static ::KID::Client::IReadableConfiguration* MergeConfigurations(::KID::Client::IReadableConfiguration* first, ::KID::Client::IReadableConfiguration* second);
    // static private System.Void .cctor()
    // Offset: 0x43885E0
    static void _cctor();
  }; // KID.Client.Configuration
  #pragma pack(pop)
  static check_size<sizeof(Configuration), 144 + sizeof(::System::Net::Security::RemoteCertificateValidationCallback*)> __KID_Client_ConfigurationSizeCheck;
  static_assert(sizeof(Configuration) == 0x98);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: KID::Client::Configuration::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: KID::Client::Configuration::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: KID::Client::Configuration::get_BasePath
// Il2CppName: get_BasePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_BasePath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_BasePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_BasePath
// Il2CppName: set_BasePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::StringW)>(&KID::Client::Configuration::set_BasePath)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_BasePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_UseDefaultCredentials
// Il2CppName: get_UseDefaultCredentials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_UseDefaultCredentials)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_UseDefaultCredentials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_UseDefaultCredentials
// Il2CppName: set_UseDefaultCredentials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(bool)>(&KID::Client::Configuration::set_UseDefaultCredentials)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_UseDefaultCredentials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_DefaultHeader
// Il2CppName: get_DefaultHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_DefaultHeader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_DefaultHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_DefaultHeader
// Il2CppName: set_DefaultHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*)>(&KID::Client::Configuration::set_DefaultHeader)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_DefaultHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_DefaultHeaders
// Il2CppName: get_DefaultHeaders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_DefaultHeaders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_DefaultHeaders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_DefaultHeaders
// Il2CppName: set_DefaultHeaders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*)>(&KID::Client::Configuration::set_DefaultHeaders)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_DefaultHeaders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_Timeout
// Il2CppName: get_Timeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_Timeout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_Timeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_Timeout
// Il2CppName: set_Timeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(int)>(&KID::Client::Configuration::set_Timeout)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_Timeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_Proxy
// Il2CppName: get_Proxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::WebProxy* (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_Proxy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_Proxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_Proxy
// Il2CppName: set_Proxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::System::Net::WebProxy*)>(&KID::Client::Configuration::set_Proxy)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "WebProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_Proxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_UserAgent
// Il2CppName: get_UserAgent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_UserAgent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_UserAgent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_UserAgent
// Il2CppName: set_UserAgent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::StringW)>(&KID::Client::Configuration::set_UserAgent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_UserAgent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_Username
// Il2CppName: get_Username
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_Username)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_Username", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_Username
// Il2CppName: set_Username
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::StringW)>(&KID::Client::Configuration::set_Username)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_Username", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_Password
// Il2CppName: get_Password
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_Password)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_Password", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_Password
// Il2CppName: set_Password
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::StringW)>(&KID::Client::Configuration::set_Password)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_Password", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::GetApiKeyWithPrefix
// Il2CppName: GetApiKeyWithPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Client::Configuration::*)(::StringW)>(&KID::Client::Configuration::GetApiKeyWithPrefix)> {
  static const MethodInfo* get() {
    static auto* apiKeyIdentifier = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "GetApiKeyWithPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{apiKeyIdentifier});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_ClientCertificates
// Il2CppName: get_ClientCertificates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::X509Certificates::X509CertificateCollection* (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_ClientCertificates)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_ClientCertificates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_ClientCertificates
// Il2CppName: set_ClientCertificates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::System::Security::Cryptography::X509Certificates::X509CertificateCollection*)>(&KID::Client::Configuration::set_ClientCertificates)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography.X509Certificates", "X509CertificateCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_ClientCertificates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_AccessToken
// Il2CppName: get_AccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_AccessToken)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_AccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_AccessToken
// Il2CppName: set_AccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::StringW)>(&KID::Client::Configuration::set_AccessToken)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_AccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_TempFolderPath
// Il2CppName: get_TempFolderPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_TempFolderPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_TempFolderPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_TempFolderPath
// Il2CppName: set_TempFolderPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::StringW)>(&KID::Client::Configuration::set_TempFolderPath)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_TempFolderPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_DateTimeFormat
// Il2CppName: get_DateTimeFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_DateTimeFormat)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_DateTimeFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_DateTimeFormat
// Il2CppName: set_DateTimeFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::StringW)>(&KID::Client::Configuration::set_DateTimeFormat)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_DateTimeFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_ApiKeyPrefix
// Il2CppName: get_ApiKeyPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_ApiKeyPrefix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_ApiKeyPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_ApiKeyPrefix
// Il2CppName: set_ApiKeyPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*)>(&KID::Client::Configuration::set_ApiKeyPrefix)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_ApiKeyPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_ApiKey
// Il2CppName: get_ApiKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_ApiKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_ApiKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_ApiKey
// Il2CppName: set_ApiKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*)>(&KID::Client::Configuration::set_ApiKey)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_ApiKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_Servers
// Il2CppName: get_Servers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::Il2CppObject*>*>* (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_Servers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_Servers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_Servers
// Il2CppName: set_Servers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::System::Collections::Generic::IList_1<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::Il2CppObject*>*>*)>(&KID::Client::Configuration::set_Servers)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IReadOnlyDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_Servers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_OperationServers
// Il2CppName: get_OperationServers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::System::Collections::Generic::List_1<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::Il2CppObject*>*>*>* (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_OperationServers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_OperationServers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_OperationServers
// Il2CppName: set_OperationServers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::System::Collections::Generic::List_1<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::Il2CppObject*>*>*>*)>(&KID::Client::Configuration::set_OperationServers)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IReadOnlyDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IReadOnlyDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_OperationServers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::GetServerUrl
// Il2CppName: GetServerUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Client::Configuration::*)(int)>(&KID::Client::Configuration::GetServerUrl)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "GetServerUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::GetServerUrl
// Il2CppName: GetServerUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Client::Configuration::*)(int, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&KID::Client::Configuration::GetServerUrl)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* inputVariables = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "GetServerUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, inputVariables});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::GetOperationServerUrl
// Il2CppName: GetOperationServerUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Client::Configuration::*)(::StringW, int)>(&KID::Client::Configuration::GetOperationServerUrl)> {
  static const MethodInfo* get() {
    static auto* operation = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "GetOperationServerUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{operation, index});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::GetOperationServerUrl
// Il2CppName: GetOperationServerUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Client::Configuration::*)(::StringW, int, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&KID::Client::Configuration::GetOperationServerUrl)> {
  static const MethodInfo* get() {
    static auto* operation = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* inputVariables = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "GetOperationServerUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{operation, index, inputVariables});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::GetServerUrl
// Il2CppName: GetServerUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Client::Configuration::*)(::System::Collections::Generic::IList_1<::System::Collections::Generic::IReadOnlyDictionary_2<::StringW, ::Il2CppObject*>*>*, int, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&KID::Client::Configuration::GetServerUrl)> {
  static const MethodInfo* get() {
    static auto* servers = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IReadOnlyDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})})->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* inputVariables = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "GetServerUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{servers, index, inputVariables});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::get_RemoteCertificateValidationCallback
// Il2CppName: get_RemoteCertificateValidationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::Security::RemoteCertificateValidationCallback* (KID::Client::Configuration::*)()>(&KID::Client::Configuration::get_RemoteCertificateValidationCallback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "get_RemoteCertificateValidationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::set_RemoteCertificateValidationCallback
// Il2CppName: set_RemoteCertificateValidationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::System::Net::Security::RemoteCertificateValidationCallback*)>(&KID::Client::Configuration::set_RemoteCertificateValidationCallback)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net.Security", "RemoteCertificateValidationCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "set_RemoteCertificateValidationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::ToDebugReport
// Il2CppName: ToDebugReport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&KID::Client::Configuration::ToDebugReport)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "ToDebugReport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::AddApiKey
// Il2CppName: AddApiKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::StringW, ::StringW)>(&KID::Client::Configuration::AddApiKey)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "AddApiKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::AddApiKeyPrefix
// Il2CppName: AddApiKeyPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::Configuration::*)(::StringW, ::StringW)>(&KID::Client::Configuration::AddApiKeyPrefix)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "AddApiKeyPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::MergeConfigurations
// Il2CppName: MergeConfigurations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::IReadableConfiguration* (*)(::KID::Client::IReadableConfiguration*, ::KID::Client::IReadableConfiguration*)>(&KID::Client::Configuration::MergeConfigurations)> {
  static const MethodInfo* get() {
    static auto* first = &::il2cpp_utils::GetClassFromName("KID.Client", "IReadableConfiguration")->byval_arg;
    static auto* second = &::il2cpp_utils::GetClassFromName("KID.Client", "IReadableConfiguration")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), "MergeConfigurations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{first, second});
  }
};
// Writing MetadataGetter for method: KID::Client::Configuration::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&KID::Client::Configuration::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::Configuration*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
