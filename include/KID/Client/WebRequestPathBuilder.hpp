// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: KID::Client
namespace KID::Client {
  // Forward declaring type: Multimap`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Multimap_2;
}
// Completed forward declares
// Type namespace: KID.Client
namespace KID::Client {
  // Forward declaring type: WebRequestPathBuilder
  class WebRequestPathBuilder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::KID::Client::WebRequestPathBuilder);
DEFINE_IL2CPP_ARG_TYPE(::KID::Client::WebRequestPathBuilder*, "KID.Client", "WebRequestPathBuilder");
// Type namespace: KID.Client
namespace KID::Client {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: KID.Client.WebRequestPathBuilder
  // [TokenAttribute] Offset: FFFFFFFF
  class WebRequestPathBuilder : public ::Il2CppObject {
    public:
    public:
    // private System.String _baseUrl
    // Size: 0x8
    // Offset: 0x10
    ::StringW baseUrl;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _path
    // Size: 0x8
    // Offset: 0x18
    ::StringW path;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _query
    // Size: 0x8
    // Offset: 0x20
    ::StringW query;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private System.String _baseUrl
    [[deprecated("Use field access instead!")]] ::StringW& dyn__baseUrl();
    // Get instance field reference: private System.String _path
    [[deprecated("Use field access instead!")]] ::StringW& dyn__path();
    // Get instance field reference: private System.String _query
    [[deprecated("Use field access instead!")]] ::StringW& dyn__query();
    // public System.Void .ctor(System.String baseUrl, System.String path)
    // Offset: 0x4389308
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebRequestPathBuilder* New_ctor(::StringW baseUrl, ::StringW path) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Client::WebRequestPathBuilder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebRequestPathBuilder*, creationType>(baseUrl, path)));
    }
    // public System.Void AddPathParameters(System.Collections.Generic.Dictionary`2<System.String,System.String> parameters)
    // Offset: 0x4389390
    void AddPathParameters(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* parameters);
    // public System.Void AddQueryParameters(KID.Client.Multimap`2<System.String,System.String> parameters)
    // Offset: 0x43895A0
    void AddQueryParameters(::KID::Client::Multimap_2<::StringW, ::StringW>* parameters);
    // public System.String GetFullUri()
    // Offset: 0x4389C88
    ::StringW GetFullUri();
  }; // KID.Client.WebRequestPathBuilder
  #pragma pack(pop)
  static check_size<sizeof(WebRequestPathBuilder), 32 + sizeof(::StringW)> __KID_Client_WebRequestPathBuilderSizeCheck;
  static_assert(sizeof(WebRequestPathBuilder) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: KID::Client::WebRequestPathBuilder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: KID::Client::WebRequestPathBuilder::AddPathParameters
// Il2CppName: AddPathParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::WebRequestPathBuilder::*)(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&KID::Client::WebRequestPathBuilder::AddPathParameters)> {
  static const MethodInfo* get() {
    static auto* parameters = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::WebRequestPathBuilder*), "AddPathParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameters});
  }
};
// Writing MetadataGetter for method: KID::Client::WebRequestPathBuilder::AddQueryParameters
// Il2CppName: AddQueryParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Client::WebRequestPathBuilder::*)(::KID::Client::Multimap_2<::StringW, ::StringW>*)>(&KID::Client::WebRequestPathBuilder::AddQueryParameters)> {
  static const MethodInfo* get() {
    static auto* parameters = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("KID.Client", "Multimap`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::WebRequestPathBuilder*), "AddQueryParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameters});
  }
};
// Writing MetadataGetter for method: KID::Client::WebRequestPathBuilder::GetFullUri
// Il2CppName: GetFullUri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Client::WebRequestPathBuilder::*)()>(&KID::Client::WebRequestPathBuilder::GetFullUri)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::WebRequestPathBuilder*), "GetFullUri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
