// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: KID.Client.Configuration
#include "KID/Client/Configuration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: KID::Client
namespace KID::Client {
  // Skipping declaration: IReadableConfiguration because it is already included!
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
}
// Completed forward declares
// Type namespace: KID.Client
namespace KID::Client {
  // Forward declaring type: GlobalConfiguration
  class GlobalConfiguration;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::KID::Client::GlobalConfiguration);
DEFINE_IL2CPP_ARG_TYPE(::KID::Client::GlobalConfiguration*, "KID.Client", "GlobalConfiguration");
// Type namespace: KID.Client
namespace KID::Client {
  // Size: 0x98
  #pragma pack(push, 1)
  // Autogenerated type: KID.Client.GlobalConfiguration
  // [TokenAttribute] Offset: FFFFFFFF
  class GlobalConfiguration : public ::KID::Client::Configuration {
    public:
    // Get static field: static private readonly System.Object GlobalConfigSync
    static ::Il2CppObject* _get_GlobalConfigSync();
    // Set static field: static private readonly System.Object GlobalConfigSync
    static void _set_GlobalConfigSync(::Il2CppObject* value);
    // Get static field: static private KID.Client.IReadableConfiguration _globalConfiguration
    static ::KID::Client::IReadableConfiguration* _get__globalConfiguration();
    // Set static field: static private KID.Client.IReadableConfiguration _globalConfiguration
    static void _set__globalConfiguration(::KID::Client::IReadableConfiguration* value);
    // static public KID.Client.IReadableConfiguration get_Instance()
    // Offset: 0x4388FB0
    static ::KID::Client::IReadableConfiguration* get_Instance();
    // static public System.Void set_Instance(KID.Client.IReadableConfiguration value)
    // Offset: 0x4388E94
    static void set_Instance(::KID::Client::IReadableConfiguration* value);
    // private System.Void .ctor()
    // Offset: 0x4388D28
    // Implemented from: KID.Client.Configuration
    // Base method: System.Void Configuration::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GlobalConfiguration* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Client::GlobalConfiguration::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GlobalConfiguration*, creationType>()));
    }
    // public System.Void .ctor(System.Collections.Generic.IDictionary`2<System.String,System.String> defaultHeader, System.Collections.Generic.IDictionary`2<System.String,System.String> apiKey, System.Collections.Generic.IDictionary`2<System.String,System.String> apiKeyPrefix, System.String basePath)
    // Offset: 0x4388D7C
    // Implemented from: KID.Client.Configuration
    // Base method: System.Void Configuration::.ctor(System.Collections.Generic.IDictionary`2<System.String,System.String> defaultHeader, System.Collections.Generic.IDictionary`2<System.String,System.String> apiKey, System.Collections.Generic.IDictionary`2<System.String,System.String> apiKeyPrefix, System.String basePath)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GlobalConfiguration* New_ctor(::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* defaultHeader, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* apiKey, ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* apiKeyPrefix, ::StringW basePath) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Client::GlobalConfiguration::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GlobalConfiguration*, creationType>(defaultHeader, apiKey, apiKeyPrefix, basePath)));
    }
    // static private System.Void .cctor()
    // Offset: 0x4388E00
    // Implemented from: KID.Client.Configuration
    // Base method: System.Void Configuration::.cctor()
    static void _cctor();
  }; // KID.Client.GlobalConfiguration
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: KID::Client::GlobalConfiguration::get_Instance
// Il2CppName: get_Instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::IReadableConfiguration* (*)()>(&KID::Client::GlobalConfiguration::get_Instance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::GlobalConfiguration*), "get_Instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Client::GlobalConfiguration::set_Instance
// Il2CppName: set_Instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::KID::Client::IReadableConfiguration*)>(&KID::Client::GlobalConfiguration::set_Instance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("KID.Client", "IReadableConfiguration")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Client::GlobalConfiguration*), "set_Instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Client::GlobalConfiguration::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: KID::Client::GlobalConfiguration::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: KID::Client::GlobalConfiguration::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&KID::Client::GlobalConfiguration::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Client::GlobalConfiguration*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
