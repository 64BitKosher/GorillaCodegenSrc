// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: KID.Client.ApiClient
#include "KID/Client/ApiClient.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest/Result
#include "UnityEngine/Networking/UnityWebRequest_Result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Networking
namespace UnityEngine::Networking {
  // Skipping declaration: UnityWebRequest because it is already included!
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: TaskCompletionSource`1<TResult>
  template<typename TResult>
  class TaskCompletionSource_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::KID::Client::ApiClient::$$c__DisplayClass12_0_1, "KID.Client", "ApiClient/<>c__DisplayClass12_0`1");
// Type namespace: KID.Client
namespace KID::Client {
  // WARNING Size may be invalid!
  // Autogenerated type: KID.Client.ApiClient/<>c__DisplayClass12_0`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  template<typename T>
  class ApiClient::$$c__DisplayClass12_0_1 : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.Networking.UnityWebRequest request
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Networking::UnityWebRequest* request;
    // Field size check
    static_assert(sizeof(::UnityEngine::Networking::UnityWebRequest*) == 0x8);
    // public System.Threading.Tasks.TaskCompletionSource`1<UnityEngine.Networking.UnityWebRequest/Result> tsc
    // Size: 0x8
    // Offset: 0x0
    ::System::Threading::Tasks::TaskCompletionSource_1<::UnityEngine::Networking::UnityWebRequest::Result>* tsc;
    // Field size check
    static_assert(sizeof(::System::Threading::Tasks::TaskCompletionSource_1<::UnityEngine::Networking::UnityWebRequest::Result>*) == 0x8);
    public:
    // Autogenerated instance field getter
    // Get instance field: public UnityEngine.Networking.UnityWebRequest request
    [[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& dyn_request() {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Client::ApiClient::$$c__DisplayClass12_0_1::dyn_request");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
      return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<UnityEngine.Networking.UnityWebRequest/Result> tsc
    [[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<::UnityEngine::Networking::UnityWebRequest::Result>*& dyn_tsc() {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Client::ApiClient::$$c__DisplayClass12_0_1::dyn_tsc");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tsc"))->offset;
      return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::UnityEngine::Networking::UnityWebRequest::Result>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ApiClient::$$c__DisplayClass12_0_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Client::ApiClient::$$c__DisplayClass12_0_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ApiClient::$$c__DisplayClass12_0_1<T>*, creationType>()));
    }
    // System.Void <ExecAsync>b__0(UnityEngine.AsyncOperation _)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void $ExecAsync$b__0(::UnityEngine::AsyncOperation* _) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Client::ApiClient::$$c__DisplayClass12_0_1::<ExecAsync>b__0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ExecAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _);
    }
  }; // KID.Client.ApiClient/<>c__DisplayClass12_0`1
  // Could not write size check! Type: KID.Client.ApiClient/<>c__DisplayClass12_0`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
