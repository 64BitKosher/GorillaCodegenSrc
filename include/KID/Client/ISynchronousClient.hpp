// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: KID::Client
namespace KID::Client {
  // Forward declaring type: ApiResponse`1<T>
  template<typename T>
  class ApiResponse_1;
  // Forward declaring type: RequestOptions
  class RequestOptions;
  // Forward declaring type: IReadableConfiguration
  class IReadableConfiguration;
}
// Completed forward declares
// Type namespace: KID.Client
namespace KID::Client {
  // Forward declaring type: ISynchronousClient
  class ISynchronousClient;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::KID::Client::ISynchronousClient);
DEFINE_IL2CPP_ARG_TYPE(::KID::Client::ISynchronousClient*, "KID.Client", "ISynchronousClient");
// Type namespace: KID.Client
namespace KID::Client {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: KID.Client.ISynchronousClient
  // [TokenAttribute] Offset: FFFFFFFF
  class ISynchronousClient {
    public:
    // public KID.Client.ApiResponse`1<T> Get(System.String path, KID.Client.RequestOptions options, KID.Client.IReadableConfiguration configuration)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::KID::Client::ApiResponse_1<T>* Get(::StringW path, ::KID::Client::RequestOptions* options, ::KID::Client::IReadableConfiguration* configuration) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Client::ISynchronousClient::Get");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KID::Client::ISynchronousClient*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::KID::Client::ApiResponse_1<T>*, false>(this, ___generic__method, path, options, configuration);
    }
    // public KID.Client.ApiResponse`1<T> Post(System.String path, KID.Client.RequestOptions options, KID.Client.IReadableConfiguration configuration)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::KID::Client::ApiResponse_1<T>* Post(::StringW path, ::KID::Client::RequestOptions* options, ::KID::Client::IReadableConfiguration* configuration) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Client::ISynchronousClient::Post");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KID::Client::ISynchronousClient*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::KID::Client::ApiResponse_1<T>*, false>(this, ___generic__method, path, options, configuration);
    }
    // public KID.Client.ApiResponse`1<T> Put(System.String path, KID.Client.RequestOptions options, KID.Client.IReadableConfiguration configuration)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::KID::Client::ApiResponse_1<T>* Put(::StringW path, ::KID::Client::RequestOptions* options, ::KID::Client::IReadableConfiguration* configuration) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Client::ISynchronousClient::Put");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KID::Client::ISynchronousClient*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::KID::Client::ApiResponse_1<T>*, false>(this, ___generic__method, path, options, configuration);
    }
    // public KID.Client.ApiResponse`1<T> Delete(System.String path, KID.Client.RequestOptions options, KID.Client.IReadableConfiguration configuration)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::KID::Client::ApiResponse_1<T>* Delete(::StringW path, ::KID::Client::RequestOptions* options, ::KID::Client::IReadableConfiguration* configuration) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Client::ISynchronousClient::Delete");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KID::Client::ISynchronousClient*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::KID::Client::ApiResponse_1<T>*, false>(this, ___generic__method, path, options, configuration);
    }
    // public KID.Client.ApiResponse`1<T> Head(System.String path, KID.Client.RequestOptions options, KID.Client.IReadableConfiguration configuration)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::KID::Client::ApiResponse_1<T>* Head(::StringW path, ::KID::Client::RequestOptions* options, ::KID::Client::IReadableConfiguration* configuration) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Client::ISynchronousClient::Head");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KID::Client::ISynchronousClient*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::KID::Client::ApiResponse_1<T>*, false>(this, ___generic__method, path, options, configuration);
    }
    // public KID.Client.ApiResponse`1<T> Options(System.String path, KID.Client.RequestOptions options, KID.Client.IReadableConfiguration configuration)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::KID::Client::ApiResponse_1<T>* Options(::StringW path, ::KID::Client::RequestOptions* options, ::KID::Client::IReadableConfiguration* configuration) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Client::ISynchronousClient::Options");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KID::Client::ISynchronousClient*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::KID::Client::ApiResponse_1<T>*, false>(this, ___generic__method, path, options, configuration);
    }
    // public KID.Client.ApiResponse`1<T> Patch(System.String path, KID.Client.RequestOptions options, KID.Client.IReadableConfiguration configuration)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::KID::Client::ApiResponse_1<T>* Patch(::StringW path, ::KID::Client::RequestOptions* options, ::KID::Client::IReadableConfiguration* configuration) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Client::ISynchronousClient::Patch");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KID::Client::ISynchronousClient*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::KID::Client::ApiResponse_1<T>*, false>(this, ___generic__method, path, options, configuration);
    }
  }; // KID.Client.ISynchronousClient
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: KID::Client::ISynchronousClient::Get
// Il2CppName: Get
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: KID::Client::ISynchronousClient::Post
// Il2CppName: Post
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: KID::Client::ISynchronousClient::Put
// Il2CppName: Put
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: KID::Client::ISynchronousClient::Delete
// Il2CppName: Delete
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: KID::Client::ISynchronousClient::Head
// Il2CppName: Head
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: KID::Client::ISynchronousClient::Options
// Il2CppName: Options
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: KID::Client::ISynchronousClient::Patch
// Il2CppName: Patch
// Cannot write MetadataGetter for generic methods!
