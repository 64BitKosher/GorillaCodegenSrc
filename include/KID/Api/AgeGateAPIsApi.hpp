// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: KID.Api.IAgeGateAPIsApi
#include "KID/Api/IAgeGateAPIsApi.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: KID::Api
namespace KID::Api {
}
// Forward declaring namespace: KID::Client
namespace KID::Client {
  // Forward declaring type: ExceptionFactory
  class ExceptionFactory;
  // Forward declaring type: ApiClient
  class ApiClient;
  // Forward declaring type: IAsynchronousClient
  class IAsynchronousClient;
  // Forward declaring type: ISynchronousClient
  class ISynchronousClient;
  // Forward declaring type: IReadableConfiguration
  class IReadableConfiguration;
  // Forward declaring type: Configuration
  class Configuration;
  // Forward declaring type: ApiResponse`1<T>
  template<typename T>
  class ApiResponse_1;
}
// Forward declaring namespace: KID::Model
namespace KID::Model {
  // Forward declaring type: CheckAgeGateResponse
  class CheckAgeGateResponse;
  // Forward declaring type: CheckAgeGateRequest
  class CheckAgeGateRequest;
  // Forward declaring type: GetDefaultPermissionsResponse
  class GetDefaultPermissionsResponse;
  // Forward declaring type: ShouldDisplayAgeGateResponse
  class ShouldDisplayAgeGateResponse;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationToken
  struct CancellationToken;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: DateTime
  struct DateTime;
}
// Completed forward declares
// Type namespace: KID.Api
namespace KID::Api {
  // Forward declaring type: AgeGateAPIsApi
  class AgeGateAPIsApi;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::KID::Api::AgeGateAPIsApi);
DEFINE_IL2CPP_ARG_TYPE(::KID::Api::AgeGateAPIsApi*, "KID.Api", "AgeGateAPIsApi");
// Type namespace: KID.Api
namespace KID::Api {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: KID.Api.AgeGateAPIsApi
  // [TokenAttribute] Offset: FFFFFFFF
  class AgeGateAPIsApi : public ::Il2CppObject/*, public ::System::IDisposable, public ::KID::Api::IAgeGateAPIsApi*/ {
    public:
    // Nested type: ::KID::Api::AgeGateAPIsApi::$$c
    class $$c;
    // Nested type: ::KID::Api::AgeGateAPIsApi::$CheckAgeGateAsync$d__28
    struct $CheckAgeGateAsync$d__28;
    // Nested type: ::KID::Api::AgeGateAPIsApi::$CheckAgeGateWithHttpInfoAsync$d__29
    struct $CheckAgeGateWithHttpInfoAsync$d__29;
    // Nested type: ::KID::Api::AgeGateAPIsApi::$GetDefaultPermissionsAsync$d__32
    struct $GetDefaultPermissionsAsync$d__32;
    // Nested type: ::KID::Api::AgeGateAPIsApi::$GetDefaultPermissionsWithHttpInfoAsync$d__33
    struct $GetDefaultPermissionsWithHttpInfoAsync$d__33;
    // Nested type: ::KID::Api::AgeGateAPIsApi::$ShouldDisplayAgeGateAsync$d__36
    struct $ShouldDisplayAgeGateAsync$d__36;
    // Nested type: ::KID::Api::AgeGateAPIsApi::$ShouldDisplayAgeGateWithHttpInfoAsync$d__37
    struct $ShouldDisplayAgeGateWithHttpInfoAsync$d__37;
    public:
    // private KID.Client.ExceptionFactory _exceptionFactory
    // Size: 0x8
    // Offset: 0x10
    ::KID::Client::ExceptionFactory* exceptionFactory;
    // Field size check
    static_assert(sizeof(::KID::Client::ExceptionFactory*) == 0x8);
    // private KID.Client.ApiClient <ApiClient>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::KID::Client::ApiClient* ApiClient;
    // Field size check
    static_assert(sizeof(::KID::Client::ApiClient*) == 0x8);
    // private KID.Client.IAsynchronousClient <AsynchronousClient>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::KID::Client::IAsynchronousClient* AsynchronousClient;
    // Field size check
    static_assert(sizeof(::KID::Client::IAsynchronousClient*) == 0x8);
    // private KID.Client.ISynchronousClient <Client>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::KID::Client::ISynchronousClient* Client;
    // Field size check
    static_assert(sizeof(::KID::Client::ISynchronousClient*) == 0x8);
    // private KID.Client.IReadableConfiguration <Configuration>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::KID::Client::IReadableConfiguration* Configuration;
    // Field size check
    static_assert(sizeof(::KID::Client::IReadableConfiguration*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Creating interface conversion operator: operator ::KID::Api::IAgeGateAPIsApi
    operator ::KID::Api::IAgeGateAPIsApi() noexcept {
      return *reinterpret_cast<::KID::Api::IAgeGateAPIsApi*>(this);
    }
    // Get instance field reference: private KID.Client.ExceptionFactory _exceptionFactory
    [[deprecated("Use field access instead!")]] ::KID::Client::ExceptionFactory*& dyn__exceptionFactory();
    // Get instance field reference: private KID.Client.ApiClient <ApiClient>k__BackingField
    [[deprecated("Use field access instead!")]] ::KID::Client::ApiClient*& dyn_$ApiClient$k__BackingField();
    // Get instance field reference: private KID.Client.IAsynchronousClient <AsynchronousClient>k__BackingField
    [[deprecated("Use field access instead!")]] ::KID::Client::IAsynchronousClient*& dyn_$AsynchronousClient$k__BackingField();
    // Get instance field reference: private KID.Client.ISynchronousClient <Client>k__BackingField
    [[deprecated("Use field access instead!")]] ::KID::Client::ISynchronousClient*& dyn_$Client$k__BackingField();
    // Get instance field reference: private KID.Client.IReadableConfiguration <Configuration>k__BackingField
    [[deprecated("Use field access instead!")]] ::KID::Client::IReadableConfiguration*& dyn_$Configuration$k__BackingField();
    // public System.Void .ctor()
    // Offset: 0x438B7D0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AgeGateAPIsApi* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Api::AgeGateAPIsApi::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AgeGateAPIsApi*, creationType>()));
    }
    // public System.Void .ctor(System.String basePath)
    // Offset: 0x438B7D8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AgeGateAPIsApi* New_ctor(::StringW basePath) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Api::AgeGateAPIsApi::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AgeGateAPIsApi*, creationType>(basePath)));
    }
    // public System.Void .ctor(KID.Client.Configuration configuration)
    // Offset: 0x438BAA0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AgeGateAPIsApi* New_ctor(::KID::Client::Configuration* configuration) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Api::AgeGateAPIsApi::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AgeGateAPIsApi*, creationType>(configuration)));
    }
    // public System.Void .ctor(KID.Client.ISynchronousClient client, KID.Client.IAsynchronousClient asyncClient, KID.Client.IReadableConfiguration configuration)
    // Offset: 0x438BD84
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AgeGateAPIsApi* New_ctor(::KID::Client::ISynchronousClient* client, ::KID::Client::IAsynchronousClient* asyncClient, ::KID::Client::IReadableConfiguration* configuration) {
      static auto ___internal__logger = ::Logger::get().WithContext("::KID::Api::AgeGateAPIsApi::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AgeGateAPIsApi*, creationType>(client, asyncClient, configuration)));
    }
    // public System.Void Dispose()
    // Offset: 0x438BF90
    void Dispose();
    // public KID.Client.ApiClient get_ApiClient()
    // Offset: 0x438BF94
    ::KID::Client::ApiClient* get_ApiClient();
    // public System.Void set_ApiClient(KID.Client.ApiClient value)
    // Offset: 0x438BF9C
    void set_ApiClient(::KID::Client::ApiClient* value);
    // public KID.Client.IAsynchronousClient get_AsynchronousClient()
    // Offset: 0x438BFA4
    ::KID::Client::IAsynchronousClient* get_AsynchronousClient();
    // public System.Void set_AsynchronousClient(KID.Client.IAsynchronousClient value)
    // Offset: 0x438BFAC
    void set_AsynchronousClient(::KID::Client::IAsynchronousClient* value);
    // public KID.Client.ISynchronousClient get_Client()
    // Offset: 0x438BFB4
    ::KID::Client::ISynchronousClient* get_Client();
    // public System.Void set_Client(KID.Client.ISynchronousClient value)
    // Offset: 0x438BFBC
    void set_Client(::KID::Client::ISynchronousClient* value);
    // public System.String GetBasePath()
    // Offset: 0x438BFC4
    ::StringW GetBasePath();
    // public KID.Client.IReadableConfiguration get_Configuration()
    // Offset: 0x438C068
    ::KID::Client::IReadableConfiguration* get_Configuration();
    // public System.Void set_Configuration(KID.Client.IReadableConfiguration value)
    // Offset: 0x438C070
    void set_Configuration(::KID::Client::IReadableConfiguration* value);
    // public KID.Client.ExceptionFactory get_ExceptionFactory()
    // Offset: 0x438C078
    ::KID::Client::ExceptionFactory* get_ExceptionFactory();
    // public System.Void set_ExceptionFactory(KID.Client.ExceptionFactory value)
    // Offset: 0x438C0FC
    void set_ExceptionFactory(::KID::Client::ExceptionFactory* value);
    // public KID.Model.CheckAgeGateResponse CheckAgeGate(KID.Model.CheckAgeGateRequest checkAgeGateRequest)
    // Offset: 0x438C104
    ::KID::Model::CheckAgeGateResponse* CheckAgeGate(::KID::Model::CheckAgeGateRequest* checkAgeGateRequest);
    // public KID.Client.ApiResponse`1<KID.Model.CheckAgeGateResponse> CheckAgeGateWithHttpInfo(KID.Model.CheckAgeGateRequest checkAgeGateRequest)
    // Offset: 0x438C158
    ::KID::Client::ApiResponse_1<::KID::Model::CheckAgeGateResponse*>* CheckAgeGateWithHttpInfo(::KID::Model::CheckAgeGateRequest* checkAgeGateRequest);
    // public System.Threading.Tasks.Task`1<KID.Model.CheckAgeGateResponse> CheckAgeGateAsync(KID.Model.CheckAgeGateRequest checkAgeGateRequest, System.Threading.CancellationToken cancellationToken)
    // Offset: 0x438C5DC
    ::System::Threading::Tasks::Task_1<::KID::Model::CheckAgeGateResponse*>* CheckAgeGateAsync(::KID::Model::CheckAgeGateRequest* checkAgeGateRequest, ::System::Threading::CancellationToken cancellationToken);
    // public System.Threading.Tasks.Task`1<KID.Client.ApiResponse`1<KID.Model.CheckAgeGateResponse>> CheckAgeGateWithHttpInfoAsync(KID.Model.CheckAgeGateRequest checkAgeGateRequest, System.Threading.CancellationToken cancellationToken)
    // Offset: 0x438C70C
    ::System::Threading::Tasks::Task_1<::KID::Client::ApiResponse_1<::KID::Model::CheckAgeGateResponse*>*>* CheckAgeGateWithHttpInfoAsync(::KID::Model::CheckAgeGateRequest* checkAgeGateRequest, ::System::Threading::CancellationToken cancellationToken);
    // public KID.Model.GetDefaultPermissionsResponse GetDefaultPermissions(System.String jurisdiction, System.DateTime dateOfBirth)
    // Offset: 0x438C83C
    ::KID::Model::GetDefaultPermissionsResponse* GetDefaultPermissions(::StringW jurisdiction, ::System::DateTime dateOfBirth);
    // public KID.Client.ApiResponse`1<KID.Model.GetDefaultPermissionsResponse> GetDefaultPermissionsWithHttpInfo(System.String jurisdiction, System.DateTime dateOfBirth)
    // Offset: 0x438C8A0
    ::KID::Client::ApiResponse_1<::KID::Model::GetDefaultPermissionsResponse*>* GetDefaultPermissionsWithHttpInfo(::StringW jurisdiction, ::System::DateTime dateOfBirth);
    // public System.Threading.Tasks.Task`1<KID.Model.GetDefaultPermissionsResponse> GetDefaultPermissionsAsync(System.String jurisdiction, System.DateTime dateOfBirth, System.Threading.CancellationToken cancellationToken)
    // Offset: 0x438CDE8
    ::System::Threading::Tasks::Task_1<::KID::Model::GetDefaultPermissionsResponse*>* GetDefaultPermissionsAsync(::StringW jurisdiction, ::System::DateTime dateOfBirth, ::System::Threading::CancellationToken cancellationToken);
    // public System.Threading.Tasks.Task`1<KID.Client.ApiResponse`1<KID.Model.GetDefaultPermissionsResponse>> GetDefaultPermissionsWithHttpInfoAsync(System.String jurisdiction, System.DateTime dateOfBirth, System.Threading.CancellationToken cancellationToken)
    // Offset: 0x438CF24
    ::System::Threading::Tasks::Task_1<::KID::Client::ApiResponse_1<::KID::Model::GetDefaultPermissionsResponse*>*>* GetDefaultPermissionsWithHttpInfoAsync(::StringW jurisdiction, ::System::DateTime dateOfBirth, ::System::Threading::CancellationToken cancellationToken);
    // public KID.Model.ShouldDisplayAgeGateResponse ShouldDisplayAgeGate(System.String jurisdiction)
    // Offset: 0x438D064
    ::KID::Model::ShouldDisplayAgeGateResponse* ShouldDisplayAgeGate(::StringW jurisdiction);
    // public KID.Client.ApiResponse`1<KID.Model.ShouldDisplayAgeGateResponse> ShouldDisplayAgeGateWithHttpInfo(System.String jurisdiction)
    // Offset: 0x438D0B8
    ::KID::Client::ApiResponse_1<::KID::Model::ShouldDisplayAgeGateResponse*>* ShouldDisplayAgeGateWithHttpInfo(::StringW jurisdiction);
    // public System.Threading.Tasks.Task`1<KID.Model.ShouldDisplayAgeGateResponse> ShouldDisplayAgeGateAsync(System.String jurisdiction, System.Threading.CancellationToken cancellationToken)
    // Offset: 0x438D588
    ::System::Threading::Tasks::Task_1<::KID::Model::ShouldDisplayAgeGateResponse*>* ShouldDisplayAgeGateAsync(::StringW jurisdiction, ::System::Threading::CancellationToken cancellationToken);
    // public System.Threading.Tasks.Task`1<KID.Client.ApiResponse`1<KID.Model.ShouldDisplayAgeGateResponse>> ShouldDisplayAgeGateWithHttpInfoAsync(System.String jurisdiction, System.Threading.CancellationToken cancellationToken)
    // Offset: 0x438D6B8
    ::System::Threading::Tasks::Task_1<::KID::Client::ApiResponse_1<::KID::Model::ShouldDisplayAgeGateResponse*>*>* ShouldDisplayAgeGateWithHttpInfoAsync(::StringW jurisdiction, ::System::Threading::CancellationToken cancellationToken);
  }; // KID.Api.AgeGateAPIsApi
  #pragma pack(pop)
  static check_size<sizeof(AgeGateAPIsApi), 48 + sizeof(::KID::Client::IReadableConfiguration*)> __KID_Api_AgeGateAPIsApiSizeCheck;
  static_assert(sizeof(AgeGateAPIsApi) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Api::AgeGateAPIsApi::*)()>(&KID::Api::AgeGateAPIsApi::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::get_ApiClient
// Il2CppName: get_ApiClient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::ApiClient* (KID::Api::AgeGateAPIsApi::*)()>(&KID::Api::AgeGateAPIsApi::get_ApiClient)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "get_ApiClient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::set_ApiClient
// Il2CppName: set_ApiClient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Api::AgeGateAPIsApi::*)(::KID::Client::ApiClient*)>(&KID::Api::AgeGateAPIsApi::set_ApiClient)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("KID.Client", "ApiClient")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "set_ApiClient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::get_AsynchronousClient
// Il2CppName: get_AsynchronousClient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::IAsynchronousClient* (KID::Api::AgeGateAPIsApi::*)()>(&KID::Api::AgeGateAPIsApi::get_AsynchronousClient)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "get_AsynchronousClient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::set_AsynchronousClient
// Il2CppName: set_AsynchronousClient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Api::AgeGateAPIsApi::*)(::KID::Client::IAsynchronousClient*)>(&KID::Api::AgeGateAPIsApi::set_AsynchronousClient)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("KID.Client", "IAsynchronousClient")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "set_AsynchronousClient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::get_Client
// Il2CppName: get_Client
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::ISynchronousClient* (KID::Api::AgeGateAPIsApi::*)()>(&KID::Api::AgeGateAPIsApi::get_Client)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "get_Client", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::set_Client
// Il2CppName: set_Client
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Api::AgeGateAPIsApi::*)(::KID::Client::ISynchronousClient*)>(&KID::Api::AgeGateAPIsApi::set_Client)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("KID.Client", "ISynchronousClient")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "set_Client", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::GetBasePath
// Il2CppName: GetBasePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (KID::Api::AgeGateAPIsApi::*)()>(&KID::Api::AgeGateAPIsApi::GetBasePath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "GetBasePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::get_Configuration
// Il2CppName: get_Configuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::IReadableConfiguration* (KID::Api::AgeGateAPIsApi::*)()>(&KID::Api::AgeGateAPIsApi::get_Configuration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "get_Configuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::set_Configuration
// Il2CppName: set_Configuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Api::AgeGateAPIsApi::*)(::KID::Client::IReadableConfiguration*)>(&KID::Api::AgeGateAPIsApi::set_Configuration)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("KID.Client", "IReadableConfiguration")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "set_Configuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::get_ExceptionFactory
// Il2CppName: get_ExceptionFactory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::ExceptionFactory* (KID::Api::AgeGateAPIsApi::*)()>(&KID::Api::AgeGateAPIsApi::get_ExceptionFactory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "get_ExceptionFactory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::set_ExceptionFactory
// Il2CppName: set_ExceptionFactory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KID::Api::AgeGateAPIsApi::*)(::KID::Client::ExceptionFactory*)>(&KID::Api::AgeGateAPIsApi::set_ExceptionFactory)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("KID.Client", "ExceptionFactory")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "set_ExceptionFactory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::CheckAgeGate
// Il2CppName: CheckAgeGate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Model::CheckAgeGateResponse* (KID::Api::AgeGateAPIsApi::*)(::KID::Model::CheckAgeGateRequest*)>(&KID::Api::AgeGateAPIsApi::CheckAgeGate)> {
  static const MethodInfo* get() {
    static auto* checkAgeGateRequest = &::il2cpp_utils::GetClassFromName("KID.Model", "CheckAgeGateRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "CheckAgeGate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{checkAgeGateRequest});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::CheckAgeGateWithHttpInfo
// Il2CppName: CheckAgeGateWithHttpInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::ApiResponse_1<::KID::Model::CheckAgeGateResponse*>* (KID::Api::AgeGateAPIsApi::*)(::KID::Model::CheckAgeGateRequest*)>(&KID::Api::AgeGateAPIsApi::CheckAgeGateWithHttpInfo)> {
  static const MethodInfo* get() {
    static auto* checkAgeGateRequest = &::il2cpp_utils::GetClassFromName("KID.Model", "CheckAgeGateRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "CheckAgeGateWithHttpInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{checkAgeGateRequest});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::CheckAgeGateAsync
// Il2CppName: CheckAgeGateAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::KID::Model::CheckAgeGateResponse*>* (KID::Api::AgeGateAPIsApi::*)(::KID::Model::CheckAgeGateRequest*, ::System::Threading::CancellationToken)>(&KID::Api::AgeGateAPIsApi::CheckAgeGateAsync)> {
  static const MethodInfo* get() {
    static auto* checkAgeGateRequest = &::il2cpp_utils::GetClassFromName("KID.Model", "CheckAgeGateRequest")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "CheckAgeGateAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{checkAgeGateRequest, cancellationToken});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::CheckAgeGateWithHttpInfoAsync
// Il2CppName: CheckAgeGateWithHttpInfoAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::KID::Client::ApiResponse_1<::KID::Model::CheckAgeGateResponse*>*>* (KID::Api::AgeGateAPIsApi::*)(::KID::Model::CheckAgeGateRequest*, ::System::Threading::CancellationToken)>(&KID::Api::AgeGateAPIsApi::CheckAgeGateWithHttpInfoAsync)> {
  static const MethodInfo* get() {
    static auto* checkAgeGateRequest = &::il2cpp_utils::GetClassFromName("KID.Model", "CheckAgeGateRequest")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "CheckAgeGateWithHttpInfoAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{checkAgeGateRequest, cancellationToken});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::GetDefaultPermissions
// Il2CppName: GetDefaultPermissions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Model::GetDefaultPermissionsResponse* (KID::Api::AgeGateAPIsApi::*)(::StringW, ::System::DateTime)>(&KID::Api::AgeGateAPIsApi::GetDefaultPermissions)> {
  static const MethodInfo* get() {
    static auto* jurisdiction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dateOfBirth = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "GetDefaultPermissions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jurisdiction, dateOfBirth});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::GetDefaultPermissionsWithHttpInfo
// Il2CppName: GetDefaultPermissionsWithHttpInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::ApiResponse_1<::KID::Model::GetDefaultPermissionsResponse*>* (KID::Api::AgeGateAPIsApi::*)(::StringW, ::System::DateTime)>(&KID::Api::AgeGateAPIsApi::GetDefaultPermissionsWithHttpInfo)> {
  static const MethodInfo* get() {
    static auto* jurisdiction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dateOfBirth = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "GetDefaultPermissionsWithHttpInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jurisdiction, dateOfBirth});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::GetDefaultPermissionsAsync
// Il2CppName: GetDefaultPermissionsAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::KID::Model::GetDefaultPermissionsResponse*>* (KID::Api::AgeGateAPIsApi::*)(::StringW, ::System::DateTime, ::System::Threading::CancellationToken)>(&KID::Api::AgeGateAPIsApi::GetDefaultPermissionsAsync)> {
  static const MethodInfo* get() {
    static auto* jurisdiction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dateOfBirth = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "GetDefaultPermissionsAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jurisdiction, dateOfBirth, cancellationToken});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::GetDefaultPermissionsWithHttpInfoAsync
// Il2CppName: GetDefaultPermissionsWithHttpInfoAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::KID::Client::ApiResponse_1<::KID::Model::GetDefaultPermissionsResponse*>*>* (KID::Api::AgeGateAPIsApi::*)(::StringW, ::System::DateTime, ::System::Threading::CancellationToken)>(&KID::Api::AgeGateAPIsApi::GetDefaultPermissionsWithHttpInfoAsync)> {
  static const MethodInfo* get() {
    static auto* jurisdiction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dateOfBirth = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "GetDefaultPermissionsWithHttpInfoAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jurisdiction, dateOfBirth, cancellationToken});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::ShouldDisplayAgeGate
// Il2CppName: ShouldDisplayAgeGate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Model::ShouldDisplayAgeGateResponse* (KID::Api::AgeGateAPIsApi::*)(::StringW)>(&KID::Api::AgeGateAPIsApi::ShouldDisplayAgeGate)> {
  static const MethodInfo* get() {
    static auto* jurisdiction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "ShouldDisplayAgeGate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jurisdiction});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::ShouldDisplayAgeGateWithHttpInfo
// Il2CppName: ShouldDisplayAgeGateWithHttpInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::ApiResponse_1<::KID::Model::ShouldDisplayAgeGateResponse*>* (KID::Api::AgeGateAPIsApi::*)(::StringW)>(&KID::Api::AgeGateAPIsApi::ShouldDisplayAgeGateWithHttpInfo)> {
  static const MethodInfo* get() {
    static auto* jurisdiction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "ShouldDisplayAgeGateWithHttpInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jurisdiction});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::ShouldDisplayAgeGateAsync
// Il2CppName: ShouldDisplayAgeGateAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::KID::Model::ShouldDisplayAgeGateResponse*>* (KID::Api::AgeGateAPIsApi::*)(::StringW, ::System::Threading::CancellationToken)>(&KID::Api::AgeGateAPIsApi::ShouldDisplayAgeGateAsync)> {
  static const MethodInfo* get() {
    static auto* jurisdiction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "ShouldDisplayAgeGateAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jurisdiction, cancellationToken});
  }
};
// Writing MetadataGetter for method: KID::Api::AgeGateAPIsApi::ShouldDisplayAgeGateWithHttpInfoAsync
// Il2CppName: ShouldDisplayAgeGateWithHttpInfoAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::KID::Client::ApiResponse_1<::KID::Model::ShouldDisplayAgeGateResponse*>*>* (KID::Api::AgeGateAPIsApi::*)(::StringW, ::System::Threading::CancellationToken)>(&KID::Api::AgeGateAPIsApi::ShouldDisplayAgeGateWithHttpInfoAsync)> {
  static const MethodInfo* get() {
    static auto* jurisdiction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::AgeGateAPIsApi*), "ShouldDisplayAgeGateWithHttpInfoAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jurisdiction, cancellationToken});
  }
};
