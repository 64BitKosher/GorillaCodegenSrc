// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: KID.Client.IApiAccessor
#include "KID/Client/IApiAccessor.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Forward declaring namespace: KID::Model
namespace KID::Model {
  // Forward declaring type: CheckAgeGateResponse
  class CheckAgeGateResponse;
  // Forward declaring type: CheckAgeGateRequest
  class CheckAgeGateRequest;
  // Forward declaring type: GetDefaultPermissionsResponse
  class GetDefaultPermissionsResponse;
  // Forward declaring type: ShouldDisplayAgeGateResponse
  class ShouldDisplayAgeGateResponse;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationToken
  struct CancellationToken;
}
// Forward declaring namespace: KID::Client
namespace KID::Client {
  // Forward declaring type: ApiResponse`1<T>
  template<typename T>
  class ApiResponse_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: DateTime
  struct DateTime;
}
// Completed forward declares
// Type namespace: KID.Api
namespace KID::Api {
  // Forward declaring type: IAgeGateAPIsApiAsync
  class IAgeGateAPIsApiAsync;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::KID::Api::IAgeGateAPIsApiAsync);
DEFINE_IL2CPP_ARG_TYPE(::KID::Api::IAgeGateAPIsApiAsync*, "KID.Api", "IAgeGateAPIsApiAsync");
// Type namespace: KID.Api
namespace KID::Api {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: KID.Api.IAgeGateAPIsApiAsync
  // [TokenAttribute] Offset: FFFFFFFF
  class IAgeGateAPIsApiAsync/*, public ::KID::Client::IApiAccessor*/ {
    public:
    // Creating interface conversion operator: operator ::KID::Client::IApiAccessor
    operator ::KID::Client::IApiAccessor() noexcept {
      return *reinterpret_cast<::KID::Client::IApiAccessor*>(this);
    }
    // public System.Threading.Tasks.Task`1<KID.Model.CheckAgeGateResponse> CheckAgeGateAsync(KID.Model.CheckAgeGateRequest checkAgeGateRequest, System.Threading.CancellationToken cancellationToken)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Threading::Tasks::Task_1<::KID::Model::CheckAgeGateResponse*>* CheckAgeGateAsync(::KID::Model::CheckAgeGateRequest* checkAgeGateRequest, ::System::Threading::CancellationToken cancellationToken);
    // public System.Threading.Tasks.Task`1<KID.Client.ApiResponse`1<KID.Model.CheckAgeGateResponse>> CheckAgeGateWithHttpInfoAsync(KID.Model.CheckAgeGateRequest checkAgeGateRequest, System.Threading.CancellationToken cancellationToken)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Threading::Tasks::Task_1<::KID::Client::ApiResponse_1<::KID::Model::CheckAgeGateResponse*>*>* CheckAgeGateWithHttpInfoAsync(::KID::Model::CheckAgeGateRequest* checkAgeGateRequest, ::System::Threading::CancellationToken cancellationToken);
    // public System.Threading.Tasks.Task`1<KID.Model.GetDefaultPermissionsResponse> GetDefaultPermissionsAsync(System.String jurisdiction, System.DateTime dateOfBirth, System.Threading.CancellationToken cancellationToken)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Threading::Tasks::Task_1<::KID::Model::GetDefaultPermissionsResponse*>* GetDefaultPermissionsAsync(::StringW jurisdiction, ::System::DateTime dateOfBirth, ::System::Threading::CancellationToken cancellationToken);
    // public System.Threading.Tasks.Task`1<KID.Client.ApiResponse`1<KID.Model.GetDefaultPermissionsResponse>> GetDefaultPermissionsWithHttpInfoAsync(System.String jurisdiction, System.DateTime dateOfBirth, System.Threading.CancellationToken cancellationToken)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Threading::Tasks::Task_1<::KID::Client::ApiResponse_1<::KID::Model::GetDefaultPermissionsResponse*>*>* GetDefaultPermissionsWithHttpInfoAsync(::StringW jurisdiction, ::System::DateTime dateOfBirth, ::System::Threading::CancellationToken cancellationToken);
    // public System.Threading.Tasks.Task`1<KID.Model.ShouldDisplayAgeGateResponse> ShouldDisplayAgeGateAsync(System.String jurisdiction, System.Threading.CancellationToken cancellationToken)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Threading::Tasks::Task_1<::KID::Model::ShouldDisplayAgeGateResponse*>* ShouldDisplayAgeGateAsync(::StringW jurisdiction, ::System::Threading::CancellationToken cancellationToken);
    // public System.Threading.Tasks.Task`1<KID.Client.ApiResponse`1<KID.Model.ShouldDisplayAgeGateResponse>> ShouldDisplayAgeGateWithHttpInfoAsync(System.String jurisdiction, System.Threading.CancellationToken cancellationToken)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Threading::Tasks::Task_1<::KID::Client::ApiResponse_1<::KID::Model::ShouldDisplayAgeGateResponse*>*>* ShouldDisplayAgeGateWithHttpInfoAsync(::StringW jurisdiction, ::System::Threading::CancellationToken cancellationToken);
  }; // KID.Api.IAgeGateAPIsApiAsync
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: KID::Api::IAgeGateAPIsApiAsync::CheckAgeGateAsync
// Il2CppName: CheckAgeGateAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::KID::Model::CheckAgeGateResponse*>* (KID::Api::IAgeGateAPIsApiAsync::*)(::KID::Model::CheckAgeGateRequest*, ::System::Threading::CancellationToken)>(&KID::Api::IAgeGateAPIsApiAsync::CheckAgeGateAsync)> {
  static const MethodInfo* get() {
    static auto* checkAgeGateRequest = &::il2cpp_utils::GetClassFromName("KID.Model", "CheckAgeGateRequest")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IAgeGateAPIsApiAsync*), "CheckAgeGateAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{checkAgeGateRequest, cancellationToken});
  }
};
// Writing MetadataGetter for method: KID::Api::IAgeGateAPIsApiAsync::CheckAgeGateWithHttpInfoAsync
// Il2CppName: CheckAgeGateWithHttpInfoAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::KID::Client::ApiResponse_1<::KID::Model::CheckAgeGateResponse*>*>* (KID::Api::IAgeGateAPIsApiAsync::*)(::KID::Model::CheckAgeGateRequest*, ::System::Threading::CancellationToken)>(&KID::Api::IAgeGateAPIsApiAsync::CheckAgeGateWithHttpInfoAsync)> {
  static const MethodInfo* get() {
    static auto* checkAgeGateRequest = &::il2cpp_utils::GetClassFromName("KID.Model", "CheckAgeGateRequest")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IAgeGateAPIsApiAsync*), "CheckAgeGateWithHttpInfoAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{checkAgeGateRequest, cancellationToken});
  }
};
// Writing MetadataGetter for method: KID::Api::IAgeGateAPIsApiAsync::GetDefaultPermissionsAsync
// Il2CppName: GetDefaultPermissionsAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::KID::Model::GetDefaultPermissionsResponse*>* (KID::Api::IAgeGateAPIsApiAsync::*)(::StringW, ::System::DateTime, ::System::Threading::CancellationToken)>(&KID::Api::IAgeGateAPIsApiAsync::GetDefaultPermissionsAsync)> {
  static const MethodInfo* get() {
    static auto* jurisdiction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dateOfBirth = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IAgeGateAPIsApiAsync*), "GetDefaultPermissionsAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jurisdiction, dateOfBirth, cancellationToken});
  }
};
// Writing MetadataGetter for method: KID::Api::IAgeGateAPIsApiAsync::GetDefaultPermissionsWithHttpInfoAsync
// Il2CppName: GetDefaultPermissionsWithHttpInfoAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::KID::Client::ApiResponse_1<::KID::Model::GetDefaultPermissionsResponse*>*>* (KID::Api::IAgeGateAPIsApiAsync::*)(::StringW, ::System::DateTime, ::System::Threading::CancellationToken)>(&KID::Api::IAgeGateAPIsApiAsync::GetDefaultPermissionsWithHttpInfoAsync)> {
  static const MethodInfo* get() {
    static auto* jurisdiction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dateOfBirth = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IAgeGateAPIsApiAsync*), "GetDefaultPermissionsWithHttpInfoAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jurisdiction, dateOfBirth, cancellationToken});
  }
};
// Writing MetadataGetter for method: KID::Api::IAgeGateAPIsApiAsync::ShouldDisplayAgeGateAsync
// Il2CppName: ShouldDisplayAgeGateAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::KID::Model::ShouldDisplayAgeGateResponse*>* (KID::Api::IAgeGateAPIsApiAsync::*)(::StringW, ::System::Threading::CancellationToken)>(&KID::Api::IAgeGateAPIsApiAsync::ShouldDisplayAgeGateAsync)> {
  static const MethodInfo* get() {
    static auto* jurisdiction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IAgeGateAPIsApiAsync*), "ShouldDisplayAgeGateAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jurisdiction, cancellationToken});
  }
};
// Writing MetadataGetter for method: KID::Api::IAgeGateAPIsApiAsync::ShouldDisplayAgeGateWithHttpInfoAsync
// Il2CppName: ShouldDisplayAgeGateWithHttpInfoAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::KID::Client::ApiResponse_1<::KID::Model::ShouldDisplayAgeGateResponse*>*>* (KID::Api::IAgeGateAPIsApiAsync::*)(::StringW, ::System::Threading::CancellationToken)>(&KID::Api::IAgeGateAPIsApiAsync::ShouldDisplayAgeGateWithHttpInfoAsync)> {
  static const MethodInfo* get() {
    static auto* jurisdiction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IAgeGateAPIsApiAsync*), "ShouldDisplayAgeGateWithHttpInfoAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jurisdiction, cancellationToken});
  }
};
