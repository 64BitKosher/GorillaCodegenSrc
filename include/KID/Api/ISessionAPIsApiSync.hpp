// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: KID.Client.IApiAccessor
#include "KID/Client/IApiAccessor.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: KID::Model
namespace KID::Model {
  // Forward declaring type: Session
  class Session;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Guid
  struct Guid;
}
// Forward declaring namespace: KID::Client
namespace KID::Client {
  // Forward declaring type: ApiResponse`1<T>
  template<typename T>
  class ApiResponse_1;
}
// Completed forward declares
// Type namespace: KID.Api
namespace KID::Api {
  // Forward declaring type: ISessionAPIsApiSync
  class ISessionAPIsApiSync;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::KID::Api::ISessionAPIsApiSync);
DEFINE_IL2CPP_ARG_TYPE(::KID::Api::ISessionAPIsApiSync*, "KID.Api", "ISessionAPIsApiSync");
// Type namespace: KID.Api
namespace KID::Api {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: KID.Api.ISessionAPIsApiSync
  // [TokenAttribute] Offset: FFFFFFFF
  class ISessionAPIsApiSync/*, public ::KID::Client::IApiAccessor*/ {
    public:
    // Creating interface conversion operator: operator ::KID::Client::IApiAccessor
    operator ::KID::Client::IApiAccessor() noexcept {
      return *reinterpret_cast<::KID::Client::IApiAccessor*>(this);
    }
    // public KID.Model.Session GetSession(System.Guid sessionId, System.String etag)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::KID::Model::Session* GetSession(::System::Guid sessionId, ::StringW etag);
    // public KID.Client.ApiResponse`1<KID.Model.Session> GetSessionWithHttpInfo(System.Guid sessionId, System.String etag)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::KID::Client::ApiResponse_1<::KID::Model::Session*>* GetSessionWithHttpInfo(::System::Guid sessionId, ::StringW etag);
  }; // KID.Api.ISessionAPIsApiSync
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: KID::Api::ISessionAPIsApiSync::GetSession
// Il2CppName: GetSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Model::Session* (KID::Api::ISessionAPIsApiSync::*)(::System::Guid, ::StringW)>(&KID::Api::ISessionAPIsApiSync::GetSession)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "Guid")->byval_arg;
    static auto* etag = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::ISessionAPIsApiSync*), "GetSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, etag});
  }
};
// Writing MetadataGetter for method: KID::Api::ISessionAPIsApiSync::GetSessionWithHttpInfo
// Il2CppName: GetSessionWithHttpInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::ApiResponse_1<::KID::Model::Session*>* (KID::Api::ISessionAPIsApiSync::*)(::System::Guid, ::StringW)>(&KID::Api::ISessionAPIsApiSync::GetSessionWithHttpInfo)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "Guid")->byval_arg;
    static auto* etag = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::ISessionAPIsApiSync*), "GetSessionWithHttpInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, etag});
  }
};
