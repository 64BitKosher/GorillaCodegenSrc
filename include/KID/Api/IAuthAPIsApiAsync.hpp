// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: KID.Client.IApiAccessor
#include "KID/Client/IApiAccessor.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Forward declaring namespace: KID::Model
namespace KID::Model {
  // Forward declaring type: IssueAuthTokenResponse
  class IssueAuthTokenResponse;
  // Forward declaring type: CreateClientAuthTokenRequest
  class CreateClientAuthTokenRequest;
  // Forward declaring type: RefreshClientAuthTokenRequest
  class RefreshClientAuthTokenRequest;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationToken
  struct CancellationToken;
}
// Forward declaring namespace: KID::Client
namespace KID::Client {
  // Forward declaring type: ApiResponse`1<T>
  template<typename T>
  class ApiResponse_1;
}
// Completed forward declares
// Type namespace: KID.Api
namespace KID::Api {
  // Forward declaring type: IAuthAPIsApiAsync
  class IAuthAPIsApiAsync;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::KID::Api::IAuthAPIsApiAsync);
DEFINE_IL2CPP_ARG_TYPE(::KID::Api::IAuthAPIsApiAsync*, "KID.Api", "IAuthAPIsApiAsync");
// Type namespace: KID.Api
namespace KID::Api {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: KID.Api.IAuthAPIsApiAsync
  // [TokenAttribute] Offset: FFFFFFFF
  class IAuthAPIsApiAsync/*, public ::KID::Client::IApiAccessor*/ {
    public:
    // Creating interface conversion operator: operator ::KID::Client::IApiAccessor
    operator ::KID::Client::IApiAccessor() noexcept {
      return *reinterpret_cast<::KID::Client::IApiAccessor*>(this);
    }
    // public System.Threading.Tasks.Task`1<KID.Model.IssueAuthTokenResponse> CreateClientAuthTokenAsync(KID.Model.CreateClientAuthTokenRequest createClientAuthTokenRequest, System.Threading.CancellationToken cancellationToken)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Threading::Tasks::Task_1<::KID::Model::IssueAuthTokenResponse*>* CreateClientAuthTokenAsync(::KID::Model::CreateClientAuthTokenRequest* createClientAuthTokenRequest, ::System::Threading::CancellationToken cancellationToken);
    // public System.Threading.Tasks.Task`1<KID.Client.ApiResponse`1<KID.Model.IssueAuthTokenResponse>> CreateClientAuthTokenWithHttpInfoAsync(KID.Model.CreateClientAuthTokenRequest createClientAuthTokenRequest, System.Threading.CancellationToken cancellationToken)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Threading::Tasks::Task_1<::KID::Client::ApiResponse_1<::KID::Model::IssueAuthTokenResponse*>*>* CreateClientAuthTokenWithHttpInfoAsync(::KID::Model::CreateClientAuthTokenRequest* createClientAuthTokenRequest, ::System::Threading::CancellationToken cancellationToken);
    // public System.Threading.Tasks.Task`1<KID.Model.IssueAuthTokenResponse> RefreshClientAuthTokenAsync(KID.Model.RefreshClientAuthTokenRequest refreshClientAuthTokenRequest, System.Threading.CancellationToken cancellationToken)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Threading::Tasks::Task_1<::KID::Model::IssueAuthTokenResponse*>* RefreshClientAuthTokenAsync(::KID::Model::RefreshClientAuthTokenRequest* refreshClientAuthTokenRequest, ::System::Threading::CancellationToken cancellationToken);
    // public System.Threading.Tasks.Task`1<KID.Client.ApiResponse`1<KID.Model.IssueAuthTokenResponse>> RefreshClientAuthTokenWithHttpInfoAsync(KID.Model.RefreshClientAuthTokenRequest refreshClientAuthTokenRequest, System.Threading.CancellationToken cancellationToken)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Threading::Tasks::Task_1<::KID::Client::ApiResponse_1<::KID::Model::IssueAuthTokenResponse*>*>* RefreshClientAuthTokenWithHttpInfoAsync(::KID::Model::RefreshClientAuthTokenRequest* refreshClientAuthTokenRequest, ::System::Threading::CancellationToken cancellationToken);
  }; // KID.Api.IAuthAPIsApiAsync
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: KID::Api::IAuthAPIsApiAsync::CreateClientAuthTokenAsync
// Il2CppName: CreateClientAuthTokenAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::KID::Model::IssueAuthTokenResponse*>* (KID::Api::IAuthAPIsApiAsync::*)(::KID::Model::CreateClientAuthTokenRequest*, ::System::Threading::CancellationToken)>(&KID::Api::IAuthAPIsApiAsync::CreateClientAuthTokenAsync)> {
  static const MethodInfo* get() {
    static auto* createClientAuthTokenRequest = &::il2cpp_utils::GetClassFromName("KID.Model", "CreateClientAuthTokenRequest")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IAuthAPIsApiAsync*), "CreateClientAuthTokenAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{createClientAuthTokenRequest, cancellationToken});
  }
};
// Writing MetadataGetter for method: KID::Api::IAuthAPIsApiAsync::CreateClientAuthTokenWithHttpInfoAsync
// Il2CppName: CreateClientAuthTokenWithHttpInfoAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::KID::Client::ApiResponse_1<::KID::Model::IssueAuthTokenResponse*>*>* (KID::Api::IAuthAPIsApiAsync::*)(::KID::Model::CreateClientAuthTokenRequest*, ::System::Threading::CancellationToken)>(&KID::Api::IAuthAPIsApiAsync::CreateClientAuthTokenWithHttpInfoAsync)> {
  static const MethodInfo* get() {
    static auto* createClientAuthTokenRequest = &::il2cpp_utils::GetClassFromName("KID.Model", "CreateClientAuthTokenRequest")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IAuthAPIsApiAsync*), "CreateClientAuthTokenWithHttpInfoAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{createClientAuthTokenRequest, cancellationToken});
  }
};
// Writing MetadataGetter for method: KID::Api::IAuthAPIsApiAsync::RefreshClientAuthTokenAsync
// Il2CppName: RefreshClientAuthTokenAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::KID::Model::IssueAuthTokenResponse*>* (KID::Api::IAuthAPIsApiAsync::*)(::KID::Model::RefreshClientAuthTokenRequest*, ::System::Threading::CancellationToken)>(&KID::Api::IAuthAPIsApiAsync::RefreshClientAuthTokenAsync)> {
  static const MethodInfo* get() {
    static auto* refreshClientAuthTokenRequest = &::il2cpp_utils::GetClassFromName("KID.Model", "RefreshClientAuthTokenRequest")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IAuthAPIsApiAsync*), "RefreshClientAuthTokenAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{refreshClientAuthTokenRequest, cancellationToken});
  }
};
// Writing MetadataGetter for method: KID::Api::IAuthAPIsApiAsync::RefreshClientAuthTokenWithHttpInfoAsync
// Il2CppName: RefreshClientAuthTokenWithHttpInfoAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::KID::Client::ApiResponse_1<::KID::Model::IssueAuthTokenResponse*>*>* (KID::Api::IAuthAPIsApiAsync::*)(::KID::Model::RefreshClientAuthTokenRequest*, ::System::Threading::CancellationToken)>(&KID::Api::IAuthAPIsApiAsync::RefreshClientAuthTokenWithHttpInfoAsync)> {
  static const MethodInfo* get() {
    static auto* refreshClientAuthTokenRequest = &::il2cpp_utils::GetClassFromName("KID.Model", "RefreshClientAuthTokenRequest")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IAuthAPIsApiAsync*), "RefreshClientAuthTokenWithHttpInfoAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{refreshClientAuthTokenRequest, cancellationToken});
  }
};
