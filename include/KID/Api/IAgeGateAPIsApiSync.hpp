// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: KID.Client.IApiAccessor
#include "KID/Client/IApiAccessor.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: KID::Model
namespace KID::Model {
  // Forward declaring type: CheckAgeGateResponse
  class CheckAgeGateResponse;
  // Forward declaring type: CheckAgeGateRequest
  class CheckAgeGateRequest;
  // Forward declaring type: GetDefaultPermissionsResponse
  class GetDefaultPermissionsResponse;
  // Forward declaring type: ShouldDisplayAgeGateResponse
  class ShouldDisplayAgeGateResponse;
}
// Forward declaring namespace: KID::Client
namespace KID::Client {
  // Forward declaring type: ApiResponse`1<T>
  template<typename T>
  class ApiResponse_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: DateTime
  struct DateTime;
}
// Completed forward declares
// Type namespace: KID.Api
namespace KID::Api {
  // Forward declaring type: IAgeGateAPIsApiSync
  class IAgeGateAPIsApiSync;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::KID::Api::IAgeGateAPIsApiSync);
DEFINE_IL2CPP_ARG_TYPE(::KID::Api::IAgeGateAPIsApiSync*, "KID.Api", "IAgeGateAPIsApiSync");
// Type namespace: KID.Api
namespace KID::Api {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: KID.Api.IAgeGateAPIsApiSync
  // [TokenAttribute] Offset: FFFFFFFF
  class IAgeGateAPIsApiSync/*, public ::KID::Client::IApiAccessor*/ {
    public:
    // Creating interface conversion operator: operator ::KID::Client::IApiAccessor
    operator ::KID::Client::IApiAccessor() noexcept {
      return *reinterpret_cast<::KID::Client::IApiAccessor*>(this);
    }
    // public KID.Model.CheckAgeGateResponse CheckAgeGate(KID.Model.CheckAgeGateRequest checkAgeGateRequest)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::KID::Model::CheckAgeGateResponse* CheckAgeGate(::KID::Model::CheckAgeGateRequest* checkAgeGateRequest);
    // public KID.Client.ApiResponse`1<KID.Model.CheckAgeGateResponse> CheckAgeGateWithHttpInfo(KID.Model.CheckAgeGateRequest checkAgeGateRequest)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::KID::Client::ApiResponse_1<::KID::Model::CheckAgeGateResponse*>* CheckAgeGateWithHttpInfo(::KID::Model::CheckAgeGateRequest* checkAgeGateRequest);
    // public KID.Model.GetDefaultPermissionsResponse GetDefaultPermissions(System.String jurisdiction, System.DateTime dateOfBirth)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::KID::Model::GetDefaultPermissionsResponse* GetDefaultPermissions(::StringW jurisdiction, ::System::DateTime dateOfBirth);
    // public KID.Client.ApiResponse`1<KID.Model.GetDefaultPermissionsResponse> GetDefaultPermissionsWithHttpInfo(System.String jurisdiction, System.DateTime dateOfBirth)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::KID::Client::ApiResponse_1<::KID::Model::GetDefaultPermissionsResponse*>* GetDefaultPermissionsWithHttpInfo(::StringW jurisdiction, ::System::DateTime dateOfBirth);
    // public KID.Model.ShouldDisplayAgeGateResponse ShouldDisplayAgeGate(System.String jurisdiction)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::KID::Model::ShouldDisplayAgeGateResponse* ShouldDisplayAgeGate(::StringW jurisdiction);
    // public KID.Client.ApiResponse`1<KID.Model.ShouldDisplayAgeGateResponse> ShouldDisplayAgeGateWithHttpInfo(System.String jurisdiction)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::KID::Client::ApiResponse_1<::KID::Model::ShouldDisplayAgeGateResponse*>* ShouldDisplayAgeGateWithHttpInfo(::StringW jurisdiction);
  }; // KID.Api.IAgeGateAPIsApiSync
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: KID::Api::IAgeGateAPIsApiSync::CheckAgeGate
// Il2CppName: CheckAgeGate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Model::CheckAgeGateResponse* (KID::Api::IAgeGateAPIsApiSync::*)(::KID::Model::CheckAgeGateRequest*)>(&KID::Api::IAgeGateAPIsApiSync::CheckAgeGate)> {
  static const MethodInfo* get() {
    static auto* checkAgeGateRequest = &::il2cpp_utils::GetClassFromName("KID.Model", "CheckAgeGateRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IAgeGateAPIsApiSync*), "CheckAgeGate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{checkAgeGateRequest});
  }
};
// Writing MetadataGetter for method: KID::Api::IAgeGateAPIsApiSync::CheckAgeGateWithHttpInfo
// Il2CppName: CheckAgeGateWithHttpInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::ApiResponse_1<::KID::Model::CheckAgeGateResponse*>* (KID::Api::IAgeGateAPIsApiSync::*)(::KID::Model::CheckAgeGateRequest*)>(&KID::Api::IAgeGateAPIsApiSync::CheckAgeGateWithHttpInfo)> {
  static const MethodInfo* get() {
    static auto* checkAgeGateRequest = &::il2cpp_utils::GetClassFromName("KID.Model", "CheckAgeGateRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IAgeGateAPIsApiSync*), "CheckAgeGateWithHttpInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{checkAgeGateRequest});
  }
};
// Writing MetadataGetter for method: KID::Api::IAgeGateAPIsApiSync::GetDefaultPermissions
// Il2CppName: GetDefaultPermissions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Model::GetDefaultPermissionsResponse* (KID::Api::IAgeGateAPIsApiSync::*)(::StringW, ::System::DateTime)>(&KID::Api::IAgeGateAPIsApiSync::GetDefaultPermissions)> {
  static const MethodInfo* get() {
    static auto* jurisdiction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dateOfBirth = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IAgeGateAPIsApiSync*), "GetDefaultPermissions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jurisdiction, dateOfBirth});
  }
};
// Writing MetadataGetter for method: KID::Api::IAgeGateAPIsApiSync::GetDefaultPermissionsWithHttpInfo
// Il2CppName: GetDefaultPermissionsWithHttpInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::ApiResponse_1<::KID::Model::GetDefaultPermissionsResponse*>* (KID::Api::IAgeGateAPIsApiSync::*)(::StringW, ::System::DateTime)>(&KID::Api::IAgeGateAPIsApiSync::GetDefaultPermissionsWithHttpInfo)> {
  static const MethodInfo* get() {
    static auto* jurisdiction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dateOfBirth = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IAgeGateAPIsApiSync*), "GetDefaultPermissionsWithHttpInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jurisdiction, dateOfBirth});
  }
};
// Writing MetadataGetter for method: KID::Api::IAgeGateAPIsApiSync::ShouldDisplayAgeGate
// Il2CppName: ShouldDisplayAgeGate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Model::ShouldDisplayAgeGateResponse* (KID::Api::IAgeGateAPIsApiSync::*)(::StringW)>(&KID::Api::IAgeGateAPIsApiSync::ShouldDisplayAgeGate)> {
  static const MethodInfo* get() {
    static auto* jurisdiction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IAgeGateAPIsApiSync*), "ShouldDisplayAgeGate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jurisdiction});
  }
};
// Writing MetadataGetter for method: KID::Api::IAgeGateAPIsApiSync::ShouldDisplayAgeGateWithHttpInfo
// Il2CppName: ShouldDisplayAgeGateWithHttpInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::ApiResponse_1<::KID::Model::ShouldDisplayAgeGateResponse*>* (KID::Api::IAgeGateAPIsApiSync::*)(::StringW)>(&KID::Api::IAgeGateAPIsApiSync::ShouldDisplayAgeGateWithHttpInfo)> {
  static const MethodInfo* get() {
    static auto* jurisdiction = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IAgeGateAPIsApiSync*), "ShouldDisplayAgeGateWithHttpInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jurisdiction});
  }
};
