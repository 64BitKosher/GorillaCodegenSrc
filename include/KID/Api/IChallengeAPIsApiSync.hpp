// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: KID.Client.IApiAccessor
#include "KID/Client/IApiAccessor.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: KID::Model
namespace KID::Model {
  // Forward declaring type: AwaitChallengeResponse
  class AwaitChallengeResponse;
  // Forward declaring type: Challenge
  class Challenge;
  // Forward declaring type: SendEmailRequest
  class SendEmailRequest;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Guid
  struct Guid;
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: KID::Client
namespace KID::Client {
  // Forward declaring type: ApiResponse`1<T>
  template<typename T>
  class ApiResponse_1;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: KID.Api
namespace KID::Api {
  // Forward declaring type: IChallengeAPIsApiSync
  class IChallengeAPIsApiSync;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::KID::Api::IChallengeAPIsApiSync);
DEFINE_IL2CPP_ARG_TYPE(::KID::Api::IChallengeAPIsApiSync*, "KID.Api", "IChallengeAPIsApiSync");
// Type namespace: KID.Api
namespace KID::Api {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: KID.Api.IChallengeAPIsApiSync
  // [TokenAttribute] Offset: FFFFFFFF
  class IChallengeAPIsApiSync/*, public ::KID::Client::IApiAccessor*/ {
    public:
    // Creating interface conversion operator: operator ::KID::Client::IApiAccessor
    operator ::KID::Client::IApiAccessor() noexcept {
      return *reinterpret_cast<::KID::Client::IApiAccessor*>(this);
    }
    // public KID.Model.AwaitChallengeResponse AwaitChallenge(System.Guid challengeId, System.Nullable`1<System.Int32> timeout, System.Collections.Generic.List`1<System.String> varFor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::KID::Model::AwaitChallengeResponse* AwaitChallenge(::System::Guid challengeId, ::System::Nullable_1<int> timeout, ::System::Collections::Generic::List_1<::StringW>* varFor);
    // public KID.Client.ApiResponse`1<KID.Model.AwaitChallengeResponse> AwaitChallengeWithHttpInfo(System.Guid challengeId, System.Nullable`1<System.Int32> timeout, System.Collections.Generic.List`1<System.String> varFor)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::KID::Client::ApiResponse_1<::KID::Model::AwaitChallengeResponse*>* AwaitChallengeWithHttpInfo(::System::Guid challengeId, ::System::Nullable_1<int> timeout, ::System::Collections::Generic::List_1<::StringW>* varFor);
    // public KID.Model.Challenge GetChallenge(System.Guid challengeId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::KID::Model::Challenge* GetChallenge(::System::Guid challengeId);
    // public KID.Client.ApiResponse`1<KID.Model.Challenge> GetChallengeWithHttpInfo(System.Guid challengeId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::KID::Client::ApiResponse_1<::KID::Model::Challenge*>* GetChallengeWithHttpInfo(::System::Guid challengeId);
    // public System.Object SendEmail(KID.Model.SendEmailRequest sendEmailRequest)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* SendEmail(::KID::Model::SendEmailRequest* sendEmailRequest);
    // public KID.Client.ApiResponse`1<System.Object> SendEmailWithHttpInfo(KID.Model.SendEmailRequest sendEmailRequest)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::KID::Client::ApiResponse_1<::Il2CppObject*>* SendEmailWithHttpInfo(::KID::Model::SendEmailRequest* sendEmailRequest);
  }; // KID.Api.IChallengeAPIsApiSync
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: KID::Api::IChallengeAPIsApiSync::AwaitChallenge
// Il2CppName: AwaitChallenge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Model::AwaitChallengeResponse* (KID::Api::IChallengeAPIsApiSync::*)(::System::Guid, ::System::Nullable_1<int>, ::System::Collections::Generic::List_1<::StringW>*)>(&KID::Api::IChallengeAPIsApiSync::AwaitChallenge)> {
  static const MethodInfo* get() {
    static auto* challengeId = &::il2cpp_utils::GetClassFromName("System", "Guid")->byval_arg;
    static auto* timeout = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* varFor = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IChallengeAPIsApiSync*), "AwaitChallenge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeId, timeout, varFor});
  }
};
// Writing MetadataGetter for method: KID::Api::IChallengeAPIsApiSync::AwaitChallengeWithHttpInfo
// Il2CppName: AwaitChallengeWithHttpInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::ApiResponse_1<::KID::Model::AwaitChallengeResponse*>* (KID::Api::IChallengeAPIsApiSync::*)(::System::Guid, ::System::Nullable_1<int>, ::System::Collections::Generic::List_1<::StringW>*)>(&KID::Api::IChallengeAPIsApiSync::AwaitChallengeWithHttpInfo)> {
  static const MethodInfo* get() {
    static auto* challengeId = &::il2cpp_utils::GetClassFromName("System", "Guid")->byval_arg;
    static auto* timeout = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* varFor = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IChallengeAPIsApiSync*), "AwaitChallengeWithHttpInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeId, timeout, varFor});
  }
};
// Writing MetadataGetter for method: KID::Api::IChallengeAPIsApiSync::GetChallenge
// Il2CppName: GetChallenge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Model::Challenge* (KID::Api::IChallengeAPIsApiSync::*)(::System::Guid)>(&KID::Api::IChallengeAPIsApiSync::GetChallenge)> {
  static const MethodInfo* get() {
    static auto* challengeId = &::il2cpp_utils::GetClassFromName("System", "Guid")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IChallengeAPIsApiSync*), "GetChallenge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeId});
  }
};
// Writing MetadataGetter for method: KID::Api::IChallengeAPIsApiSync::GetChallengeWithHttpInfo
// Il2CppName: GetChallengeWithHttpInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::ApiResponse_1<::KID::Model::Challenge*>* (KID::Api::IChallengeAPIsApiSync::*)(::System::Guid)>(&KID::Api::IChallengeAPIsApiSync::GetChallengeWithHttpInfo)> {
  static const MethodInfo* get() {
    static auto* challengeId = &::il2cpp_utils::GetClassFromName("System", "Guid")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IChallengeAPIsApiSync*), "GetChallengeWithHttpInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeId});
  }
};
// Writing MetadataGetter for method: KID::Api::IChallengeAPIsApiSync::SendEmail
// Il2CppName: SendEmail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (KID::Api::IChallengeAPIsApiSync::*)(::KID::Model::SendEmailRequest*)>(&KID::Api::IChallengeAPIsApiSync::SendEmail)> {
  static const MethodInfo* get() {
    static auto* sendEmailRequest = &::il2cpp_utils::GetClassFromName("KID.Model", "SendEmailRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IChallengeAPIsApiSync*), "SendEmail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sendEmailRequest});
  }
};
// Writing MetadataGetter for method: KID::Api::IChallengeAPIsApiSync::SendEmailWithHttpInfo
// Il2CppName: SendEmailWithHttpInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::KID::Client::ApiResponse_1<::Il2CppObject*>* (KID::Api::IChallengeAPIsApiSync::*)(::KID::Model::SendEmailRequest*)>(&KID::Api::IChallengeAPIsApiSync::SendEmailWithHttpInfo)> {
  static const MethodInfo* get() {
    static auto* sendEmailRequest = &::il2cpp_utils::GetClassFromName("KID.Model", "SendEmailRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KID::Api::IChallengeAPIsApiSync*), "SendEmailWithHttpInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sendEmailRequest});
  }
};
