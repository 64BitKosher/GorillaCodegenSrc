// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: OculusSampleFramework
namespace OculusSampleFramework {
  // Forward declaring type: TrainLocomotive
  class TrainLocomotive;
  // Forward declaring type: CowController
  class CowController;
  // Forward declaring type: InteractableStateArgs
  class InteractableStateArgs;
}
// Completed forward declares
// Type namespace: OculusSampleFramework
namespace OculusSampleFramework {
  // Forward declaring type: ControllerBoxController
  class ControllerBoxController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::OculusSampleFramework::ControllerBoxController);
DEFINE_IL2CPP_ARG_TYPE(::OculusSampleFramework::ControllerBoxController*, "OculusSampleFramework", "ControllerBoxController");
// Type namespace: OculusSampleFramework
namespace OculusSampleFramework {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: OculusSampleFramework.ControllerBoxController
  // [TokenAttribute] Offset: FFFFFFFF
  class ControllerBoxController : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private OculusSampleFramework.TrainLocomotive _locomotive
    // Size: 0x8
    // Offset: 0x20
    ::OculusSampleFramework::TrainLocomotive* locomotive;
    // Field size check
    static_assert(sizeof(::OculusSampleFramework::TrainLocomotive*) == 0x8);
    // private OculusSampleFramework.CowController _cowController
    // Size: 0x8
    // Offset: 0x28
    ::OculusSampleFramework::CowController* cowController;
    // Field size check
    static_assert(sizeof(::OculusSampleFramework::CowController*) == 0x8);
    public:
    // Get instance field reference: private OculusSampleFramework.TrainLocomotive _locomotive
    [[deprecated("Use field access instead!")]] ::OculusSampleFramework::TrainLocomotive*& dyn__locomotive();
    // Get instance field reference: private OculusSampleFramework.CowController _cowController
    [[deprecated("Use field access instead!")]] ::OculusSampleFramework::CowController*& dyn__cowController();
    // private System.Void Awake()
    // Offset: 0x282A880
    void Awake();
    // public System.Void StartStopStateChanged(OculusSampleFramework.InteractableStateArgs obj)
    // Offset: 0x282A884
    void StartStopStateChanged(::OculusSampleFramework::InteractableStateArgs* obj);
    // public System.Void DecreaseSpeedStateChanged(OculusSampleFramework.InteractableStateArgs obj)
    // Offset: 0x282A910
    void DecreaseSpeedStateChanged(::OculusSampleFramework::InteractableStateArgs* obj);
    // public System.Void IncreaseSpeedStateChanged(OculusSampleFramework.InteractableStateArgs obj)
    // Offset: 0x282A9A0
    void IncreaseSpeedStateChanged(::OculusSampleFramework::InteractableStateArgs* obj);
    // public System.Void SmokeButtonStateChanged(OculusSampleFramework.InteractableStateArgs obj)
    // Offset: 0x282AA30
    void SmokeButtonStateChanged(::OculusSampleFramework::InteractableStateArgs* obj);
    // public System.Void WhistleButtonStateChanged(OculusSampleFramework.InteractableStateArgs obj)
    // Offset: 0x282AADC
    void WhistleButtonStateChanged(::OculusSampleFramework::InteractableStateArgs* obj);
    // public System.Void ReverseButtonStateChanged(OculusSampleFramework.InteractableStateArgs obj)
    // Offset: 0x282ABB8
    void ReverseButtonStateChanged(::OculusSampleFramework::InteractableStateArgs* obj);
    // public System.Void SwitchVisualization(OculusSampleFramework.InteractableStateArgs obj)
    // Offset: 0x282ABFC
    void SwitchVisualization(::OculusSampleFramework::InteractableStateArgs* obj);
    // public System.Void GoMoo(OculusSampleFramework.InteractableStateArgs obj)
    // Offset: 0x282AC5C
    void GoMoo(::OculusSampleFramework::InteractableStateArgs* obj);
    // public System.Void .ctor()
    // Offset: 0x282ACBC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ControllerBoxController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ControllerBoxController*, creationType>()));
    }
  }; // OculusSampleFramework.ControllerBoxController
  #pragma pack(pop)
  static check_size<sizeof(ControllerBoxController), 40 + sizeof(::OculusSampleFramework::CowController*)> __OculusSampleFramework_ControllerBoxControllerSizeCheck;
  static_assert(sizeof(ControllerBoxController) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: OculusSampleFramework::ControllerBoxController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusSampleFramework::ControllerBoxController::*)()>(&OculusSampleFramework::ControllerBoxController::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusSampleFramework::ControllerBoxController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusSampleFramework::ControllerBoxController::StartStopStateChanged
// Il2CppName: StartStopStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusSampleFramework::ControllerBoxController::*)(::OculusSampleFramework::InteractableStateArgs*)>(&OculusSampleFramework::ControllerBoxController::StartStopStateChanged)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("OculusSampleFramework", "InteractableStateArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OculusSampleFramework::ControllerBoxController*), "StartStopStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: OculusSampleFramework::ControllerBoxController::DecreaseSpeedStateChanged
// Il2CppName: DecreaseSpeedStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusSampleFramework::ControllerBoxController::*)(::OculusSampleFramework::InteractableStateArgs*)>(&OculusSampleFramework::ControllerBoxController::DecreaseSpeedStateChanged)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("OculusSampleFramework", "InteractableStateArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OculusSampleFramework::ControllerBoxController*), "DecreaseSpeedStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: OculusSampleFramework::ControllerBoxController::IncreaseSpeedStateChanged
// Il2CppName: IncreaseSpeedStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusSampleFramework::ControllerBoxController::*)(::OculusSampleFramework::InteractableStateArgs*)>(&OculusSampleFramework::ControllerBoxController::IncreaseSpeedStateChanged)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("OculusSampleFramework", "InteractableStateArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OculusSampleFramework::ControllerBoxController*), "IncreaseSpeedStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: OculusSampleFramework::ControllerBoxController::SmokeButtonStateChanged
// Il2CppName: SmokeButtonStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusSampleFramework::ControllerBoxController::*)(::OculusSampleFramework::InteractableStateArgs*)>(&OculusSampleFramework::ControllerBoxController::SmokeButtonStateChanged)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("OculusSampleFramework", "InteractableStateArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OculusSampleFramework::ControllerBoxController*), "SmokeButtonStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: OculusSampleFramework::ControllerBoxController::WhistleButtonStateChanged
// Il2CppName: WhistleButtonStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusSampleFramework::ControllerBoxController::*)(::OculusSampleFramework::InteractableStateArgs*)>(&OculusSampleFramework::ControllerBoxController::WhistleButtonStateChanged)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("OculusSampleFramework", "InteractableStateArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OculusSampleFramework::ControllerBoxController*), "WhistleButtonStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: OculusSampleFramework::ControllerBoxController::ReverseButtonStateChanged
// Il2CppName: ReverseButtonStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusSampleFramework::ControllerBoxController::*)(::OculusSampleFramework::InteractableStateArgs*)>(&OculusSampleFramework::ControllerBoxController::ReverseButtonStateChanged)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("OculusSampleFramework", "InteractableStateArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OculusSampleFramework::ControllerBoxController*), "ReverseButtonStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: OculusSampleFramework::ControllerBoxController::SwitchVisualization
// Il2CppName: SwitchVisualization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusSampleFramework::ControllerBoxController::*)(::OculusSampleFramework::InteractableStateArgs*)>(&OculusSampleFramework::ControllerBoxController::SwitchVisualization)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("OculusSampleFramework", "InteractableStateArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OculusSampleFramework::ControllerBoxController*), "SwitchVisualization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: OculusSampleFramework::ControllerBoxController::GoMoo
// Il2CppName: GoMoo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusSampleFramework::ControllerBoxController::*)(::OculusSampleFramework::InteractableStateArgs*)>(&OculusSampleFramework::ControllerBoxController::GoMoo)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("OculusSampleFramework", "InteractableStateArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OculusSampleFramework::ControllerBoxController*), "GoMoo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: OculusSampleFramework::ControllerBoxController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
