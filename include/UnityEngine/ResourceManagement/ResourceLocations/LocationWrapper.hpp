// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: UnityEngine.ResourceManagement.ResourceLocations
namespace UnityEngine::ResourceManagement::ResourceLocations {
  // Forward declaring type: LocationWrapper
  class LocationWrapper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper*, "UnityEngine.ResourceManagement.ResourceLocations", "LocationWrapper");
// Type namespace: UnityEngine.ResourceManagement.ResourceLocations
namespace UnityEngine::ResourceManagement::ResourceLocations {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ResourceManagement.ResourceLocations.LocationWrapper
  // [TokenAttribute] Offset: FFFFFFFF
  class LocationWrapper : public ::Il2CppObject/*, public ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*/ {
    public:
    public:
    // private UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation m_InternalLocation
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* m_InternalLocation;
    // Field size check
    static_assert(sizeof(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation
    operator ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation() noexcept {
      return *reinterpret_cast<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>(this);
    }
    // Creating conversion operator: operator ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*
    constexpr operator ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*() const noexcept {
      return m_InternalLocation;
    }
    // Get instance field reference: private UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation m_InternalLocation
    [[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*& dyn_m_InternalLocation();
    // public System.Void .ctor(UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation location)
    // Offset: 0x53320B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LocationWrapper* New_ctor(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LocationWrapper*, creationType>(location)));
    }
    // public System.String get_InternalId()
    // Offset: 0x533CAD0
    ::StringW get_InternalId();
    // public System.String get_ProviderId()
    // Offset: 0x533CB70
    ::StringW get_ProviderId();
    // public System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> get_Dependencies()
    // Offset: 0x533CC14
    ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* get_Dependencies();
    // public System.Int32 get_DependencyHashCode()
    // Offset: 0x533CCB8
    int get_DependencyHashCode();
    // public System.Boolean get_HasDependencies()
    // Offset: 0x533CD5C
    bool get_HasDependencies();
    // public System.Object get_Data()
    // Offset: 0x533CE00
    ::Il2CppObject* get_Data();
    // public System.String get_PrimaryKey()
    // Offset: 0x533CEA4
    ::StringW get_PrimaryKey();
    // public System.Type get_ResourceType()
    // Offset: 0x533CF48
    ::System::Type* get_ResourceType();
    // public System.Int32 Hash(System.Type resultType)
    // Offset: 0x533CFEC
    int Hash(::System::Type* resultType);
  }; // UnityEngine.ResourceManagement.ResourceLocations.LocationWrapper
  #pragma pack(pop)
  static check_size<sizeof(LocationWrapper), 16 + sizeof(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*)> __UnityEngine_ResourceManagement_ResourceLocations_LocationWrapperSizeCheck;
  static_assert(sizeof(LocationWrapper) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::get_InternalId
// Il2CppName: get_InternalId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::*)()>(&UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::get_InternalId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper*), "get_InternalId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::get_ProviderId
// Il2CppName: get_ProviderId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::*)()>(&UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::get_ProviderId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper*), "get_ProviderId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::get_Dependencies
// Il2CppName: get_Dependencies
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* (UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::*)()>(&UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::get_Dependencies)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper*), "get_Dependencies", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::get_DependencyHashCode
// Il2CppName: get_DependencyHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::*)()>(&UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::get_DependencyHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper*), "get_DependencyHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::get_HasDependencies
// Il2CppName: get_HasDependencies
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::*)()>(&UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::get_HasDependencies)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper*), "get_HasDependencies", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::get_Data
// Il2CppName: get_Data
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::*)()>(&UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::get_Data)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper*), "get_Data", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::get_PrimaryKey
// Il2CppName: get_PrimaryKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::*)()>(&UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::get_PrimaryKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper*), "get_PrimaryKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::get_ResourceType
// Il2CppName: get_ResourceType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::*)()>(&UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::get_ResourceType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper*), "get_ResourceType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::Hash
// Il2CppName: Hash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::*)(::System::Type*)>(&UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper::Hash)> {
  static const MethodInfo* get() {
    static auto* resultType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceLocations::LocationWrapper*), "Hash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resultType});
  }
};
