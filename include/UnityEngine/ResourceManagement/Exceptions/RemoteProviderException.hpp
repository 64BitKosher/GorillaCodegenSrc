// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ResourceManagement.Exceptions.ProviderException
#include "UnityEngine/ResourceManagement/Exceptions/ProviderException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::ResourceManagement::Util
namespace UnityEngine::ResourceManagement::Util {
  // Forward declaring type: UnityWebRequestResult
  class UnityWebRequestResult;
}
// Forward declaring namespace: UnityEngine::ResourceManagement::ResourceLocations
namespace UnityEngine::ResourceManagement::ResourceLocations {
  // Forward declaring type: IResourceLocation
  class IResourceLocation;
}
// Completed forward declares
// Type namespace: UnityEngine.ResourceManagement.Exceptions
namespace UnityEngine::ResourceManagement::Exceptions {
  // Forward declaring type: RemoteProviderException
  class RemoteProviderException;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ResourceManagement::Exceptions::RemoteProviderException);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ResourceManagement::Exceptions::RemoteProviderException*, "UnityEngine.ResourceManagement.Exceptions", "RemoteProviderException");
// Type namespace: UnityEngine.ResourceManagement.Exceptions
namespace UnityEngine::ResourceManagement::Exceptions {
  // Size: 0xA0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ResourceManagement.Exceptions.RemoteProviderException
  // [TokenAttribute] Offset: FFFFFFFF
  class RemoteProviderException : public ::UnityEngine::ResourceManagement::Exceptions::ProviderException {
    public:
    public:
    // private readonly UnityEngine.ResourceManagement.Util.UnityWebRequestResult <WebRequestResult>k__BackingField
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::ResourceManagement::Util::UnityWebRequestResult* WebRequestResult;
    // Field size check
    static_assert(sizeof(::UnityEngine::ResourceManagement::Util::UnityWebRequestResult*) == 0x8);
    public:
    // Deleting conversion operator: operator ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*
    constexpr operator ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*() const noexcept = delete;
    // Get instance field reference: private readonly UnityEngine.ResourceManagement.Util.UnityWebRequestResult <WebRequestResult>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::Util::UnityWebRequestResult*& dyn_$WebRequestResult$k__BackingField();
    // public System.Void .ctor(System.String message, UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation location, UnityEngine.ResourceManagement.Util.UnityWebRequestResult uwrResult, System.Exception innerException)
    // Offset: 0x532B1D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RemoteProviderException* New_ctor(::StringW message, ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::UnityEngine::ResourceManagement::Util::UnityWebRequestResult* uwrResult, ::System::Exception* innerException) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::Exceptions::RemoteProviderException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RemoteProviderException*, creationType>(message, location, uwrResult, innerException)));
    }
    // public UnityEngine.ResourceManagement.Util.UnityWebRequestResult get_WebRequestResult()
    // Offset: 0x532B224
    ::UnityEngine::ResourceManagement::Util::UnityWebRequestResult* get_WebRequestResult();
    // public override System.String get_Message()
    // Offset: 0x532B218
    // Implemented from: System.Exception
    // Base method: System.String Exception::get_Message()
    ::StringW get_Message();
    // public override System.String ToString()
    // Offset: 0x532B22C
    // Implemented from: UnityEngine.ResourceManagement.Exceptions.OperationException
    // Base method: System.String OperationException::ToString()
    ::StringW ToString();
  }; // UnityEngine.ResourceManagement.Exceptions.RemoteProviderException
  #pragma pack(pop)
  static check_size<sizeof(RemoteProviderException), 152 + sizeof(::UnityEngine::ResourceManagement::Util::UnityWebRequestResult*)> __UnityEngine_ResourceManagement_Exceptions_RemoteProviderExceptionSizeCheck;
  static_assert(sizeof(RemoteProviderException) == 0xA0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Exceptions::RemoteProviderException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Exceptions::RemoteProviderException::get_WebRequestResult
// Il2CppName: get_WebRequestResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ResourceManagement::Util::UnityWebRequestResult* (UnityEngine::ResourceManagement::Exceptions::RemoteProviderException::*)()>(&UnityEngine::ResourceManagement::Exceptions::RemoteProviderException::get_WebRequestResult)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Exceptions::RemoteProviderException*), "get_WebRequestResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Exceptions::RemoteProviderException::get_Message
// Il2CppName: get_Message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::ResourceManagement::Exceptions::RemoteProviderException::*)()>(&UnityEngine::ResourceManagement::Exceptions::RemoteProviderException::get_Message)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Exceptions::RemoteProviderException*), "get_Message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Exceptions::RemoteProviderException::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::ResourceManagement::Exceptions::RemoteProviderException::*)()>(&UnityEngine::ResourceManagement::Exceptions::RemoteProviderException::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Exceptions::RemoteProviderException*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
