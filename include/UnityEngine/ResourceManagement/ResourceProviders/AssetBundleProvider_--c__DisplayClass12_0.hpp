// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/AssetBundleProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::ResourceManagement::ResourceLocations
namespace UnityEngine::ResourceManagement::ResourceLocations {
  // Forward declaring type: IResourceLocation
  class IResourceLocation;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ResourceManagement::ResourceProviders::AssetBundleProvider::$$c__DisplayClass12_0);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ResourceManagement::ResourceProviders::AssetBundleProvider::$$c__DisplayClass12_0*, "UnityEngine.ResourceManagement.ResourceProviders", "AssetBundleProvider/<>c__DisplayClass12_0");
// Type namespace: UnityEngine.ResourceManagement.ResourceProviders
namespace UnityEngine::ResourceManagement::ResourceProviders {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleProvider/<>c__DisplayClass12_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class AssetBundleProvider::$$c__DisplayClass12_0 : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation location
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location;
    // Field size check
    static_assert(sizeof(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*) == 0x8);
    public:
    // Creating conversion operator: operator ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*
    constexpr operator ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*() const noexcept {
      return location;
    }
    // Get instance field reference: public UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation location
    [[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*& dyn_location();
    // public System.Void .ctor()
    // Offset: 0x533569C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AssetBundleProvider::$$c__DisplayClass12_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::ResourceProviders::AssetBundleProvider::$$c__DisplayClass12_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AssetBundleProvider::$$c__DisplayClass12_0*, creationType>()));
    }
    // System.Void <Release>b__0(UnityEngine.AsyncOperation op)
    // Offset: 0x53357D4
    void $Release$b__0(::UnityEngine::AsyncOperation* op);
  }; // UnityEngine.ResourceManagement.ResourceProviders.AssetBundleProvider/<>c__DisplayClass12_0
  #pragma pack(pop)
  static check_size<sizeof(AssetBundleProvider::$$c__DisplayClass12_0), 16 + sizeof(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*)> __UnityEngine_ResourceManagement_ResourceProviders_AssetBundleProvider_$$c__DisplayClass12_0SizeCheck;
  static_assert(sizeof(AssetBundleProvider::$$c__DisplayClass12_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::AssetBundleProvider::$$c__DisplayClass12_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::AssetBundleProvider::$$c__DisplayClass12_0::$Release$b__0
// Il2CppName: <Release>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::ResourceProviders::AssetBundleProvider::$$c__DisplayClass12_0::*)(::UnityEngine::AsyncOperation*)>(&UnityEngine::ResourceManagement::ResourceProviders::AssetBundleProvider::$$c__DisplayClass12_0::$Release$b__0)> {
  static const MethodInfo* get() {
    static auto* op = &::il2cpp_utils::GetClassFromName("UnityEngine", "AsyncOperation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::AssetBundleProvider::$$c__DisplayClass12_0*), "<Release>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{op});
  }
};
