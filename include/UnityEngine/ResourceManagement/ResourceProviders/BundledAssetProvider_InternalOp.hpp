// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.BundledAssetProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/BundledAssetProvider.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle
#include "UnityEngine/ResourceManagement/ResourceProviders/ProvideHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AssetBundle
  class AssetBundle;
  // Forward declaring type: AssetBundleRequest
  class AssetBundleRequest;
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
  // Forward declaring type: Object
  class Object;
}
// Forward declaring namespace: UnityEngine::ResourceManagement::ResourceProviders
namespace UnityEngine::ResourceManagement::ResourceProviders {
  // Forward declaring type: IAssetBundleResource
  class IAssetBundleResource;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp*, "UnityEngine.ResourceManagement.ResourceProviders", "BundledAssetProvider/InternalOp");
// Type namespace: UnityEngine.ResourceManagement.ResourceProviders
namespace UnityEngine::ResourceManagement::ResourceProviders {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ResourceManagement.ResourceProviders.BundledAssetProvider/InternalOp
  // [TokenAttribute] Offset: FFFFFFFF
  class BundledAssetProvider::InternalOp : public ::Il2CppObject {
    public:
    public:
    // private UnityEngine.AssetBundle m_AssetBundle
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::AssetBundle* m_AssetBundle;
    // Field size check
    static_assert(sizeof(::UnityEngine::AssetBundle*) == 0x8);
    // private UnityEngine.AssetBundleRequest m_PreloadRequest
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::AssetBundleRequest* m_PreloadRequest;
    // Field size check
    static_assert(sizeof(::UnityEngine::AssetBundleRequest*) == 0x8);
    // private UnityEngine.AssetBundleRequest m_RequestOperation
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::AssetBundleRequest* m_RequestOperation;
    // Field size check
    static_assert(sizeof(::UnityEngine::AssetBundleRequest*) == 0x8);
    // private System.Object m_Result
    // Size: 0x8
    // Offset: 0x28
    ::Il2CppObject* m_Result;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle m_ProvideHandle
    // Size: 0x18
    // Offset: 0x30
    ::UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle m_ProvideHandle;
    // Field size check
    static_assert(sizeof(::UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle) == 0x18);
    // private System.String subObjectName
    // Size: 0x8
    // Offset: 0x48
    ::StringW subObjectName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.AssetBundle m_AssetBundle
    [[deprecated("Use field access instead!")]] ::UnityEngine::AssetBundle*& dyn_m_AssetBundle();
    // Get instance field reference: private UnityEngine.AssetBundleRequest m_PreloadRequest
    [[deprecated("Use field access instead!")]] ::UnityEngine::AssetBundleRequest*& dyn_m_PreloadRequest();
    // Get instance field reference: private UnityEngine.AssetBundleRequest m_RequestOperation
    [[deprecated("Use field access instead!")]] ::UnityEngine::AssetBundleRequest*& dyn_m_RequestOperation();
    // Get instance field reference: private System.Object m_Result
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_m_Result();
    // Get instance field reference: private UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle m_ProvideHandle
    [[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle& dyn_m_ProvideHandle();
    // Get instance field reference: private System.String subObjectName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_subObjectName();
    // static T LoadBundleFromDependecies(System.Collections.Generic.IList`1<System.Object> results)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T LoadBundleFromDependecies(::System::Collections::Generic::IList_1<::Il2CppObject*>* results) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<T>, ::UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::LoadBundleFromDependecies");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.ResourceProviders", "BundledAssetProvider/InternalOp", "LoadBundleFromDependecies", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(results)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, results);
    }
    // public System.Void Start(UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle provideHandle)
    // Offset: 0x5336A10
    void Start(::UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle provideHandle);
    // private System.Void BeginAssetLoad()
    // Offset: 0x5336ED0
    void BeginAssetLoad();
    // private System.Boolean WaitForCompletionHandler()
    // Offset: 0x5337A48
    bool WaitForCompletionHandler();
    // private System.Void ActionComplete(UnityEngine.AsyncOperation obj)
    // Offset: 0x53372B4
    void ActionComplete(::UnityEngine::AsyncOperation* obj);
    // private System.Void GetArrayResult(UnityEngine.Object[] allAssets)
    // Offset: 0x5337B48
    void GetArrayResult(::ArrayW<::UnityEngine::Object*> allAssets);
    // private System.Void GetListResult(UnityEngine.Object[] allAssets)
    // Offset: 0x5337B80
    void GetListResult(::ArrayW<::UnityEngine::Object*> allAssets);
    // private System.Void GetAssetResult(UnityEngine.Object asset)
    // Offset: 0x5337BB8
    void GetAssetResult(::UnityEngine::Object* asset);
    // private System.Void GetAssetSubObjectResult(UnityEngine.Object[] allAssets)
    // Offset: 0x5337C7C
    void GetAssetSubObjectResult(::ArrayW<::UnityEngine::Object*> allAssets);
    // private System.Void CompleteOperation()
    // Offset: 0x5337D60
    void CompleteOperation();
    // public System.Single ProgressCallback()
    // Offset: 0x5337EC4
    float ProgressCallback();
    // public System.Void .ctor()
    // Offset: 0x5336A08
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BundledAssetProvider::InternalOp* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BundledAssetProvider::InternalOp*, creationType>()));
    }
    // private System.Void <Start>b__7_0(UnityEngine.AsyncOperation operation)
    // Offset: 0x5337EDC
    void $Start$b__7_0(::UnityEngine::AsyncOperation* operation);
  }; // UnityEngine.ResourceManagement.ResourceProviders.BundledAssetProvider/InternalOp
  #pragma pack(pop)
  static check_size<sizeof(BundledAssetProvider::InternalOp), 72 + sizeof(::StringW)> __UnityEngine_ResourceManagement_ResourceProviders_BundledAssetProvider_InternalOpSizeCheck;
  static_assert(sizeof(BundledAssetProvider::InternalOp) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::LoadBundleFromDependecies
// Il2CppName: LoadBundleFromDependecies
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::*)(::UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle)>(&UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::Start)> {
  static const MethodInfo* get() {
    static auto* provideHandle = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.ResourceProviders", "ProvideHandle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provideHandle});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::BeginAssetLoad
// Il2CppName: BeginAssetLoad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::*)()>(&UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::BeginAssetLoad)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp*), "BeginAssetLoad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::WaitForCompletionHandler
// Il2CppName: WaitForCompletionHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::*)()>(&UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::WaitForCompletionHandler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp*), "WaitForCompletionHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::ActionComplete
// Il2CppName: ActionComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::*)(::UnityEngine::AsyncOperation*)>(&UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::ActionComplete)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "AsyncOperation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp*), "ActionComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::GetArrayResult
// Il2CppName: GetArrayResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::*)(::ArrayW<::UnityEngine::Object*>)>(&UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::GetArrayResult)> {
  static const MethodInfo* get() {
    static auto* allAssets = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp*), "GetArrayResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{allAssets});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::GetListResult
// Il2CppName: GetListResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::*)(::ArrayW<::UnityEngine::Object*>)>(&UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::GetListResult)> {
  static const MethodInfo* get() {
    static auto* allAssets = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp*), "GetListResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{allAssets});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::GetAssetResult
// Il2CppName: GetAssetResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::*)(::UnityEngine::Object*)>(&UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::GetAssetResult)> {
  static const MethodInfo* get() {
    static auto* asset = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp*), "GetAssetResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asset});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::GetAssetSubObjectResult
// Il2CppName: GetAssetSubObjectResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::*)(::ArrayW<::UnityEngine::Object*>)>(&UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::GetAssetSubObjectResult)> {
  static const MethodInfo* get() {
    static auto* allAssets = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp*), "GetAssetSubObjectResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{allAssets});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::CompleteOperation
// Il2CppName: CompleteOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::*)()>(&UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::CompleteOperation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp*), "CompleteOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::ProgressCallback
// Il2CppName: ProgressCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::*)()>(&UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::ProgressCallback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp*), "ProgressCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::$Start$b__7_0
// Il2CppName: <Start>b__7_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::*)(::UnityEngine::AsyncOperation*)>(&UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::$Start$b__7_0)> {
  static const MethodInfo* get() {
    static auto* operation = &::il2cpp_utils::GetClassFromName("UnityEngine", "AsyncOperation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp*), "<Start>b__7_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{operation});
  }
};
