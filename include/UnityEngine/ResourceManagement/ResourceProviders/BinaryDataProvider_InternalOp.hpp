// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.BinaryDataProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/BinaryDataProvider.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle
#include "UnityEngine/ResourceManagement/ResourceProviders/ProvideHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Networking
namespace UnityEngine::Networking {
  // Forward declaring type: UnityWebRequestAsyncOperation
  class UnityWebRequestAsyncOperation;
}
// Forward declaring namespace: UnityEngine::ResourceManagement
namespace UnityEngine::ResourceManagement {
  // Forward declaring type: WebRequestQueueOperation
  class WebRequestQueueOperation;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp*, "UnityEngine.ResourceManagement.ResourceProviders", "BinaryDataProvider/InternalOp");
// Type namespace: UnityEngine.ResourceManagement.ResourceProviders
namespace UnityEngine::ResourceManagement::ResourceProviders {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ResourceManagement.ResourceProviders.BinaryDataProvider/InternalOp
  // [TokenAttribute] Offset: FFFFFFFF
  class BinaryDataProvider::InternalOp : public ::Il2CppObject {
    public:
    public:
    // private UnityEngine.ResourceManagement.ResourceProviders.BinaryDataProvider m_Provider
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider* m_Provider;
    // Field size check
    static_assert(sizeof(::UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider*) == 0x8);
    // private UnityEngine.Networking.UnityWebRequestAsyncOperation m_RequestOperation
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Networking::UnityWebRequestAsyncOperation* m_RequestOperation;
    // Field size check
    static_assert(sizeof(::UnityEngine::Networking::UnityWebRequestAsyncOperation*) == 0x8);
    // private UnityEngine.ResourceManagement.WebRequestQueueOperation m_RequestQueueOperation
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::ResourceManagement::WebRequestQueueOperation* m_RequestQueueOperation;
    // Field size check
    static_assert(sizeof(::UnityEngine::ResourceManagement::WebRequestQueueOperation*) == 0x8);
    // private UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle m_PI
    // Size: 0x18
    // Offset: 0x28
    ::UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle m_PI;
    // Field size check
    static_assert(sizeof(::UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle) == 0x18);
    // private System.Boolean m_IgnoreFailures
    // Size: 0x1
    // Offset: 0x40
    bool m_IgnoreFailures;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Complete
    // Size: 0x1
    // Offset: 0x41
    bool m_Complete;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Complete and: m_Timeout
    char __padding5[0x2] = {};
    // private System.Int32 m_Timeout
    // Size: 0x4
    // Offset: 0x44
    int m_Timeout;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private UnityEngine.ResourceManagement.ResourceProviders.BinaryDataProvider m_Provider
    [[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider*& dyn_m_Provider();
    // Get instance field reference: private UnityEngine.Networking.UnityWebRequestAsyncOperation m_RequestOperation
    [[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequestAsyncOperation*& dyn_m_RequestOperation();
    // Get instance field reference: private UnityEngine.ResourceManagement.WebRequestQueueOperation m_RequestQueueOperation
    [[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::WebRequestQueueOperation*& dyn_m_RequestQueueOperation();
    // Get instance field reference: private UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle m_PI
    [[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle& dyn_m_PI();
    // Get instance field reference: private System.Boolean m_IgnoreFailures
    [[deprecated("Use field access instead!")]] bool& dyn_m_IgnoreFailures();
    // Get instance field reference: private System.Boolean m_Complete
    [[deprecated("Use field access instead!")]] bool& dyn_m_Complete();
    // Get instance field reference: private System.Int32 m_Timeout
    [[deprecated("Use field access instead!")]] int& dyn_m_Timeout();
    // private System.Single GetPercentComplete()
    // Offset: 0x5336190
    float GetPercentComplete();
    // public System.Void Start(UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle provideHandle, UnityEngine.ResourceManagement.ResourceProviders.BinaryDataProvider rawProvider)
    // Offset: 0x5335D1C
    void Start(::UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle provideHandle, ::UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider* rawProvider);
    // private System.Boolean WaitForCompletionHandler()
    // Offset: 0x533634C
    bool WaitForCompletionHandler();
    // private System.Void RequestOperation_completed(UnityEngine.AsyncOperation op)
    // Offset: 0x53363C0
    void RequestOperation_completed(::UnityEngine::AsyncOperation* op);
    // protected System.Void CompleteOperation(System.Byte[] data, System.Exception exception)
    // Offset: 0x5336584
    void CompleteOperation(::ArrayW<uint8_t> data, ::System::Exception* exception);
    // private System.Object ConvertBytes(System.Byte[] data)
    // Offset: 0x53361A8
    ::Il2CppObject* ConvertBytes(::ArrayW<uint8_t> data);
    // protected System.Void SendWebRequest(System.String path)
    // Offset: 0x5336628
    void SendWebRequest(::StringW path);
    // public System.Void .ctor()
    // Offset: 0x5335D14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BinaryDataProvider::InternalOp* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BinaryDataProvider::InternalOp*, creationType>()));
    }
    // private System.Void <SendWebRequest>b__13_0(UnityEngine.Networking.UnityWebRequestAsyncOperation asyncOperation)
    // Offset: 0x53368D0
    void $SendWebRequest$b__13_0(::UnityEngine::Networking::UnityWebRequestAsyncOperation* asyncOperation);
  }; // UnityEngine.ResourceManagement.ResourceProviders.BinaryDataProvider/InternalOp
  #pragma pack(pop)
  static check_size<sizeof(BinaryDataProvider::InternalOp), 68 + sizeof(int)> __UnityEngine_ResourceManagement_ResourceProviders_BinaryDataProvider_InternalOpSizeCheck;
  static_assert(sizeof(BinaryDataProvider::InternalOp) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::GetPercentComplete
// Il2CppName: GetPercentComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::*)()>(&UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::GetPercentComplete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp*), "GetPercentComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::*)(::UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle, ::UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider*)>(&UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::Start)> {
  static const MethodInfo* get() {
    static auto* provideHandle = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.ResourceProviders", "ProvideHandle")->byval_arg;
    static auto* rawProvider = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.ResourceProviders", "BinaryDataProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provideHandle, rawProvider});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::WaitForCompletionHandler
// Il2CppName: WaitForCompletionHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::*)()>(&UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::WaitForCompletionHandler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp*), "WaitForCompletionHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::RequestOperation_completed
// Il2CppName: RequestOperation_completed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::*)(::UnityEngine::AsyncOperation*)>(&UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::RequestOperation_completed)> {
  static const MethodInfo* get() {
    static auto* op = &::il2cpp_utils::GetClassFromName("UnityEngine", "AsyncOperation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp*), "RequestOperation_completed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{op});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::CompleteOperation
// Il2CppName: CompleteOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::*)(::ArrayW<uint8_t>, ::System::Exception*)>(&UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::CompleteOperation)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp*), "CompleteOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, exception});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::ConvertBytes
// Il2CppName: ConvertBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::*)(::ArrayW<uint8_t>)>(&UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::ConvertBytes)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp*), "ConvertBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::SendWebRequest
// Il2CppName: SendWebRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::*)(::StringW)>(&UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::SendWebRequest)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp*), "SendWebRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::$SendWebRequest$b__13_0
// Il2CppName: <SendWebRequest>b__13_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::*)(::UnityEngine::Networking::UnityWebRequestAsyncOperation*)>(&UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp::$SendWebRequest$b__13_0)> {
  static const MethodInfo* get() {
    static auto* asyncOperation = &::il2cpp_utils::GetClassFromName("UnityEngine.Networking", "UnityWebRequestAsyncOperation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::ResourceProviders::BinaryDataProvider::InternalOp*), "<SendWebRequest>b__13_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asyncOperation});
  }
};
