// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ResourceManagement.Util.IOperationCacheKey
#include "UnityEngine/ResourceManagement/Util/IOperationCacheKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine.ResourceManagement.Util
namespace UnityEngine::ResourceManagement::Util {
  // Forward declaring type: IdCacheKey
  class IdCacheKey;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ResourceManagement::Util::IdCacheKey);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ResourceManagement::Util::IdCacheKey*, "UnityEngine.ResourceManagement.Util", "IdCacheKey");
// Type namespace: UnityEngine.ResourceManagement.Util
namespace UnityEngine::ResourceManagement::Util {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ResourceManagement.Util.IdCacheKey
  // [TokenAttribute] Offset: FFFFFFFF
  class IdCacheKey : public ::Il2CppObject/*, public ::UnityEngine::ResourceManagement::Util::IOperationCacheKey*/ {
    public:
    public:
    // public System.String ID
    // Size: 0x8
    // Offset: 0x10
    ::StringW _ID;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::ResourceManagement::Util::IOperationCacheKey
    operator ::UnityEngine::ResourceManagement::Util::IOperationCacheKey() noexcept {
      return *reinterpret_cast<::UnityEngine::ResourceManagement::Util::IOperationCacheKey*>(this);
    }
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return _ID;
    }
    // Get instance field reference: public System.String ID
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ID();
    // public System.Void .ctor(System.String id)
    // Offset: 0x532FBC0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static IdCacheKey* New_ctor(::StringW id) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::Util::IdCacheKey::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<IdCacheKey*, creationType>(id)));
    }
    // private System.Boolean Equals(UnityEngine.ResourceManagement.Util.IdCacheKey other)
    // Offset: 0x532FBF0
    bool Equals(::UnityEngine::ResourceManagement::Util::IdCacheKey* other);
    // public System.Boolean Equals(UnityEngine.ResourceManagement.Util.IOperationCacheKey other)
    // Offset: 0x532FCD4
    bool Equals(::UnityEngine::ResourceManagement::Util::IOperationCacheKey* other);
    // public override System.Int32 GetHashCode()
    // Offset: 0x532FC20
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x532FC40
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
  }; // UnityEngine.ResourceManagement.Util.IdCacheKey
  #pragma pack(pop)
  static check_size<sizeof(IdCacheKey), 16 + sizeof(::StringW)> __UnityEngine_ResourceManagement_Util_IdCacheKeySizeCheck;
  static_assert(sizeof(IdCacheKey) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::IdCacheKey::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::IdCacheKey::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::ResourceManagement::Util::IdCacheKey::*)(::UnityEngine::ResourceManagement::Util::IdCacheKey*)>(&UnityEngine::ResourceManagement::Util::IdCacheKey::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.Util", "IdCacheKey")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::IdCacheKey*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::IdCacheKey::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::ResourceManagement::Util::IdCacheKey::*)(::UnityEngine::ResourceManagement::Util::IOperationCacheKey*)>(&UnityEngine::ResourceManagement::Util::IdCacheKey::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.Util", "IOperationCacheKey")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::IdCacheKey*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::IdCacheKey::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ResourceManagement::Util::IdCacheKey::*)()>(&UnityEngine::ResourceManagement::Util::IdCacheKey::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::IdCacheKey*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::IdCacheKey::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::ResourceManagement::Util::IdCacheKey::*)(::Il2CppObject*)>(&UnityEngine::ResourceManagement::Util::IdCacheKey::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::IdCacheKey*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
