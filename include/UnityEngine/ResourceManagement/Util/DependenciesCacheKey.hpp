// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ResourceManagement.Util.IOperationCacheKey
#include "UnityEngine/ResourceManagement/Util/IOperationCacheKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: UnityEngine::ResourceManagement::ResourceLocations
namespace UnityEngine::ResourceManagement::ResourceLocations {
  // Forward declaring type: IResourceLocation
  class IResourceLocation;
}
// Completed forward declares
// Type namespace: UnityEngine.ResourceManagement.Util
namespace UnityEngine::ResourceManagement::Util {
  // Forward declaring type: DependenciesCacheKey
  class DependenciesCacheKey;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ResourceManagement::Util::DependenciesCacheKey);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ResourceManagement::Util::DependenciesCacheKey*, "UnityEngine.ResourceManagement.Util", "DependenciesCacheKey");
// Type namespace: UnityEngine.ResourceManagement.Util
namespace UnityEngine::ResourceManagement::Util {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ResourceManagement.Util.DependenciesCacheKey
  // [TokenAttribute] Offset: FFFFFFFF
  class DependenciesCacheKey : public ::Il2CppObject/*, public ::UnityEngine::ResourceManagement::Util::IOperationCacheKey*/ {
    public:
    public:
    // private readonly System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> m_Dependencies
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* m_Dependencies;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*) == 0x8);
    // private readonly System.Int32 m_DependenciesHash
    // Size: 0x4
    // Offset: 0x18
    int m_DependenciesHash;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::ResourceManagement::Util::IOperationCacheKey
    operator ::UnityEngine::ResourceManagement::Util::IOperationCacheKey() noexcept {
      return *reinterpret_cast<::UnityEngine::ResourceManagement::Util::IOperationCacheKey*>(this);
    }
    // Get instance field reference: private readonly System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> m_Dependencies
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*& dyn_m_Dependencies();
    // Get instance field reference: private readonly System.Int32 m_DependenciesHash
    [[deprecated("Use field access instead!")]] int& dyn_m_DependenciesHash();
    // public System.Void .ctor(System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> dependencies, System.Int32 dependenciesHash)
    // Offset: 0x53281F4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DependenciesCacheKey* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* dependencies, int dependenciesHash) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::Util::DependenciesCacheKey::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DependenciesCacheKey*, creationType>(dependencies, dependenciesHash)));
    }
    // public System.Boolean Equals(UnityEngine.ResourceManagement.Util.IOperationCacheKey other)
    // Offset: 0x53302EC
    bool Equals(::UnityEngine::ResourceManagement::Util::IOperationCacheKey* other);
    // private System.Boolean Equals(UnityEngine.ResourceManagement.Util.DependenciesCacheKey other)
    // Offset: 0x53302C4
    bool Equals(::UnityEngine::ResourceManagement::Util::DependenciesCacheKey* other);
    // public override System.Int32 GetHashCode()
    // Offset: 0x533022C
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x5330234
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
  }; // UnityEngine.ResourceManagement.Util.DependenciesCacheKey
  #pragma pack(pop)
  static check_size<sizeof(DependenciesCacheKey), 24 + sizeof(int)> __UnityEngine_ResourceManagement_Util_DependenciesCacheKeySizeCheck;
  static_assert(sizeof(DependenciesCacheKey) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::DependenciesCacheKey::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::DependenciesCacheKey::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::ResourceManagement::Util::DependenciesCacheKey::*)(::UnityEngine::ResourceManagement::Util::IOperationCacheKey*)>(&UnityEngine::ResourceManagement::Util::DependenciesCacheKey::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.Util", "IOperationCacheKey")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::DependenciesCacheKey*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::DependenciesCacheKey::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::ResourceManagement::Util::DependenciesCacheKey::*)(::UnityEngine::ResourceManagement::Util::DependenciesCacheKey*)>(&UnityEngine::ResourceManagement::Util::DependenciesCacheKey::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.Util", "DependenciesCacheKey")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::DependenciesCacheKey*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::DependenciesCacheKey::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ResourceManagement::Util::DependenciesCacheKey::*)()>(&UnityEngine::ResourceManagement::Util::DependenciesCacheKey::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::DependenciesCacheKey*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::DependenciesCacheKey::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::ResourceManagement::Util::DependenciesCacheKey::*)(::Il2CppObject*)>(&UnityEngine::ResourceManagement::Util::DependenciesCacheKey::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::DependenciesCacheKey*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
