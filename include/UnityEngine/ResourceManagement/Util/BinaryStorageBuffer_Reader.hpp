// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ResourceManagement.Util.BinaryStorageBuffer
#include "UnityEngine/ResourceManagement/Util/BinaryStorageBuffer.hpp"
// Including type: UnityEngine.ResourceManagement.Util.LRUCache`2
#include "UnityEngine/ResourceManagement/Util/LRUCache_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Skipping declaration: ValueType because it is already included!
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
  // Forward declaring type: Encoding
  class Encoding;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader*, "UnityEngine.ResourceManagement.Util", "BinaryStorageBuffer/Reader");
// Type namespace: UnityEngine.ResourceManagement.Util
namespace UnityEngine::ResourceManagement::Util {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/Reader
  // [TokenAttribute] Offset: FFFFFFFF
  class BinaryStorageBuffer::Reader : public ::Il2CppObject {
    public:
    public:
    // private System.Byte[] m_Buffer
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<uint8_t> m_Buffer;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/ISerializationAdapter> m_Adapters
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*>* m_Adapters;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*>*) == 0x8);
    // private UnityEngine.ResourceManagement.Util.LRUCache`2<System.UInt32,System.Object> m_Cache
    // Size: 0xFFFFFFFF
    // Offset: 0x20
    ::UnityEngine::ResourceManagement::Util::LRUCache_2<uint, ::Il2CppObject*> m_Cache;
    // private System.Text.StringBuilder stringBuilder
    // Size: 0x8
    // Offset: 0x38
    ::System::Text::StringBuilder* stringBuilder;
    // Field size check
    static_assert(sizeof(::System::Text::StringBuilder*) == 0x8);
    public:
    // Get instance field reference: private System.Byte[] m_Buffer
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_m_Buffer();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/ISerializationAdapter> m_Adapters
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*>*& dyn_m_Adapters();
    // Get instance field reference: private UnityEngine.ResourceManagement.Util.LRUCache`2<System.UInt32,System.Object> m_Cache
    [[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::Util::LRUCache_2<uint, ::Il2CppObject*>& dyn_m_Cache();
    // Get instance field reference: private System.Text.StringBuilder stringBuilder
    [[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& dyn_stringBuilder();
    // private System.Void Init(System.Byte[] data, System.Int32 maxCachedObjects, params UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/ISerializationAdapter[] adapters)
    // Offset: 0x532C8E0
    void Init(::ArrayW<uint8_t> data, int maxCachedObjects, ::ArrayW<::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*> adapters);
    // public System.Void AddSerializationAdapter(UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/ISerializationAdapter a)
    // Offset: 0x532CADC
    void AddSerializationAdapter(::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter* a);
    // public System.Void .ctor(System.Byte[] data, System.Int32 maxCachedObjects, params UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/ISerializationAdapter[] adapters)
    // Offset: 0x532CAE8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BinaryStorageBuffer::Reader* New_ctor(::ArrayW<uint8_t> data, int maxCachedObjects, ::ArrayW<::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*> adapters) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BinaryStorageBuffer::Reader*, creationType>(data, maxCachedObjects, adapters)));
    }
    // System.Byte[] GetBuffer()
    // Offset: 0x532CB2C
    ::ArrayW<uint8_t> GetBuffer();
    // public System.Void .ctor(System.IO.Stream inputStream, System.UInt32 bufferSize, System.Int32 maxCachedObjects, params UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/ISerializationAdapter[] adapters)
    // Offset: 0x532CB34
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BinaryStorageBuffer::Reader* New_ctor(::System::IO::Stream* inputStream, uint bufferSize, int maxCachedObjects, ::ArrayW<::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*> adapters) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BinaryStorageBuffer::Reader*, creationType>(inputStream, bufferSize, maxCachedObjects, adapters)));
    }
    // private System.Boolean TryGetCachedValue(System.UInt32 offset, out T val)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    bool TryGetCachedValue(uint offset, ByRef<T> val) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::TryGetCachedValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetCachedValue", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractIndependentType<T&>()})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___generic__method, offset, byref(val));
    }
    // public System.Object[] ReadObjectArray(System.UInt32 id, System.Boolean cacheValues)
    // Offset: 0x532CC18
    ::ArrayW<::Il2CppObject*> ReadObjectArray(uint id, bool cacheValues);
    // public System.Object[] ReadObjectArray(System.Type t, System.UInt32 id, System.Boolean cacheValues)
    // Offset: 0x532CE20
    ::ArrayW<::Il2CppObject*> ReadObjectArray(::System::Type* t, uint id, bool cacheValues);
    // public T[] ReadObjectArray(System.UInt32 id, System.Boolean cacheValues)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::ArrayW<T> ReadObjectArray(uint id, bool cacheValues) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadObjectArray");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadObjectArray", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(cacheValues)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<T>, false>(this, ___generic__method, id, cacheValues);
    }
    // public System.Object ReadObject(System.UInt32 id, System.Boolean cacheValue)
    // Offset: 0x532CD68
    ::Il2CppObject* ReadObject(uint id, bool cacheValue);
    // public T ReadObject(System.UInt32 offset, System.Boolean cacheValue)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T ReadObject(uint offset, bool cacheValue) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadObject");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadObject", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(cacheValue)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method, offset, cacheValue);
    }
    // public System.Object ReadObject(System.Type t, System.UInt32 id, System.Boolean cacheValue)
    // Offset: 0x532CF80
    ::Il2CppObject* ReadObject(::System::Type* t, uint id, bool cacheValue);
    // public T[] ReadValueArray(System.UInt32 id, System.Boolean cacheValue)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::ArrayW<T> ReadValueArray(uint id, bool cacheValue) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadValueArray");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadValueArray", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(cacheValue)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<T>, false>(this, ___generic__method, id, cacheValue);
    }
    // public T ReadValue(System.UInt32 id)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T ReadValue(uint id) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadValue", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method, id);
    }
    // public System.String ReadString(System.UInt32 id, System.Char sep, System.Boolean cacheValue)
    // Offset: 0x532BF84
    ::StringW ReadString(uint id, ::Il2CppChar sep, bool cacheValue);
    // private System.String ReadStringInternal(System.UInt32 offset, System.Text.Encoding enc, System.Boolean cacheValue)
    // Offset: 0x532D378
    ::StringW ReadStringInternal(uint offset, ::System::Text::Encoding* enc, bool cacheValue);
    // private System.String ReadAutoEncodedString(System.UInt32 id, System.Boolean cacheValue)
    // Offset: 0x532D17C
    ::StringW ReadAutoEncodedString(uint id, bool cacheValue);
    // private System.String ReadDynamicString(System.UInt32 id, System.Char sep, System.Boolean cacheValue)
    // Offset: 0x532D1D0
    ::StringW ReadDynamicString(uint id, ::Il2CppChar sep, bool cacheValue);
  }; // UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/Reader
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::*)(::ArrayW<uint8_t>, int, ::ArrayW<::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*>)>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::Init)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* maxCachedObjects = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* adapters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.Util", "BinaryStorageBuffer/ISerializationAdapter"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, maxCachedObjects, adapters});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::AddSerializationAdapter
// Il2CppName: AddSerializationAdapter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::*)(::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*)>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::AddSerializationAdapter)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.Util", "BinaryStorageBuffer/ISerializationAdapter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader*), "AddSerializationAdapter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::GetBuffer
// Il2CppName: GetBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::*)()>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::GetBuffer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader*), "GetBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::TryGetCachedValue
// Il2CppName: TryGetCachedValue
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadObjectArray
// Il2CppName: ReadObjectArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppObject*> (UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::*)(uint, bool)>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadObjectArray)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* cacheValues = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader*), "ReadObjectArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, cacheValues});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadObjectArray
// Il2CppName: ReadObjectArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppObject*> (UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::*)(::System::Type*, uint, bool)>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadObjectArray)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* cacheValues = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader*), "ReadObjectArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t, id, cacheValues});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadObjectArray
// Il2CppName: ReadObjectArray
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadObject
// Il2CppName: ReadObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::*)(uint, bool)>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadObject)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* cacheValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader*), "ReadObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, cacheValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadObject
// Il2CppName: ReadObject
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadObject
// Il2CppName: ReadObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::*)(::System::Type*, uint, bool)>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadObject)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* cacheValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader*), "ReadObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t, id, cacheValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadValueArray
// Il2CppName: ReadValueArray
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadValue
// Il2CppName: ReadValue
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadString
// Il2CppName: ReadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::*)(uint, ::Il2CppChar, bool)>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadString)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* sep = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* cacheValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader*), "ReadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, sep, cacheValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadStringInternal
// Il2CppName: ReadStringInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::*)(uint, ::System::Text::Encoding*, bool)>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadStringInternal)> {
  static const MethodInfo* get() {
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* enc = &::il2cpp_utils::GetClassFromName("System.Text", "Encoding")->byval_arg;
    static auto* cacheValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader*), "ReadStringInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{offset, enc, cacheValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadAutoEncodedString
// Il2CppName: ReadAutoEncodedString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::*)(uint, bool)>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadAutoEncodedString)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* cacheValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader*), "ReadAutoEncodedString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, cacheValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadDynamicString
// Il2CppName: ReadDynamicString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::*)(uint, ::Il2CppChar, bool)>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader::ReadDynamicString)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* sep = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* cacheValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader*), "ReadDynamicString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id, sep, cacheValue});
  }
};
