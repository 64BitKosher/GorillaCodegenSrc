// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ResourceManagement.Util.BinaryStorageBuffer
#include "UnityEngine/ResourceManagement/Util/BinaryStorageBuffer.hpp"
// Including type: UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/ISerializationAdapter`1
#include "UnityEngine/ResourceManagement/Util/BinaryStorageBuffer_ISerializationAdapter_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::ResourceManagement::Util
namespace UnityEngine::ResourceManagement::Util {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer*, "UnityEngine.ResourceManagement.Util", "BinaryStorageBuffer/TypeSerializer");
// Type namespace: UnityEngine.ResourceManagement.Util
namespace UnityEngine::ResourceManagement::Util {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/TypeSerializer
  // [TokenAttribute] Offset: FFFFFFFF
  class BinaryStorageBuffer::TypeSerializer : public ::Il2CppObject/*, public ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter_1<::System::Type*>*/ {
    public:
    // Nested type: ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer::Data
    struct Data;
    // Creating interface conversion operator: operator ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter_1<::System::Type*>
    operator ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter_1<::System::Type*>() noexcept {
      return *reinterpret_cast<::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter_1<::System::Type*>*>(this);
    }
    // public System.Collections.Generic.IEnumerable`1<UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/ISerializationAdapter> get_Dependencies()
    // Offset: 0x532C5EC
    ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*>* get_Dependencies();
    // public System.Object Deserialize(UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/Reader reader, System.Type type, System.UInt32 offset)
    // Offset: 0x532C5F4
    ::Il2CppObject* Deserialize(::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader* reader, ::System::Type* type, uint offset);
    // public System.UInt32 Serialize(UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/Writer writer, System.Object val)
    // Offset: 0x532C7A8
    uint Serialize(::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Writer* writer, ::Il2CppObject* val);
    // public System.Void .ctor()
    // Offset: 0x532C8D8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BinaryStorageBuffer::TypeSerializer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BinaryStorageBuffer::TypeSerializer*, creationType>()));
    }
  }; // UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/TypeSerializer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer::get_Dependencies
// Il2CppName: get_Dependencies
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*>* (UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer::*)()>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer::get_Dependencies)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer*), "get_Dependencies", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer::Deserialize
// Il2CppName: Deserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer::*)(::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader*, ::System::Type*, uint)>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer::Deserialize)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.Util", "BinaryStorageBuffer/Reader")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer*), "Deserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader, type, offset});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer::*)(::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Writer*, ::Il2CppObject*)>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer::Serialize)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.Util", "BinaryStorageBuffer/Writer")->byval_arg;
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer, val});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
