// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.UInt32
#include "System/UInt32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::ResourceManagement::Util
namespace UnityEngine::ResourceManagement::Util {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Hash128
  struct Hash128;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: UnityEngine.ResourceManagement.Util
namespace UnityEngine::ResourceManagement::Util {
  // Forward declaring type: BinaryStorageBuffer
  class BinaryStorageBuffer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer*, "UnityEngine.ResourceManagement.Util", "BinaryStorageBuffer");
// Type namespace: UnityEngine.ResourceManagement.Util
namespace UnityEngine::ResourceManagement::Util {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ResourceManagement.Util.BinaryStorageBuffer
  // [TokenAttribute] Offset: FFFFFFFF
  class BinaryStorageBuffer : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::BuiltinTypesSerializer
    class BuiltinTypesSerializer;
    // Nested type: ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::TypeSerializer
    class TypeSerializer;
    // Nested type: ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::DynamicString
    struct DynamicString;
    // Nested type: ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ObjectTypeData
    struct ObjectTypeData;
    // Nested type: ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter
    class ISerializationAdapter;
    // Nested type: ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter_1<T>
    template<typename T>
    class ISerializationAdapter_1;
    // Nested type: ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Reader
    class Reader;
    // Nested type: ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::Writer
    class Writer;
    // static field const value: static private System.UInt32 kUnicodeStringFlag
    static constexpr const uint kUnicodeStringFlag = 2147483648u;
    // Get static field: static private System.UInt32 kUnicodeStringFlag
    static uint _get_kUnicodeStringFlag();
    // Set static field: static private System.UInt32 kUnicodeStringFlag
    static void _set_kUnicodeStringFlag(uint value);
    // static field const value: static private System.UInt32 kDynamicStringFlag
    static constexpr const uint kDynamicStringFlag = 1073741824u;
    // Get static field: static private System.UInt32 kDynamicStringFlag
    static uint _get_kDynamicStringFlag();
    // Set static field: static private System.UInt32 kDynamicStringFlag
    static void _set_kDynamicStringFlag(uint value);
    // static field const value: static private System.UInt32 kClearFlagsMask
    static constexpr const uint kClearFlagsMask = 1073741823u;
    // Get static field: static private System.UInt32 kClearFlagsMask
    static uint _get_kClearFlagsMask();
    // Set static field: static private System.UInt32 kClearFlagsMask
    static void _set_kClearFlagsMask(uint value);
    // static private System.Void ComputeHash(System.Void* pData, System.UInt64 size, UnityEngine.Hash128* hash)
    // Offset: 0x532B3D0
    static void ComputeHash(void* pData, uint64_t size, ::UnityEngine::Hash128* hash);
    // static private System.Void AddSerializationAdapter(System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/ISerializationAdapter> serializationAdapters, UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/ISerializationAdapter adapter, System.Boolean forceOverride)
    // Offset: 0x532B3E8
    static void AddSerializationAdapter(::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*>* serializationAdapters, ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter* adapter, bool forceOverride);
    // static private System.Boolean GetSerializationAdapter(System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/ISerializationAdapter> serializationAdapters, System.Type t, out UnityEngine.ResourceManagement.Util.BinaryStorageBuffer/ISerializationAdapter adapter)
    // Offset: 0x532B9E4
    static bool GetSerializationAdapter(::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*>* serializationAdapters, ::System::Type* t, ByRef<::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*> adapter);
    // public System.Void .ctor()
    // Offset: 0x532BC2C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BinaryStorageBuffer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BinaryStorageBuffer*, creationType>()));
    }
  }; // UnityEngine.ResourceManagement.Util.BinaryStorageBuffer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ComputeHash
// Il2CppName: ComputeHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(void*, uint64_t, ::UnityEngine::Hash128*)>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ComputeHash)> {
  static const MethodInfo* get() {
    static auto* pData = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* hash = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("UnityEngine", "Hash128"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer*), "ComputeHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pData, size, hash});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::AddSerializationAdapter
// Il2CppName: AddSerializationAdapter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*>*, ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*, bool)>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::AddSerializationAdapter)> {
  static const MethodInfo* get() {
    static auto* serializationAdapters = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Type"), ::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.Util", "BinaryStorageBuffer/ISerializationAdapter")})->byval_arg;
    static auto* adapter = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.Util", "BinaryStorageBuffer/ISerializationAdapter")->byval_arg;
    static auto* forceOverride = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer*), "AddSerializationAdapter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serializationAdapters, adapter, forceOverride});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::GetSerializationAdapter
// Il2CppName: GetSerializationAdapter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*>*, ::System::Type*, ByRef<::UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::ISerializationAdapter*>)>(&UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::GetSerializationAdapter)> {
  static const MethodInfo* get() {
    static auto* serializationAdapters = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Type"), ::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.Util", "BinaryStorageBuffer/ISerializationAdapter")})->byval_arg;
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* adapter = &::il2cpp_utils::GetClassFromName("UnityEngine.ResourceManagement.Util", "BinaryStorageBuffer/ISerializationAdapter")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Util::BinaryStorageBuffer*), "GetSerializationAdapter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serializationAdapters, t, adapter});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Util::BinaryStorageBuffer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
