// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Hash128
#include "UnityEngine/Hash128.hpp"
// Completed includes
// Type namespace: UnityEngine.ResourceManagement.Profiling
namespace UnityEngine::ResourceManagement::Profiling {
  // Forward declaring type: CatalogFrameData
  struct CatalogFrameData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ResourceManagement::Profiling::CatalogFrameData, "UnityEngine.ResourceManagement.Profiling", "CatalogFrameData");
// Type namespace: UnityEngine.ResourceManagement.Profiling
namespace UnityEngine::ResourceManagement::Profiling {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.ResourceManagement.Profiling.CatalogFrameData
  // [TokenAttribute] Offset: FFFFFFFF
  struct CatalogFrameData/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.Hash128 BuildResultHash
    // Size: 0x10
    // Offset: 0x0
    ::UnityEngine::Hash128 BuildResultHash;
    // Field size check
    static_assert(sizeof(::UnityEngine::Hash128) == 0x10);
    public:
    // Creating value type constructor for type: CatalogFrameData
    constexpr CatalogFrameData(::UnityEngine::Hash128 BuildResultHash_ = {}) noexcept : BuildResultHash{BuildResultHash_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::UnityEngine::Hash128
    constexpr operator ::UnityEngine::Hash128() const noexcept {
      return BuildResultHash;
    }
    // Get instance field reference: public UnityEngine.Hash128 BuildResultHash
    [[deprecated("Use field access instead!")]] ::UnityEngine::Hash128& dyn_BuildResultHash();
  }; // UnityEngine.ResourceManagement.Profiling.CatalogFrameData
  #pragma pack(pop)
  static check_size<sizeof(CatalogFrameData), 0 + sizeof(::UnityEngine::Hash128)> __UnityEngine_ResourceManagement_Profiling_CatalogFrameDataSizeCheck;
  static_assert(sizeof(CatalogFrameData) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
