// Autogenerated from CppHeaderCreator
// Custom Codegen for GORILLA TAG by chcoal
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.ResourceManagement.Profiling.ContentStatus
#include "UnityEngine/ResourceManagement/Profiling/ContentStatus.hpp"
// Completed includes
// Type namespace: UnityEngine.ResourceManagement.Profiling
namespace UnityEngine::ResourceManagement::Profiling {
  // Forward declaring type: AssetFrameData
  struct AssetFrameData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ResourceManagement::Profiling::AssetFrameData, "UnityEngine.ResourceManagement.Profiling", "AssetFrameData");
// Type namespace: UnityEngine.ResourceManagement.Profiling
namespace UnityEngine::ResourceManagement::Profiling {
  // Size: 0x14
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.ResourceManagement.Profiling.AssetFrameData
  // [TokenAttribute] Offset: FFFFFFFF
  struct AssetFrameData/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Int32 AssetCode
    // Size: 0x4
    // Offset: 0x0
    int AssetCode;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 BundleCode
    // Size: 0x4
    // Offset: 0x4
    int BundleCode;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 ReferenceCount
    // Size: 0x4
    // Offset: 0x8
    int ReferenceCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Single PercentComplete
    // Size: 0x4
    // Offset: 0xC
    float PercentComplete;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public UnityEngine.ResourceManagement.Profiling.ContentStatus Status
    // Size: 0x4
    // Offset: 0x10
    ::UnityEngine::ResourceManagement::Profiling::ContentStatus Status;
    // Field size check
    static_assert(sizeof(::UnityEngine::ResourceManagement::Profiling::ContentStatus) == 0x4);
    public:
    // Creating value type constructor for type: AssetFrameData
    constexpr AssetFrameData(int AssetCode_ = {}, int BundleCode_ = {}, int ReferenceCount_ = {}, float PercentComplete_ = {}, ::UnityEngine::ResourceManagement::Profiling::ContentStatus Status_ = {}) noexcept : AssetCode{AssetCode_}, BundleCode{BundleCode_}, ReferenceCount{ReferenceCount_}, PercentComplete{PercentComplete_}, Status{Status_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Int32 AssetCode
    [[deprecated("Use field access instead!")]] int& dyn_AssetCode();
    // Get instance field reference: public System.Int32 BundleCode
    [[deprecated("Use field access instead!")]] int& dyn_BundleCode();
    // Get instance field reference: public System.Int32 ReferenceCount
    [[deprecated("Use field access instead!")]] int& dyn_ReferenceCount();
    // Get instance field reference: public System.Single PercentComplete
    [[deprecated("Use field access instead!")]] float& dyn_PercentComplete();
    // Get instance field reference: public UnityEngine.ResourceManagement.Profiling.ContentStatus Status
    [[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::Profiling::ContentStatus& dyn_Status();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x533D098
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x533D120
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // UnityEngine.ResourceManagement.Profiling.AssetFrameData
  #pragma pack(pop)
  static check_size<sizeof(AssetFrameData), 16 + sizeof(::UnityEngine::ResourceManagement::Profiling::ContentStatus)> __UnityEngine_ResourceManagement_Profiling_AssetFrameDataSizeCheck;
  static_assert(sizeof(AssetFrameData) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Profiling::AssetFrameData::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::ResourceManagement::Profiling::AssetFrameData::*)(::Il2CppObject*)>(&UnityEngine::ResourceManagement::Profiling::AssetFrameData::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Profiling::AssetFrameData), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::ResourceManagement::Profiling::AssetFrameData::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ResourceManagement::Profiling::AssetFrameData::*)()>(&UnityEngine::ResourceManagement::Profiling::AssetFrameData::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ResourceManagement::Profiling::AssetFrameData), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
